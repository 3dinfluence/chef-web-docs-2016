# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-01 15:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# 1af84822192c4f0285ae39334f2a557b
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 311a3aae993b439a93177e6f471c446b
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# f051edacfbd047ea84c6652f3314ce20
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 1887791e2ec24924bc4934914d571954
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:44
#: ../source/essentials_cookbook_attribute_files.rst:59
# 27d8f54d5b994cc19f4b6a7a9d8b0fad
# 293a82ab42864b37b9088211b090ec9c
msgid "Method"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
#: ../source/essentials_cookbook_attribute_files.rst:60
# 0e1eadfd46754a4b8321c7ef18b85161
# a3f3b50988cb4590849395fa1d08fbeb
msgid "Description"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:46
# d644ce3a637b46d18b8fb1b5bce0e932
msgid ":doc:`essentials_cookbook_attribute_files_ordering`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# 778681cef2754576b27fcb2fcb266f31
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:48
# 821d6fbea3cb4854a385268778056ea2
msgid ":doc:`essentials_cookbook_attribute_files_accessor_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# a750dbbbc6cd481f83aa1ece48c11aac
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:50
# f594e0ed68254741b0f6b22a98ca48e6
msgid ":doc:`essentials_cookbook_attribute_files_reload`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:51
# 941d48790a434acb8d3663ffca2272d7
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# 7725e2c61dcb41dbbf2b65a12af4aba0
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 366343fc81674234b4772afa1ad262c7
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# f0e52ea7f25d468c95a46ee4331c44e4
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 6c7702e32b25461e81f9e67f115c3090
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 5760d8ed20e84543934014e59f0c03cf
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# b7cf3aac195747b886e294ae31555756
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 210d32b28e824442a559bb8f69d6c4e5
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 55e31b7663e94fb383894856d46eac8f
msgid ":doc:`essentials_cookbook_attribute_files_attribute_types`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:62
# e18b5c5aab534ba3aa72ee89959a0b7c
msgid "There are four types of attributes: ``default``, ``normal``, ``override``, and ``automatic``."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:63
# 71671ca83c3d40ce83602c0c5849b0e2
msgid ":doc:`essentials_cookbook_attribute_files_attribute_persistence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:64
# 5a5129247c114fd49922228e1dddebdd
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# fd01447cb3284fac957bb664e1b75e3e
msgid ":doc:`essentials_cookbook_attribute_files_attribute_precedence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:66
# e5cfcf7e0260429381e73be98083ffe9
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:67
# b5f2a6a83daa4c319d4d7ebe099a37c0
msgid ":doc:`essentials_cookbook_attribute_files_attribute_automatic`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:68
# 58427685ebb64b4186ba803f852bbb46
msgid "An automatic attribute is data that must be understood by |chef|, but not modified."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 131f93f62ab4435397f52db4f3523862
msgid ":doc:`essentials_cookbook_attribute_files_attribute_notation`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:70
# 0138e5a5fe654555bb9b6c5592e3397d
msgid "Attributes are a special key-value store called a mash within the context of the |ruby| DSL."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:71
# 823451abf85e4446906ada5291aae56b
msgid ":doc:`essentials_cookbook_attribute_files_attribute_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:72
# ab13a3353fca4458bcb4656a3178dce8
msgid "Methods are available to set attribute precedence in a cookbook."
msgstr ""


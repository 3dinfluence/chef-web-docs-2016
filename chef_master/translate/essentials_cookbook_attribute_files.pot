# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-07 18:11\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:3
# 74ce8a543bcc4548a0956a2a63536234
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 62f8e02c5cfa459ea28e4e6c0828b2d0
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# bdffa27522c046c6ba7de5711f9dbfe4
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 6e0347f336394cdc85f36ed061f4e130
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:43
#: ../source/essentials_cookbook_attribute_files.rst:58
# bb92891b39c649dc94f2ac289ea66643
# c8f2030f8975451d953bb3443b293fa4
msgid "Method"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:44
#: ../source/essentials_cookbook_attribute_files.rst:59
# 848a599212e546e3a5c6898e5012cffd
# 345129ce92e14784bff273b46c1808c3
msgid "Description"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
# 8b7b76f6ef654f30972bcd7ffd9b5132
msgid ":doc:`essentials_cookbook_attribute_files_ordering`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:46
# 448b3fb6a664405bb3ce5f4ee23c4d20
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# 65d40046b61d45c7aef1eb5caf290e0a
msgid ":doc:`essentials_cookbook_attribute_files_accessor_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:48
# 0dbf5c743d2f411597d9b81e4ff83f85
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# ee1430b22d5d416f841b4bf36116b128
msgid ":doc:`essentials_cookbook_attribute_files_reload`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:50
# 48f0cedb54c24e4296d967856cdf1331
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# f93d956942a04d4cb7d6f72e733585d4
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 79a8a344f77644e29f408ed0fea44169
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# eb0cede64a1e4e14ba1bdd64323f30d4
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 0ce674f9889d47e384d7820cd652d102
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 4ef13c4f559c4ff7b54eae338370e775
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# 87b95bc915394cf698dc0c18efe363e4
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 8e04bc98581e4fe98b64bc89464287f7
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:60
# 17281e6d07474070bcd0cf9546452190
msgid ":doc:`essentials_cookbook_attribute_files_attribute_types`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 80e52365a37c4b5d94f890d8114e261d
msgid "There are four types of attributes: ``default``, ``normal``, ``override``, and ``automatic``."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:62
# 24a68bb856f949938a55e42547f39cf9
msgid ":doc:`essentials_cookbook_attribute_files_attribute_persistence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:63
# d10d197fd0314b8e99f8c5392b7a3f84
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:64
# b8038a7ba1274bd3a53f7b4fe039f262
msgid ":doc:`essentials_cookbook_attribute_files_attribute_precedence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# 66e07ed90f0b4f36958ee4809de59057
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:66
# 5c21c9be37614733bdbf99f1310b54c9
msgid ":doc:`essentials_cookbook_attribute_files_attribute_automatic`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:67
# aede074c443041279d900fb07b563c54
msgid "An automatic attribute is data that must be understood by |chef|, but not modified."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:68
# fba0abc30e284b43825f6535f5f2fede
msgid ":doc:`essentials_cookbook_attribute_files_attribute_notation`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# ed831869312349beb3f5ab19a0dba79c
msgid "Attributes are a special key-value store called a mash within the context of the |ruby| DSL."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:70
# 923809bfa1694e659ae1c5a24e44461c
msgid ":doc:`essentials_cookbook_attribute_files_attribute_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:71
# 342ea9eb56e9459097cecadfb4f40584
msgid "Methods are available to set attribute precedence in a cookbook."
msgstr ""


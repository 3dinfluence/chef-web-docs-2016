# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:8
# 0a95ba21c8384c8a872b55213bd71be9
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 6acfef3927ed45139e38edcabeff18d3
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# ba5cfffdc5de48a4a198eb7cdffc327f
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |cookbook apache2| cookbook contains an attribute file called ``default.rb``, which contains the following attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 68e8cc741b7c477dadefb12387b49fec
msgid "The use of the node object (``node``) is implicit in the previous example; the following example defines the node object itself as part of the attribute:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:15
# 8a5281550fcc4491989465733662f99f
msgid "Attribute File Ordering"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:4
# 05868bdd95604fc29065c9be0467b26c
msgid "This approach, as of |chef 11-0|, is no longer the recommended way to define attribute dependencies. Starting with |chef 11-0|, attribute dependencies should be defined using a cookbook's |metadata rb| file."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:6
# 80d9fbc84bcf4a3d96a47064c3dd4557
msgid "When the |chef client| loads cookbook attribute files, the |chef client| first identifies all of the cookbook dependencies, then identifies all of the attributes defined in those cookbooks, and then evaluates these attributes based on the order defined in the run-list. If one attribute file must be loaded before another, use the ``include_attribute`` method."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:12
# 60fb2897cb5e4208ba03d029850eb87d
msgid "For example, if a cookbook requires that attributes from the |cookbook apache2| cookbook must be available, add the following to that cookbook's attribute file:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:18
# e1f0df06c9414cad8b8de9ecd1454529
msgid "The |chef client| will then load the ``apache2/attributes/default.rb`` file before continuing the processing of the current attribute file. If a specific attribute file (and not the default attribute file) must be loaded, use the double colon (``::``) pattern (similar to the ``include_recipe`` method) and provide the name fo the attribute file after the double colon. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:24
# 26a0a5fca5d94cd28c4f6f24cd9ee8e7
msgid "This will load the ``apache2/attributes/mod_ssl.rb`` file in the |cookbook apache2| cookbook."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:19
# c7120ffba16041db9d06306e496b7d46
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 1ee9c7c0afd34151b70ae5c260f02d1d
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 4f73d04a9ef44c259f1e20dab676b273
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:23
# 5903cda36e5640d192c9b9fcd9a7d39e
msgid "Use Attribute Files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:5
# 8ee99d8e02ce471fa497a6a94f29ac7a
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef client| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:7
# 62c2f419feb848f7bf5ea6e2ae105ff5
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:8
# c28d76f6cd79416c9db76441c5cc0af3
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:9
# e1da34f67eff49babbc4ecb8cebceda9
msgid "anything that may need to be persisted in node data between |chef client| runs"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:11
# d92deba4ed8e41c998835b18440cecd1
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:13
# 86c977e787274440894cc5e1447917c0
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use_unless_variants.rst:5
# 3f4228cd054041e9916491459354fa39
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. (``normal_unless`` is an alias of ``set_unless``; use either alias to set an attribute with a normal attribute precedence.) These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:28
# ca6da3cc7d574202a3a222010e420348
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:31
# cbb3cc0f1a0f4531898fb9ec3cd1a0cd
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# b49ac8674d324035ba416ea234681bd9
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# d9d519275e984c4e80c036ce9640ad1e
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# b7b6de00ce3746d3a703adaa24276076
# 5269e2bead644ce6b8e9fe9373d5e6b9
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 0719abbb2d20452fbeb4708c08b37605
# 5fc8afefe84f42f89da5d5c5e1d717b0
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 735ac57a75f04670b80d52fdccd692cb
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 7216c33f644c4e0e81fbe61130b18e08
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# d8e3e0ef38184fcd8dde83a33ec3a8a7
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# a8c2b0a7da644d708010f45644d74ad8
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 3fdef3dba9124923bb876e4af7c691c3
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# df702dae056f4f76bb298caca18ae41c
# 0dbb9e0a6123499c92093d726eb3070b
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 631b3568066b4a8bb5856ee37edc3f9f
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# ea0708e7d21a442385be4f37ae089d71
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 44a3680338d843e9aec10196d3139ea2
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# cedf5678c9a44c439791ffaedd628117
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# bca0d44c91084aaa9d15cad82df1f7d0
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:35
# 168a9e497c7149cdb9d1a40069104440
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# e2386236e17d41efb4e3bf7bce0d3f5b
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:39
# fb7a4f94b66848b7bce2a011e3c0910e
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 6a69ed8e02794c8d8925931da71a886c
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 86c2e152347a4aca9740bf5e4771037f
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 8d34e148da354031a68e2fb6a4a48493
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 88c7b9a851fc430c873d2a3087ad3ef2
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 20fb245c40054d0e8197c78792a26218
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 90c0fa9c3ffb4b14b1aae2367ec6d33e
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 4b311a2fff0545849a9d8cc731b2ef42
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# bb490c4301c54b84a5a38fce4537e2d2
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 4604dc167bc9458e984d381d73e41db7
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# f3a48bb964f14248a4fe7251a10c1faa
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 23e1fc2c6a954a6d805207cb6693b35b
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# c2103f88702448a2a4ee0d21ff3cbc0d
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# a5f696fe8a394d7185d3759f16102815
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 1ee67c175d9b43839584f27f0512eb98
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 4787ba47ceed48d9b2567155f066f87c
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 7b45a90aedbd4fce96d77d78dc348e24
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 8e8bf64c4e5f4cd5bcb4187448264bb6
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 8c77d3e2711d49c9a418f15086ca18d3
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 9171d93b235243f6b2cc4ef82e7d797c
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# e7b7ff5d22ae479e8e401cb662c5ee0a
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:43
# efbb116b29034f1e99832f40450af994
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 12e240771b424fb287cfb9b7b28bbbda
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 6929d6390668480c838f49ef8ccac6a1
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 8e20992a493a41e5ad20da97c032f762
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# 4c63f36b4621452e9d1adc605994cadc
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# c662a240b9a34113a2882afc6201e749
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 344f6ef77ba64d31829ab320e06964a9
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# b7fc648cc01c47bbb8cb1586fbc35b68
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 6e9719df27be4dfd93eadc9256bad948
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# e64f4fab7f7441899298653923e8214c
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# e686b04fa039478a95eb4c19b86ccccf
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# e9898c237cd24feface25a056e8ea19d
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 0e7e909f4c814611a64db482174f90d1
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# d79448488e6043f2b87b9ea263d058c2
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# d781eac688cb4b8fb338142ba6966ee4
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 61f58ceb992648609836d3b51e9af988
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# c84e2c2dd20948b5a8a7326dcd907ab4
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# a23256d025354980b6858d2f5c35787f
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# 8aa6ecaca90140dca164e857ca811138
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# dc7c22dd042840b79b0f0e4495537c35
msgid "Attribute File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# aa0bc1bc5fc94f6f8c379fe517507681
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 50346856d55d40379e8b4bfdf382e662
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 7c5d7c19db10475490c90a71e3bd1fa8
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# c5f58f47d5184011ac04b14567aed2fa
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# 458381b575ae4f01b768e7114ca8026c
msgid "Additionally, there are ``_unless`` methods available."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:51
# 516daa3843e443a1841f6d15bc0831e5
msgid "``attribute?`` Method"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_attribute.rst:4
# a46889c1c9ff4d3e89d5e3d4bde2bb4c
msgid "A useful method that is related to attributes is the ``attribute?`` method. This method will check for the existence of an attribute, so that processing can be done in an attributes file or recipe, but only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_attribute.rst:6
# ac8bb9b811bb47be9a0eccd757baf259
msgid "Using ``attribute?()`` in an attributes file:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_attribute.rst:14
# edeaf85367814e9d8c84142f37e3fd57
msgid "Using ``attribute?()`` in a recipe:"
msgstr ""


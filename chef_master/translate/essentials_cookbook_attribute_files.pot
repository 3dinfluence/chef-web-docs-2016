# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# f44ea59eabab4e8bbe2d538ff0047983
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# e943566ab46f4deeb3de9a4b55f349de
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 56eab01d3d984cbe8930efb30f30d979
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 64607119dd734673bb4ecfb95a8c465d
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:41
# eecadd11f2484698adac6479f670a175
msgid "Attribute File Ordering"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:4
# 558bf57352514939a7cceba1b3079263
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks. If you need to ensure that one attribute file is loaded before another you can use the ``include_attribute`` method."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:10
# 99a0fd95309e4fd69aa54c32d4aac349
msgid "For example, if a |ruby on rails| cookbook requires that |apache| attributes are available first):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:16
# 8d8ce492b56e4b48a0e43662ffff7b96
msgid "This will load the ``apache/attributes/default.rb`` file before continuing the processing of the current attribute file. If a specific attributes file (and not the default attributes file) needs to be loaded, then use the double colon (::) pattern (similar to the ``include_recipe`` method):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:22
# 6d01e508533c4d46b8e5fb4da937cf2f
msgid "This will load the ``attributes/tunables.rb`` file in the ``rails`` cookbook."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
# 0ff7c589ed2c40fea9ea28d1521cfbcf
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# cdae82eaf4944c1991a11bf0da3d2783
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# bb45fab275ef4082a6f5a449538592ad
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# 1421f574fd4d41f585c64c794682d69c
msgid "Use Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# 51c834ef8d054891886df6fbf0b6c3b8
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 98652ba8e5f2436988ced56101f4d997
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# 558b3fd3759f4c26b44a0b5ff1e3d799
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 42890b8f54024bd2919e73e78832b249
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 7166faeb2b7a4b9f88de9a95b7aa17d6
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# d4b390887a8e4f05b407f5de41b5423b
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 940f0d22269648749500e1f67d9c5107
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:53
# d80ced634572458dacba307a4d02a029
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 8b3d87f2bfbb4fc3906313d14ca21be4
msgid "The following types of attributes are available:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# ebbce80ffe374056bd216a32ee27142b
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# 983ba485cd444da991fdf8781e9c34b3
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 19071dc6596e4f2fb2ec0fe096d97b39
# 491206eaac2c4d1b8ba00a45657fc0ed
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 3c337c55d60847faa992294878c4d199
msgid "A ``default`` attribute has the lowest attribute precedence and is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``default`` attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# f8287bc8cf43443e9cf4342033ba2693
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# d93b7243914244388c7bbfe011fac67e
msgid "A ``force_default`` attribute can be used to ensure that role or environment default attributes do not take precedence over a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# f7aac543c4fb4580897436f460452f0b
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 56609bb5c2d54cd881aa68ab53b9fa3e
msgid "A ``force_override`` attribute can be used to ensure that role or environment override attributes do not take precedence over an ``override`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 20eae88a042e45169f28c807f89eb348
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# c65eeb86027248b2bef45e4e6462704d
msgid "A ``normal`` attribute is an attribute that persists on the target system and is never reset during a |chef| run. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# 3fd996ac2b3f42a09998a12feb9aac87
# e28423630d8c4834aad8c0536049a884
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 9038ac79f29a4f5099822aab20a72cb5
msgid "An ``override`` attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An ``override`` attribute has a higher attribute precedence than ``default`` or ``normal`` attributes. An ``override`` attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``override`` attributes for role-specific or node-specific values only when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 32d55acd47df4288be394038e3445730
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# a00f462b15d34eefbd971686d93dacfa
msgid "An ``automatic`` attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An ``automatic`` attribute cannot be modified and always has the highest attribute precedence."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:57
# 0b379a675c98447f9bb857d72dd46fbc
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 67bae5f4566c4a4c9e0b2a39fac9f89d
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 15bdb7ee95d946e99ff7ac2a4873e19b
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 6358355adf7943aea5efbcbb274a800b
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. In general, use the default attributes as much as possible (or even all the time). The merge order for attribute precedence will do most of the work, yet leaving many levels of precedence available for the situations where they are truly necessary."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# aeec96ab6a344ec8a3ce5b76ac9765a9
msgid "Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 38e0807c14944c3b92f47b77a2279b52
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 7681e038656e456ca6e4eba30cd3eecb
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# c6ec350b827d49c6992555c7b12e2955
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# ce560e1f72e4430981f8e1a06f381854
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 837c0678ee974c2da93eb424a2d7a0d8
msgid "Forced default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# bbb2d8eb977b4815a2c20f41f447cc3a
msgid "Forced default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 79439e152a0f47c3999f22947279fb6a
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# ea0254fbb9bb41ff8f768b9816557de0
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 802d1240b8c847d79ca926fed62eb06b
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 820e3c4e212045afad831074edd3493b
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 1e717cb6010d47f0b386fdc075723b07
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 2a02aa2ccdd04c97b30ef4775460b2c3
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# f277ddca03b8497e98c1cfc5c58f2fa0
msgid "Forced override attributes applied in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:21
# 8adc991e2ad846fda409f7eadbeec038
msgid "Forced override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# f6f04fa3916d443395ac14fcb0d4b294
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# dfc51056a936455eb7f2899e2497a007
msgid "In other words: an automatic attribute takes precedence over a forced override attribute, a forced override attribute takes precedence over an override attribute, an override attribute takes precedence over a normal attribute and so on."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 62089c48c5004508bba36c36d4b6da96
msgid "The precedence order for role and environment attributes for ``override`` attributes is reversed from ``default`` attributes. This allows ``override`` attributes to be applied for environments after they have been applied for roles. This allows a role, such as a database server or a web server, to exist in multiple environments, rather than requiring a set of roles for each environment."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:28
# b135da32b16e4c1499b533d53c7b8cd6
msgid "Another way to view attribute precedence is with the following table:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# e3392be607fe4dedba735aa0e757c154
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# d9ab68e7d3cc4448a1b64cdc7dc41f96
msgid "An automatic attribute is data that must be understood, but not modified. Automatic attributes are detected by |ohai| before every |chef| run. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment in which a node is running. An automatic attribute always has the highest attribute precedence and are saved to the |chef server| at the conclusion of every |chef| run so they can be indexed for search."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 4fe08cce151c484a8692f1aa421d669a
msgid "Attribute Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 5203fbe0371b46eabf6bd3286aaa304b
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 59c23665217c4fc38e4a7e9647ef3f6e
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:73
# eb5a176704cd407a986dd6adaaa99335
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 1a2a11cce94247759a43e04dc34ad637
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# ec921fe851874e7287ab7dfff8bcb34a
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# dfe0daa1ee6c4bc5a371d939f6c59a58
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# ba351fe090bc4e2fb481a2487f4e683d
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# 5a0df7bfab8b4ce4ba5756e8eefa9a1e
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# 5344973a9ae049c3942af61a9ccaf3d4
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# f71ccdada90d43d59562b39b2a890b5b
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# 09cca9e43d4b4629b6bdbc9e8cc09c87
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# ce05ab6797c14cb89d9251e31be297aa
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# 8b80a29f63ec47fc982df03ddf131ef5
msgid "Using ``attribute?()`` in recipe"
msgstr ""


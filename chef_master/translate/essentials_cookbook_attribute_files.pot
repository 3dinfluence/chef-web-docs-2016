# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# 328a08c3fff440eb96d6183a467bfbe7
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 236f6e52369b4858ad48708e29496348
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 88bac8c1ff9c43c5a95c2fdcd08401ff
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 0b51149ec2af4cfab02c0f3dc73c04c8
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:41
# b1ec55c42e464f6e85eaef7f9ef48ec8
msgid "Attribute File Ordering"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:4
# bb6954b18f8f45808544e6f7630168c9
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks. If you need to ensure that one attribute file is loaded before another you can use the ``include_attribute`` method."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:10
# 0aeec45423374d479f7fc28c69381c3a
msgid "For example, if a |ruby on rails| cookbook requires that |apache| attributes are available first):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:16
# 0af673871ded4599a2f5cb71eeccef65
msgid "This will load the ``apache/attributes/default.rb`` file before continuing the processing of the current attribute file. If a specific attributes file (and not the default attributes file) needs to be loaded, then use the double colon (::) pattern (similar to the ``include_recipe`` method):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:22
# 2c06ef32c8c74ff39ee6f9f6252fdbf1
msgid "This will load the ``attributes/tunables.rb`` file in the ``rails`` cookbook."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
# d5691484ae58495aa745e6a28a9cf027
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 3aead9f45ade423b851a31b210cfb1b8
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 1d244d05cbd54676a993ac82e6ec6d67
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# c25bd4bf36e94c1696fd3cfb14a71b28
msgid "Use Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# 2eef2a11398a47148a37003200688a48
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# cb5b240807ac41cdb37fd303a15b4d01
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# 5d93aae7653f46e69c358593efe04128
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 508eaedb8e2b4730b1784043069f8f16
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 75821fd1a01e4d05a462c29e74efc5db
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# 0d2e6bd7babb48dbbe3a6a56420632d0
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 92aa967f8779409eb7220e8a9e211cc3
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:53
# 0165130f72f94e10b55b43a0d4aad439
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# e63ea19b1f6e4ec18b3edfd123a16d0d
msgid "The following types of attributes are available:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# cf20a5661a7444989b57b5cb8dc37ef7
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# e0d60d057173464ca675ed1eb1e47969
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 6c74c3250be84787aa854a15e16f1074
# 77edf503faad4c73a063d398a03a479b
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# f0d2f69f990d42ab80ec40ae587daa9a
msgid "A ``default`` attribute has the lowest attribute precedence and is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``default`` attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 41bbf7f814ce4f2ca9754a4fd8d8f518
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 7339c1ed5f504daaaaa78522bc21c6ca
msgid "A ``force_default`` attribute can be used to ensure that role or environment default attributes do not take precedence over a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 2c15ae7405fc494bbafc428f457d6999
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 3ec65c6a4eed48b1974463672ef46b7a
msgid "A ``force_override`` attribute can be used to ensure that role or environment override attributes do not take precedence over an ``override`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# c4f029fe5e7c4c3a82b626e7c767ef8a
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 1366fd7a78874095b94c5a5f57bb9445
msgid "A ``normal`` attribute is an attribute that persists on the target system and is never reset during a |chef| run. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# b2413471655a44fa91e2190fbe33b63c
# 883b99bfc6f44148894505435ab0fe93
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 45d6ad6e801e42bd9884b830b1c45ccd
msgid "An ``override`` attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An ``override`` attribute has a higher attribute precedence than ``default`` or ``normal`` attributes. An ``override`` attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``override`` attributes for role-specific or node-specific values only when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 614295c90e2e49f0be2ea38446166bf0
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 28ea8d4d8175489bbf09b48eb37ec9df
msgid "An ``automatic`` attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An ``automatic`` attribute cannot be modified and always has the highest attribute precedence."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:57
# 2180aa8080444b658bf6195efc80d04d
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# b5eaf1a998cf4879b1416bba4b0c474c
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# f56926316a404afc8a907fea2d4e908f
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 7cb006bfed60438c924aaf6f2314abb1
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. In general, use the default attributes as much as possible (or even all the time). The merge order for attribute precedence will do most of the work, yet leaving many levels of precedence available for the situations where they are truly necessary."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 6b6369b331ac41afbf7ec2391f522a16
msgid "Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 5eeb026576634b83963e40f965bad5a6
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 72c77eb97b944b309a8bab7e0d8d7f71
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 70321cc2f2b749b3a4e275edffc48323
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 8b3c780353054877853f70d6450e4227
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# ae638c4a37f049388aafd6ee662e8f2c
msgid "Forced default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# db1a356594984bc0a440a191a54ffed1
msgid "Forced default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 5e40a4bb55c446ab8412371fb068c9cc
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# a8bd0d2f1db6422e8f7d123c1f7d7919
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 35751d6198bf4c57ab2080b65a8b408c
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 4e82a0ebf06c46d099b72a669f699e94
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# bc2ea1e26e114ea5ab84445c538c7533
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 0a3f1a08765a4ad2a0ab62f089e1deed
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 7ef06e63befc4f789ce82160fc7967f4
msgid "Forced override attributes applied in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:21
# bf2690e30cb04ed4b81b02dcd4f972d0
msgid "Forced override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 7950752386ee4b1f896e97ed51497412
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# f4b6ac7b980f492fa133c129b027ee38
msgid "In other words: an automatic attribute takes precedence over a forced override attribute, a forced override attribute takes precedence over an override attribute, an override attribute takes precedence over a normal attribute and so on."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# ce9d9899e7974af4aab12a389014cd5e
msgid "The precedence order for role and environment attributes for ``override`` attributes is reversed from ``default`` attributes. This allows ``override`` attributes to be applied for environments after they have been applied for roles. This allows a role, such as a database server or a web server, to exist in multiple environments, rather than requiring a set of roles for each environment."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:28
# 084f4325c02548a0bcc700f7e3115c41
msgid "Another way to view attribute precedence is with the following table:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# 21bf14c52cb241dbbca51cd266b20213
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# e4bba7bbd9ae4f3c89700415ad844ca4
msgid "An automatic attribute is data that must be understood, but not modified. Automatic attributes are detected by |ohai| before every |chef| run. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment in which a node is running. An automatic attribute always has the highest attribute precedence and are saved to the |chef server| at the conclusion of every |chef| run so they can be indexed for search."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 5c92e163c81946d4907e20031cdc37ec
msgid "Attribute Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 7a1a9596f11c49189a223320058abcda
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 55af287c089749ca9e7c488493097216
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:73
# f7c2c7f3fe344eae90c1f2609b16ab15
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 0ce6e96b00bc4890ae7a38b3b724db90
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 837097df8d25411b9871ca64ff42183c
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# bdb36d7fa6214749883b3a4b8ffa3e71
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 947d311382b14d73828a4f7cfe3735b3
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# 53ca7d53026a42c6a4dfd3f532cdcdaa
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# e650307f3c96436b9728c9a808c324be
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# d4f7edd981ff4d19bc3d083bc771ec36
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# 9d9bb6e511774499bc8ca04edbca2ffc
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# 7e2c2014c19b44a596df3936404b312c
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# b5f2babd4ba74e4eaa9af39a4c62a229
msgid "Using ``attribute?()`` in recipe"
msgstr ""


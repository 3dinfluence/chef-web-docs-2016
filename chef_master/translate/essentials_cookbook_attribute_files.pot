# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# b2c8ad2d53de4b8bbadf49747cfbf315
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 8f51acd275e64568afb527507ac31ded
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 4de4e5cef09b4e30bc255b1f36032209
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 2527113fa0e0418abac87bfe5f98bb18
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:44
#: ../source/essentials_cookbook_attribute_files.rst:59
# 02ce6469bd8c4c7ebeb179e598b98cf0
# 3a669641f072458b8ec8009caedcf344
msgid "Method"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
#: ../source/essentials_cookbook_attribute_files.rst:60
# 02ffe31b4da24dc39a7efd5703abf8eb
# 52a92e5a3ed44139b04c53738e3a3540
msgid "Description"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:46
# 829e0dcb99d745eb91f456176a092291
msgid ":doc:`essentials_cookbook_attribute_files_ordering`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# 6a43ca7b212a401393d098211efd5c5d
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:48
# 67bdf74f41fd490d8b8334fdfe27be56
msgid ":doc:`essentials_cookbook_attribute_files_accessor_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# 2d23a9b163074d3dbbf545131cf2a108
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:50
# c81b344fec944264b9653a69a22e7bb4
msgid ":doc:`essentials_cookbook_attribute_files_reload`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:51
# d178617ad7d741d7ba1f4c055b420045
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# 89f0a1a6e79a4bdab4e4f35d17980978
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 3b3075968f4640ab8d2581c0be90f420
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# 635f597bb1484102ac4c0fb8bb0018a1
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 49aebaa5852442ba9de7b494029f63a4
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 494496f8a27b4bb3a3de6230a28b1607
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# b10d77135bec492c826cf28563296963
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 764bafe4329d47cf82e5c8a41e3b0a45
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# ae3e9d6e4d2d4113ab6cbba7013be105
msgid ":doc:`essentials_cookbook_attribute_files_attribute_types`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:62
# af9466bc5dd64e7fab84c06b10ea7f10
msgid "There are four types of attributes: ``default``, ``normal``, ``override``, and ``automatic``."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:63
# e32c31144c6347cf858197996d98ed2f
msgid ":doc:`essentials_cookbook_attribute_files_attribute_persistence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:64
# 31a136fd06e74027985f1a28230fcd48
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# 3726a651796a4d5d8e809e6d5ce1d529
msgid ":doc:`essentials_cookbook_attribute_files_attribute_precedence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:66
# af0ed400ae104039ade876c74e3fa766
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:67
# c92ce341838b4417aed42473df7cf9d7
msgid ":doc:`essentials_cookbook_attribute_files_attribute_automatic`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:68
# 23769b22b23f4156a39d343569bf14aa
msgid "An automatic attribute is data that must be understood by |chef|, but not modified."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 0caae3d5efbf48a3bb1c29b5ab309f6a
msgid ":doc:`essentials_cookbook_attribute_files_attribute_notation`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:70
# b815cb491323440487fb0e41f59b0150
msgid "Attributes are a special key-value store called a mash within the context of the |ruby| DSL."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:71
# 677047b93b8546af8a60d250b0bc80f5
msgid ":doc:`essentials_cookbook_attribute_files_attribute_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:72
# 98f38ba8764d48f0a5b1441e14e23a2f
msgid "Methods are available to set attribute precedence in a cookbook."
msgstr ""


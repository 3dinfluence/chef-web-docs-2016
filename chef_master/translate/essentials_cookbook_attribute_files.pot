# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-10 18:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# f745e5fd50e44225a519135aba79ff02
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# bd3c883110fc437b982226dad37d9947
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 9296df0f33d2422c8530b681ae7a804d
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 454289c611054644a5c525f52f545908
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:44
#: ../source/essentials_cookbook_attribute_files.rst:59
# fa70e74c1025402799422deb71406fd0
# a68e4d7d3cde49b3966fd254846dd7f2
msgid "Method"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
#: ../source/essentials_cookbook_attribute_files.rst:60
# 5996914d9f404f7e994fa06e58a83073
# 19052446296e440ca0f5a224e05cb8e5
msgid "Description"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:46
# 88873e1be9b6449b87c2cd5de5298023
msgid ":doc:`essentials_cookbook_attribute_files_ordering`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# 5b3e8c9eee8f4032aba0ee2bea345811
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:48
# 292eb2a95a8a4bee88ba6dd706802e8d
msgid ":doc:`essentials_cookbook_attribute_files_accessor_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# f6b3f27e6535476ab7a789b020bd5c49
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:50
# c58a51aa593a414285bc235acf42bce6
msgid ":doc:`essentials_cookbook_attribute_files_reload`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:51
# 0f6f8c0305c549c2acf7e5e2868bdfab
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# 666cbc1eb6c240a585fc21384cae4d2d
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# f65bbcf3bd5c4fcd8d927e33ecd18ea4
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# 90d40e55ec8e480ab26f643b3aac2011
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 5c54de39958546f39d419db10e0b58ad
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# efe2f08343c543c09adbf33394a44f93
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# 134559bd41f64369800d1ca4afbb61ea
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 0fbc19e4e0864f6bb4f671a8b9aac489
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 4c27b011547849f6953daf6433d24df7
msgid ":doc:`essentials_cookbook_attribute_files_attribute_types`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:62
# a6ae53d52b8347c29eb3719a2ba1a887
msgid "There are four types of attributes: ``default``, ``normal``, ``override``, and ``automatic``."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:63
# da27e48242ba488cbb37fc23fcef6f97
msgid ":doc:`essentials_cookbook_attribute_files_attribute_persistence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:64
# 0de85a87e19c4105aa924e4e07047f13
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# 8de0c1a2c5c94ee3a42d7d5a19359637
msgid ":doc:`essentials_cookbook_attribute_files_attribute_precedence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:66
# b4b1047d69654217a09bd4c76efc8d80
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:67
# 4a3e9f5d889f497987c944adc9702daa
msgid ":doc:`essentials_cookbook_attribute_files_attribute_automatic`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:68
# d61ac8b354904465a370fcb05b31496c
msgid "An automatic attribute is data that must be understood by |chef|, but not modified."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 18e202edb0694a759dcad86b3c89246b
msgid ":doc:`essentials_cookbook_attribute_files_attribute_notation`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:70
# fa4a9168c35e4cbe84d9b4ddd062e446
msgid "Attributes are a special key-value store called a mash within the context of the |ruby| DSL."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:71
# c3901479e55f4c8999314244a8e74a9b
msgid ":doc:`essentials_cookbook_attribute_files_attribute_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:72
# fc932a735e314fa99f49598d13a77e81
msgid "Methods are available to set attribute precedence in a cookbook."
msgstr ""


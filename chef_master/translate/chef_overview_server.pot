# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-25 09:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:33
# e96c8505400e42be92fa76c5999ca6e7
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# c871ab33b8634ae2a497b32cbce1617f
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:37
# f1f5befbeba8488a8390036385c897eb
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:43
# 4ba1b222aa004ab9ba4c370d6e3fa6cc
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:44
#: ../source/chef_overview_server.rst:65
#: ../source/chef_overview_server.rst:98
# c9319672643e4519b01b70e20fc61955
# ad69e806951144beb5fbf5f488624e42
# c72014449346458cb26d7e098c4ec78c
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:45
# 4081639168ae445bbb7ee29cace1c5ec
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 249c9fe3c76040bbb7a295e9275aceb1
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 6c3c1d89951e433a9cd9aa1c9a5d9ea8
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 21b8c1a3382046a3bd3517cc0967177d
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 6ee56eeb78224e1ea2451ca69bcd8eac
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 48083f4c2a124a2eb4312cda46d96bb0
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:53
# fd76e60436a14e25a7a371a54b3cdab3
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# ed1e70fb928743ee8d2f4d12d40e230d
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:56
# f89b821b16b94b0fb427ddd6143a2846
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:64
# 8749331e42014d6f98cdf18d6c0cf1e3
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:66
# a7092d91e9404334998a94af1b9376f7
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 8281843b4230472e8b3c1938e84c7f2c
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:69
# ab131f29fe9f4049b7203d1cdd01a60e
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:70
# 41ab61aac1c146dab6e935bfba1f1e17
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# cb079c0095f54c1dafde5bc03df80836
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:72
# d3fcb069fe1d492c856f87a8fea32b5a
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 1d2d44f1f5b945bb8eca16646630ff84
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# c8da0efd15b34626b471cfa1ce7d34a9
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:74
# a4ba6fec1ac14f73ab5de3c6bfdc6a6e
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:75
# fd7cdc6590bd461da3274e2ac201dcf6
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# a6e6e527e7de44559dde762aa7682aa3
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 6837e728f0ae4cf1a2cc81c6a778c6b1
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# ce91830beebf4ed58b268b29bcad9819
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:81
# 8de9e36101264889ba60a5f164aaf749
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 1342f80f42d04098b2ef67667708f2da
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 1bcbdd267b18459f9fdf18ec9b809574
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 0fc96e556b5f4039a2a5f3c0da25a027
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 94577ffa6fce40599396ed0df4d4640b
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 9f09c9c0cb6441cea53927f0e61cf94d
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:90
# 8ded90e8481944b8a44c1a7b0d0005c9
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:91
# 374f006df63a4ad480043b8124e73092
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:97
# 72133cb71ce34c6fb6cb39d49195e685
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:99
# 242a840ad4bb4af5a2e038e38205d189
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:100
# dea69638da3a4d81a9953900911c4b1c
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:101
# 5953451ccb4449d8817a619ef1542429
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:102
# 6c6d79cb4f7e4452b097d0a32410ddc2
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:103
# 0756713acd0d4b538f155dc6a3107e3a
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 28f3b44242cb44fa80d2752846ba98d9
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:105
# 24f6f000f928450ab18fd33beaac9f40
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:106
# c667d913cd6d484c9bbb7ffd01d856b4
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:107
# 749453c5caa644a79aa5147330ff815b
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:108
# f153f457f27f43c989f71fbe740c8408
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:109
# 1f3213f441d24604baa616cb8150ded6
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:110
# ba740fc5a2f54057bca119cd93303363
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


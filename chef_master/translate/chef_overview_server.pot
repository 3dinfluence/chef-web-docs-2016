# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:34
# 0adfe732a68e4177984a8811c697ceae
msgid "The Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 1fa96fb64f1f47e399e31d0b47cb0db0
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:38
# af9a73e366a84fd0a6745c22185daf4e
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview_server.rst:44
# d6c4788c723d4902ba82b57b4ef686bf
msgid "Flavor"
msgstr ""

#: ../source/chef_overview_server.rst:45
#: ../source/chef_overview_server.rst:70
#: ../source/chef_overview_server.rst:103
# 7b8b3c7b25f14543bf9bb8e3290d475d
# d447dcefb54b477e806d85db48d315e4
# b772f1fd833e401da6af2fd99e317661
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:46
# 17b9a69f1a5a4fd3aabb8a4b0fe656de
msgid ":doc:`Hosted Chef </chef_overview_server_hosted>`"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 1964c13a68b449bb9a96cdd7e75ab5d6
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# fd7d6698ee634422b4d7e185278634ff
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../source/chef_overview_server.rst:50
# 5d947a94ad41495a995c22aa5c12fbcf
msgid ":doc:`Private Chef </chef_overview_server_private>`"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 0920f5ff1e564fa3991875e7e7edd6e7
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 8031d563f31648b79ec442c5a00118f5
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../source/chef_overview_server.rst:54
# e701dfbc29294cb9b99670db5b25b9b1
msgid ":doc:`Open Source Chef Server </chef_overview_server_open_source>`"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 28a5f2069ff24225abbd1888923bc3eb
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../source/chef_overview_server.rst:58
# 14e5d824ebf24666974fcf139ae66041
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 32d9bf39ac6d4549a3f3183a6914ed48
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. This version of |chef| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:61
# 1e6a70d21af243d0b8446460691ad0fd
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 3a5776ef3c2a46b7b350cba6d312ed1a
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:71
# f6354fb1084842589a9aba98e79e18d8
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# fa463854546b4888835bbc1af25b00e5
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:74
# e5df41c21cb940f7805d3606b7a27ae8
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:75
# 173ae2eeb771456681f54f8b95a03091
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 6bb62aef927c4e848d4d28805a3f949b
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:77
# 9f891590258445988864a9caae858293
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 5e449fe00ef64e2abbdf4cf335cddcac
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# ba4d75807882417d975a4a42fa35fb2c
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:79
# b75d30d6738d4b51a24d267734783796
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:80
# bb5f80204e824f3f965a4f964c77642b
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 6c7e6a89ff9b4ac7b620031ac14d6e21
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 332ca54ae0914b92afd2759982a9a5d7
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 0df98f316adb4bb48c161da91c044ff8
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:86
# 5c0bc7cff43341cd84336baa3ff2f149
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 104aa65cb923417a904b20c49e84a027
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# b2b8e4537a254b9183a44cc93de623b7
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:89
# 6d72174122714e8bb77089055743a744
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 32440fce3e2146bca4febd5fc04be974
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:92
# 3d0ea1bec0e94fdebc4486daf4911721
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:95
# 23a596a50fb04251bd5844d4a4bdf2d4
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:96
# 394da7a1f05d455db68f92f5ba137cbe
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:102
# d8cad75b6e6a439699539a57152b9916
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 39cf7db53a1f42cd87f5f39769da1550
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:105
# a9e6e4adbc01447a8e35190ccf63f1cb
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:106
# c8379465c21a4fb9a65740a7c5eee70e
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:107
# efe99413e30045bbb4a15bf06f126316
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:108
# 62f8c1b33ec74871980bb8e6ebca9da0
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:109
# a80b124366254f4b98f59b5641a728d0
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:110
# 281e5b99b7c945fab434407d07a42450
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:111
# 2c63f6ebd0c740e6a1072a46a6a6a965
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview_server.rst:112
# 3ff9a0ed0fd642e6a8850de47d611a8b
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:113
# f7801c79e2044e77b5e22cbc1e147490
msgid "A role is a way to define certain patterns and processes that exist across nodes in a |chef| organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:114
# cfbf03a1dd4445d88f5ca89c0e00c518
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:115
# 99e60f20370e440fad1dc711b1baf8d7
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


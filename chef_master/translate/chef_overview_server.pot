# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 14:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:8
# 7604cdb3a21642bba49285c4fd43933d
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 640b6811c0c443e8944797d17cb32ff2
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:12
# 721ee42cdd5c421392b4acb60853a269
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:18
# 9b427ad7e96b48759d95680976bb12eb
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:19
#: ../source/chef_overview_server.rst:40
#: ../source/chef_overview_server.rst:73
# 9afc88b18c384c1895dad2083fd11ccd
# 7f39b63674ad40d1b8e006e9ae929f4e
# 3a9793e79f09487a80264a14a48b5643
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:20
# 0ba8087d4c3c40aaa0bf925e8ad96c9b
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 5c0e95f9d1e74e0187fbffd89f8a455e
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:22
# 790e6ee84ac7494c830ee358de00553a
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 2fc19974a5034410879e0578cd754da5
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:24
# 61fe58f5f73a47cf8be69e5e9c87f5a2
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 45c7bfd3b2b841249a1102a92855a24c
msgid "The |chef server osc| server is a free version of the |chef server|. Each instance of the |chef server osc| server must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The |chef server osc| server includes support from the community. Support from |company_name| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:28
# c5ec575a4c9e4891bd2d9f91a171c239
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 0406c8de4ce14d01b448bd0a6fd670df
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:31
# 979e809f230d40a086591cd73505bcb1
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:39
# 481a334e81404acdac85fa7bf227c3fe
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:41
# e424558655554b16b73edc66ed683f70
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 90e25b84c7fc4abd98af1cfbb29ec506
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:44
# f0e2eae070f84819a843cc818c07bab2
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:45
# 5a030ee120ba4f88b5c45e3693f6e58b
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# eb237f4c568b4023b7e3841d564a5005
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 25bf210670ee4ee2aa1c58732bee25e6
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 2f6c2ec65321459386e1f8d55dbfc8f1
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# e386fd9fbdfe403bbd2cbdef37f29ab8
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:49
# a78028932e404754b520334308f5c41d
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:50
# 9873603744c149ec95021409e563e8c5
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 47895d481408469dbad3630a048ebf54
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 7a9c8ee265414c88a411fe3738c267b0
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# c71bcaf2b1b44c1fb1d9fc111e1487ec
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:56
# bc35db85fb3d44fbaf8819a770917fb5
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:57
# f5534c5273b74c218d7d9603fd307db5
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 39b41a1f0bae406b8ec852ee1cbcd136
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:59
# a9511365badb423bada7da951c03bb10
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 0700b27127b246e5a29f3b79a974d716
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:62
# a9f438d7516a418aa3e7fd3601c61e37
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:65
# 84e53c7864274d7c97574ccfe567bc63
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:66
# 6db700f874194f26aca9338c91772427
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:72
# 77860682a8904da498df8f287b6bce9e
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:74
# a7327093a213432181d28b9f22dd9c56
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:75
# cedb6942edbd451d87f9686f8ece926d
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:76
# 12a75220062f4feeadc47837be7078ee
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:77
# d8887a49abd14574b75a67b7c76e7a2a
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:78
# 18bc8a038cb341d3b9c5201612f08b11
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:79
# 226ff5d91b1d4272b2569fb6232d2bb8
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:80
# 08377b9888244e368a57a57b1e8c0a51
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:81
# 0877af745c7846aca7246ce6ed4ee65a
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 67a48ff028e84c62a7feacdd259d0778
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:83
# 690d5a19f66046f09cd0eab9f638045f
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 99c7d8fc981945e78b853a7b95f868fb
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:85
# ac79a3ba967a4128845eaeb06ac93c82
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


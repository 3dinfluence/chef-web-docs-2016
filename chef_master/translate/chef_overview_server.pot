# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-26 11:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:33
# a98a32a59e2d4feba89741309092d5bf
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 4d4bdf4447814e6f889bd6530989b824
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:37
# c2ad44a6a19047e09ac5ee57bd01d7c0
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:43
# 6911a5850bac4106958bd07097133e35
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:44
#: ../source/chef_overview_server.rst:65
#: ../source/chef_overview_server.rst:98
# 915dc46031954994b8c270a7ee2b07a0
# 7d57181731724c529f0922e6f3f9c918
# 189139f044434436b02a0e434e5e864f
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:45
# 0c3d830a39074594a6e1568d72d9c63c
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 8d09dcf9b1e44656bd0550ade7793670
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 8ced8edb15a945af89756366c90b5e44
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# e38514538f5b415cb97708d4917ffe14
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# ab95ee51d73a467681ebce44b259c634
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 71549ef955f44b88acfa8c4f9d56fe1b
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 24f8a33a551a479cbe73634d44fb54c6
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 8f7e76390b344df2aad1938d469798d6
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:56
# 059322b2341f461491142540e3e9a86d
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:64
# 462e02a2024543f8b7950942459e9967
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:66
# e8e22b81e2bd43ac9dbac4aee33f45c8
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 7aeba11d0b69432aafa8ba9faf6dfed1
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 05466fdf828744b098d4162d27609b5b
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:70
# f9c679001bcb4b57958a2aa084000a19
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 56ed7ea4dc82439abf2608cce8706c31
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:72
# 3d1865e897fb4b888817d0e365407822
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# e968f159a306453182f85da49bc11946
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 888a0dc5e0de4eb39f8bb6f062759c1e
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 772be81613c042d59a316adedc64b78e
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:75
# 1181ac7165c24c07ad563d1028e8a5ac
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 29a7df5986d64533906799115c10cd1c
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 1b179367fa8845ebb927bcf57f0fbffa
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 23a5962ddc5242cea17f158581a6fd78
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:81
# 7c4a05b6deb841a6a2ad18c5b6c07053
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 8f31f81c642a4dea928b07de1f0e9bf1
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# c885be6b1d7549fe8effa004a884ee0b
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 177518da3ddd47a7887994be4193a0ea
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# d0174c33cb814e0c9aee3f5b7f182af1
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:87
# cfd39afc12a74e39bb277f5b9e1ef1a5
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:90
# 6f8a4d5a343342b28020171413a2e371
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:91
# 34531c74c5b4453cbce30b1c84253067
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:97
# c15be23486324302800551a2e0144825
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:99
# 4c1d072bda8b4e959a7dbec867e0d940
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:100
# 369b898a65ca4b8c98d060f9ae479cef
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:101
# 1f3300375e5c46babfa8f463179b02c5
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:102
# fdc279cce076428487bd5df59385a788
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:103
# 8beab637ec7a4fcaaaa840e4a1d0232e
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:104
# ed1794ecc5034d61b53f566098545812
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:105
# 38a8c623455941feace61f15ff476674
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:106
# ba96560f630f423cb15af534757c880b
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:107
# 83ec74f1deed4cafaa66bbfba1a031be
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:108
# 9aaa6f090dd540ce9f6e817c0b950324
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:109
# 0cf726e0d7d04f43a637a8edadee8ef5
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:110
# e00e82029c9d44e082c6fcfb0487a878
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


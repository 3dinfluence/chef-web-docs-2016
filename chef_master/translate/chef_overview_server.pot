# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 23:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:8
# 27a34f7e175a4ca5a56d9ff0c120e685
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# e4ebadf4f9ff41b590a70fc2d3ee145a
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:12
# ddc0f267128f4727a2443b5fa6878f09
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:18
# f6bc8f3153f048b29f3d090edfe85ae4
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:19
#: ../source/chef_overview_server.rst:40
#: ../source/chef_overview_server.rst:73
# ce88fd11b560437f8ef563d712941f39
# 26637f4f67434504b9bea6d115e05d45
# eccee4c40f40488d92d209b31a39c09b
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:20
# 210ebd3851674c31b53766c19e4553ed
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# e53511de7ab84645955823f7da295900
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:22
# 01a04d6c01d64359847ba0c3b76c141b
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# e822164c5ba34e838cdd8102eb6c5ff9
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:24
# 965b712f0e4a451aa5b5212f92aa0b61
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 92797a34416c4a1f987a7c7011abc576
msgid "The |chef server osc| server is a free version of the |chef server|. Each instance of the |chef server osc| server must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The |chef server osc| server includes support from the community. Support from |company_name| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:28
# d3b9c7d6cb854b6b926a275d3be0400a
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# c800d5b40ff9475cb3abe694d3ff28df
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:31
# f1957ec8049143988a1ccf947ed04321
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:39
# 21a35266b2594fe180d4a98e12570962
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:41
# ec66e2626a8f4da0b414580188915fac
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# c804c0ea25fd4f6bb619319e6415d245
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:44
# b8e8f48df8ac4b00964278d4c6bb049f
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:45
# 49a0eb14a924438bad4de21492544579
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 180d89cc6dee4f0589f03f49c92b1555
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 5714fcdb37a340d592603104ebe10e67
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 4fbf8ac043774086b8484d2d083b14cc
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 697e086560e7493eb8438f83acde50ae
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 2f3a0463be0e48e7a2fa787b7c4dd660
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:50
# 76f063ffa5e04aaf85993f09c7d1ece6
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 7d08856f46394231acd43e5f5594e0fc
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 6a4134daa07c4078aab51bf977d996d4
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 88223eff9fa2433ab4225ed130f3c776
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:56
# 9da850132ab648aa8675458bcb11d320
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:57
# 61be8f89e0484cd48969ceb4668d524d
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 76772834077643de8fffa8bc63326e00
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:59
# a6bbd49d610541f989e06b81adc4e9bb
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# e886a01965eb4150a69589389f644ab2
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:62
# 94db01cae46e4809ba7d25bbd8593d28
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:65
# 68ce5143688e4f7f92f1a8c7bba50334
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:66
# ad32a6465bc74499bc27d1601aff6c97
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:72
# 063be021fdfa41a280063a5504a6d8d2
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:74
# b60d088a8ecb4dc5acea33a27e9c43a2
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:75
# f4e818bc10c94716af70b1b5df6a714c
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:76
# 9bd485ad164d45d6b928561bcd9aa665
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:77
# 1ba06f1d5e5a495eb7c7ca5f31fb7815
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:78
# 771b6131afb54510867cd35ea49db9be
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:79
# 165248af94d245a6a8e3f887b4e8c7c6
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:80
# 86252e315bc74330bece5d66d24b95ff
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:81
# acb932eb98074bd0894dd9efeb103a5e
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 73f5ebc24ef14c7abecf46e08999ecbc
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:83
# f4d1766aeb734aaaa49a6a64f556c4ab
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:84
# aaae0ebe829c45d8aa003aae03c32c0d
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:85
# 3c227d3961d842e2a3ab93397a539362
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


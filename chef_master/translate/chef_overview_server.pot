# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-23 21:03-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:8
# e27407287a4d43ecabb7a579e9916cb2
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 90e23677be014e52bb6d5c2575110bee
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:12
# f8ebc0be44a74c028a28ea4993cfcace
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:18
# 263e7ac9b4e249eba0ff7fd23004d67a
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:19
#: ../source/chef_overview_server.rst:40
#: ../source/chef_overview_server.rst:73
# 2a4c669b23b84fbe9757d6abca4a47a7
# d7977d5ae4fa443583f77de82c64ec6f
# d05c3593198d4f619e702aca2de893f3
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:20
# c8effe41ac3c4474a79369d538fa7563
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:5
# bf9f7d30fb754ffcb751367b3c88c563
msgid "|chef server oec| evolved out of a need for customers to have a highly scalable server with the same functionality as hosted |chef server oec|, but located on-premises and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:22
# 6f343963a90e42cc8c3e44b53bb18318
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 5730afcfa0c14542abbe6fded8916721
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:24
# befb19dbe8814300873afd2256b2d2f7
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 96726d67957841dd85c92ba970daaea0
msgid "The |chef server osc| server is a free version of the |chef server|. Each instance of the |chef server osc| server must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The |chef server osc| server includes support from the community. Support from |company_name| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:28
# 0f5332f955e440138d3c03b977843efb
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# da191f749bfc40d9b6b568b9f07dad51
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:31
# ae69cb1b428a4735a51de18f55e42c4d
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:39
# a1b96e5edb65486c8b15f3395a5d3cfa
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:41
# 458decbb75bd4321870920b54005c666
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# ad160c8c997447949d0d87296f09cede
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:44
# 36bb0f5476c44bf9881b2b81e3d43969
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:45
# 79799ba2415f4ab68aa4b3a0e2024c6e
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 048f52b8b74b46c281241070be6f0a9e
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:47
# fce8cf20db4f41fbaf384731a1634b49
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 1418dbc90b11457f8e8fb7568fc2a351
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# c2ab434764014e71a11f7ccd39b83a07
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:49
# a1f8f49f268b41499d7c8990431664d1
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:50
# 606113993cb142cb90f06ad10961e0e3
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# dfb7c0ebcacc473db6330761d8418277
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 02bed3c88c774e56ae49f27dbfa37171
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# ce7cf19fda004439b7082ac9d0f89cf5
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:56
# d1cc49f1c0b9440ca6d9ec20ca984fe0
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:57
# 620c6ae59e324bd6900462351ce78712
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 9e933718297b429daf40fb2cafa074ba
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:59
# 2ffad298c5e848c0869e91efd98d2fc1
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# afed50e08b2f4995a827f96ede10f9d5
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:62
# dd58c0bf2a504b7cb059703b3c7f367e
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:65
# abdff4787cb44a31a9d252416dd636ec
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:66
# b317bb3d2e9241b4a0ad7d18dc6868c1
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:72
# bf58af89044e4464bba7b36b0aebf638
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:74
# eebd3b972e444d3db776b97ffa1701f5
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:75
# 4f26f69a663f4198afc5df46c1ace3c8
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:76
# d6eedfbc0b7d4b77aeb6e47b20d562de
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:77
# 0b73304ab54b44cb95949fb91fbf0dff
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:78
# eaefc7d3c2774134a72e5c3f5df4ccb8
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:79
# 3b03d0ac925340da83380b660936579a
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:80
# c9761298c2f24c65b46d2acf2457707b
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:81
# 637716a3e1dd4d6c862f68a716a89da5
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:82
# c672953c317c4fbeb4bbd2b536af9cbb
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:83
# 44c2604ae993471bafb8390f1e46932d
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 8af299f9d0284ad0ad9a65403d37572f
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:85
# 7d2400e1515442c5b736e45a1351f50b
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


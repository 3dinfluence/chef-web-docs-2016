# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 17:24\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:33
# c30a0790af4448aba47736f7450bcb87
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 2aa0d0c5cf2f49d8bb19ca2a0735347f
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:37
# ebec8099bc9c4653acb8af0214365027
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:43
# bdaa37a7a68948f0b3aefde51e660607
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:44
#: ../source/chef_overview_server.rst:65
#: ../source/chef_overview_server.rst:98
# 98394e814b7b4c8badd96cdb3d65b16a
# 207685fa8a58432a9c88be0dfa08eda1
# 7fb3ef22f4f8499ca13235efc8cf31ff
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:45
# c7a9070ba1ad4e3fafc07f1b8d2b0c47
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# d563f767150f4a72b59cf63a98f68b74
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 840fdbcaacef4e0c8d10b3aadf766c40
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 0ebd2a0ed1ae49208ac38f0127c0b0e5
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# c084242fa47b44e1b834b73c1385ffe9
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 6d8437c048ea44578deedf7a045174a6
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 3cfd4352b3294119bf59a5d35e60a334
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# fcae2cebc4a740aaabccff1ce3d049fa
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:56
# ef71d70d4619423281b46578486c9214
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:64
# feda582c8e284cdf9603661d48a91dc8
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:66
# 3e65d1dca97a4a1d8550084a3df5b198
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 87156e6ff6164037895a5532556315b7
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:69
# a7e4dfeff0c743f6909cba9d39b14abc
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:70
# 39399fe252c4420088c14bc10bac1969
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 26c10083bbda4ce4ad30dec6a9133d1c
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:72
# 6e1af41f8fec4bdc8458f21ee33963ba
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 058141b6a2c246da8039e33b4ec203e8
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 1e9cbd7386d34e9a869a13dbf24ac430
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 48d1a91aca8445238846796d9f3e18b5
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:75
# 17d881b730c94ceaa8443f958fc80783
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# b63e64c0913c4993bb861b06453b1b84
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 547f7070897a4c41918f5db2af2101c5
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 11215c4a2432459a84620db149c14405
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:81
# 0e97612e3c5449a7921238baa3b00896
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 98060c3cb3634c7aaa61ae8de91d7d8c
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 1b5afce60bbf4e96896194ccb28ce286
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 7e792d6e59d24d4e8ca7d0fa8a45f521
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 892c3ef973df4fbdafbee5ceb3ce29c5
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 58dc9aa0e89a4bd69d6d6d17f609c639
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:90
# 76575d0374bc4e07abc0d29c86f4db00
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:91
# 45f03d071c5a4d9db871b303c431e95e
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:97
# c1ce7d428b3047bc875d8e27517c6b45
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:99
# c458cbaa710a430f9861a463fd3f2e9e
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:100
# 996ccc46274c4a5881283f73ae7aca16
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:101
# 6030e838144a4fadadbd4e8267d81537
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:102
# ae0b15505f7a402bbd65aa1216bb2a47
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:103
# fd322a48dba84904864ae95be4ad83fc
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:104
# a0e476da837f430085c13be84710debc
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:105
# a0bb8547e0864820bd34a8eaf4bbbe50
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:106
# 5cefdc370c8f4d029e73663cd19bafa4
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:107
# 1523a8d29e754584b85731ad87655753
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:108
# eb4f7dbaabfc417da85b096090e41675
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:109
# e6fe7c53c0664d66a6d24c3348b9e1db
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:110
# 477204a832914c8cab20d970945ee681
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


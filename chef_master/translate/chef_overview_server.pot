# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-05 17:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:34
# 7dd040d2d70a459d9fe3439c0e5557ef
msgid "The Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# ed61e6cc3d994175b3a80cb3a8d92ec9
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:38
# 0272c4345dfc44ec88dffc2f450b768f
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview_server.rst:44
# acfe6f743f9b4135b9cb4dc855921eb6
msgid "Flavor"
msgstr ""

#: ../source/chef_overview_server.rst:45
#: ../source/chef_overview_server.rst:70
#: ../source/chef_overview_server.rst:103
# 747754117f3a4ccf80b4bbd8e678a57e
# 57e15c914e0e490bbdf45e6b7d0787b9
# 4bd6ffe23d51468a9a03a57c967f120e
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:46
# ed398f42e8934c099bd20f69e9edf867
msgid ":doc:`Hosted Chef </chef_overview_server_hosted>`"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 648a741fca7d4d2d88311076ee3e0b9f
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 032f7acb6150498d8ba3facffebd12a8
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../source/chef_overview_server.rst:50
# 8fdcaef776344545b53607f0c84b5e56
msgid ":doc:`Private Chef </chef_overview_server_private>`"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 3fa3743ed6d64b5091c88e8b54b7d57a
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 411a2e7eb40b425f83559b8ba796fd9f
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../source/chef_overview_server.rst:54
# 7b7fd7a4a8164249a2d2278112db1716
msgid ":doc:`Open Source Chef Server </chef_overview_server_open_source>`"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 901c71e1352341b28c0bf6b88dbdeabe
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../source/chef_overview_server.rst:58
# 3118041cf2004f078ee38f42874f3134
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 77855dbd432c47248d3e9a0611a5ed95
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. This version of |chef| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:61
# 0d81ecf2c6d54d81b3d17d9a46e7897a
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 37ae18139ce94bc5acc74d90bb838ca9
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:71
# ad2fe17aafb447f1b2ba622ac8ea7e03
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 78fb82d78c604d73a57348f94253b437
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 0a3f3a98d72941b09c181bcd2e26dc07
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:75
# 4b9673bb3fe846908b3921aac5540229
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 148fc8da20aa402db6be5f01e8373cfc
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:77
# d63c31b301c843bfac9264240eb2f986
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 58499f5dc49140d6a8bc30e8c7868625
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 8c9223f6c3fd43cea6d98fc9c9fdc3b7
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:79
# a92d71fa90214085b7d9f20a751bd1f1
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:80
# 7e222d20f542465d9e8d2941570c6b9e
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# e135aee682c949b2a0558925267df764
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# eb2bb67e99834af1ba2a480a6d56be78
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 8fc5fe1e099c4ee6b9bf467984fe2de2
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:86
# cebf5bfbd658444090ce9a5a0fff6cb5
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 2b2e26e89e3047bcb0ef545f4b7249e7
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# a0826ca44acd4f828776df46346456b2
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:89
# 75d4d683d4554ef085c737c97b551261
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 771602cd927e4578a0b43a3d4a51e3f4
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:92
# ca50bc7dfaf341d981c4d90c7a6a253d
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:95
# 84e77dc1afbf4b488a24d0ee16a404b3
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:96
# 7070e28d3df94b4c85e761d6083b6c56
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:102
# 623273ccdee5473cafd963564a44fce5
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 9f91eb51d7c946419913ec6e7b698495
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:105
# de468ff5c8a24beeaf91aa4ac5913836
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:106
# 7d45f4752832460aa1af1b46796da982
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:107
# 862c1484f26144b280695a7a893e4c6f
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:108
# 3fb4e3a9dc09441d8b9d70bdb622abdb
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:109
# 2236ce1fd7364f8d855b0f262ed4ae2d
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:110
# fe5489ac6212470a8c77e3587bd5ad04
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:111
# 7a37a5785ff848d4ba3b47a13494e7b8
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview_server.rst:112
# d70fb8e65021446b8def958b2ae6f9f3
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:113
# 833f2443c9584f498ccba83706d65ab0
msgid "A role is a way to define certain patterns and processes that exist across nodes in a |chef| organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:114
# f24aced80f894e1293c3a3fb9ce1abe1
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:115
# 6b3d6353ecf84360abfc6369743c48d8
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


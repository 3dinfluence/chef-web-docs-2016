# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-20 12:06\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:34
# e64a3ed2e40f4474b17bdb7ad88ede66
msgid "The Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 24c70d47aedc44a78caf9a1872a9f684
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:38
# 0d5047fc6d6f470b8ca4f7d13da8a65b
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview_server.rst:44
# cb640341e07a47b490e1411f9eea9ab7
msgid "Flavor"
msgstr ""

#: ../source/chef_overview_server.rst:45
#: ../source/chef_overview_server.rst:70
#: ../source/chef_overview_server.rst:103
# ad940095d696463cbe7473832be0fe9c
# 45809253bfcb400db31b02d9f0066fbb
# 861f3144a2f0422388cc4c62b309f57a
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:46
# 5697bd3812c04dc0baae8f459e7a18d1
msgid ":doc:`Hosted Chef </chef_overview_server_hosted>`"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 529baa3f9e9847ea81d69c5cc0483522
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 597169bbfb5f424fbb6e36f3383938ad
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../source/chef_overview_server.rst:50
# be9c7595c39a4f70ad06dad26672f926
msgid ":doc:`Private Chef </chef_overview_server_private>`"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# fe260e91e048475880d5f580d3225c0d
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview_server.rst:53
# c3d090afa35e4ccd8fe5d25fc9a44c92
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../source/chef_overview_server.rst:54
# 9c12082d0bf44dd590f4726049b9adba
msgid ":doc:`Open Source Chef Server </chef_overview_server_open_source>`"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 14e8c787c1d644f2a7fe8a7745dea552
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../source/chef_overview_server.rst:58
# e6de6643fd25492593fe62c70f5ce471
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 017f24f151994253aa3785991c14adea
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. This version of |chef| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:61
# 1bda3a5efe61409e8b6bd741313ab29a
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:69
# e6b18927c12449e09a88100ad3b2b8d3
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:71
# 9372b50bbaf84abeaddf3a42d7a5961b
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 04d01f06d26447f994e5f1224037cce5
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:74
# bed38c172d2f4d8c8f5a6deac2d8f6fc
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:75
# ffbcdc1710b04fc78196691721637b05
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 854cca619a914c64be3df377bf96d33c
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:77
# 6b38cb705c8a4cb7abfd6e774e753f68
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# d7774582841c434899da1d8424ac2417
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# fb5e97efb0d146bea613deb3a64cae21
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:79
# 92c05eb3993349a4b6de36a2b4b7184a
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:80
# f351ebe9254d4c66ba0f10548f62ca4c
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 629e8cc368de488384051efba71bf708
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# c175a0bc15b44968be66a0ebd16a91cd
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# b075286ed8ff47fbaf716e183e0f8e2b
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:86
# ab2326d459274c41953dc32e8844148f
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 28e8059858fa4ffc9189149dfbe08a6b
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# cc5579fbc52c41d58cfc53c9d2821a50
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:89
# 66d87db4e97c4efba3c5382af553daca
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 91fe74d44bf8461e98c88fec013028a9
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:92
# 387ebee181e64bb788e1c340ae0e508d
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:95
# 188396871d62431a8546ac97e456f91e
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:96
# 2bdee555008545b893e2b1702985809d
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:102
# a09addc725e34451a0ac6ec92d1afc89
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:104
# d9f6c3d637394267ad4078da096c816f
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:105
# 2cd7e29fe9174017ab75e2e4f5e1a875
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:106
# f42cf706082e458781162f7aed9cfa70
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:107
# 2404cc41f193433186955409f579908a
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:108
# d42461cd6b2044a1bca3f0b25279a65e
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:109
# b60cb0a3e5cc44d6b666b94b995e87c2
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:110
# d4badd5683e24145a79e6dc00362ef2f
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:111
# f12440350ace4389a570e4e351fc4551
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview_server.rst:112
# c899b0b359c041db9fa9c4f52b49a775
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:113
# fb49e1979c664e39b1e47421158e4cdd
msgid "A role is a way to define certain patterns and processes that exist across nodes in a |chef| organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:114
# 9811d84fce5a40a68481784e16423c75
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:115
# 781e0d642aa242f6be7bb9269a28123e
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-19 10:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:33
# 8766c43399144837afccc814789d6377
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 65d4bb0d9a2841d39b89cdf0f8b4993b
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:37
# 7c4e0b7da7f6487383bbd399d7b29e49
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:43
# d23e1c0044d34a8cb04be00a09e82282
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:44
#: ../source/chef_overview_server.rst:65
#: ../source/chef_overview_server.rst:98
# 2ff46077752c488395ad97e07dfdda43
# 3aa6d333971142e6857f5350e8a252d5
# 6ab01a51cca14c989b8c9991aac0bdc3
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:45
# dbdfef2dc25742b581419d5c2c015d3f
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 36ad176d35774951b8bb0274b93b854f
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 3016781059de41cb9780d20dc9c9dea1
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 1869ecf71a7a41388a76933d92c4c7ca
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 7494c5ba2a0d4e50827aff6395ee19a9
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# ba00807d44be4a409bbc98db532edfc4
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 81ed998b8dee45c79f684705def4bca3
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 9283ec6af4634c5e9e9411be62fe4795
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:56
# ccd5f23ce47d4fe19fcf84f8391c9622
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:64
# ba371086dcea4018a9366a88a0066c06
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:66
# 0e091098167b412c9d37fbddc280ad6e
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# f88e6eec9fb04712af469920b058e2dd
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 8843039c2ff94c03afafd8fdf2eef1ec
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:70
# b4aa4ce770a7431a9f838ae2809471e3
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# d0a67fc9f92b4f6ea97931e2256baea7
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:72
# a0f859b0ac1e47c7829fab24c6f1fb9b
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# fc065cb65ac94a1282d69516f7291ca0
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 4713b91caf9a4dce85f67a75c3b94ea8
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 23f344c48a36474291fcb4ce4a575a1b
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:75
# b53cbbbd763847d5b86ff314af5ecdb4
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 0a6534c2c44b4a609067a316f944a77b
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# f43ab38fab7c43c3934a21a530b7c12b
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 8b6ee00b2cf84dc19e37bad9421c978b
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:81
# 900335f4306040fdbee49220894153dc
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 046620aca7a44328af96d38a4429c531
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# bf9886e18bb14ad1828b668e00efcdd1
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 6550c53d89504eeb915aaa1e4c5be302
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 9348d3f56f14402ca74b360b46c77e6e
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:87
# dc529f6bdd6f49c7b5edaa0a5b0647cc
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:90
# cee67a4d17884f91a5b8c9aaa9b94d33
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:91
# a43cb76477204f68915aa185bb889f6a
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:97
# 5b7666f8fb32433fbd205427395724e7
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:99
# e7c2d54cf7b84759a991952bf51c745e
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:100
# 32065a55dc7241c7897a553d547749d1
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:101
# aa0db6373d4142899585d45e9751d97e
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:102
# fafab84a87fc48b5ba2e904b46990188
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:103
# 93870319e21547469669d77034bebc89
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 9a7313c7d6544fa6857fa9af033b8b1d
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:105
# 560462b911c242529d7950fc5e5e61b4
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:106
# 47082871290945a291a840d8b921666d
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:107
# aed2afc574e74095a17f9bd14de2e7a9
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:108
# 830129f7503f45f6977ecd788e9a9f8f
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:109
# 5acad4c1f70b4ca288963bec650c1430
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:110
# f0d7e6a2fc674a3587a04bfae8d57558
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-25 13:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:33
# 6a2caf266342446bba9bc3a6b5928db7
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 85880888766143f1837af49fb3b88809
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:37
# 3c0c128c2c3946c587fafc5decfe6b1c
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:43
# 953516266ecf4b9c8d49338d79ecad87
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:44
#: ../source/chef_overview_server.rst:65
#: ../source/chef_overview_server.rst:98
# 0f96704bca9d42da84e9a93a8d626334
# 1c3d86c0f1d34c108418ec3e58bae2d4
# 623ac4f711314efb97157dd4656d95b9
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:45
# 33e6187e51404a7ca35911dedc71bb6a
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 480cbf1248de4b5381ac097146d59719
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 204efea74c2649cfa5d2670cc188bf8d
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 3eaae50a4e8b4ac0a64ceb8ff6552a0a
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 73d0f58641e84bb08de8bc687b6f1e1a
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# b6dc3e9b8b7647a2a943ed22953865d2
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:53
# cb7210adc4054de88ad721f422b4281f
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 331a36235b964062a867f7bb53b43d37
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:56
# 99f8fc25189646d1a6760ca07d326223
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:64
# dbe9f72a3efa4858a31d414b424d5c18
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:66
# 39a823d3278c4e788105a59ec21c97c2
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# ae10aa9425f44d8f9c097b3f06671f82
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 6e9393077f034781b0a191f240207486
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:70
# 25d5c3a64fcc49c3a6cd4bcd701b7b77
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 803367c9589c4cfaaf4b6ef45926fabe
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:72
# d597bdd6f1d7455d89b7c21df8525913
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# b3b0380bd6354ea0b7c9bd93b7f92e04
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 28aaed2a0883419f8887f88927cef912
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 6ce486f655a74f7e9608d48daa885691
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:75
# 7502e25df03945e6b7d13a1da1cc3dd8
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 9de37a74d37341abac9998fa94f17faf
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# d96697170bc4479b94c4239277041009
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 5300d18004b9463cb08a95fe689829be
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:81
# 8e81ce6ad8e447f089171b732204ce72
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:82
# 48e1a8dc5a894b689065b0b51a01ac13
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# dd030f1897d04153844a1bcc67e589e0
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:84
# f5237e1171dd48efaf4b78d308cbe886
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 73fc6e0f556d480ab44d5d8d921c48af
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 4d931812cf92407d9dcc46c8983cbb47
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:90
# 54368919e91f4c64b32813114cc9161b
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:91
# db8e99e95b704f418794c7cd9ec1d200
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:97
# 19eb9ad1d905445eaee7beb6132d2540
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:99
# 97136068ebda4502b5861c8941939d73
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:100
# 454bbced0c30421282b5b14c3c36d281
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:101
# dd944070aa33457bab5f71458d926382
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:102
# c8970735122e4675a6c2c5ad11db4490
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:103
# 4a856a04e19a497bb2a42e2b72840186
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:104
# ed1f205c5b33470aa055d3a6d8aac876
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:105
# 67325478a2844c98a7f7837227f7b40b
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:106
# 69dbbe07757a4000b5af7407920c2427
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:107
# dd096257ccf0437ebfa7f1621c151045
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:108
# d120f32baf1c4b53b0aa5c076086f69c
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:109
# 12cb63bd5f6f45a09cfcb35c03996da4
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:110
# e17b1230e0114066bd832090a3e1bb55
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:34
# 101ab426b9fc46c2a75910a610c4be8b
msgid "The Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 37cd6e9b885241f3a52a79a943c2f6a1
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:38
# 821aad2d488547fbaada73057654cede
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview_server.rst:44
# 0ba9d7e359494cf9b36b0f751c57390a
msgid "Flavor"
msgstr ""

#: ../source/chef_overview_server.rst:45
#: ../source/chef_overview_server.rst:70
#: ../source/chef_overview_server.rst:103
# a9b0139df23c431f9257d5234616785a
# 34a166fa3feb4fbbac2f88db81755de2
# 3072d782e3f346b2b01a960e58b6f03a
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:46
# 1fe5828fc5c44f4b81180f64d033454b
msgid ":doc:`Hosted Chef </chef_overview_server_hosted>`"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# e65e70bfd9424f488477e9395ebd2029
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 58e5e7898bf34675840a6684b9f1751e
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../source/chef_overview_server.rst:50
# 24b7b692f6234a609b3fbc4a6bbfc9a4
msgid ":doc:`Private Chef </chef_overview_server_private>`"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 524c7c82279e40c1ad6924226cba283e
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 4d4120cb70474790818bd47089d57cc5
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../source/chef_overview_server.rst:54
# e983652f49d54c99978bb5f941bbd69b
msgid ":doc:`Open Source Chef Server </chef_overview_server_open_source>`"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 18a568103bd446548de5237d61643eab
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../source/chef_overview_server.rst:58
# 55bb122f350c40779425a7a67d915214
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 909d2391d2504629bb320717df4562df
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. This version of |chef| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:61
# be231839628847f8b28aeaec6c6130c9
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:69
# cbe3f567b9914fa098ab2cb56c5b46b7
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:71
# d8840cb483534737bf5a44a2f02144c0
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 4c9e5d62efe74289810ce876388f6b1d
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:74
# f89849c4408a4e01a4d2bef77cfceac7
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:75
# 05f76678f97845ff9e1b88be67cc2642
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 1ca50c51000f4fbbb228b1fc7ac7ff25
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:77
# 291bf32521ad4a73ac0ccbf6feb74945
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# c0b8e81975b24dbc9c1bba1412d4968b
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 55f901a4104a4ea3a037f3d1a9cdab85
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:79
# 188a9d7e0c474c75a26cdc00c699a3d8
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:80
# 261ccf7c09f14db2bc0eca369acab749
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# de2539ddaf1642a1aab28bb9060d4411
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 9d690fb912114541bf572e531b3ce49d
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 07c00f04f05b4036ac4237d185beb54f
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:86
# 8b0749ac134e4af183a437ef47ffe51e
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:87
# 08f533a0a9914bfc820ce7d63276ed90
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 660c448b257a41e7bfb802e4b242fd98
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:89
# f1a437334ad34f909df2753165131aea
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# b45980f356584a11a132e25316be3f03
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:92
# 5296bfec4b48464f96351425170ebaef
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:95
# 9057100054284f048bfd4766e433f979
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:96
# d75ecfdd62cd4d1eb9f6633c0cf59b9e
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:102
# c60752b2bc2643188143718f4164e608
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 6e78f80e52e247da98a918c089826919
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:105
# bd289435316046908096c4a215cb27cf
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:106
# 3450655e89bd474e8eb12dddc0368c4c
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:107
# 67b828a456df48ba88322702201c1181
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:108
# 009f0041f9694ebf994838a338ccf29e
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:109
# 03a7b5d043a14ae6859088103fa6fe73
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:110
# 895b59e6b0364842ad46c5a8d5ce3551
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:111
# 20f12554882a4637b7c06c693bf2662a
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview_server.rst:112
# 057cd8c8568e41638a5a7e41d5d8f6d7
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:113
# 38c120a3bf3545d48578aab9458faa73
msgid "A role is a way to define certain patterns and processes that exist across nodes in a |chef| organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:114
# 880262d783c9407896435cb1aa2096df
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:115
# b6da79b57d8545f4ba443fa3eba53726
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


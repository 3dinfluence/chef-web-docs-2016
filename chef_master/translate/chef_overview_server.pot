# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-03 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:8
# 701e2acc8ec3425aba2ac06217a14b5d
msgid "About the Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 403bdd471c804f84a1193a3466f9035c
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:12
# 08ab7aa18f11472ba7a9daf112bb3964
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview_server.rst:18
# 75697063836849008aa97b55316a6697
msgid "Server"
msgstr ""

#: ../source/chef_overview_server.rst:19
#: ../source/chef_overview_server.rst:40
#: ../source/chef_overview_server.rst:73
# 9c0627ba4c674b8d8dddc4b7bc983c2c
# 28941f00a32445539f70facc46df6848
# 7f27ba4c5d8b43919d278fde0e9775b9
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:20
# 777d3761128a4be3a331cc13d6a3abb1
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 3f05ac127bce441081c7c91c711497d2
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:22
# c5fe31fa30eb453583f528b40bbf31ef
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 2814235378a64c03810a573397f5b012
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:24
# e66225fce1004cd6ad8d2893443fe324
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# de8c66f4bd7e4240ba0b4b25eb193931
msgid "The |chef server osc| server is a free version of the |chef server|. Each instance of the |chef server osc| server must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The |chef server osc| server includes support from the community. Support from |company_name| is optional."
msgstr ""

#: ../source/chef_overview_server.rst:28
# 78e5f8137dcc4d1c9d04a3d07b05fdab
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 59a3561f764547d497ad824724e22542
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:31
# 6202262ea3cc48ec9c58958317a93c92
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:39
# e8e245ab6e3244a7b959592e9057b51d
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:41
# 6e9f829632ef499b82dbea790092359a
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# c6ef4419b1234bdb8551b15ce503b4bd
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:44
# e693cf2845d7453fa92fa2b63528d9ef
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:45
# 86ed99fdd59347a78f1dc7917f9c1dd5
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# d87bc0973bd94f1fbd4f902c9713859d
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:47
# 437765823ae9421ba65d9d1e02f2cd45
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 79bc7223528749cf901f96e928190acf
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 83807b57e6b541a9a970c5bdf8ed4563
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 24a81978f92442de9e22ae3c2c753e0c
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:50
# 3ee7e9c7e32e49aaabd2de13a1cc0ddd
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# caff32da0bb04af3bf25720136aaf4d4
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 2f71e457603e403c883123e5d98d5efe
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 818eb5910d7f482992c8ae004fde1a35
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:56
# 53dcf2d7c7f24fa0bc7e8ff75de1ebf3
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:57
# a0721db09c304cd8861e46acbe6414ec
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 939e265d77384c35a66d830de33f6975
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:59
# b537c6daac1c4af9820b5a551766f5e9
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 4272f984a3154e41a3dac588580580ad
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:62
# 0371721a49964671b72ac0f365b17812
msgid "For hosted |chef server oec|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef server oec| and |chef server osc|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:65
# 7b8e357c93ef4f8d806f6a881a9dadcc
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:66
# 7e6ca33a061d4838a13ae44be9e1fade
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:72
# 8805566d421f4e0c9067a788f86f5676
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:74
# a9e3cbd765b846a380fac1ba0c1eca26
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:75
# 518a4b081c724139b47931629ea0484c
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:76
# 82d6adfc166243ffa2ba2aafd9c298b2
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:77
# c06c5b62b2d849f5b78d560ace2e4160
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:78
# b495549cadb44890bb3820807f13b103
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:79
# ee8826c2c2c647bdb6b7f667814b3c6c
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:80
# e6cd2cb6606d4e4b9166cda6fb7a32f0
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:81
# 11839a0d52d14047b35fc4d252c043c3
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview_server.rst:82
# adff6e6761de421db93740353ee4c947
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:83
# 1a356ba3534845a297dabc79b84f8585
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:84
# 1aa21a1711974de4885fb845fe220c7f
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:85
# 28f069a37b374e72afdb1a73868c430d
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""


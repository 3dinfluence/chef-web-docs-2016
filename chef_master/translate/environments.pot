# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/environments.rst:7
# 7967d7e0976b4a738b8daecd2cef854e
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# d357cf7e3731412b8c2a15bcf79c8375
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/environments.rst:12
# 14d1233be5e2449e8e5448eea1a224c8
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# b70195f266d24b629518a86ed8e3b12f
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/environments.rst:16
# c97be7a2c10b49538ba7ac09e49a44af
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# 5524d3996e4d42eca03dae93d07fe7cb
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 855734474a994869afee98006f207d2f
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../../includes_notes/includes_notes_see_attributes_overview.rst:6
# a51e8b9b5de44dabbb2624d7a844dfb8
msgid "Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, |ohai| collects attribute data about each node at the start of the |chef client| run. See |url docs_attributes| for more information about how all of these attributes fit together."
msgstr ""

#: ../source/environments.rst:22
# 6d269a5a979c4260ae076cb2d4a7b3ea
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 50f67a21184744cdadf09d8b29b4f154
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 8808bc998124488da74a567a8d23c28f
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# f12ab5c005164072a0a7cd0a269f9b2e
# 88d6190073d04c969f35148c8db59675
# 61ba3e07047240ed967a35d7ea27d6ac
# 10fae79c887c4247a4703d6edd213d53
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 1a0faabf00fc41bdb5a0b6ac81be7ec3
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 3816db7c69334a1ca86c0102d338bc63
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# caddfcf8aed943c0a2ef0224d3935e5c
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# bb03f41294a642039b7e5af1e6869d16
msgid "|attribute_type override|"
msgstr ""

#: ../source/environments.rst:26
# e872ea4832864b02a71ea93dc876c7e3
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 13e53a920c3d40c9afd73a7315bef6e4
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/environments.rst:30
# 3b25fa8e20a344e5a193d2d5907cd4a3
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# e6d78464ee7845b2be9d3b12ae9b4dfd
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 7476d4ad2b824c798f1ff6cc8b22a940
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# ff11a607093946be98d6f49d0a5c1e34
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# c222d0d821164d5383f07bf7c9cdc20f
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 0bd30bef8c454713a696a987e8914e1a
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 35abb52f6f074500b4bed88aa799d1d5
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# de3c35cb1963419b88d21846ca820f85
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 9a636fafad1547adbbde54b9c8ab50d8
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# e5e881f448544e27a3335d8e0dac21eb
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# f7976ecd63bc49caad9c756de44db139
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 560b0af4960749fdaa5debda39f765a1
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 1aa0739c3f0b4c13948749c9b6b30985
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 135553545f7a41568f2a02c947bf44cd
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# dfa9f58d8beb404f92a5fb53974a8a8d
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# dae9fc3403734514adca756e8553e57d
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# ac15fc7f5e6c4213a0d85feb8394680f
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# ff6ee1c24d634dfd9106b7e34d0c26c5
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 184537a41336439887b94012f0e93323
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# b1512bd540e74ce79b95164a1c898416
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# fad6ef07b45149d6ac5735b0963e7018
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/environments.rst:34
# 8e18cef4f2824106adbeef2a0cc9316b
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 88caa2593ead4c42ae2157d9fb365b63
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# e3eada06100e4a989cb2fb32647930fc
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 4424af7978e347c0a4294f6e7904d1ef
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# ba8d4586a82a4d01a53629aeac53aeec
# 8945193f34f34dd78a0fd0e7b734f5a8
# 31eda71c08c2469d97f86651e365fd16
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# b710bdf42b414bc8a68f09555965bf62
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 091e13d7497f47c2bc65a2c251cd0f6a
msgid "|whitelist attribute_automatic| For example: ``['network/interfaces/eth0']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 02f76fe9bb99405195163617e596e8c9
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 2bc57f58682c4d738fb8f09fb6851bdc
msgid "|whitelist attribute_default| For example: ``['filesystem/dev/disk0s2/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 1438671ff3a1487fb5b77b557e10daa7
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# fa0f282622b24100afa30a278f2ffdf3
msgid "|whitelist attribute_normal| For example: ``['filesystem/dev/disk0s2/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# 6590a03025074fe1b831fe80c19c5cc0
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# ee7049e5b0da4dc99d0be48918246f5d
msgid "|whitelist attribute_override| For example: ``['map - autohome/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 1588493a40aa46fe87441531b4c8c516
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 403ee6984216459eb7778d69bbd857a6
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 371ad144bf7745c88308bf9b0dd9d24f
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 2d958c5e174842adbced4328d1348ba5
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# bdaf75bcd06449ec847f16623f11fab3
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# 280d38e38cf74035bfecf5a87783acce
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/environments.rst:38
# 299742a72c6c495196526e5157e86ca2
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 90b0133f1d544e62947a02a0554eac3b
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/environments.rst:42
# e7e44920fc104242afa3edb5634562ac
msgid "|ruby| DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 9d8963d043ff403f9952d53794c8cbd9
msgid "|ruby| is a simple programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:7
# 281d97102a05480a913079d88f437996
msgid "|chef| uses |ruby| as its reference language to define the patterns that are found in resources, recipes, and cookbooks"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:8
# d79ea3171e7d42399f9e9fa7282952b7
msgid "Use these patterns to configure, deploy, and manage nodes across the network"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:10
# 839835266dd846da8661a3fc534efafb
msgid "|ruby| is also a powerful and complete programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:12
# 4a46531e3def45e3a3868a1ef25308e7
msgid "Use the |ruby| programming language to make decisions about what should happen to specific resources and recipes"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:13
# 2c37e49c5e8c41caab39fc9f0e4d2c85
msgid "Extend |chef| in any manner that your organization requires"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# ad8bb239982643c4a62aa4f5f2266239
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 97206ec4704548a5a14e2a2f7e23b34e
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 065db75aabf443d1b711fdfd7b7c298a
msgid "|ruby dsl cookbook| For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:19
#: ../../includes_environment/includes_environment_format_ruby.rst:25
#: ../../includes_environment/includes_environment_format_ruby.rst:79
#: ../source/environments.rst:67
# f16ac090631b474c84599cbbc7b26853
# feb3e60028cc4a9a94788ec9cf2ed61e
# d23495a97bdc4c03bdd99b1eb56164ed
# ab89072e0b9049db925a8a9cdc346c10
msgid "or:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:31
# 1eae77e4c9c94371aa3571ba5e002a16
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:32
# 110ce129670a421f88c9521101de7eae
msgid "|ruby dsl cookbook version| For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 5006ea53bdd6462caa2026cf8a107243
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:42
# 7f2ac60fa5174854b26f6dabd27fa5a8
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified):"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:48
# 79126598ba3845f4bc0e5bc42a182619
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:49
# d07f4c3f43394598974348eff4b3ba55
msgid "|ruby dsl description| For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:55
# bebb353f11594ebda7eaa27ea3066b72
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 1c28ba46ee3c48c5a16ea4c006e429ba
msgid "|ruby dsl name| For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:62
# 409e9dff81d2466b80398b5e73c24f3c
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:63
# 7e2ea8140624402ea5ba884a5c8a709a
msgid "|ruby dsl override attribute| For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:69
# 327385d267104ddb8304a8ba14950e18
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:92
# bac742dae52e4bceaee3d31e2792b8c1
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:102
# acd587f6dca6446bbbf4901f22a7af68
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named ``dev`` that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:111
# 3f79949ae83b4dd1aab26eec7eaa2b68
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:117
# 8650be90f0c4484eb5cd390f55cfb52c
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:126
# 32aa107da96742b28392f491d4abb772
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:132
# 2ab809214f1e461c8ffba550f51ca235
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to '80' and '443' unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/environments.rst:48
# 9109892bfe39479ea9492e23b49c4256
msgid "|json|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# cc6d7003f0854fefa59830dbc18aeaed
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# b1d8da067bd94cf185bc41624baa4a4a
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# f061ccc153724593be198882d2ab980f
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 0bb2ac0bbe9841fe8f9d367de7e7f24e
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# 1dea9c396fb54d439e79c46756bce0e5
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 710e08da3dca42eba1c8e9e84f049918
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/environments.rst:52
# 062311dc14b24f768dfe82ba1d442f06
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# a511485936d243bbb6eaf126228d35d9
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# a3c69c28c3b742608378ec42eb82d40c
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# dd2fc02b89bc4e0ea10db1113c883c69
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# e795a0885efc4d5cb035a7cf813904f6
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 693e5211734d490fa31669372524f720
# afec6c74ebc644b1b5deff2fafbc6dcc
msgid "Using the |chef manage| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 8c9b28799dfe474986945f39a4b2ac40
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 78d38dd016bd465795135d94c6f4d8a7
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/environments.rst:56
# ad78b532c1854948816bd7676e1544f0
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# a9371dd1f4664328a80ddda6fc5923c8
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# ef5d729004a741b8a4d15468f45d3c43
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 0d50397920ed48e6a9609d8a379f928a
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 3f7ae72e84ad4a7ca1d9744571342187
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 7cff85cd3e16483887514744a6a1acd0
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/environments.rst:60
# f47ef85e34cc4b3296efbc59d2d24eed
msgid "Find Environment from Recipe"
msgstr ""

#: ../source/environments.rst:61
# 2394a89871e34642b366364358c41a97
msgid "Use the following syntax to find the current environment from a recipe:"
msgstr ""

#: ../source/environments.rst:74
# 8c15a5a4734541ae9f5332a2bb1ffc2f
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# d36de17a83464dcd9f437d2bd649c48e
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 46b4cf1a28034f7290ef414778424df7
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:20
# 5d5c55c3f21b4bdfaf9ba026fe17094f
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:26
# 9919eb176b4e4ba194ceabea0baa5d14
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/environments.rst:78
# 9fa180e4f8cb4b6dab55d225a13965f1
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# b2c24bf75932465392c3743a34672ef7
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag."
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:6
# da1f9a0ed6a34a89bae63d6df00f8fcb
msgid "For example, to retrieve a value from a data bag based on a specific environment:"
msgstr ""

#: ../source/environments.rst:82
# e5a6ba81c4c84dccbff6cce843273c5c
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 5e83e73b264b45f0b19de118339a0556
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. An environment may be set explicitly using the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# a2ea449531234619b49bb1d48055d82a
msgid "By using the |subcommand knife edit| and |subcommand knife exec| subcommands"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# d46b5b648a1f492aa450b9d4ef22f6c4
msgid "By editing the ``chef_environment`` directly using |knife| or the |chef manage|"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 5e8be8cf92324f01b61d64eaacd80759
msgid "By editing the ``environment`` configuration details in the |client rb| file, and then using ``knife bootstrap -e environment_name`` to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:10
# 3e71701c1c284ff1a898c5513b45ca22
msgid "After the environment has been set via bootstrap, the environment is set in the |client rb| file and may not be modified using the |chef manage| or the ``edit`` argument of the |subcommand knife node| subcommand."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:11
# 8a26e289902b4aa495e85a293296fc1c
msgid "By setting the ``environment`` configuration entry in the |client rb| file ; when the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../source/environments.rst:86
# d9682a6a3b184859b8ae30b425a1bf6d
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# 627ef88c3f294d15a9f24e24d34e0940
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# 0723507dcae14a55be31ecc56efc9131
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# a28a5246ecf44a2e91838aec1f2f2c1f
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/environments.rst:90
# 0e33507bb9d44685b5bf73b920877fb7
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 94588e55c467456c99ffc9a400a1215f
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example:"
msgstr ""

#: ../source/environments.rst:94
# a62bb427d2f048d39d931e277cf830ee
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# f5b5d919386a4db5b13ad29efa6c823e
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# a53483e1f3b54ac8ad205443f61d1456
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/environments.rst:8
# 102a47bd30be4c3fa84185483b75e228
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 425796ec74dc4bb89da02f006765d03c
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/environments.rst:13
# 5ce446b440704da5ae66de284c6a7423
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 9fa83c1679d34d29b01b79fe5fb5ad5c
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/environments.rst:17
# fa301538dae14f4085fcc399a7ab258a
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# aa684267637741768ccda866476f3312
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# a594cf94da1949f69a9a7339a529495e
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/environments.rst:20
# 1c4669bfce654c1596721b886d578775
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/environments.rst:23
# fa8007a3570e418a9eaad029f58d750e
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# fa4d575324ee419497401e35913a1708
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# faa7763d011a49deb42be785fe787b1b
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# ac3190a344ed41f0be7a5c231fa24a43
# 858b4cd2b51e40e78078b6242d7d1e7b
# 2baeac88f4a44411962cc596d9d4dfa3
# e1d9fd936aed4e9ebd01ec690c108021
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# d48a2bbdc017429885ff2986bd21e655
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 215740c2a7254d9693866afbbcb4e01f
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# a2d90f7d3d184c21a3f33236dc95ea50
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 43e329392eb84ef8aebe1c179748af7b
msgid "|attribute_type override|"
msgstr ""

#: ../source/environments.rst:27
# 96821b3703be4ab0a520f0334f510a07
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 86b74c9e363c41bd94d9b756b67899a7
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/environments.rst:31
# 5688126f13d04c5da408082f7dc3070e
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 7b40f0f8a1fc4797848956f1a180b874
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# d49820f8bdaf4449a2913330d400c78e
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# ab6b125bfe5246b7b740679ed936decf
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 82212474eecb40ceac2e098094ab7223
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 1ca1b620935146358dd7d115a3daf421
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# f5f70c110d164ee8a8653054fc38b0c3
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 5a165e49365745b69fd7ae3f6c6cd325
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# c2c3dfd81b8340cf831005d608d47c46
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 28406a14b92f44c2ae968903713a1b59
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 99e263a7246f4231806fe2ccad644c98
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 47fb7b909c024098ab5491f4bc10fa0d
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 81433e1ea0a3422baea3d13202d14230
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# b0a71549e1a84ec7bd52891ec8228881
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 2b6efaafa8d541dcacbe61b75e3c291d
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 6c887c02e11e4d3c9aa45439f321dfee
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# f38c21591bc0478b9cd0af4b9bd4642a
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 6748eac48c9e48e2af8880b836059686
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 0a81f433ddbc407397193d3c83668078
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 7d5eb9e8f29845f195b4e94ae95cfcc5
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 1eddc12cea374cc8b425d12b9a6311f1
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/environments.rst:35
# 6c8be7cdfaca4062990404d69eb61d31
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# c349ef3b951140d2841f42f0d25c81ae
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 7b21185d9a204fada363a25c183d9423
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 347a2757c8c44afa8a1354c2602c3199
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# 5e68f2271b3f49ac91864c9c9ef26548
# 902ab6d44ab142fb9eaa2ffa52b91843
# 033894f619dc41418786074f023cf0d4
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# 29dec47d993e4a5386bdb3b7b47654e9
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# afc0827d8e734cc4b9d603b96cae64e7
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# af72456eeaee40b18410c01ac8f8387a
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# b6a94ef7716146f79dd1cbb61d4929c5
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 478299476949424e8e994dc7e3ae8fa3
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 1676b59ceea3488db9bc03152c23616d
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# b633c44a69d24a08a6d5446a5edae029
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 4eae8f0bc3f94c6eaf1ad97209008a5d
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 0e23591c13e24c7d9c6706871970d1f6
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# af78b1b4eee14f56a64e3ef3152d9fa7
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 328fbb65e5104c1fb4d729112e1a2ca2
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 2be74653f9b74c06b13c8fff1250ee4a
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 719a113ee66d42e493ffb86fe1a598bc
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# c002469eb96e4612b93c495b649907d7
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/environments.rst:39
# 4ff65c722c6c4f0e8e768af4e82a5dc8
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# cf53c107f8aa437b83f17c4f5b243d52
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/environments.rst:43
# ad05ce50f03b4cf9878be7979ee0e76d
msgid "|ruby| DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 606077a6911941e6bee97b8f4659b174
msgid "|ruby| is a simple programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:7
# cd518de4968e4a888743405cb0514793
msgid "|chef| uses |ruby| as its reference language to define the patterns that are found in resources, recipes, and cookbooks"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:8
# 1f095e5ed0684adea8353e5ded5cda4e
msgid "Use these patterns to configure, deploy, and manage nodes across the network"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:10
# ee5e687a84c74d768f65ae89442a793e
msgid "|ruby| is also a powerful and complete programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:12
# cca947867942454b8369cbc65135c8e1
msgid "Use the |ruby| programming language to make decisions about what should happen to specific resources and recipes"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:13
# a7e9bc8303e94659af40eb5ac2d69873
msgid "Extend |chef| in any manner that your organization requires"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# e5ca7373dfa1451caca696491aeee917
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 4156bc7babce4a5da7159dc95e2dd26d
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 27a81339b580464e8348a9b96c9295eb
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 4d81c9f6df734498a46ddaf2132db5d0
# b925b7c85928434eb8712dc6ad15fae5
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# a540c9ac35864f9c90b92cd24718fc7b
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 618ce8639f4640a49df49e4fce15fd29
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# f1e2c5633f6e4b0a9700142eb42f5e0b
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# f7556e6b055f47b79f9d78dab95d45b6
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 6d7e5f0408264541bbcf9bbece3a2ce3
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 422b8ae0cc7744548fd1dff796fff060
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# fab633cd682a490589a9c23d12112f07
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# d90f17ddabea4f2384ab3d8b3b5baea8
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# c1baa325e60b4aa49c6abceadefbeafd
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 56cfe202a9364943851bddac40a0bd52
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# dbbe9d8ec144481fb6db8b12a2d2b25b
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# 009927a21a4747bda73d3a18f86332f1
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 74616aaea47545cd86b4339de119303a
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 8a81ab19a4024557a8bf7746db7afc4a
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# 9d479186057048879955f2724b4be1f2
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# 9ba2807165d544bb9a88481806589cdc
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# 09e056b99c1e482fb731ceed4819418f
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# a8eee724bbfd41c68b983caaf744e3ff
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/environments.rst:49
# 78d077a5f8ec4e2aa00c06da6f40dd40
msgid "|json|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# ec4f9f04e0c943a19202b2e37c1cca27
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# 1e0c3118fcf04f3689652fe03d90d031
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 964807227f3e443e91062832a725b6ce
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# ebadf1116b1646bd9deeeb72e020aa29
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# 95c81c0476d24086a721061f7d12081d
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 0f64bf83f02f41788b59de99a2b9ee1a
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/environments.rst:53
# 51febb45f3e14c2ca20ebfbfc2a49db8
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 9104d45e331d40628b334454bacd159e
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# ecdb2a1086194cf2a184d8aaa1d6e9d3
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 054f22bed3aa4cc2b71cebe3f57c7a00
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# eadc9ecf4307410fb937af46d24d678a
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# dc67a8f9450042cf9ca81550ef1ed2ac
# fef8bc1d4fab43259a3735edd69281fd
msgid "Using the |chef manage| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# b281be36b3554857bf9ba992f5266bec
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 0d3b1c98dc7e41109a97762221e99e5e
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/environments.rst:57
# dc6695dc45e948bfa1395aad421edc1e
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 16506b150e9a477d85693efbfe820b06
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# f7d87636ae3f49628a3d75a79d730a76
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 50a6282b26f940dd84affc46b4fd26a3
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 81855c01027f40578659fb5e2c8bfb55
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 3b5e074cbcbf454fbb45fcdfb2cfa2b1
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/environments.rst:61
# 77863c25fe4145a091331d0b00bf60f1
msgid "Find Environment from Recipe"
msgstr ""

#: ../source/environments.rst:62
# 9b58b1e57b414bfba2bd76395ce59faf
msgid "Use the following syntax to find the current environment from a recipe:"
msgstr ""

#: ../source/environments.rst:68
# 6e3b7882d8814b9eb4fc590d414acf78
msgid "or:"
msgstr ""

#: ../source/environments.rst:75
# ea98ed4b1ed9464f8a68a020135f0cf2
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 9057a2190deb456f80de82498845558c
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 4b328157bce2491692ecc4cb6098bb9a
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:20
# 24951b93b5e440bbaa8b29db17f426eb
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:26
# ebf36102ad654d909622a2e69d07db5b
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/environments.rst:79
# 86565c547a174db9a22ee0b9dec0be0a
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 571715dc5243460d81d6e6cd57d3436e
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment:"
msgstr ""

#: ../source/environments.rst:83
# 9c11d6610a944589b5955dcf93cd5c41
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 8ea62f7c2a97484cb22f8a7497a05f4c
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. An environment may be set explicitly using the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 57df505d42544492bd5e924ae6b1c597
msgid "By using the |subcommand knife edit| and |subcommand knife exec| subcommands"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# cc02006e7ff543f782dee4f8935fdb1c
msgid "By editing the ``chef_environment`` directly using |knife| or the |chef manage|"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 47a0dd2c67654290aa750037755bf8b0
msgid "By editing the ``environment`` configuration details in the |client rb| file, and then using ``knife bootstrap -e environment_name`` to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:10
# 461718a8069d4c7f9180762852cc93f3
msgid "After the environment has been set via bootstrap, the environment is set in the |client rb| file and may not be modified using the |chef manage| or the ``edit`` argument of the |subcommand knife node| subcommand."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:11
# e2be669037f0467690a5ed9586c986cb
msgid "By setting the ``environment`` configuration entry in the |client rb| file ; when the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../source/environments.rst:87
# ea2ddb6f1b644bf8ad553748d5a52a1a
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# e902653b18d8492a8911ea04ba85633d
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# dcaf93a2e0ee45dc9d6ba235adf9208d
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# 3729b9aa9f58473d8500bd24906cb51c
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/environments.rst:91
# 289e3ac89db04596870291601959f1a9
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# c9f5f218c8404d989243eb4809c2862c
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/environments.rst:95
# 9beae69a33904719a10bb53fd62ee52c
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 8aea6b713e2a47778b731572c8d51c98
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 0221bd7283ab4503bde33c2be168300a
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


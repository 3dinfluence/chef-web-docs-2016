# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-27 15:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:33
# 5dc62088d78045b2b0e0330409a8ae4c
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# 5da99376c42f4713ab7e81153ca6eb0e
# b16f7fed3fe94215a280f7fe31de69ed
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:38
# c923f107b73f465eb8b250d0bde0cd20
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 290ed14135614c6485d806fd627c53cb
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:42
# ebf0f7bb5bee4484bcb215d028702c66
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 468da0db881946e89bcf2f5d110f1ce3
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 4df16eef50fb49239d5fa31dd1577327
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 63826b71b53b4faba0d588674f9bb1ac
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 80a135adea3c455196eacf65bc0c10cd
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 28ce3677ba3a48c4a4896b4499c8f7fa
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:46
# cbe68b8ecc734ce9986e2f4c1c4f94dd
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 5cbbee96ed2b4f559072d87bb1eecbaf
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# bc725961dd8b42fba01cca6cb367f3ce
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 25fb894e14704936b69c2a9720ef2b31
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# 41b755a4c5ff4058815364261c09d097
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:50
# 8f9116235398451799db5d2e3fce97fe
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 3a88231bfa714a74bf19f9237ced2f10
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 31d5b0f45a7a49b5a3281c52477696a6
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# a595569b9ee3486bb19836027f85659c
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# daa693323740465cbfd9d168b3643add
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# d03018b952e74ffb8f14a825e1a12adb
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# c36f9a2e40c641ad82982e114d912ed3
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 07d5f0c77fb44827ad07db074583dc72
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:54
# 10cd220264ee4f23ad5f744d77516f47
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# 93e2f25828124b7b9d214df8da900bcc
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 00672b2445f24955b3affc60d260cfb9
msgid "where ``admins``, ``db_users``, ``db_config``, ``standard_packages``, and ``global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:58
# 7d5b98ebdbc343d9913947a65b7688da
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# fa03e1d51a6e4833bdb05382fd617356
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 35c773909365433a994d016b5f71e41d
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:62
# e4b5266488964e37aa2a32d6ab9e2b89
msgid "Encrypt a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 92ba626d4f3840c3b401cbb557ba5bf7
msgid "The contents of a data bag can be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../source/essentials_data_bags.rst:66
# cc37fe2d5da544338811020bfc4b3a59
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# 766ebd80059d48d49bb1bcdf39e1f40c
msgid "The manner by which a data bag is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# 54908e1e5d5e44c7ba57eebf83060ced
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# a8cd9ddf944b4fb295afe0f5199458eb
msgid "For version 0 (default, through |chef 10-18|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# 5ba57a424f63423bb8d97161fc087b64
msgid "An encrypted data bag is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# 0416ad2f4cfb470e9c4726c993282e51
# c70f8976526b499da76e65f84eeff339
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# 58e32c8148ef4f8b933bb7929b04fb56
# c0d1d256c6444c848b60604ae81ff096
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# fa4a7f96650d4cbc95e93b1f024ac862
# 8b6f6427eb7a4d12aca7f60e03c0c6a7
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# 92842b522462458f973ca128dc18572f
# ded4477133054846ac98c49e69dd62e9
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# fb4763ff13fa4c3c8bbc0f828f1f1bdb
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# cf2373c4c707425288547b99de76fbb3
msgid "For version 1 (default, starting with |chef 11-0|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# 38571646fd0b427a8f04770ea69996ca
msgid "An encrypted data bag is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# f9270bc320604b008500edf90063e65f
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# f9d76af5a79f4ba6950716ceb5bb91fa
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# c9d80acf4f004ba0a9d10d5d0ca69f7a
msgid "For version 2 (available, starting with |chef 11-6|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# cb39375b212841b8abb265782a4c2ac9
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# 174a27ce81cb4682b7b9d95c0f1d4674
msgid "Can disable version 0 and version 1 data bag encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# 69f480af17dd4ee3a04887a5bc20dc0f
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/essentials_data_bags.rst:70
# 230929363c7d402dabaae0af70e5c38f
msgid "Knife Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 6c41a2c8e5584b2995273076e8d12f28
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 680e91c87c2046f8bbf306a35abe9e49
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# efceddc8601e4ec7a907e629da07e4a8
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 81b8c6b856284e1aa2f308a5d2b9c801
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# f9a2cc598540441ea43531a48d24f491
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 7de3e62c83194a6494aa11c7bdb6f9e6
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# ff8abbb40b2b4f5e96c222d41a278d1e
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:74
# 146016810edd4f8caee96e9796893c49
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 90d0f587e0e844838f8117ef19335567
msgid "Encrypting a data bag requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# a51061fbdb894035b24583e675db972d
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../source/essentials_data_bags.rst:78
# cbee4f552f1c40f1b7fb7fe1d97aa886
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# b52c89c3952e499db149b134a1d78137
msgid "A data bag can be encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 32213328fc5e4f019db17d323688d5ce
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:82
# 39b5be1b014e4b47b1a22431c63f3d6b
msgid "Verify encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 1f7e412789e74421b8682812df260c04
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# fc504aca4d364cbb881d378338af10e9
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:86
# 14e3bd79d34245378a4421374174dc06
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 9a8eb69822304e9fa746d70a16801fb5
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 4ae94389241b4adeb06b709e2f4cd1a4
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:90
# 06fb3ba569984370bbb96d2caa2a0fda
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# f30614853ab1407186fad80afde41d62
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:94
# 6b9a120bf8274f779870a403139169c8
msgid "Use Data Bags"
msgstr ""

#: ../source/essentials_data_bags.rst:95
# f137063eb2f045e996e96ac256c590b2
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/essentials_data_bags.rst:98
# 33f947fe905343d68b43b75a60b22e3c
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# ade80e9018a64f87a90d7aa476f1cafb
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 1cd29fbf28e14ebaa925dc3bd1608f92
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# fcf8793ea5164d3587091966544eddd3
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 8b97ba829496436181f7b1877098408d
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 089accdf2d1948eabe55bbf1a9278fee
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# b77b4fca4e5b4b50b1a16e275a5dbfbf
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# abe1f6b41e354179a5652e8dc07a0388
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 28881835389144ada59ebdcd4529c8af
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 5fa8a0c6e8754d2ba5bed024bc958cb6
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:102
# 223644cef9c641d7b70599a107f45543
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# be4adda05c5a4d31b04e4851d52237af
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 0f40614af24c420b998d5bada03c5e7d
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# b6c3352387564949bd1c202276def15c
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# 6df51193be994491872ed45866c0a790
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:106
# 8759123696cb4f388b5214194a43e02f
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 90b933f26b164f90b6bcac8d9d5cbc64
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 337354f648744427a481291dbff1b4d3
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# 5aab356696d54058a1227f83c4cbb710
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:110
# 2f9a330eeb1e4fd68f607ef5c2500e3c
msgid "Load with Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# c5e2d03bfa774e2580ba232a8788909f
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 051dbe4ea9d74f518b2fd8f4084795e3
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# b80d810a39d144c4a1c7bdf7bd111d83
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# de5275875afc4e6194a7a9d1de0fc2c8
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 3bc86bec1293466ebdc08bc1c774fc46
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 494ed79713f8475d9dfdb3c966ed5cb1
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 53c5230fef3742baa4c39cc633c12304
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:114
# 739f02f3fea440029e3cc8cc1502829f
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# 930c1d4198134011854a937a7d0b2a29
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# cb1b9593900e44c2afbd22de90b5d8f3
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# 70f568d6cfbc4e86b1444f764ad23a97
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 6b44776e67a44b70b9acd70a2105afda
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 3e0944be1940411da4b4b561712326d5
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# a6460f2893474de1b4631260847d2379
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 3dbf1277e1ce45f1b09c81f0d5e3a74e
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:118
# c7d6283119184543bc6342cf94c63592
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 27a82a95b11545d8affcc5febffe548a
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# a8d98cabc10a49b69631dec882ab840e
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:122
# bb8f0ff15d75423eb236322c570d1e6f
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# d941facf11264222a6c925b892d0c5ec
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:126
# 3abf172bde124c62a614b558c3b295ed
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 2b1dc8b8eb54482d80430c21fa67e62a
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 98f411f4069543f188dfec3554563a36
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


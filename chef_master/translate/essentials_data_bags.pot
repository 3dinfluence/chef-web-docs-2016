# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 17:24\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:33
# 4456f7ed6e4a4b9081f0b4eb284814d6
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# f5b39bbd46cb48d8ae95613755eea5ad
# 3cd6ed22e4bb4273b42d39556c208ca2
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:38
# 8ab3e3ed98c74fcebfafa2c09786430d
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 9600bdb2af41463a8c8a0aab6e043280
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:42
# eb83f33cd1d54bf4942dbb2c89a5f5a4
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# fafaacfa53d3430fb23f9dddd939a215
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# bc2548017c4d44539ca254c1e4a0ecd5
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 87956b82116e4b5ea6e4a97a060eb353
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 24beb55ac2384e659648d5430b23b78d
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# f5f87de266f148a99502e924e253e339
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:46
# 2abb235117564a88910812cd0651daf5
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# e7d5ac2ebc27423abb313def00d97a18
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# 3f96f20dc8e240ddab4e1c2b7ef37249
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# b9cb77e236ea440caa844c21569ada9f
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# e1be99fac1ed4689ad38e3460091979c
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:50
# 1ca59ac1a294445390503019d8fd1150
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 5099215e70bd4ea7a6f561b7e6ad9032
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 740b332a69e74380bef864b3c9319cc7
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# fe5306f1236146a087eff1034804b2a0
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 407d296d0d54469e80a4ba006667599c
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# af2493d3e3904ac0825ffd0d0f8e2c6d
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 1b612731bd43470f9fbb779252b34e1e
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 331d701f00dc42f096a9bbaf84ee6343
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:54
# c1727cd9955646afb09267bbbf9d6453
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# ced10855e34645c4a8e957dca124d99e
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 77957f9ce35c4273aa19658ec48651c4
msgid "where ``admins``, ``db_users``, ``db_config``, ``standard_packages``, and ``global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:58
# ed3b3264797e4396a5a02eefc2c5e73c
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 41c76e148cef47bba5155ce8390c8fe7
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 59e6abb632604277ae12966f2d88f505
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:62
# 84f7df0702ba4d5db8e0731cd7abe55e
msgid "Encrypt a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 2d179b01dd134f37b74f17bdbd2c48cf
msgid "The contents of a data bag can be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../source/essentials_data_bags.rst:66
# 4e16ea0a749d4309bca2710e0bf67749
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# aa0467bcf3314ecf8b5a0a5a9ebd4ce0
msgid "The manner by which a data bag is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# e52e34080599462aa4f364102b137bd2
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# 50124a40fb4446ce88da3227f2227834
msgid "For version 0 (default, through |chef 10-18|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# 9fff501136164f5e95339cf4a01d1452
msgid "An encrypted data bag is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# 648de24af3624e62a4a403783f24f24e
# 7ce44d42c1234f47b09a5fab86c605a2
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# b7e07ed5cf9749fa81b361453b516a69
# 5a18d9433c134fc7b9c90f0ae37e6f6e
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# 8e8e584f6d9147eabbc8f33b684c0391
# e70f9a6e6c9e4cf6bb4920e60a37a3cf
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# feaaf323eda348eaae52b33fcb5b47d6
# a46791f82169445e8fd4ec7ade99a345
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# 925c29a7532f498a80707855bedce70c
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# 591948b39a2f4989aae95a74977824d0
msgid "For version 1 (default, starting with |chef 11-0|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# 3c5d275a56d34e19ae078c06b281ce64
msgid "An encrypted data bag is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# 22c4e6ae76814c6eaa09b268e1aaf26b
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# af9a4c0279d24d43a690e3e7eed5c456
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# e18779823fab466eb472491f7c5dd14f
msgid "For version 2 (available, starting with |chef 11-6|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# 5d43c7e426ab43f490f5f63077afca48
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# 64dfac3cfb944b89937b812bea5b22ee
msgid "Can disable version 0 and version 1 data bag encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# 13f745309fc74be4ae62ee332a1b6a14
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/essentials_data_bags.rst:70
# 5ec04e1a51cb4e86b77c03acaf1d12de
msgid "Knife Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 34beb9830a8f420195839972d4bf937f
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# c3e60c90747a4ce7a4e3b72a76f13f5a
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# 652f0f39e2c34c9dab5ad15314c0ab68
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 380151e618304618889f65cf71823cef
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# ffb621b08451435dab4bd1961bd9d224
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# a2b6bfddaab2497e9eb1f8d014eac08e
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# aaceb320da504cb390e5c591baee18d8
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:74
# 554de51fffdb43e7b11e54b0b0ca755c
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 21ee1fe988744744a54c0a953862487a
msgid "Encrypting a data bag requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# 3b4ce9675fc04eb19b50ac5a038123cc
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../source/essentials_data_bags.rst:78
# 831853df86dd4f99a29df8a31c3d568f
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 32bc8f57602047b48866ab9a68066434
msgid "A data bag can be encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 49bbf61564024d7a94af8deb9a35a5cc
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:82
# 8edb0ea4c0604fd99a440df60db5e62c
msgid "Verify encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 7606b0d935ac40f1a295dcaf91b72538
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 25fbe6bf9d984a25941e15161858f546
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:86
# 00d9046f067f41babf3db913597a3240
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 307b1a2fb3974481a850d6a79fbb2cbc
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# f7f1d64071024bd58bd73487cffbbaa8
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:90
# 1716e1bad6014a00bbbac6a49a483115
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 1734fa4214ab4ac181407d5e9a64f0fa
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:94
# 8ba482d8016e432aac4d6f607ca1567a
msgid "Use Data Bags"
msgstr ""

#: ../source/essentials_data_bags.rst:95
# 743a2d5a838b4dacab0eda0c3b94a0a4
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/essentials_data_bags.rst:98
# 24a6916d6276428e8a634037dc977f9a
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# a062311b155e4480abe19f13978ca603
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 01fd6c7ddcdb40d9856f6304daf9660e
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# cfe85ef17b4c4f9fba287ca13b37dc3d
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 4b52814d36804e53adb6595b5781a96a
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 6e5b58fc61f449aca85dc2e6374bd26c
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# c53a05ca8b8c43cfb3b4d5c7a73aff66
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 25a97782585942ad85e0dbd4231b745b
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 0ea0433bd82f4d0e984f5f5f7cdabc74
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# dea705c2aff9480686b0e5abaf7ba9a7
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:102
# 6deb720f5c774a7bb96988e90add78f2
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# ce8c210fbffd458fa5c9d024124aaf56
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 18daccd126c447bda4a3abda4d2b0ded
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 6a25ab16c45c4fe58119069e4cc6927a
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# dd83c1326a46491296ca58a199a3780a
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:106
# 9808b26cb5e64c8e8cbd8353ec79ebf9
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 4cd7e06326334e48a90d9ac49e1301b7
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 3039fdfbe99642dda11c65b7e4ccf986
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# fa58fdb92f9c4bcdb747883e5c39b273
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:110
# bcc8a9b47e2d484186e245fce37afa63
msgid "Load with Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 97d57f65cf2e4a4eb2cf854dc5dfd9ac
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 02d7c4e333714b0e97f435ecbc8f932e
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 9b4de56f2430498ba8db9eaebfc9f5d9
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 12f19ccfec1048c08838ed44f03b5945
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 4406194ca4e740918a944328b6ccfd51
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 8f91e89a741243cfbdddcd0b02dbf47b
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 1994490c16ba48b9bae89d98e84a3ef8
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:114
# 8e1a610c11c24a43acd9a17b75228453
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# 269bce81fb6a41998647a5992be9c774
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# d951459b6dcf4b3baa30056313da1561
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# 82cb1473106a4361b9b2879420012cdb
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# f6ceb0d4fc5e4eeebe07251058aac897
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 32c8a68a4eaf4d8ba8869a6405f92861
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 0f827fcaf9db4d949e3ad5eecaeda5ad
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# bcfa83cd39814ca7b9ff118733de19b2
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:118
# 6780103c0f6f461f965739b5fe000aa6
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 2999746761be46a8a6d35f453353d8b7
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# a5e5f6e5f3f74da6bb66c54432da9139
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:122
# 767d13c086024f57924c083bb258dc98
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# 140623c0c5ff455fa67e093724a3a84f
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:126
# 1ce37d1356434ca686cf0047a8ca1803
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# acad2d0b95dc416d9e9b8c35b31a0611
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 77e2ab10a78445ebbcb149729be57828
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


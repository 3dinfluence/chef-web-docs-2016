# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 18:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:33
# 78a946422f7f421ab6632030ee817b91
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# 63c0b4e3db1a4312a046247789e52fbb
# ee0e5edebccd413a8b6846a6b4ca4369
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:38
# 6dddc73e71e1413694dcfe8090b4a5d6
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 9d51cb4adf64432ea515f42ac55f7e2b
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:42
# 8ad4418879684b6ba97663dc1966881f
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# de2faf23a35b48f7b2617b0015ba6052
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 35f85f236b284cbd98ff13ebdb3120e0
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 1f8b4767e7c347f2bc9a15c19c8b832e
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 25a35804d46945b8b0817c72cdfb14a3
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 25b457e6a7a0490ea7954ac26091d6a0
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:46
# 4bff604519d44dcd8e3f55ab99e25fa8
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 9e2c1d2d093a4e73bd118deeb972e6af
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# c220fd87e4ee4f1086bea584e62c1e9d
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# a5981b589ff34834b543046bd9e1038c
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# ee1fa4f258b743959b912150c3d2e78b
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:50
# 73d328acac5a43479dccb2f9dfd3cf7f
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 2ec43ab4935b4de5886a3d2e4b996af2
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 9e1382644e074d68a147fae7da62cd55
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# a771ee743a7d49ef8d10914ec21f3b0b
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 84bc18135eee42918ab42694ee1d33f2
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 488ec3942f6a4bc68bee0bd5c917d491
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 83462c7c8c824a628a404cf7232f00e2
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# a07a94b47c294f518074edf1a3e45432
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:54
# ea69b454747e4bee848ec0b5d5603b35
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# c6e1e2e5941447d385bc2c39bea29759
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 2e31f32fca4146c78b6dbdaf0f8a05a6
msgid "where ``admins``, ``db_users``, ``db_config``, ``standard_packages``, and ``global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:58
# 8344efa3e98d448884a045015a9a0c6d
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# cdf96e1d20314dd88e7ca1335c8cc550
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 5399c01b6f114ca986a435c81900ef3f
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:62
# 6bb05a0eef86433eb4df1f2dc099f7d6
msgid "Encrypt a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# eff12d4e48f14b03970c4502de911e8e
msgid "The contents of a data bag can be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../source/essentials_data_bags.rst:66
# 74845d4adec04491a688b0ffed185c54
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# 453a81f379474228afa1e26c4014909f
msgid "The manner by which a data bag is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# 41f25ee8a0b44f2c9fe1235c4d6fa185
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# 998d00ac0ad443fe82f3cf6c7ab5113e
msgid "For version 0 (default, through |chef 10-18|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# adf3f96b5b0843a290669eb4e59b616f
msgid "An encrypted data bag is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# cbc23f6527334b1ebb01b8717c98cba4
# 126b00bef85f4784a9c49d7e4096a8b4
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# c4cee6073c264661bcc417a1c3672043
# 46c2dfe022f94c40aac85c0b1e49f923
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# 5b2f1b389bab4856827372e9054f37a5
# 9de4dafd73c04a2ba8b9ffee15e1476a
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# 602a2a860c7f4818b4e0d071c0ba92ab
# a816f4e656fe4cbb811c8a3db8e6f1be
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# 44adc93894fa482aa8351baef4b12e96
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# 9ff746659bad46f8b5bfda3f13b5a255
msgid "For version 1 (default, starting with |chef 11-0|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# ebfd06186f374c3e81b517bed065fb98
msgid "An encrypted data bag is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# 45a1bf5c96f848ee92cc3860b9947bb6
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# 30d0146a37a64dc1a412dee358fac957
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# 5785e26fc79e4b60971d5b9f214e4499
msgid "For version 2 (available, starting with |chef 11-6|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# daeff6f88bf94d0db66b4859481678ab
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# 4490d7e9f07a45239987f3db5377fff2
msgid "Can disable version 0 and version 1 data bag encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# 39429650e8c84cb383d2ebbd5c566d40
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/essentials_data_bags.rst:70
# 435ecd76533f46b5b8d23c59a996caaa
msgid "Knife Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# a7a30f029dc54038ab359771a7244503
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 5ac3685a14e54cb19fe59fbd29a2215b
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# b51f30bc2de54809b6f7e56460b32c35
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 2f6c28cc76124775b020d2cbdc4cb4e7
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 5e1fd07a059948ecbfa6c9246c991638
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# e27c867bcf9b44e2aae4acc3e98ceb5b
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# fa0e301a84624081863819fb2022e2ad
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:74
# 7eddfa4c36b2405fb017663d400e3fa6
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 0251d91e76e245ce8222a58b4af8ea3e
msgid "Encrypting a data bag requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# 17c94a96af3e42e588c9d723656d2dcf
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../source/essentials_data_bags.rst:78
# 9ab4e0d51b744319b44b7f7ff0ae2b77
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 365fd16fa5754c3fbac9ff975abcba96
msgid "A data bag can be encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 55f15513982f48babc74f8e8678e4013
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:82
# 2fd3e7e6553f43768ece41bb5c516f3e
msgid "Verify encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# a2182924f0ee4c17b7f03e07fa4eb2b1
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 67868630ff284731856e6ea59d7d0fda
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:86
# 950720209f1c4e6698a0d7004e5ba444
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 979e1379d261464490a18616f2c04e4c
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 4d12393dff8f438e8c580c2fd8d482db
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:90
# 6fa07a1fe42740f6a14ca94bf593af7d
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# be9388911c254d9696ed91b6ccad23e1
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:94
# 46c60498eb48444e81a9c878e8b45bdf
msgid "Use Data Bags"
msgstr ""

#: ../source/essentials_data_bags.rst:95
# 7b4a055c03604d6fa765cbd5530e5978
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/essentials_data_bags.rst:98
# 48bd8c0c90eb4c669f25852413901c80
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 1127d0c48328429587c0640fd1862450
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 5caef2949ddc43b58764b06aa72fc2e4
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 6e8bec4487874a089c7ca8f79dc57c47
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 9e0e5994c30a49a197792474df87dc82
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 1319ceee029845c5bb5959d0d36233f5
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# e386c5d36b234d8bb9fb02d6ba992e18
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 058e5e4b3f694b13b7d32775a90998c6
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# dde02bd10b50400f8214274e16b16ed1
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 1db8391dde58462db9c22198fe4ce15a
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:102
# cac8589a6bf441129b120e4798b41988
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 105dcdf47690441d921e4e5427495dd5
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# a3111a21cbc140b78f124bb8be116358
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 9e948b492d06496abd7017a0cb18124b
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# fddd902410c844da9bb11ed6dbdd5eef
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:106
# a8b8534657a44ad78d705e16f103b9c5
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 7dd6e9f3cec849a5981d2f0fe0e819da
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 3fe3ed7467314b19b2036a0f42cad33f
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# 021912cbaddc445385fe00db9803fecf
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:110
# fac091341c1e42c5b1c4fbe24459b035
msgid "Load with Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 2d59d456b88840b78e0f91c4ff45481e
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 03f58c51a6cb415fa478af32b2301cde
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 2e816f58917b4840877a88d5adb86a59
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 2c91da3bc62041ea914cca5632b6b6b2
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 105dc8d8555b47fda4b979a923f57f00
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# a9c63d8583b6426cbe5fa5c33edaa013
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 4606fe9740c3470f8cca78342943785c
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:114
# a933e5311ee2408882d602fe62fe9a58
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# d118acc211d744f6aa53621c9bed9a5b
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 3c8ff10ddb21495aa4dc2257c5a6c5c6
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# a51de0e674554e26a44528841e2275c4
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# b324e4745ce044a1b4d5d933036f594f
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 3ecaaba8598e497684f976f7e132b933
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 39abef9cdcf945d09303f27168a919ec
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 76816b53071347e1a0529a322a385672
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:118
# 76921e89e7504e198fe3ed373dc3e2aa
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# b0868310106e485da5844daadf6b25e1
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 6bf77a3e6c9243aeab6e779571d76151
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:122
# e6c5e67c39bc4ed796cee1d097da07a6
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# cf5f8433a99046bf96893527ad609f87
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:126
# fd33fdf9105040abbd3295f1c6476fa5
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# d9f717f6c13e443cb2641fd1d8d4ae97
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 98e624d7431d488dab2902e39d19aa91
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


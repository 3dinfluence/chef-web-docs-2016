# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 12:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:33
# c00481ac09ac461ab8ffb022d484ece2
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# 424205da2bd84859a0e5541380ad8427
# 57bf78f6d39440e984f749b51e0ad264
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:38
# 2444424791bc45fa8fe945de389b6876
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 4fa50efc5aa44c818de7b0ab5b7ba559
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:42
# c7406f19a3aa4040ba382a4c73d745e2
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 4ea23071c4b2467a95f02244a155624f
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 8c6c4dfe696744cfb66ac4cb36260d7f
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# a7c1dea7d7c44c3db850ca3ad7161c5f
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# e1c4e8e88e914c2484484b66e7034724
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 9a112c7cc4934ffeb02afd2c6f05433f
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:46
# abb8d46ecb14444a874d7c44ea80c1ee
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# aebe750ff45b4824ab7dc49c1a8c325a
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# a252aee06d9b4b88bea6b5a3431fa5cb
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 31375a10f7c24caf83f9af6ad617a7ca
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# dd9d2229da03488aa5c5871dfc18565f
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:50
# 7e1288b06def4fb596a850a3344943ce
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# c5d0c4e5ac4546dcb05f63377602207e
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 22968d6b75294c5abb151273278ea82f
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 35c5dc00d3a94483abea9a99e4e0461b
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# add4373735e84607885d85ad9d7f2880
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 1bde8e0e6a7b4e82b568cdb9e2eff63c
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 4eb9c8220a384df7b5cf0afe377c3b57
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 064b80d56bd94257b0aa7461fd23995e
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:54
# e9af46a652974727916d55504bec2e1a
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# 21e848abd6164fcf8f436008a95f28a3
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 1faf326b84e348cdb3145fdc08a7ef95
msgid "where ``admins``, ``db_users``, ``db_config``, ``standard_packages``, and ``global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:58
# 2c7a4d14a9b645e890ed70a6f9ec3fe9
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# eb53642824c54a7f8b6f7f7e7bc4c9ab
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# bb917af6e748476d86470bf63c83b0b9
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:62
# ac0ca56fc8ed494b856c5f75754bda7d
msgid "Encrypt a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# c4bec86440a84e85aecab4d972af8af9
msgid "The contents of a data bag can be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../source/essentials_data_bags.rst:66
# fab053cc4e8a4788ad92c147e5cfd680
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# d099bdcefa71472887faa4ed4f3ed83b
msgid "The manner by which a data bag is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# c39cd008f27047a7b7e2763dd8e050e9
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# 2a5f538255a94cc19e7a205d33834e16
msgid "For version 0 (default, through |chef 10-18|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# de18ffa765fe40cdac31c02aff3e5099
msgid "An encrypted data bag is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# b33033fde6c1401da00f4c6259d2547f
# bc625d11cc3b4b609037c6f35d19a4c6
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# c8558bf0b00048eb811a70778382954a
# 4403d84e3a7b4168b3c3745a9a0c794f
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# 6505578e686941da8d90a0247f02434a
# d4e478ab57924b44b2c7115dc527e6af
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# b1be9b7cf2d94ed19eb821e66cf0c6e1
# 0f5278aef18a47af8c3b8bd11a13295e
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# cde30bed4a6d40f387c3c8f63a394512
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# ba6d38a64c16422dadbb35ef4e6de620
msgid "For version 1 (default, starting with |chef 11-0|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# 79adb4b2349b41f5baa2d9cde4e5df67
msgid "An encrypted data bag is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# b851fa4d86f7483ebee403bbb7f0a4f5
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# 3351b9365a1343b98840c6c3619e82a2
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# 1dba302539f74204ace1727bf4da7a3f
msgid "For version 2 (available, starting with |chef 11-6|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# 648cd359ff234da6ad50be1731334ffc
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# c4539e8918b04dc69b0d080a47cbe37f
msgid "Can disable version 0 and version 1 data bag encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# ce5f27c118e04f39a8fcb43a1f92f3e4
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/essentials_data_bags.rst:70
# 20cadbc7050f49e8b030926095354989
msgid "Knife Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 581f34cce78e44858d4761f9b2f273dc
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# f3c9b97580bd4744b450c93dd98836ed
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# 07f1d258f4984660a267f8eeb4f76d70
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 9b87562a59e34c9397c2087028d3085c
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 56692694f65a474a908799fc4bbcce2f
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 09599f863a3543319720000a4dffec6b
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 91fa75be2f1f4c30bcde11ef5668c507
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:74
# 265841530509462b98cac49040bd9c3b
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# fa6feacc643d49b7a8836df902c73b15
msgid "Encrypting a data bag requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# 9ea61bb9202f44f2be3441a6f924c39a
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../source/essentials_data_bags.rst:78
# adabbe7458144c348849765050900c02
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# d1e193bda9484066808b3bf084bde554
msgid "A data bag can be encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 493d8d7451f44c4189812013a5fcc594
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:82
# aa51bdc084174ac886f80f61d74a0697
msgid "Verify encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 4275d8030f5841aa84dc3140701a6115
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 553ef12ff93148588e1dc56a1600a84c
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:86
# 1dd8280e986b4b95a30d222817cfd766
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 428ad937e22a4553be951faa1c05fb97
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 79327108e6864af1b57ae6ff544b4f6f
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:90
# 80426056ca40448eb1f039f9302dcdeb
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# fe6a7ec49e2249f280d69deff5922936
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:94
# 4ece0ffe9cff4785bfd8d4683bc9cea0
msgid "Use Data Bags"
msgstr ""

#: ../source/essentials_data_bags.rst:95
# 2db96f9a0455455e800ba5a3ee673eab
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/essentials_data_bags.rst:98
# 93cba46f369542828baecc56b93a49ee
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 5a13036281534dd58ba190a2ee16c866
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# ed562770b8754358b79ae595c8e2aeda
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# b8b43b4206d04873a6f1534d16456898
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 36e7973e4d68462c90515c8d01785976
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 61f12dbd2571420d9e5baddc686c6ea6
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# 9ff99b6327c0497897c54f7d821212e5
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# ea8ba00dfa574308b5eaf9157c3e3123
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 890d63381e8d44ca9a53b18a1aa8c3ea
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 3dc60a41d28a428782eae739693e8281
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:102
# a3342cf72a2442b9bec23a774c43981d
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 4329d59ba62749bb973621b0cec8beda
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# f0d1d80f10944de08f018767071c7f56
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# a2b06ddbc60441b88c666a49786929d4
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# 5b2045f47f5d42a6905b6ad363c57801
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:106
# 5f5c6090aa5e438ba1d402cc389d046d
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# b243084ac5ae47e0bf1e93643926534b
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 6f0c3b02778d49a5a02bf43487677dff
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# a03a0473bc07494eac89c8e9317a6cef
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:110
# df632e161633401cb3de25c29f8d7d0f
msgid "Load with Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 734cb72526764c3a8442c746ddcf8da7
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 114545432c4c42cba988ccb45ace8456
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 9d3e7fa9072a403dad0e2a595c9f9ae8
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 75e1de5068914fd2a53913bfead5d175
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 5ae43b1d58074d528676fe46a81004f4
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 6f11e9769ff54b5b934aa49c30f786e1
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 122707464d744029a910e19b914c2aff
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:114
# e03148c597fb4ab8a42e9947c9d93975
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# b839042a13c54e338b49b45732eb9b7f
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 6fbb5f75ab6e42608721665cde23479e
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# aecf3d12b5b94304ad7276aa2cc11fac
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 8e8c7332bada4b9a94a4190f07bd3bad
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 04588b0d963046c5ba346553339e7489
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 5b39a8df4cbc46d19c4c047cbe8ae998
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 1176189a8cbb45f7b036ca8ca22490b6
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:118
# ecd2c7320dd74157ab6c7dd5cbc07827
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 384750ca1f544c018e0f4a2c79df1e42
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# b23dc8e398614d2db2e968745057b6f2
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:122
# 223c5fe076e247089aaa2ea5522c7a70
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# 6da177f2de28463390dd8d949bee287b
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:126
# c711666f588b4ea899a7686297b169b9
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# b49c82f392d54b6196b0eacbf4c9c156
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 59cd95d615ff4a3a8d0f28cdc263c67a
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


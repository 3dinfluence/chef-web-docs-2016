# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-22 13:58\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/just_enough_ruby_for_chef.rst:34
# f4526a8f44c34759b643a98166ba425c
msgid "Just Enough Ruby for |chef|"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 1c0bd18577394383839e9583c6c2127e
msgid "|ruby| is a simple programming language that is designed to be easy to read and to behave in a predictable manner. |chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# d7e6170b5d9b43e99141a8891662ace2
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:6
# 0123418cdf974ce2bb9db795a5f2816b
msgid "Many people who are new to |ruby| often find that it doesn't take very long to get up to speed with the basics. For example, it's useful to know how to check the syntax of a |ruby| file, such as the contents of a cookbook named \"my_cookbook.rb\"::"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:10
# 963eeb6ce43c4e12bccd00aaff4493d8
msgid "to return::"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:14
# 9d88d7e207dd4e4789a6b609518adeb6
msgid "Here is a quick rundown of some basic |ruby| commands::"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:130
# afa0a9ffbab44e41997ad186b875b1ac
msgid "To learn more about |ruby|, see the following:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:132
# 229967d870974e769a1ccc6963cb3ce0
msgid "|http ruby lang org|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:133
# 1f0647fa72a647369c0af74fcc03d5ef
msgid "|http opscode blog btm ruby|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:134
# 46da6582d9004dcc9ea9b906772f9f41
msgid "|http codeacademy ruby|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:135
# 2d3c78ac3f694a2fae8b5b159a765133
msgid "|http rubycentral book|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:136
# b554cfc176a1483dbf5d4ff65dfde8cc
msgid "|http ruby doc org|"
msgstr ""


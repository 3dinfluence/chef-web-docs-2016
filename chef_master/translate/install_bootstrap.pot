# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_bootstrap.rst:8
# bf64a2f96d8a4f3f9b8c085311285c19
msgid "Bootstrap a Node"
msgstr ""

#: ../source/install_bootstrap.rst:10
# 4f7a44b9b46f4f6392b12f95948748aa
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|. There are two ways to install the |chef client| on a node so that it may be maintained by the |chef client|:"
msgstr ""

#: ../source/install_bootstrap.rst:12
# b0998c042b154753b5f8ac100343376e
msgid "Use the |subcommand knife bootstrap| subcommand to `bootstrap a node using the omnibus installer <http://docs.getchef.com/essentials_nodes_bootstrap.html>`_"
msgstr ""

#: ../source/install_bootstrap.rst:13
# eca960a95caa47fb996015aef6d14714
msgid "Use an unattended install to bootstrap a node from itself, without using |ssh| or |windows remote management|"
msgstr ""

#: ../source/install_bootstrap.rst:16
# a4ce4e617e9e4b54ab646b63b40aa6c2
msgid "``knife bootstrap``"
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:4
# f5873f56ad654f01afdba89bc9d8767b
msgid "The ``knife bootstrap`` command is a common way to install the |chef client| on a node. The default for this approach assumes that node can access the |company_name| website so that it may download the |chef client| package from that location."
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:6
# f2ef5e26840a49eb81ebea576284ff5f
msgid "The |omnibus installer| will detect the version of the operating system, and then install the appropriate version of the |chef client| using a single command to install the |chef client| and all of its dependencies, including an embedded version of |ruby|, |rubygems|, |open ssl|, key-value stores, parsers, libraries, and command line utilities."
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:8
# 523d4bacddeb4b9ebad75d41137a6c6d
msgid "The |omnibus installer| puts everything into a unique directory (|path omnibus install_client|) so that the |chef client| will not interfere with other applications that may be running on the target machine. Once installed, the |chef client| requires a few more configuration steps before it can perform its first |chef client| run on a node."
msgstr ""

#: ../source/install_bootstrap.rst:19
# 8297327bdc714dbcb2bfee16b1383ce0
msgid "**Run the bootstrap command**"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:4
# 94256c3fc41640008f62b6d68e036709
msgid "The |subcommand knife bootstrap| subcommand is used to run a bootstrap operation that installs the |chef client| on the target node. The following steps describe how to bootstrap a node using |knife|."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:6
# bf38ce848cc3425d9aaa311f8944eff2
msgid "Identify the |fqdn| or IP address of the target node. The ``knife bootstrap`` command requires the |fqdn| or the IP address for the node in order to complete the bootstrap operation."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:8
# 1862b8e62b0249cc8aec049275800623
msgid "Once the workstation machine is configured, it can be used to install the |chef client| on one (or more) nodes across the organization using a |knife| bootstrap operation. The ``knife bootstrap`` command is used to |ssh| into the target machine, and then do what is needed to allow the |chef client| to run on the node. It will install the |chef client| executable (if necessary), generate keys, and register the node with the |chef server|. The bootstrap operation requires the IP address or |fqdn| of the target system, the |ssh| credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not |ubuntu|, which is the default distribution used by ``knife bootstrap``) the operating system running on the target system."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:10
# dc29840f16db4eddaa6c88a5d8f0dba8
msgid "In a command window, enter the following:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:16
# dfc031f1379b4394babbbca1bea64778
msgid "where ``123.45.6.789`` is the IP address or the |fqdn| for the node. Use the ``--distro`` option to specify a non-default distribution. For more information about the options available to the |subcommand knife bootstrap| command for |ubuntu|- and |linux|-based platforms, see `knife bootstrap <http://docs.getchef.com/knife_bootstrap.html>`_. For |windows|, the |subcommand knife windows| plugin is required, see `knife windows <http://docs.getchef.com/plugin_knife_windows.html>`_."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:18
# 35d94499aba24877bf69f09cd60928d3
msgid "And then while the bootstrap operation is running, the command window will show something like the following:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:53
# d85361a0fce349dda8cf5fe737186cee
msgid "After the bootstrap operation has finished, verify that the node is recognized by the |chef server|. To show only the node that was just bootstrapped, run the following command:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:59
# bf5cc2472f6c469d97dd9a77d0b44569
msgid "where ``name_of_node`` is the name of the node that was just bootstrapped. The |chef server| will return something similar to:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:69
# 508874cf151445789868347b9858bb6a
msgid "and to show the full list of nodes (and workstations) that are registered with the |chef server|, run the following command:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:75
# b1d3328bb68743f8bcad5dc068f107e5
msgid "The |chef server| will return something similar to:"
msgstr ""

#: ../source/install_bootstrap.rst:24
# f6e4b75f53df4440b525d6cd45bb9870
msgid "Unattended Installs"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:4
# ef212da8689244d6b9b1d5503da81a8c
msgid "The |chef client| can be installed using an unattended bootstrap. This allows the |chef client| to be installed from itself, without using |ssh|. For example, machines are often created using environments like |amazon aws autoscaling|, |amazon aws cloudformation|, |rackspace autoscale|, and |pxe|. In this scenario, using tooling for attended, single-machine installs like ``knife bootstrap`` or ``knife CLOUD_PLUGIN create`` is not practical because the machines are created automatically and someone cannot always be on-hand to initiate the bootstrap process."
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:6
# f0b2870291e34f9d9e28a91c7d7c7c6b
msgid "When the |chef client| is installed using an unattended bootstrap, remember that the |chef client|:"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:8
# 2d9c04e7082441e1b41be9fc7d10c166
msgid "Must be able to authenticate to the |chef server|"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:9
# e3be11bec58349c0b764f622b844de02
msgid "Must be able to configure a run-list"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:10
# c052c781ecd444e39069b2cd461c013a
msgid "May require custom attributes, depending on the cookbooks that are being used"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:11
# d5f87c5a6e9c4453916814df23524c1a
msgid "Must be able to access the |chef validator pem| so that it may create a new identity on the |chef server|"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:12
# 6777c2fa73244e2f9101c8457708917e
msgid "Must have a unique node name; the |chef client| will use the |fqdn| for the host system by default"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:14
# 4fcae81327424881890fbbc0a10a3367
msgid "When the |chef client| is installed using an unattended bootstrap, it is typically built into an image that starts the |chef client| on boot. The type of image used depends on the platform on which the unattended bootstrap will take place."
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:16
# e3334aafe4d844aa825ce7aca6312e7e
msgid "Use settings in the `client.rb file <http://docs.getchef.com/config_rb_client.html>`_---``chef_server_url``, ``http_proxy``, and so on---to ensure that configuration details are built into the unattended bootstrap process."
msgstr ""

#: ../source/install_bootstrap.rst:27
# bfb545f5385d4eb79b26d0bded057b49
msgid "**Setting the initial run-list**"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:4
# 81983a4909574726b1b244624b5fdaa5
msgid "A node's initial run-list is specified using a |json| file on the host system. When running the |chef client| as an executable, use the ``-j`` option to tell the |chef client| which |json| file to use. For example:"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:10
# a84c8250acba4aafa8eb1b72759c5201
msgid "where ``file.json`` is similar to:"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:22
# 3edff8626788414aa79d7fd041cf0cda
msgid "This option may be used to update ``normal`` attributes, but should never be used to update any other attribute type, as all attributes updated using this option are treated as ``normal`` attributes."
msgstr ""


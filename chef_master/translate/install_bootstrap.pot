# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-04 13:15-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_bootstrap.rst:8
# 3bf2891e37424282bca7a6c21e0e7155
msgid "Bootstrap a Node"
msgstr ""

#: ../source/install_bootstrap.rst:10
# afd27b48c8864d95bf80ae103e843025
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|. There are two ways to install the |chef client| on a node so that it may be maintained by the |chef client|:"
msgstr ""

#: ../source/install_bootstrap.rst:12
# f1269c5dea2d447c852ec333141eb156
msgid "Use the |subcommand knife bootstrap| subcommand to `bootstrap a node using the omnibus installer <http://docs.chef.io/chef_client.html#about-bootstrap-operations>`_"
msgstr ""

#: ../source/install_bootstrap.rst:13
# 1643ed16708b4c3ea50400c687972aff
msgid "Use an unattended install to bootstrap a node from itself, without using |ssh| or |windows remote management|"
msgstr ""

#: ../source/install_bootstrap.rst:16
# b2e7f09d58094040afb19342e2563edd
msgid "``knife bootstrap``"
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:4
# 618bee54917447cb97059498d4963b1b
msgid "The ``knife bootstrap`` command is a common way to install the |chef client| on a node. The default for this approach assumes that node can access the |company_name| website so that it may download the |chef client| package from that location."
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:6
# ab57d0ef68364afb950ac613b72c560e
msgid "The |omnibus installer| will detect the version of the operating system, and then install the appropriate version of the |chef client| using a single command to install the |chef client| and all of its dependencies, including an embedded version of |ruby|, |rubygems|, |open ssl|, key-value stores, parsers, libraries, and command line utilities."
msgstr ""

#: ../../includes_install/includes_install_chef_client.rst:8
# f6269aba536e4eef982b34d7c9820fc1
msgid "The |omnibus installer| puts everything into a unique directory (|path omnibus install_client|) so that the |chef client| will not interfere with other applications that may be running on the target machine. Once installed, the |chef client| requires a few more configuration steps before it can perform its first |chef client| run on a node."
msgstr ""

#: ../source/install_bootstrap.rst:19
# c5d94d57ff4b497294d770fd644999ad
msgid "**Run the bootstrap command**"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:4
# 618646d788824fafb1fa4935192ed437
msgid "The |subcommand knife bootstrap| subcommand is used to run a bootstrap operation that installs the |chef client| on the target node. The following steps describe how to bootstrap a node using |knife|."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:6
# eb7c136e8a3846fdb5c26c4dff545cea
msgid "Identify the |fqdn| or IP address of the target node. The ``knife bootstrap`` command requires the |fqdn| or the IP address for the node in order to complete the bootstrap operation."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:8
# 9540a4dc878a48ad9f3807f2643c4997
msgid "Once the workstation machine is configured, it can be used to install the |chef client| on one (or more) nodes across the organization using a |knife| bootstrap operation. The ``knife bootstrap`` command is used to |ssh| into the target machine, and then do what is needed to allow the |chef client| to run on the node. It will install the |chef client| executable (if necessary), generate keys, and register the node with the |chef server|. The bootstrap operation requires the IP address or |fqdn| of the target system, the |ssh| credentials (username, password or identity file) for an account that has root access to the node, and (if the operating system is not |ubuntu|, which is the default distribution used by ``knife bootstrap``) the operating system running on the target system."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:10
# fa0ba466f32d439ab02c502ed019b328
msgid "In a command window, enter the following:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:16
# 45ce0093e7744cad80d59e9ada00799a
msgid "where ``123.45.6.789`` is the IP address or the |fqdn| for the node. Use the ``--distro`` option to specify a non-default distribution. For more information about the options available to the |subcommand knife bootstrap| command for |ubuntu|- and |linux|-based platforms, see `knife bootstrap <http://docs.getchef.com/knife_bootstrap.html>`_. For |windows|, the |subcommand knife windows| plugin is required, see `knife windows <http://docs.getchef.com/plugin_knife_windows.html>`_."
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:18
# c64bfc7a1b13445cbf44ffdd65831581
msgid "And then while the bootstrap operation is running, the command window will show something like the following:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:53
# 3a3f01551ecf48ff855445e18e6b6b35
msgid "After the bootstrap operation has finished, verify that the node is recognized by the |chef server|. To show only the node that was just bootstrapped, run the following command:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:59
# b819b7f256e740c883c1b853443ac08c
msgid "where ``name_of_node`` is the name of the node that was just bootstrapped. The |chef server| will return something similar to:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:69
# 0b20c27e900e4e539543bc77969ae670
msgid "and to show the full list of nodes (and workstations) that are registered with the |chef server|, run the following command:"
msgstr ""

#: ../../step_knife/step_knife_bootstrap_install_chef_client.rst:75
# 906a820b61794a7db4351424a4383d52
msgid "The |chef server| will return something similar to:"
msgstr ""

#: ../source/install_bootstrap.rst:24
# aaa7179769f1451e9d154c31fb710c83
msgid "Unattended Installs"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:4
# 40d484c255b14696b8078e3c261df40a
msgid "The |chef client| can be installed using an unattended bootstrap. This allows the |chef client| to be installed from itself, without using |ssh|. For example, machines are often created using environments like |amazon aws autoscaling|, |amazon aws cloudformation|, |rackspace autoscale|, and |pxe|. In this scenario, using tooling for attended, single-machine installs like ``knife bootstrap`` or ``knife CLOUD_PLUGIN create`` is not practical because the machines are created automatically and someone cannot always be on-hand to initiate the bootstrap process."
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:6
# 472a784142e844898fca09265a3383cb
msgid "When the |chef client| is installed using an unattended bootstrap, remember that the |chef client|:"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:8
# 48ce4b37df0e485da271be08b4401a73
msgid "Must be able to authenticate to the |chef server|"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:9
# 396695b1e04a4dc19f5ebc7af024ee89
msgid "Must be able to configure a run-list"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:10
# 4a1ecc6926094ea3972a292f467e4cab
msgid "May require custom attributes, depending on the cookbooks that are being used"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:11
# c02dbd210b1f4c63b632f69936ca7a4b
msgid "Must be able to access the |chef validator pem| so that it may create a new identity on the |chef server|"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:12
# c0936a9e0e144018b468d04b264f9807
msgid "Must have a unique node name; the |chef client| will use the |fqdn| for the host system by default"
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:14
# 97ec4fd8deda4330a5f1408ff4312178
msgid "When the |chef client| is installed using an unattended bootstrap, it is typically built into an image that starts the |chef client| on boot. The type of image used depends on the platform on which the unattended bootstrap will take place."
msgstr ""

#: ../../includes_install/includes_install_chef_client_unattended_bootstrap.rst:16
# 1a770fbad3e34fcd94f807e133045c87
msgid "Use settings in the `client.rb file <http://docs.getchef.com/config_rb_client.html>`_---``chef_server_url``, ``http_proxy``, and so on---to ensure that configuration details are built into the unattended bootstrap process."
msgstr ""

#: ../source/install_bootstrap.rst:27
# ce6a419928074d78bae828476da888a8
msgid "**Setting the initial run-list**"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:4
# f1bdf9a3ccd34bafa7b1a9395f89017e
msgid "A node's initial run-list is specified using a |json| file on the host system. When running the |chef client| as an executable, use the ``-j`` option to tell the |chef client| which |json| file to use. For example:"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:10
# 5887bde84f0845df8e0ef89241ddd5cd
msgid "where ``file.json`` is similar to:"
msgstr ""

#: ../../step_ctl_chef_client/step_ctl_chef_client_bootstrap_initial_run_list.rst:22
# 37e62463fe3e4b2da253fc668f2d33c3
msgid "This option may be used to update ``normal`` attributes, but should never be used to update any other attribute type, as all attributes updated using this option are treated as ``normal`` attributes."
msgstr ""


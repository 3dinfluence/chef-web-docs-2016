# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-02 10:51-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/getting_started.rst:8
# c22203ada0fc4b03a1e9bf0af6f36fe2
msgid "Getting Started"
msgstr ""

#: ../source/getting_started.rst:10
# 967f9431a47e48f2b37abe5148fa3713
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# bc044a87641b4fbc9f640d116e5b4243
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether you’re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 0017df24d33d40af8af3b7c07bf0d4cf
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 32a07e4dd70a4dcbba4f209a3d436807
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:5
# b57c43947b544f8f8bfee05b7a49e493
msgid "A resource is a statement of configuration policy. It describes the desired state of an element of your infrastructure, along with the steps needed to bring that item to the desired state. Each resource statement in a |chef| recipe corresponds to a specific part of your infrastructure: a file, a template, a directory, a package, a service, a command to be executed, and so on. Each resource statement includes the resource type (such as “file” or “package”), its name, any attributes that specify additional details, and an action that tells the |chef client| what how to implement the configuration policy."
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:7
# 37df1f0981d849929b196df08a37077e
msgid "Together, resources describe all the components in your network. Recipes group resources together and describe working configurations. Add recipes to a run-list to describe the desired state for every node to which that run-list is assigned. Cookbooks are collections of recipes and are stored on the |chef server|."
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 02cb7b2b8fe845f3b7df27d9df209a1a
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../source/getting_started.rst:19
# 6fd7547fc80547d1b8c685c49230abcf
msgid "Workstation Setup"
msgstr ""

#: ../source/getting_started.rst:20
# 155c2d34ad784714b264386f2abfa41e
msgid "The |chef dk| is a package that contains everything you need to start using |chef|, along with a collection of tools and libaries that can help manage the code you are using to run your business."
msgstr ""

#: ../source/getting_started.rst:23
# 0ba99634a9f145e2ae9162edd6e01968
msgid "Install the |chef dk|"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:4
# 981073e136064649a3aef500cf4e45ff
msgid "To install the |chef dk|:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:6
# c30a2b40c61e459b9a4de585af0a0c73
msgid "Visit this page: http://www.getchef.com/downloads/chef-dk/."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:7
# 920a5013fe274f018e1ad541cb724a2d
msgid "Select a platform, and then a package. (|chef docs| uses the |mac os x| setup within the documentation.)"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:8
# fdb2bcca6c274c15aeb03b3c05bdcf54
msgid "Click the download button."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:9
# 32f7779ebf5b4aa586d8942391993bfe
msgid "Follow the steps in the installer and install the |chef dk| to your machine. The |chef dk| is installed to ``/opt/chefdk/`` on |unix| and |linux| systems."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:10
# 28719ac5ac074586be19e87e97b3f664
msgid "When finished, open a command window and enter the following:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:16
# 57b06229138748b5b0442b215a4038ed
msgid "This will verify the main components of the |chef dk|: the |chef client|, the |chef dk| library, and the tools that are built into the |chef dk|. The output should be similar to:"
msgstr ""

#: ../source/getting_started.rst:27
# 0e0414613f314c99b5b69d618def748e
msgid "What's in the |chef dk|?"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools.rst:4
# 285b88e3db3d4acb9e60556eceb4c59f
msgid "The |chef dk| installs a collection of tools and libraries into a single directory structure, which makes it easier to manage any dependencies these tools may have on each other and the dependencies that |chef| has on |ruby|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:4
# 22b060a08bad4c61982c9f32c96d2e12
msgid "The most important tools included in the |chef dk| are:"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:10
# 25a5a6e3c08d4eb5a152de66727216d4
msgid "Tool"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:11
# 3119aadbc9ac4e118024ff302fdc6672
msgid "Description"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:12
# b858396b97d24c0583f2a595e02b1bb8
msgid "|berkshelf|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:13
# fad457b341fe44d19fb8de4ff592a712
msgid "A dependency manager for cookbooks."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:14
# 480f8d8ed0f2410cae1567fa60c70db6
msgid "|chef ctl|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:15
# 225fbbe6188d4fd9bf360f33bad62680
msgid "A workflow tool for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:16
# 1ed0ead74eb043bfbf5ef950273ae81f
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:17
# 810dc00f2d00451987393c73f99ad039
msgid "The agent that runs |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:18
# 2399bf0a3500492e8c9de7572b9d5130
msgid "|chef dk|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:19
# d3a64b92f08948beb2d3a2cf63979ed5
msgid "The |chef dk| omnibus package."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:20
# 67e83e6ed38f417eafdfa220d2eeff92
msgid "|chef spec|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:21
# a21cc50290be4c5c970a2d231ca4db61
msgid "A unit testing framework that tests resources locally."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:22
# a9659a57f3b441fca40c2ae03f537c8f
msgid "|ruby|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:23
# c958ff90912b4bfc952e9a48425f2704
msgid "The reference language for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:24
# 404003c6c3234e618ae84713eeaa3a00
msgid "|kitchen|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:25
# 9ed2f480394a454b955ecc4f7eaa8642
msgid "An integration testing framework tool that tests cookbooks across platforms."
msgstr ""

#: ../source/getting_started.rst:33
# 48507f80abbb4c3596b36b7a09f0ff26
msgid "Set the System |ruby|"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:3
# fcda10e9d0e94d0a9fed62fabf566973
msgid "For many users of |chef|, the |chef dk| the version of |ruby| that is included in the |chef dk| should be configured as the default version of |ruby|."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:5
# 7e84170d86a442618004c354275be021
msgid "Open a command window and enter the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:11
# 6e3677b1d8cf4e2d897655e4ba63ab2a
msgid "which will return something like ``/usr/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:12
# e27e4b09b33f49189f73d4f03044999a
msgid "To use the |chef dk| version of |ruby| as the default |ruby|, edit the ``$PATH`` and ``GEM`` environment variables to include paths to the |chef dk|. For example, on a machine that runs |bash|, run:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:18
# 5342a33fe6744fb1928d09539134e2e0
msgid "or if the version of the |chef dk| you are running has the ``chef shell_init`` command:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:24
# d38ae5577456431f8bcb8894dc365641
msgid "where ``bash`` and ``~/.bash_profile`` represents the name of the shell."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:26
# 163e90fd7da443e18aab597c97b2ad03
msgid "Run ``which ruby`` again. It should return ``/opt/chefdk/embedded/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:28
# 052c515588cf420cb4ba40368d34ad8d
msgid "Using the |chef dk|-provided |ruby| as your system |ruby| is optional. This just depends on how you are using |ruby| on your system. For many users, |ruby| is primarily used for authoring |chef| cookbooks and recipes. If that's true for you, then using the |chef dk|-provided |ruby| as your system |ruby| is recommended. But for other users who are already using tools like |rbenv| to manage |ruby| versions, then that's OK too."
msgstr ""

#: ../source/getting_started.rst:37
# fdbc5b7663ec4f59876f37446ebc9dd4
msgid "Your First Cookbook"
msgstr ""

#: ../source/getting_started.rst:39
# de2417c0b48940ca9c5104a395c9c20b
msgid "We have already used the |chef ctl| ``verify`` subcommand to verify the installation of the |chef dk|. Now let's use the |chef ctl| ``generate`` subcommand to create the |chef repo|, which is the main folder in which your |chef| code will be stored. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:45
# 457ba5d10d88444ab1685592952f3221
msgid "where ``name`` is a name that you have chosen for the both the |chef repo| and the default cookbook. We are calling ours ``chef-repo``; you can call yours whatever you want. (We also renamed the default cookbook to ``chefdocs``, which is totally optional.) You should have a directory structure at ``/Users/your_username/cookbook_name/`` similar to::"
msgstr ""

#: ../source/getting_started.rst:61
# 487c695ac914486d921d235d632742fd
msgid "Run the |chef client|"
msgstr ""

#: ../source/getting_started.rst:62
# 17ad16660c9a4603b03861cd4d83343d
msgid "The |chef client| includes a mode called \"local mode\", which runs the |chef client| locally on your machine. Local mode allows you to run recipes and work locally with the code you are using to run your business. Local mode does not require a connection to a |chef server|, public or private keys, or configuring of nodes. (Though we'll do all of these things later!) Many people use local mode for simple, local testing of recipes and cookbooks, often as a pre-cursor to running unit and integration tests against the same recipes and cookbooks."
msgstr ""

#: ../source/getting_started.rst:64
# 77f3078dac1d4791b40455daeba18dc7
msgid "Open the ``default.rb`` recipe in the cookbook you just created. Add the following resource to that recipe:"
msgstr ""

#: ../source/getting_started.rst:72
# f596b6998d7948958779a5b7d1089c4d
msgid "This recipe creates a file called ``test.txt`` at the path defined by the ``HOME`` environment variable. (To view that path, run ``echo \"$HOME\"`` in the command shell.)"
msgstr ""

#: ../source/getting_started.rst:74
# d3e7f5ed076a40189f8f20219d0d508d
msgid "Next, we'll run the |chef client|. This is done via the command line and from within the |chef repo|. Use the ``--local-mode`` flag to run the |chef client| in local mode. Use the ``--override-runlist`` flag to run only the recipe we have just created. (More about the run-list later.) For a cookbook's default recipe, only the name of the cookbook needs to be specified, as that maps to the default recipe. The following command will create the file ``test.txt``:"
msgstr ""

#: ../source/getting_started.rst:80
# 970c9cfcd8604992a17a78d88015972e
msgid "where ``chefdocs`` is the name of your cookbook."
msgstr ""

#: ../source/getting_started.rst:82
# fe33a7cb93f64ad4819e9deadcd89458
msgid "As the |chef client| adds the file to your system, output similar to the following is shown:"
msgstr ""

#: ../source/getting_started.rst:113
# 32dd6ccf97574beda49c75e94333bda9
msgid "That's it. The warnings, for the moment, can be ignored. Check the root of the path defined by the ``HOME`` environment variable and find the file named ``test.txt``. The file should contain ``This file created by Chef!``."
msgstr ""

#: ../source/getting_started.rst:115
# cf4e709ce58a40b080d37a41a469ccbe
msgid "# We'll come back to working with |chef| later on, but the next step is to familiarize yourself with resources and cookbooks."
msgstr ""

#: ../source/getting_started.rst:118
# 2c662c95b4a84f65818dc2a1d8573dd4
msgid "About Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# b508503bb37b48f29620246c6e825a7e
msgid "A `resource <http://docs.opscode.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../source/getting_started.rst:121
# cec124dd49b949cfbb1bc4071fd185f5
msgid "The |chef client| includes many built-in resources, but several of them are used much more often than others: |resource execute|, |resource directory|, |resource package|, |resource service|, |resource file|, |resource template|, |resource user|, |resource script|, and |resource scm_git|."
msgstr ""

#: ../source/getting_started.rst:123
# b3c621df0f304e3ebfce775e15b6978f
msgid "For the full list of built-in |chef| resources, see `Resources <http://docs.opscode.com/resource.html#resources>`_. You can also `create your own resources <http://docs.opscode.com/lwrp_custom.html>`_ or `use the resources built into the community cookbooks <http://supermarket.getchef.com>`_."
msgstr ""

#: ../source/getting_started.rst:125
# 75f5d68628f6487f8e6910dfb4546c0e
msgid "See the sections below for quick overviews of the most popular resources, plus links to the individual reference pages for each of them."
msgstr ""

#: ../source/getting_started.rst:128
# 7f1e977a70f148dabbae83be2911e1b9
msgid "Execute Commands"
msgstr ""

#: ../source/getting_started.rst:129
# c10bee2d5c74405b85ac65510ebfc94c
msgid "Commands are executed using the |resource execute| resource using an attribute to specify the actual command to run. See :doc:`execute </resource_execute>` for more information about executing commands."
msgstr ""

#: ../source/getting_started.rst:132
# d62f6c0882ce4ecc94df4637ca7c95bd
msgid "Manage Directories"
msgstr ""

#: ../source/getting_started.rst:133
# bb3ad5e1fd0d46a9b7c458ca9f26f8ea
msgid "Directories are hierarchies of folders that comprise all the information stored on a computer. There are two ways to manage directories. The first is via the |resource directory| resource, which manages directories starting from the root directory. And the second is the |resource remote_directory|, which transfers directory structures defined in cookbooks to nodes. See :doc:`directory </resource_directory>` for more information about managing directories. If the directory is defined in a cookbook, use :doc:`remote_directory </resource_remote_directory>` instead."
msgstr ""

#: ../source/getting_started.rst:136
# 09a012b7f1234fc689b85195d651c396
msgid "Manage Packages"
msgstr ""

#: ../source/getting_started.rst:137
# e9f5cb432c424f1ca00de641cf927bd2
msgid "Packages are collections of files that comprise software applications or some part of an operating system. Use the package resource to manage these packages, unless they are sourced via |rubygems| and installed directly from within recipes or are sourced from a cookbook. See :doc:`package </resource_package>` for more information about managing packages. There are quite a few platform-specific package resources as well, though most of the time simply using the |resource package| is all that's necessary. For packages that are located in cookobooks, use :doc:`chef_gem </resource_chef_gem>`. And for packages that are only included via recipes, use :doc:`gem_package </resource_gem_package>`."
msgstr ""

#: ../source/getting_started.rst:140
# 65d71b96c79d4e9ea410007f14fab724
msgid "Manage Services"
msgstr ""

#: ../source/getting_started.rst:141
# e6ac705ad2e643eebbe1b475fbf1b8ad
msgid "Services can be started, stopped, enabled, disabled, reloaded, and restarted. See :doc:`service </resource_service>` for more information about managing services."
msgstr ""

#: ../source/getting_started.rst:144
# e9681a9ae79043f895931899a8d763c3
msgid "Manage Files"
msgstr ""

#: ../source/getting_started.rst:145
# e4fae63e23324d9db1566ba1ccffeab7
msgid "Files are managed in several ways. The |resource file| resource manages files that are already present on a node. Files are transferred to nodes from cookbooks using the |resource cookbook_file| resource and are transferred to nodes from remote locations using the |resource remote_file| resource. See :doc:`file </resource_file>` for more information about managing files, :doc:`remote_file </resource_remote_file>` for transferring files from remote locations, and :doc:`cookbook_file </resource_cookbook_file>` for transferring files that are located in cookbooks."
msgstr ""

#: ../source/getting_started.rst:148
# e8a875307bb1418f83a64fb397c8387e
msgid "Manage Templates"
msgstr ""

#: ../source/getting_started.rst:149
# d76769bae08f4104a60ad529178b98f0
msgid "Templates are used to generate files based on variables and logic contained within the template file. |chef| uses |erb| templates and |ruby| expressions and statements to define the template file. Template source files must be located within cookbooks. See :doc:`template </resource_template>` for more information about managing files using |erb| templates."
msgstr ""

#: ../source/getting_started.rst:152
# dcf418db8b404b368d3703ccbce62326
msgid "Manage Users, Groups"
msgstr ""

#: ../source/getting_started.rst:153
# e9f0da7fa92e4f2a969162e032ec8f6f
msgid "Users and groups can be added, updated, removed. User passwords can be locked and unlocked. See :doc:`user </resource_user>` for more information about managing users and user passwords. The :doc:`group </resource_group>` resource manges groups."
msgstr ""

#: ../source/getting_started.rst:156
# 3b3f34e52b7d4d31b2a1bdba83d5df12
msgid "Use Script Interpreters"
msgstr ""

#: ../source/getting_started.rst:157
# 05f25b36376e4055ac1632481006bc20
msgid "Script interpreters execute scripts on a node, similar to the |resource execute| resource, and with the ability to specify the interpreter that the |chef client| should use. See :doc:`script </resource_script>` for more (general) information about using scripts in recipes. Interpreter-specific resources are available, with :doc:`bash </resource_bash>` being the most popular. Also available: :doc:`csh </resource_csh>`, :doc:`perl </resource_perl>`, :doc:`powershell_script </resource_powershell_script>`, :doc:`python </resource_python>`, and :doc:`ruby </resource_ruby>`. Two |windows|-specific resources are also available: :doc:`batch </resource_batch>` and :doc:`powershell_script </resource_powershell_script>`."
msgstr ""

#: ../source/getting_started.rst:160
# 36d2c24f527a465b9198b98230f5b615
msgid "Use Source Control"
msgstr ""

#: ../source/getting_started.rst:161
# 4800707dbc624c83ac65c8c1952abfb4
msgid "Most users of |chef| keep their code in some type of version source control. |chef| can interact with this code from recipes. |git| is a very popular choice. The :doc:`git </resource_git>` resource is used to manage files that exist in a |git| repository. There is also a resource for :doc:`subversion </resource_subversion>`, another popular version source control tool."
msgstr ""

#: ../source/getting_started.rst:164
# 9d6c021313264a56b20a44fcc2f758bd
msgid "About Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 645d38439d6c436d8ed5f9adc2158c06
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 17985d860d7b4297b4a3054df2ad0eb2
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 03faf2ef330a4079a5663a5af3e33db1
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# a533393d784e42e39def503ff158f44f
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# ed1bf69fda6b4b9c99e8fd64fe3f21a5
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# afda052921dc45faa2c311c223fe82c0
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 6efdf8363f96468aa60479826f887fbd
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 6e647e8669ab4f49a469fb5f3d50c98a
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 32e01388be6d4cb0a75aeaba3f27b46d
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 2d3c7931826449f390f69b08acbbbfbe
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/getting_started.rst:167
# a1c76142b94b4ba88dfb68a769f8679d
msgid "Every cookbook follows a defined structure, but individiaul cookbooks can take on many different styles depending on how your organization wants to manage its code, who authored them, and how they are intended to be used. Some cookbooks contain only a single, default recipe. Others may contain only a library file. Some may contain only a few attributes. And other cookbooks may contain several custom resources along with many attributes and templates, and so on."
msgstr ""

#: ../source/getting_started.rst:169
# 9d48267dc50643fcbb415a04816d1c26
msgid "Some cookbooks you will build yourself. Some cookbooks will be provided by the community. Most community cookbooks will be managed using |berkshelf|, which is a dependency manager included in the |chef dk|. Occasionally, a community cookbook will be forked, but more often a wrapper cookbook is created to handle your organization-specific requirements while still allowing use of the community cookbook."
msgstr ""

#: ../source/getting_started.rst:171
# 70d00177cb8d48f4922b47d6e75cac22
msgid "The most important thing to know about cookbooks is that there are lots of ways to build good ones. There are patterns to follow, there are guidelines. There are recomended ways of dealing with attributes. There are recommended ways of creating custom resources. But ultimately, a good cookbook is the one that works for your organization. Ideally, this cookbook works across your infrastructure. Most organizations have a mix of private (internal) and public (community) cookbooks in use in their organization."
msgstr ""

#: ../source/getting_started.rst:174
# 3a130baa52a149269f1d4c8f28c88730
msgid "Cookbook Patterns"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:6
# 441c65a22f1a42af844a6778ab03d0fa
msgid "A primary goal of cookbook authoring is to create cookbooks that are reusable as building blocks, where each cookbook defines a specific configuration piece used by the organization. For example, say all servers across the organization will run |cron| and |ntp|, but only front-end servers in production will be load balanced. This building block approach relies on some basic guidelines:"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:8
# 971a3a1b10194f0b916a1f71219448bb
msgid "All cookbooks are kept in version source control"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:9
# 49ee10f05e7a42ebba32d106e70ea255
msgid "Cookbooks are never forked from their |github| repositories"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:10
# 69fbb3176f23469690b52018131f24d2
msgid "Cookbooks may be kept in the |chef repo|, but are typically kept in their own dedicated repositories outside of the |chef repo|"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:11
# bff80e8c431f4811bf66e4fe0cf042f1
msgid "Cookbooks are kept as small as possible and are focused on specific configuration targets, with changes to cookbooks tracked as versions of that cookbook"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:12
# 2bd0859aced748119ef14f3c05443935
msgid "Cookbooks are better when unit and integration testing is done against them, automatically"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:13
# 4a78a765d6134614af1baad14ea91667
msgid "When a cookbook is uploaded to the |chef server|, it is versioned and that version is frozen"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:14
# 0b1f29ff618e4f21a005aea912c5984d
msgid "Community cookbooks are a great resource; often a community cookbook can be used wholesale (without changes), but sometimes a community cookbook needs a wrapper that is used to ensure specific organizational requirements are met"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:15
# ab487af9c6ea45de93e15abb96e46b50
msgid "Recipes in cookbooks should be modular, minimally prescriptive, and use custom resources to expose repeatable patterns that are needed to solve implementation-specific requirements"
msgstr ""

#: ../source/getting_started.rst:178
# 63415ccc358b4d58bda4dbbb5b490079
msgid "|kitchen| Setup"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# e52529d371cb4390ab12e9d94d9a6a2d
msgid "|kitchen| is an integration framework that is used to automatically test cookbook data across across any combination of platforms and test suites, as defined by a |kitchen yml| file. |kitchen| uses a driver plugin architecture that allows it to support cookbook testing across many cloud providers and virtualization technologies. |kitchen| supports all of the common testing frameworks used by the |ruby| community."
msgstr ""

#: ../source/getting_started.rst:181
# 234da0619088427fb4b76091a4292b17
msgid "You will need some type of virtualization software for |kitchen|. |vagrant| is the default driver for |kitchen|. Install |vagrant|. |vagrant| requires |virtualbox|, so install |virtualbox|. Once you're ready, we'll keep using the same cookbook created earlier."
msgstr ""

#: ../source/getting_started.rst:184
# ccfd4c0c5f7d482c9040a4c7d24471ba
msgid "Update Metadata"
msgstr ""

#: ../source/getting_started.rst:185
# de336769c82d4e459c9a98113861e4fc
msgid "In that cookbok, let's update the metadata. Open the ``metadata.rb`` file. It will look similar to:"
msgstr ""

#: ../source/getting_started.rst:197
# a38c395d90d94f6db48887a974649522
msgid "for now, let's just update the name and version settings, like this:"
msgstr ""

#: ../source/getting_started.rst:205
# 93dfc37b6dc9438ebc57bc8436a0f5ac
msgid "Verify |kitchen yml|"
msgstr ""

#: ../source/getting_started.rst:206
# aa78526b95a04c1d954ae97244b2def5
msgid "Because |kitchen| is installed as part of the |chef dk|, the |kitchen yml| file is already created:"
msgstr ""

#: ../source/getting_started.rst:227
# 2f7641cb4f3d4bc6854daa8d535df3e2
msgid "Let's change the default provisioner to |chef zero|:"
msgstr ""

#: ../source/getting_started.rst:240
# ec5412bda0684cfab86f1f21c95d8609
msgid "and also make sure the |kitchen yml| knows about the default recipe in your cookbook. Under ``suites``, make sure the ``run_list`` contains the name of your cookbook. For example:"
msgstr ""

#: ../source/getting_started.rst:250
# 3602b11e12fd4bada0ab7a6e093f7fa4
msgid "where ``chef-repo`` is the name of your cookbook. This will ensure that |kitchen| uses this recipe when converging."
msgstr ""

#: ../source/getting_started.rst:252
# 7933083527dc40b0abe81315b4ca5a7d
msgid "Also, |kitchen| has been added to gitignore, thor, etc. files. We just need to create the directory in which tests will be authored. This is typically a sub-directory of ``/cookbooks`` called ``/tests``. The structure underneath ``/tests`` may be customized, but is typically something like ``/test/integration/default``."
msgstr ""

#: ../source/getting_started.rst:254
# 7582f9735c254f368f583e67c015a4b8
msgid "For now, we don't need to do anything else to get started using |kitchen|."
msgstr ""

#: ../source/getting_started.rst:257
# 8a3177345f744891a415a6d5bfff5072
msgid "View Instance List"
msgstr ""

#: ../source/getting_started.rst:258
# 0b0f4c65211c46a58457cab12e31518f
msgid "From your working directory, run the following command:"
msgstr ""

#: ../source/getting_started.rst:264
# ca380159a3674d6482d7d50c22af9330
msgid "which will return something similar to:"
msgstr ""

#: ../source/getting_started.rst:272
# 98bd0c9fc52247a2a9e0cd950f4a0439
msgid "So there are two available platforms---|ubuntu| 12.04 and |centos| 6.4---configured to use the |vagrant| driver (which is enabled via the ``kitchen-vagrant`` driver that is built-in to the |chef dk|), and to run |chef zero| while running tests."
msgstr ""

#: ../source/getting_started.rst:275
# f9c84d147ef24365a5857c9c4805cc1f
msgid "Create |centos| Instance"
msgstr ""

#: ../source/getting_started.rst:276
# ee8504003f754f84b0ca91376b3fdba2
msgid "Let's create an instance. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:282
# f345943d00754079a99a8b7a8408ace6
msgid "This will start |vagrant|, which will then build a machine that rubs |centos| 6.4. (If this is the first time you're running |kitchen|, then |centos| needs to first be downloaded from the default instance location and may take a few minutes.)"
msgstr ""

#: ../source/getting_started.rst:318
#: ../source/getting_started.rst:377
#: ../source/getting_started.rst:508
# edde4b4209e745f0ba1e8c9719a1611e
# 40ad452bf88d495cbc74472a253eb642
# 6bd5d48126334ca2b7c271cc276fe14d
msgid "Verify Instance List"
msgstr ""

#: ../source/getting_started.rst:319
# c5d41db3102a4c77bc88d1edcc7fe254
msgid "Re-run the following command:"
msgstr ""

#: ../source/getting_started.rst:325
# 13e1386daef949e5b8ff0def921280e7
msgid "and you will see the following:"
msgstr ""

#: ../source/getting_started.rst:334
# 3dc206ac2ee148488e8a4921f2d8e404
msgid "Create |ubuntu| Instance"
msgstr ""

#: ../source/getting_started.rst:335
# 968449873b47407d8be88315d94a2f63
msgid "Now let's create the |ubuntu| instance:"
msgstr ""

#: ../source/getting_started.rst:341
# 5c92a2de44a54b4c9cabc06b26380b63
msgid "this may also take a few minutes, but will (eventually) return something similar to:"
msgstr ""

#: ../source/getting_started.rst:378
#: ../source/getting_started.rst:509
# 01e5099d38d54d788b6159ad939818c3
# de9efe4bcd1641049e6ca41390f20a04
msgid "Re-run:"
msgstr ""

#: ../source/getting_started.rst:390
# d45ef6567397411582d5ea8eaac31fd7
msgid "and now we're all set up! We're going to use the same recipe and cookbook that we already created."
msgstr ""

#: ../source/getting_started.rst:393
# 2ae6831d13b7444d9e0ef7aa0c9141de
msgid "Converge |centos|"
msgstr ""

#: ../source/getting_started.rst:394
# 313de985ee864c4f919eab3c96e8f9db
msgid "Now that we're all configured and ready to run |kitchen|, let's try it in |centos|:"
msgstr ""

#: ../source/getting_started.rst:400
# f7be641bf4e242c2ad91d2890bd6198a
msgid "The first time you run this, it'll have to download the |chef client| and will show something similar to the following while it converges the node via |kitchen|:"
msgstr ""

#: ../source/getting_started.rst:451
# 374fe50bd89c4892ac8b9627eec4c018
msgid "Converge |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:452
# df3b7d29707c4022b74a387bf5b5c71b
msgid "Now let's try it in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:458
# eafc511755d146d397bb4c818cab8832
msgid "Like |centos|, the |chef client| will need to be downloaded:"
msgstr ""

#: ../source/getting_started.rst:521
# 16fb82c80a394669871011936f430eee
msgid "Now you can test your cookbooks by running them in a virtual instance on multiple platforms."
msgstr ""

#: ../source/getting_started.rst:524
# e07b874bb30549ec9e9bf04a01dd00a8
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 4447bea71ed741e6a197f941ccf35cd9
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# f8f08b801c554ad9bc51e5b541221f63
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/getting_started.rst:530
# ceda16c83c2b4b8aa7747358f22c98d6
msgid "For more information ..."
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:5
# 85980faed4144c37b7c2e4e2abda873b
msgid "For a history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:7
# 7bf159f58bee4dc0a8a468412030fef5
msgid "Part one: |url opscode_youtube_short_part_one|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:8
# b46e7f6d9ea54155ba40c0eef8527c4c
msgid "Part two: |url opscode_youtube_short_part_two|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:10
# 9f415159983349fa8b27784581e52caf
msgid "For more information about |company_name|, cookbooks, and the community:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:12
# 7af09058914b47f9be07bcbb9e210df4
msgid "|url opscode|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:13
# 5c1c3a29725b484492b70bda078bbbdf
msgid "|url opscode_community|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:14
# 094205cb15bc450abd3e6197227e1c54
msgid "|url opscode_community_cookbooks|"
msgstr ""


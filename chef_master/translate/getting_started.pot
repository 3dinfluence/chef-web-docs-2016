# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/getting_started.rst:8
# 5c13352670934bdb876a4af929e609aa
msgid "Getting Started"
msgstr ""

#: ../source/getting_started.rst:10
# 8fd1560239ab43a4b04d1c4b9e0a52a5
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# cebb57dd39374a0a94506e823b0c6d19
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 0772c28840b140fea8f3b139b6406f76
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/getting_started.rst:14
# 43e439ab07e5456081f9a17a281cc775
msgid "This topic is a work in progress. It needs some editing, but you should be able to install the Chef DK and then configure Kitchen to build CentOS and Ubuntu instances, and then converge a node using the NTP cookbook. More sections are planned for future updates that will include more scenarios for Kitchen, new scenarios for ChefSpec, Berkshelf, and Chef policy. Feedback on the getting started page may be sent to docs @ getchef dot com."
msgstr ""

#: ../source/getting_started.rst:17
# f8c7558d44364473aa6b654b053d9bbe
msgid "About Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:5
# f5eee59b1cc54a3aa3781c5dbe38996a
msgid "A resource is a statement of configuration policy. It describes the desired state of an element of your infrastructure, along with the steps needed to bring that item to the desired state. Each resource statement in a |chef| recipe corresponds to a specific part of your infrastructure: a file, a template, a directory, a package, a service, a command to be executed, and so on. Each resource statement includes the resource type (such as ``template``, ``service`` or ``package``), its name, any attributes that specify additional details, and an action that tells the |chef client| how to implement the configuration policy."
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:7
# 38a53edc6a1c42938c7e768d6d2b68dd
msgid "Together, resources describe all the components in your network. Recipes group resources together and describe working configurations. Add recipes to a run-list to describe the desired state for every node to which that run-list is assigned. Cookbooks are collections of recipes and are stored on the |chef server|."
msgstr ""

#: ../source/getting_started.rst:20
# 6548fe6159c74d8689f65c58a2aa267b
msgid "The |chef client| includes many built-in resources that handle just about any situation. Three of these resources are an essential part of any |chef| workflow: |resource package|, |resource template|, and |resource service|. Use the |resource package| resource to install a package, the |resource template| resource to generate a file on the node that applies configuration settings for that package, and then use the |resource service| resource to start (or restart) the service associated with that package. This is a combination of resources that you will use often with |chef|."
msgstr ""

#: ../source/getting_started.rst:22
# 1d3dd1b364a34717ae2472311db4b533
msgid "The next step is to install |chef|, configure your workstation, and then configure |kitchen| to run virtual instances locally on that workstation. After that is finished, we'll revisit the |resource package|, |resource template|, and |resource service| resources and use them with |kitchen| to converge |ntp| into a virtual instance that is spun up and managed by |kitchen|."
msgstr ""

#: ../source/getting_started.rst:25
# 77823cc13595489492493b5ccc84b8cb
msgid "Workstation Setup"
msgstr ""

#: ../source/getting_started.rst:26
# 083ac0fe0c1b443ea9aa85f042708502
msgid "The |chef dk| is a package that contains everything you need to start using |chef|, along with a collection of tools and libaries that can help improve the code you are using to run your business."
msgstr ""

#: ../source/getting_started.rst:29
# 79bee50de5544ca8b3dc2722d9a57aec
msgid "Install the |chef dk_title|"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:4
# 9eff5832938c4c3690f7d01f7af1a4e9
msgid "To install the |chef dk|:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:6
# 0fe076cb87a34cf2830e7c2c934c4ab6
msgid "Visit this page: http://downloads.chef.io/chef-dk/. The |chef dk| supports |mac os x|, |redhat enterprise linux|, |ubuntu|, and |windows|."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:7
# 1fa88dcea21841239cb54f481b7cd717
msgid "Select a platform, and then a package. (|chef docs| uses the |mac os x| setup within the documentation.)"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:8
# 33144f2afa8f4db485b968b99bbb81a6
msgid "Click the download button."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:9
# 3e77b4b2bb90440489b51b95c839ec1d
msgid "Follow the steps in the installer and install the |chef dk| to your machine. The |chef dk| is installed to ``/opt/chefdk/`` on |unix| and |linux| systems."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:10
# e486a9f660a643f099157ca725a14a8e
msgid "When finished, open a command window and enter the following:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:16
# 2dce34b1c95b41b69580be8e31995bd8
msgid "This will verify the main components of the |chef dk|: the |chef client|, the |chef dk| library, and the tools that are built into the |chef dk|. The output should be similar to:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:25
# 6f1d9f1e913844b8be37249b0b04294d
msgid "Optional. Set the default shell. On |windows| it is strongly recommended to use |windows powershell| and cmd.exe."
msgstr ""

#: ../source/getting_started.rst:33
# 284010131e694da0836250ed258b6b1c
msgid "What's in the |chef dk_title|?"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools.rst:4
# 89ba5888aa174fdc9a1e97f9bed9c071
msgid "The |chef dk| installs a collection of tools and libraries into a single directory structure, which makes it easier to manage any dependencies these tools may have on each other and the dependencies that |chef| has on |ruby|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:4
# 6b93a4bf97d544ad8ef1a573bcba1420
msgid "The most important tools included in the |chef dk| are:"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:10
# 2baca384546a49489278554517cc7ff1
msgid "Tool"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:11
# 5898f90d60d545e7af438e1b7ed04c59
msgid "Description"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:12
# 4bd440e3706f4d71a5984e6836171c84
msgid "|berkshelf|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:13
# 832fc447396e43e296ceffbb5b1c90c0
msgid "A dependency manager for cookbooks."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:14
# 4159be4b48524c578c329aeb282d6754
msgid "|chef ctl|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:15
# 151de98a7a5746a2934f3aa297f39032
msgid "A workflow tool for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:16
# 0eceab75de9d4859a0c8428939b79ffb
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:17
# 8c06cec403204991a7435b8b5363e119
msgid "The agent that runs |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:18
# 91e75260c8854bf3a904a0e7bf0eef01
msgid "|chef dk_title|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:19
# b3cbf3f78ffc46c7928c531a60b5d92d
msgid "The |chef dk| omnibus package."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:20
# d6b74beee5ff4707b9eb4476e745e879
msgid "|chef spec|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:21
# 4968186d867540d9bbf0d78319a41ec8
msgid "A unit testing framework that tests resources locally."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:22
# a5296e95ea564f34bf35af78111a3725
msgid "|fauxhai|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:23
# 26d651cd7939436f80b6056fb70fd537
msgid "A gem for mocking |ohai| data."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:24
# 979a3f38c0284e14a22c6b1cbf310cfa
msgid "|foodcritic|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:25
# 60b761c182844330bab1e89d15868931
msgid "A lint tool for static analysis of recipe code."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:26
# afad0cde7a08491eaf7a04c19723dae2
msgid "|kitchen|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:27
# 87ab31ce5318413d92e8b756fa76a2f7
msgid "An integration testing framework tool that tests cookbooks across platforms."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:28
# c6e5d6b3b82a4a0686f33bc5d5161a49
msgid "|kitchen_vagrant|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:29
# df4321623a0a4d34b87dcff40113ddaa
msgid "A |kitchen| driver for |vagrant|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:30
# fdd013c4c92a4bdb94ffc01399bb371e
msgid "|knife spork|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:31
# 85dfe007ea20416ba0cb7c6df506cbc1
msgid "A workflow plugin for |knife| that helps groups of people work together in the same |chef repo| and |chef server|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:32
# 9a4c4c9d869f49cb934a1fc397dd2fff
msgid "|ruby|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:33
# 6e646e70c86a43459289118447e63981
msgid "The reference language for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:34
# 12a394da05b9442cb73ae26bd171b3c8
msgid "|rubocop|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:35
# 34978bda11044bf9a95c7d6ea40334b4
msgid "A static code analyzer for |ruby|."
msgstr ""

#: ../source/getting_started.rst:39
# 1f0a06a574894cfaab6e25bb412fa59b
msgid "Set the System |ruby|"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:3
# c8ab7a88358d432f93113a0953420ce9
msgid "For many users of |chef|, the |chef dk| version of |ruby| that is included in the |chef dk| should be configured as the default version of |ruby|."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:5
# c656a29f0e65472d839fcebf46b163f0
msgid "Open a command window and enter the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:11
# 1bef7b750b744dd5983164f853c61284
msgid "which will return something like ``/usr/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:12
# 1324eac0d0f64d5898eb146edcd71a46
msgid "To use the |chef dk| version of |ruby| as the default |ruby|, edit the ``$PATH`` and ``GEM`` environment variables to include paths to the |chef dk|. For example, on a machine that runs |bash|, run:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:18
# 6c8d88d07c334dc984e4b523c6d01950
msgid "where ``bash`` and ``~/.bash_profile`` represents the name of the shell."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:20
# 025e52149ca2483baad2dc2b53a16a6e
msgid "If zsh is your preferred shell then run the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:26
# c7ff3a6a485841618584d657f80669aa
msgid "Run ``which ruby`` again. It should return ``/opt/chefdk/embedded/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:28
# 328bf8c1d31f44e1862d8b066392254d
msgid "Using the |chef dk|-provided |ruby| as your system |ruby| is optional. This just depends on how you are using |ruby| on your system. For many users, |ruby| is primarily used for authoring |chef| cookbooks and recipes. If that's true for you, then using the |chef dk|-provided |ruby| as your system |ruby| is recommended. But for other users who are already using tools like |rbenv| to manage |ruby| versions, then that's OK too."
msgstr ""

#: ../source/getting_started.rst:43
# 9c1696486cc64ab9afa6035e98776a13
msgid "Your First Cookbook"
msgstr ""

#: ../source/getting_started.rst:45
# 6eae934322a6401087187f3b86a26d0d
msgid "We have already used the |chef ctl| ``verify`` subcommand to verify the installation of the |chef dk|. Now let's use the |chef ctl| ``generate`` subcommand to create the |chef repo|, which is the main folder in which your |chef| code will be stored. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:51
# 14eb7de541c14014b89e6e7e46f0fd3a
msgid "where ``name`` is a name that you have chosen for the both the |chef repo| and the default cookbook. We are calling ours ``chef-repo``; you can call yours whatever you want. (We also renamed the default cookbook to ``chefdocs``, which is totally optional.) You should have a directory structure at ``/Users/your_username/cookbook_name/`` similar to::"
msgstr ""

#: ../source/getting_started.rst:67
# d818d357793b4ac08006bff13fa75217
msgid "Run the |chef client_title|"
msgstr ""

#: ../source/getting_started.rst:68
# 9b6e14e8d78143fe99726100fe338467
msgid "The |chef client| includes a mode called \"local mode\", which runs the |chef client| locally on your machine. Local mode allows you to run recipes and work locally with the code you are using to run your business. Local mode does not require a connection to a |chef server|, public or private keys, or configuring of nodes. (Though we'll do all of these things later!) Many people use local mode for simple, local testing of recipes and cookbooks, often as a pre-cursor to running unit and integration tests against the same recipes and cookbooks."
msgstr ""

#: ../source/getting_started.rst:70
# d22c3987fd384c3799b4e75950dc17d8
msgid "Open the ``default.rb`` recipe in the cookbook you just created. Add the following resource to that recipe:"
msgstr ""

#: ../source/getting_started.rst:78
# fed71a15fa344f5ea7f951f5b1512e3e
msgid "This recipe creates a file called ``test.txt`` at the path defined by the ``HOME`` environment variable. (To view that path, run ``echo \"$HOME\"`` in the command shell.)"
msgstr ""

#: ../source/getting_started.rst:80
# 1267484926f644439eaae3c688cc1bcb
msgid "Next, we'll run the |chef client|. This is done via the command line and from within the |chef repo|. Use the ``--local-mode`` flag to run the |chef client| in local mode. Use the ``--override-runlist`` flag to run only the recipe we have just created. (More about the run-list later.) For a cookbook's default recipe, only the name of the cookbook needs to be specified, as that maps to the default recipe. The following command will create the file ``test.txt``:"
msgstr ""

#: ../source/getting_started.rst:86
# fec2a4bb49314890ac40b6d09ed032c7
msgid "where ``chefdocs`` is the name of your cookbook."
msgstr ""

#: ../source/getting_started.rst:88
# 0d5bbb1c723b4ec094c66571aff22cde
msgid "As the |chef client| adds the file to your system, output similar to the following is shown:"
msgstr ""

#: ../source/getting_started.rst:119
# 2cbf420bcfab402184e56c33b7cb9249
msgid "That's it. The warnings, for the moment, can be ignored. Check the root of the path defined by the ``HOME`` environment variable and find the file named ``test.txt``. The file should contain ``This file created by Chef!``."
msgstr ""

#: ../source/getting_started.rst:121
# 705e5cef621d44c8b4e433275448005b
msgid "# We'll come back to working with |chef| later on, but the next step is to familiarize yourself with resources and cookbooks."
msgstr ""

#: ../source/getting_started.rst:124
# 7e00b9e2a2fa4b9390349443939c3c8d
msgid "|kitchen_title| Setup"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 161c3c0ea9644dbd95aafe47f15ff8cc
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 053fa42fbf9f4ec095ee38f294c42e7f
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 9ad22478cf014d33b3d7620e190897f5
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# 3e98711a58a84c82b303f992559ac799
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# 3a7e6de93abb46308c211bf29eb274f8
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../source/getting_started.rst:127
# 83ef90ccfdb04a8cb83baee917878ffc
msgid "You will need some type of virtualization software for |kitchen|. |vagrant| is the default driver for |kitchen|. Install |vagrant|. |vagrant| requires |virtualbox|, so install |virtualbox|. Once you're ready, we'll keep using the same cookbook created earlier."
msgstr ""

#: ../source/getting_started.rst:130
# 1cbd60f13b504ef68553da65743bc1f7
msgid "Update Metadata"
msgstr ""

#: ../source/getting_started.rst:131
# 231f6d6302a7448f9197252c3d66c3fb
msgid "In that cookbok, let's update the metadata. Open the ``metadata.rb`` file. It will look similar to:"
msgstr ""

#: ../source/getting_started.rst:143
# 311581945ce346e5bfc50488fdf740d8
msgid "for now, let's just update the name and version settings, like this:"
msgstr ""

#: ../source/getting_started.rst:151
# 9876bf354ba24e24a42909de29378264
msgid "Verify |kitchen yml|"
msgstr ""

#: ../source/getting_started.rst:152
# 8e6a7855c2d949f8bf220d48c5921ff3
msgid "Because |kitchen| is installed as part of the |chef dk|, the |kitchen yml| file is already created:"
msgstr ""

#: ../source/getting_started.rst:173
# c7f95318b39d496c81ddde00fb44de71
msgid "Let's change the default provisioner to |chef zero|:"
msgstr ""

#: ../source/getting_started.rst:186
# 4b675e6a50f94237bfad2e279861ecc2
msgid "and also make sure the |kitchen yml| knows about the default recipe in your cookbook. Under ``suites``, make sure the ``run_list`` contains the name of your cookbook. For example:"
msgstr ""

#: ../source/getting_started.rst:196
# 6df10084aed14f84b0a078c9c8d89d81
msgid "where ``chef-repo`` is the name of your cookbook. This will ensure that |kitchen| uses this recipe when converging."
msgstr ""

#: ../source/getting_started.rst:198
# 5c942f5a9e4347fe90f7ca1024e9c092
msgid "Also, |kitchen| has been added to gitignore, thor, etc. files. We just need to create the directory in which tests will be authored. This is typically a sub-directory of ``/cookbooks`` called ``/tests``. The structure underneath ``/tests`` may be customized, but is typically something like ``/test/integration/default``."
msgstr ""

#: ../source/getting_started.rst:200
# c30b3d31f6ad4cf0851c3875ee1f1f80
msgid "For now, we don't need to do anything else to get started using |kitchen|."
msgstr ""

#: ../source/getting_started.rst:203
# 4d7f200c70224c6a9d11aa2875d78f0e
msgid "View Instance List"
msgstr ""

#: ../source/getting_started.rst:204
# 1376040d15b446abb965c38e525a551b
msgid "From your working directory, run the following command:"
msgstr ""

#: ../source/getting_started.rst:210
#: ../source/getting_started.rst:477
#: ../source/getting_started.rst:528
# 6d5b9779844e48df9760d97e1e66c55b
# a663306a4d9d4aaf820ac61926f89a61
# bd0ccd77f03444649615738378cf7754
msgid "which will return something similar to:"
msgstr ""

#: ../source/getting_started.rst:218
# afda95174afc4dff98a37aa7916a49d4
msgid "So there are two available platforms---|ubuntu| 12.04 and |centos| 6.4---configured to use the |vagrant| driver (which is enabled via the ``kitchen-vagrant`` driver that is built-in to the |chef dk|), and to run |chef zero| while running tests."
msgstr ""

#: ../source/getting_started.rst:221
# d677450fa5dd4ccf93ab5f69f78fc1d0
msgid "Create |centos| Instance"
msgstr ""

#: ../source/getting_started.rst:222
# b082ef18551d4b6c931a0139b9a33b6f
msgid "Let's create an instance. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:228
# 47a6e0549ee34e1fb6c727aceb363a9c
msgid "This will start |vagrant|, which will then build a machine that rubs |centos| 6.4. (If this is the first time you're running |kitchen|, then |centos| needs to first be downloaded from the default instance location and may take a few minutes.)"
msgstr ""

#: ../source/getting_started.rst:263
#: ../source/getting_started.rst:320
# f23e2450652e47f2a9f6c47d91da91f5
# fa793f9f3b3b4c9faac7c3f731d9867e
msgid "Verify the instance list with the following command:"
msgstr ""

#: ../source/getting_started.rst:269
# 5b0ab5cbcf3341d9b385fa114ac66feb
msgid "and you will see the following:"
msgstr ""

#: ../source/getting_started.rst:278
# 7e1351f2565b463ea3a19165347ce7f8
msgid "Create |ubuntu| Instance"
msgstr ""

#: ../source/getting_started.rst:279
# dd170c3dfe774c738003a62ed5548b3d
msgid "Now let's create the |ubuntu| instance:"
msgstr ""

#: ../source/getting_started.rst:285
# d3212b2aa8264aa797b39d48119c0981
msgid "this may also take a few minutes, but will (eventually) return something similar to:"
msgstr ""

#: ../source/getting_started.rst:332
# 382e310c8be84ffaa83ea2b6fef0908f
msgid "and now we're all set up! We're going to use the same recipe and cookbook that we already created."
msgstr ""

#: ../source/getting_started.rst:335
# 9bea9c1979524a5c9c61b4bd2f1b965d
msgid "Converge |centos|"
msgstr ""

#: ../source/getting_started.rst:336
# d192d27d520e4f2abc87a5738b4cc889
msgid "Now that we're all configured and ready to run |kitchen|, let's try it in |centos|:"
msgstr ""

#: ../source/getting_started.rst:342
# 32899af1bca3488f97f7cb51ae0ef28c
msgid "The first time you run this, it'll have to download the |chef client| and will show something similar to the following while it converges the node via |kitchen|:"
msgstr ""

#: ../source/getting_started.rst:393
# ac6f0aabbcb148038a20b41d688871a0
msgid "Converge |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:394
# cb91aa8bfe7a4657b6c847668baba6da
msgid "Now let's try it in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:400
# c5e13d3836b64c7fbc05f7b74cf7b3b8
msgid "Like |centos|, the |chef client| will need to be downloaded:"
msgstr ""

#: ../source/getting_started.rst:450
#: ../source/getting_started.rst:729
# cbea94cc2cec470d9385a37f785795b0
# 02e46399bffd4cccb5385abe463e2200
msgid "Verify Instance List"
msgstr ""

#: ../source/getting_started.rst:451
#: ../source/getting_started.rst:730
# 236f5f155d524de4ab553a94c1205136
# 53ddebdf634d4f3d93da7681a19f80aa
msgid "To verify if both instances have been converged, run the following command:"
msgstr ""

#: ../source/getting_started.rst:463
# d43f92a57a974281858fa966f87088cf
msgid "Now you can run your cookbooks in a virtual instance managed by |kitchen| on multiple platforms (|ubuntu| and |centos|)."
msgstr ""

#: ../source/getting_started.rst:466
# c4a0245cd50342618cc07eb66ec97f3f
msgid "Configure NTP"
msgstr ""

#: ../source/getting_started.rst:467
# cffbce43a0c14c0ba40400e6ad546486
msgid "Instead of putting a text file on these |kitchen| instances, let's try something useful and install |ntp|. Within the cookbook we're already using, let's update the default recipe to install and configure |ntp| using the |resource package|, |resource template|, and |resource service| resources, a template file, and an attributes file."
msgstr ""

#: ../source/getting_started.rst:470
# c2a36251ae08450ebc283bc158d9c876
msgid "Add Template"
msgstr ""

#: ../source/getting_started.rst:471
# ea844f0556924ad7b5359ff0060409d7
msgid "The |resource template| resource looks for templates in a cookbook's ``/templates`` directory. Template files in this directory must be |erb| files. The |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the template file we'll use to configure |ntp| using this command. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:489
#: ../source/getting_started.rst:540
# 103c328ff0cf476da637bc349f9cc8ce
# 2daf99a9385543c09ee1679daec3b082
msgid "and a directory structure in that cookbook similar to::"
msgstr ""

#: ../source/getting_started.rst:507
# 0fa41426565d4d6894a51cbcb2acaec9
msgid "and an empty ``ntp.conf.erb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:521
# 0431ef12a8cb441b90e74f6a19cd9696
msgid "Add Attributes"
msgstr ""

#: ../source/getting_started.rst:522
# c8c1b3d98da949a0b91661260d244818
msgid "The name of the init script that is used to run |ntp| is ``ntp`` on |debian|-based platforms (such as |ubuntu|) and is ``ntpd`` on |redhat enterprise linux|-based platforms. Let's use an attribute in our cookbook to tell the |chef client| what to do on both platforms using a single cookbook attribute. Like for templates, the |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the default attribute file we'll use to tell the |chef client| how to handle the attribute. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:560
# a584a94e286f4beca9cd6b36a67cdae4
msgid "and an empty ``default.rb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:574
# bb55ab18390343c39acba8ef00b3d421
msgid "This attribute uses conditions to tell the |chef client| the correct name of the init script that will be used to start |ntp|, by platform. The attribute that is being set by this code block is ``node[:ntp][:service]`` and the |chef client| can use this attribute to identify the correct init script for |ntp| on any node and for any platform. If |debian|, use ``ntp`` and for everything else use ``ntpd``."
msgstr ""

#: ../source/getting_started.rst:577
# 4a2150106a724490a9a1acc42950fa91
msgid "Edit Recipe"
msgstr ""

#: ../source/getting_started.rst:578
# 93b979d19ec242a18e1edf6356309d4c
msgid "To install |ntp|, a recipe needs to do three things:"
msgstr ""

#: ../source/getting_started.rst:580
# f476ce92fee14c389433207f1d0d780b
msgid "# Install |ntp| # Create a configuration file; this will be done using the ``ntp.conf.erb`` template file # Start the ``ntp`` or ``ntpd`` service, depending on the platform; this will be done using the ``node[:ntp][:service]`` attribute"
msgstr ""

#: ../source/getting_started.rst:584
# 92fa781abb9e4924993548e807855812
msgid "Open the ``default.rb`` recipe file and replace the contents of that file with the following:"
msgstr ""

#: ../source/getting_started.rst:603
# 31e9f6dfcc254ef184aba50e4096dabb
msgid "The |resource package| resource installs the |ntp| package. The |resource template| resource gets the template file from the cookbook, and then uses it to create a ``ntp.conf`` file in the ``/etc/ntp.conf`` directory on the node, after which it notifies the |resource service| resource to restart the ``ntp`` or ``ntpd`` service. The |resource service| resource ensures that the ``ntp`` or ``ntpd`` service is started and enabled."
msgstr ""

#: ../source/getting_started.rst:606
# d9cf7d59d835452fa51fb370f2bb566b
msgid "Install |ntp| on |centos|"
msgstr ""

#: ../source/getting_started.rst:607
# 7075271cbd904c969d1d2f351f67f760
msgid "Now let's install |ntp| in |centos|:"
msgstr ""

#: ../source/getting_started.rst:613
#: ../source/getting_started.rst:674
# 8a7dcbc674714a2094a9490e9ae76ec2
# d757a8e8223f4ed08faaa2c92654b535
msgid "As it installs, the |chef client| will report back something similar to the following:"
msgstr ""

#: ../source/getting_started.rst:667
# 2aa464cabfdf46c29ac6d3883e62e9f5
msgid "Install |ntp| on |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:668
# 168f076f426144d993dbabf7319a1fe8
msgid "And finally, install |ntp| in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:743
# 473414a84eab4501b8a46fb4a8abbf30
msgid "More About Resources"
msgstr ""

#: ../source/getting_started.rst:744
# 4975e0e241d84690a03b5a6a4a5b85bf
msgid "The |chef client| includes many built-in resources: |resource execute|, |resource directory|, |resource package|, |resource service|, |resource file|, |resource template|, |resource user|, |resource script|, and |resource scm_git|."
msgstr ""

#: ../source/getting_started.rst:746
# f800a9c010814658b7fbd8ff89738fcf
msgid "The sections below quickly describe the most popular resources. For the full list of built-in |chef| resources, see `Resources <http://docs.chef.io/resource.html#resources>`_. You can also `create your own resources <http://docs.chef.io/lwrp_custom.html>`_ or `use the resources built into the community cookbooks <http://supermarket.chef.io>`_."
msgstr ""

#: ../source/getting_started.rst:749
# c39daadddb324f05abba9e22d9cd143f
msgid "Execute Commands"
msgstr ""

#: ../source/getting_started.rst:750
# 31d07746d84d447e9c28874818ff0e2b
msgid "Commands are executed using the |resource execute| resource using an attribute to specify the actual command to run. See :doc:`execute </resource_execute>` for more information about executing commands."
msgstr ""

#: ../source/getting_started.rst:753
# 08b4c6a57c2f4b8f83075dfd228f9f75
msgid "Manage Directories"
msgstr ""

#: ../source/getting_started.rst:754
# 55a9c1e2b4154486b1453d23e6347885
msgid "Directories are hierarchies of folders that comprise all the information stored on a computer. There are two ways to manage directories. The first is via the |resource directory| resource, which manages directories starting from the root directory. And the second is the |resource remote_directory|, which transfers directory structures defined in cookbooks to nodes. See :doc:`directory </resource_directory>` for more information about managing directories. If the directory is defined in a cookbook, use :doc:`remote_directory </resource_remote_directory>` instead."
msgstr ""

#: ../source/getting_started.rst:757
# d0b3bd5fcd7f4467a8a0a5b57e3b5261
msgid "Manage Packages"
msgstr ""

#: ../source/getting_started.rst:758
# b2a3310d185e416d8aabce7150024b38
msgid "Packages are collections of files that comprise software applications or some part of an operating system. Use the package resource to manage these packages, unless they are sourced via |rubygems| and installed directly from within recipes or are sourced from a cookbook. See :doc:`package </resource_package>` for more information about managing packages. There are quite a few platform-specific package resources as well, though most of the time simply using the |resource package| is all that's necessary. For packages that are located in cookobooks, use :doc:`chef_gem </resource_chef_gem>`. And for packages that are only included via recipes, use :doc:`gem_package </resource_gem_package>`."
msgstr ""

#: ../source/getting_started.rst:761
# 296a35c870594bc991b459bfdbd97b17
msgid "Manage Services"
msgstr ""

#: ../source/getting_started.rst:762
# 39fb2eb681fe47e5a86229f5040723e5
msgid "Services can be started, stopped, enabled, disabled, reloaded, and restarted. See :doc:`service </resource_service>` for more information about managing services."
msgstr ""

#: ../source/getting_started.rst:765
# 70ac9d97af3b4aa69b1122fb713117b7
msgid "Manage Files"
msgstr ""

#: ../source/getting_started.rst:766
# 513990e0e7ff43d3992f2c5b5afe9090
msgid "Files are managed in several ways. The |resource file| resource manages files that are already present on a node. Files are transferred to nodes from cookbooks using the |resource cookbook_file| resource and are transferred to nodes from remote locations using the |resource remote_file| resource. See :doc:`file </resource_file>` for more information about managing files, :doc:`remote_file </resource_remote_file>` for transferring files from remote locations, and :doc:`cookbook_file </resource_cookbook_file>` for transferring files that are located in cookbooks."
msgstr ""

#: ../source/getting_started.rst:769
# 563593e43a6644fbae21c0302560893e
msgid "Manage Templates"
msgstr ""

#: ../source/getting_started.rst:770
# 887e06f432814579be188efa148aa456
msgid "Templates are used to generate files based on variables and logic contained within the template file. |chef| uses |erb| templates and |ruby| expressions and statements to define the template file. Template source files must be located within cookbooks. See :doc:`template </resource_template>` for more information about managing files using |erb| templates."
msgstr ""

#: ../source/getting_started.rst:773
# 6726fb1094d54674861ddd4f41f53213
msgid "Manage Users, Groups"
msgstr ""

#: ../source/getting_started.rst:774
# bcd777257f6549808220f83e7311902b
msgid "Users and groups can be added, updated, removed. User passwords can be locked and unlocked. See :doc:`user </resource_user>` for more information about managing users and user passwords. The :doc:`group </resource_group>` resource manges groups."
msgstr ""

#: ../source/getting_started.rst:777
# 0b8cfe43520540adbacfdf7766db695f
msgid "Use Script Interpreters"
msgstr ""

#: ../source/getting_started.rst:778
# af75ac628b9248e996e42b75ee38b987
msgid "Script interpreters execute scripts on a node, similar to the |resource execute| resource, and with the ability to specify the interpreter that the |chef client| should use. See :doc:`script </resource_script>` for more (general) information about using scripts in recipes. Interpreter-specific resources are available, with :doc:`bash </resource_bash>` being the most popular. Also available: :doc:`csh </resource_csh>`, :doc:`perl </resource_perl>`, :doc:`powershell_script </resource_powershell_script>`, :doc:`python </resource_python>`, and :doc:`ruby </resource_ruby>`. Two |windows|-specific resources are also available: :doc:`batch </resource_batch>` and :doc:`powershell_script </resource_powershell_script>`."
msgstr ""

#: ../source/getting_started.rst:781
# 8acf1570523f4d95a9179ca17db89b47
msgid "Use Source Control"
msgstr ""

#: ../source/getting_started.rst:782
# 6e5dde7fad3f48d4951a0ba944ab3970
msgid "Most users of |chef| keep their code in some type of version source control. |chef| can interact with this code from recipes. |git| is a very popular choice. The :doc:`git </resource_git>` resource is used to manage files that exist in a |git| repository. There is also a resource for :doc:`subversion </resource_subversion>`, another popular version source control tool."
msgstr ""

#: ../source/getting_started.rst:786
# bb3b3ea8c0ca4802a09246a0a5439601
msgid "About Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# d3dbb114002340a195db950a943dd184
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 5b0ac44739ec435ca98081dbcaccf636
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# d3f2c09109eb4bd488102afe9a62cfc3
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# a6511f0088a248c993e03f56bd7f0785
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 2a83067d39264aa89c2a349f97cc4846
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 88e340e0aa364d38bd77fa8887cf7bc8
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 8ff38b04df754c0d89f65624710456f8
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 49be10725cb243fc98684dd8459631de
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 4716c920e87d4a4e966f6186dcaac935
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# c30462a0d2f74e648d3d8f241105141d
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/getting_started.rst:789
# 0940294c58b14533b0fd30d1823c63d0
msgid "Every cookbook follows a defined structure, but individiaul cookbooks can take on many different styles depending on how your organization wants to manage its code, who authored them, and how they are intended to be used. Some cookbooks contain only a single, default recipe. Others may contain only a library file. Some may contain only a few attributes. And other cookbooks may contain several custom resources along with many attributes and templates, and so on."
msgstr ""

#: ../source/getting_started.rst:791
# 8622cb92871a4ea9b4a82073e0253075
msgid "Some cookbooks you will build yourself. Some cookbooks will be provided by the community. Most community cookbooks will be managed using |berkshelf|, which is a dependency manager included in the |chef dk|. Occasionally, a community cookbook will be forked, but more often a wrapper cookbook is created to handle your organization-specific requirements while still allowing use of the community cookbook."
msgstr ""

#: ../source/getting_started.rst:793
# 3124d40be9744663b3ea60c091f2ec61
msgid "The most important thing to know about cookbooks is that there are lots of ways to build good ones. There are patterns to follow, there are guidelines. There are recomended ways of dealing with attributes. There are recommended ways of creating custom resources. But ultimately, a good cookbook is the one that works for your organization. Ideally, this cookbook works across your infrastructure. Most organizations have a mix of private (internal) and public (community) cookbooks in use in their organization."
msgstr ""

#: ../source/getting_started.rst:796
# e5f179dadfce4fa2842d3e23b27ba9c8
msgid "Cookbook Patterns"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:6
# c8b071f111a84fc194a1db85b6b7487d
msgid "A primary goal of cookbook authoring is to create cookbooks that are reusable as building blocks, where each cookbook defines a specific configuration piece used by the organization. For example, say all servers across the organization will run |cron| and |ntp|, but only front-end servers in production will be load balanced. This building block approach relies on some basic guidelines:"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:8
# 3ee4a4e800e043b3b5ffe2fe083d9684
msgid "All cookbooks are kept in version source control"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:9
# bb5f260e5a2e4c238dffa1af0aaea0c0
msgid "Cookbooks are never forked from their |github| repositories"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:10
# e6b0dd24634843ab837882c2422fd4ff
msgid "Cookbooks may be kept in the |chef repo|, but are typically kept in their own dedicated repositories outside of the |chef repo|"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:11
# a0d20d8ad0ff483c8ef40afa67768db5
msgid "Cookbooks are kept as small as possible and are focused on specific configuration targets, with changes to cookbooks tracked as versions of that cookbook"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:12
# 618a8b1141514e0abf92e5581af98cf3
msgid "Cookbooks are better when unit and integration testing is done against them, automatically"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:13
# 5ca5b8bf505c4e439f432d1d9a81b256
msgid "When a cookbook is uploaded to the |chef server|, it is versioned and that version is frozen"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:14
# 1da01d1c287441f6b4d3dd43d25efdf9
msgid "Community cookbooks are a great resource; often a community cookbook can be used wholesale (without changes), but sometimes a community cookbook needs a wrapper that is used to ensure specific organizational requirements are met"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:15
# b348c201a29d427c8a0a0735b33bc75c
msgid "Recipes in cookbooks should be modular, minimally prescriptive, and use custom resources to expose repeatable patterns that are needed to solve implementation-specific requirements"
msgstr ""

#: ../source/getting_started.rst:800
# 4c22bdbc663b411ea299ae8ee342559e
msgid "About |ruby|"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 8c8481b327fb44449a0811d32243fdc3
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../source/getting_started.rst:804
# 871889593c5648718ed6f392ed34ae0e
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 75373b829cfc4e81b335c0a04fdce0ec
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 4eba46fd39734aedbc883a73293985de
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


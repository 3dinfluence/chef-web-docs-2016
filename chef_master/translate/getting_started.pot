# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:8
# e267a88152e84b8ea8631e7c4a6b64e8
msgid "Getting Started"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:10
# 906fafda538847ae85c25bf68d4c7658
msgid "Welcome to |chef|!"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:12
# a367cd67f5af438bbb55554c94f06df2
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether you’re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:14
# 01b766f1d910440a8a7edbfc2c82a2fc
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:16
# 2b71c541ce6f4f248941a97d8daab0a3
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:18
# 39fb45b329c64494b97f085de21eb8ef
msgid "A resource is a statement of configuration policy. It describes the desired state of an element of your infrastructure, along with the steps needed to bring that item to the desired state. Each resource statement in a |chef| recipe corresponds to a specific part of your infrastructure: a file, a template, a directory, a package, a service, a command to be executed, and so on. Each resource statement includes the resource type (such as “file” or “package”), its name, any attributes that specify additional details, and an action that tells the |chef client| what how to implement the configuration policy."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:20
# 9f2ad65858c9475289ae62ed5deeb625
msgid "Together, resources describe all the components in your network. Recipes group resources together and describe working configurations. Add recipes to a run-list to describe the desired state for every node to which that run-list is assigned. Cookbooks are collections of recipes and are stored on the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:22
# 3b400dc98eef491f8675ce656766f72f
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:25
# bb8bfc6301694e40962fd5792e9a6569
msgid "Workstation Setup"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:26
# eef38122c1734e3ea59ececf02b9494b
msgid "The |chef dk| is a package that contains everything you need to start using |chef|, along with a collection of tools and libaries that can help manage the code you are using to run your business."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:29
# ef09ef1fe42b49358f2e4d9376d10ee3
msgid "Install the |chef dk|"
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:4
# ac791280c6044f96bc53f60845fd0f4e
msgid "To install the |chef dk|:"
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:6
# 96b00a0083a840afba76b158647b1c2e
msgid "Visit this page: http://www.getchef.com/downloads/chef-dk/."
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:7
# 3f95b1dbb767468ea6b34c34144be192
msgid "Select a platform, and then a package. (|chef docs| uses the |mac os x| setup within the documentation.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:8
# 2ec622717513486ebe93fd65a4660b25
msgid "Click the download button."
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:9
# babb6d61072243d7a527cf766c54e257
msgid "Follow the steps in the installer and install the |chef dk| to your machine. The |chef dk| is installed to ``/opt/chefdk/`` on |unix| and |linux| systems."
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:10
# d757677d6771472885199cbce7485a48
msgid "When finished, open a command window and enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_install/includes_install_chef_dk.rst:16
# fd626227f3374d3d8b337d70de937dac
msgid "This will verify the main components of the |chef dk|: the |chef client|, the |chef dk| library, and the tools that are built into the |chef dk|. The output should be similar to:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:33
# 4a6e3734e23c4a398e7c082c77260e24
msgid "Tools and Libraries"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools.rst:4
# 1ae2385280f54182b19a65fdf85e57c1
msgid "The |chef dk| installs a collection of tools and libraries into a single directory structure, which makes it easier to manage any dependencies these tools may have on each other and the dependencies that |chef| has on |ruby|."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:4
# 052df8a4abaf45afbe987a26d4fa188b
msgid "The most important tools included in the |chef dk| are:"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:10
# 46c4fe7e8eae4066974e93eac8b1592c
msgid "Tool"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:11
# db4b29451f6f4dfca1d4b55cef3cae02
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:12
# e70e1c1d6e9c40e28de3a87f5ca731e8
msgid "|berkshelf|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:13
# ca0a46ca5d6d4ddf89723a21f2b68fed
msgid "A dependency manager for cookbooks."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:14
# c401bbaafd5c4e7d925601997b0adf4a
msgid "|chef ctl|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:15
# 87f582601ca54a7ca9d3e2632b205850
msgid "A workflow tool for |chef|."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:16
# 973124fbaf1746968edeaf76ab18b2ed
msgid "|chef client|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:17
# ae96303c8cf94f4190895649ca84dd10
msgid "The agent that runs |chef|."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:18
# 2ef67323fe6f4d3282fccb8e96bc2e05
msgid "|chef dk|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:19
# 0408796b42064f469300ec84aa77e8e6
msgid "The |chef dk| omnibus package."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:20
# 444408d5ef6c4312a56a2653f4479a7a
msgid "|chef spec|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:21
# 196132ce36f549e5a0a9a1628aef43ea
msgid "A unit testing framework that tests resources locally."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:22
# 56069590678646ebad52cc5e2263ad99
msgid "|ruby|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:23
# f90453c4ed2a4a11b2d0aaa15a6f3c3d
msgid "The reference language for |chef|."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:24
# 9913d0a225bb43d087bc635bbe7d1bce
msgid "|kitchen|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_dk/includes_chef_dk_tools_main.rst:25
# 0861a3577b414176a583fe20c0ae53e8
msgid "An integration testing framework tool that tests cookbooks across platforms."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:39
# 2aec162e85ec4f62b9f373acda89727c
msgid "System |ruby|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:40
# f23b80cc9b254e9a9c24a54510aaeac6
msgid "For many users of |chef|, the |chef dk| the version of |ruby| that is included in the |chef dk| should be configured as the default version of |ruby|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:42
# b444fc1e3ebc4e65a1b148d64397c696
msgid "Open a command window and enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:48
# 94cfaf21264f42e48d63b3dfc9a567da
msgid "which will return something like ``/usr/bin/ruby``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:49
# 8c89b29ec0244dc0af2d7e8b7f3b4ac6
msgid "To use the |chef dk| version of |ruby| as the default |ruby|, edit the ``$PATH`` and ``GEM`` environment variables to include paths to the |chef dk|. Add the For example, on a machine that runs |bash|, run:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:55
# 0ab977d1995546329ca5d76a975e1b68
msgid "where ``bash`` and ``~/.bash_profile`` represents the name of the shell."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:57
# 0d3dae03a48442a586ef1f280f15d8e7
msgid "Run ``which ruby`` again. It should return ``/opt/chefdk/embedded/bin/ruby``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:59
# ac75a0f21e564dae9a9936189f729256
msgid "Using the |chef dk|-provided |ruby| as your system |ruby| is optional. This just depends on how you are using |ruby| on your system. For many users, |ruby| is primarily used for authoring |chef| cookbooks and recipes. If that's true for you, then using the |chef dk|-provided |ruby| as your system |ruby| is recommended. But for other users who are already using tools like |rbenv| to manage |ruby| versions, then that's OK too."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:62
# 40b8bdbfece84af6b6ebe03197979fdf
msgid "Your First Cookbook"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:64
# 1d4195ec4faa420487354de132d22ad5
msgid "We have already used the |chef ctl| ``verify`` subcommand to verify the installation of the |chef dk|. Now let's use the |chef ctl| ``generate`` subcommand to create the |chef repo|, which is the main folder in which your |chef| code will be stored. Run the following command:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:70
# a70dabe4c8d5475ab5ead0cfa12b5b27
msgid "where ``name`` is a name that you have chosen for the both the |chef repo| and the default cookbook. We are calling ours ``chef-repo``; you can call yours whatever you want. (We also renamed the default cookbook to ``chefdocs``, which is totally optional.) You should have a directory structure at ``/Users/your_username/cookbook_name/`` similar to::"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:86
# 1366c1bd32914b33a574f1f711a78813
msgid "Run the |chef client|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:87
# f9549f4b9f534c06985bfd96aa153aae
msgid "The |chef client| includes a mode called \"local mode\", which runs the |chef client| locally on your machine. Local mode allows you to run recipes and work locally with the code you are using to run your business. Local mode does not require a connection to a |chef server|, public or private keys, or configuring of nodes. (Though we'll do all of these things later!) Many people use local mode for simple, local testing of recipes and cookbooks, often as a pre-cursor to running unit and integration tests against the same recipes and cookbooks."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:89
# 36daeb89a7884a398fe7ae4730f31c18
msgid "Open the ``default.rb`` recipe in the cookbook you just created. Add the following resource to that recipe:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:97
# f871dae887de4069b3329394626eb452
msgid "This recipe creates a file called ``test.txt`` at the path defined by the ``HOME`` environment variable. (To view that path, run ``echo \"$HOME\"`` in the command shell.)"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:99
# c9550bd369da483daa7aca99e007f212
msgid "Next, we'll run the |chef client|. This is done via the command line and from within the |chef repo|. Use the ``--local-mode`` flag to run the |chef client| in local mode. Use the ``--override-runlist`` flag to run only the recipe we have just created. (More about the run-list later.) For a cookbook's default recipe, only the name of the cookbook needs to be specified, as that maps to the default recipe. The following command will create the file ``test.txt``:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:105
# 7872bb8e71e746ca8abae5d72568770a
msgid "where ``chefdocs`` is the name of your cookbook."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:107
# a952b899b94c48389893bbc52118d889
msgid "As the |chef client| adds the file to your system, output similar to the following is shown:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:138
# 2ff0b8967cab4e129e96b4d5f6e7db78
msgid "That's it. The warnings, for the moment, can be ignored. Check the root of the path defined by the ``HOME`` environment variable and find the file named ``test.txt``. The file should contain ``This file created by Chef!``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:140
# a77a1e3ba14b4dd89ac253cea7f15cd7
msgid "# We'll come back to working with |chef| later on, but the next step is to familiarize yourself with resources and cookbooks."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:143
# 325bf0dbaf0f44bc80bfed4ed27b640d
msgid "About Resources"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_generic.rst:5
# 0507f9cc4d1b43ef962454d805c60521
msgid "A `resource <http://docs.opscode.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:146
# f5cc4d01a7e7474f92f91deaf3679313
msgid "The |chef client| includes many built-in resources, but several of them are used much more often than others: |resource execute|, |resource directory|, |resource package|, |resource service|, |resource file|, |resource template|, |resource user|, |resource script|, and |resource scm_git|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:148
# 0d0b328c0b03481ea02e617ef8a65597
msgid "For the full list of built-in |chef| resources, see `Resources <http://docs.opscode.com/resource.html#resources>`_. You can also `create your own resources <http://docs.opscode.com/lwrp_custom.html>`_ or `use the resources built into the community cookbooks <http://supermarket.getchef.com>`_."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:150
# 00f0621e91fa4b8da312d8b456d15a26
msgid "See the sections below for quick overviews of the most popular resources, plus links to the individual reference pages for each of them."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:153
# 3c8bd05998f54e97af5c4d0578999a57
msgid "Execute Commands"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:154
# e7b0c5586d794c75ac422e21370282df
msgid "Commands are executed using the |resource execute| resource using an attribute to specify the actual command to run. See :doc:`execute </resource_execute>` for more information about executing commands."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:157
# 74410bf4c9654aa1aea088faa0da881a
msgid "Manage Directories"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:158
# 04a9c15cae2c4c9783ed352060a57a95
msgid "Directories are hierarchies of folders that comprise all the information stored on a computer. There are two ways to manage directories. The first is via the |resource directory| resource, which manages directories starting from the root directory. And the second is the |resource remote_directory|, which transfers directory structures defined in cookbooks to nodes. See :doc:`directory </resource_directory>` for more information about managing directories. If the directory is defined in a cookbook, use :doc:`remote_directory </resource_remote_directory>` instead."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:161
# 7159fedce4c246d7a81ad237bd288e95
msgid "Manage Packages"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:162
# 741564d9a9844955b69732fe115589e9
msgid "Packages are collections of files that comprise software applications or some part of an operating system. Use the package resource to manage these packages, unless they are sourced via |rubygems| and installed directly from within recipes or are sourced from a cookbook. See :doc:`package </resource_package>` for more information about managing packages. There are quite a few platform-specific package resources as well, though most of the time simply using the |resource package| is all that's necessary. For packages that are located in cookobooks, use :doc:`chef_gem </resource_chef_gem>`. And for packages that are only included via recipes, use :doc:`gem_package </resource_gem_package>`."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:165
# 42f7c122f4534ef390b36ee27fe7e164
msgid "Manage Services"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:166
# 82c906dbcbdc42aab643676c00ff7af1
msgid "Services can be started, stopped, enabled, disabled, reloaded, and restarted. See :doc:`service </resource_service>` for more information about managing services."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:169
# bb1b67bbc1ba412db3fab2c066b6ffa0
msgid "Manage Files"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:170
# c0e76b7fe9294620841af34e58dbf53a
msgid "Files are managed in several ways. The |resource file| resource manages files that are already present on a node. Files are transferred to nodes from cookbooks using the |resource cookbook_file| resource and are transferred to nodes from remote locations using the |resource remote_file| resource. See :doc:`file </resource_file>` for more information about managing files, :doc:`remote_file </resource_remote_file>` for transferring files from remote locations, and :doc:`cookbook_file </resource_cookbook_file>` for transferring files that are located in cookbooks."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:173
# d440307783ec4663afc923edbb2dc514
msgid "Manage Templates"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:174
# 92e83aa9c14142279da022daa4797ab8
msgid "Templates are used to generate files based on variables and logic contained within the template file. |chef| uses |erb| templates and |ruby| expressions and statements to define the template file. Template source files must be located within cookbooks. See :doc:`template </resource_template>` for more information about managing files using |erb| templates."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:177
# 2939566079594c7798d73878491e4676
msgid "Manage Users, Groups"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:178
# 4b0c8ccaf9af47a49794b8b68b3b2c39
msgid "Users and groups can be added, updated, removed. User passwords can be locked and unlocked. See :doc:`user </resource_user>` for more information about managing users and user passwords. The :doc:`group </resource_group>` resource manges groups."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:181
# 886e6c4e9669499e8353ee0084c78883
msgid "Use Script Interpreters"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:182
# 74736a6002a74b4abd9cd984d5647e6c
msgid "Script interpreters execute scripts on a node, similar to the |resource execute| resource, and with the ability to specify the interpreter that the |chef client| should use. See :doc:`script </resource_script>` for more (general) information about using scripts in recipes. Interpreter-specific resources are available, with :doc:`bash </resource_bash>` being the most popular. Also available: :doc:`csh </resource_csh>`, :doc:`perl </resource_perl>`, :doc:`powershell_script </resource_powershell_script>`, :doc:`python </resource_python>`, and :doc:`ruby </resource_ruby>`. Two |windows|-specific resources are also available: :doc:`batch </resource_batch>` and :doc:`powershell_script </resource_powershell_script>`."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:185
# 69a5a7c39a7d424596d51384b193496e
msgid "Source Control"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:186
# 29d83c04147144a49d5fc1588764c567
msgid "Most users of |chef| keep their code in some type of version source control. |chef| can interact with this code from recipes. |git| is a very popular choice. The :doc:`git </resource_git>` resource is used to manage files that exist in a |git| repository. There is also a resource for :doc:`subversion </resource_subversion>`, another popular version source control tool."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:189
# 0c487acc964546149f4348b6d356ec1c
msgid "About Cookbooks"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:4
# a99a91c9ba6e40b08ea948e6552769e3
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:6
# 516d6cdf767241a781ec241f2b6528dc
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:7
# 4ef3ea233dbe4a57869bdc4dde9df8da
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:8
# 8259d25cdd054fc7893b51fa956012b6
msgid "File distributions"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:9
# b9877392095a47598a43ad3a52a12ed1
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:10
# 3d1779f4a4c142698565c5a990e9d350
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:11
# f4c9a85821704f648d661c7327c3a048
msgid "Custom resources and providers"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:12
# 564207e47cc64293ba272d4045cb1e73
msgid "Templates"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:13
# cfb855c3cc9b4de68093cb6f3bd70305
msgid "Versions"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks.rst:14
# ece82aa014234c03a17e25344c788421
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:192
# 76bd1ace35b54d3c8f46502a0bf16705
msgid "Every cookbook follows a defined structure, but individiaul cookbooks can take on many different styles depending on how your organization wants to manage its code, who authored them, and how they are intended to be used. Some cookbooks contain only a single, default recipe. Others may contain only a library file. Some may contain only a few attributes. And other cookbooks may contain several custom resources along with many attributes and templates, and so on."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:194
# ebd253817359479d8c51f0a94d2fc2cf
msgid "Some cookbooks you will build yourself. Some cookbooks will be provided by the community. Most community cookbooks will be managed using |berkshelf|, which is a dependency manager included in the |chef dk|. Occasionally, a community cookbook will be forked, but more often a wrapper cookbook is created to handle your organization-specific requirements while still allowing use of the community cookbook."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:196
# 7274ffe88203471aa0985c96f3d744c8
msgid "The most important thing to know about cookbooks is that there are lots of ways to build good ones. There are patterns to follow, there are guidelines. There are recomended ways of dealing with attributes. There are recommended ways of creating custom resources. But ultimately, a good cookbook is the one that works for your organization. Ideally, this cookbook works across your infrastructure. Most organizations have a mix of private (internal) and public (community) cookbooks in use in their organization."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:199
# 6bdfe515fbdd4674ad64ac6aa9ea735e
msgid "Cookbook Patterns"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:6
# e10f1cde87d74060884e617cdd8cac98
msgid "A primary goal of cookbook authoring is to create cookbooks that are reusable as building blocks, where each cookbook defines a specific configuration piece used by the organization. For example, say all servers across the organization will run |cron| and |ntp|, but only front-end servers in production will be load balanced. This building block approach relies on some basic guidelines:"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:8
# a278beabbf27417d9d961a7b875961f7
msgid "All cookbooks are kept in version source control"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:9
# ed807776b5924910bce39e9257a92504
msgid "Cookbooks are never forked from their |github| repositories"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:10
# 88f539e3a08947ba9f62638399507f23
msgid "Cookbooks may be kept in the |chef repo|, but are typically kept in their own dedicated repositories outside of the |chef repo|"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:11
# ddea45c70c5c475bb625757623626f79
msgid "Cookbooks are kept as small as possible and are focused on specific configuration targets, with changes to cookbooks tracked as versions of that cookbook"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:12
# 96eee32f714b4290814ecec6af4c219e
msgid "Cookbooks are better when unit and integration testing is done against them, automatically"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:13
# 52190bc0c7414b10a8b7027e52dbb754
msgid "When a cookbook is uploaded to the |chef server|, it is versioned and that version is frozen"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:14
# b341b4bf4d93423d818ff757d514cc82
msgid "Community cookbooks are a great resource; often a community cookbook can be used wholesale (without changes), but sometimes a community cookbook needs a wrapper that is used to ensure specific organizational requirements are met"
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbook/includes_cookbook_pattern.rst:15
# 3344a44a477f474c8f6c2b7657201c51
msgid "Recipes in cookbooks should be modular, minimally prescriptive, and use custom resources to expose repeatable patterns that are needed to solve implementation-specific requirements"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:203
# 0ea94f951c724946a35e7592e48336fd
msgid "Conclusion"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_why_principles.rst:5
# 9b86239902c2479e900a764939cc9931
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_why_you_know_best.rst:5
# 473daf0feef741388a65c51e70e4c6ce
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/getting_started.rst:209
# 6ffd93ad73314b69bed3824852a80937
msgid "For more information ..."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:5
# 59766ee19f2047d2bb0280d358a34fe3
msgid "For a history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:7
# 0595e3efe85c4659b1a464e1b3d3b3dd
msgid "Part one: |url opscode_youtube_short_part_one|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:8
# ce0ee9e504d54ed689b3f08362d75808
msgid "Part two: |url opscode_youtube_short_part_two|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:10
# 002d3a39192f46a29f1f6704ee7c14f8
msgid "For more information about |company_name|, cookbooks, and the community:"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:12
# 84af4dab23384112a6e82d8144346b50
msgid "|url opscode|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:13
# 67aa7f18e0ed4434aeec4bd0594a4fe9
msgid "|url opscode_community|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_for_more_info.rst:14
# a7bc9df0189745ef88421df8382a28bf
msgid "|url opscode_community_cookbooks|"
msgstr ""


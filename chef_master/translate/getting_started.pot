# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-21 22:07-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/getting_started.rst:8
# 25607b8a838941f89a616ffd1fdc51c0
msgid "Getting Started"
msgstr ""

#: ../source/getting_started.rst:10
# d27d6b12acdc430c8b123c749edcfa93
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# cb170dccf0d84c00b662b11c59d8d5a4
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 541f3f52a8ba44e5bd494d1983df3eba
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# c698eb99d92d48cfa2cf9aed9cb4778a
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/getting_started.rst:15
# f3a897f12bf142419baad4c01915dcf6
msgid "About Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:5
# 340365ff632f4aadb60e6e45c7489e53
msgid "A resource is a statement of configuration policy. It describes the desired state of an element of your infrastructure, along with the steps needed to bring that item to the desired state. Each resource statement in a |chef| recipe corresponds to a specific part of your infrastructure: a file, a template, a directory, a package, a service, a command to be executed, and so on. Each resource statement includes the resource type (such as ``template``, ``service`` or ``package``), its name, any attributes that specify additional details, and an action that tells the |chef client| how to implement the configuration policy."
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:7
# 5b27d8f716124f67b585b4b4d16dfbcb
msgid "Together, resources describe all the components in your network. Recipes group resources together and describe working configurations. Add recipes to a run-list to describe the desired state for every node to which that run-list is assigned. Cookbooks are collections of recipes and are stored on the |chef server|."
msgstr ""

#: ../source/getting_started.rst:18
# f4666e3fb41342e99b748a17904d2b86
msgid "The |chef client| includes many built-in resources that handle just about any situation. Three of these resources are an essential part of any |chef| workflow: |resource package|, |resource template|, and |resource service|. Use the |resource package| resource to install a package, the |resource template| resource to generate a file on the node that applies configuration settings for that package, and then use the |resource service| resource to start (or restart) the service associated with that package. This is a combination of resources that you will use often with |chef|."
msgstr ""

#: ../source/getting_started.rst:20
# 08ddcf8d4aa148fea7d5a3ee6bc61e81
msgid "The next step is to install |chef|, configure your workstation, and then configure |kitchen| to run virtual instances locally on that workstation. After that is finished, we'll revisit the |resource package|, |resource template|, and |resource service| resources and use them with |kitchen| to converge |ntp| into a virtual instance that is spun up and managed by |kitchen|."
msgstr ""

#: ../source/getting_started.rst:23
# 781a3a7ad6634b569d657d23d2dea6be
msgid "Workstation Setup"
msgstr ""

#: ../source/getting_started.rst:24
# 092304c705144d2a98b945331e1d767c
msgid "The |chef dk| is a package that contains everything you need to start using |chef|, along with a collection of tools and libaries that can help improve the code you are using to run your business."
msgstr ""

#: ../source/getting_started.rst:27
# e68f97aacb4b43be9acb9214a3a4024b
msgid "Install the |chef dk|"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:4
# 3b4deccc95174222afd8b2bb891b52df
msgid "To install the |chef dk|:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:6
# 9edb4b5edbba41c3a036a2328f82c764
msgid "Visit this page: http://www.getchef.com/downloads/chef-dk/ and pick your platform. The |chef dk| supports |mac os x|, |redhat enterprise linux|, |ubuntu|, and |windows|."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:7
# 7dc661e829bc4b3f9d7c4aecb851de9d
msgid "Select a platform, and then a package. (|chef docs| uses the |mac os x| setup within the documentation.)"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:8
# ff879098734a4963b6d1b4034d95e1e5
msgid "Click the download button."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:9
# 04ffb2b42a8a4daa9f481ec16984d095
msgid "Follow the steps in the installer and install the |chef dk| to your machine. The |chef dk| is installed to ``/opt/chefdk/`` on |unix| and |linux| systems."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:10
# 4fa7959d27cb4adc9a83fb995363ad51
msgid "When finished, open a command window and enter the following:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:16
# 75fe9bf0d8c249db944ee436773ed4c5
msgid "This will verify the main components of the |chef dk|: the |chef client|, the |chef dk| library, and the tools that are built into the |chef dk|. The output should be similar to:"
msgstr ""

#: ../source/getting_started.rst:31
# ea453ab57d404b828acf57b20d5568a9
msgid "What's in the |chef dk|?"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools.rst:4
# 4f16b400dbcf4d69a67082b981063429
msgid "The |chef dk| installs a collection of tools and libraries into a single directory structure, which makes it easier to manage any dependencies these tools may have on each other and the dependencies that |chef| has on |ruby|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:4
# c3d82f972b20411781fd19322af69c94
msgid "The most important tools included in the |chef dk| are:"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:10
# 60c3e3abacda42b897e9ebd5d7a4a774
msgid "Tool"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:11
# f334cbf7bb05408bba33daf1198735ea
msgid "Description"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:12
# 7c3dba41bc1f49028ded5ad677d892ba
msgid "|berkshelf|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:13
# a40c7f0548174c39a0db0187e4e52a4d
msgid "A dependency manager for cookbooks."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:14
# 43e1b4ef7c4d4082b8a83ef238c296be
msgid "|chef ctl|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:15
# 60ec129db54f428a81d0530d65befea7
msgid "A workflow tool for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:16
# e1bc122e98504ad8b070bfd9f6a287d1
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:17
# 7266b069c1304725bca958b8e29b2c2a
msgid "The agent that runs |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:18
# 6d29400d8e364986b4f7f611d797656a
msgid "|chef dk|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:19
# 762e52c5186f4e959e4cd80b8afb74a5
msgid "The |chef dk| omnibus package."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:20
# c9e3b8aaa0d141bab3c41c486bd54173
msgid "|chef spec|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:21
# 1517aa80c2894274a429caf6cee61e83
msgid "A unit testing framework that tests resources locally."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:22
# 4202a2cf497c4f668c87ac70e20f2e9a
msgid "|ruby|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:23
# 629878e04f9448babb7d29802281c09a
msgid "The reference language for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:24
# 80626bfbdd6a43fa86492e886ff5daf5
msgid "|kitchen|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:25
# dfdb3944cdc242ccb2c584396467a52e
msgid "An integration testing framework tool that tests cookbooks across platforms."
msgstr ""

#: ../source/getting_started.rst:37
# e9fef15713b543e09c4ea20ab3181a87
msgid "Set the System |ruby|"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:3
# fcf3e575d3ac4923ba15b3b2574e91d6
msgid "For many users of |chef|, the |chef dk| the version of |ruby| that is included in the |chef dk| should be configured as the default version of |ruby|."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:5
# a948587043b1475580835b3caa6c70bf
msgid "Open a command window and enter the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:11
# 2a780e042d844cbd8d8615d80cc281b0
msgid "which will return something like ``/usr/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:12
# 2a0db629cb2b471aba8cf6134ce16388
msgid "To use the |chef dk| version of |ruby| as the default |ruby|, edit the ``$PATH`` and ``GEM`` environment variables to include paths to the |chef dk|. For example, on a machine that runs |bash|, run:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:18
# 707da8f8c8b84f31a5117b99527df083
msgid "where ``bash`` and ``~/.bash_profile`` represents the name of the shell."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:20
# 026afe55bd734e6e945d143c7c9f14b9
msgid "Run ``which ruby`` again. It should return ``/opt/chefdk/embedded/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:22
# 66cfbe4d32854872a5d0b978453a5adb
msgid "Using the |chef dk|-provided |ruby| as your system |ruby| is optional. This just depends on how you are using |ruby| on your system. For many users, |ruby| is primarily used for authoring |chef| cookbooks and recipes. If that's true for you, then using the |chef dk|-provided |ruby| as your system |ruby| is recommended. But for other users who are already using tools like |rbenv| to manage |ruby| versions, then that's OK too."
msgstr ""

#: ../source/getting_started.rst:41
# 8716abc2ba574bfa82121b8441ca94f3
msgid "Your First Cookbook"
msgstr ""

#: ../source/getting_started.rst:43
# e11f2c27bc0e4d0fbf7ee8bf678b303f
msgid "We have already used the |chef ctl| ``verify`` subcommand to verify the installation of the |chef dk|. Now let's use the |chef ctl| ``generate`` subcommand to create the |chef repo|, which is the main folder in which your |chef| code will be stored. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:49
# 557335a77b7e486eba84ea3ce5e447c1
msgid "where ``name`` is a name that you have chosen for the both the |chef repo| and the default cookbook. We are calling ours ``chef-repo``; you can call yours whatever you want. (We also renamed the default cookbook to ``chefdocs``, which is totally optional.) You should have a directory structure at ``/Users/your_username/cookbook_name/`` similar to::"
msgstr ""

#: ../source/getting_started.rst:65
# ffc86f257cf54f7d8734e4bae1adac3b
msgid "Run the |chef client|"
msgstr ""

#: ../source/getting_started.rst:66
# ef3494ec2a434624aa2195a993de432d
msgid "The |chef client| includes a mode called \"local mode\", which runs the |chef client| locally on your machine. Local mode allows you to run recipes and work locally with the code you are using to run your business. Local mode does not require a connection to a |chef server|, public or private keys, or configuring of nodes. (Though we'll do all of these things later!) Many people use local mode for simple, local testing of recipes and cookbooks, often as a pre-cursor to running unit and integration tests against the same recipes and cookbooks."
msgstr ""

#: ../source/getting_started.rst:68
# d71894d6b5554392b76ba3557312d8ad
msgid "Open the ``default.rb`` recipe in the cookbook you just created. Add the following resource to that recipe:"
msgstr ""

#: ../source/getting_started.rst:76
# 6058742ec93844718943a56b5ec3d5f8
msgid "This recipe creates a file called ``test.txt`` at the path defined by the ``HOME`` environment variable. (To view that path, run ``echo \"$HOME\"`` in the command shell.)"
msgstr ""

#: ../source/getting_started.rst:78
# 21f2174d6d964e33b79660ae83b8d5a5
msgid "Next, we'll run the |chef client|. This is done via the command line and from within the |chef repo|. Use the ``--local-mode`` flag to run the |chef client| in local mode. Use the ``--override-runlist`` flag to run only the recipe we have just created. (More about the run-list later.) For a cookbook's default recipe, only the name of the cookbook needs to be specified, as that maps to the default recipe. The following command will create the file ``test.txt``:"
msgstr ""

#: ../source/getting_started.rst:84
# c97d6d3b655e477a8dca20d349a33784
msgid "where ``chefdocs`` is the name of your cookbook."
msgstr ""

#: ../source/getting_started.rst:86
# a24075ebf4824ceba3f49ac5d37ffa33
msgid "As the |chef client| adds the file to your system, output similar to the following is shown:"
msgstr ""

#: ../source/getting_started.rst:117
# 2e453ac0031743268af259144395effa
msgid "That's it. The warnings, for the moment, can be ignored. Check the root of the path defined by the ``HOME`` environment variable and find the file named ``test.txt``. The file should contain ``This file created by Chef!``."
msgstr ""

#: ../source/getting_started.rst:119
# 5ef984193ee34195a2c89c16f33848ae
msgid "# We'll come back to working with |chef| later on, but the next step is to familiarize yourself with resources and cookbooks."
msgstr ""

#: ../source/getting_started.rst:122
# 2119d0941f024c6c9aebd4e65fb07e1d
msgid "|kitchen| Setup"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# e9f35f5f00474b9fb47d5ed0e4f455bb
msgid "|kitchen| is an integration framework that is used to automatically test cookbook data across across any combination of platforms and test suites, as defined by a |kitchen yml| file. |kitchen| uses a driver plugin architecture that allows it to support cookbook testing across many cloud providers and virtualization technologies. |kitchen| supports all of the common testing frameworks used by the |ruby| community."
msgstr ""

#: ../source/getting_started.rst:125
# 61cc8f04de9f4996b25cae5e90623be5
msgid "You will need some type of virtualization software for |kitchen|. |vagrant| is the default driver for |kitchen|. Install |vagrant|. |vagrant| requires |virtualbox|, so install |virtualbox|. Once you're ready, we'll keep using the same cookbook created earlier."
msgstr ""

#: ../source/getting_started.rst:128
# 06a7a79cf0e14f7c9f31724089bf71ec
msgid "Update Metadata"
msgstr ""

#: ../source/getting_started.rst:129
# e047c8a0295c4f888773abfc716a9c9a
msgid "In that cookbok, let's update the metadata. Open the ``metadata.rb`` file. It will look similar to:"
msgstr ""

#: ../source/getting_started.rst:141
# f40834e9a3d5438c851bf51b2b9385fa
msgid "for now, let's just update the name and version settings, like this:"
msgstr ""

#: ../source/getting_started.rst:149
# 4cdcf1394bee4f1890668ba088fd3ac9
msgid "Verify |kitchen yml|"
msgstr ""

#: ../source/getting_started.rst:150
# c1a9ebe8ced44acfaa69fa37e5af1c4d
msgid "Because |kitchen| is installed as part of the |chef dk|, the |kitchen yml| file is already created:"
msgstr ""

#: ../source/getting_started.rst:171
# d8e34f5eb1b741f4bd469ca6659ab46f
msgid "Let's change the default provisioner to |chef zero|:"
msgstr ""

#: ../source/getting_started.rst:184
# 6d4dcdaf1f3340e2b71d645a4aba7d62
msgid "and also make sure the |kitchen yml| knows about the default recipe in your cookbook. Under ``suites``, make sure the ``run_list`` contains the name of your cookbook. For example:"
msgstr ""

#: ../source/getting_started.rst:194
# bdf70c7e17414e0f8fb0c4eecee89521
msgid "where ``chef-repo`` is the name of your cookbook. This will ensure that |kitchen| uses this recipe when converging."
msgstr ""

#: ../source/getting_started.rst:196
# baeab45679824215adae1a05028bc9ba
msgid "Also, |kitchen| has been added to gitignore, thor, etc. files. We just need to create the directory in which tests will be authored. This is typically a sub-directory of ``/cookbooks`` called ``/tests``. The structure underneath ``/tests`` may be customized, but is typically something like ``/test/integration/default``."
msgstr ""

#: ../source/getting_started.rst:198
# e88b4daae70042fcbc397a7d20e76af5
msgid "For now, we don't need to do anything else to get started using |kitchen|."
msgstr ""

#: ../source/getting_started.rst:201
# 49509d2cdeef48c4b3e86dbfaeadf240
msgid "View Instance List"
msgstr ""

#: ../source/getting_started.rst:202
# 6aed4afc00614000919f07658a466972
msgid "From your working directory, run the following command:"
msgstr ""

#: ../source/getting_started.rst:208
#: ../source/getting_started.rst:475
#: ../source/getting_started.rst:526
# 7834f6c4ea334564a9a456eae6f3a9e4
# 479d25e7d22249129596ef07e8d9f938
# 2508118cab854058b1b1240a0a105dd9
msgid "which will return something similar to:"
msgstr ""

#: ../source/getting_started.rst:216
# 71ce33cbd8cd41a59fc36bc552cddfc3
msgid "So there are two available platforms---|ubuntu| 12.04 and |centos| 6.4---configured to use the |vagrant| driver (which is enabled via the ``kitchen-vagrant`` driver that is built-in to the |chef dk|), and to run |chef zero| while running tests."
msgstr ""

#: ../source/getting_started.rst:219
# 873fbf80725149a2aaef8661aa8173ca
msgid "Create |centos| Instance"
msgstr ""

#: ../source/getting_started.rst:220
# 87d5fa00762948249eb006f2256ffa11
msgid "Let's create an instance. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:226
# d3959f31089546fd9bb32eac18888ab5
msgid "This will start |vagrant|, which will then build a machine that rubs |centos| 6.4. (If this is the first time you're running |kitchen|, then |centos| needs to first be downloaded from the default instance location and may take a few minutes.)"
msgstr ""

#: ../source/getting_started.rst:261
#: ../source/getting_started.rst:318
# e8d2bde175784f989f17853960f59b38
# e05fc7887f3a4e07b40c06d315253671
msgid "Verify the instance list with the following command:"
msgstr ""

#: ../source/getting_started.rst:267
# b63e4a42c9724164b48ab47ccc4dc790
msgid "and you will see the following:"
msgstr ""

#: ../source/getting_started.rst:276
# 82dfa22f84fe40e7a444929ac901ff63
msgid "Create |ubuntu| Instance"
msgstr ""

#: ../source/getting_started.rst:277
# 2d6578a922d54bbf889de62386447f1f
msgid "Now let's create the |ubuntu| instance:"
msgstr ""

#: ../source/getting_started.rst:283
# f01a59a2af4d48c08e7a514fc335317d
msgid "this may also take a few minutes, but will (eventually) return something similar to:"
msgstr ""

#: ../source/getting_started.rst:330
# db93ff0d97ae4d74adcae9d872eb2df8
msgid "and now we're all set up! We're going to use the same recipe and cookbook that we already created."
msgstr ""

#: ../source/getting_started.rst:333
# 9d4950ade74b4ee4b5a06b38b55bfaed
msgid "Converge |centos|"
msgstr ""

#: ../source/getting_started.rst:334
# 9baa0ad08b3f4dc089dddf42bb409ae4
msgid "Now that we're all configured and ready to run |kitchen|, let's try it in |centos|:"
msgstr ""

#: ../source/getting_started.rst:340
# 43a4b86972e2470c96bcc184ea32ab7b
msgid "The first time you run this, it'll have to download the |chef client| and will show something similar to the following while it converges the node via |kitchen|:"
msgstr ""

#: ../source/getting_started.rst:391
# a611eb00d5734f209c0fa82002291b69
msgid "Converge |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:392
# 02ca4367516f4db7898033bf27582792
msgid "Now let's try it in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:398
# f3fd8cd814404912b71adcaa42f81b4f
msgid "Like |centos|, the |chef client| will need to be downloaded:"
msgstr ""

#: ../source/getting_started.rst:448
#: ../source/getting_started.rst:727
# 9d24bc01fa8f45b496f793cacdc35a94
# c5f898b344904340a7babbdc41e13304
msgid "Verify Instance List"
msgstr ""

#: ../source/getting_started.rst:449
#: ../source/getting_started.rst:728
# bfcff3930e21442e8f5995c45343c8f6
# 97d3b14a54054df3b2308169251cf863
msgid "To verify if both instances have been converged, run the following command:"
msgstr ""

#: ../source/getting_started.rst:461
# 58af61950bcc443380353baaccd470a0
msgid "Now you can run your cookbooks in a virtual instance managed by |kitchen| on multiple platforms (|ubuntu| and |centos|)."
msgstr ""

#: ../source/getting_started.rst:464
# 29d1f8105f624806b6617394fe4a046c
msgid "Configure NTP"
msgstr ""

#: ../source/getting_started.rst:465
# 7c3ceed05cf748aaa5c6de3b087a2c3f
msgid "Instead of putting a text file on these |kitchen| instances, let's try something useful and install |ntp|. Within the cookbook we're already using, let's update the default recipe to install and configure |ntp| using the |resource package|, |resource template|, and |resource service| resources, a template file, and an attributes file."
msgstr ""

#: ../source/getting_started.rst:468
# 8c883227a7914deb8e07b4e4efd21288
msgid "Add Template"
msgstr ""

#: ../source/getting_started.rst:469
# aea48b06004442ec872fcc88b158385f
msgid "The |resource template| resource looks for templates in a cookbook's ``/templates`` directory. Template files in this directory must be |erb| files. The |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the template file we'll use to configure |ntp| using this command. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:487
#: ../source/getting_started.rst:538
# 1707e3d3dd004889b2dc72f7620faf4d
# 78d4260073dd4c52a396755d49eca9f1
msgid "and a directory structure in that cookbook similar to::"
msgstr ""

#: ../source/getting_started.rst:505
# fddd7873167f4714b3d50c4274d67f01
msgid "and an empty ``ntp.conf.erb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:519
# 6b946f7fc0c74563a4365a7db90fdb45
msgid "Add Attributes"
msgstr ""

#: ../source/getting_started.rst:520
# 9c1aada56c03471eb8dca1406d006501
msgid "The name of the init script that is used to run |ntp| is ``ntp`` on |debian|-based platforms (such as |ubuntu|) and is ``ntpd`` on |redhat enterprise linux|-based platforms. Let's use an attribute in our cookbook to tell the |chef client| what to do on both platforms using a single cookbook attribute. Like for templates, the |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the default attribute file we'll use to tell the |chef client| how to handle the attribute. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:558
# 51458ad92a16430fa908ccad46c6bfe3
msgid "and an empty ``default.rb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:572
# dbed863b3c804faf8a10e37d7d330d39
msgid "This attribute uses conditions to tell the |chef client| the correct name of the init script that will be used to start |ntp|, by platform. The attribute that is being set by this code block is ``node[:ntp][:service]`` and the |chef client| can use this attribute to identify the correct init script for |ntp| on any node and for any platform. If |debian|, use ``ntp`` and for everything else use ``ntpd``."
msgstr ""

#: ../source/getting_started.rst:575
# a7de088589f84f8ba3e5203956fae75b
msgid "Edit Recipe"
msgstr ""

#: ../source/getting_started.rst:576
# a2ada4ab59544f4a9ffad40100a1a76c
msgid "To install |ntp|, a recipe needs to do three things:"
msgstr ""

#: ../source/getting_started.rst:578
# 9394025cadac4a1d9aea32a7b153e406
msgid "# Install |ntp| # Create a configuration file; this will be done using the ``ntp.conf.erb`` template file # Start the ``ntp`` or ``ntpd`` service, depending on the platform; this will be done using the ``node[:ntp][:service]`` attribute"
msgstr ""

#: ../source/getting_started.rst:582
# 0a4c9be348294fee95f32d8341839ef4
msgid "Open the ``default.rb`` recipe file and replace the contents of that file with the following:"
msgstr ""

#: ../source/getting_started.rst:601
# d07fc1601c5743cabf29ce64ca4d3364
msgid "The |resource package| resource installs the |ntp| package. The |resource template| resource gets the template file from the cookbook, and then uses it to create a ``ntp.conf`` file in the ``/etc/ntp.conf`` directory on the node, after which it notifies the |resource service| resource to restart the ``ntp`` or ``ntpd`` service. The |resource service| resource ensures that the ``ntp`` or ``ntpd`` service is started and enabled."
msgstr ""

#: ../source/getting_started.rst:604
# a66fd2a25b1d42fa96817dd64f364799
msgid "Install |ntp| on |centos|"
msgstr ""

#: ../source/getting_started.rst:605
# 829b4d9751784385bce011f91d1275a8
msgid "Now let's install |ntp| in |centos|:"
msgstr ""

#: ../source/getting_started.rst:611
#: ../source/getting_started.rst:672
# 5c619697fc5047d5957ac3228730999e
# e2c0d76bd08f49d994aebadf1d22aadb
msgid "As it installs, the |chef client| will report back something similar to the following:"
msgstr ""

#: ../source/getting_started.rst:665
# f9edaf312a11441693bd3108e481c8d6
msgid "Install |ntp| on |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:666
# 5b474619dfb74adda66dd98d9b048af1
msgid "And finally, install |ntp| in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:741
# bc5d108858de40bfb397403691cc2446
msgid "More About Resources"
msgstr ""

#: ../source/getting_started.rst:742
# 4ccd9410411944d1987180389113b13c
msgid "The |chef client| includes many built-in resources: |resource execute|, |resource directory|, |resource package|, |resource service|, |resource file|, |resource template|, |resource user|, |resource script|, and |resource scm_git|."
msgstr ""

#: ../source/getting_started.rst:744
# 2bc031eb90a746c7b07b169bcfa1f57c
msgid "The sections below quickly describe the most popular resources. For the full list of built-in |chef| resources, see `Resources <http://docs.opscode.com/resource.html#resources>`_. You can also `create your own resources <http://docs.opscode.com/lwrp_custom.html>`_ or `use the resources built into the community cookbooks <http://supermarket.getchef.com>`_."
msgstr ""

#: ../source/getting_started.rst:747
# d9c357fd2aa340ce8408f4d319b7fa9e
msgid "Execute Commands"
msgstr ""

#: ../source/getting_started.rst:748
# 6b369f3b33d2473188cd65f385dd055a
msgid "Commands are executed using the |resource execute| resource using an attribute to specify the actual command to run. See :doc:`execute </resource_execute>` for more information about executing commands."
msgstr ""

#: ../source/getting_started.rst:751
# c336853848124d77aac76a1cc50c6e07
msgid "Manage Directories"
msgstr ""

#: ../source/getting_started.rst:752
# 5bce3f8fa5e74234ad166c65c974f524
msgid "Directories are hierarchies of folders that comprise all the information stored on a computer. There are two ways to manage directories. The first is via the |resource directory| resource, which manages directories starting from the root directory. And the second is the |resource remote_directory|, which transfers directory structures defined in cookbooks to nodes. See :doc:`directory </resource_directory>` for more information about managing directories. If the directory is defined in a cookbook, use :doc:`remote_directory </resource_remote_directory>` instead."
msgstr ""

#: ../source/getting_started.rst:755
# 0a31f478265f45f4b45e74e4c60342a3
msgid "Manage Packages"
msgstr ""

#: ../source/getting_started.rst:756
# 47fb569573ef4db8bd66d7bca1bfe26a
msgid "Packages are collections of files that comprise software applications or some part of an operating system. Use the package resource to manage these packages, unless they are sourced via |rubygems| and installed directly from within recipes or are sourced from a cookbook. See :doc:`package </resource_package>` for more information about managing packages. There are quite a few platform-specific package resources as well, though most of the time simply using the |resource package| is all that's necessary. For packages that are located in cookobooks, use :doc:`chef_gem </resource_chef_gem>`. And for packages that are only included via recipes, use :doc:`gem_package </resource_gem_package>`."
msgstr ""

#: ../source/getting_started.rst:759
# 6d60761b9d934579a3249a8869cbedeb
msgid "Manage Services"
msgstr ""

#: ../source/getting_started.rst:760
# 69ec020cfcc444da82944f7cf0c1688f
msgid "Services can be started, stopped, enabled, disabled, reloaded, and restarted. See :doc:`service </resource_service>` for more information about managing services."
msgstr ""

#: ../source/getting_started.rst:763
# 4bd683f1447647d79f3cd868ccf2d47d
msgid "Manage Files"
msgstr ""

#: ../source/getting_started.rst:764
# d68e47866b8d4dfa87c69e432df4f7dc
msgid "Files are managed in several ways. The |resource file| resource manages files that are already present on a node. Files are transferred to nodes from cookbooks using the |resource cookbook_file| resource and are transferred to nodes from remote locations using the |resource remote_file| resource. See :doc:`file </resource_file>` for more information about managing files, :doc:`remote_file </resource_remote_file>` for transferring files from remote locations, and :doc:`cookbook_file </resource_cookbook_file>` for transferring files that are located in cookbooks."
msgstr ""

#: ../source/getting_started.rst:767
# 9f4b651a949941c6ae879a7610e54ef7
msgid "Manage Templates"
msgstr ""

#: ../source/getting_started.rst:768
# 3694a8b72468479c838110fafd1b4727
msgid "Templates are used to generate files based on variables and logic contained within the template file. |chef| uses |erb| templates and |ruby| expressions and statements to define the template file. Template source files must be located within cookbooks. See :doc:`template </resource_template>` for more information about managing files using |erb| templates."
msgstr ""

#: ../source/getting_started.rst:771
# 76a81d9d1a1b45caac6aa47443eb05d7
msgid "Manage Users, Groups"
msgstr ""

#: ../source/getting_started.rst:772
# 6e137553b6b44784b89f643432f3b305
msgid "Users and groups can be added, updated, removed. User passwords can be locked and unlocked. See :doc:`user </resource_user>` for more information about managing users and user passwords. The :doc:`group </resource_group>` resource manges groups."
msgstr ""

#: ../source/getting_started.rst:775
# 09f92f07f2d946d4a11e749066d336b0
msgid "Use Script Interpreters"
msgstr ""

#: ../source/getting_started.rst:776
# 769eb8bca3fd4e30aca958878623ae76
msgid "Script interpreters execute scripts on a node, similar to the |resource execute| resource, and with the ability to specify the interpreter that the |chef client| should use. See :doc:`script </resource_script>` for more (general) information about using scripts in recipes. Interpreter-specific resources are available, with :doc:`bash </resource_bash>` being the most popular. Also available: :doc:`csh </resource_csh>`, :doc:`perl </resource_perl>`, :doc:`powershell_script </resource_powershell_script>`, :doc:`python </resource_python>`, and :doc:`ruby </resource_ruby>`. Two |windows|-specific resources are also available: :doc:`batch </resource_batch>` and :doc:`powershell_script </resource_powershell_script>`."
msgstr ""

#: ../source/getting_started.rst:779
# a4a91c9518d0498f92ccba490063715c
msgid "Use Source Control"
msgstr ""

#: ../source/getting_started.rst:780
# 54823fad39484adb84d911d126dbd601
msgid "Most users of |chef| keep their code in some type of version source control. |chef| can interact with this code from recipes. |git| is a very popular choice. The :doc:`git </resource_git>` resource is used to manage files that exist in a |git| repository. There is also a resource for :doc:`subversion </resource_subversion>`, another popular version source control tool."
msgstr ""

#: ../source/getting_started.rst:784
# b6194bbdfe2644c6818973c11f0a415c
msgid "About Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# b758ae81858744938a46669b29af927b
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 64acc0cab135410ea0df7b691b8afa2f
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 55c7dc5c1949438683972b03816c892b
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 0285335f11eb497999085926f20cce3d
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 9e90341530b54a9aaed002f934a83f4e
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 4496c0cac39b4689828b1e70fb4c4b61
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 9d07fcbf06b74a5eb83cb9ff2722891f
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 29d3bc98afe144eeb7c195bc5ec220fa
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 7b0ebe05697644309bdd7c91acbbb7c5
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 1f18ebf617014dadba05943776639eed
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/getting_started.rst:787
# e2fd5595e6d449719f7f2ebd3f726650
msgid "Every cookbook follows a defined structure, but individiaul cookbooks can take on many different styles depending on how your organization wants to manage its code, who authored them, and how they are intended to be used. Some cookbooks contain only a single, default recipe. Others may contain only a library file. Some may contain only a few attributes. And other cookbooks may contain several custom resources along with many attributes and templates, and so on."
msgstr ""

#: ../source/getting_started.rst:789
# 3622a71a78d14ef6b27c84de18025c58
msgid "Some cookbooks you will build yourself. Some cookbooks will be provided by the community. Most community cookbooks will be managed using |berkshelf|, which is a dependency manager included in the |chef dk|. Occasionally, a community cookbook will be forked, but more often a wrapper cookbook is created to handle your organization-specific requirements while still allowing use of the community cookbook."
msgstr ""

#: ../source/getting_started.rst:791
# 098b3ce4452f43f098872310c25bedfb
msgid "The most important thing to know about cookbooks is that there are lots of ways to build good ones. There are patterns to follow, there are guidelines. There are recomended ways of dealing with attributes. There are recommended ways of creating custom resources. But ultimately, a good cookbook is the one that works for your organization. Ideally, this cookbook works across your infrastructure. Most organizations have a mix of private (internal) and public (community) cookbooks in use in their organization."
msgstr ""

#: ../source/getting_started.rst:794
# fb28834eb0144b47ac8b41483b86364a
msgid "Cookbook Patterns"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:6
# 02266c055dca44f0be59f0fb8d54dc09
msgid "A primary goal of cookbook authoring is to create cookbooks that are reusable as building blocks, where each cookbook defines a specific configuration piece used by the organization. For example, say all servers across the organization will run |cron| and |ntp|, but only front-end servers in production will be load balanced. This building block approach relies on some basic guidelines:"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:8
# 6a04f9c2213b49cf9436d355627a12e8
msgid "All cookbooks are kept in version source control"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:9
# 9276f3d5cbb64eb7b6471e473e7a3e3a
msgid "Cookbooks are never forked from their |github| repositories"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:10
# 307da33b21f0461aa1991d8a66e92876
msgid "Cookbooks may be kept in the |chef repo|, but are typically kept in their own dedicated repositories outside of the |chef repo|"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:11
# cc3b5b040e894e62b34f18347fc66d46
msgid "Cookbooks are kept as small as possible and are focused on specific configuration targets, with changes to cookbooks tracked as versions of that cookbook"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:12
# dd86d377106e4d348e16a5fadec6bd86
msgid "Cookbooks are better when unit and integration testing is done against them, automatically"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:13
# dbd23ab839494fde93e1c8dd08082b70
msgid "When a cookbook is uploaded to the |chef server|, it is versioned and that version is frozen"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:14
# 451c48b900d64c539348fe4d0b5fd735
msgid "Community cookbooks are a great resource; often a community cookbook can be used wholesale (without changes), but sometimes a community cookbook needs a wrapper that is used to ensure specific organizational requirements are met"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:15
# 89ba026e399040cea0bd122cdf2b679f
msgid "Recipes in cookbooks should be modular, minimally prescriptive, and use custom resources to expose repeatable patterns that are needed to solve implementation-specific requirements"
msgstr ""

#: ../source/getting_started.rst:798
# 1e0fcf914e8c4df0bd47af29dc245c47
msgid "About |ruby|"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# cfa1066df6254f59b50e2ad1801826a0
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../source/getting_started.rst:802
# d84b5b817fa94caaa468320ee09b278b
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# d5362acc36844e1d88aa62efbbdb2c5f
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# bb8ab3f4684647e7a33edf9b5fec800b
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/getting_started.rst:808
# 08ae670e517544f2988105a706e7f4d4
msgid "For more information ..."
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:5
# 37a48333b0de455eb4d7e013d608c65c
msgid "For a history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:7
# 6e225030b7ff4812aee9ad77a875cbc5
msgid "Part one: |url opscode_youtube_short_part_one|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:8
# 86b68795d6394b4d93181c6eaeb17677
msgid "Part two: |url opscode_youtube_short_part_two|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:10
# f3b16053db3b48b0a71e5940abf18030
msgid "For more information about |company_name|, cookbooks, and the community:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:12
# e3df2eb23f7a4e32a6a723f9a2783073
msgid "|url opscode|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:13
# 28fa52c631864054a35d0a24e02762f8
msgid "|url opscode_community|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:14
# 5d0b2073b9d2439698628ce1be44389c
msgid "|url opscode_community_cookbooks|"
msgstr ""


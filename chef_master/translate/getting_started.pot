# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 21:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/getting_started.rst:8
# 8e49fb9a041b4be790e9aac11d3ebbaf
msgid "Getting Started"
msgstr ""

#: ../source/getting_started.rst:10
# 8c3aa4939de549129a9ebd4b0239b13b
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 241c8a440fed4c62b7332f7f66f4b4fe
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 9c8f817c886b462aa7f9850c02c8d264
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/getting_started.rst:14
# 6996cf48f4ac43a6b7f6f349290ba162
msgid "This topic is a work in progress. It needs some editing, but you should be able to install the Chef DK and then configure Kitchen to build CentOS and Ubuntu instances, and then converge a node using the NTP cookbook. More sections are planned for future updates that will include more scenarios for Kitchen, new scenarios for ChefSpec, Berkshelf, and Chef policy. Feedback on the getting started page may be sent to docs @ getchef dot com."
msgstr ""

#: ../source/getting_started.rst:17
# 7c9f7c15f7b24d99b32395aebb654fbe
msgid "About Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:5
# 7ef19e6018fb4d66a09e7ed6fd1cc184
msgid "A resource is a statement of configuration policy that:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:7
# 333b0d05f86542bd81d8e64dcfe0eb16
msgid "Describes the desired state for an item"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:8
# 59354049079c49d9aded32f05086873f
msgid "Declares the steps needed to bring that item to the desired state"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:9
# 8944899bd30945199918620332cc9f00
msgid "Specifies a resource type---such as ``package``, ``template``, or ``service``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:10
# 2c1a4fa654454f049d580fd8e0002fba
msgid "Lists additional details (also known as attributes), if necessary"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:11
# 71bf9bd30cb145ac9a115f6aeab0efe4
msgid "Tells the |chef client| which action to take"
msgstr ""

#: ../../includes_resources_common/includes_resources_common.rst:13
# d83584e6f2a940c6940db78fc785b210
msgid "Resources are grouped into recipes, which describe working configurations. For example, a package to install, the location of a template from which to build a file, and a service to be started."
msgstr ""

#: ../source/getting_started.rst:20
# 00861f1fbeb84639ac3ad8f9976f5d86
msgid "The |chef client| includes many built-in resources that handle just about any situation. Three of these resources are an essential part of any |chef| workflow: |resource package|, |resource template|, and |resource service|. Use the |resource package| resource to install a package, the |resource template| resource to generate a file on the node that applies configuration settings for that package, and then use the |resource service| resource to start (or restart) the service associated with that package. This is a combination of resources that you will use often with |chef|."
msgstr ""

#: ../source/getting_started.rst:22
# 2b89c7b6754e4b0eaf153af99be175ad
msgid "The next step is to install |chef|, configure your workstation, and then configure |kitchen| to run virtual instances locally on that workstation. After that is finished, we'll revisit the |resource package|, |resource template|, and |resource service| resources and use them with |kitchen| to converge |ntp| into a virtual instance that is spun up and managed by |kitchen|."
msgstr ""

#: ../source/getting_started.rst:25
# d634dc83e2fc4bc68307086667bb2198
msgid "Workstation Setup"
msgstr ""

#: ../source/getting_started.rst:26
# ea68994a1b4543989fea04746732eeea
msgid "The |chef dk| is a package that contains everything you need to start using |chef|, along with a collection of tools and libaries that can help improve the code you are using to run your business."
msgstr ""

#: ../source/getting_started.rst:29
# bc24e3c7869b45bc8bde04f2f1fc6eaa
msgid "Install the |chef dk_title|"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:4
# 5eef3dd21c0043a2906563e6472bb8e2
msgid "To install the |chef dk|:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:6
# 63d13db99a084b88b027df34fc74d81f
msgid "Visit this page: http://downloads.chef.io/chef-dk/. The |chef dk| supports |mac os x|, |redhat enterprise linux|, |ubuntu|, and |windows|."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:7
# 0fab3508c8cf49ce9dc0f894111ac2e0
msgid "Select a platform, and then a package. (|chef docs| uses the |mac os x| setup within the documentation.)"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:8
# d814cb52bdf642b495c49a48c48e12a3
msgid "Click the download button."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:9
# 3911074e7c8b435ca46485ada3d98e59
msgid "Follow the steps in the installer and install the |chef dk| to your machine. The |chef dk| is installed to ``/opt/chefdk/`` on |unix| and |linux| systems."
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:10
# 7155cba15e9e441f88e0e9d2f70e3b6e
msgid "When finished, open a command window and enter the following:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:16
# e280611622a643519d30c567c01b852e
msgid "This will verify the main components of the |chef dk|: the |chef client|, the |chef dk| library, and the tools that are built into the |chef dk|. The output should be similar to:"
msgstr ""

#: ../../includes_install/includes_install_chef_dk.rst:25
# c136bec10d444f44bbe4d66912a2590f
msgid "Optional. Set the default shell. On |windows| it is strongly recommended to use |windows powershell| and cmd.exe."
msgstr ""

#: ../source/getting_started.rst:33
# d9c8c0d254614ed4a8b7a86f766bcedc
msgid "What's in the |chef dk_title|?"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools.rst:4
# b0f1cda19aec4b2ebf7ea05220371cea
msgid "The |chef dk| installs a collection of tools and libraries into a single directory structure, which makes it easier to manage any dependencies these tools may have on each other and the dependencies that |chef| has on |ruby|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:4
# 72c5704494054d34b9c0579f2d6b48e1
msgid "The most important tools included in the |chef dk| are:"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:10
# 538af10403dc4f3a997d4663f1d981be
msgid "Tool"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:11
# 82e6b44ab9324290a4aabfdcd63ccbbc
msgid "Description"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:12
# a74c0b1be3244e4189fc489e699918e0
msgid "|berkshelf|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:13
# 3cf8b7c44e094cf0aa6fc5f7d4e5cd97
msgid "A dependency manager for cookbooks."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:14
# e3bf8a7d896c4e33b05d7297e17cf942
msgid "|chef ctl|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:15
# ffcf7ed522f44248811bffc3c4875301
msgid "A workflow tool for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:16
# 3533d3669da643c9bc3ade6991466ed7
msgid "|chef dk_title|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:17
# 24a3665c496c4558be06fba9989a3623
msgid "The |chef dk| omnibus package."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:18
# 2a41b0105700446dbdc66153582e0bfe
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:19
# cb1b5ddc3a7e4272839ace08fc01314d
msgid "The agent that runs |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:20
# ecdc197c392a457b8ca7971e46598900
msgid "|chef vault|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:21
# 6f887c54516f45a1b30ce9f665214ad8
msgid "Use to encrypt data bag items using the public keys of a list of nodes. This allows only those odes to decrypt the encrypted values."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:22
# af479e74fbfe4c19bbf0b1a1a7ac015a
msgid "|chef spec|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:23
# 43673fe4d6434b92be8a6a1a63dbf18f
msgid "A unit testing framework that tests resources locally."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:24
# 565c925121594499b4dee183b65b1b1c
msgid "|fauxhai|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:25
# 3e6eb4116f89429eb7aa0ac5573dc9c7
msgid "A gem for mocking |ohai| data."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:26
# ad6128b290f446e4a72b9415c5f06e62
msgid "|foodcritic|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:27
# 4db2f5ec58644964a227b6907fc5b998
msgid "A lint tool for static analysis of recipe code."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:28
# 7c0b0a8d303d43b9bc5723e1822f25d6
msgid "|kitchen|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:29
# 5e2fa1aba9ff4eb2aa8dde2c5cb474fa
msgid "An integration testing framework tool that tests cookbooks across platforms."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:30
# 8e4437a0e3024da8ac0f0491b7105841
msgid "|kitchen_vagrant|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:31
# 82990dcda0c84ff391da3b1ea4304f1f
msgid "A |kitchen| driver for |vagrant|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:32
# d0b40568a00846e3bbcacde6518c79e6
msgid "|knife spork|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:33
# 99eae1ede5af4251b80a856d564bd3a7
msgid "A workflow plugin for |knife| that helps groups of people work together in the same |chef repo| and |chef server|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:34
# 19a211cdada94b56b7f25bba15e42f00
msgid "|ruby|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:35
# 636c6c6c675445aab19094a95ce92f9c
msgid "The reference language for |chef|."
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:36
# 9a003cd3134f4994b8ee77a1feb18259
msgid "|rubocop|"
msgstr ""

#: ../../includes_chef_dk/includes_chef_dk_tools_main.rst:37
# 43405932576b4f0f9d867307426cd7a6
msgid "A static code analyzer for |ruby|."
msgstr ""

#: ../source/getting_started.rst:39
# f39bf7a22a384e499fa204f6cdc94998
msgid "Set the System |ruby|"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:3
# 11a80427de6d4885aa622653f659397f
msgid "For many users of |chef|, the |chef dk| version of |ruby| that is included in the |chef dk| should be configured as the default version of |ruby|."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:5
# 833e6dadfeb34bca86b1cbad61c19627
msgid "Open a command window and enter the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:11
# 6824953239404a76b821534aca16b38f
msgid "which will return something like ``/usr/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:12
# 28c365cd7ee34d58ab0bbda29d5f5f26
msgid "To use the |chef dk| version of |ruby| as the default |ruby|, edit the ``$PATH`` and ``GEM`` environment variables to include paths to the |chef dk|. For example, on a machine that runs |bash|, run:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:18
# 4615033d2dbd42c68c786084ecc05222
msgid "where ``bash`` and ``~/.bash_profile`` represents the name of the shell."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:20
# 82d9f3c695ae43c3adc66726233b2cc7
msgid "If zsh is your preferred shell then run the following:"
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:26
# 82b0b319020c4a35ad319ac135484c18
msgid "Run ``which ruby`` again. It should return ``/opt/chefdk/embedded/bin/ruby``."
msgstr ""

#: ../../step_ruby/step_ruby_set_system_ruby_as_chefdk_ruby.rst:28
# b54cdbc6f45440d3b8b7854a6c4b8460
msgid "Using the |chef dk|-provided |ruby| as your system |ruby| is optional. This just depends on how you are using |ruby| on your system. For many users, |ruby| is primarily used for authoring |chef| cookbooks and recipes. If that's true for you, then using the |chef dk|-provided |ruby| as your system |ruby| is recommended. But for other users who are already using tools like |rbenv| to manage |ruby| versions, then that's OK too."
msgstr ""

#: ../source/getting_started.rst:43
# 708587e460024418be1771ca3e80b4f5
msgid "Your First Cookbook"
msgstr ""

#: ../source/getting_started.rst:45
# ba97a85f1a89415b9d3a60e118012680
msgid "We have already used the |chef ctl| ``verify`` subcommand to verify the installation of the |chef dk|. Now let's use the |chef ctl| ``generate`` subcommand to create the |chef repo|, which is the main folder in which your |chef| code will be stored. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:51
# 747df9ffb49e471bbd76ddef7e6f6aa9
msgid "where ``name`` is a name that you have chosen for the both the |chef repo| and the default cookbook. We are calling ours ``chef-repo``; you can call yours whatever you want. (We also renamed the default cookbook to ``chefdocs``, which is totally optional.) You should have a directory structure at ``/Users/your_username/cookbook_name/`` similar to::"
msgstr ""

#: ../source/getting_started.rst:67
# 4207fe62199f47e2baafdcc719b1700b
msgid "Run the |chef client_title|"
msgstr ""

#: ../source/getting_started.rst:68
# fe1e72a4e6ae4177b5836d5e9af40e81
msgid "The |chef client| includes a mode called \"local mode\", which runs the |chef client| locally on your machine. Local mode allows you to run recipes and work locally with the code you are using to run your business. Local mode does not require a connection to a |chef server|, public or private keys, or configuring of nodes. (Though we'll do all of these things later!) Many people use local mode for simple, local testing of recipes and cookbooks, often as a pre-cursor to running unit and integration tests against the same recipes and cookbooks."
msgstr ""

#: ../source/getting_started.rst:70
# b6693daff64b4b7a870232384a38f8a4
msgid "Open the ``default.rb`` recipe in the cookbook you just created. Add the following resource to that recipe:"
msgstr ""

#: ../source/getting_started.rst:78
# e5ca120579334e9c9a2e4daeedc711f3
msgid "This recipe creates a file called ``test.txt`` at the path defined by the ``HOME`` environment variable. (To view that path, run ``echo \"$HOME\"`` in the command shell.)"
msgstr ""

#: ../source/getting_started.rst:80
# fa1bf67c56154699bd41d86188fdea3e
msgid "Next, we'll run the |chef client|. This is done via the command line and from within the |chef repo|. Use the ``--local-mode`` flag to run the |chef client| in local mode. Use the ``--override-runlist`` flag to run only the recipe we have just created. (More about the run-list later.) For a cookbook's default recipe, only the name of the cookbook needs to be specified, as that maps to the default recipe. The following command will create the file ``test.txt``:"
msgstr ""

#: ../source/getting_started.rst:86
# 743f6835ccc5466984f1124d75bbc6d9
msgid "where ``chefdocs`` is the name of your cookbook."
msgstr ""

#: ../source/getting_started.rst:88
# cbfe852d41514fda8798be1cc429c9cc
msgid "As the |chef client| adds the file to your system, output similar to the following is shown:"
msgstr ""

#: ../source/getting_started.rst:119
# d7058b01b79b4522aebdf89a4931cf8c
msgid "That's it. The warnings, for the moment, can be ignored. Check the root of the path defined by the ``HOME`` environment variable and find the file named ``test.txt``. The file should contain ``This file created by Chef!``."
msgstr ""

#: ../source/getting_started.rst:121
# 057bb66bc588430793342841086afe7c
msgid "# We'll come back to working with |chef| later on, but the next step is to familiarize yourself with resources and cookbooks."
msgstr ""

#: ../source/getting_started.rst:124
# db34d30806764ac682dfd06e78515d5c
msgid "|kitchen_title| Setup"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 6dd1692df70e4764a351770889cfaec2
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# e6dee72fc0ac434288ea1d1c3f9ff251
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 1295f42991b7497aae8df7fd938d20ad
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# a2364c33265942beb3fa5c6be87045d4
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# 10cabf5049774ac89c259dbeb61002c8
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../source/getting_started.rst:127
# 0e631fc5fde94e5687aa22a827f580dc
msgid "You will need some type of virtualization software for |kitchen|. |vagrant| is the default driver for |kitchen|. Install |vagrant|. |vagrant| requires |virtualbox|, so install |virtualbox|. Once you're ready, we'll keep using the same cookbook created earlier."
msgstr ""

#: ../source/getting_started.rst:130
# 4f8e6f5c01bf437aaf05e03c8dbf2c18
msgid "Update Metadata"
msgstr ""

#: ../source/getting_started.rst:131
# a71007a43b29404c8773d6d140926c6c
msgid "In that cookbok, let's update the metadata. Open the ``metadata.rb`` file. It will look similar to:"
msgstr ""

#: ../source/getting_started.rst:143
# 627aee04f41240e9865480e481d3e7cf
msgid "for now, let's just update the name and version settings, like this:"
msgstr ""

#: ../source/getting_started.rst:151
# f401fa0625c948f5872de98de57cb50b
msgid "Verify |kitchen yml|"
msgstr ""

#: ../source/getting_started.rst:152
# 057dbd9be8f54634bd572d36e26da762
msgid "Because |kitchen| is installed as part of the |chef dk|, the |kitchen yml| file is already created:"
msgstr ""

#: ../source/getting_started.rst:173
# 36fb189037f749949b2492f2b20c11d3
msgid "Let's change the default provisioner to |chef zero|:"
msgstr ""

#: ../source/getting_started.rst:186
# b84b6a10496e48d7a5f335eb37ae2006
msgid "and also make sure the |kitchen yml| knows about the default recipe in your cookbook. Under ``suites``, make sure the ``run_list`` contains the name of your cookbook. For example:"
msgstr ""

#: ../source/getting_started.rst:196
# cbdd5ce32b9a4f74afba23ff6774abe8
msgid "where ``chef-repo`` is the name of your cookbook. This will ensure that |kitchen| uses this recipe when converging."
msgstr ""

#: ../source/getting_started.rst:198
# f7c787cd881044449fbfff39b4b62899
msgid "Also, |kitchen| has been added to gitignore, thor, etc. files. We just need to create the directory in which tests will be authored. This is typically a sub-directory of ``/cookbooks`` called ``/tests``. The structure underneath ``/tests`` may be customized, but is typically something like ``/test/integration/default``."
msgstr ""

#: ../source/getting_started.rst:200
# 789bce9439764861ada20ef2770a83c3
msgid "For now, we don't need to do anything else to get started using |kitchen|."
msgstr ""

#: ../source/getting_started.rst:203
# 2aa4db72c9e14c24a4c99cb6fc139acc
msgid "View Instance List"
msgstr ""

#: ../source/getting_started.rst:204
# 30ff79e8fb1c451aaa466b81f001a7f7
msgid "From your working directory, run the following command:"
msgstr ""

#: ../source/getting_started.rst:210
#: ../source/getting_started.rst:477
#: ../source/getting_started.rst:528
# d17240e97dff4613aa1ffa647db0b9ac
# 8e1a0d929fa24ce1b90a7593fa39de73
# 589f52bdcefb4d1da781af5bb28bde1a
msgid "which will return something similar to:"
msgstr ""

#: ../source/getting_started.rst:218
# 45487f9969ad4fde8149104d3d1a59d4
msgid "So there are two available platforms---|ubuntu| 12.04 and |centos| 6.4---configured to use the |vagrant| driver (which is enabled via the ``kitchen-vagrant`` driver that is built-in to the |chef dk|), and to run |chef zero| while running tests."
msgstr ""

#: ../source/getting_started.rst:221
# 6e301457e4074b9fbac9cc3f9f65b27c
msgid "Create |centos| Instance"
msgstr ""

#: ../source/getting_started.rst:222
# 19032e28bfeb46b0a0e18775d0d45ee2
msgid "Let's create an instance. Run the following command:"
msgstr ""

#: ../source/getting_started.rst:228
# addf0041bf5448239be0c2ad7e4ad03c
msgid "This will start |vagrant|, which will then build a machine that rubs |centos| 6.4. (If this is the first time you're running |kitchen|, then |centos| needs to first be downloaded from the default instance location and may take a few minutes.)"
msgstr ""

#: ../source/getting_started.rst:263
#: ../source/getting_started.rst:320
# dfaa73912aa348a6bf5fb6819fcf1518
# e4355683787a4976913349d15efee119
msgid "Verify the instance list with the following command:"
msgstr ""

#: ../source/getting_started.rst:269
# d688b0a1a07c4d9583a76a50e5bb4348
msgid "and you will see the following:"
msgstr ""

#: ../source/getting_started.rst:278
# 03991f6628b74068a6082d870e10038e
msgid "Create |ubuntu| Instance"
msgstr ""

#: ../source/getting_started.rst:279
# 3028157669714c8eb10cfbaef2a0b621
msgid "Now let's create the |ubuntu| instance:"
msgstr ""

#: ../source/getting_started.rst:285
# 4c43b793992b4fe6bbe467c3016348f4
msgid "this may also take a few minutes, but will (eventually) return something similar to:"
msgstr ""

#: ../source/getting_started.rst:332
# 0d7c2f697b42406485ff3ef3b205b544
msgid "and now we're all set up! We're going to use the same recipe and cookbook that we already created."
msgstr ""

#: ../source/getting_started.rst:335
# ac34a4636a85447b836d2a47cb5b3538
msgid "Converge |centos|"
msgstr ""

#: ../source/getting_started.rst:336
# f22a1d89a7534ed5b8b01457eaba32fc
msgid "Now that we're all configured and ready to run |kitchen|, let's try it in |centos|:"
msgstr ""

#: ../source/getting_started.rst:342
# b127d08482ce4992ab1e1816ecc1f77e
msgid "The first time you run this, it'll have to download the |chef client| and will show something similar to the following while it converges the node via |kitchen|:"
msgstr ""

#: ../source/getting_started.rst:393
# 7a7f5dfadddc42c08a3fbc432aa90031
msgid "Converge |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:394
# 0f10391529784e679cde2cbc2cf8b5a9
msgid "Now let's try it in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:400
# 66b670e2b28f4396841029d28c0dcfac
msgid "Like |centos|, the |chef client| will need to be downloaded:"
msgstr ""

#: ../source/getting_started.rst:450
#: ../source/getting_started.rst:729
# 73e9b419cc29473db6decb35e5a52664
# 5c1017e01f884850a7db8c30743864fa
msgid "Verify Instance List"
msgstr ""

#: ../source/getting_started.rst:451
#: ../source/getting_started.rst:730
# 0fb263c61e5c488b8445fe358148914a
# b6e2bb736bf94857a6f012a216c3b1bc
msgid "To verify if both instances have been converged, run the following command:"
msgstr ""

#: ../source/getting_started.rst:463
# e529a0334d35406083448acbfa923440
msgid "Now you can run your cookbooks in a virtual instance managed by |kitchen| on multiple platforms (|ubuntu| and |centos|)."
msgstr ""

#: ../source/getting_started.rst:466
# 6d0173896d99440e8a913edc0a607d5e
msgid "Configure NTP"
msgstr ""

#: ../source/getting_started.rst:467
# e04cf8ffe9b74f40a9376fa48ce81879
msgid "Instead of putting a text file on these |kitchen| instances, let's try something useful and install |ntp|. Within the cookbook we're already using, let's update the default recipe to install and configure |ntp| using the |resource package|, |resource template|, and |resource service| resources, a template file, and an attributes file."
msgstr ""

#: ../source/getting_started.rst:470
# 3c664c7afb9c4e42b6655fea572bfe87
msgid "Add Template"
msgstr ""

#: ../source/getting_started.rst:471
# acfd33876527422b988a8e50ef0bd1c0
msgid "The |resource template| resource looks for templates in a cookbook's ``/templates`` directory. Template files in this directory must be |erb| files. The |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the template file we'll use to configure |ntp| using this command. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:489
#: ../source/getting_started.rst:540
# 1b57ae8d925140f398549334e03a9fe8
# 5b9e8a73c85b463696281c4a669fba5f
msgid "and a directory structure in that cookbook similar to::"
msgstr ""

#: ../source/getting_started.rst:507
# 0267a6167f31423284442f9562336a28
msgid "and an empty ``ntp.conf.erb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:521
# d50a427c80374c72b6435190ef01b474
msgid "Add Attributes"
msgstr ""

#: ../source/getting_started.rst:522
# 5a3550b7367a4c6fb749ac32a05836c6
msgid "The name of the init script that is used to run |ntp| is ``ntp`` on |debian|-based platforms (such as |ubuntu|) and is ``ntpd`` on |redhat enterprise linux|-based platforms. Let's use an attribute in our cookbook to tell the |chef client| what to do on both platforms using a single cookbook attribute. Like for templates, the |chef ctl| has an argument that will handle most of this process for you. Let's create that directory and the default attribute file we'll use to tell the |chef client| how to handle the attribute. Let's use the same cookbook we've been using. From within that cookbook repo, run the following command:"
msgstr ""

#: ../source/getting_started.rst:560
# 97928bbe1f154159b81372895c48ccea
msgid "and an empty ``default.rb`` file. Let's edit this file and define its contents. Open this file and add the following:"
msgstr ""

#: ../source/getting_started.rst:574
# 0db0b3ed535949c6ba6110a95090970d
msgid "This attribute uses conditions to tell the |chef client| the correct name of the init script that will be used to start |ntp|, by platform. The attribute that is being set by this code block is ``node[:ntp][:service]`` and the |chef client| can use this attribute to identify the correct init script for |ntp| on any node and for any platform. If |debian|, use ``ntp`` and for everything else use ``ntpd``."
msgstr ""

#: ../source/getting_started.rst:577
# 986aaf240529402abc66d0f884e20958
msgid "Edit Recipe"
msgstr ""

#: ../source/getting_started.rst:578
# a40a6a5984804bbfbc98991e8caa5397
msgid "To install |ntp|, a recipe needs to do three things:"
msgstr ""

#: ../source/getting_started.rst:580
# 81a93bead1b04678b13b55800fdf2995
msgid "# Install |ntp| # Create a configuration file; this will be done using the ``ntp.conf.erb`` template file # Start the ``ntp`` or ``ntpd`` service, depending on the platform; this will be done using the ``node[:ntp][:service]`` attribute"
msgstr ""

#: ../source/getting_started.rst:584
# 817153974eb045a3a39db9efb35ee865
msgid "Open the ``default.rb`` recipe file and replace the contents of that file with the following:"
msgstr ""

#: ../source/getting_started.rst:603
# 0a056840549c42309a7da2c864c626ac
msgid "The |resource package| resource installs the |ntp| package. The |resource template| resource gets the template file from the cookbook, and then uses it to create a ``ntp.conf`` file in the ``/etc/ntp.conf`` directory on the node, after which it notifies the |resource service| resource to restart the ``ntp`` or ``ntpd`` service. The |resource service| resource ensures that the ``ntp`` or ``ntpd`` service is started and enabled."
msgstr ""

#: ../source/getting_started.rst:606
# 9f73222b01cd4e6587672caf02a03375
msgid "Install |ntp| on |centos|"
msgstr ""

#: ../source/getting_started.rst:607
# 48d5e72ea96e4ee4a3831cc365616a46
msgid "Now let's install |ntp| in |centos|:"
msgstr ""

#: ../source/getting_started.rst:613
#: ../source/getting_started.rst:674
# 278fbdfdaa964a4192b477ad60236cd7
# 5081fc5fe5ad4c3abf63b205ec9f9e4d
msgid "As it installs, the |chef client| will report back something similar to the following:"
msgstr ""

#: ../source/getting_started.rst:667
# b2d08655b7d5419aa70acd66c1548231
msgid "Install |ntp| on |ubuntu|"
msgstr ""

#: ../source/getting_started.rst:668
# 0a03de92440a4ef88c44d885fe875743
msgid "And finally, install |ntp| in |ubuntu|:"
msgstr ""

#: ../source/getting_started.rst:743
# f35d9ef17d80497f96d386cdf17d2b16
msgid "More About Resources"
msgstr ""

#: ../source/getting_started.rst:744
# c8cd961392454888888642fffb508a08
msgid "The |chef client| includes many built-in resources: |resource execute|, |resource directory|, |resource package|, |resource service|, |resource file|, |resource template|, |resource user|, |resource script|, and |resource scm_git|."
msgstr ""

#: ../source/getting_started.rst:746
# f193ed8e4bd0442fb49c35cf2dbd5348
msgid "The sections below quickly describe the most popular resources. For the full list of built-in |chef| resources, see `Resources <http://docs.chef.io/resource.html#resources>`_. You can also `create your own resources <http://docs.chef.io/lwrp_custom.html>`_ or `use the resources built into the community cookbooks <http://supermarket.chef.io>`_."
msgstr ""

#: ../source/getting_started.rst:749
# 0c2a42ddfaae4b528270ed9106682c16
msgid "Execute Commands"
msgstr ""

#: ../source/getting_started.rst:750
# e46f23d98e66476ba62074933c9aa48d
msgid "Commands are executed using the |resource execute| resource using an attribute to specify the actual command to run. See :doc:`execute </resource_execute>` for more information about executing commands."
msgstr ""

#: ../source/getting_started.rst:753
# ae70be626b244f4991a7dab59e1aaebf
msgid "Manage Directories"
msgstr ""

#: ../source/getting_started.rst:754
# 225d29e8346a48beb5cf7b00324caf00
msgid "Directories are hierarchies of folders that comprise all the information stored on a computer. There are two ways to manage directories. The first is via the |resource directory| resource, which manages directories starting from the root directory. And the second is the |resource remote_directory|, which transfers directory structures defined in cookbooks to nodes. See :doc:`directory </resource_directory>` for more information about managing directories. If the directory is defined in a cookbook, use :doc:`remote_directory </resource_remote_directory>` instead."
msgstr ""

#: ../source/getting_started.rst:757
# 0f103fe142dd4723a6d8867e87478b6a
msgid "Manage Packages"
msgstr ""

#: ../source/getting_started.rst:758
# 78da04ac8c6647dda729c93ba79e210c
msgid "Packages are collections of files that comprise software applications or some part of an operating system. Use the package resource to manage these packages, unless they are sourced via |rubygems| and installed directly from within recipes or are sourced from a cookbook. See :doc:`package </resource_package>` for more information about managing packages. There are quite a few platform-specific package resources as well, though most of the time simply using the |resource package| is all that's necessary. For packages that are located in cookobooks, use :doc:`chef_gem </resource_chef_gem>`. And for packages that are only included via recipes, use :doc:`gem_package </resource_gem_package>`."
msgstr ""

#: ../source/getting_started.rst:761
# a897a957e0104cb88d6b53ed869f1d18
msgid "Manage Services"
msgstr ""

#: ../source/getting_started.rst:762
# 6270314d4738427a9554326212ef53b5
msgid "Services can be started, stopped, enabled, disabled, reloaded, and restarted. See :doc:`service </resource_service>` for more information about managing services."
msgstr ""

#: ../source/getting_started.rst:765
# 8ae714c810a6454494370cf38a04f488
msgid "Manage Files"
msgstr ""

#: ../source/getting_started.rst:766
# 925b89b2066b48b1b99410222f2a2c1e
msgid "Files are managed in several ways. The |resource file| resource manages files that are already present on a node. Files are transferred to nodes from cookbooks using the |resource cookbook_file| resource and are transferred to nodes from remote locations using the |resource remote_file| resource. See :doc:`file </resource_file>` for more information about managing files, :doc:`remote_file </resource_remote_file>` for transferring files from remote locations, and :doc:`cookbook_file </resource_cookbook_file>` for transferring files that are located in cookbooks."
msgstr ""

#: ../source/getting_started.rst:769
# 3b4c24735ffb48959765c008aa819077
msgid "Manage Templates"
msgstr ""

#: ../source/getting_started.rst:770
# d1d976f3c8234828a0ecb5b8d5d88f48
msgid "Templates are used to generate files based on variables and logic contained within the template file. |chef| uses |erb| templates and |ruby| expressions and statements to define the template file. Template source files must be located within cookbooks. See :doc:`template </resource_template>` for more information about managing files using |erb| templates."
msgstr ""

#: ../source/getting_started.rst:773
# eb48ce80a3c446a09e681aeedc06953b
msgid "Manage Users, Groups"
msgstr ""

#: ../source/getting_started.rst:774
# ef414ad0984b48ed9346e61f39b7ebf5
msgid "Users and groups can be added, updated, removed. User passwords can be locked and unlocked. See :doc:`user </resource_user>` for more information about managing users and user passwords. The :doc:`group </resource_group>` resource manges groups."
msgstr ""

#: ../source/getting_started.rst:777
# b39e0851bda54d0b9e0224a2fa243596
msgid "Use Script Interpreters"
msgstr ""

#: ../source/getting_started.rst:778
# 13d1bc27ce0f44bc88c3c00f6549a7fc
msgid "Script interpreters execute scripts on a node, similar to the |resource execute| resource, and with the ability to specify the interpreter that the |chef client| should use. See :doc:`script </resource_script>` for more (general) information about using scripts in recipes. Interpreter-specific resources are available, with :doc:`bash </resource_bash>` being the most popular. Also available: :doc:`csh </resource_csh>`, :doc:`perl </resource_perl>`, :doc:`powershell_script </resource_powershell_script>`, :doc:`python </resource_python>`, and :doc:`ruby </resource_ruby>`. Two |windows|-specific resources are also available: :doc:`batch </resource_batch>` and :doc:`powershell_script </resource_powershell_script>`."
msgstr ""

#: ../source/getting_started.rst:781
# 248684c42c64459abc65b423d6de968d
msgid "Use Source Control"
msgstr ""

#: ../source/getting_started.rst:782
# 140e63bfac214a01996bc3b0eadd9b43
msgid "Most users of |chef| keep their code in some type of version source control. |chef| can interact with this code from recipes. |git| is a very popular choice. The :doc:`git </resource_git>` resource is used to manage files that exist in a |git| repository. There is also a resource for :doc:`subversion </resource_subversion>`, another popular version source control tool."
msgstr ""

#: ../source/getting_started.rst:786
# 3473566faace4d4c99a1f7af50586121
msgid "About Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 5db863c6b8a14311a476c28659971782
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# d011100faf8a4a8ca86ff7a1bd918e24
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 88f26ea755d945348eaf7c7dd5f20f29
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 1656ef4c972d42179a1aeebf5057d77f
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 577d88ad72d04fd0afc797fde1267a14
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# b5f26153eb324c31ad7751b02465c802
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/getting_started.rst:789
# 8b72602abb0b47ba951571670339c445
msgid "Every cookbook follows a defined structure, but individiaul cookbooks can take on many different styles depending on how your organization wants to manage its code, who authored them, and how they are intended to be used. Some cookbooks contain only a single, default recipe. Others may contain only a library file. Some may contain only a few attributes. And other cookbooks may contain several custom resources along with many attributes and templates, and so on."
msgstr ""

#: ../source/getting_started.rst:791
# 468fab54596a45d4b6e19fcb735525be
msgid "Some cookbooks you will build yourself. Some cookbooks will be provided by the community. Most community cookbooks will be managed using |berkshelf|, which is a dependency manager included in the |chef dk|. Occasionally, a community cookbook will be forked, but more often a wrapper cookbook is created to handle your organization-specific requirements while still allowing use of the community cookbook."
msgstr ""

#: ../source/getting_started.rst:793
# 9ac4f92741f84fcbb28ad87df302daac
msgid "The most important thing to know about cookbooks is that there are lots of ways to build good ones. There are patterns to follow, there are guidelines. There are recomended ways of dealing with attributes. There are recommended ways of creating custom resources. But ultimately, a good cookbook is the one that works for your organization. Ideally, this cookbook works across your infrastructure. Most organizations have a mix of private (internal) and public (community) cookbooks in use in their organization."
msgstr ""

#: ../source/getting_started.rst:796
# 6f2ba19451744a4a9e7c5ce55ec73067
msgid "Cookbook Patterns"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:6
# d2b85798f374477da5d2c2a72e47ed74
msgid "A primary goal of cookbook authoring is to create cookbooks that are reusable as building blocks, where each cookbook defines a specific configuration piece used by the organization. For example, say all servers across the organization will run |cron| and |ntp|, but only front-end servers in production will be load balanced. This building block approach relies on some basic guidelines:"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:8
# 4b7b2658d6d64ecca9f261d9befa4b75
msgid "All cookbooks are kept in version source control"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:9
# 56541d27c1c74cdca98edebe6702a22d
msgid "Cookbooks are never forked from their |github| repositories"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:10
# 03b4668cf62f4cada803ab9de82f7757
msgid "Cookbooks may be kept in the |chef repo|, but are typically kept in their own dedicated repositories outside of the |chef repo|"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:11
# 5b06944d25304b178226436007cdd75c
msgid "Cookbooks are kept as small as possible and are focused on specific configuration targets, with changes to cookbooks tracked as versions of that cookbook"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:12
# bc9e1d28544c4ca38b0f85158dcbb76a
msgid "Cookbooks are better when unit and integration testing is done against them, automatically"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:13
# 084b6d6178f34de1a36a8d4c918e36f6
msgid "When a cookbook is uploaded to the |chef server|, it is versioned and that version is frozen"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:14
# a8009ffd561f4adb9f68fa1653034cd3
msgid "Community cookbooks are a great resource; often a community cookbook can be used wholesale (without changes), but sometimes a community cookbook needs a wrapper that is used to ensure specific organizational requirements are met"
msgstr ""

#: ../../includes_cookbook/includes_cookbook_pattern.rst:15
# be01edd764f54f30896a7fe3c336fd1a
msgid "Recipes in cookbooks should be modular, minimally prescriptive, and use custom resources to expose repeatable patterns that are needed to solve implementation-specific requirements"
msgstr ""

#: ../source/getting_started.rst:800
# 09447cc7c75c4462990f7d6fde838c57
msgid "About |ruby|"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 65d8c95a5c6e43828bb31254305af9d2
msgid "|ruby| is a simple programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:7
# ff510babe116464baec723745cfb8b49
msgid "|chef| uses |ruby| as its reference language to define the patterns that are found in resources, recipes, and cookbooks"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:8
# c58444c4985a40fea04b34fda0935b2c
msgid "Use these patterns to configure, deploy, and manage nodes across the network"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:10
# c61dcd7668fe4ef7a0702c4d4a6360c2
msgid "|ruby| is also a powerful and complete programming language:"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:12
# 87746841729540d9b509dd68897a4abd
msgid "Use the |ruby| programming language to make decisions about what should happen to specific resources and recipes"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:13
# c9fca720394e449b9b19e0a939f81e98
msgid "Extend |chef| in any manner that your organization requires"
msgstr ""

#: ../source/getting_started.rst:804
# 5dca3847173a479ca295938abbd89bcf
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 274172e5b61641e6bedcd0ae7be24e67
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 69e7d7abb80a4023b83cdffd62f9d4f2
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


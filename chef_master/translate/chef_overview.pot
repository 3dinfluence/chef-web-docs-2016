# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:8
# 95d1a8e8a52f4c96aa7120c0444cd8a6
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:10
# a1b19a1d37d9431ba52bee70589501a3
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# ce12854768104cab865480a4159d4bc7
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# c9cf7d00202842ec85584b8b5c616127
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# c926d7dc7de84a8c987de33725464b2d
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_overview.rst:15
# a9c5002d68ee453483199e4bb8f8e17e
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:16
# 2975e166407542b7b0cb0de988ac56eb
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, and the workstations. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# e4badf0a28c34219883a12dad7004712
msgid "|chef| is comprised of the following:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:34
#: ../source/chef_overview.rst:53
#: ../source/chef_overview.rst:72
#: ../source/chef_overview.rst:110
#: ../source/chef_overview.rst:127
#: ../source/chef_overview.rst:144
#: ../source/chef_overview.rst:165
# a8567559dbea4cbb895b867d699a800b
# b54742f7e7674857a3b5ba59c25941b5
# 148dcd4a27ca4173be725098738f1200
# 8a58d9ad586140ae87505deac1fa699a
# a7a2dc89283a4fd08102cae1813e1ed0
# b9bef0eb1c8d4fd285c316fdb069369e
# 7174d41b505547cb9a359434e64fa1f9
# 6dfe81a372ef42b996f9837a6a2164f6
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:35
#: ../source/chef_overview.rst:54
#: ../source/chef_overview.rst:73
#: ../source/chef_overview.rst:94
#: ../source/chef_overview.rst:111
#: ../source/chef_overview.rst:128
#: ../source/chef_overview.rst:145
#: ../source/chef_overview.rst:166
# 69abde4dfcb545f39226102dfbc6de98
# 1845001c86e84dce936ee1ca1239c9f0
# 250b21171edb498b943227bca4b25140
# a96323c23105402faa778fb8d18c0d82
# 93d9020b6a2e493a9a97190682f01ee8
# 6cc64ca361694a6094c30601f67a3eb6
# 7c7c138ddc704d738585f9468d9dbda6
# a9a448dce34e4dd49ebb4f4c8a4d08c8
# 4a852edd3d6e42f281219b407598813b
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 38a0c67e58634b0d8c98e55eff12c948
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 70bff4dd6abd42dfbda6940397a04d31
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|. The |chef dk| is packaged by |chef| and provides an optional (but recommended) set of tooling, including the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 4160692639fe40379464274fc8a67343
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.) The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pulls down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated |chef client| run data to the node object and generates reporting data about that |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 05577eeaae1e4b9f97961afd55ab4dd2
msgid "The |chef manage| web user interface is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# 36c91ce0ca534456a426cf5a596dc6fc
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../source/chef_overview.rst:22
# 244a877939f04d0ea48a32cd4c5b4338
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:25
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 1e955e09fde741d3892575b49763b014
# 737a668e0ec14bd3bc0cda5e0988c599
# 024dff4cf5604810bf11a0d3662c7160
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 3e48d8c66f464b41a140a348aa0c8cf2
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:28
# 49f5edf2678e4ae68e1a05de23d37023
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# d430b03568654d0fbfec377905663382
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# a1b46dca63e64461a7d74a4c39e5684e
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# eb6649013f024c59bfa632e986fbdb5c
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# efc41b92c29046c2919d3baa97fd4f35
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# ca2b975ec75e4511b7b93b81b48ce8f1
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:47
# b840a8f6e61d46d6a095feb39832d233
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 7f81a6b02ea2496cb2f6ff15690a4a87
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 1896adbdf52d45b1a04c3ea98bb7b428
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# e03fa6cfadca4b57bc93cc2ca6488fda
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# e3d6b72861ae44739c2dc0c57f17aea5
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# fe32899b3a7f4905aa9bc603648fe2b0
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# b7012da78e814860a221d57cb4b43adc
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 751529b8f4b14fdea0b268a91d20e1f0
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 7a74619ca16547cba336171cb06ad9dd
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 7c720436897a48d38a0a63e88d5c207f
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 729f7f9103514edf883dd22b4a486bf2
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# ecaa275d60f8411a8cf9708f9acf23e7
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# b4ad2cc4d5944550aa3fa21d90b601c7
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 9df0ff7051104d41872564b6c99f644b
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 1a39bfd501dc4c3283ece20b717bd2a3
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# ce0a1dc5ecd64c55abab545445b7ae5b
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 47d53e8070ee49b0a6594871bb5de4d4
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 88579f475fe040139dca6946b9105aea
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# ace01eaa4a714e5481b81ca12547c748
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 3442b52a6d1d47919dd8732bb1c753da
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:63
# bc1870cb9c444b64b7e5f9cd8861b908
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 403f037160d84b3797007d936ad799b2
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 1f3c51dd98b246b280625a8132eb4457
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 9c355db4786d415894cb0196c9d31ab5
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# af68d74b65304a019f260586e2c94957
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 4126f00bb9d246a29edefc2a78e837d0
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# e1091aefac0d4229a52a85e6857a1ac5
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:66
# 8b4ea367c32643099b301c9c3fe29c6c
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 1adc42bd6fcf468797a99624879469f7
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# cc2d20243dd843c18f0bafcd3a93dff6
# c02503a8da094921abdc40b0a9b9e622
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 836fedecd77e43a6919821972a742428
# 5b5a31b7b830493196dd73b0344755d3
# 88555a1582ab4d5f8c9e340998043412
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
#: ../../includes_chef/includes_chef_manager.rst:9
# 087ca3ec18574f70bff7f0699fc251e7
# abfce1f17529493ab200f51e6bc2d6ac
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 1f7a975a184c4f4ca9b497ef404300ba
# d07e0bc7af2349b9bcdf8f984279db6a
# 7c9308445c71400f84d658daad1c403e
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 7534d8b409cd4913aece38623883163a
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# d7198d89f3a34951a3ca3da5cf8705dd
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# cf080424cc4b4566baf2a0bb879f7d2e
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# 6dc6a95de49a4f0299500b9111cc16b8
msgid "RSA public key-pairs are used to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# eb723ff8af574375afe67cd9dc3428c7
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes---the most fundamental configuration element within |chef|!---attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# a52be4b3de1a4415b7f078f4fb3a1888
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:81
# 5d54f2b422554f3a8ff0e93de2e17a83
msgid "System administrators and developers know best about how their infrastructure should be put together. Therefore, the |chef client| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:84
# 522a5c05490c4f78b6a32871c8a46b0b
msgid "The Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# d99d820cab52404e8ad8343c1aa6c9dd
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:87
# d5d2d2f2d742450494991dced404fac2
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview.rst:93
# 623cc24feb2446b08647c3614780a098
msgid "Server"
msgstr ""

#: ../source/chef_overview.rst:95
# 005d31ff9c124b4fb380cab66db2ccef
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:5
# 7ab5b23b6d8b4740a64939939633751c
msgid "|chef server oec| evolved out of a need for customers to have a highly scalable server with the same functionality as hosted |chef server oec|, but located on-premises and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:97
# 59625a1128b74c9db68f1345e6dfab00
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 73746185cb22489ab181f0b08a66e23d
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:99
# 2d1d2b2fe38445d1b4db1f7b7b41ce57
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# e0972387b6f24be99876345a75bbfd18
msgid "The |chef server osc| server is a free version of the |chef server|. Each instance of the |chef server osc| server must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The |chef server osc| server includes support from the community. Support from |company_name| is optional."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 5d2978f780d3412aa1642d4c848dc08a
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:104
# b6ac5e9d2bd944b3b3a4864f4b688a64
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# b262645e68bf4d8f96e8dc936dff5695
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 53279e0623eb43c2a077a51e7e69306e
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# bb48ae58cf6248c1bdf9248c15532562
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# e66f62d1419a4763b34a13f980198cbc
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:118
# 8d0aa6655fa9431f95fa3b8bddf83c06
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 2fcb84b2a55e43c28a4fef3622cc8728
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:121
# 6f9c988adf774ed6872415c43a3d98e3
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# be9fc95ca618495996f197c6545f8b6e
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# c5f4ebcfb05240c68eb285fdc527eb55
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# c90a2b4b02a142caa0d6555f1bd7b7f0
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 3475711f46664b06a7f4c9576ddaa2c7
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# 37eb4ff36ff349bc820c2695c389ebaa
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 033906e86ded417e9062eb1331b83981
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 1e95c53a74ba4b8da8b35ce1d81caa0e
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 64b5b80410a34e2185b982366fb06c1e
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 75f1b0caea70470abca12e4d6ce03f95
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# d48d78279c844e9598bb748089277728
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 75fc38058a894d54980c83941ff5e71a
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 45826c77f00e4c4db7dea34481da10e9
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# f0f99d32b6464862a744ef8df3cd8e64
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# d7c8c052871e473381a4a7858ce35bc7
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 8907d2131311456397cab2270c8fa09f
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 8217e2fa07a747a0957f0c540ec9d2b9
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 0f878ddc03b84140b0458910a8ee5049
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:135
# f967d933ca974589aa73616510cdafba
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 065de21cefe244e89de111702e7ac17e
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 9ca8f40ad0fd4da59e47437d261e610e
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 1c40a12501c3427c8cef177e978aa20e
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 6d935b20c7fb4f76adec9f37f79aee53
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 24db3f92ebb04b4b88a255c426182d38
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:138
# 492709d73c464e52a4021ed83505b5f2
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 06093f52e2f54b56bf7839e8af978aa5
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 3a48e6bb596e415f95412e602a2352d1
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# da5643b6aecf4a2d964ee6306182d376
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:154
# 29dcd2a31dd54ce9bac34002464d222f
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 427a9ad644ea4a53be1646436db7f40d
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 5e885e3d926b44efa0b18eae56363b6d
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# ab8db38496274aa6b212f9af7789928f
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# f226a94910704d6b90b0eab231d24b52
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# edde44abff304196aa984f182330c2e3
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# af02cb23bb3940dbb46e0aee83f2c01c
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# a8feae4098474ef8948faba05989a660
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 8e20090237d0431fb7c4177493b9c8e8
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 18e8f55c6a194a8282c85650b03e7bef
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 42fcee1c25ed4304bbeafd7a78834b46
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:157
# 5a14da0f18414de4958958827a44c1b5
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:159
# 58379179c78b4579b877bd7e1b2fb947
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 9f8dfa940c49467eb00fb50736bd9a50
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 6a9041b98290489483a21eeabe8e40d9
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 879c716f6a284da68428d622e2968e05
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 63d67b1ab5e6498ea80ba89987c64fcb
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# e27cf93b73d44e3abb08dcc367514806
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# a6a0ffb513904c889383157d4a17baf0
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# a4987cdc998f48e79da9f419653bb6e8
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 11d44c8423a2491fba49bc30a2575b75
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 6af55c977c224f31935201da13586532
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 7a4e4e29e6ff496db0dbd86ae9594bf2
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# f11c4bdc4dfe4e8697447444e13c96cf
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 40bb15823d434d28bc51c991f053d8ab
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 8bdfac2b6eff40578ca420d5dee595d0
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# f44d9a86bfd94b6e8388cdd178412ff0
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:174
# 100c9e18ad3f4edabec8c65469568267
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:176
# 29f61dc31bab42ac8cc39ca95139084f
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:178
# 1ec949a707f44a358de4a94054154a18
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:179
# 4e14212d81a846ce86b27e7cc922bec1
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:180
# 4c1435b06afe4af59f7a3247382f58cc
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:181
# d8b77cceb26a4a5d9d9d515bdaad2374
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:182
# 9fd34459b94d4625b9d54c9144f17dc4
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:183
# 49f128252f9e48208a1a33fe3cc4b044
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:186
# d013eec3cfb84ecfbde40c3b13eaa1de
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 3486e5d25b904535b14d58dc5c444edd
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 2b6a31f4b95f438ba9de26efabb300b1
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


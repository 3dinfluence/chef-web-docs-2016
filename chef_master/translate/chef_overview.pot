# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-06 21:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:8
# 041b823cb36b45948373e58709d59a82
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:10
# 3525d589342b4a22a9eabfab91da40c9
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 92fc0ea684264eaea230c76614e99a73
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# c9f4d4b975d747ce8f841658dcfc66a2
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:15
# 70737311017449729eb087ee3ea78114
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:16
# f6cfa4b0a9c6448b9ba647a87ddc845b
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# af5aabe8e80743798f77ef9cce162e7d
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:36
#: ../source/chef_overview.rst:53
#: ../source/chef_overview.rst:72
#: ../source/chef_overview.rst:99
#: ../source/chef_overview.rst:118
#: ../source/chef_overview.rst:135
#: ../source/chef_overview.rst:154
#: ../source/chef_overview.rst:173
# e17a15326d1244c9ac024ce456fd8da6
# 8d05117924c049b49845acca82ae8202
# cd5b9250c71045409d8fa74f2a59c2a5
# a23ce62d709349709ff8c3d0fd935c89
# 41c33eed7c954021afa819e0eaf0c3ee
# 39d2c69dda6b4092945c734fd6661938
# 40b4dbdaa1cf449db498a148dddb3f2a
# 17023a6e7a964ec681ea32e0f6fe96a3
# 0a85cca163474d23bb366dca832575bd
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:37
#: ../source/chef_overview.rst:54
#: ../source/chef_overview.rst:73
#: ../source/chef_overview.rst:100
#: ../source/chef_overview.rst:119
#: ../source/chef_overview.rst:136
#: ../source/chef_overview.rst:155
#: ../source/chef_overview.rst:174
# 2979a313fddb456fa07e2089fb20f41c
# d04d4d9fa17a461bafed2f127a7e684f
# 6ba2fa9ddce245f58caf1a3c91564e14
# 83789d80bb9740f59f8c92b9e2b41be5
# 3e5936fb30364c6c9a86f7a3f4696b14
# 9b97a1cb76614adfa834c484e5e99cc0
# 4b5cce77db034427a374a16ab606b3e1
# ba4b3258863a4063af1c8ef83ecdf4f2
# c5e2d3f85d3c4869a6527585c1a00098
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 2d41da3fc23f4c8d9eaf11bc3d1f1534
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# a4c3cc3681b74e32b8e8e10d53b328b7
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 4e518ff64a704662866620804029c560
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 9d6047198ffc4f84a6435ad3e3f6f370
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# 587dff369ff24eaf98037598e106c6c4
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# dd5b149c00274c53b6398e0c52f34332
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 3e2da2ae0b2b469dba63d2f73e7a2329
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# 394ad15af0c5436b9d0046357b2265dd
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:22
# e4cc3e3f2d794079957c6cd9bc7b7eb9
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:24
# eecdce94e9ea4956927e7e974d3906a4
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:27
#: ../../includes_chef/includes_chef_manager.rst:6
# ef47ded91443488bad7325357d59ea43
# 726e3415d4174554b8711ff57b2aefbd
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 0b7c5bf445c04ec2975ff591fb367b29
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:30
# ae0d95c6f97d4742b67ff674e3c63829
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# a358005a7b584bf0831f2c2ba82253ce
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# ecebb411af104998a1d549de9884e7f7
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 94894041b2624e2f8d9533a1f86fe2d9
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 196950c1f3b547a6ad289d96cb111d05
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:47
# c61bc4474c414bdbbcd1bc531b77aae0
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 9f683f74e5634f9faaaa4153a8c39628
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# e2387609f81147bbaded90595f3ffe02
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# bcca51bbed9541d99017ad8db9c62a78
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 764df06919694d48a074f7f18721a362
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# cd7e55cc62304c07acae0d36a27ebc6f
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# e503fe8ab4fb4253903098bce11bef21
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# f03dcb364e044a6ba818f96e6a02254e
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 78ac704b8bce4b0d83c10aa01dadc758
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 95bd7383b3ca404692b6f76a662f2458
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 2382ded18edb4adf976abc415a0009c2
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# a432c4b35f8745ebb113066bc23b5920
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 17905b818a144f218cfbbd9e8c7f747f
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 28ee5fd39e364955a65be77cfda21eb6
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# afa079396aaa4bf5bcf1fdd1a2fffd44
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 266a6a4e66274781a7da392f5142cc0c
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# fd011e44d17940c59796a9a2dc78cbe6
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 22675b983fbc40019f1877d9a785c0e3
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 167bf022fc8a45bf89d6118c3da512df
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 39ebb8fbbdc946a2b97418d628190b70
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:63
# 97f88f0e9ae946e281d805fb7564259e
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 29eee392080d41ba8575c745099a9aed
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# a010a1ec25364ebda137754cc953b564
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 6129339e3f9a40929dbc0a379628b989
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# a250021c6c2541f5930611dd39c65e3c
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# a76f17c8faad418289ec4a406f3e8bf0
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 99ca1b664ffa4a7abea3b5766548bb17
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:66
# 3f4d9b90c56f45f0a7bc8c168bb29d88
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:75
# 529d870e0018416c939cb7e041661233
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:77
# 8198c22874964e94befa6743578f0620
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 775b9ce89b55419991091463b6355409
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 6cf67c6ba03147ab9963733083b2af16
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 24a392e5045b42088b69eb153351623b
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# 4efdd07f4aa54c159c23f4b8e70244f5
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# de0b53095c32414c85994bad67ef481a
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# b43cc3a05bc346949204a27e30dec0fc
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# f37f032ca10c4f6389b022e3f5226930
msgid "Run the |chef client| on your local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# 1697f61f7d2c4d8395a9d0ea078790d8
msgid "Use |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# 5a612b8976a64ed0a4c1981c8650a1f1
msgid "Is an extension of |rspec|, a behavior-driven development (BDD) framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# 8b36a01fa52944a38632cb56d474bf0f
msgid "Is the fastest way to test resources"
msgstr ""

#: ../source/chef_overview.rst:83
# 5b02daa776f140a2a9fb8d661c0e043e
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 77333b74f7ad4f8abdfd294560c1355a
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# cc07aece193944f2b8ae4efac41dd01d
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:87
# 36fbf47444b34dc59443792597cde440
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:90
# 4a4699f64a454ffb8f6523dc6dfaa658
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 57626dd0a2c146f1a215703b89501bab
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:93
# ca1e8cb7b9c649d1ac07eff18b7717f5
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# fa61c2e462764e48a8ab02108c4d9ece
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# d341c7dbf34b4f7383fa124b8a61c682
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# ac044a28cb52406fa33c2a5e26b13617
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# f3b143b5f1b04ea79c09b8d3d0811693
# 429d0de0c1f044b18b09fd54fd6081c6
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 59cf0ef13dc34b4fbd6019038766a936
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 1aa65caab66945c490d2cc4bf71700b0
# e33fdf33fa78435ca30fceaf6dfaf010
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 87ed182da0f4440a929508c0919acaae
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# cbabcffb5ef946b285bdb8722cb50505
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 052912c0497344bf9c1acf2026ef0529
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:109
# 989a525c4a7c4dcca6d71811cd7f345c
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 33140ca3196b407eaa529f5c428d58fd
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:112
# 2a1662070f974f1ba498321d23aa418c
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# f93c21c7031d4235a9b00007993332bd
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# db231cc194a345a5b71c4117811e546e
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 289fabb54c6249d6a9ca792f4d8f58d5
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# a14d73b7202244708e44864adeeff791
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# 2f80300fb6f2498781d90b543ca0e044
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 3acdb912ddea47519b5641e49ad2d930
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 0f920f593da34610b327be04b65679a3
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# cdff455da7a5488ca7edb0c3f25ee1c3
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 549b4dacc9d948c786753c4c7c398190
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# a9523bd76ad442a0a3c44ba9a5441af4
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 09fdd65057014391a86caac0d708e809
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 2baad6a694624a3ebdf3f9802d95a3a5
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# b1246a97546a4f3cabe256588d61c480
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 504cc4b59945462ca0df37dddaf28996
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 2785cb3014054c1591038ea3d5cfe023
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# e772ee7e24a94462b1cb322fdaa9f15b
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 0be209050629456aa866316fe6a81ea0
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:126
# 33abfb58938c4af2836acbcf01e4c7ac
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 7a18dd31c13949c7a4f5f87bb36afe04
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 7bf42ee708b74935b6f08d9f6c6a9152
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# dd37828174044e82846846d8965a08f7
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 0c329099e7074b6bb24b3cb63f019e63
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 0255ff760d6b4f29b669e20687d7230f
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:129
# bc38ad7d5af245e684a441b38deedafa
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 3935787a9eb74a0492486332b550fb1f
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 9d78325210a24ff88274d404910702c5
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 95ca9d77fed84973a1ccbea22cb93919
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# 71beb61dd2214d9a9987d8636855558d
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:145
# ce83461a3538484ab1449790ab58dd50
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 1e590f7aabfe421dba730b851eca5bad
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:148
# 6b8828f9dbe148978277215a00695bb9
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:157
# eda198736e3a41e098d2ff811ab75463
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:159
# bbf86ec967334b3f84249311b14bd313
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:162
# 5d8e3c85521c43b1a0c4b6a0178071bb
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 1d8cfd92d4424bf8a1a10e0d2a4d5d8f
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# ffa9214f457b40ebaa8336518472d57d
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# c1b9a60b0cb24f9a82f9639c470c7114
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# b4bf21343208425ab08e2908563e2c13
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# e7baef919a05415791037a7bb6604860
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 57fff0b4061b45379dad5d06fcb36ea1
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_overview.rst:165
# 10cf8ece832c42358e0317a51002107d
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:167
# 8a3ae5d7726e4a3d9d8237e61626325e
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# c6252d194ea1435392f332415eeb6f63
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 5b172d20ecdb43ae8c4887c9d56c0164
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# f2f3b5c3135d4058b2ccf50162e9f606
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# c532e0f9c44a40fd96b0a47f9377e6a8
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 04d8e3e6e29f4a498c2d303590882a53
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 8071cc6c86e64da9831ba12b3317df0c
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# f0a3459044fa4596baefbacba72b987f
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 3d16a272fc7a42a6bd9c9e1e4b062f44
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 768194e085014ccda05f3fdd09f6ff46
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 6c0e409c21d84254ace6740d3a78e9df
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 77662ffe48954cb5a527e6ca996cf593
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 7aaf1179956f441caaa2d60b5cf9c06c
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:180
# b9c3bfcbb5aa44a08c8ae6dfeddf4913
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:182
# 4afc6429c01c4c52a289a62231f84230
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:184
# 67810aae20de433abf3374e97427f25c
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:185
# 364209d1545f43189694005191f47b0e
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:186
# 5711bbee86574fc7b2f5a92b8d3962e2
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:187
# 67b0fee3159c43399a92c4cc26a473aa
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:191
# 48786c93ab8449cd9bf0528a02dc8bfb
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 28079ec3d4594c2b98c8cfe1388099c9
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# e20329ed37ec4e41ae2c9125183fcf22
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


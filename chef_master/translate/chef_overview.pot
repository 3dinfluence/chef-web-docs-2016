# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-07-25 18:13\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# 14d0451cdeff456698ee9ceb8d5d79a7
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 58e76919d9d640fc9270561b91b15c8d
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# 7e0fafcfd2fc459bb3f529dc5ea1c8c1
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 31563aa34b6b463da67d1399d5459adf
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# ccead3c0188e4e63a85f0e3bc82436d6
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# 3c46969230e04f22944ea8350f3e90fc
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# 0854325ea22743c594e9af83439cc6c7
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 53315f55271a45f59093c5ca5f4b297a
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# a8a3a5e2948245cc8d4a64d511d75261
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 0eafe76dd3034bd6b489319cf00034ad
# dbc5c616c9ef40b581664788fc7e5ace
# 9249bdc10d844955a2a14f8d340391b0
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 81c7516835584c9baccf3bfa4df6581a
msgid "A node is any server or virtual server that is configured to be maintained by a |chef client|. A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# 3ba14bc2d1994aa88c3fafd847443b80
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:88
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# cb0944dcf0294355b2d1739ab71e17be
# 6d10ba91bac04909970584bfd2dbad3f
# 1581743b042642eeba87967757080fb5
# bd6d1cbd33954229b587ec050b1bc3cc
# 7a13b358f5f647f59a39e50a9e87e8c2
# c357eab3ddf941d98c6e4ffd598e8339
# fcfbfd9cfdb44cc287b949710bd155ee
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:110
#: ../source/chef_overview.rst:131
#: ../source/chef_overview.rst:148
#: ../source/chef_overview.rst:165
#: ../source/chef_overview.rst:186
# 03edc3b80c0c42edac1f40fab98e0314
# 3db41a792fa34f59b924f37c356ebf80
# 70eaf0d95f414faab11994aa3dd5498a
# 35fb739238d54f598440a7afaa7cd20b
# 3ae89ffc033f41608196e7d6f824a616
# b616a8883c3e4154932b4c8fce3a8721
# 9d68b3d618184c31ad072d508b847f1e
# 81fd1936956143a1b4ebbffaabdc3d7f
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 071d1868df194233b2c36b545200edfd
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 647bd00d4d6a41a2a73c6f291e066cfc
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# d50f774016394143be8a4f00f2f6e639
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 3dcad9d7a5ba4272be701218d58aab0c
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# ca736b05910e43a2b2e95ff2acfbae95
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 47e6f30329014ed9b33158795b9d6d87
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 41eca24d4e5c46cbb3f814455137bc80
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 9499de2404dc49c49687a71049c54da6
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# c9828a3184f24d8a9f25f96de3ad49ef
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 2509107a2c80456aa6336e198fdafaca
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 14e15ccb41484c36972317566906315b
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 7fbec0c08469482b86bd264b48292645
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 6fda8d0c16604bf38a0882bd187253ea
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# af57416b8d144fd4a50d8846389b0a32
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 725048e2df9c43d296ecb1c6a58e4ddb
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 406069d066bf4929ad63e26cf345ef0f
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 1de67f0f6be24960b73a1dd3ca2f3191
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 22b2b6b83c4c495e99d17e8f20e5379f
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# c751f7b4bb1d43318b6ba79a08941c2c
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# c3bdbe07b76f4b7ab2a66a1bc48dff0b
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 6411ba9247884e239d37b8bedbd8dbb2
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:79
# 3438b8acf59143f5a12f95f7d66243dd
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 89173de70220487fb452a0af339c36fa
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 93684c9b188d49aea4042714d6e327df
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 69901d65f0da46f5acc9fdd6a2e4fcc0
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 04d0142dbe0b4f8ba664b267bcf34549
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# cdd01208fb8846a58a64cf7228967d53
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 6ea362eb50ae4f32be481c77e1b008dd
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:82
# 65559fa1be55424ba78259632088e53d
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 0ffd86f33eee409fb6bdd365c11959aa
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# 2d80ce8a94764ee9a3558cced42ff79b
# f96fedaa72d6425ea630f7800ecd89a6
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 8e926133ed1b4413996228c2a74eaadf
# 1e92aa14036b4b86bb0a042363a6ad3e
# f6ea48bdde99484aa66bf82e21090590
# 627315bc5dd64f05a1bc10286d625535
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# f27c7a064b5548079b2e93f3a6c8d367
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# a8ff52ff16fd47c287fcaadc7f33b98e
# 8e4a8ecd65d64db1a7eeca9a7a55c99f
# 7ed7dab390ef4c4db607e35c010bc812
# 93bc97fcb64a47e0abc4b824aec4fd5e
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# cb82eb8ce0584185a6de5f1313bdf193
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 8da0d5709c3b4024b8a16343540215de
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# 43b6549926564efd87d93a8b3700886c
# e1dab716b66f4544a92e7e8551ccb221
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# 6ecea16d1faf4632a50942d0a1e4e510
msgid "|chef| uses RSA public key-pairs to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 8920b790b841491aa9f2f36a548246e4
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# adf4492e462f40db988bbdb84e7a678c
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# b4d2d4b0e4194bf0a4f9a80529c43800
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# fc6d6dd66bdf4bfda9988bbd60d12b2e
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 390a12cc761b40919c82b3ccdac79b29
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 7630b93c8451411a8b3ac57a0642e615
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:97
# a8a6150cead0486297fd566b46a876e6
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:100
# 7715f72403e54629890a03c4419abf81
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 3176562cbea441dc9d59dacf7f9772ff
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:103
# 0f0295e37960418fb45ba202a36ad070
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview.rst:109
# 2dadf9e469c84da7a7b518339aabfe5a
msgid "Server"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# e34d20cc6f3741168c04cd4744d39001
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:114
# 82a8629d4bc04efeb784838eb9c75604
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# c4e028015a044d74824ca5cc60a98973
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:118
# b26b1dda601f458bbdb1a995c62cafc6
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# a0f841c0f61c4d859652c8a2983baeaf
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# ca517c4e0e3e4438ad0a60dc7d6f3aea
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:124
# b212713ade15409eb2120765cfbbfcd8
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 368b297edb464fb2a04fb31b6005aa66
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 8a78cbde6f544c42a9c7fc3b75c7e342
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# ab2a0ab38331483299cab10f8b631805
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# e3120fb57f004718877596a96c6db45c
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:138
# 18a61e98c1114e779ec2d71e35ee304d
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 15d25f8aa7cb4094a89ba340259a9e62
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:141
# 97b7902e7bc14f38b83a6f2d8670a238
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 2b88703345f04fc8b8a70860f7b02600
msgid "An attribute is a specific detail about a node. Attributes are used by |chef| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 23883920aca7469194c89ddd32ae03e2
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 6fbc83101e7b4a84833023c489cf7773
msgid "What the state of the node was at the end of the previous |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# b3474d673f0c4941ac0df93633017ce2
msgid "What the state of the node should be at the end of the current |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# b31280f43b2b4b279b6116139050cecd
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 8353b595bd274ad69bc5d8abcbd4a6d7
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 7b126bebe09d48d4a3fcb017cba44ff6
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# bbcab289e64041d2a63e727596d17fc0
msgid "During every |chef| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# a0730be4070242d9b8640d0cda0395d5
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# b53f5133bde54826ae5c41c07de72ad6
msgid "The node object that was saved to the |chef server| at the end of the previous |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# f8dd3d74d410495dab493cf428cd48aa
msgid "The rebuilt node object from the current |chef| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# c6d4417715e44e46bd9721c4838e60b6
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 2eea95bc4b1d4a1fab98aa8bcd562412
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:155
# 45804ed36efd4277b09eee2fb9d40e7d
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 19ce1041467d41f4a059e55918486cd0
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:158
# a0364bd47e2b41d7a3891c915f71d01d
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# b3d425cfbb174156ad754e333348b3c4
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 84e87fa5fb044a6b8b23a4a1097faf07
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 9e439136999848d799eb249992231079
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:174
# e98945e0e8d4481ba89ebd77d720a4f1
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 7441f2d7fb1e48fe9003dc8da499529b
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 55d787b47c504df585a9513f24f8d56a
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# ff1cec672b0b430fb069bff82a26e1d3
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 543f002ea9934c3daeae51b1344d394b
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 7d6c9c516fcf4de88f115f1d3a5d3b8b
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 57c71296c1134d2b8c637f872c45983a
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 83673a268b7443aea075dc6a272d8061
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# ec1bc0a7a20e4ecdab303d86d8202257
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 6a28705527ee4ae782030c3735de4105
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:177
# d7a82219954f41e3aa660e2644a9acf3
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:179
# 60408b00da654eee88f8a2417e6ec136
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# e4e1208451f74227bd340ad2814edd92
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# ad67e067d9d34faea3f79ec7648ff88b
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# af1fbba08adb43feb9a9248baa7a0280
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 62259d85736543e28caebd1faa991b09
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 3017a57263054a2ea86195f68cef408b
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 3bb5256c4c674b61ba8b74ad365e488b
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 8d5de484ec564557a18c5d1a02bb0930
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# d0f206f3c17d419d9a23fca6d8ea8462
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 169b3c991d6f4deba3730d575cadbbd9
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# a233fd2dfb4e4988ab96bccfbda19544
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# c71ee2720d704dd1b4adf66fe80d151d
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# b91ce5668ee34a25861f43f7501dcc03
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# d3d2121d61fb4c969078231245d607cb
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:194
# bc7d68c457e44522968560748707556d
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:196
# 24c958110f624811b5876165656c2e93
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:198
# 401cc23c76264f6590fc8378b07e01b9
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:199
# 55530aae4db14f5fa95dfecdd1741ed9
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:200
# c48d2153856947afbed1125cbcbd9e5e
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:201
# 10b6df18a15f452f8b7f05058fb1d0b5
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:202
# ac6af1b004ea43eea2d6eed742363809
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:203
# c763ae1fceab4d389bf8fdfc4e92d14a
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:208
# 46495eb224db4b67a2a8755457c0a3b5
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 5b53fc7a45f34b87a9083dd87b67704c
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 39bb69cdd28c47bf86c83c1fd80aa678
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:214
# 6131d381254f4f3fb5c24b7c70e7c2bd
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:215
# 25922dfb946e41bda75ebcb336fb42bf
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:217
# 68114bb2830f4fa3b067a7d9de56c73d
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:218
# c59d851585404ea69e24018dc68ffac5
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:220
# 705f81c5bb74459092f3e72f233b204e
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:222
# 99618111243448a78d552b1d9d87c0c0
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:223
# 6e0559db5e4a40198922308a354073ef
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:224
# db7883798a1b41f2b0d329b1be8b2acd
msgid "|http community cookbooks|"
msgstr ""


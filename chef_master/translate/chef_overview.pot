# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 21:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:8
# 5c0680582c384e8c89a8ef951a3d8c3f
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:10
# f4e6017ac5214b10b7b4a0e6b6a68424
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# cfce7a6a77ed4c59800c97c5555fc45d
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# c9d352650aeb4089876768d72303cda5
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:15
# e9d0fbb4497c43e7b4545cf813d6610a
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:16
# 34b1f868ee0b4226993008c1b4f99b30
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 593aff3e667c4e02801330286027d106
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:36
#: ../source/chef_overview.rst:55
#: ../source/chef_overview.rst:74
#: ../source/chef_overview.rst:101
#: ../source/chef_overview.rst:120
#: ../source/chef_overview.rst:137
#: ../source/chef_overview.rst:156
#: ../source/chef_overview.rst:175
# 8a8cf53ae26147fd9f5f39b26dbcf7e9
# 3402eebaa29f414d91244393bfffcd80
# bb52765fd8f64772b9b73dcdca6b1b0a
# f9c178f05ff34173abd9bdf3d0c93570
# 6a83f206b799481392d5d9651efde1ec
# 4d69fe9d39344b09b1a41b7ae72ee34f
# cb18718897f84e35b5f680b95197c04d
# adc0d423a6db4e47abe70768d1dedda6
# d70de39895834d2489937ba26397fbce
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:37
#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:75
#: ../source/chef_overview.rst:102
#: ../source/chef_overview.rst:121
#: ../source/chef_overview.rst:138
#: ../source/chef_overview.rst:157
#: ../source/chef_overview.rst:176
# a59fdbb714aa49b6a4ce04f4a79af0a9
# f195f6ba036247a38208b5ec24a4eb4f
# 326b7f65287b49479c497cff83d3f235
# 77631e9d5e3549789db4fa8e9674be4b
# 6d61169548e04ecf8b83e2c3fd092f10
# f26cefce4945482ba1946ebfb38cff5a
# 882578aec8234936859cfe514f38a685
# 4916511caaf84464bd5d2bf04ef5edcd
# 7a83349d00184f7fa1c47f8174d77b49
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 5bbea871fb654135af768921106fb0c4
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 7648deaf3e77454597382835f4c445a0
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 9e94fe2fa1b34df1949775b49093bc99
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 6b83a81f64954e558cd74b57517bbcee
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# 84d1bafd6f7b44d6947e2d25fc1e799c
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# 3fe06f88c1ef46db8c96a01be0419078
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 0ea11ce7606348f58cf1c29475eaf2c2
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# 982287f2cc3f4adead75c0d367e26afb
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:22
# 66910269459f404494b6da212c3c9e3c
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:24
# 4c4ca45b25ed4982997364c23cc6f558
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:27
#: ../../includes_chef/includes_chef_manager.rst:6
# 71f71a064dbe4cfbbd66b3acbfb6056a
# ae5f55a43c6948c6a783cd69015c9e79
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 8c390daa5f2546b191721fa90249565a
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:30
# 96d45deddedf4690b0772607b1a93d03
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# d8eb538a68564f37b84443db2aaf8669
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 11621807884f403aa2d4c6b1d84b2a00
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# b0378e617f7948c79844de9017821ac0
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 41209e36dbfd43a19e554c7be2007803
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 5109159e9e2c492fab6ea18629f9ac60
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:49
# e12f112fa41e45deb71d280ebc3c3f96
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 5fe1f329b1774763ab196cd72b31f006
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 97e8279de2ac4f619464df046e598f9e
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 22122e0c8b874899881d9ec90e3874ec
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 81faa2dc45a24673b02fcbacf5275f65
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 2d96a3ad9d69497a8c08217f63ca72a9
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 006c4a0da5aa4583ac294691d6d9c763
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# ca0e810406894dafba4823ee9c14553d
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# a5fb53c575e344beaa1091d291562d69
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 09ed0348ec66432ebf8e3a0ed07858ac
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# bca8ef98f28b4603a35ba2b66303374b
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 2cd9f59f640142f9ad17eb2a32a65cfb
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# e313a9f5cdc04943859056ea763f8cd2
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 801c8b9942c949ee8837209f580871a5
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 19533fbbd8f74698bf3c1421c54f471c
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# ef4663c2f33f4e948a3ba1f81e8e52d4
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 53935527bbe24c54bd3a0fb14b2b8c3a
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# bcd62f5323ac44bcbcce5cbf581e4f47
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 112f088267504d909b639022aa2c3d30
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 4c6a2509998944618bef896d2b950181
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:65
# 92ca315c5d8f41b18fd679cb6eb16575
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 5f0cd7d0c1274f3ab99d1901d11b8b45
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# ccd2fd56374f41e998a524246d78e0a3
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 43be581c3b954105b6670ea9e15fda14
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 591c82c0f1a746638b9bfcc7642f9e8e
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# a8ced0e633bd48d4966fcf45493a2b8a
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 735704f0de5b4a6cbca6f552094d6298
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:68
# 2b7211a8bdc74a36a5179c33f50d3589
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:77
# 7a39d02b0dfe42e08c5ebcbe1a156df9
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:79
# 2cc231dd79a24a98ae449ac8481c39e1
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# ec47fb534bf540269d68aed45fb310df
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 0ad43bb890a543c2b9f6dd520b178d0d
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# c8978616fad847ecb37eb283225343bf
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# a76b23fbd91f4fbaabdaaed29269d922
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# e5d3885cbf8c491da8dc9908ee335bd6
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# efaa8be5aaa34ed192dc24bd120a3396
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# 4096f3f1e99c4a6e8c5ab3e850885bad
msgid "Run the |chef client| on your local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# fc755286184245d8bfcaf33442ab5ad3
msgid "Use |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# ebff631b6ffd4126bde3a8083f9e6a27
msgid "Is an extension of |rspec|, a behavior-driven development (BDD) framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# bd069d53485b40db8911e586771b6ee2
msgid "Is the fastest way to test resources"
msgstr ""

#: ../source/chef_overview.rst:85
# a10c3dffd7564fb7b9a589097af7c802
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 051104e21cd9436690e5d04e30cc2c09
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# 7a4de780d60e4db3a02559849d80fb6c
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:89
# 47541aab3e7c4cf4870ec103bddd9235
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:92
# d92a44f9cbe743d0a610788489261eea
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 6180fc01c4d14445a466da023938f10d
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:95
# f1180b759c024c278ade68ffcf5e125b
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 3a0e0d8431f64d1480b5b38493445a0b
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 8af792f8a48443c8ad89ac15895b45fe
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# ac166173b524473abc43450eb0eaccda
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 74a09f81fcb54bd798915c56cb5ede64
# 33f77702712f44898f0e0e48dac7990e
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 94c4e6830b3540689f1a9f3028ceeb94
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# ef72f378ab6e4e0aa20c411c3f143f15
# cfc91b74f63041a8ba071222a2925425
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 488b0b2b5b3b490987af40a88fc9049c
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 4f6f455843f6459daca3540261bc313b
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 004230b9abf440f2bfa58835b12f3bb4
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:111
# 851ee5c5fcb941a7ad459bb3de08b553
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 1fa2b0b9f1a94748b1944f9248bb2eb4
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:114
# 72bd6633d7c442a7b701e63bb5730c65
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# f2779eae18ce4f61a5c36447aa64ab22
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 003d71df468143438b6d51779c91b341
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# f32e6c6f12a64051b8cd59965caba8ec
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 6bc33651e64b4ba4a2cc32a2bcebd7be
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# f64dc4f0409d48f1b001c47f1d62ece7
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 2d0a27886e834f98abc0b2c8475cdee2
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# f638bade41e8446e94a94d750cb18062
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 9d3b0a8741174c559f794a33ebf4fde5
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# e9ec6f6631a84f2a8df6ae9545078f65
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# d3582dfee7994f5ba6a61730e4557dbf
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 099c81ecf5bb4c1a8420a49e01f1b9e5
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# cea72d93c7b34ba3a4af2f8fbd82aa2f
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 1cfa72ca65af4aba8861d5953b8c8aef
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 8f649a4d446d4b9dad5dfe6f2aa43a60
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# e797cfb56e664e5d81b64466899f7a8c
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# a8d58d2357af4fd48f068d74fc000503
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 9feb73a43cae45c582791be50b9cbe64
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:128
# 3de84b7697bc4ba6a75caf47fee7ab01
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# b0cd6e1f910743e29bc1754d7867f3ac
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 463b3514f6de44c4aa379064f21eb172
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# cc57e73aaba64dc5b6f758e89370af8c
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 8005102241844bff92350e0aeca2b011
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 190d2a286c8f48d297d9922169faadc1
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:131
# 7de3f23bc9ce44ab83c539a14865d416
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 3e7f519a2ee3439699e94cd40e326177
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# bbebbd1dc3094a1cad39898f6af758af
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 6f2dc3b2ae014683a666cdaabd76b358
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# ba748ee9718e4be6bd6df2ed12ac138f
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:147
# 8d31cb5dfd20485486de5e7fb3cf73d2
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# a9b500862b344c5b98d9ef79e84567df
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:150
# 4fba8532306c478dab6609345495cafd
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:159
# bd6cc0f4b8fb43a196d5fc7bcad3c734
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:161
# e0aba5c81c004672b0738ac428aba8ae
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:164
# ce6c451239024a71a08247604d7b6ec5
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 3a512de65d5f41b29590cfb3482374de
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# adc1321de1fa49f094bcda89cf0643d8
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# db6c326dd24f4f59a94d43de04d80488
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 844e736ea8a34374a772d1686222f366
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 68e7c62dda784855b015055236b5c7d0
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 0ad6f0d9f36a4e2b9bae194b5a1db0e3
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_overview.rst:167
# 782f0808ba484db0a2d35ec4bb055612
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:169
# cac2d875ae2c49d4abf659e4b649ecbe
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# e3cabc215899435db7e1a37e9557b4ca
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 4aecc9c1cad84e5da8ce06cd15196acb
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 123a0757e3a84235b032d040bd9a3974
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 05c1f3ab35744b71a9c2a229c5c408de
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# b3ff4ccfd9a24f6cac89fb452c75efe9
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# c61cfefbfad646e2bbdbc28e39415d7e
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# a297c032bca54583aafbb1672e0642e2
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 50f9d579720142a1b6a9ad8799bd4206
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 6e9ae1739bdf405b9c86925bc3f7d425
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# c87e0ae57ea44e6b90de53db5e97745c
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 207a5a7863ee4cd8aee00779879e4c5e
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 7c90e3ea7f4c46f9af2863eb23c658de
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:182
# abcabed3ef284e78a218cbfa6ed14249
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:184
# 603f149017f64f0181ffef5fd4edaf8c
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:186
# 0d172e704fb6426f85524e136112ae07
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:187
# 2156c164e2784ab49d9c04c40d075f65
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:188
# 7cf5ce3d343b4cfc82b0085d6faf0e94
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:189
# 851200411043406e9e318103e6bd5f38
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:193
# baaee7e3946f4a25b7fde34b0fbc7b5e
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 8f34589aa2f643e3937472509d1ffab1
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 5fe132ca1efa48a38cafa44a5638a5ce
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-02 14:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# 7d4a5f7fcc894c84bcb22594b18fca32
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# aab8b57159304cd29f7b120100239922
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# 0d44c7d2e50b471dab1c17638ec304c0
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# f9d55f86337d4be3bcf67c63e3292a17
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# 789271836d7848c9ac41be0b7c85bcc7
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# 7d735b46327f42e4bf3046ba13f007e7
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# c27ea6d6c4ed48fb9e23b371e8622d5c
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 5d81d330c0fa48f285703693d71b62ee
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# 435f09862faa4dd5b078ef1987a887d2
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 81fd30c7f9cf4278b2be909475c6712c
# f76aaf08d3dc4aab9578722359c93dc1
# a2534e77f9014a379fa0a8d00a3a132e
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 0cd0e1f246cc4a66905c80c1878ddf0d
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# ed3b1dee762a407281044776caf5aa16
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:108
#: ../source/chef_overview.rst:129
#: ../source/chef_overview.rst:146
#: ../source/chef_overview.rst:163
#: ../source/chef_overview.rst:184
# c83159dcf0394d7892cbd83c615919b6
# 17604f48558f48709bd89c3ef5159cf9
# 5b7923d58f5f410aa75517ceacb1dea2
# b83efd9cf4674eca8f509a9a9506ec62
# 211537ff808c4a0fa2e7e6bb10d84817
# 9d835b8734014d6d9f05d08c38712dd9
# f3a82afd8b9f4b6ba89e3c9e1a4b6bd7
# 7bd5327bb5cd4302829557222e065f51
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:109
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# 3eee5da24b414daa99a141c9c72ff6af
# 7f363a13bf714298a44624f543cc953f
# a98d946a75a9455bab1b08a539029558
# d8a5e716e2e94e5eaad89280a9a1c59b
# f222348abca34b068d2285a84d831c0b
# bc0cba371a8548428389ed8491f1cb0a
# 86f90bed6a984351afd2fb59c2012095
# 83d7e067ede2407a83ef8431801d9f25
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# ee3b54c0ca5b4aca8c8fee864205e113
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 5da5d2b40690491889b1515e6ff45a9f
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is a any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# 812edb8874ac4966b4258255b82c2e6c
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# b242a35248f8436c86ba86ecc8cea8de
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# c1892c48e5654fac87f8ab1b0c5793ba
msgid "Registering, and the authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# ee1ee535d6714e729422b2317f0181ba
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# c4b1990507bb45909b6293718d8bb3c7
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# cb5854f969834abbaff6e8068eebb350
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 1b2dc5af35834d12addcd90464c66a84
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# c4dc0cc29f0946a38fe65296bc9d2515
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 5b726d862b5e45fb8525583572ccd7b9
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 3405af49ef0c4c678a6b70682db7b6b9
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 3af0e6f90fc64dde8b15a070550e3067
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# b23cc97ff1e14910be87bf44c914f46a
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# b064c4f80f4749b9a3bce3c9561ce2b5
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# b55587a85c4c434eb32038c92eb6645d
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 25b4a0cdca6a4ddb8c9cb2e31cf7be31
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 8c6aa5627e7d4fbda3550773b7bbe0b3
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# c98fcc0787964da3bd2a0aad2362f5d9
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 9ceb427e15f243189326474424f396a4
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:76
# dd8a87c4446441aebbe6591365128f72
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:80
# f0540fb7989644b09c72329599e45cf1
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 827b8c5548284bcdbbbdf1d46c9508ad
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 9deb77e56ad94e98a248846da0e70e3d
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 4c783d640f0f46ff98032b5e94116dcf
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 62783573ea87482d8caeedcbd993143e
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 8e1af62c761f4e808d4955f8d0f9a4d3
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# aac9dd3ea00040969e48cf52c4e6b898
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# d4215eded6474192b3e3a419c3accf68
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 3fdf23ba74aa4e1986151edba41336ee
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# 76bf1e4183234bbe9ab4ea44c1689bdd
# 29d15fed00d94f0f80393f29acf0a67d
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
# 9953e9039dc544abaf3fffabab266740
# f99968a911314cb2bfd56abc26ef0271
# c445b41805214ea188e4879526192399
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 6e1e6c86ce69459fb318a91ad229535f
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
# 310913f73f26437cb755b46cf32adc89
# 8ababf22e5ec48e881c692381724a86d
# 11298f9da38b477cb92c3a4a7162148e
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 033486ee8f9d471ea47e20be3d1e8dc2
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# bfc367421512475b920096c59c574fa5
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# 02d03426666c4c73bbfbc70af8689247
# 4897211d836b4d3fb58b6b29a37e376f
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_knife/includes_knife.rst:15
# e3c08c40226643c1abf5a577f578e565
msgid "|note knife quick reference|"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# e67cb70e103c4ace835d5f5b79be445a
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# b5946ca57fc146c9be810141efef72af
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 835c217b0320432eb6fc29982ba30ed2
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# 0da0824c021a416887cbadd6c0ea4800
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# c777acbdcc5548dd9ffa2a46af8760b9
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 47437808efa24e2ab0eb978d8280e8c9
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:96
# 21a1b3aed8d84c148cd1b1c13028282d
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:99
# 4f9af6925a95473dbaf2eab619e560c2
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 51244abf9c834c65a27d87018a91acd4
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:102
# 63bb8ce8102a43b48a9882a65e3fc085
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# dff340abfdbe42ffa261413174bf2474
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:113
# d903b656b5a54097bdbf6a6519b152a7
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 509c023a562f42b6a369d15603c22eb7
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:117
# 96dbfb49ef5342ea87ac96b45377e411
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# bb4dacf1482146a4b1e1a9eaf89156d4
msgid "|chef open server| is an open source version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the |chef open server| server, and ensuring that the |chef open server| server scales as the local infrastructure it is supporting grows. |chef open server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 790a60de523345818ca0370a519a4f07
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:123
# 5df0ea33d9764f3d830c42d08c99c7b9
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 18fbc6e3c45c4ac88b3793f141f2102a
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 734a13aa1323451383b02986bb4a77e5
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 387b41ffd8974479a6e0df5bc21fc691
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# a20e50854b204c9b8f15609ecf836868
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:137
# d964652a5b7d4a92a041d09e2b6c399c
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 2b1b679023c4476fbbe29ef550d31acf
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:140
# bec2b90b5a9246e182e30dbbf2c9d716
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 4fd6387e24d64ef9ab95d8ec3af7e762
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules that are defined for each attribute. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# ba3ec6b81adb48f8a4a56f6625b39864
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:154
# 65eb09b8094641afb2241d84fd389a76
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 22394e02c8fe4b419fa044b9cfa63b9e
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:157
# ba11e3ad58874a4a97e34cec2ed70961
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# b1c0ef0db71e42c1b753f195ca82b730
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 8c31cc1e22ce4881affa9f3939e30add
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 837cba7c36bd406788801f9ec0e893f1
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:173
# 017214b548fe43b29d24729a90721d2f
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 3d54a8cb2ea949dc82b8957044833e99
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# c42f2cdc6e194bad890363e93e3734c0
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 8852d59fb51c4e27b129c8db7f59c019
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# ca14c5e49ab04587a3ec0dc0ce2e001d
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 7cb53c6e6caf4bdc93598900c0aed1c7
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# b95aadeef1d546ae9e161d2cd6535d65
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 2c5c1fb1b18542fc830cd49fb71a8d3a
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# c6d18c25f9564260ba88698fe4cfdd41
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 8811d4fc1fa24d2fa55bd882511e86e2
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:176
# e8295c810a704d638e6bb71c7d5f0836
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:178
# cc9ffdac64544bdfa22639b5b2faf158
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 26373da7c568456c83ef43e98be06bc7
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 5378bcc1cec747a6aeee6ef069200828
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 0446adecc8e5483594d80a4a0aa0060d
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 949ff77805ed49ff8a89445003fbafea
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 8b50d6621a104610ae82def9cd50ebaa
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 8cc7efe223eb4b90ae87addba61f901d
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 838b3ffb22984aa2955de0db4c45b93a
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 86b1ba6341674b7f8aa8afe0227925cc
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 06f43a49b4b245a18c04a545baea2f73
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# e5df305d025a42349fae4cb4a6e6d1a9
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 97534abc11c040068f4bb967a796e732
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 36b7391f4af64c7885ad6e952fabf9b8
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 2bb54418fb2f4494976fc1c2ecc2d5f4
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:193
# fc320a7df173468986a189ed928edd76
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:195
# a69039b6d21f4355860344f30a887e72
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:197
# ca8b5e8877de4b5eab4100c38a86853d
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:198
# 86122798d9c2439b9eca6c88b65e2ae7
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:199
# cfbd960515fd41c2b957fbeda3a1563c
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:200
# aba24c85c642426c85ca978571dea007
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:201
# c839def367af4fc99b368c800fd81f82
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:202
# 0d48420f94804c48800aa487b01f98d4
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:207
# b82a5cc64ad142179a1603ae9ea7de7a
msgid "Conclusion"
msgstr ""

#: ../source/chef_overview.rst:208
# f7139ac7df6e4a6c943aea8639abda3e
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../source/chef_overview.rst:210
# 5f03e8b2dc214c47b70622dbbf31dd2c
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:213
# 8244a853b9b64251ab8ca9da97822016
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:214
# 832df9cb18a14b00ada7d3cfc67464cd
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:216
# c67d9f51278548b8869a7bd1777d85f0
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:217
# 810ce93f1ff446f880f52880667b1115
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:219
# 1adf87e3a9ab48b68b01804a0635402f
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:221
# fa675cb160bd4b55879bda6a06f38e17
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:222
# 8bd1c2541aab4e80a41bc98e56d16107
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:223
# 25b7542f7fe945e68da367d60c70bfac
msgid "|http community cookbooks|"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 18:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:33
# 5f12878668b445dcb4c6cd9fccb29197
msgid "An Overview of Chef"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 62d1103f7141418c9ad9291c9dae18b1
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:37
# b550e81c61d9427b8c08bc0e4b744d00
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, and the workstations. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 2b002fd80a214873869ed1c5e1b608a5
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# 8257e7e1031b4a22b21daa01c2d13977
msgid "The |chef server| acts as a hub that is available to every node in the organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef client| run is available to the current |chef client| run, and that all of the nodes that will be maintained by the |chef client| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# 73c9a77909e44d979b9841e4c3b34a22
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef repo|, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# 9e2def114a65494394000be853595449
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 096278918b5246bb86049b19eb545e1f
msgid "Cookbooks are also a very important element and are be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef server|, and then are pulled down to nodes by the |chef client| during each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:43
# 681ea1c01c9b4fb2b978772bf850046a
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:46
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# c232bddc3191421c8704ceed8a6be3c3
# 3259f64e37e44335b5af7d8875681f24
# 0e3f197564a34761896e57ce36d81e5c
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 029fef729e7e4107ba0a5d83646fbb5f
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:49
# 8841954ccadd4b1dbf536a31a9243cb5
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../source/chef_overview.rst:55
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:127
#: ../source/chef_overview.rst:144
#: ../source/chef_overview.rst:161
#: ../source/chef_overview.rst:182
# dc5857bdd5454ee5bebeb5fe000263ab
# 63eb750c22ad4c369d3ff7f587bbc85e
# 22d12af48a5a43b49053c944189c195c
# 3829d4b9c2794803985089b31ecf6ba1
# 3cf3c01d68384e4aac6dd70ca99d3e57
# 7baae54109d240ab839ab4a9651f833f
# 4fb5afe591da47af963d131b0999417a
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:71
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:111
#: ../source/chef_overview.rst:128
#: ../source/chef_overview.rst:145
#: ../source/chef_overview.rst:162
#: ../source/chef_overview.rst:183
# b6843111541e42699094689ea575446e
# 09df4eecdc3246eba0c215ded27ad28f
# 628d046925ab4d229a16b6cc11f3e43d
# 84fc75dc202945af86dd137db3118ff3
# 1d2b4c06627a46178486ad3d57b470f7
# 99862b16831b44c39d15698d08f1070a
# dce26b045d9240fb84a196052e53268e
# b4070efa049444af91071a559c566562
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# a42b5d31085844768e6f87843b464d93
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 6e40b703a680429a9e43947444f3b131
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_virtual.rst:4
# 26e071cd7f1e40fb9d5652d0ba7890ee
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../source/chef_overview.rst:64
# efd1ef0f2d5e418a9138d896fd518f82
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 244ca80d51da4357bbd48e69c91a0c9f
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# c55fda6d4ce04fd4980512545c8b8299
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 05bce8e2048d4a6d914e8c7bb6c6b009
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 730bb406b55a4417958daac44eb63407
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# c53937d6b57e46f9ac35100472ea7746
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 360a0a53e3354a68b99405831810374d
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 88a159da90e740208524d1db61e7ee07
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 33cdb0095b77401dbc7a0911e88be2b2
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# e5f8b3408a4845eaa1973aac8b28fd1a
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 04913151edf344edbde4e2fd12f39763
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 1d3c42f1c48a41569210408c36127161
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# b0abe3e145e04f11a493847f1a57d81a
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 2b764783a6da4a7b9f02cc0eb202e4a8
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 741e56b92f3b424ca0564421e6815425
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 28a2e614ce264517839d1126ea492c40
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 37b0b7c2cde747c5b6c00e396ca95f99
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 7e8af30cc53544a69f82772bc7cc5d83
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 914700c24cc847179b19cd2219b8ccce
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:80
# b728fe158eec40e89c733ee5e61861bd
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 90a3d7983e014bec92fcc5026cbbfc58
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# dab5bf9fc1784b568777cedc61ddc752
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# e41c1ce80a1546ce902e7e1de2ff65a1
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 3fa533c6ae2440569fa1c605fd76eba7
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 87924086ed30481d9cef3909753a6c8e
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# d732278afb994974a42586ecf8e1c88a
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# c0b22d23bdc74490980136ece8cdce7d
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 5f424ef079a945b5a20cd0c8f9597a89
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# cf9475f948834413a9e24ab44da3f713
# a2f0662582f84b3d8e486fad69cd7b96
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# ca0641d0e4714760a020b4fdfcce4269
# 60a575643d8a4125ae791fff285e8a76
# 60952f67065f477088744de29122b16c
# 974ffde954ce44fa900a98d1d0d0b0ef
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
#: ../../includes_chef/includes_chef_manager.rst:9
# 76ba677f8e47418a8042eea4b995c9cb
# e3671881f08c44a0be41584e9187e70f
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 95a1250d584845139212473122d23f1e
# ca018896198c4038bc94948d6a854c27
# 3d2652b469f8448baa589a82beef123f
# bb711fd0355d4d5791aded37f7ddc704
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 74dc381bf6ca439aad647f07d06ff909
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 358cda7db24247bf8f256b728e148b2b
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# 10acfd8d46d346d891163a9e841fa48f
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# 52ee72e466b74915a28db6cb72249007
msgid "RSA public key-pairs are used to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 2efe64d919b947ce99bbd052325d85db
msgid "The |chef repo| is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# caa65855971740e3b651afe81f27c49e
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 767484d223954f4fadf8db0ba3bc1acc
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# f81ebd1799a3405986d3567ef2e1fe97
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 211372c1ed2b4dcf9db8d14cf7c28f2b
msgid "The |chef repo| is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef repo| should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 88f118c92078446895e357637814bc81
msgid "|knife| is used to upload data to the |chef server| from the |chef repo|. Once uploaded, that data is used by the |chef client| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:98
# a000617fef08494c95d4556504940d22
msgid "System administrators and developers know best about how their infrastructure should be put together. Therefore, the |chef client| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:101
# 24e1174e98d749cfabb360c597a766bc
msgid "The Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 69c7caac1937489d847c2337d1bfeac6
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:104
# 8f24972cb851416887ceb2314f1f81a3
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview.rst:110
# 26ca9643e64746108be209baa73b3d28
msgid "Server"
msgstr ""

#: ../source/chef_overview.rst:112
# 49102f79f57e426c8a062021c9e9b424
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 18b75c2d4b8f43629a88f1dbbf1f6d9d
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:114
# ca696652bf204b279d9f14df2e8473ca
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# d5ed138b027e45748cbb84d2a31649b4
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:116
# 7f659f1a2c204d269edcc65335032f5c
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 22573f3ecd984d259a24a3be49e3c6c6
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 35d5b267f27441a9b3617eeaf6e9dbd9
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:121
# eb8a7f00dd5e4993837c091dc88c01a0
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 2d9fbdf74737417a9e4aff166f1ad953
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 5ef69fa1f2ec466083a2488e8f17610f
msgid "The |chef manager| is a web-based interface that provides users a way to manage the following objects from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# fc03e3cbf9694262a2b4f7869c033337
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 697a273710aa45ad968b10f5da1c00ce
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:135
# 9cedca72889c4d1080d2c152e2171229
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# e8afc177bda549e6b9930eb26b313d58
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:138
# a64d8fced6254f30868b8365518a2005
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 7a7cd8b4136241b293b6b24a2bef3ade
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 5991d861059740849ed4525014a7e0f7
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 27ccd8b3306c4bb08995d5ffc718d7fe
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 4cd458422e134ec5a0e1b640049b8613
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# c2c466bc801747459d9df934d887cc56
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 2428ecf8d51144c2b0a6b9dab7de3c66
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 2955d59c566647879c244bafadef79eb
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 5c24a84d17b247199661e5180f6658f5
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# ab3c210ede8d4105a375558182c08c11
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# e21dc09aa1b244ce9551cea73ed0677c
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 247fe2535ccd4889ac63fc61bfae7327
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 150726864b55487cb867569f2b2d9829
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# c6f72699d1284172a667c20e144d78c6
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. The |chef client| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:152
# be3480eccb0345dc97be9e7bd08bc6a3
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# a64ecb3f742348cca99eb8fb6238da69
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 466f28042649452ea3daccf23f52b75a
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# a73fc8bd5d214876bf514afa59018c67
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# c607162d00354b9ab5c4b9b23cd6c6a1
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../source/chef_overview.rst:155
# 0abf281a261d4e4aaf7d05401e9ef8f8
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# fc0c4c4afc6f47cc9a2c5079428ea74e
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 96e34d3ae1f545358231e64a5676dce6
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# c108cccb0efa4919a4ed85132625e8e3
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:171
# 8513837bac0449f6b1aa918e8eb397bf
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 5435272b743d4d86bf44cace9e83b5f0
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 35463f1982d944bbaef897796de4c7c1
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 8845b43372674c29b5ba6cca74d4efca
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 2e19e3a5cf494445961465b191890756
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# a2977750e80348d49f6c645adc200cf4
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# e02c0a5d6ca843e2a9cef8271bab153c
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 49a11930441d416fb205dd8a34be9b13
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 2d2a371071de4a5cb82dae912fe5eb3b
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 14005da230734c649185576f262b9817
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 17859cf714844234b01b2c22781f0895
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:174
# 62023b4582594f44a2d004e0bbec6b01
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:176
# 77de8041a6c24e87a3132e03c1b24694
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# b729b7d8d64f47c1abf29ea8ff3dc16d
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 2317e6ed92604d4c9766cbe8471f7fcc
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 5e7bdd237b6f45f0887351752ff0ceb1
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 70d624a89811472aa3ea6a8173f8ef5b
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 8b9e003f88ae4b32896ba5a49320ae4c
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 8bac091e90754771ad5af7b1fb929912
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# b14f3e6af02d4e6c893ab08b8f2368ee
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 09049cc1a0d04548b2dc74ec9b232c85
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 6137be9956df4a749fad0cc1037e74be
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 5f786163304b478eb77e9a5a153450a3
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 94eada5c0d334da493d7d50c0ad7d5e7
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# f0b11171bbbd48069312e969d9310d37
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 0c0893bd190f4538a71140982efe1869
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:191
# da6b0bcfa2c9459d8f7b2eddbf76611f
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:193
# 45153f89889948718e7345b54823d0a2
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:195
# 82243f5506e04e15ab9b050e8798b19c
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:196
# c3aa1a2575be47a3868b426c5f225e49
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:197
# 5b4c905e7edb4295891640970b1eac94
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:198
# 38cfa4f5518c498389e60e135df76169
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:199
# f21fea796c734f6896a874dbc65c4ae8
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:200
# 179fc1e2f292417c9ddb17e58701bee2
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:203
# cae0a32dc2f04b3dbd0d8619ac66f45e
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# fa343fd8dfde43b88a790270816c56b1
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 6e486862b0634f98878796c623b852f2
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:209
# ed595ed7cae34186b70b1b1bccada081
msgid "For more information ..."
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:5
# f5dc7ebdce1a4b4fab11f79441acb15e
msgid "For a history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:7
# ef0e6fbb96694a8b893368b1b205579d
msgid "Part one: |url opscode_youtube_short_part_one|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:8
# 65f82ba762f64d8981ead82a0ad0fa84
msgid "Part two: |url opscode_youtube_short_part_two|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:10
# 12e3bf61e3b043619f0d9e94ed0abfa1
msgid "For more information about |opscode|, cookbooks, and the community:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:12
# 3a160aef138444ebaee971e5862c8498
msgid "|url opscode|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:13
# d03ec34adda34a91b57d7482ad8c0643
msgid "|url opscode_community|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:14
# 99c58328dbf94760bfba64aa4e94d4bc
msgid "|url opscode_cookbooks|"
msgstr ""


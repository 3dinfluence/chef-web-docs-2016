# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 14:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# 5f6955a60a3740f5b5cbf26c4323d9a9
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# c3d75bdf441a49c89a09562f92493ddc
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# 8e40c15d0a434c3aa3c55dca94363df9
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# fc788127a742443a9387179a7624d9e9
msgid "|chef| is comprised of three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# a9fea6dc4e534b6b80d71ed5b57a9d03
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# 1903e33b568b49c2b9c7fa0fd49d6ed8
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# 412f64c41f5d4493b105b03a82fe921f
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 6b807ba3cc1843f1bf879608cc0562b0
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# 5e88b5531e1e4267a7c78204278a1c11
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 79ebc65c0d644cf19e66230c2557d3e7
# f1fa40e6f1c143a98d10de9a6b41f53e
# ae3c843d1cac47a8a20e2bdb48a0d2fb
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 8570f1f171974eb390edce6d189b26e5
msgid "|node description| A node can be physical or cloud-based. A |chef| organization is comprised of any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# b7359a0c023b4c488fcbf78e7bfd610a
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:108
#: ../source/chef_overview.rst:129
#: ../source/chef_overview.rst:146
#: ../source/chef_overview.rst:163
#: ../source/chef_overview.rst:184
# 5b4271d248e743e89d093b70d14b4cf9
# 4f54d5eb64bf4f0e9d3e526906d172b9
# 588abcfb16fb42e09171df97f0a59366
# 2f213819b3834a949216da89a6130f2c
# 7135c640803b4414b9e610bf1dfcd366
# 5390d9826f7741a6877f3d5634f2beb0
# 89553095bd4f48a3b546422e36239685
# b6f67b526ec34a2a91928921087440be
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:109
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# 22982860e6944d6a88cc7ec050620d0a
# 557e943c5eb8498e93c64bc952dc9d1b
# 7e78a7f180c24d7784e859249bf068ef
# 9504a8bbe46941ccb8b434138a89fd9f
# 1b0edc8bfb4c4c04a4615067dc6a06b8
# 49cf2d25946d4bb6ae997560cd0370a7
# 3af9584a28794c1bb5aa11c677bc344d
# 77f645ec001348988272bae231e1ce3a
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 924e84c3ff9c4024839e961cc25c31ed
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 13dc84fc47ba4ae0a455cb784e1286f1
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is a any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# 82d44757f39949f288f6eb7757fda493
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# df4107690c334f4892a50e6884734fe7
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 2cf390f1cbe84f53a8498ab5c6671385
msgid "Registering, and the authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# deb6b6a376f647dba674028f8ccec2cc
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# ba408eac5a8e4103acb2613400bc3082
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# c0247a38dbd24eaebe1c086ae5567d7a
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 0e5b8cefacad4430a0e132e7820f91fe
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 2dc6468c778348adb70f028d98090687
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# dd57a070d750482a9e0064ed73de949d
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# b6425a0a0f854453b6b24a736bd0b0d9
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 8dd8debb06b14a87b12368e2f0d0820e
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# a4057fc1096248998b6d72157eea16ea
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 4b51f0e7c0d0495bb8ed94ad9eeac657
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 45bbe873cba24c44bb5d4c4651e89dfb
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# cc842ef7735d4a50abbede6262a01ec2
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# eefd75052d2040a985761f5db99a8b29
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 5fcde79c68be4cae9ee9617765372576
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# c6cfe82d207641939249421b431b41a5
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:76
# 56689df7fbfe47979f851a0433e0e686
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:80
# f427f067a87c47f1947a22b6128938ff
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 09ad9f79bedf4223825690f2a7ad0fdf
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 22a0f072113e4325875835fa6d26f3a8
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# df155520b0df43f9ace70d233fc829c5
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 895eb781e5a44005a1edbe5bc5219f17
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# c3a695141b0649e48b34b38a6f79db99
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# cef0a3cce1b54eb7b6d6d7810ca62d16
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# b4e8fde8fe6644eebb102fc961c5eab4
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 87ad4e88788e44bc808733b0315e6c7d
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# d374827a0adf459fae6628b7572f0998
# 5fbdfa9e358245d0a054b79ffc849844
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
# e0d0658eb6214194beef1c6ce11536db
# f0779e0a15994807ab62c8d1f2473cc1
# 5620a21939fd4d6b9945303009c17c59
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 165a3fa6e30d44a99eb14628adbd4937
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
# ac3c146519894d29ba2afe7d33bab529
# cfb8624f957d44ca96600cc02550015c
# 79ce24ee56ad427fa0c493d666d0a0aa
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 54e3fa6665ac4cac856c3bc943d491d2
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# b45145a5bb764f1e8a49bf231646f750
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# 298d69ab74014e78a234703183df8469
# ee10e7d456434225967677f60294d077
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_knife/includes_knife.rst:15
# 072905905535443ab9c9e7d12c6bfd25
msgid "|note knife quick reference|"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# d61c95e02b0641f3b0c879367e0b1599
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 86dbc9007547454e9a75fac72ae9937f
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 083c083fa7354ef6a8104bc7d0d510e3
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# fad9f90aa21f466f92c94cf3e2308d0b
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 4eb6303538314f75b92504d5e3a8e75d
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 3f5a052553c14866a559d739cfad67a7
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:96
# b3ce140822534f7a993ac60ce766d84a
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:99
# 37c561341fbd42019eabad36ce1f6e14
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# a50a15960007458cb0366bbc6608d6f9
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:102
# 271b02125e8c4b7091b08618a0a26755
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# c4e9214b7fd94fcb9d0c5085d6c25ce8
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:113
# 3fd0c0397c414f439099cff00f09a7db
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 927209cf213440ab8e71f50b655bfd82
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:117
# 287eb2e88e8844ca9c34c04ca35c69e4
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 797e9eb7dc6041278ef167cf0368874f
msgid "|chef open server| is an open source version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the |chef open server| server, and ensuring that the |chef open server| server scales as the local infrastructure it is supporting grows. |chef open server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# c07c3c75b4354c56920e37f98a827021
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:123
# 3997b682a409420a9510b69ddf804ea5
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 33692bdc049d4d619c3dd569510b355c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# b8cccfe90d334df8bab64d34f85fffb3
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# bff2156d0ddf4999afee301e8e0902ba
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# f047acd43b7d41298b747155c788694e
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:137
# 468281a98cec4b9ea169b9726b0e8ff2
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# e3b406b969264002ba97ba38b4da83ce
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The run-list and node attributes comprise the node object, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:140
# 803c8f9eeb4d48d4b94caedd163740eb
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# b791e6205808413db309ed19ee801c72
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules that are defined for each attribute. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 1a9fe5382b964f50823fce924605f37b
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:154
# e7175550f2924e3fba38af7419a6322d
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# e5852bffdd7e473f80e6f7c663fe8b52
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:157
# f6ba7e6e0c5d4eec85ce0e6b94dbac22
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 0b709e2e31354ad9b89e948c75524f67
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 59c6fd56c4eb49e7850f188dfbd6e8e0
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 913a66b10e154258855df82f3b55762f
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:173
# 874ba594d63b4f0d9767e98bbfdec477
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 7e6f552725524a9091818807eae20c62
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 92d8011572ec4e55b144277f1dddce6d
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 2153900e46c347a898330e80b0bd720e
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 783c0521d50a43f6b2f7216ac791345d
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 12992e22c1bf4bbc8f0ab221a8ffc5ad
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# cd2ad9fc74e54ec5963df5804a14757b
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 9f3bfa8287874aa1a0be6ca9b529b2be
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 91c26634e43e41039e715596e566eace
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 7c2ad8da95d84c34ad6f52b153124edc
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:176
# 5e6c2624ab994ea6a09e4b9eb7e04a4e
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:178
# 8120b56348304a0b9068935a5cb6ceaa
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 373d073358d34dd7be2d481f4fec0ed8
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 5aaad19a84a94d938cb19d01d9e0c51b
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 47d30157be6f47ad83ab8cc8fe45dfeb
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 3788c0f6d68e4b3e8ae5e6e6457253df
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 57be6540245f42ae91f379cd271bd5db
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 36eb4dfbda8748eea2e1085520a0564b
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# cc23be1d075a4528aaca1fc270355f64
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# fcf0229d943e4459b1f34050cc7a0d0a
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# bffd62272dc8477c90e5bb4da8b21118
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# e33e97a0e98543ac8f6a899ad724686d
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 2d3ce61872404b54b20a08f17735da2c
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 2bb031645ff14884a049f2d4a813541a
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 1a76ad1e98ad4208a99f68b82960fa28
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:193
# 0b17340f22db4ca598512a12394bf2c2
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:195
# 5a87d4759e0e4d299b2f352c411ed174
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:197
# 64ad42b00418494695f24e082f8349f8
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:198
# 85face09b7c14be28350871a6a86ca52
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:199
# 57c31242c33547308bbf5b3c6e0fb330
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:200
# 2105e5d257cd451fb1d504e1e39258c6
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:201
# ccbe4067f5df4998b98497454f30ec20
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:202
# 120c080e73994704a65d11bd3c2eb6fe
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:207
# 3913183944104bc092201ea4643c41c0
msgid "Conclusion"
msgstr ""

#: ../source/chef_overview.rst:208
# 6998750b83de4d928871c4cfea2145a6
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../source/chef_overview.rst:210
# aadf39d9e105432aac9000b5fc2956b9
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:213
# 07f17980875a4eac8aca53cba8d8c3f5
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:214
# ad129c74a3f24ee194a8aada304376ca
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:216
# 4601f0f53e9849f38aa001eb8bd8c454
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:217
# f829beda95ea434d8f6ebcf2de18dbb5
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:219
# 36d858fa46ea48a188ee6c84a5d9b7a6
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:221
# f2257f517ca7407bab606f0562740f61
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:222
# 733a837ffe344f2589d53c25db4cc99a
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:223
# e4a21998ae0145369f96adfd68a5133d
msgid "|http community cookbooks|"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:33
# 9353c2b20fbd46b2966dac9e50f4b8a9
msgid "An Overview of Chef"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# d7b2844223f242a99747535e932db681
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:37
# 63dfc08bee1f4a75bc7ac7e5c6a3b687
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, and the workstations. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 7f66d98308524bc29a51575a51a2449f
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# 2842e5deb5a14b9dbfbc875bbc279239
msgid "The |chef server| acts as a hub that is available to every node in the organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef client| run is available to the current |chef client| run, and that all of the nodes that will be maintained by the |chef client| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# 51098ef853d744979aa7593de9083f1c
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef repo|, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# c487d5e0ba5846b0a4a4cc20bfe43aa0
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# b25b24531dee4dab85481e94e410e01b
msgid "Cookbooks are also a very important element and are be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef server|, and then are pulled down to nodes by the |chef client| during each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:43
# 438afced0a7b48e18e2688945bc49551
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:46
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 3b4b74d33383414d8ffb01312f227d69
# e830291df2da4e24add97ff7cc988fde
# 181c0b6f95a34d8a9837f5d358b929ed
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 6ce3419d496c400f839059c9de897b1d
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:49
# 2b4462d8aab64129aace4f17ab0ddf57
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../source/chef_overview.rst:55
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:127
#: ../source/chef_overview.rst:144
#: ../source/chef_overview.rst:161
#: ../source/chef_overview.rst:182
# 6c49f96ffdb0499fba0d6374416f87ed
# 3944c1e725ed444ba4ec5118d9e3a7eb
# cddf0e49478643e5a4e010c9cc476e21
# db2abfce52d24832a10066f5324aa2f0
# b092a0b4475b44e8a2e003ebc518224b
# 849891b745864602a5ddb09e533625ee
# 5e167abc8cca4b8db68a083165d4bf42
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:71
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:111
#: ../source/chef_overview.rst:128
#: ../source/chef_overview.rst:145
#: ../source/chef_overview.rst:162
#: ../source/chef_overview.rst:183
# 0fe74876e33647e19514e564ceb75803
# aa88815002a24c269310d9b1256b5f47
# af596de259fc47d6ba411ece5e499da0
# fcf25a9d6aed448591c8c8aca89606e6
# 5070301f2d9b4b708f3c7b3757f4b11f
# 660276fff43447009d229933e6bf4972
# 43f739dbc5104d109c51e08b98709fd8
# 5d411e78ec89461089568380026a033c
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# cda5c3f6b759424ba68776d2e723991b
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 0750c94b4a7d446a901b0a130e6021a6
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_virtual.rst:4
# 39217471996c4f01bf4e694a3776cf10
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../source/chef_overview.rst:64
# db8eaa3c4fdd427f9e6f116f8ddab871
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# aef1d0607e5143eb9226c2fd25865519
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 0c554970baf34255b748be5a369a9765
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 7453e9daa6c94846b0011c9e5e39b9df
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 7606137ae759451c8c92a616b888b5a4
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# f70ac94e68ac411893ca3af4c60486c7
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# b7d2bae7bc7045ce9addc57c67fccbfa
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# b6cfb79acf38412b9fe9534fbd812c1c
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# e3df391d595049f0b540bb1be85a1a43
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 028116cf3cfd40de8279ec587b6c0ead
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# f42bf11cf6594c64988606c881b385e1
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 0fa98e22a2ab41f489678120a007b5da
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 47268ea9ebea44538b716198b799ba4e
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# add9ad857c22444c9974ade76e55216a
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 9ca6a2e4bdec4b6f905988453cf64acc
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 128daa26e77f47ff822329c6e4ddb4e7
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 7de5a000525e48978501a63b8275e00c
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# af16b065cbc44bbc85b651d0c6f4e4a8
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# dcd1629ef6d44a7c844ac1f1cdaa0540
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:80
# 504548ca25524585a92620bde1629e67
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 47408a5f65464edd8211be6807d55069
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# b7949f7bfe5744c888acbb990f0e4ce3
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 333f951a2be442659d9b7258d9028856
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 2d16de47a2bc4bd79433371ea085fb1b
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 6ddf362fb6e04086bd7dd1eac1042395
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 24b36a7790f549d88e4457870fbf1da6
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# cb964c07f1494b4788c4e479c203a2ec
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 58e41fb4ac5a4536ae3444e6a133a955
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# b7a0675510bc4221b8c4297d5b7b6d5e
# a116065391a947f9850fe5739e04fcc5
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# ff34072f7fd547ab9480853bf6d984b4
# 6fe401d9d958405ab9e1ac769fb05df1
# 5589635f86f04f7a95ac2f8cfbe9169e
# 4a3895a577c04df9a14735201b8c782e
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
#: ../../includes_chef/includes_chef_manager.rst:9
# 170101ed3ba04284992938cd60d328b5
# ce9207b53dad44829156240e402f6f99
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# f19d7ce08940454b899542905f318d9d
# 62536e062aac4708ac6c71c5ef604901
# 451efefb25d44936b052cddb49b8bfb0
# de15b816987f4ea387f977d8d0747796
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 8e97ce89a4de44efb253d3c2c26b9ebd
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 08e8052a5b98427d88bf06e7abdb81d2
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# d798129c64e94bbe9361cee7a64f3158
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# 248af32c058f411594e07d763528a938
msgid "RSA public key-pairs are used to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 493fee88911d4e6697bebe0afc803009
msgid "The |chef repo| is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# bb915822342c42159366a057ad6fb9d0
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# a0173f9d962a45368ebd00085837fb35
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# 612fca18cced44d18b2652690735b971
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 3d8c1b6c5aec4afaa1575bdc8b9850ca
msgid "The |chef repo| is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef repo| should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# fb006ed7c94e4369b1d9d55fb115d888
msgid "|knife| is used to upload data to the |chef server| from the |chef repo|. Once uploaded, that data is used by the |chef client| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:98
# fc4ba76e34864bb4829c12eeacc6c6d8
msgid "System administrators and developers know best about how their infrastructure should be put together. Therefore, the |chef client| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:101
# 60f688b4746b4f999d33614885713748
msgid "The Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# bd6d22e17c10496fbe561285d1fa4568
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:104
# 8e78c06fe62a46999a7fe39909f88f12
msgid "There are three types of servers:"
msgstr ""

#: ../source/chef_overview.rst:110
# d977d2edb7764fb6bc622477ed3da037
msgid "Server"
msgstr ""

#: ../source/chef_overview.rst:112
# ec31efe313c34c2ab2507c4be70c24ea
msgid "Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 24906d5db2dc4b10929e316bd8dfcfc1
msgid "|chef server oec| is a highly scalable version of the |chef server| that is set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:114
# b612853a1e1b4694b17ce8f16bc7dc96
msgid "Hosted Enterprise Chef"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# f305f91d8ba9455dad7731e35994b3e1
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |opscode|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:116
# 819fb05118124ce882531b587b032c39
msgid "Open Source Chef"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# bec4b83a05784ad88c8ee4c752a4efd8
msgid "The open source |chef server| is a free version of the |chef server|. Each instance of the open source |chef server| must be configured and managed locally, including data migrations, applying updates, and ensuring that the local infrastructure scales appropriately. The open source |chef server| includes support from the community. Support from |opscode| is optional."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# f7eb56de5b6f4416875b269c603f0190
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:121
# 670901e7101b4b48973b01c8ec4b37e2
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 71941cdc9b074393ba1f0d3f99dbb706
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 97aed33547e740b5b727d23b6d7879ec
msgid "The |chef manager| is a web-based interface that provides users a way to manage the following objects from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 038dbc7aeb9b4d6d8856a8cdc3acb093
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 37ff11df21bf49ff84e6e865709ef598
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:135
# 13009ad6e2994eefb9f37e84531dbd79
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 980fcaa889bc4003aee4f3aac876acc2
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:138
# 840146bedf24431e886a13ce5bd52836
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 9802d02ecddc48dbbd33bbbb38566343
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 90dbeaf1f30c4c8c8f4cf4f6570fb6f3
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# b75efa3620f14a5f9f0a9d30a9999e65
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 93b1eeedfc4946edb97f3e2670416828
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# 8121804d1d9e464486e2440c1ed9d045
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# af74710c1aed49f7a4f9e365c3ad26db
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# c7d8f9fc09c24e05a4f16b98f30aa3e2
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 731ca0d1b6cf40168de32a6247469e20
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 021acb8f739c4d23ab4fb81127be41ec
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 95502a35d27e46bd98ccadcd8bdb4eeb
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# a806bacecab0408ba2430181ee02c2e1
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# c26d4566249142b6a363363601e12b93
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# f4e78556a84749f9b5b8b4d58863bc05
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. The |chef client| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:152
# f29f8db7edc242aa9b4eab2a6e59e86e
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# b5e31f7d02b64fe2ac8f0c9b5e042a7e
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 29efa82f80cf432380f33a517b25881c
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 697edafcdeff49248d1913874c05dda6
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 4737cd64699c4caf93bb96547f54efa8
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../source/chef_overview.rst:155
# 11bb2a4dbe2f4268b7e8df06e99fe429
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# e0387a6077884ee1a9d45e85c2a8bb71
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 8c62d69234b34cc29983bd4c1f3e7e61
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 8c386a8f53e245999654b52cd1be1167
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:171
# ef03c2217d4d4f72b115032416791f4e
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# d924a5af7d05454eb12215eab9b9da79
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# baba14909c3345d3a17dd22f871b0a01
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# d6f9cfca376d404ab8bc8b9cd8ae70b6
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 2818e81bdd69469e81efbde5b0af3468
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# f2d92ebdbc3f435a8688fb1e10720cbd
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 855e42220d2c49bd8599c33581512019
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# eb7280bf5a8b472d92095c9e1be18182
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# ba3daf05827a4f37b080f9cd4026fb27
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# a73515a12468433ebdd177223ab3d6ee
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 4c4e5428385f46f5b56519812ca68d51
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:174
# b6b5845889f449afa9bd6139850f7cd9
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:176
# 408565577bcd4dcb9b80a432675b2398
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 0d791aea853b465b9a276b2e9dc8952c
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# e427531da82443cba1185596cf277650
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# a3b9f1df98f54b90bea473e0b1befb23
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# c40febd24957485eaed7360d15dec65e
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 79c4b2742ab845f2b471e9fa4f385a12
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 58e887afbdfa4b0b8382cc12529792da
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 48884447b70f4e21b35adff83b1a1624
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# d1bfe333099b4b0aa97e01bc21027b0c
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 7062b7828f7749eda5541a239514804d
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 0328f12153f9413bbcaa4442b28a8c39
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# d929ebb8deac4c8db63907d5ee4a16ee
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 0082151619ca4799a0aa92036e3c1325
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 98241bf7a40d462f948065a5cddb8757
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:191
# 6645b21e92cf4fa1baafbb9420fac89b
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:193
# 3fc7d2c7b8084a468ff38a899538ffca
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:195
# a96fab949f5b4ade9763158f3d354559
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:196
# cf3edcd82e404cdc97ec874f6d114c36
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:197
# 3a51aaa940ff48618effed68ebb9db64
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:198
# 0a7e7e2962a84b0eb8fd0fddcf2d3359
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:199
# f7bcd70d6e8448009bcb6f1ebb633777
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:200
# e760fcec858c4b0f9d9e4b5f4a2933ee
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:203
# 063fd7a9a29c4571bea92ae4adc4aa91
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# c39d33776e094feab4bd6b928773bd9d
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# b32c46f31a3c4b338658edd79c4ac4bc
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:209
# 1adaa0711057443094bc74494bc0c168
msgid "For more information ..."
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:5
# e2639eceba4a43ec9c6141dc6534b4be
msgid "For a history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:7
# de4a589f925f4e3b83bfd950831183d7
msgid "Part one: |url opscode_youtube_short_part_one|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:8
# 6ace2b3c2f614ef5bf0f40e55dbff107
msgid "Part two: |url opscode_youtube_short_part_two|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:10
# 56ef0df538574536b092075d0fec83fe
msgid "For more information about |opscode|, cookbooks, and the community:"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:12
# 3100b3cd903249719b129d9cc234393a
msgid "|url opscode|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:13
# 586678ef4293434ba1cec838fa913921
msgid "|url opscode_community|"
msgstr ""

#: ../../includes_chef/includes_chef_for_more_info.rst:14
# 70d3996389e442b89bfb5f2b0c603eb3
msgid "|url opscode_cookbooks|"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:8
# 0789c24e75734eea833472fe71ac3eee
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:10
# b43321515bf54b75b9d8587a5fb554a5
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 0e6567a7c19f489992b36d0be484fc3c
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 8a70bfb3f0c24fdd8f76e0c19e9b48d4
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 7375b77bed334593a7e4abf5926fa68e
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_overview.rst:15
# 958ca798fb4446a28b30388c62f85141
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:16
# abd1c4abc16a488fb239c90ceb6a5bd2
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# c331993b84c74249ac6e4f11f6f5e5c9
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:36
#: ../source/chef_overview.rst:55
#: ../source/chef_overview.rst:74
#: ../source/chef_overview.rst:101
#: ../source/chef_overview.rst:120
#: ../source/chef_overview.rst:137
#: ../source/chef_overview.rst:156
#: ../source/chef_overview.rst:175
# cdb3cef48aed4171b6c4bfea79ca6c97
# 16ecdccd44744dd786c1670a9610e904
# 01bfb2cb58b64ec09d00fa11ea07a9b9
# 1689d018811846f49f736e94f786377f
# e500b97500b54dd4857435b7f7bb8a5d
# 37e0169bcadf40eb9bca4d081ebb2649
# ed72bd8f01ea475fa79cfa250a33f2cc
# 513fc576dfa94c34b72b9a380bdd03a8
# c0ff92c2ea40445ca8500b97f475e973
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:37
#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:75
#: ../source/chef_overview.rst:102
#: ../source/chef_overview.rst:121
#: ../source/chef_overview.rst:138
#: ../source/chef_overview.rst:157
#: ../source/chef_overview.rst:176
# 341543415b3f4760a1901e417b66dde6
# 30f30b75ce6241ebba27006397ce69bd
# c3274c0815a74d939af93bce047958e6
# 6c01880e4d9e4b54b4b26f67a92b4841
# 5eb6e21367b74848a952ac31fc736df5
# 38f3278ce4e34725959599c29552282e
# cd3ee185dfeb4e9b9b8498eb027fed36
# 790aa9990cb6403cb5235fa04e69403f
# 248e45a6dd294c448111f9c4ecc5ed45
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 22c6877874d241cfbe8f883510583d60
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 38fa3f492fb14549b1cecb20af92677a
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# b03030b47e224401a1c3114688d8a59d
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 9c111086f53c406aac8a2435b8c97173
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# d773a3fedcc54650a2bf768e5bad6a59
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# 0c19b17db1904641b12608e9e1b708b8
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 1ab014833a2b4d76ad56fa02d75f4b31
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# d47caacafd864a028e9c59ad1de9c8b7
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:22
# 069f96a3beb74cdb911868d5edfa5d0a
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:24
# 8cb1a61db8b441c69b7d4048c271719b
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:27
#: ../../includes_chef/includes_chef_manager.rst:6
# e45de49c53f843509b891ecdfd1e4de5
# 75186af5c219418d931d4fb287fde723
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 3b3b4860bbd24fbd9b8e1376f6b013d9
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:30
# 7f82254dd2f54433a4a797071ca76556
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# e09bd57ebc6d44a78f5d1179cae7036a
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 4e4e43e746244d2cb9c99db7b7714143
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 13e249dc0b1b4354b76a4c1a9fe77857
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 98ce669f37084782a4b2d2fa8bf13850
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 4ddcdd32bc694339bc4c5772109f7007
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:49
# dc91e8f3dc364648826f19c24eaa9259
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 97447043a9244d58859ff416a81cdfad
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# b3d5e45be268471d8641bbb3986f44e3
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# f85028e70964476cbfd0db7596107c92
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 64e7b40c3c294d8c8178a93229e928e3
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 675aa11eee5b49118cc7114a3c6fa708
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 8a28e772f25e4dc38b68a02ee4879e4e
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 4c74a21dd478490f9235e3d8fa8a966b
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 8a5909d47bca4f948a7e26f756d75ed3
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 73db87f6a36d4be4a3ff4a56041d6507
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 2bf2d2d6563a4409a97d53795d18627e
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 4f613de957a94f48b7138a31808c1225
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 757dc6e4110448eda29f5bf0287e2b93
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 9acc6bd0ae5a4c11879d052f9568e4f8
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 4afb0b42bade44f2b39d3bf7bc68d5ad
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 15c2613fe1464c04b3b307160e5882ed
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# be0fdc31175042cdbe33a447b3ed1d96
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# e42cb03eeeb0463fad3ed2fd311625f1
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 4c1ffc8144304b53955a92746c0b3ff1
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 5462d461b3c94f3a8dcdea2f372f50e0
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:65
# 23e90ad93e934fcfb5793f23b894f775
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 594887f428764a6c929a1eadadf19b96
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# b3741d9e02004b78a9ead7a20b61b1ed
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# a4f04d4efbf7417992b512565469d5ac
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# e715f9da41354d82ba46869a7f78c1fa
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# f9261583d51b4b08887a05fdd54b8b31
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 62fe7317ae4c4bcf8fd0bb150f0f231d
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:68
# 3edb75a959104a8a81a0f8934fdc96f6
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:77
# a50ccb6ae521458c9e02a14e51ef9b5e
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:79
# d02d836daadf4a059075d77800fe9ea8
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 24a35545c60e4161bbae2d2ddc0c3517
msgid "|kitchen| is an integration framework that is used to automatically test cookbook data across any combination of platforms and test suites, as defined by a |kitchen yml| file. |kitchen| uses a driver plugin architecture that allows it to support cookbook testing across many cloud providers and virtualization technologies. |kitchen| supports all of the common testing frameworks used by the |ruby| community."
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# 68a043a9d5bf41bca5ecb3fb6ab0095f
msgid "|chef spec| is a unit testing framework that runs |chef zero| (or |chef solo|) on your local machine for the purpose of simulating the convergence of resources on a node. |chef spec| is `an extension of Rspec <https://relishapp.com/rspec/rspec-core/docs/command-line>`_, which is a behavior-driven development (BDD) framework for |ruby|."
msgstr ""

#: ../source/chef_overview.rst:85
# 3ed2ccbddacb451b8d14c1e505829f29
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 42b9b1fca843418f8a1b292a478d8efd
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# 580dd7c920e94728b103cd3bd2618985
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:89
# 2677896fc30646bc82db66bf82e29885
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:92
# cb65b641846845d9bb5510ed133f614f
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 2021dcef4e384112bca991f4d442214e
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:95
# 1b7bbab09d1748d6a1b367ed691862e8
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 2cc42112118c4fe993bc3c3b0e1f8d9f
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 49c848a88f434689841bf4791191ab56
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# 66ed06e623224800a7efad0e4a6e79df
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 6d23433e48b24e1882ec89d85090ad71
# 0fcbd794f0104dc3b340343369451bca
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# b66dae389e6e4a54aad685852a68f81d
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 08dac4dd7f564e11a572b9798fab2709
# 0b3cc10f76774ef989a0d0be87c0f349
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 8438f40d849f4229b151057d222eba6c
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# ccbd1abe699e4aa98a038b1647209451
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# f9b42c1f1c8c49b0b775134a42048470
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:111
# 17826ef7a8dd4defb4e1d7c168c176a4
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# a635ea29d2e24ffc8c4cfcc9e49a1519
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:114
# 3d836fc227d1448f8e757fef3a3b6f18
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# c42f4e2b99eb458699fc5cedc0535b9d
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# c29f2f9a634c435a950a2ec5b34328a9
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# d3891ed309474d318b511ae80e5eced0
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 02e97ee781d94831b07fee02234e7420
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# ceaddc2939c14828a1dd8ba2acb5f82e
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# f5c867c3c0dc4d8d8988efbad00077aa
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# dc061c7116e848a39292c7e38eda50be
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 56d4476845024c1491ad7a19d4c5afa8
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 1bcfcad28ad440aeb8d4b3c2b6c2ec9e
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 0038de702aef49a8ad7861e39bc09844
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 675183072a5b4eb88f3e5828249c3204
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 4bc7f09d45ef4ffd937d0c365e2aa629
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 1ead0d1a223341e29baedab069a487be
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 2c6ec6a932b741729a9e2b1131a750a2
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 82aedce3aa4d41118581714e4f2ce2b2
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 69fd2b24a6b34883a18af4fdeb705381
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# c2bae7f8f3fc415596c28c3003092182
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:128
# 7a7832f8909c46d681fe75268561efb1
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 57a2c44f46ce41f6b308467be401cb52
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# a5bfcf9df2fa4824bd85d0da8939fde6
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 6b3a261ec2ca452aa22810f43cb9756a
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 15522d2f80114a928461176f87020829
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 32b98556c7664d79a1d4b9831e876ada
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:131
# adce3e3fd8fa4876a0609b3c30d4efba
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# c8feccbcd879407cbb3a97534545cbbe
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 1b9ccd78739549c2aefef6b68ee3d7fd
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 1597c3bbf7aa442fbeadb6c5eb8e967e
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# 1044e4e7e3124b1baeed12d5f81aae94
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:147
# 753f9dfba65a4eddb73cb3c84fd42aec
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 75462706dc1e4313bbf10432aa9072ce
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:150
# bc0fcd0d2cef4dd5a0a63cf8c899f738
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:159
# 6baa561279c547f69f104c7685dbb251
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:161
# 955e18668efd4a1992aea8a7d9b79f57
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:164
# c381f9275328470a861b2c62bb0a4cfa
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 8806b63f00374112934bebb7f0f46137
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 8d99e7ac949c4de0a2547b213e24fd56
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 9b6c14d1bba44d06914687af5330f53c
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# d36a74fc272d40f5a4e006aa86c193f6
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 47c975cfe2cd41ecaf81105cb7150107
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 3a48321306fe4537a666be8a2758a754
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# a57ecdfa353c4b22af951f38aebb68e6
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 94e381cb5ab34b41819c8f6353e0b832
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 373e4bb3be604428a6e10af1242b68de
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 164d014ceb1c4b37a959b950fca4e3de
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:167
# 1d40e31e7e9947ba9646197514080f7e
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:169
# 99e5ee4d2a524339aaf779d73333b9f6
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# e6a456b687b046c1a28e2ed78379d64d
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 8eb78775b05146e3985cfc240a74f52b
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# a3cec7ecf94345bd9d6211bbf131e0b5
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 3f0413fec2e9420aaca907a5f2f5862b
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 9a33abefd5e74d7a8e2845b5ef534246
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 8c06d4bf9c5d462bbd3f69f3df9198d8
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# ba7796e82b8d429193bde540ebd257ec
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# da3629b362484e6f8f55f9b6c729f4eb
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 14fbf6df25cc4191a284e86d1d7f3687
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 8d9d4060c3eb40c69437929d39df3db0
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 3cfb105e19e942fab6e364bd73af2fb4
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 5e84750c5e5540c789d8c153d36c9bff
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:182
# 9a08f1d3ee8d4ec6b792345efeef155c
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:184
# 273c51583c9c4ab8ad692baa60e034a4
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:186
# 08c211b1e7cc4bb4ad64b4eca2cbd04e
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:187
# a2f86b7234ab411c8cde9785a3cf5764
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:188
# ae8220f0add444e4995c9be8a33cfcfe
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:189
# 32b4f962a639420db373083788642b93
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:193
# 16f34eb0156b4ff0a03597fc33d3793d
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 89a8d94d5d8d4a93bf0f89f88c34477c
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# df9393c024564d34a3b7542c7dd2c373
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


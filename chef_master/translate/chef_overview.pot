# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:7
# 3d1f2dad016a47478dd18e4d79eee30b
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:9
# 5542a57d5abb46728cf39e1e56c8d29b
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# fc14533393524542bbcc86332adc7c8f
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# f298ccacbfad4ebdb5e05232a8b845f6
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:14
# 6db1b5aec9854619929c65c10f3e78d9
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:15
# 6bb06d8a716040e2a016e289ac5dea7b
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 584193bc1154479e9033e3c62ba13ae8
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:35
#: ../source/chef_overview.rst:52
#: ../source/chef_overview.rst:71
#: ../source/chef_overview.rst:100
#: ../source/chef_overview.rst:119
#: ../source/chef_overview.rst:136
#: ../source/chef_overview.rst:155
#: ../source/chef_overview.rst:174
# 43ce211c65c843a8a51e4483db3c8543
# 9da5b832868b4923a2722d8333885c00
# 2656d5f2938c4faeaf2e5343f1e08cec
# e0605f8cf3a440c38bcbe3156e140453
# e15924f5eb3740378c692c7e559d04bc
# f71e34b20f304d4a94629a7934e87d70
# 7868689bd7f44ae99112a26ca1d439dc
# cb1f1fe061a44621bfedce45a0f11ff1
# dd7d0ebd26684aab8e1604b928b8833a
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:36
#: ../source/chef_overview.rst:53
#: ../source/chef_overview.rst:72
#: ../source/chef_overview.rst:101
#: ../source/chef_overview.rst:120
#: ../source/chef_overview.rst:137
#: ../source/chef_overview.rst:156
#: ../source/chef_overview.rst:175
# 562eaed871234fcc8f9225bed00a4638
# 1edf79617f5848ab9a68bea43c291397
# e7802a606a5b4f00b9e0b62deefa7b03
# 0ef561f87c674530856a064702f8f30c
# 90ce35f6d31748e7bd57e2d5e235a7ea
# b1642e8ece0c4393909104a1ff6ac442
# 356eba87368a437a882995650ba5df10
# 8411508791884993b52a937029f5aaa4
# 8ab86a7899b14bc0a5df6ca7e340c38b
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 3e78cf80d19f40298c54d6c86bd32d9c
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 20de12ccc7a944a7bf04ead6dafb4220
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 6af35f341ab44b638aef62c0294cd02f
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 98bce802256d40dfbf495cd027b15f6f
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# d4d4f49a3e9049cbbaacf094b5cf91b9
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# 475c91f6bcfc40a6ae988cacb9e8d4c6
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 6d5be8c8106f4627ab36dc205fabe296
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# 21b7149181c646798df81b8f68bf9367
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:21
# d8c4004ed73f49fcb23dadc35d5fd5a9
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:23
# c2cada464f8141949d66139a557714cb
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:26
#: ../../includes_chef/includes_chef_manager.rst:6
# 4ffe39eeec97458f952dc2c6041845fe
# 20c41cd8366146ae9a1524c48e32283c
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 07f79de2d7c4495898c0f8b3033a6f35
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:29
# 50e846c321a04389867ca230ad315a02
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 1d62c4386dd645efa5802548ddb5930a
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# cefd9c44441e486f887dcaf9705d9511
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon aws|, |openstack|, |rackspace|, |google compute engine|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# b664d9f8d6f74feab1846871ec7b5740
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 3239920f54bb4b539f76b103ead4588b
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:46
# 8db3ca4fa47e4200b87d77e9a13817b1
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# f2783f8cd4c849d78dcc69ab209163fc
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 0d44f4fdb6964f85a6ba41a43d441449
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 71ba47dbf9e64c76a237224731d583d1
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# a7dbaaa157da4a9e9918ae8267bdb33b
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 97780ccd528f4550822b3d1f84643f8d
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# db7b6193b5434297b5c7fb940dc8d887
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 2d59918a92e64cb29ee42623b74d296b
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# f49c0eb3e25445989d7f0d261259951b
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# c880e03f0d33449aa420315c5f3feecd
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 3271678fc11544a393f8824fe81d2387
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 58f14624a3644da7adcc7b95b6cb1b36
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# c8403b0a307a490b9047f2c3863b8a41
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 0a67058e03f84773b41f18ccb5415879
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 06efc88df1c24f338dfb8b3477861bca
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# d266c3c6283344bfbe323ef4ac73606d
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 98c4432223c04a59997b584b6e178f0c
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 2803ab6334d74cf0804a41739668f879
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 03604321849e423193206d9fa040c47a
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# fb52ef0b6a4946ea87ec4dda656d296c
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:62
# 4be8ba3f0a4b4489aa63a9f64f03511d
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# d4388bb70a1d406d83adde61df507930
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 240d3711309f4af2ac25d4af53a2d3b3
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 93b755eeb79b43999f3b7cf14d18e82c
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 48856a171789467c8e043a3ab313eb33
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# feaad9fd975a425cbe22d4407ba5833b
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 30c4bd4c8b084c6f9ddd63adc946b244
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:65
# 480139220b5f4fac8860110913ad80d2
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:74
# bfe8da8cce154a37adb4d5fd07141322
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:76
# 379bdf02c8364c1dab5e64e5b4f537e2
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 390b2b0a851642d685dc3b3dd116957e
msgid "Use `Kitchen <http://kitchen.ci>`_  to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 6c4b06dd5adb494b988559e43c05eb1c
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 412559974cb84303bc32aacb51736169
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# a70eda53b54b41789d2c7b8bf6bc8bd8
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# 61dd9e25fb0843c3b11a71d1a98740b6
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:11
# 2b43741479d644eaae18716610f1ba2b
msgid "Uses a comprehensive set of base images provided by `Bento <https://github.com/chef/bento>`_"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# d55130dcf7a64180bb6d72736c629d3d
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# 52879b7638d44106b87557d97576fe99
msgid "Runs the |chef client| on a local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# 61ca4b3abcd94ff78eba2c4a23c75d9f
msgid "Uses |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# c899740727634f2188eb35909fb1160d
msgid "Is an extension of |rspec|, a |bdd| framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# f2e923c4d41f4168b74080ff9baa537b
msgid "Is the fastest way to test resources and recipes"
msgstr ""

#: ../source/chef_overview.rst:82
# d8f1a44da67f43edb99cfd9286bc572e
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 67debfc636fd42c98a7d98ab06535ea9
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained:"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# 77a984127558478f96adf7f2c0ce0dc1
msgid "Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:8
# 8e92b1d6b56c4133a9da1ce6e715c325
msgid "The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo_structure.rst:5
# 0a4ca307a1894fe3994b654c426e5152
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:88
# a136f485cf2c4d9ba3405c0de27daefd
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:91
# d95730708fad4e369229ce1c5cf05f44
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 7e9e71c520034f0fabc1bb723f224883
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:94
# 34076ac3f90d4bdbb3e3880e4760d9e1
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# f1dfe0800d994db89bf7a6672126c146
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# c06742dd9b8945bab3f9bf94bc704bef
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# 658f34e5f8374e038b848be2c7686aa0
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# f5c2e4626855415eaf9b81e50fba4823
# da1f2ec7727843cbb3bd7a907f1d140d
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 36c35d25a374464b82566e1b3dce719b
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 3c5d902184124345a5b8ee58fc65154e
# ea7a84b6256045ff9d264f7bcad6254d
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 4da4a05c68474205bc5b15e91ffe1795
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# b02b5ecaab0f41179befbfe1d52f78b4
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 04d5a3f147ff4516a7ba21c7c8d7057f
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:110
# 511bf23446e54de1bd1b37733cd32fc2
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 50da92f0b12c46b8bdacc4634a137e16
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:113
# 751de05ba27549d0bed02fa9662ef956
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# e0e34729d3084c42b9544e0cb12fdd9b
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 1977f07037b44d20b94c7274a461cc32
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 6300579e688048e1aff5847ef69829c5
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 43ee21e245db47c9b79002ab8901549c
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# 7afcfd7a3aae4885b95ecde26b97f907
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 7b54d475f6704c47b5d15608203a5d51
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# b28e95b7eb6b429e95b4317bab522756
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# e47533c0942c4458b336521003e98fad
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# fe7beb3da7e14f5e8de615677728bac7
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 76c03dcd7da6428fb8b11b1a42896274
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 2c151b66b51a4388b24c7b5e46a3b563
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# db9b98dbab83461cbf37ba7a4ecba908
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 7f373fd705644bb3bc026f0dba24e489
msgid "A run-list defines all of the information necessary for |chef| to configure a node into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 922e536e16f641d59400c964c76fb048
msgid "An ordered list of roles and/or recipes that are run in the exact order defined in the run-list; if a recipe appears more than once in the run-list, the |chef client| will not run it twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 5bf4891a9e074861979aa381ecb40c84
msgid "Always specific to the node on which it runs; nodes may have a run-list that is identical to the run-list used by other nodes"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# cd5203c028dd4faca0f36c008d0dc732
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 190dffe87d9146c5b72c393b93711a61
msgid "Maintained using |knife|, and then uploaded from the workstation to the |chef server|, or is maintained using the |chef manage|"
msgstr ""

#: ../source/chef_overview.rst:127
# d9fa7903c17f406981b29be147d9c15c
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# e3002fa2487343c8bda46d68642fa491
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 18ad9c455ba646b0a0c7e6762dbe7f3a
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 62c8261a635e49dba18030b272eacd33
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 157a2b1cf302436388f24eb2de5074c2
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# cc2caff4dea14a0e9dccb6e52c7fd699
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:130
# 8050a915dca6403a8d490465985816f0
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# a28f23ecfe54484993036d2f451296ab
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# f4d43a1f5b48425aa126e4005837e77f
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 9c8962f9d74c4bbc9b28429d20010c5b
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# 0727963f7d3f45fcb7fe64906d657ff3
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:146
# 0f155c831ae1480399eaafee2ee752a7
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 982174e3f8e94b379185e3d1115344cf
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:149
# 4957aaf8afe44caf921cfc2b95fd467a
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:158
# dd50312b395346a899bdc90372d065cf
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:160
# bd68f6a19d1d4f85a6c1ca80f6bb4e4f
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:163
# feaefe43b0c74beca0700b40c0791fd1
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 45dc130d68e64a3b8fd0dc4d6a8111f7
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 248e5d42fc004e598e8c4b92921a8f17
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# dcf0cee903d94d4490c7b528716e66ab
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# c27103658df44546bed4c07e618dae50
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# fe8ccaec9f184a759a546921b972d93d
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 2f9186d1ffcc4ec9a35bc46fc8198acd
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_overview.rst:166
# 5fbdc72a897a4aac816da1f457d0e0ba
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:168
# 808cce5d961e40938987167d4fc68591
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 7b27a2a8e8c84ffc876a96fd01c2dcc5
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 72b7c44fcbd447b9b2870a8bc1aa3046
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 39e79b0f145c4331b7bbc4a6bf2a7aaa
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 9037ec9c2c9d4b4390e7db847e2db04a
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# f2e5f60b2600449fb7d8eb646fea4b7a
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# b557969c5f7b4e56b60829f4c576a7bd
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 1b31ae65bff44a84807dc29871eecf4d
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 811ff6a32c2344e4808882169183d707
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# ecc10ca3f8d84d48bef7812a91384ec2
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# b7868b8404f7423093a766fd4e3c7ad3
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 60aec54b70f64e12b9084b3388cac314
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 1ff3ba9d5d23440ea6ab618bddb53601
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:181
# d4e46e4124904e029c04470010b2f36f
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:183
# 190a974d0f484c9a96db0a072ed8cfc0
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:185
# 273c3e591a234105ae85b7b7707df0aa
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:186
# 695a9db087f541e7ae087f9f5ed386f6
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:187
# c13e6458e7464371a3d390f3802605c1
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:188
# 67b9d97374ae43d084663e5163cf2a86
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:191
# 3b2a60107f654fd7a23063c4970d6306
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_about.rst:5
# ed3f237684cd4b3a823b53920d22df64
msgid "|chef| is a thin DSL (domain-specific language) built on top of |ruby|. This approach allows |chef| to provide just enough abstraction to make reasoning about your infrastructure easy. |chef| includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the |ruby| language. |ruby| was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well being able to handle any customization path your organization requires."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-21 17:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# a0a8d7dc30b04cfcae89ce3ca8d42399
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 8fd4ac2d743c4d20b12d826b19a12386
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# 2abda552e0bc4ae893404b6b5ce32998
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 7d77ad9c9bde4da2af8de63fe42157b6
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# d9bb1332b7764953b8deed1d93823efc
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# cd887bffc8514fe980b6ff4b5b32bcf9
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# 13c2a9e89d054591adec9690da08d0bd
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# e259cb2f17e248f1b6a91bc5aaa90296
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# 141d0198df0e4d368a2d7e2d2637a295
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# ad9a888fb1c94a9fb1955f865cc17184
# c59ac1c917094bceb5e4bfdb616f6814
# 3de75214679d46c898e2386df96f865d
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 515154d2bc5a4295913d735391deb353
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# 1b693842b5ca4830ab9f60aae6032741
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:108
#: ../source/chef_overview.rst:129
#: ../source/chef_overview.rst:146
#: ../source/chef_overview.rst:163
#: ../source/chef_overview.rst:184
# c8af7d5da23e4d0aa48e8456ba392c68
# ffae958841704067963c036422c0de00
# a4db35cbb44b4e9f903cc72d4ceb9420
# 8828296643a9405b8553a29d6af98adf
# ead91ea95fb941328d23b4a1f6b13096
# eff7175e1f3c4bce8a05fea4bf9c1477
# d4d0928939994caa82abad2e8a4b39a4
# d92f24309e124a4bb0b5241133dc511d
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:109
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# c9a4876140b1454ab185c11b690aea6f
# c1959eb7665c470693d193d664a0e448
# 635c50da0d6d451c850f4abc18d8f9c4
# 02e7e1bf81a9428ab3ae428fa93f90c3
# de32bdcadcf4423fab1605f953018b0f
# e17f2a91272a4e7381ff0d4fd3a6e186
# 0b42f9768aa2459b9b1cf6e99bbb4b5a
# dfedff8a52e848caa4e1a4db41900fc4
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 76151a7bb60a46ca9b287f3b3e3e2735
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 9f868b81b85148a99087e7791fabd212
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# 355bcbffa912443fbfc313c1d5b7712c
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 6814bf72aa2347249a1d093fd890ca91
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 2e8559cf9e9c4c28aed94ef7c1c2eacb
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# c327f21442964eb8bd56b0efbfdb18fc
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# b2219d68d0a14ee5ad68c7e59721c559
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 529707346ddb49b49dcca6632fe45267
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# fc609ed943a14cd597c0c2c37d590b94
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# aed9ef5a913341c08fa0569e704753fc
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# e02b3c6cebb349368acd87c6ca6b53aa
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# baed07ce809a4941b59fbd8586262d48
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# b7da981d478d4055ac87515b97321d54
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# fe036a5c0661471193ba19017773bd10
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 512382b5dbfd41979d95cc4675cf2d21
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# e6a09ce6b8fc448db36d3e509300d0eb
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# a3f0cb2183004abd9041bb7f8fc2b22a
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# ce2c34310e7b401bbb55020fc326aa1e
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 264563bc89db4851bd660253b83b7a7f
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# c83e649c083d43a7b59a0e513feba877
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:76
# 45a338e19d1b4524893db21585c4e549
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:80
# 79a604ce11f0404a98fe9f01536e290c
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# c8641c932ed54193ae9913a602b46280
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# e788fbd6b044447da949856f65a67dde
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# ca986fe7a26840159c8827f53ee07527
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 3c077e9f12264256877c54f79bca7268
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 30ababe46b544f7a84788d34f5c64a72
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# d9895d380c184d9fb668232a7691b7d6
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# d1c89fd28bee4aff91b7c4e03f058b21
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# d932ec7f28364e42bf595b71dbe917ef
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# 4c0956d4b0d04405abc82ff9d2694502
# a259def268834ba98152eebf07305324
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
# 33a204102f5340a7becaa55ceec9416e
# f511f7b193d94391830136e43ec83e1d
# d15793750aec4d77b5f761ae5c5908ad
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 4290d87388a1428f81ff9cfe83b9b8cc
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
# 188f92c669414e7a9300b24b71373b35
# d96d37d2b1d74707912a96ffe04ad65a
# 3a5ddfd0542d482395259c1001133e59
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# f0810f531b73498e9381301af46a95ee
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 4beeb478319f4fd4a7166d079f36f969
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# eab357768388449f974f8f58117e2823
# 3f5211e8e5ed4d74b4c28cf66e97d5d0
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 63ea4f696c7848109fd8f70dfba6f863
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# b8f335787a5542f3968db1a0eddc9f11
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 831be21ea8a4468190173ab6049a7b95
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# fd23eabc4a3b40d9b0c0981968c6aeac
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# c83673e9fc284f1aa026ff902449c130
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 96c261a5f5ac435b980a5cad8acb0b49
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:96
# c0b22725755e468fb0be895de72590b9
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:99
# 8660b56493454b72ad62f04b9c0b901d
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 9d12a21560304825bf1e425b3d78a86b
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:102
# bcb5a87eb84d4252a9d9a5349c2ded26
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# f38c4d5af8484f8193c920b9916e4f10
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:113
# 0004e9c99ef441d0b624ff863ad35c5a
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# dab1ce9f15da473894068ae615d6c7b9
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:117
# 907e9fe98f6749d7af6baf1acd94c6fc
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# e552890746104abd8bb70539d31222ec
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 28ed8ec572984ba687b97e548d57c741
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:123
# 9f11166bfb7c4324a6c124a3e1c4d663
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 21999b484f974cd7bc51d6b48588d1fb
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# d0038938f3834ce887157044654770e6
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# a880d475a8f9424e83522db38c58b02d
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 742793304c804208aa53009762510ee8
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:137
# 6711cca6dc754cc6832420f1714c373c
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 4d27f691aff54d0b9d92b21916ea8378
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:140
# 75e924649dde4ed0b93c5db747bdc701
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 3a37d4add2e6431bb5a9da4b34f9eff6
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 76652cccdd6541da9d09ab6139a9b40f
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:154
# 1dd89ab30c46467880870c54a4c760be
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# a4a2297eebde41c0a1f72e371db13452
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:157
# 19f4856359f749c2a2e6484360f3f699
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 2d54fd4a15b44449912318e799065028
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 7c1d6eeac7364a6a8a696d69fa5396cc
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# e313879ff6cb4dbab354d8f7d24527f8
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:173
# 0bba6baa2dd24b7ca59fddc3da46598b
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 8ffa3a9c08bc4f92b20fe1ed04926d5a
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 6b415c44665c44cf8a7cfdf0f89c259b
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 6231791dca13438f9c03d2300ce70fb0
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 2b6448d6414c4830ad6806e2b097ed43
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 7c6afff2a2804b03ad1b3848e11f5e10
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 6cf0ab6af41c472b86bf6e50b74b77c2
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# fa065cf0718f4fc2810f50c5db8d22a4
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 2e47c016c62f4efbaeacd2556f7366f3
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# b7baf22dc1ac4a07ab3c1b4a8115d144
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:176
# 16a71ea321ec4299b6f9f74aaab632cd
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:178
# c2d4ba0b446e4117bc0f9f1848cb26d3
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 0435c03ec04b446d9942fca23d2420bb
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# c4a95afd8d65410083fc42789eb7cfed
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# e9d4b9800cd2446fbad64bb2458dbd28
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 47494df2dd9d446ca0d71bd5d88972c1
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 0b5f040110404dd5aab0ab0c51f8998d
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 6979e5eb648045b8bcd3df5376773a2d
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 9e45a555ea1a4933be0f9bf9162f83d8
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# de43687ad68741a59dd758e91d921a20
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# dd4d87a12aee4d02a789628a7d1a8a12
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 73152c4abab34ac2a5e827b8c87ebd3d
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 37b77ac2a32046308fecfe94bfcfe2df
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# c10054643a154e689c99744454d1422e
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 19ad66c9d71444a3aee96d474a1a90c2
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:193
# f38e267444db4c449e7f212431a6a3cb
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:195
# 1a053c7d414e474ba6f372a45f4aa1cf
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:197
# 3203c46bb959480cb53c7d4f6c93142e
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:198
# dbd0656abe2e4c608554bf4045e22cbc
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:199
# e3218905e9e646c49bc0095b2c57b24a
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:200
# 94ac37a25b3e4834b1d7c5d2e494a611
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:201
# c44dd4913c8d454fa836665c7b9fea6b
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:202
# 1ce86d26703d44caa097fd28cb6a2aa6
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:207
# 281aca861b8e457da918c8a1c84f855a
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 4e283cc6f6f54fee9ffe07954430129d
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# da6a2cf6e3d04896913b7c75a7331701
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:213
# 74baae67d8304033bce5cc8bd6e2fdd3
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:214
# 06d403cf1c77489089b533c66f88bdd0
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:216
# 63ed4c6a1e4a41c9b27b1678a61b3ebb
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:217
# 75a014aac2e44806b5bcf6d15e13074e
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:219
# 39cf38980cb54c45b8111b434a36b3ed
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:221
# 586b6b74e6aa45b7b02a7dbddbdcfc42
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:222
# 113ade8665fe4c8eaf1a25c9cc8cbe47
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:223
# 8a9bd267f05949328f05ca6becf81230
msgid "|http community cookbooks|"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:8
# 888f66fd8f2e4cca96a4e3ade671c212
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:10
# 93357826119b4940b210aec3eef70be9
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# a54361bea0c946e1af2de7acaca5f80c
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 9349aadb1c204a58820f512a2eaefa94
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:15
# 4caefe19fd9f40a7996a70980c2adce6
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:16
# 4071cd4892374d419385557e7901e1de
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# ee2300a55fb54b30a418438033041c35
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:36
#: ../source/chef_overview.rst:55
#: ../source/chef_overview.rst:74
#: ../source/chef_overview.rst:101
#: ../source/chef_overview.rst:120
#: ../source/chef_overview.rst:137
#: ../source/chef_overview.rst:156
#: ../source/chef_overview.rst:175
# b97f2ff4c59f4734842c1b9de99400cd
# 998e13cdfd49476f85292ffc59cd26ec
# 621bd710f4c14f14ab8df21900856d65
# 8abe2c85a4b045699780a9766b5a780a
# 237ba425c52e441cb8b58833960c1e88
# c8105b9f297440b8a2dc6096bdc21208
# 17db1e2677c94dd3aef3fecbd47b0f0a
# 0c847a8a979445719cea782070ab598e
# a8ace5316b104f028ce779ec12463ad8
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:37
#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:75
#: ../source/chef_overview.rst:102
#: ../source/chef_overview.rst:121
#: ../source/chef_overview.rst:138
#: ../source/chef_overview.rst:157
#: ../source/chef_overview.rst:176
# 5049949fcc4c4eafbc29435fea178ea2
# dace7e2d708e4513a5e4d60e951665b3
# f06d4dac474c4e36b070cf47970394a8
# 27e238e219104fc0a7567dd2ee78a1b1
# c5b11988c8b849f790e5277a8a88b8ed
# a88e384eb30e4940946d4f568c538d32
# 4c566636714c4b35a8582879b6506093
# 03185d7d0fd84008888b91eda8bdd802
# 728dadaff6f24302ab225b83c3de28f3
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 9ad14e9f22624d4983baf866c3b471c3
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# c44a93efc4b248f9acea342ce98c2ca6
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# cf279b103ecb468f87296a6d233c45a3
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# a9213b0f3e6548b385d6cda6a9f8a40e
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# c9ba4a0189ab455f85c62a7458a716c3
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# d106257cea15489289c13728a921e263
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# e791e90c00764d88974ce3cee66c2dc2
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# 8126d6fa81684ed2bc69acd9ee01b66e
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:22
# 80ec14acb3c14b3aa9636ac3a09df978
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:24
# 8a073cf23e0a4ac6a71d6b3441ab78ff
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:27
#: ../../includes_chef/includes_chef_manager.rst:6
# 0017911c0bd941009706a29f90ed7b93
# d7f1e4d556a24f1ba5aa3af2afa2e0c7
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 3134ae7ace104a859438f5d069332ab0
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:30
# ada56f4f037544df90357004441dc5e0
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 5bd8add507e54c3c995e087743012e13
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# cf12a560dea947fd935817e6097885dd
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 496740a1554c411cbc824e7772d4a915
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 69788148eb74407cb2ab873b1b8d4883
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 9b900d16c2834e52b8a8d6431584ca55
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:49
# 26feef431a4f4bfe828ee4666bc17c03
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# f41eab7d304441e38e71558a3b3c1075
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 30ed4458c5a345a29161a26e3cabb504
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# eb37dffc20304a13b4b0d26c7bc440ee
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# a1f5e1d2d0ce407d99e9ab155079feb0
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 2fb6428a33554fc39f3151ec429ed461
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# cecd2be184044cce848f4e3aa36a50f3
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 5d1fc041d5db45a6a5dd8b3627a55345
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# aea4beaba46c4222a0cca446352493cc
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 73973a6bbb614f83a4be603db26e0f22
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 211063abb34944fbabb9801d905ce20e
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 8c2ed491932145718b47eaf6887404c2
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 12bdc46c9f7f4f97bb980187b1aa5e42
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 1e21f8fff8484a1a95882c2e0e45c4df
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 31e1bb12c4ed4e3fb0dc5af206b15a66
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# ffde98b9d2b44f9780af888a4eec2bb9
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 782301e3fe4d4c1db660574aa5b62e18
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 130c9901323f487fb115036306823ed4
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 37bc84a8043046fcad9c36eb886eb7f9
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 51d7e3e5ef8d4a70baa24a9498c0160a
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:65
# 8e7e7f92b06b4fcdb2777feb8af7395d
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 95aa7226507a48de96b0501ad84a6006
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# e2d79c995fc6427a8f8ed926e8ec5203
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# c6ba3641a6474147b38c1f864a98afea
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# f37a9f579dcb40788da361dad039444d
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 57b2218eee8142b1b1f51409486e1c1c
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# b98a371041d7486aaea6eefc81376441
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:68
# 131ea971ec8743688117a5cdf3d33c2a
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:77
# 7f9af226951641abac3663d21073707e
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:79
# 062db7e9ed5a44c8a9e9eb44ae51a17d
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 1b73ef36f8bd486890dc28ab9739e2c2
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# a0182afe658a4dbaaa74be330c208cca
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 1cce5712368545bf821138e2485b159d
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# 35e8f5c3f537479b92b4bda92f2657b5
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# dfbc75c74f064fb29b5556a32ca05d63
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# a418b9671e4b4684b3ca79a767b43dbb
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# 15b7e7ae52e048fc942c844e568fab88
msgid "Run the |chef client| on your local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# 4d636f2f6011459c9504136462bf6cbe
msgid "Use |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# 2bb290ba7a0c4970be2d657fd25397a1
msgid "Is an extension of |rspec|, a behavior-driven development (BDD) framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# e2cd4176159b41f79435e6471732792b
msgid "Is the fastest way to test resources"
msgstr ""

#: ../source/chef_overview.rst:85
# be80ba0b0b6f4eb69ddcc257c8dceac2
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 30ab51bf557e409d85e7fdf50934e3ba
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# dd2f4a3cfda94893a29e710ebf274b7b
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:89
# 4b38dfe046a2468b851ac5ee418ea22d
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:92
# 2d3b352b76a8458ab353d0c5300fa61c
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 65b11ee8601546fda813f0693fe0a9fc
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:95
# ead7b0f760f34d6a9060826d3e4d240a
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# ad3b5aa574144daa8ac233e5e6231443
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# ac11a6f2ba0a4495bfbcfd17857292eb
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# cafe7d8769464375bfc14f8ca5f39e31
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 3dd1f2de698d4580be18d8e6538fb9ff
# 29820dba301a40358a5c309014a92122
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 5e38a5e3c71c4f75b6350df753b4eae7
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 26142a493cfc4cc0ae700367c8861496
# 8a23597a525e4eefa223911eafb3f2d4
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 1950c7b20fec4a8584a699feed16eb9a
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 2dbc7cbf85de4acfa63e0e1a1085858a
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 6c28114a52cf4b4397a43c7c612ffa15
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:111
# 9b001968eec84c44b133f2156922467d
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# bd69a705f5074db4a1fa5f124c37ddad
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:114
# 8e46d6c38d6644bf9845b8bbf825ae75
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 86d2c8f9cd49413cbce09f4ae2babb78
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 3897ca3fd1a045a7bb3882c2d244cdd0
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 5da9505b0ce24e8b9a52847d6805dbaa
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 78dfd6564e03451aba6c2a962b5692b4
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# db4450d1dce442ff92584f7c38a7326c
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# a85b3ad419d7461eb2cef97ca82eea74
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# d3d40cbb97974963bcbbe1a675b0acf8
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# fc86e77209914437a8b102ee6d17ce9e
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# affec0abb97e4fc3bd36b075c110e9c3
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# cee3fc15c77f44a4871ad15f7154d4fb
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 8456a5c248c944fcb44c493adf57a521
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 307dfa6ce0b74199848b64a3ae62d744
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# f6b247b3048d4963b238e444069f7405
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 209dcc898ef2479092bf1be9f45ff731
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 6b41cfac01f64dc3ae3e03ef3dc8096f
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 75b538d71d05424395ead426f3206bc4
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 8d0c155e2a26410c8e7b59f77cad6530
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:128
# 69df456c3aa94e87b59299f3825332c7
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 669798e000794ceca5f05ae2b29a324d
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# aecfa30ff6b84c8094557e6c2707735d
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 90a8780cda4f4d119ff0c6d392d46a21
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 155d1b93ed14445793ec049f30fad977
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# fe5cb877e89d4bdca0abad2ea17ba353
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:131
# 086234a80bb34525a70a3a0206f5bebb
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 52a9f400b6c5416fa05989ce28526116
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 504309f1912b40a3a30e8215e3304597
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 1b244c7fe57e4e98a8f50e091cd55e77
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# f39645fec65e45d6bc3ba1a2bb72a0a7
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:147
# 56793692185e49b68767062e955eeaac
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# e97961dcf1304294967c145c4e4f808d
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:150
# 1bd6724982f7490eadd23037ca8532ad
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:159
# 7f9f26c6814c468c89c1fab77245d016
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:161
# 7330d5d701ab496c8a60f873f56e9b6a
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:164
# 7509d90b199848adbe2d4897c9c98486
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# a71a555b0a524b8f9d8186e9a746b546
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# ac875625d01f4278821dd35e2c13909c
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 99d2ca50827345c2ad3d68e185feb2d5
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 21a3f20e6d4d4910804f4264a113a6a7
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 1207b1a71a2c45e3b61bdae70413c340
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 70b2070c8e014bf1b0dbda4cc45ee6f6
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 37c002e76be14766948e5ef6b96b38b9
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# dc61bcb04ebc42bb9030c2f2ad83ef28
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 0729bf651fba401fae5f1c9c83f6c0ca
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 18b663c864fc49f89bf1e06cc0c130d0
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:167
# 56394386ed7c408f835f77ee5ce14546
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:169
# cb83b14bcc904a73965f76f68e23f5f9
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# aa9d950a5f9c4601929f2b5dd485521b
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 2e148ee2cd0849bc9a94314497da5b75
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# d955a882885c46ad834b1d2e0c3a958d
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 7328e0619e10429187acf22089117717
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 5a7b4069e38f4c08b873b10aa8040b9a
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 11dae6b65b814c889fc878b02582c075
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# ffdaae71d9974d2ab4a5efa462f03207
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# e70a73e4617545d291df995dc6f5bf29
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 92bba2f9fded444781a9ef2a86c1b238
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 99c27fc0aa8a4b53a2fb5ee5f0ab6c7a
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 002fe055d04c4a62991fa8912b083bfa
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# eb9e2858de084bda821383fa1ce64293
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:182
# 3b019e5d7d7740859960940ed74b32b5
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:184
# 9a526eee35ed4ff09332e501ea6df49b
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:186
# 0bada656070d42329da1a71917ca5104
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:187
# f962c2a1d09b472ea8c3f6345e1a9d56
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:188
# 18a50c6592784407957cdfa452ee98cd
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:189
# 387b4388b5c7481692e29bf2fb53d2e0
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:193
# 39ba54b23d1b4956825774f6174955bc
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 4f1077bb54ef41529893c2ed0ce7ac44
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 44ff8b7c278a4008b778d6075c470a1f
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:3
# 23036225b64e4f8bb9cccc2cd9691e82
msgid "About Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 56ad71082bd34eda98f63accd3944bff
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# efb7be130dc048de8ea01b689fc98840
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
#: ../../includes_handler/includes_handler_community_handlers.rst:11
# 29a86eb3b84f48caa42412052d5ef7b6
# 576e0da147b34cb69e7a9ac7ef193922
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
#: ../../includes_handler/includes_handler_community_handlers.rst:12
# 77e3946d3b8f4aac8f52ded093aa0cbd
# 2f783aa4ed454302b7b5d8d1596b8c54
# cc2ea847e24a4d21b18ac9d7b84e62dc
# 1c6d4fcae58445db963828bab1aed969
# a5b0c58595184c1c8185e4f136c9c243
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# fae4f89de20147c39bdef0adc2536cb7
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# fc765db41c364e788f525689e106edf3
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 80c81a35a90346279a7063bc17201b34
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 614c9babf6554fd093b618fa8d7c1e08
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# d7ad55eff69e419a85cdef7ec1b6c395
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 44709cc8539f43fd9028e5094632b5bc
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:10
# 78e3d10a0cfc49ed9658a594bc93e200
msgid "Exception/Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 7eb4abccf289485f90937d5631bffd50
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# be2c28e37cf7459bbd427f300bfdd533
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 9413e25105324dbeb68a8685ec0c9a3c
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# a15565eed4cc4995976b69681bffaff2
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# d07472d784f54844adef3623edc0daf6
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 6df7a3caac0a420ea5492a5cf88c94a8
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# f7e404bd668e4127ad5931aa582a0c0c
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../source/handlers.rst:14
#: ../source/handlers.rst:26
# d5ff5edd47ed4e3cb4c768a3611a143e
# e5dabd9ea4f94ad3b5a4ea595886995b
msgid "Run from Recipes"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# c8b86bc14c7f4ddab8b64e2dc1c3dad7
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 566f4fdfe7da48e9a40cad9a5c600346
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 4af489b9dffb4580bdee41e2429d7ba0
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# df5e866cc26941669bf162af434df55b
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/handlers.rst:18
#: ../source/handlers.rst:30
# 5236ceed85634859b6a0566b72291032
# 6dee1fe2c1e8402eab055b6c5173479c
msgid "Run from |client rb|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:5
# 052aae2d61f04df59a325ad3c6aa335c
msgid "A simple exception or report handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:11
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:11
# dcf045ac39104d628aa703edbf59371e
# 7696df7c72f34c709e4991a85fb4135d
msgid "Setting"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:13
# 6150a88dca3744e09a8c9f824b38dfab
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:14
# 0447473d6d9c44c79b2f6a82fbaf904c
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:15
# 88de0fe0c96e4d1aa1e1e99faba53556
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:16
# 8d245fa25b104224b0eeda2150b56884
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:18
# 836e9a8d6649424b810ab1d586e72432
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:20
# d3646492f3d348ee92b76b71a765cb9e
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:22
# a2267abe23934894a8eb2a9d9f9ef5c8
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# e17990e4312e42ef88b3f92e12d6a51f
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# 75906314832a49419d56b5357dc8f607
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# 4a4e1639539541aa93053c10e906c5dd
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# e5f8400debe94a6ea247132c1f476056
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 69f4875c316144d19f7e0e420e04172e
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:5
# bca65df88d8349e4993661e6c9ef0c9f
msgid "A start handler can be configured in the |client rb| file by adding the following setting:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:13
# c18a11740d5846688e48e0050a5806ba
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:14
# 25a52be18e8c4d7dab90e39cb4ff2ed1
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:16
# d1bf45d5330c48a0ae21941f952bda8c
msgid "For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:27
# c2e7acd033e94380886f60cfcf21d748
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:35
# 5b6181e7e9224f82b5a41835c76c4277
msgid "Handlers and Cookbooks"
msgstr ""

#: ../source/handlers.rst:36
# 159322a568e74cd9901e14e76163324c
msgid "The following cookbooks can be used to load handlers during the |chef client| run."
msgstr ""

#: ../source/handlers.rst:39
# 30e1caeea8304cacb13ed3e5861b70e1
msgid "|cookbook chef_handler|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_handler.rst:5
# 4b6b5c58f42f4b788cf1e80ae3a75f1a
msgid "Exception and report handlers can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:43
# b79035fc160b438390d6c3bff5d85488
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_client.rst:5
# 2ee13e6d51ab4645b8af4af84a46353e
msgid "Start handlers can be distributed using the |cookbook chef_client| cookbook, which will install the handler on the target node during the initial configuration of the node. This ensures that the start handler is always present on the node so that it is available to the |chef client| at the start of every run."
msgstr ""

#: ../source/handlers.rst:48
# 7d55c662021a41f3b843ece2f86a87a2
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# 6a352a03937d46aca17af9fceee58674
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# d883e1ab8e144508925515e63e24cdac
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 4284f87777bf4a9a9ff9c344e32c3887
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 0077415c78bf4add802914291c5353ec
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# 69ec21296b3e43fba45bd9f3363b152f
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../source/handlers.rst:52
# a8235efa30bc4b2faedd4d3a9c1241d9
msgid "Syntax"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# 38cd49b212dc492d8e2f9e335831d1bf
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# 23bdd30a832d4beeb6e4a57d7f5a6c56
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# 192264cb310b412884b3e6722aba9f8b
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 80ee23c33816471e9daac0edad16773d
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# b4515dc6222b47a58b61362ab2cc28a8
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 70b212103b394f0f85c79b667fbb9630
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# c0907152a1db4b93aa4525b9bd13cc56
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:50
# ed5b2d1e6735473a9bbc944a47012600
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:56
# ce8ded5a2fec41da96a2615370c76558
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# f1c1164c4fc14038a03bdc527d91c135
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# 1a2695aa0c1341789a9c5002e7b1a041
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 0e10da8f6be64aa197eaeac7f98e90d3
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 7b2843fd3bb245d986cb007b4c3176e6
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:60
# 749f73a0916e4c07aae4b6bc72692f47
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:61
# c5ede49cf40243779defc77100fa2992
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:64
# a39ac69d7bce43c7a2515f3ecb772eaa
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# c79bc920f03a465e895a10f2a033fc1e
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:68
# 8b9110aee60f482c8df178ef8a666762
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 86bccc4857284e1ca853d20807e2ce95
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:72
# 4cad98e4afa642989415e7c59851e524
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 60bd3f6b52be4a989cb9a9f9656fb4fb
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:76
# 7c1003bc74ba48c4a9e82e9f4f4a164d
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 365e68e4058648eba6726994740fe629
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 0fdb5823269b46cd967480431f63dd8e
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 21d17eb24239426cade0768869b7c5db
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# a7cb6699645244b7837c376b1adb496c
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# b0262906fe1b4d269f132d800c46e78c
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 8a8f4bc5d5974fa3b0b0d377e3cd9cfa
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# f66ce9244b2b469696a157ac482f6468
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 0cb7df3230914df08095010aed49e867
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# 73926c5025154683818fbcd7e8061de6
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# a7a769fb42fc411cbf87051ef0106a9d
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 795a1e0e7ee84083a076c08ae6396ea7
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 512ffd3c9bfc4185a0335d3746755389
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 3ff923063b5044e6a24f7ef5f204f109
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# d96380f5027f450382b02d3a37f348c1
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 8029b4dbfab74838927d6d50f0f1a187
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# 855e7d8c45994776abb622130966967e
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# e5a1d2c0fa6f45c7b1ddf7de20516274
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 66c55c10c9f547cca922fc0295e9986d
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 1fc80c7a5b5a4b3e86d6cd31fd82d851
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# cc76a56a050848e291ea4df81cc4e1f4
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 126647b0f5d74d00bd1e294b7df47fee
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# 84abc09934cb46e8b20aeeb313e7c2a5
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 849caf16f64045b091b62e2ec05cf068
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# ba72805642fa471fb29928d0492026a1
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# e98a905903bf42429350cf8989ee148e
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:81
# 3412055727254fa59c4e93a1a9e97f2d
msgid "Examples"
msgstr ""

#: ../source/handlers.rst:82
# 2934a60f595d49ae96755b94821e14f9
msgid "The following sections show examples of handlers."
msgstr ""

#: ../source/handlers.rst:85
# 22d871c372094b779d9259b58fd9242b
msgid "Cookbook Versions"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# a91c0f70d015402892918044af2be57c
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:89
# f23a8e0c104844a0a48f6b10e339aa87
msgid "cookbook_versions.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# bdbd7b9cf2b542c9ba1bce78071deaef
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:93
# a9f08c4a6d4e4965b6142fac2abddf0d
msgid "default.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 6b52a1ba27e942bf921a58fa7a492b40
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 0848f43dcd614915922d4ab9904c19f6
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:97
# 6a2d7524ac7846c2a96c0135b7ec1619
msgid "|reporting|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting.rst:5
# d24b1a1ccce941dfb6a119f9cd56a32f
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens."
msgstr ""

#: ../source/handlers.rst:100
# 9f5680eaa7154566acda05b0af302860
msgid "The start handler used by the |reporting| add-on for |chef server oec| is always installed using the |cookbook chef_client| cookbook."
msgstr ""

#: ../source/handlers.rst:103
# 184b359778cc4df99abb68381ab26de7
msgid "start_handler.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting_handler.rst:5
# ac64c56088f743f989111d2b5476562d
msgid "The following code shows the start handler used by the |reporting| add-in for |chef server oec|:"
msgstr ""

#: ../source/handlers.rst:107
# fc04f959204143af944c903ae82f4165
msgid "``json_file`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# 757e19185c784152a75284bc3abdd3bf
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# f7d3a6777763482b88c0932aae10b6ad
# f4c015c2008a40308e2a11c0bc56e95b
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# da74d31ea72b48a4b79b8b8ac33d6f15
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/handlers.rst:111
# d5cafc3e47ab4b89ae138fbca94b41cc
msgid "``error_report`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 1d3324820e39410b9574aa2cc1349df8
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../source/handlers.rst:115
# e80e7a8afbe64358aeb50fb5d252c0dc
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:5
# 33c52c89719d4c159614e92ae2e0297d
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:13
# b002e3c893844e11b76a75e46392e684
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:14
# 53be4102e3814f268013fff836513ee4
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:15
# c628ac61e75e4238aecde61448e5fb15
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:16
# 09e60f1deb2649fb917cb58973f3245e
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:17
# 7d3b5c4ede1347f7983dc83da11011bd
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:18
# 6ba9251a5e0f44869810367ef201b1d4
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:19
# 0e376ee7cea14910ac869ddf095959e6
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:20
# 6921e486b6f94754bc34d21a64f16b32
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:21
# e6d39d2e0fa0406ca91592927cb715d5
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:22
# 8e5ea4e2fdd2484a81d72b14ae4ab170
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:23
# 1db40ce924494497b197dd2ab3033a57
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:24
# 167cf33bbeca440e90066037caa31b2f
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:25
# 3fc344e4b4d24a2aa8e52dffd714ac40
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:26
# 32744fe9378741f6b848f1687f5c3069
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:27
# b4c7ac00a3104f44afb8aa180e2b1d33
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:28
# 6f10b4556b7646a39f8f6c3d021734b2
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:29
# f502d0fbed7744f0bedf998735a83f41
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:30
# c78a435e2a154cb1abdae4e0c58877f8
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:31
# d7b24c2f90ec48af966a114ff42c9fba
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:32
# 219cd02176644717aa17387c29f19aa1
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:33
# 4d04eadcedf841829bfec2c612c3700c
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:34
# ef008e9d2558467583a4cd3a3a55f7e1
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:35
# 33bcf5397a0b434db0e37d182ec6ae97
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:36
# e96845a948d049219259c892a3e27bec
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:37
# 8f2b17aab7da48feb9de4052e5a01185
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:38
# 36d0869a8a8a40c881b6482b77dffa41
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:39
# 5e50fd246a5749e49cd9455647c171cb
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:40
# c41c62ea78524e688e4d1f4ea0e5bdb3
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:41
# c2e7035ec5ab4d7ba0112fedaba1fb90
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:42
# 07189197a94f4bfba83fedc57b131497
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:43
# 7e2f948c0568476f93ae7adac6d0a781
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:44
# ad107530f3404cee8cb601def9494477
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:45
# 6cada60038aa4db4bcc9034bbb78ed32
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:46
# 526461f68dde4d3c9e10d70f3eae9476
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:34
# b2dfdb21d0ea40eb90e6e070fd44e37d
msgid "About Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 0ac472e72a134444b78e5f1aac7669c8
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# 6b5e174fd3d8434b9cfb6bca8395b53d
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# dffad10b1c20404d88ef9ad0fe4d7972
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 2b559edaf8c1458a9b80bda5e17cfb4e
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:39
# 6ef2a065e0054a8cabf70535255e7ba3
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# af930d85b7b34a41833ffafd8b2bce56
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# f11f07478c09486185ceb8dc95537543
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# 320226087cba48c8ad5a3327b14cc376
# 771d2bbb2d02456792601f9836ac0af8
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# 0d0ae1b9a26e47e1bfd3c222926a3624
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# f5a842201d3e4576a6d091848971284d
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# ce7f77b9b822408696fd2cca53789948
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 1a79a649d8704fc8b79a92575520760d
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# 258b57442cca46e5a0372ba4a953ea70
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# 23a64d306a8d4d568046233a5693e371
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# 52fc5e81aed34169a45ec8f44da40be8
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# bcb4cb27c8fe4a6491c878294fb39af1
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# a509bd3fab134fa781bbee14438615ba
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# d1a548facf634b258029add20f3d6a40
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# 14175f6ffda14d79923369068e28d1cd
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# cd92320431ce483eb368e991a23b7a33
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# 50beda96f427480f878e3a50fe2d06f3
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# 13d262c004e848ffbbd5088ca2c4890f
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 2792db4308184446be2c10db3224a9f8
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 47f70405cfe24549869294beae54aa5e
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# 2d810c80ddd549c1a488831a69584b3a
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# f5e20d6e84fe486883f13ac1e4f825bb
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# ec581204043e48e19970e3e402f3e69b
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# ad1e4333bf564e6f89da50a67293410c
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 4387a8c2d38145a5b3b4a0f718f2b302
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# c962784475eb41bca4e5515e584b0efb
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:43
# 3c9b9e9904604d79834268fada239ddc
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# bf0bca6a3a644694adce0c7c6e63cb80
msgid "A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes."
msgstr ""

#: ../source/essentials_handlers.rst:47
# 305be341dffb4a3680ad619c87599359
msgid "Example"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 009ba5cfa5dc4b3e8dd9bf7b60a3cada
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# d49ac6b6d98343c6bf3ae6998c38ff46
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:51
# 219b3d40f0384f8bba21723764b82bca
msgid "Install and Configure a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# d8b5c45218054e15a89e8451e171d63d
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:55
# ca446d84cfa8455f89d0fde3a1f7a362
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# bf265b11ae4e4bf583c77e3e95fb7db8
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:59
# 686fe0adebce47c688c0cfe37605dfc9
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# b7bfb60057ce445ca9e6e8ce3f4402db
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# 7eb8e8a55e0640eda4141d65a412a6bb
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 24a8138d26444421a726b8586f126bba
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# da5dc1bb72514a3cb33de4c283305e4a
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# 4f36ad0f7a014bcd95a5cc79b2e4ff1b
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# 371df10ebde04cd3ae4208a4599c3521
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:63
# 39a737e76a3b43c4b15d6ac874aa1fa7
msgid "Distribute a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# 3d113eba470245618e0d8130c63777bb
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:67
# a142332432ec4d288a40a206d3faae1b
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# e07f1708aaf14f11b4d2f612c5176f00
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:71
# 6a3966e4abc2461ba3ab2e3a8c6ba8b5
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# 8100bf691611436e99704cb27084d4b6
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# 3fead21d609d4a419114325e6a54625b
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# 509a2f572e2d4132a22c5459977c24e2
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:75
# 6a5426e9f46348c2a5f5a213a2c6d9c8
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# 7b654b99b93e47cb99a937b0f7143f20
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# 83db0fa00dde4fa09f0a6a99112a9e85
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# 48bc218fc240420fbafb2f2189b949af
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# 231c8afc2d04435d84191fe1f805faa6
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. `Download Airbrake <https://github.com/morgoth/airbrake_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 38cd656649c64106a3d22c900bb3aea8
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# f422f184269749509c9f1418015962de
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. `Download Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# 12c8b024d9a24cb98c1f4e1bab2cacaf
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# 50c3f749ab414983a9422db10311078c
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. `Download Campfire <https://github.com/ampledata/chef-handler-campfire>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# dc2e174e75a148d595113cf922b0ee8d
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# f0647d237be54e4c9b7127f35dd9a8ac
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. `Download Cloudkick <https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# 4d84ca7ea1bd4fa6ad9c0c7c4e1df88e
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# acace90ee3f941d2af1777b5b5715061
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. `Download DATADOG <https://github.com/DataDog/chef-handler-datadog>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# 732b0a603a88492481ba11d12a61ee80
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# d36ce6b9153c4ec49037d7dbebcf576c
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. `Download Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# 0f01d47258c548feae98a51fc6cbe78f
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# 6db57df3159a4f2191c3618bf4a9abaa
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. `Download GELF <https://github.com/jellybob/chef-gelf/>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# 327bfe89ae9f4b7e849f55509778cd63
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# a03c538a41f04ff98d41061fd373a952
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. `Download Growl <http://rubygems.org/gems/chef-handler-growl>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# 6475b3b2e2a24fe990743b71a71e4b24
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# 0e23afcfa17548b9a511495e0a7685a6
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. `Download HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# e09e8130c12642c4806b1cf0c939c89f
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 02329c7568a34e429d005bfa9372f247
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. `Download IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# f33d9c0cfd254b5898b30f49bbc4bc37
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# 961ccb3544984fd69ec0a820436ef949
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. `Download NSCA <https://github.com/ranjibd/nsca_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# f1ab61f67cb948409da5383d62bc317a
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 24297cce42944ce79b507dd719ae7740
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. `Download Simple Email <https://rubygems.org/gems/chef-handler-mail>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 2d0a5fa81e5c4ba59cc71e520aba8720
msgid "|sns|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# 4284ef6f78f246a69a7d46b0b94e80b3
msgid "A |chef| handler that notifies exception and report handler data and sends it to a |sns| topic. `Download SNS <https://rubygems.org/gems/chef-handler-sns>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# b7a4e54e8601427ca387102f1fe2fca5
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# ad9bbcb06e1b422d946013602bb37425
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. `Download Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:40
# 761e9a46b8024230829fa9992cf65fb2
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:41
# f70b4b298fc74df78952e7c0ed58e49c
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. `Download Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_."
msgstr ""


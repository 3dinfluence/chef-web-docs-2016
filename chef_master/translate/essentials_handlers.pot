# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:34
# 43c7b5e0fc12406c8c1098fe4eca4a11
msgid "About Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 38afd78b4f9243308752022318baa7ef
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# 28ac463b0db640528a9750acd542e388
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# 451741b4c72549daa57195113dae2e96
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 8ba3f05ad7c34fad88ae3b36d0909578
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:39
# 566784fba68d4be1a6518e5376dc8ab7
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# f2398ef9c4a946d095a359f8516fde5d
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# 12e9b7783d5e4091850ded4cb79fdfd3
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# 69bd122b54a34a60ac0d99e8282de9fc
# ccbeff3ab8424810b3a3f684a155a4c4
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# 31efb26bc926405a9962871c6290335f
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# afd5e6065aa240e9ab321ebeab093a81
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# 1cc5632f668b47dd9c74823e8b1608a9
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 817093eca5894195a59215e26925e994
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# 0f792a64cb3e4698acf629109a19a5cb
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# 2fccc89852584656b71c69caa59da8d7
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# fb325c29c1bd4ca29705e97c6ea96177
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# 7a6577baa5ec41dcb0c3d2d4f3acfb94
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# c98fddcb8d44436e935685b6d15dde72
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# 4ca9860f914b46c58d743344e47ff6a1
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# b72627cbf24c4985b55d788a8388a646
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# dce846125b894afb8aa0e4c8d4442371
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# e35577d3a9e4416f95111ab891ff628e
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# c361c145259842fea041988e371042dd
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 40b59ac8dd8b47b3857505cc056f636b
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 7db9ca815a7045b0a85503c379a9d2c1
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# aa3ef53b44b647249420ff80504ee8bf
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# cb1a4c16c2714caf8f99283900e73aa5
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# eccc42a3aabf4ee7ad7133e1390d9669
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# a5bba6d9c6c84975955d631fc2fd9670
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# def2f63a178645ad8fd58e9f6935f627
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# a6d0cd33b8644f43bba1491894422091
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:43
# d3bceb8ac80c42f5a811af12e3198ed6
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# 7a2ccbc2bc4c406fbb1b9a31baf0d10d
msgid "A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes."
msgstr ""

#: ../source/essentials_handlers.rst:47
# f8a3f07984c24b92909c981a7b3bbcde
msgid "Example"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 1f8dbee74e054329884454b405ec4ea7
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# d7216697ea4740979e2bb57e41d97633
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:51
# 1fb80aa0f1e149538a82e48cfa65c233
msgid "Install and Configure a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# 79d37ad0afdc4631b27256e1a6c0cc99
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:55
# 99f5fd398b89451cbc4b8096633775ac
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# dd67b4be1fd9491f9770d96f6ec480ce
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:59
# e7bac5c2d1ca4ea59a22978f3903bd2d
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# f4d4dc5c4c9740faa15f4495ad4f5543
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# 9b88404dc43d44bc82ff3caadae3da0b
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 2890c0c2e8cb4b4d812afa7856f2c9cf
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 7159ea991d9f42edb3a95e831e32829b
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# f2febe89bc5144bcba0402688f54e3eb
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# e46f9b860e5d4e4d949edc9ae1a19377
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:63
# 81d8362dc8fa43c5b61daa64d6f728f0
msgid "Distribute a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# 4f4f8ca0152647d0bcf9086f4b365612
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:67
# 34692dd1ce9e40fbba4838d4f5132ab4
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# 8223ae7c57ed40d89199aed4011646db
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:71
# 443b319861854f6a9b4a1c00b854d945
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# c58d9c52bd564dcaade757231d7d047b
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# 73069dbd5ea643c9abff84b57fe6a73f
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# d7e8da12f4f641b19d53262585138153
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:75
# 4465b96d045b43a8a8cc8ee1abcf2fe7
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# f581a37d944b4a21b96bcaa818233196
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# 6bb58ecc60714cedb9e6741ae036cf1e
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# f13dc677c3f54d9bba911e1141f53765
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# c9a2a3bd4c2f44d79254ea026c4c3fe3
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. `Download Airbrake <https://github.com/morgoth/airbrake_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 849e004cc9c54c6aa7cc55005f3c5183
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# c7701ef9025d4d2d87ee15c4a067008c
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. `Download Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# c8aeb525fdc9404ab5e6d851f1936cca
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# eb470fe8cde5433786c13aa5a574eb43
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. `Download Campfire <https://github.com/ampledata/chef-handler-campfire>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# 0000a54dd5624d94a9b1ca26eb069387
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# 80fc0a009ba64aa792c99542f40912a4
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. `Download Cloudkick <https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# d522a1c92f634a37b831a42f41204c26
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# 62eea1f4a9684b9991e2c393f03d3e4e
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. `Download DATADOG <https://github.com/DataDog/chef-handler-datadog>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# f5d6fb1757834b229e06ac5416950787
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# 2ffdb80776944058bdb65e85fd4c0c35
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. `Download Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# 7379051ea64b4df688631b57b236ac20
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# c7a43074b2a74407afb0ebbe8485860c
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. `Download GELF <https://github.com/jellybob/chef-gelf/>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# a8557f8f62144479a75652c8ccbdb062
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# c744c0ee2a27484ba222b5ce984da2a8
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. `Download Growl <http://rubygems.org/gems/chef-handler-growl>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# b03bdaf50ddf40089c029cac0aa2ed7c
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# 4bc5be937e0248198646d74a0c6d5204
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. `Download HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# f6f5928f826d4e15b6631a786ac3183f
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 142a545ce52847c28d91fe8bb996fb63
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. `Download IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# edec1c33bb9646f08287325165ba2e61
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# 1d03471344ec466a9c98db7c451efa85
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. `Download NSCA <https://github.com/ranjibd/nsca_handler>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# f603ce996bb642a8be2f4a480e3447a0
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 612fc2ad034240c1afdeed5313fb967c
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. `Download Simple Email <https://rubygems.org/gems/chef-handler-mail>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 4f4261787de240bb815c41e73866c8c6
msgid "|sns|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# ea5b0917483346f9951e821060a8475a
msgid "A |chef| handler that notifies exception and report handler data and sends it to a |sns| topic. `Download SNS <https://rubygems.org/gems/chef-handler-sns>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# 041c2ecafd124be18be8082d57a028c7
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# 23fc8c2cf207458bae53f9d0cbeecd47
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. `Download Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:40
# 6ea30ce4b20f4649a236909ffe522411
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:41
# 76ef633078fb4310a57399393c843e36
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. `Download Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_."
msgstr ""


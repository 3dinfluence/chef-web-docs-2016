# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-01 19:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# e34f1f5980ef45129d270531f716bace
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# dc65a139d04c4727aee94691e13e0faf
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# d31d9d7a8c134c568fb7ed68f02e083a
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# cbb7cf8120f7417c9a3dbff296d53920
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 452381cff1ca44bf9202d244da48255c
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 9a4eab85afac44b59cdb7429f1de5432
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 1ea5110cec1b4e20ab4f96d0676cf9d3
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# e7c52ce232d446de989896cc58d781ec
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# a24588e8c050483f8d4a94a55ce1500a
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# aecc160a685e4bebbc3c7a7f64e205ce
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# c23f76ec0aa24ae7853289ab97257505
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# a503c7291a994f39a61effd7ab10eb08
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 343d6f752c944399bad863d7c78802da
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 1cf6646b53b045b9b9f9c1c06c964f5d
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 5939223c8cbe40609053b9b345d32b83
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 99d80d7ba47d43b0b2c697cd99cb27ca
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# c2d7167e0ef3484cb6559ecd7a8d7da3
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 47cd96cb71f44f6d879424b6275f6509
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 1a8bf40ac738406c9fea454581b498f8
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 26c25fcf78bc4852801ae0206f5fde41
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 8dc269fc617248659d69b68737b34ace
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 373a3aca1c0749ec9f80f5e22b0dafe7
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# cd6a351b85274fca8a0db8492292ba57
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 73f601e71ae0470cb71380e640a3a7b2
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 6b211a61caa74b70beaa2fc2a8f1ee1a
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 06b917592fbb4193a0a4ff1325fbbdd6
# 8ff25047d9084ddcad76475e0d7ecbe8
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# d023847e5e0f4b178cc660d43ddc2c40
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# abdea7eff1f743baa60878ba3501288f
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# c70f7ead1da0402da13e151f477227aa
# 0f984f8a29e54f7bba59b6a13ceb20e6
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 5d7e9ce5e60d4d1cb8d2e262eb9a7841
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# f20526941c494208b44eb4804b125b45
# 50b420cca4c64178b859d78274de4d54
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 7ae15f576a874101b4dd4359192ff3e4
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# ef8f2b6bfc9143d58e4550ab181c3b47
# f260199d40b04953b9d4d06d8272229d
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 00d0e20c74314f17b732234a17c1cc54
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 0247b9adc3de4dfd9cde9141724d6c1c
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# ca1bf0ab1a9747ea82bd64f5ac52c7e5
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 1da5a5557d564585a54e6adf71dbb691
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 7b202d93ddda4d50bc49bbfe7faad0c2
# a2e8cb0ff5b84d67af892da5806dd2ed
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e62b3ace45ec43378b49e06039fe634d
# 15a90187e46f4aa6b97e9dd176a94b65
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# e84449a21a8b4784bea2a49d8ac4cc79
# 46afc5a78331491195931c8c7c1ca332
# 340a168242bf4e91a03ff76d232ceaf2
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 980f13b5d42f4392801d675a0371416e
# e103550dd89a4fa0a907e7896228cc0c
# 0a5c7e04a5fc4b8e835d4cd28ea7f025
# 84727f8df3854780ba135d3734d0f721
# efb07105d82b4a26bb378841ad676b73
# 19ed9100847242c6992094e759418a2a
# ae78e9c030784cbeb3750176b1069823
# 7f21e1c8926c47aaa7a722c42caae021
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 4ab13422834d43c5b716a4a6773bb144
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# e240378a64744de780218a3b5d4e7976
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 07862c26acab43f2a9c14d804a95f88e
# 3bd1321e25874591952b4a91c0bbae23
# d6e425faebe844b9b6736fb8fe85a72b
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 4c3e0b08026e402bba87c35621784bbf
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 3925e363235a4da09d59c8a8a0dbd9fa
# 2d7d606998e1468eb7f2375a4aa40f39
# 24f956fc61474adea050e2792a9d5827
# bb3035a503754f00b57cfb1fdc5e7c49
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 069c37f6ccc246abb05a8be435365f85
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 91925e5442c64832aa128285ae1b4cf7
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 82056ee149bd4ab0abb2d70ec16f1704
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 0acb909183fa4326b9cb6b24543c9b73
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 70dafff291b048f2b71f342bab49aee2
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# ee75f1030fb84f679bb7bdab90eaccb1
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 8e073657c95945b49924ed58646598fb
# 25123f89fce74fb49325542fd02e5ff8
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 506c478b24f14ee1b144d0d56c639c43
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# ed1a69461c6e47b5a9a6b1eadb660bf7
# 8ec23df17642491c9a4f52805eb37bd8
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# e422d00b1ad34665a785632d01f3adc7
# c50fd8e5de9b4007914b1b1c64d47ca2
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 09b77cceac23476cba37ba525e8e565b
# a756a7aea3f84992867c003d7abce59d
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 672e18af55504a0aa954b180fce1f458
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# b025b22bd4d74c99a6f23e413a2f6369
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 9de4fabe9e1642bb87de43bbfe5f1bec
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 98400494964a4646a75498385574fe08
# bcad1225fc08471dbfcaae414f68ccd9
# 1821d1722c5b47afb00b3982d5196853
# 26de033d9d5b4d48922d1cf7eff77186
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# fea0aac0afd94670a9e294153e47ac52
# 9d906f2f849f404d96da7c79afce511a
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 3c24af14890d443c99f481f1bed1b876
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 13063b9fb330487780582eeb9a038964
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 88980f635243414a95feffcac3b74806
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# fd33666157ec4548af6576b70ed046fb
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# a06ff3a3ec084e4086102c300534bece
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# f1b17bbfb9a141d08b27e22722a9def0
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 4bc2c2330cab4766a111ba971cf02b59
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 336850e38acd4a9a9738fd39dcc618b0
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# b485d1bf7e83463d8a91f8b377e0d798
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# d0eca33610c2405ab989e6828b6fa3d2
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# a887d8e0247c4c029be96cf3bfe1e77b
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# baf765094e774081847dbdd48fcca1da
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# c0be818cf538421fb1ab571d4519c6c5
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 6bcca5a73f0842a8a6127d135c9e1a28
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# adba6b8716ad4465b42eaa8f4f33fefe
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# aa9de1abfa1b42cba890ceb0dbfd9552
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 26423e693b1048c89ff857b2a7e0cdd8
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# e0d4cdfef33f4c02b6babb305dc6e232
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# bcac6c77455342ec987c049667f765e8
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# cc1793fe108a48c496785cb159d6d05a
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 4b4c3054698643e3865953b96a66639d
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# c5f2851977bf4d2faf440e182d24a21c
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 033773d0366e4a35a5ca5dc851969dc6
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# a93f861ff5dd4fe2842ba1d1a92efd80
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# d5e3c09a08af41a499044b37f68ccf43
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# a33a5fe2c99e487ba3765ae4865ca551
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 0efcd92d64664d059ec110f1a4de6cd7
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 857c8343fabc4e16ac2fcae8ba31679c
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 7d2e8fc1cc9a4f8180f2a1f24a13a537
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# e104cf419b794e90a03b447c10393c54
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# cae31045a51a4a2bbac284514d5ed1f1
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 4c8f9dcd97584ee2822d81aa296a3b71
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# d470009523664e6a986aedb1365f49c8
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 35164c8bbe92498781d522e00b466073
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# cc654e9673dd4ee38aa5b4c72e1c5b61
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 5c837d28cbde4a8c82c7b5793880230b
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 68fcc04d25a84319aa77dabb9ed46704
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# fdef90f968e14248bab6d85f181473cd
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 3756fe02494e4d6e9bee3569d20cd772
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# b58e9328774d4e34aa3df99e8e60fb18
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 3ddd6a9b9cc64467ad9c7dfee603c3bd
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# f24a909230c04e388c7ca0bdd4369f17
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# f7939f86fdd445a09532649be39808b7
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 847a0a5a558d4c3fa97fc141a41fd3c4
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# a985da2657ca4b128ef3010eceb38a83
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# f7f43947f8894a6e97e58913136f8c03
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# f0e8351454404e33b35095f8b347b2bb
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# cb720ce1ffd24874b7d3a7c5bbfe6852
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 63aaf6ec9c4b4750a44130d7a229b474
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 506b253ee86945b288306b1652c5b556
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# cf0f0a96768a4e8ca5274dab2778a5b6
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 852f374c5ab14e7d8ae3871118a63234
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 93c53d4fe4554d1884de7d9416a28674
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 3d3701e760704c9e9b79a08dfa921ede
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# d4de8e489fea43aa99f40183d56c2665
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 7d13f9fd58ff43449fde383786024d7b
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 37764ba673c747efad5dc095fe6144f5
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 427423e4e75b47179a4e536b7ed95825
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# fc58c2afaefd4d3fa01364294633b5c9
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# d80bd7ffd30a4398b2368900a41a31c4
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 55605d75cb0740adbc843895986baa29
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# fcdc38432f0d40b9a97405a9cd46fcd3
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# d203589b352848e891d057e9b3e4d51c
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# e0d4c112c97a4f72adcdec07581af466
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# beb55aee335748ffaeee1275a78b3ee2
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 5737aa802e6248ed812d2b2a9e970c95
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 79227f600c5a49ab97a164f5846be964
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 3de112638a5f433dbcc394a2538a4d5e
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 0902773a0beb4bde853847f8db97d29a
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 5a70825c28fb4c98b814605c921118c8
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 6cc883ff80a6436881ed347636580d62
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# b565d6b2839e4d5e918b210c944713d5
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# c593493c908749e0b529d86ce3aadf92
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 752f41735c5646f8be8906fa664c15f0
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 8668404a869e42538ea326fbb3f30dd2
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 5a4d538fd0ef43018080a246c7e14ea3
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# feadaff845d64d018845da5977c2f4e8
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 1b2f496b01904e40a8bb472536e694f3
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 80829e0742f5473a849d55fe1d3fbc47
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 87d0dc722b5043bca30cd4df5f1a7b00
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 0c50b3a510de4a3cabd98845dfc144bb
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 9f8e581768e44bcf89df6a77064e19d4
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 4dc567acbf344cbda2bad372d806c02e
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 15b875a12512429098b62f6baf17fef1
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 56314ed8079f4a14b06555e2b347bd3e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 799450533f564d409a045b688b0bb00e
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 01a6dd9c1b794bbb828b5986e95490e8
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# be194e61194044a9a674db8248ffd5dc
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 4a231712eaf349e9881878a30a4b4ed6
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# d0646de0ebdc427ea1e70a42d43a2e52
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 14f195b59177434b8a6a62aa00f7f02b
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 388e496cd1f042439e61b8ea3c3138e3
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# fa3cba9ef5f246818118c659fb74b6db
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# e926eee14b45482a80f338d2e5a1f7c0
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 474dbaf111aa4c918d3dd3bace47b158
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 7c2053cb5c454494bd41fb6bde712db0
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# bb34a5339e954c489de2ae5c820c4a24
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 29bcc4ae1d94430cb6312ed601dc19ee
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 6651f0ecbf9e49cbaed501656fca2d4f
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# faab61449212426b9e310ac8cd652103
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# da67f5d4c12443b697a5f7e8aba90589
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 763c30b96bcd41c5a8fef168a533658e
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 03b96cc8461e49e8a319532dfc02850b
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# eed219d2d31b4d8d931eb92c19e1d97e
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# b7845520266f48509a78a6b028cbce7b
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 35fef18aa5804c5b9e85d72544422d4e
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 02572f4e45a44de1a2ee7a1f4c8d5de4
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 0a4f724e010c42848e658001b7b371dc
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 3d201f05fb824510adffc87e33086896
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# e716928089914bb0a31e4e43b683ada5
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# c185a18b51cf430193bc2bccbd45de2f
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 3b1dc0f283ba4b0fbf6b8f26f1ea8432
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# dda24f8057be404286524bd44042d945
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 524095938325465fa722be22404f10ef
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


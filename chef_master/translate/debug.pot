# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 17:24\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 3c78cc711e2644f8af89a2e1c487d455
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 7434e211dffe4c92b4dcfc7a2abb35d4
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 359a83d46c4e44c9a17f7ebd0277b020
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 14fb1241db054a5ca289c885ddd4d476
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 4434a2dc974a4b41b7958bb422b3fbea
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# faee84e99879494bbf3cd44db6bc5b59
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 712f1ffaec35400cbb1ebb3176e0e701
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# b9c216efc0a2475ba53c9f11ff314c40
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# d7d04507ec2b4ec887aedaee772c88b0
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# b1faa4790fd5408d88aa5d7b0200295a
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 24370aeb03e44638b5b09ce2432bfe86
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 934c073ed6304a918b8942e8ec1b383a
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# c573b4a40c2b400f97090a94cc0e56c2
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 822a572bd1e34c939430136520447c4a
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# d159c1d372024569b0c50c03edd2b357
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 8c7ba423e22a4d42801d78845d73fd43
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# bad251a990704c8c83766d1509f0102a
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# cccf1caa7cbc41378c6ffb867420da66
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 02e411e469294efa998e72bc9a7624db
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# b989fcc289d547ee9415fa7571df2827
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 55bca1403ee9495284cba440c3fe57c1
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 36de829ff2f84de4ae1ffe3c0e05d4fd
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# b43249ce9eb042aab28554541f56bff5
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 4caaf0a400db4fbb9da32c049cfdcdf1
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# f323f4ed2b504f38ae5e8a285d4ad52a
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 9d885983da574339903a56f6ef906e15
# 51c017ef6e4a46bc8ffb1d656cfab26a
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 2dc783e7f26e4676ad2fef91b05827a8
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 8810d234888d4315ac347a6ce4a59b26
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# f7e1573e22dc43878a58c5325eb2b343
# 0b0d93c91969424c9512bc0c690db3d3
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# a1bc7e060e61415ab88ebcd30f240230
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 11405e871cfa4c3cae36887b85277532
# 1d52b94510774dd3acc8a5ddb85850e5
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# ae72be71f19b4b0d9627565b5df7272d
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 3aca1e56189f4ba5872f39f4a50ab16f
# 5ca047f60f824361b17d7d244c59a066
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# e1bd6f25b54e403daf6abb966d5a8b86
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# c84027d3f19043748a851c040b117040
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# cb6aaf0216964c90a4b1791c93c05125
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# cb0729022ebf438ea9a9a62b462054b6
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 572ad6bff94548daac20893aebb9e997
# 102991c26c4f4fa7a535659af1ef8a19
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e81c2e584f174c349a0e4849ec1db92f
# bfc77268a90f4b30b59a4152d6e92133
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 8313b719ed314cb28c2234ecf2439d87
# 1e2e805481d341babff613173de05de4
# 6b2f78540e204009a17a8faaf6d16d95
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 1cd1388e80324727bac5d51c1389c9cb
# a3a2d11045e0447b81c5535d4f870b2f
# e4eca3027cf94e8e9c0e8a851eebb4c0
# 5b05f51462924663aa8b131eae66a61a
# 66fff1e94ce04d7781aff7905cf19846
# 669805e6adaa4b33a5adef7aa9712b2d
# 0e48367316b4494fa9b2fe97276cb103
# e87b079c60154b7fbd3442dcdb3ae760
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 34bc733a640c44938897cf9ffdb03989
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 7af8d95d45cb416a9b47568a99410aa1
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# a5f984fcb4144386a1694dc8d0caa7c4
# 7afae16027494b90ba7a1b3f8d4fff29
# c6cb16f4e7164dc3bbc7e045ee10d501
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 708fe13fc7c143a5b7cfe4747253f998
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 975ca0e81d244717a3a56581698a4f0e
# e850945d92444b86810712fc9d4ee271
# 5a68d29a6aa84e81bff68ed7fdd0eea1
# bafca961013842508c7c31e55674f5b8
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 881cac6eeb974bab8c09634883aaa4a5
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 07281165789b45058381e006c3aeb019
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 6635ecaf028f4ce0877ae55039c42833
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# ff8709b14bfe4357adfce98365b59e29
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 731a83b19ac74e4295220a16336f3320
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 072a36b97492487f8968dbe4fd8748b5
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# c2763d5342384a7cab838385dec9d1bf
# 35c41c0ee04d4d379515cc6d01c05cdd
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 731b415ad972437893659f03b1f45e91
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# c6066666301c4c219690756cffc7f53c
# e75c9cfaef564c2ea9e65830133976be
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 4b5646715a9e4ae98284c4f13735ade7
# 19d362153e8649ce87b910406f5f8d9e
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# a429bb4e9e0d4f52b7e1b14f50e96584
# ccc049262f8644c3baefaee56d607ec2
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# f239ccbf6e6142a494a5c33a8a5c6a7d
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# e5687e0adb234ca8859de1378a26be83
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 5c6cb2a8b09d4654b80114249b23e25d
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 2316b59acb494bdd94e86895231222bd
# 6668d164801d4477ab1e1d64b8d35eb9
# 60f201b3ccec4bebb71d35a762cb80ee
# bc5cc273c47c43358d833677daa950d2
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# d274e75c58bf44cbb8a50cd0af2804b3
# 485378d6e2a24c259a856dfeb5befb0f
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 226348483328437685289c67f3a7f177
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# a97da87c469749258d39d8bce0007503
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 89f22124fdc64f5baf99bba2e5d1d628
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# ec6ba14b9d98401faf47ad3b0a1996f7
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 8614724a00694fbdb5491e2e85589fcb
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 6d7376e2db884e87b19ecc81a3c23cc6
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 1dac1876f6ec42eba2ebc49ca752f5d3
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 798fca5cc0674acdbbc86369697947db
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# a12cf5e7b68a4b7188fc7385bb81934e
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 9b357839159f4da19cea55684ec1d26d
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# bd8788e2cbcf4ae49a99cf60ebb596b5
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 2cc1410c77324c4c8cff2fb2fb1b9913
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 0730052270584869b3deb5e217bf3a22
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# d00514314b9c479c9610aa8676cb8eaa
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# fcede08f3d5c4fd6941f64c1b9a5457b
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# e5c7984abbd748758f1f2a38e9d08efd
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 3b11dd145d6344f4a3cda1a75c58171d
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# de3696bd796e41489d2d42db87d2c014
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# fb6d2e461f8a4ddda21600188aa7a7d8
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 2eab965efa854edda9cdfb6ffe7a5eb3
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 8b37b2eb2f3845bdbda149ca9fbf0963
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 06a05999bb6e40aeae769b89fb269a83
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 38b301a7a24f48cbbd16ee1f72e31ad2
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# f1b922e7397044a5915bfd38a059aa85
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 73bf31668fd847df8a0dc282700fb901
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 7dbc64397ef644bb9e1de132c3994da0
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# d08ade2c9bee40d28c24026d6f8b0b35
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 48425616c77b430d8a94a27c349d2824
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# ef76428f02cd4d5c89de9a0e0bc451aa
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# d1671c8679d541eb96233c80793ed2ed
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 882001ec6a6049b0b25f2489632402c6
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 8c40c2c3b06a4cea8a32ba2aaa2ff116
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 8dd48433e532463ea06838f94bbede40
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# aa133a4f51794038925b23c787efbeba
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 77223b25267946b78c588dd00c50809a
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# fbae21f548df4793afde45e2f03e1b07
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# ad03411d835d458188885d2fd3511050
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 5c07a48125c844ebb1a9128d5c6ccebb
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# f028a5c8ba314596aac26797b90b0f57
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 32c49403d20f43a681df7be0a6da6db9
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# d5d7d8c7d8da4420bffcf29e4d6d86f3
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 3e8af674334c4656adfb16d7fd8d2918
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 951f32456ccc46cfbefb76520d3026a7
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# b126918a7e464dc99e923195e3536b7c
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 15c1310e22264f78a9f5299e2aa9527a
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 75a4afec3da844ba94c753c3649f4f9c
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 6c42888a48b4468986e375bb1082f875
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# f401e8b375b14fcaabe333a78f772499
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 47170cd58c3d40c08bcb75a65292b351
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 288322d72984495fa59da439cfa48183
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 408d4d96c1c1441d9e3a707879297fd6
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 349f04a0247e4f0d972e47b93f7b2d7b
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 811da36f51d142309a2c5a7315421317
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# b24b67ad2da248bab990d1032f1117d0
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 854e58aaa5d7464cb0af4ddb19353253
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 797e75ee0a9b42d199dd04f31cb4ed99
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 8d868b129aa146fd8debb23d7aaafccd
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 63c00b76803643b09b18cd71af6e1440
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 8f2f2ada86fe421e909e97a44c492fd6
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 69862baf85824943ae3771cac333366e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 41b5811541a54f53a0bca822fcfa41f8
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 1506c5b661194947bb9016bb859d9287
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 3ae2a3fec785476fa4d37e2172cfc8b5
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# d7f6393c5af54dcdb7094de460f5a1ba
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 45d87663f9a240cd85732e8f9913956c
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c14246111497417892ffe820651242fe
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 781b8b42723b4280bf71272a8d857859
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# c2ebc3b6b6b1448da93a89f0284eafb8
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 9ab4752beee24ce380799ebf9bd6558d
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 5ec74a698b8e4229b58f81bb05239885
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# a8f668dd7ec345a8a263af2f2a9bb8e4
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 6e8b4d5842cc4ac99cafd1d2356d9cd1
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 766167e700a149cfacaadfb4e5825571
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 8f80ac0f310548bc8ca7a60a02f7cc4f
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 18e92f8e66b84ad9a0990442ef8dcfa0
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 897afd4c28654b29bde25e833688d369
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 051e8f8a1c484b21b82155810ea7a2d4
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 1bda9d95950d40b380f07f33ae31e684
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 77a10ed6961c43d3b57bbc0b9f639918
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 2f5a8dcf7f5f4d06b6facda569ca127e
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 846e30daffa540fea6640693cf21c7e2
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# aaa5205f558d414e8af26df97a10a04c
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 77bf968e6e8d4d63babf775beeec0406
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 4494eae4cd10400c9dd1d2b187d0610a
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# e685b6c662ac45ffa7561720e4a3048e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 1ab9c148a1104077b239374d492af050
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 30b406e463da40b693e5916524a9f6c1
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# af3bbcdb1c7e42918f40f96e56c63263
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 3eda1cd7695b4c5bb4a6d383f6628e3d
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# d1df51be1d4f417a9af104e577afa602
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 700d75ec25f34d30b1e6e61ab192ea4b
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 4ab849278235464795b4bfcc4b888e58
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 9c9129da3919498a8bf5bd5a2aad20a7
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 0f1505c5f54e4ec9bba6260739c3fd0a
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 3f2542a0d75f42408f00f837526be0cf
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# aac38c7d8def4ca899ea0a2b5d2a831d
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 432adf94a2294e68b271f85631b8b88f
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 19ac70c3f2d8481fa74cf3ff9981eff7
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 905d6d8ecd114c49ac718df64cc6afc9
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 59ce6fa60ab0416d9c0991724400430d
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 1366e1da3546480caaab80a953563f4e
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 6bb30422c4f941b9a0c1cc6b4e00a1cf
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# a8d62953751540e8baa057e5b1a0acae
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 035356565e1e4a37b0ee2fa9b3c1498c
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 824ae4047cff4e00bcaa502fdcf45bf9
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# ed1b25158b084bda914c2cda8e3e5be2
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# f45aaf90ce5a40ddb9933bc31a26173f
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 74ca3347e3224e55a38279d883a71d28
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# a98fcb4a157943749169ef9bf632f6f6
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 76720c8275fb4507a68f9d2996d9eaab
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 50f33d4c027c461281304ddea35e2448
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# eee39c4334474b1a8e81a9c44eec4fcb
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 8b67d78dfb57477b8480f6bccb1cad4a
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 2561840cf84847dba7b9f70b505e33e2
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-19 10:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 46254827e4bb4e42be5d1bc0db4cd96e
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 9b46621067204e0cb049400f8bfbca5f
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# e0720b0e90e74b1b8d84d6455a961a34
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 89aed0497bd743ccb9d1fcfa74702cf1
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# a93e1ecf18034028aa801932aca2fa98
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# e964afc861a347c7b839259510266ce4
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 0b08bff228284afbbd41c1fb1d5a7244
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 450a63ecd83e4f209879ff4fc90e4375
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# bcec27cb48d941979138d5f220df4895
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 986a7541f2e7460abf31a29d937bab6a
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# bcae559108774751bae3162e466e136e
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 5502847260a143429105f8c595bd3740
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 1885261893334494885693aab2629d3b
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 44d5fae9244c47bab0adae952f901513
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 08d284ec696f442c85c3c49c6d8e077d
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# b834c5b521b542f791c3eebb7a78a233
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 9310df539d25447898d1b4826ab47f4b
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# ba7166f7c297474ba16040b1c63c9a71
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# e7a7910a43514b6c86aa87c8f23896a4
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# ed9f92f845fa4fc9bde0c2daef67991b
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 95a7ce34e28a4bdeb7b63df7ecfeab41
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 34e6fa5b2eb74735b3a1dc6afcbdd2bf
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# c7cea1173aaa49c1ac4a698d97c67353
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 91875388efb74e8fb1910f7d167e9cba
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 0f22426f5b8447cfb13cfdfa201a8bc7
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# b797a58df45f46b4b8d19a00681c6b9a
# 2463f57b44674504869de7455bb37afd
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 34aa1bd4d3254c90ae23526043e2ce76
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 9fa40ddc5fe24a7da7e05c04cb102ab8
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 1932e5bde2194380844cd6089531eca8
# 7c7f7d8f64124779bba7250cd8ec42cc
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 94bc443d1f0547178672c55e43fa12a4
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 72f9f90581964f45a0ff17d95bf288d9
# 91ec0f536c1a4b67a32f224f1b91f01f
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 4d49ec06d01e4496bf9b14fa0c8d6921
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 4c0c70d7a3d6497e8f9786087f6fd40b
# 3d333ba4b7fb4d44b214d579273cdd2e
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 053d9196cf6a48f5bde22e7c0110fa19
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# b5197c00e8234661a7338e7c58955c18
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 91c6b892e663455f93a1b5226ab39319
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# c0bdaa8db4814235ac590dab3bc73a83
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 24837ff8202e4c2bb38b7639564d37fe
# f0cb134a5e07420ea9e754b15ba46439
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 595a29841fd24613be2cfc246cd55d1e
# cb1255deea7a4fbcbc61639762158a6a
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# ed1d193a65ea443996718984196c8409
# 408dcfd5588c46759a71803ba7f9daf2
# 11dac23943104ad39159869daa9d8265
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# f57238a22d9c411883fa48f4f1a8d840
# fe39776d34f9473397ab958063d0625e
# 99135ea2921f43abb1e46aa9654a029c
# 67ba5cd789fa4246856c7f5acf0ed924
# a875f7d2d71d488b89c3087da3dd2e10
# 1fd654b2c7e34051b55fd753271171a3
# bed6caf2a35b4755951e7db98f75189d
# df415c40b2f6460ab6debc9002437d9c
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 8f1c57794c07489cbb94932ae285e822
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 22455e026f1e46bc921583e94d239262
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 5663c916fe734c5fbcf326f468ef63c8
# f9d47b2af6574d899f2ac0306cc50ca6
# c065adfc90f04fcb9e4fc0643750bd31
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# cd238526e1a34298ae05847b4044884a
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 9272f60aa0244076ad2ac97cde33ac19
# ff72bacf3ed742b387c08faa3dbf9056
# 7dc442d0ac264b1ebd43a30d0b305e96
# c7b8b0708ac24d55a9a8c77b4022bb58
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# e8b968d75e5a4e3282aa932ee8e97191
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# ae26b3a09e6f45e686ca4e3fc580eb0a
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 9f8927fa0c884d218b693c64cee433f7
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 85ba81e0802b404f9cabca1520b739cc
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 8c0fcee9d243413e925059f77879fc7e
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 30477ee366b949d5a577726dfb076c2d
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# c55793f76ba94afdb94e498eebf82aef
# b4a893fc26c146699084ea23fa211a84
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# fab60cafb1054fe6b98561f1b58c0050
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 61fa1691d6a24b56b7a8e44c99b2652d
# 0113ab6bc41241c0a999bc3fe219e3e5
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 16e1240f17814095a1e7d797ffcd2a40
# d41b5f05b61e47fa842a199c35cbe570
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 49e9b1fb46fc482c85278012be03a5e5
# 7ecdac7f08d446fd8a83b4a372d4cf20
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 5b8a68652d154347af374359b8145278
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 5db238ba7ce14e918a8feea45e4dd72c
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 248efba539fc4db897400877b305b89c
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 41f463b5952040d9adcec98c0debcf44
# fdc675b6a78d4982b853ce7269374739
# 1645894be0a845cd90fb417a0e08debd
# 0012e3bcc71b4e168baeafb61c1f97df
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# f06fe6be789d41c685ce906c16b2ae89
# 89a67c1923d94549b5e8b525c6727786
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 0afc660497964cde9349de6345160081
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# d38e86fa65a44804ae45f5b2083f84bf
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# a67807b324514f058eee5defaeed47ef
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# da782f2a85d14119a1305390c8a254c9
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 2845981bb35e4382ad5260c5df892b2e
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# a12c2f57480649ff9238e0670b1d4b2b
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 1dec828ec08641978bb1f160c5899c38
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# f8752df9b8a7452cbbb968381f75462b
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# bf7519cf6db548dabe71df8014b5449e
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 436f98c5758c48808e8d55e7de774876
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# ff0d6e9b860e4b41acec351e2636345b
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 1d54d130bba6458db4a07c18e780e1ac
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# b9a1c90c1c804f5393fdac844c5dd8e1
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 8e40c13f232b4c528f66be3247ee9446
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# d4c63eeb272b4b818de0c3616a14bad6
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 9ad3c7fe25e44cc1a789bb5528a750cc
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# f3b12c9ef7324835908d3291ceaabbc8
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 5d6ef1bcba16432895a5884efec6a261
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# b6b5ee4a519647f0bc4afe1a020cb24e
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# b9c894911dd94f6a9840d5016c48ab1a
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 51b4bea5bdf8409bad94fdd446335962
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# e3123172a6364588b94c600f48e36956
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# fe1fa001dda24022bc6692a0a7c55bea
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 50547c2c1b564e9cb5e135dda4915bc2
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# f46e2b2bad5c430388772aaeb52302f0
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 94146bffde884aa89cc424b6f6088574
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# bf67d5128e144bc1b119ebd0dcedbd4e
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 5b08e04c19154b7181085e8dcd6b432b
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 8da94e8289f340c79113c900fd5bf518
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# ad302b09c8994a6d90e4adbbf0fb2605
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 60311f9f11d548949c26d8e4e5181b65
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 5841d80c13b64ec3bd80db9f4df3acb2
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 15eca563bff144259e4ed17c0ca10dc6
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# ec8116b1035548ef820c717045ae857d
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 364a89cfd1dc4f319bb7b6556c5e2bd8
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# c3cc12037a4940f3aa33ad90ce0581cd
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# a2697198d31649dcb01d045646e91e0d
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# f1f83bd5a56e4924a7c31657dc91d0af
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 663ad475e760446c8985b031aaddbad0
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 53db07b58e0e41e7ab7039e332f7377b
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# c29b9a23209843f19cc132f9afdfbe3e
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 92a9b7b9accd43d68a7ed6e37791e463
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# a3d4ad4cad5349f58488cacf37a25952
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 20266a6ad9374b358a896a5b68c7e5c9
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 09a9ba37dce5428680f6320d8c65cd9a
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# ecfa7364ee254866a503b851f81b2789
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 60df051aefe64f28bf2e88ace923c6a7
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# a78befe936aa4dca8f3a4bf346289ef2
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# f2589fda6eec4ff4964c2e48d7d1c49a
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 3c5bcb2128174949971d4b028f82651e
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 3080d4bfc88b4c7ab95cead49d5465aa
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# bae4aae482764b5a8b3457555fe28d8a
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 8a076b160fe84a9bb8239906a9dec01f
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 9125ab19419a4708aea5dac0891a1a44
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# ec22c3f2a7a945efb6a99a9207862f30
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# a6644d00aa1f49e494945637fe45464a
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 8b76b2f66df644a898819ab731e1d72a
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 9ef1cac253fc4fbe9c3e46f59b273883
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# d5c2730c5d824b12a6668996ff4002cb
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 111ed8c4909745dfa268d9f380aeb43a
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 021c2c5516dd4866832c649a16139c7d
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 1d41ad9608a34af9b49ef5433c218e95
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# d6ef8c4767bf459493f9b913a55648f1
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# cd9f4dc58ae645f39b2c1577f5617112
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 8409007a7e604d3388b599cb7e6b8921
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 7513c1e582584a74904d05c5ada3ffdb
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 077fbd1e55164bd6a89be0615419bcba
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 9432da62e0ba4f59b4757d62a0bb08db
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 296ad31f0098468a94b78228453c09e1
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# a45e31314ac04caebb18f34e08c99bd1
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 90fdf01b729a4a6f9cba03b584198868
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# c71fbcfd3aa34ad4b1193d9b3fbe9082
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 1bef722e7bd747b1aabe455ed1484c0e
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# bcc136ecef4f46a4ad5108c59ffa81a4
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 8d4f91a8760241f1a33c0f264ed30867
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 223782a9cc654c6a8022b13eb76d44cb
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 59a2fae796884025981dc0dec388903b
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 1b211c7e73a84f5fbfa305ef753eeedf
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# f2d5140f0bae4d1c80d13eff1b3e3b6e
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# c0fd9b81a65a49c1956a1023563a9832
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# da747869d3bd4e91a831ed818af4a1ab
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 574bb4172eea49c0842b5e1d0eaf9795
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 52c1ad9de8e4484b980ae38cc703f239
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 2fc0fcca6e9a47ac8cda9fe877c07905
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 47b24f7384f14579be6d0ef5298daf72
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 1c36e8c22ff54806a7e33001940b2514
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# c6bb3532054840a29aa9e0bbf366eb09
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 4791b945f81e4704a1955d0aa64454c0
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 19b7931cc14f4f0abb99637daad15879
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 65eab2cefe614be896611122bb76ce94
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 46cede0a77584e30a69653d9ea03bb57
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 842fe2238ac14092af31c7d05a1d1253
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# de128af3c996414981d41f5066bbc5a1
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 5c68414c069648ea865c77bd51581eab
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 6f8be458a317480185a2b6ee29ec229a
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 914dc9ec8e544bb59cd5af4bdb20331b
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 820a95f5ed10434093f43ff11ef20992
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 6e21494fb61148f791fb8e2a556b1b55
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 5fae33d17c3f46ceb4202e144a1df454
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# e247845a40dd4a32b4efc57858331825
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# de0cc54df22b4f549da8e2c5467c5187
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# ae968545ab9b42f5907d00b7481241ce
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 6e620dbc2f044ba7bbc24477d936d72a
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 090150ba91374d74893ad9f2e022d911
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 0b148fce0a8a43ecb3f46abc5be42d5e
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 7a13b9c359e043bca7ee2a11ba5b94c6
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 803ca96bfa8049ddb673b26332f4c682
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# e9a36fb7ce1440e9a19a01795d5224e0
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 1897590c204f4e189f015b332ab02504
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# b385c82966ae4dd09270b14df3d9214d
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# b910d5c734684a0f9ad1b17576214a01
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 61cbdd28faf94ebbb4a08f8ae0a2d760
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 2e56ce6d147b4d92acdd5bd99bd61e89
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# b2d181a08faf49aeb5b698bd92d6c56b
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


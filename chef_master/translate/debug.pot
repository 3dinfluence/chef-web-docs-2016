# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 13:49\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# ad1cb1326a03457f8c35fa2c0100045d
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 3e65e03a80db434a9f5cf96019027329
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# ec7fe26f49a64db3a7a876e2757bea5d
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# f2bcf5dff0db4293944c71be926e2957
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 1e68881d6e4e4b3192a3c98a0f23f96c
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# ce8e545fddaa4d08bc5d6b604d62dfd0
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 4fc1fc56f7ce44f7b4c6356e060afaf9
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 13961d289c7048de922a179375f2de5a
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# a1786b4d18f049f0b591bb143e2fe268
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# e16c8a279e7d4e8bbb32bb9f75c6904b
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 3e30ceeebdbf4d5898048fb2e700371a
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 01efe2eb278a4090a3c2b48a03912b3c
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 5b9a04d710c149c7be11afecb83ad9d6
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 246a38ec6bf94bb7ae19feeb06d08677
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# b8a1e5d28af24faea9fcc11627fea09b
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# d6830b92d74d438995c4822d60df0d87
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 3f2721da7d0e4a2a8852777172e09eaf
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 407b0ec6057646529f81f9f8b1a18c77
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# f51dd93f94f44c48ad3174c6bd6c9dfd
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# af7b32a9a5c1402782379d1fb5f468c8
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# cd99945243af4b67b5db79e01d7f929b
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 8d5bde3cb46d4dff9cd129682bd39df6
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# e6777653135a4e68b6393bfdfe974a3a
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 5aaaa331875e41c5abc9e3f9e154dcff
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# c67bf77bcbed4d2093b93cf58079b00c
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# d83cb6dc23754f4b81a0ebe635419495
# 7738a07c3d694a98ae6de6a89017fa21
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 5c6ee6232fe64716a39f2328579e40b2
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 4f9c4ea40382453f83c5a6f23105e1fd
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# ef7bfd852600437a81f5996229a6c94e
# a837ced521b54a8aad5a46ca3899dc83
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 8bec3bba79cf40218fd8ce7e54a7c541
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# ebb604e13af34f58842001a915239a19
# 32e8c08e45984217864ebddf254df379
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 4c2bc9a799214cea8897e47b61c90459
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# bf0de0953dfd4156b6b4b75dfd8dac0f
# 3b7f2a2678b64c7593d181f2b7d56821
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 781a961ba3e343efbe31f8ae143f1397
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 4169e20868ab4e8c8212c18b1662a6f2
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# e482b0ecb0e248c985f19f813c0dd7bd
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 8a456fbd338c41e59ca26c1adc8c980d
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# e224dc52827246beae1d7beb143f3b1d
# 98ae852afcd840c6be4469ee949c149b
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 706decaea1ca4213b5b6517e09daf13d
# 8e24a1d33d0f4fb2b1cdc69e9e39e5a4
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# ac34b8b720d348cdb2f8219e85cc72d7
# 3a57662cee8647c08fe2e30a48aedec1
# f62d42e894474fcb875f547f40de2a8e
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# f2f26faaf20c42d0bf076ce8130bac98
# d6f51fbc8cd44aaf9d15791e850f78f7
# 648745e32cb44076b6554d6248687ce9
# 4d2936a322c045048b21db091ff4c67e
# 9a884f4a2d3c47a89bd0d1935e78e9c1
# 7c987e57b7cb479ab7196fa57dc0f665
# 5092997dffbb4c1e94345e5e04cf0368
# 3d578758e8c24368975eef67296eb703
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# c924cf8cfea345f89c6d8f1e29c31230
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 1236baecf2a04c6aaaf5f0a86e968e0d
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# deb2536d39624ee196ec4071e1696356
# d35f0276476345e980168d1b1c7d423c
# bb7299bd564948acb299a033c99bc41d
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# a9d42880a8444de188877ef3c4338bf2
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# aa39aa6fc52e43ddbc8ae54b449ac9a7
# 92737d3f20d5447ead2fc1e790202228
# 67cb5f9bf3014ad086ceba3d2088e789
# bcf086b31a75404ebdf7fd5e74c7e685
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# f236d88b98d9453898d263c753d6d4a2
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# a0a17cb821ac4433bd3e6bc5945bf2e9
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# d6bf81568e4e4bec8d67c1a0503b2954
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 59e2a1c3a4cb4b299d0edcf6554d1bc1
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 0075ab686bf24ca0b362351f10d9fa32
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 35825790892c41e29fb34bd15c7bf468
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# d1cba2648af94596bb51fb9f40e4db96
# 71233eba63204ce5b0b2a7191736cd3b
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 9e3091978da947d980a34e419170d0b3
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 4d2fe85fec1c4e268c0ba712c1352d2a
# 67a5f7d893ec4b218b46877244cd846f
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 7a44df70d4cf4846a06ec4f9bdf7dc05
# 34099ad7cf9a4ce7b305c1e7dc0055cd
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 37cceffa07914ed18d32cd1c5d93d38a
# 61eeb67f37bb4a3895e4f5c292b4983c
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 2dbe8117d7e74390b74f8abd3916bd52
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# e959bb75eb464beeb1e7c047a14dc750
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 90a001738ae44c918b4e871a5ee79a91
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# c8cedb8d9c7040d09325363584c43ef2
# fc9e15d59869486db9e918110a904b06
# 029ff20be4ad4faa8b0c243792133f08
# 81753156c93d461e87e1e5e99be87f7a
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# f3c780045c474899a3c6a30d687cfc29
# cb9c22a520964273ae38dfbd447276d3
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 687edff8e2d04d4bb8868046b603e95b
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 3c985f5b067e41f79a17d86e385d1c2b
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 708db296a4c64ea488ea3de694ff6565
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 961e0780b98b4a58a937112d5280f1c9
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# f1f9caeeb9d24e03b2525989a0714727
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 0cddd78188a2460dbfb61c88fc80e63a
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# ba9559b4ec9c456891e154f2ff001e80
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 88bca300ab474d628a73188601d91f59
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 30b0ef49571444c6a5eddf09db139f5b
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 142dee09f55842a0af5353e60b302bcc
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# ea86352e1fba4b6bbe8a995094904ac7
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# c88313a71a0f441fa6ea8560a361b796
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 0dd0eb3776d94e278162280ca0962e98
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 83e5d23e91d94f4da5268702ef10f997
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 33516108a7bc43fb995dd6558db1c3b2
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 495cc291ea5146c79430aa50b299ec6c
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 20af90aac600455cb18b3d525d34272b
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# decbb8c9cdaf4ab288cde982053fe3b6
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 9aaef3048a6e4d39a5a5f74439b8a79f
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# e4ae43ca41e441e3b06d3d60e872b45f
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 7739b9a5ad1c467e85606dd6e61092cd
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 8d8b5e451e414d77bbdacdd684cfd093
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# bef72567612b440284dc2f6f89ce8fa7
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 4edd8763b28948ebb5ad26ba2a4e92fc
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# f5db2062a64b4904b7caf3e508e509e5
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 847d3c68f62d430d8b41da5bf0dee071
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 0f557879790e4c4f9f6f48cad72d5fc3
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 813f372d67324c4193ca287994ef18f2
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 9fcc39f2c2a34d3eb3ab0abc0c948b0f
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# b11b39d6f8e14ab3b69df866c3d804e6
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 1d1a8c23197c48ebb271d5f5b0a905b7
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# c36ee11b6fdd49de81177b26f6b91287
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 2cc965f2fc8d48e09c6cfea60220739b
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 6ff0a383ca5746a4b880e971ea4e3df8
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# d48b0c77a0d7476bbdb08c2961261800
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# d2c47489974e4b119ef222d6c5e7baaf
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# a5e89530b6fc4033a442f04d966e966b
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 279ccb762fa640a9831a5dbdd52e15d3
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 42a057ce64c44752b1fc3f8044023cb8
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 46290c1c91634b1caf62228592833103
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 409f2048414548939b075b82aecb638e
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 04acf7ee9839495cab8312fb5abca79c
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# dfa50d50ae0e41baabdd264035ef2820
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# adbf28e0cc644066b6f8f6352630c595
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 8cebf130857c4eaa8d446f2ff29fa83d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# dcfda9e1062d4f7b8cc3587d10ddea63
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 1a67a57312404b88a62ff9528e577854
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 890c6d55477d470db62cd24dc2e8b3a0
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 2f4fad08c9ab4c0593d5d56f8e11d936
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# bbd2d63eddf54867a1512422c335819b
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# ab3493095103461694cecfec68321c7e
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# dacd984d1feb463bab5682f25576d4f5
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 393903a97af64424bd59a0b5f014aa10
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 1d9ea397d62c49029f485887b58ff326
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 530ac0d7c76b40a3a105432e6fd6a438
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# d63ba4640196443593f9fb03c1e98d8b
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# b982ab8ffc1541b7b8382a91d80c4406
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 21d52911e13d459bb7c45c844175a3fe
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# cf2c78afdfbd4264887e78f34b147d8d
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 8c933247edbf4c01b9cc441a79cc3cb1
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# f1a0e3e77e434b13a06f7205da39accd
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# c06337d83f6a41078485ff57b872c76d
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# ed02dcc71237436ab9349610a9320f0f
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c046d9b97ef14463a4a48b03e311be37
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 76476532c6194693a85ee1d161aa9fd2
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 25d7188f35294e63809cafd8850a2041
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 07ca5bb4202e448c814b07c26295ff45
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# c05e46f3078f4091bb74a8f30b35f1af
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 235d4b20800b46b29e6d1d301a63c900
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 15141181d5e541c69e447986580d70f3
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# abc38ac4f2384cde94399fd7dfdb6ccb
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 939c3fa31f734bb2b61a80cb0caaab9b
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 0935a05d65da4755bf1c600d369700dd
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 9d4f3418651e4284910788804010e5b2
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 83bb28dbc702423184537cb8172d6059
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# e7270c9f981646ad8a14d6a738ca7f3f
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# cda25cf67504450cb002951be8a598c6
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# e682988c677141618567d9446ae0f789
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# cdb317d372f742139ae445ab889e24f9
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 32d01cd918bd4cb78b1180fee67006cd
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 698bf0dc9a414ae98fc27834b8dbc894
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 57b4657a81cb4ca788d79fa96129b04b
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# e0559dd52bfb453a8d45ca930231616d
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 49d1de08ecf94b2bab53eb39de5323db
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 01a20baae42244548f562a4a52b472b1
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 673a64bfcfbb4afe9e10738f420db191
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# adc2b455ddb3450c85f77fcd1df3825d
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# fc2949d20af14157938af118538c3f6e
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 8984c6f69d1c46cdb5f3b3d3afbc667a
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 00a5d14f2b3147be85fe38634d6fd92a
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 420b5d61a2bf4169b460938008ba92c5
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 9a24df556502463ebc00baf2700486b2
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 4ddb9ba2b84348fd9e623eef6908ee62
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 6750cabfdd1f4eb4ac739de7da531e0b
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# fb92203a5ab74b78b22c0f3af6f9aa7e
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 3877f03bf83f427d9ebd0d3409cf1562
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 99b878e197634371853d1d74d5aa3856
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 4794007dc435407b9522ad22e116e7b0
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 5ceecc91799943c4b85777e7228219a2
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 9551beb98da34d97b0d18824edce7991
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# b9261c5c0ed5433f94b789d0a645d03c
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 75f553b005e84241b9e0e40d82015c14
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 1118bdde187c4f3799391bf81c22a504
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# bb4d9c7e94064cb6b7f89cb6df5e3edf
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# e345c74b5d52459fbceaa38ea4f45e11
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 69ac2d2e5d8345bfbae08d9ff8ea295e
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 5390088c40024c9f8385aaad6de0d637
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# d9a3be4e86c445d980d16d04e4bac5f6
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# f0a1aa26c8944842b164e9cf1cc99a49
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# f68fb217b1774bf0b0b362b3ad515899
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# f284a8a348f244ffaaef86c6c9425507
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 14c421536d714cf6aca0b4d71ed40bd5
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# fbcb9d22a7204683abed22a9cd304221
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 8d049f7a51c34034b96cc4242b07aff4
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 14:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# 7f35cd5505ae4c31be1a0766e0491bd4
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 09f6442de4ce4807a7da81dc2d6ad422
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# 28c977291282476d9a8f5fe4c0b48b55
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 788a0417971e431fa2ac639dd70bb9e2
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# bd72c5a31fc24ce3b4b5333914538e6f
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 8cd96e199e0e4c34b505ce1bccfe8579
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# a9e64b9aaf324301a3f102aa49fca5ac
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# 8ee77ccb50d241558e5045872cad84f9
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 6f3940953e784a988a836e214dc7d991
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 6d88671ad8ae49d3b8fa3676bf3a8b00
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# b6840a73fafa40089262e15459d342f9
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# f0d2b5115ad14e44bb0303fc36287405
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 5f154bf697894913bc8441b425e92f82
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 0e9fb00cdf6244d1af9dc8e55ffbcc74
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 629e4cec1eea4c24b42ecba07dad9831
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# 0aff9da80b8d4b689910d313ba1d5120
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# 7ef35ea1ff96413784a3814bce7a25fb
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# 64caa408646440c0b92193b2c516e852
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 7dc7aa03fc0a461aadf4fc0e6cae3bb7
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# 914930c826c5487c83246a2966f38d8f
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# bae0efd2e87f4366be5f70926ec99ca5
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 16af7c12d55944689daa2c01fef23a2b
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# bbe4c010b2ce407f8841f7f2b60df5ef
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# 2dbe308215a3486f9621cd958b1d21c1
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 035cd7035ca143bcb4e29a94589a1e92
# cc2b128338724f63baf35e006d3fc85c
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# e39f644377454ad7a4e7d806454ecc3e
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 4eec5b6338344d05ad0fd634f8570c45
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 6cc9e0e61e074decba4643c525e12eee
# 2fecf45fee334cad90ff7bf17c1b17f5
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 5fd2a696a46a493d8f5b5b6fa3177301
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:192
# 9c69d0661adc4132afb247d8661b5e3a
# 612a85ec8d7b46b8b0d9fc854a0a0144
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 682cef19e0364305868f8539f24137b2
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# b941a71d2e49469bb93ba9627278a0a5
# c408d73f182b447391b14e7291cb749b
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 746f31ac7bf94b60910345b44a9f1c3f
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 226e981144f74a11b5700aecf57e6b2b
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 2ac87bdce3674557bef48d01390f6563
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# fb31c674c16c48ed929d3dcdfc5e85e4
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:196
# ca75a1848fc24bff96f5632c4355498d
# f3733c0485064c06a0ad44775138f386
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 45e03212cc194b708de6b232596816ae
# 60295db8d5ca4fd886a7da8988f352a7
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 7c7d9a3088ac4d0e912e84fde259dfd9
# a36cf9fd2ea9432ea097150eae8cf4bd
# 11d735840d4c4dc4b2da6010d0438892
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:177
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:228
# f5822a0f26724968af398a21c2a0eb83
# de62328b1236498a8254c9e3c0a575dd
# 9a1cbf91d286474484a94e62eb7dc571
# fff49c3ab38c40d995303505ebf3c9f2
# 3a243b7e610848e4bf6e5ea0715d3818
# bfa6793d7ea843c4bc5ee188aca1d0eb
# 7e93458e125746eea839082677758a2c
# cb4dfd4ecd90461d83ca371233f6ca97
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 27d99c7abb4848c28dc8abab0229f9e1
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 5315abd56e9b46fe916de6b5c7815353
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:115
#: ../source/debug.rst:200
# 1c7a3d217b70454bb9a5ff1ada215fc7
# 0dce6c32a718438c83f1a2213333d789
# e83c9504bc174ac7af265ad0b30eba5c
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 0fc3d0095e0542fbafde45a32d41643c
# d89c4fae375342b0b8246a788d20c2ff
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:227
# 73af1ed19811461780e49fa064f99dbf
# b849b923334c45b8890b18f0735bf061
# 8bf94054a41444c9bd4ee1a21245d7e7
# 9bde02b9c9c14415aa0489b7a7c46d91
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# a32fde4034e54ce19c9d2841b7e847d4
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# a18f745548bb4768b87fa48d48ca4682
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# f4d0f637eb9148a2b646013f01519883
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# e177233923314e8d9ce54742ede3bbe1
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 623fd3ad50d84b799ca0569d0cab402f
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 3a7dd8fc9a5149899dcb6c518fa1df47
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:204
# ea8a69d6c6304547b64deaa196ce87a4
# f94574c4d65546109b7fcf40e8cfcfdb
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 8dc1b331ce464d14bf702b27dadf5a1a
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 54a9ceecb4334930a7f97c92f126e586
# dc7fbf4bf09a4c7e9593af13d2242cb2
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# e68ce28721374ae2b1fe183149afddc2
# 047762b780f84716a1b047cbd5907d62
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# baaa1c1f36a24db3ae7e62fb3d018f92
# f8cb5c52dd0c4a0e85e3dd6821426dad
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 1cead9ac13b74e02b6d62e1bd9a70bf1
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 1f073697980545be9d96bf1b2d9c2368
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 7888dabf495744a5a881236d9e00e3a3
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:145
#: ../source/debug.rst:208
#: ../source/debug.rst:244
# 105a74c45e6b4d578b3641c2374919a2
# 625656c8360c429aaded7f3627ac2f27
# 6c7114dd15cc4429870881a65b99d65f
# 5483efd377e3451191c6217320d23bf5
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:209
# d313ff23bc184947943b0881f56cc19c
# 9ac97ff1d37545cb960c435b882448a1
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# eccb8b1bb71c4d75a4ef8c4ceeef30ca
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# c7d9b3b45a1b41518dc3973336d0ee33
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 17f802724eba4d57a59c8d7295946a0a
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# 6794ee1ff22249138a104ab83673540b
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 48644a58adfd4f8ca7e6694822a5e013
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# 492d317581934dcc97f042bc1d23a1ed
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 4f8d49ea609b4309ac6d7c92a3607a61
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 4295cdf441754bd7ab2cb679c21d191d
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 4ee31d02a3004d2c948399502e3f3767
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# 3674dc4cc7d7452d96a6e44c311c14da
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:109
# 9b0efec623c145eca017441bdbcd58f0
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 7523df3d5dc14593ace240fca800b0d1
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:112
# ee1b1c24b94b4e93b6ac8389d771da2f
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 128c5fe1986b46178b6a22d8f5e200cc
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# b4f60f9f80b3439aa4e5dcd15ebba13e
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 7716a7aa7b234203915adf3c30d32e60
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:119
# f24a1207361342828147dbe0553ae25e
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# b7fdad9409314efb906ad2f059685a27
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 246605525d9f4b4fa4e1504ff78b8083
msgid "The |lwrp chef handler| resource is used to allow cookbook authors to ship a product-specific handler. This resource configures and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:124
# 5669290591a84fd688452bb855bbb814
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 8812409fca7a46a7a9e3503fb59a9e10
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# f01d0c304f514543b5d7e3b16ac16175
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# c4ea57484ca549e296f94ef35c78dad3
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# cd34d372ba444a7697c4c35cf374fd19
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 8672cc95db7f4203a4dcf0b37db0f0b8
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:128
# 7e29d88b8bc74ff683c688f18bf340cc
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 5550755130124af19673b2a2ee0ca83f
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# d6485785e29c46789cea68643624b052
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 1ee0e69017c344799d56d7230a56e8e3
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 3d98f1bd7f204fab82f66f3b2b5a8261
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 4a7f69022add4143ab6ad57a1cd40a24
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 02d0009e842d4c8eb6259759b9855c9a
msgid "|arguments chef_handler| Default value: ``[]``. For example: ::"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:22
# d5f6bc7e96014c99bc237c0f569203d8
msgid "or: ::"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:26
# dd13f6c9b35149fa9005214cbef4afc0
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:27
# 1375bf0db3794a84872a4c9f91a6830c
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:133
# 5bed26c51a404ef2ba2ddc326635c9f6
msgid "Usage"
msgstr ""

#: ../source/debug.rst:134
# 187978c9ad8f4701b6316ecd7dfb6192
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:136
# 7669e55f1fa04133ad2daf6ac5ef5c62
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# e56467659f814cd9bcbd876d5355d25a
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:140
# 250aba72c744485f82a0cd01c622f830
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 10b1a4b0b74e440d98c27cdec3524905
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:148
# 3467f736b54343adb62e3fe1a7f73e0f
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../source/debug.rst:152
# 3c27c3871831469cb3732717da395a7e
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../source/debug.rst:156
# e0266ba69e15464f9cbdd2e3ace2e9cb
msgid "**Handle exceptions only**"
msgstr ""

#: ../source/debug.rst:160
# f790aa3caad842c7b539efa59c141cfc
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# ca3d0bd22e514f62ace7254321e960c0
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:165
# 6106238c53b3429196215d9965324444
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:168
# 2cbf37943e504e30b414aa981e471e9c
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:170
# cfe4b4a9a4a54cd5b5bdad93ca2561a9
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:176
# eb141b89b15f436885bf5d5eec798634
msgid "Mode"
msgstr ""

#: ../source/debug.rst:178
# 994e4de71ead446bb2f435318b158c61
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:179
# dfd552c3cafa4db1b7547c46d1dfb281
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:180
# 1aff0939064741399c070453a9f62b78
msgid "Solo"
msgstr ""

#: ../source/debug.rst:181
# d002f0f84e2a42eca6a9756283c20475
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:182
# 87c992d95efa43c8b9e0774310c4548a
msgid "Client"
msgstr ""

#: ../source/debug.rst:183
# 68c27b34cad948749a72af9db82b580c
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:186
# 307127e7d3ff443c98bc34125daadbe8
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 396cbee815a84379a30146d784942914
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# d0f244b44d664b71bc508dc4cf0b5298
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 69814cd37f3e4724b97a764e2d49d727
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 5d6209f876214b46bd664a0fd840963a
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 0ac457879d514c939141570531e263e4
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# e7c5ddd061674b5c9135873b621dabe4
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b8f4a99de3f24feab5cca1436f3da167
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# cc612fbaf18841ceb6e3ddd339cf2f5e
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# e60109cf136c402f9d1567ee80c1b15b
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# f84bfd25d75c47639896ad44218ad5a3
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:211
# 13a6dabaed5b46809b36e6d06d180fc9
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:215
# 05599f0a26a049b48b405fd3144c1682
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 99adbc1687e24ebe8a95c520655c5833
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:220
# 05dc56864e7b4334b5103ad6f78cc5cc
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:221
# 5b92401fbd784396a3603df56cc7083f
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:229
# dd94cc17f5ac4148bc7626a249c99119
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:230
# 2b7554fa2dd849c294f599f2aff23a66
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:234
# 8d1ff13b63df425c84d08b6c9b955813
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# d55b0e1a1275446eb62bee449e3b716c
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# f3bd71a4d36145b8afe718651680c914
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# f2daa893b6ca49ee9f807ab2ae1749b4
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# acdcfd633b364276831144a33c844408
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 90c801b8b22341aab5797b3c9db3e0a3
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# aaf6a550889240de99d6474ebf4f76d4
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 83d6e0217b4140d7a095cc86df5d349e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 575d21f49dbe4f6086520b31200b9ce9
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:240
# 96b4e29e10a44023a7c316e1d39e732a
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 187ccc94cb954f7ca5d1c94cc0144513
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# b7752c01a1a64a29afa80c0e30b8c86d
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 5bbfd4313fa941ec87c0971d3b14d7dc
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 42bbda1cd4d54923a9fd4010d9cfd9af
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 22781e5e9cb5468b99a7a84a30415307
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# b27a12ae6a09465cab5733d546c323c1
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 7019678bcf214d098ed6e4f8b4074d2f
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# 63424f1a01fa422bb0e47aad0927f89e
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# 71f9151b2fec4f21910b10ed0365d303
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 73201219b82f48698669e1d18933b930
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 2e92dbea74ec44218e5ba8543ada8221
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 15469a4ddf2e42ed901db3ed538d2fe8
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 3bb9ef6ba4b34c71bce062737363f14b
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 39b60ca76be940da9fe6cb7293284996
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 302f06edd03c44069f85f3971c5c719b
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# fa42154fec9049cf8324941da48d24d1
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# a39bb1704ea34e709105d93b2b2bb33d
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 8c64ac621af848978e0fd5168107b28d
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 6e5aabddc7ca4fc3bb54e4203ccf9898
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 41120b6ca8484271ab973fc3ff5a6e77
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 6bb88a3e30e14a2490affb7425ee883e
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 6b822a6666e94be3a7c44ce754c4db1d
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# d6d1cd87ce864994bce1d92050811de7
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# 9fe9c3cd56964e828f33acedcd3f6ae7
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# 5eec2e27f1744fa59d2d78163308d37c
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:245
# d6ef1e6f10a6494195665ce4235093c4
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:251
# 4dec9047b15c4b8989962f4f8ec533e8
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:253
# 6cfcdfeee65341e7876f8cb4e703cc45
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:259
# 977107cbb03b4c068278d254158dcbc0
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:261
# 8e6db34328b64c9b96160eadff7c679f
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:267
# 4940f6b6b80d4e6fa6dd0d5a644e676e
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


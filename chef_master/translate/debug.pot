# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-05 23:33\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 460365f345bd4011b120a85c4e383f43
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 37f29a92e88e4bc5834b8d7a1b1b8a94
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 5dd9b9614d61455e8964f47172c1c797
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 4663473f2fe848bfbce009ddec63e7e7
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 06bb9edf10e7415ea5eed28f1b63c55f
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 22740a75828a40b1990e7c2d952d6fcc
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# c2d988576cdb4e25abac710622ae5fc6
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 95d371b664594667ad7e14f80b14faf6
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 740a3bb9daa0470590189d2f5ce30b11
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# e040e2839dbe4a3d8c1dc9cea880b744
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 59b4747cc3b2476a9c90cafa0d242815
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# f4975448d9c84fcfa9b9dc05ff58b6f6
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# fd468100189d40edab7aa17a9fc42775
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# d187881f9f8748188cccb66446293683
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# ebf970c483dd4b1fb4aa241b937e47ac
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 2837f30861004e56ae3487058e6349fe
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 5afb79d9e8e442ef99573f0eaad7e51c
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 9db8b55ae8434514b7b5047008ad9a23
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 8d3172eca25e48619e01f2efe31ee9f0
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 0ac1752821f54e0d869f2d2d00eb65ad
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 884b3e85426b440696a511d684cc60c3
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# fcab03c3ce7b4285a910760fd1d423f6
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 05949150bb114f3cb39d2942279eea24
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 9db0dbe0c96e4907ad8014aa0f4cfdb8
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 8436a6a0c4574c52818eb561533cdde9
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 6a0cc391fae845b98a3fd2c0a52a0442
# 0ac3b164b90440d5b27ac1b473db79e9
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 74cf8501eef24da7a3056bcddd3c7d67
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 90ac10c9b16d4535a8bd4571d2ef9f3e
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 56e6c000c3474ceb9b93a7b988f9fe6f
# 1508c974d97144e5b6a80a80426474c5
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# c8c33238f1d64a4894df3a143d72e685
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# db8937e3c2584d6da1e3d3e76addd393
# d38c409256614f1dbbd195fbaa20d16e
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# c5cdb1e800ae423fb0b15272754f33c3
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 03729fdf03f947f7a336352c420d5c84
# eb7332cc84aa4e4787ae64bc7e3ecd0f
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 1118390643e64d63a2eff290c7a97c5b
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# ad2c893bfed84cf5a72d851c072f12db
msgid "``\"name\"`` is the name of the log entry"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 6d641b93d9be4f4c8abd6efdbdd34e64
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# c11188507f884b7ba45e6cd855825147
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 84fb732eb8a64665ad4b1bc1e148d440
# edfb5cd4343b43af862d54bf0b813083
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 3d6edce28d064041a9c69132dfc2451c
# 09e61822390d4f2ea376b2c0705f5a9a
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 368714ee2ab54781a3f5fb34ed906e59
# fa7aeda320ba45339e6bd773c4c0f0e0
# 0af6a36b15554daaa2acd18108dbd80f
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 171d04c492cb45f7bb3f67be205ed911
# bf35022d957948d381821555c6dddd42
# 1f75fded77f44aa2b243eda96207be46
# f6b954cfd3a14c3d8c28bf88d7e9f13f
# a45a6da2a6fa469f947f24e34aa4bb07
# b9bde3a39d1e4ed69856474551516ace
# 202179c2db0a4d98aa3c35c3722aff55
# 5ec6d905de19407b920e9623c13331e0
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# b64fc05a6dce481cb47be6779d6fb22f
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# f2a28fe0fe4d46fa8fb55e703e88761c
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 6ce69196a57940948a728adcc972b791
# b57ba859dcbc40858ebb9a6f77ae8c5a
# 75d3b5949135488caeada6645de15689
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 30ecc258999949789153d59ce17b7418
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 42c0d93357f54502bc33e9f4e42d8835
# 10d1a60d46ed4e8db85f1d175f1ed5fe
# e57de8cd091e4d8ea5f030b669435a26
# 267482d28a22443f978ffd1c9eef0250
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# cbed179e81ff4d5cb936e70d31ce3f0d
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 34bba0232e794977b655f0d0973ebe6a
msgid "|level resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# b5be0568e3b74add99c9499269349795
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# a5bb8ecdcaee4796a4508307165c7a36
msgid "|message resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 4b27005ee8b643bcbf941d7f9c733250
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 1e8e2231cb4c48299b666812e5196421
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 2ac189d3f9b0446cb99e5791822a2836
# b7b050807b174bc3b126038b09a26580
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 3db33c598af3421aa263ca1d2d602475
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# dfa7f2f34ef14458b7f9d307e3dbfba8
# 7b0fe4c5ccb741fca2708597516b737e
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# f3b270e5cb47440ba2365cfa8a6daee3
# fafc2eaebd9d4ded8ecb1117cc786856
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 717d30dfab0e4d06b628626e835246b7
# 52935b905ac34da6b4d858ab83e40110
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 4c9bcb760af048f5a277e1b3232b1da0
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 3822b497a5914ad1804c1d90cbc6be40
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# a1f3c9be6b3d4b9280a9abf57331bca1
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 4da7c521d01640c4be8ea50ddc951eb8
# dd23629cf02c4bbca4e6b1444a4d730e
# 5a0420e8507b41f69bb83fa7fdb504ac
# d5cc321a171840d09cb3baa3d38b0395
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 1dcfa4f6ec9b4c86865a7603f1edb912
# 7c228ad760a445efadfeae5edf6adb58
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 73e6ca1d2bf94283b97f8922001c7d2e
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 05ddb69df1cb41abb0eaee3863ed8010
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 1aea24e625924bfba0da2a4fef51e4ef
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# b15d0575ea5d44d1bec844dacce9553b
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# a7bae0afa57e4472ab92902d94cdc04f
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# d726acfdd6274ffc86e8ca6822b866c6
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 997019e0287743e7bf9a289768d66325
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 8191f071f9bd4c17883f3fd0949baf1a
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# caced50619644f68ac8a2efd0754c9fb
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 45bfb4e83f16486baab33d7d54552490
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# d7682bc1e18148c19a2e4da57d07c059
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 17ce715444f847eab039f044e052448d
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# bc8b48db80fa4b61b698682b0c4b7273
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 8e343d2cb5124020872333fa91cb4c50
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 55ef5f5ffac148f38169f09bcf51f10b
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 386556b9fdeb4358a2ef49121aba1e4e
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# df6c606d6f8446279175aa92b15d22cf
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# cf4189072af341c094f4b22c753c2c05
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# d46fa248cbe14a729be4e522f03f4996
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 23fddf27589241d19243d07b2ed088dd
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 22da55b3d11240968dc3fca5dd70ee85
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 17c3fd0b4975429fa867cdb6a19235d9
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 9007621ae46e470bb7a024aa276299e6
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# af7a67fcff4a49ce981a7b954446689c
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# ae4ad8e13fd942a2b02ebe4cffff6960
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 789646b6199e4831a677d829af5cb3a3
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# ccf5f08fca2442488cd51a2151ce82b6
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 347a71ef8aa6401285d9ca929912c50e
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 9ddef8bd6dd64880bd9172d21bf55a02
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# dae76b765c3e4c67a396801f67836be9
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 42e8e8639e2849aca3409ba8cfac7167
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# ecca3e76551441bdb644e1629e3efe37
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 196ac1cf3ad0462fb1b77592977386e3
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# ea7c489879ea4fcfade0db946dd5d832
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 2163b8ec27d243b5beb4f41d390508ce
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# a63ac1fbd2db4d32989b6a109ac4cf8e
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# b0f369942ce145199b581b1ac0eb294b
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 6649bf8bccd64b7b9f5c81a2a369e8f5
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 4972db06493643a19d7e78705b9f77c6
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 49343fec66cb466194cf4814ad1a9b16
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 38fa1e3f4e244e79ab17093942265614
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 077ced24ac2844298fa6c205096e6f06
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 983155a33d2f4e0fb7f6506cb85c9d53
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 3311311b63e94b15b49cb9ed3ca6bac2
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# ef201b47098549249db2f90cfddbca25
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 3caffd17ad694d0f9c6d12e19fb02395
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 2cee75c78db0456e9f63223acdd0e1e0
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 84ab82d18f004e738d75bdd867c63fa7
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 8b0bfcf1445342deb4e03bd0bf4b7970
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# cccc05af57fc4a659d701ca45debb01d
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# f299af979e5744cfae02978ce99c8dc5
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 203795abd4a54ec6a91ae7016682f5ef
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 19fa754c473f40fdbd4e7ae4a1938cf1
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# ae2e729349864afba021078dcdf3752e
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 71f07c4b05dd4eec8e3e990193ec5593
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# ca0dd86e82bf4088bba685049247ecfa
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# c0b19629fcc940e1bb2a93e105fe9e2a
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 3d3e4e5fc93b42a184468209e76eb76a
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# c08aa339e8824a1fa34bed5f2f728d8d
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# d8b771b1860d4d849cfdcfd9d2db7dc6
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# c6f8c64c76834d5abee3067797944e45
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 2522822bb8ca4ddaa6c5aa5d972abfc3
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 0b195f590469462e839732d036e5bc45
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# b5692578c2944a41a9506b73606f29d5
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# b07150d30e4843d9b2347ff9b560ed9b
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# fe87aacd373f4ef0bc3252fdd0eb2c1a
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 4910f9dee9424aadb1b09aa5794a9849
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 63a15207a308413d970bd2ba888323f2
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# f3570ad249d14cbea4c924c27acafc72
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# cc1a9167f3664c91bc3118d5054612d2
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 9e454fcef25e4359bac30a1447c7f04a
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 5eff546ee7c841d1897bdba79a49b300
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 08b4a1dba3ef471bb12a231f278af8ad
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# bbf9af218bf64bf3846889d6c71dea46
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 53be77f2fc6c45f888dcd9aed4bba5d5
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 0c3fbc212efd418395af98591aeca3a2
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# ff4f4a0a5b8e4b289ae735af33d1fe58
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# e26d7a4b0d0a4cacbb06828b8ea9eea3
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# c1ea340dc62a4b6585da1572b4001415
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 35fdff16e1d047f58f129a8831874ea5
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# bd5e146bcedc422c9c1d71c3939fe39c
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# f289a31c1e9041c2a7d26364df99f73f
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 775234c8a0bf459fa3fdd4423de2fcad
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 1ae2c78f412944709c0d3c621f78cf8c
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 534f5da2dcf54563928789672ec2414a
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 0f85e86745c542fd8f504f692b674da5
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 3abe192cec1442ab931dc12c7dba4ec3
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 93150e44016049e3a605d6150de078bd
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 690e799d7d584097ab6d0133c5bc6060
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# f7aae269fcd04e4ca97f9cb5687b7cb8
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 883acc5d2f4a41caa3f57c745ac5c8ee
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 9ab240e1c2a941d3ad1125e25d4173af
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# dd8b4f3aff21468d99241ccd7e4274e2
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 1a04906bba7a4872a8eb685d84e51212
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 132e453005d0403585f6f00c26d96377
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# eb329094b229430c9dcd4d3565eb0f5c
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# f23b842eca494d67bad1c9cf76fa95bc
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 34ae43c9ad914ffa852e289db02e4201
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 29862514ac904c23a68d0ee014050640
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 1c563364ab224e0c809c6b0559fd1848
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 525aea6d37c44cdebdaf320be08d5e6a
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 400c8e12a67b491d9afb92047943df6b
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# d6a232fbbdc74f1f85caba4313d12605
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 814a58e5d69f4f2f863fc45ec7824d74
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 96d3435d1510439c9fe661825a63ed6f
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# ba69ac3abcd04f97a0e14fa3ae8a4109
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 2774a6027e3f4153b27460d3b0ed9f4c
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# a7e159207fb541c1876863095cd3183c
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 1d355200e3634019ac81954fafb5cd90
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# d9f693468adb438ab0e3f5d2791e441d
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 14126c121e2e4ee9b27ed91936aba378
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# cf1f6a8f8d2d4994949f2f8b4a0877b8
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 5891ac57dc4545c8ae2c99e73bc73481
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 8a17f03b8c4f42a4bd41f7f9617f9e80
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


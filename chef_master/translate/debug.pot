# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-01 14:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# a7790672373f4b4a8a53ba61170febff
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 1a878fad75444a4b9a2bf0055c75b0d6
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# da9f2b14a482489fac1001425df74f69
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 99adb9b8cb0a4cb49584dc38b14dc7ba
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# f6451bc6f2934d00951766a691f4b6ca
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# f3691b37a8e94c0292dec8b1edb5c286
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# d249c557165d44dd8f317437bc31178f
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 110382688aad49839e2d7a1e8ea2e691
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 96600f540a194227b6df3a104058143c
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 29bdcd243b184ac09d6e0171573a5011
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 17d4cee004bf413dae4da01b68490e06
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 8a38627e84e946e995586d10ab62cf92
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 8c371779b42f45d89cde44f89daf4742
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 4a16281d89474432953857ce4dd1ccd9
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 0364a53844da41e997b7723ad6db1160
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# bef7cb2ad9a64de38320c4fb7258c9da
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 65cbdc0ebfab400f939f4df7324e9ae6
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 3bde7a10ebb243a6bb565a3c980c2432
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 8d689e2f315649b5b571ce9f3bf163a3
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# eaf34ba658214438aacc0102180ec304
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# ebf46c2145134718aabbf794fdcfafc0
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# a04b3572871f4140abb4c37b218b3adf
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 2f215361600a4cc2b61a2ad5e2740f5f
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 200648bd377547daa21fc9f41a927f7d
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 9b3259c485e243cb9d3bd6a0056e4a51
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 5fd260a11d9e4a86a971dbe331ca5d88
# 4f63c498e4aa48a88762704fae85f648
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# af00cb88c82f4b63859ec232fd98c1ad
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 7c4054ad771049228e059a7aa22c4f0b
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 825d9d6308934135bef5fb038d637f79
# 1874c75f3f0d458b99cbcc9f22bcc677
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 16a3b273f52c4a6d9d0722468d93fc56
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# cdb3a28f607e49bfacd2fd22aadcd293
# 9b84c6cbd181417c9d30f42837128151
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 1e7685d5c35f49e095237161aa3d4470
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# b0c06099fb764ce09036976f1027e009
# cc43022cef554116bf0e231ce5ec1ee9
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 325eaf8e74874a6bb3c83c3cb8658527
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 52413b7b544e4930a842efb4ea030863
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 3da1e5a0dccc4039a129994712081ab3
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 14e38bd5b0194a6aac576348a5a3c7a3
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# f9903d7f57e448c8bf623b7f0f0ae4aa
# b633a09628f14b57aac33bbfd37d535f
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 416dfd2068474b319e2dc865ec4df91a
# fe01674e9ade493fbe371312e6c78868
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c157ece848c546999c15304c0825075c
# b287ea06989a4c46bb64a5d8663d642f
# 31f3d3f573a54786974de8833f697132
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# a55174db1ef14b1b9c0b5939245066c0
# 9ff82c5163af490e8028ee9f544c6eb5
# e001102382254b6fb77b6855e95e34e3
# 221c75c7a11143838fc6d4f8189f0cc9
# 96e5f1a4334b4ce7be25d8480dbb9cdd
# e36e4471441148438fe2ce13afe4b912
# ccc1b1d87eff42c298b377bf063f23f8
# a60fc492ab2243e58515e9c592493ca7
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 3498db1e5ba24656a9600cc03f39ed9e
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 8d83c4039c3648c082872cd5021fcea3
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 097cf44f163f4f05adb46ea63e2174dc
# 2cf23d139cba418fae03eb1e05a017d9
# f010a07705734888a7851c11e5bf3baf
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# d5dee4f79dd1423b824bf7df723ab8e5
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 1d3451c1e00c4108923cca0def4a5312
# 6be15d4db7a64d73875de281af6598af
# e7d63ac8222c417fafb017c3175a0fd3
# 86034645d05941acb806ea2f682fb2d8
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# d49f979366cb410e957b38dc8abb65c8
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# d08405bed5ca4091b954232d6929eb6a
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# b9ccb8389c9a4176a63aa1d7a40baa58
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 60aa58e4ea554025b2d12ffc875d8eb6
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 5ae2fa0fb5df4d5e846767fa372b7a29
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# c98888226d8e4a919ee71a68cf8ea8cf
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# f0ba44c4cd2e40cfba3d86e26dd2d858
# 1051b0072b5c4a398132475dcb48c480
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# c15930bbcb9b42bf945f09ee48495405
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# c9ac87ad7aed4869a974001e98cc5e3a
# 40b8b33ebb5049af9836c8fb855caee1
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 2e68fab0dab4468d8bc5b035be429e32
# dbac02a07b854cd8a6c0661291ffda71
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# e43135fc36e34ff8a8e3b65c7774bffb
# dd1b3eedb29945f2902c2fd4f523bc49
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 83c428ac27064d8e9f8b015255b8b8dc
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 0e9625b1492449bf865e081410506d5c
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 83fda26fc8484b79942836c0bfb05664
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 4675ce94819d43488dc2775c2122c911
# 68c060b899184509970a3f37d866ca5a
# ad7e2ca1c0e04b6aa770eef1cf70b57f
# 7b110a4e8f7244979e68fe03ffd0eeb4
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 582be1b3a479471d9a59cc364aee4e6f
# f41a13bc97a3439f8afcbf168ebd1858
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# d2f87dca662f45aca6766294a1311761
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# ce87e7fcd010426586a248815394597a
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 0b49f44135cf4013b394a6ee3fd2c778
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 60cb7e5442c341d6a1176f1440828706
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 75a05c8a31d64c18ae2ff332b579ec4b
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# ec878371e96b4ccd8586752d4b02ef27
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# b44d7956abcf489b94c64403a2f1b097
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 21626bfc2c4a401ab619e02dd9ea0a15
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# f4dbb7b2f17b45e5863c1a5634740563
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 4a22daf0ddba46e981faecd8bf64e3dc
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# bfd9f5630e0d46e58fc6f86fdb2f1ec7
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# b0575881c63c4d86b047faa0585c8197
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 518d07175a644c74817e7a987668cbf8
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 29c88bdbeba941f8b4ce394b4de1937d
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 29184359bd454447ae97d3ee2089f255
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# b390f6cc7274414a9273c1f25b3f249c
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 9126e2b13d5e48b2bf884d8c6647b165
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# e2f1ef4161674e41b6e6b2350d30b44a
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 3972ab40cb46471bb4d91d5081421e43
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 9a1ac140f7f34568b9f62bf18bb33bcd
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# f2a7a9030a934674b0c34b288929f1af
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# a235421ad76d47689d8164200eeb9c55
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# d567f22e9f4c4b538126791b107ba98f
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 8e835209822a4648b8dc12cb7d5f312e
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# b17ad60a4a5d40b9a271a6272b19e355
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 31d36122d17a47419a0c230c36db9b24
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 70f74800a7ab4546a5f7e4584178f083
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 27e51d9b91d94e899e0fb6cfb9358884
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# e687ce3d2ab8498cabdc87e8de7c6c8b
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# b710cbe4a07748b1931c15b7dae4e935
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# f9237e46358640cbb2cfcf7fe4d94561
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 1bea31e7844e42af9eabbefea1240fb6
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 0c0eb3fc2903471b8c2c1175ebeba9da
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 3cf5cf63ff4e4b8d8dd0e725f0b1ff97
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 73f11d1cef174623a02201f16fa257c5
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 517c87de763f407393e39a73a6bc6feb
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 58f1a68be94643a08f5bc196584d19e6
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 5f24d9836a344a129d9906e886daaf0b
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 05b9ce9a768b47ec83f06cae34b20e77
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# fd9cee41ba4346bbacae9778a58426fb
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 854f41d893c94f7bb79e179e431671e9
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# bb0d02271a1e49079d9a0c75a509c69f
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# d702d972127246448ecf5d813653eaef
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 366de3c84184432dbc6777ccbb8fc677
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 038f3785980e476eb7293cc54609520e
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 2511668f13ce45da92cbff835ebca1b8
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# d1bdd4a4d9b4448284c5a6231c1fa624
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 1a12dac1ca7040be88cefa214c35856a
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 9197b31f742247abb6f7bc877f2fa765
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# f4dfd84580da4899b13089873518a74e
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 94e12915ca544fc48405f81fe66a4007
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 3f13dc6efbdb45b6a1289ab98e04c892
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# fd5bee9fbc7e43e1abfe23d50e42d659
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# cf65c1633f6f47a98d6927b46a9a7862
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 6bd98430ff704d8fa4b84804f19bdc9d
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# d576c26a268447d4a04d421df89c43e1
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 89c204688b1742239aa060264062753d
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 870382d7650741f2834451d46d146a05
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 18aa4b3ce48646768ff9b9f6d2a4dc20
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 090dabc1230a490aac3c5ec24183dc86
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 3a2472f74e3b4795beba2940b3c89b91
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 6f8bad5855af45bb81950de9397f93e3
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 8254acd6463849108b2f33c6ea5c572f
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# a9ae88d795294fc5bab94dc47018f4ca
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 1c84bf3ace684fa0b1230fac6eccb159
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c67a66fc4ef544f2bb6dd14f71b868bd
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# a49d50ff72424e79bfc3d40ce1c669d3
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# e9a5af6dbe35485c81cec87bdc2c4e52
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 4b3f5de058a8489da57d6877e2fc5cd2
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# ee5ec26bfa084eba8422fa6ae1072355
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# a7731dea4ce94eae933a82e998824594
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 82c02cbf42c847b2aeeaddaee5172676
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 4070a99ccd924bccbc5e4a61f36031ed
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# c9e083028da74fa1b54d1c728be38f7d
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 5b7c05014785430dafba2f92d9dcd6b3
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# b8e24c38d89349429c229da3eddd2073
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# f1e5f3c397c045e9b9481f82905b5d7e
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# d5f891912e684e00a37295e56c8de5ec
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# bb9f3c56966549219c5b0f83420c091f
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 3125e7ef8e9b42a998f9ba7628efa91f
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 8c2edea0f30e48e49b61cdfece483e82
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 51d7bb5afc3041bbb18a7af4ba9bd835
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# b80a03cef2574aea8a6e4874d3681c51
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 8c9d435623894c82bc9b613129ad3820
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 862d872d42e84b85a2a2eab189142c48
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 202a504fcefd4bae91956576de5d1217
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 6eb9d93386494d4d85e3e981b04f97f7
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 2f74830349d74afe8d409d2b279c8d86
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 57385f33845341c1833ce315e2e8df0d
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# ac699c539fc34dfea79ca4efcfc9b92e
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# a2de2b2cca3d492dbfc1cd1daf79024a
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 97d89919b1ef434db00c70cde2f31e4a
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 6e77f1bccec1467babda9c26b40f2f92
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# a3345b513f19477a81a1192edc7f23ed
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 589e78a7ea664cc4b88d469b80ec3f78
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 9f708ffe00d84537acb2009e1c7e20a3
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 0fc2eaaa2299464cab4688530f583706
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 2b506c1244ab4367aa8e6d7ffb9b6e5f
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 79074e566a00488991bb36e0c2b43bff
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 07faa0af4c324150983c030435db05a8
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# d141746ac1314d2c84db48a0422bdecf
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 4ac3faa7ab1b43fbb3253e2a0e9cdea1
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 1799780ed5414fe4aa9bcc073d4d40e3
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 52bba5a3ff0642bcadf549c65a4e444b
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 7b7c9515f5dd41849238c50119266f38
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# abae7e8b522c4999be4b69cc9abb02a9
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# e6bae146ffdd44fca1a62e933445aacf
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 5822a9980c644987995886773c2245a7
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 6c249858abca4cd0952558021531230b
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# e26a7d84017f415daa91505c6928d7b8
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 7f5adc0d39ee4ca3ae6c66478b0829ef
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 8c449341d867462ebe5ab60b522958f0
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# bb06084a348a46c983e3d0ae8713c389
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 678a4ef1eb434fb38b9c84b0da829bc2
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


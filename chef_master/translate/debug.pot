# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-09 17:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# aa90e1add4974b9f9feebbe2b176a15c
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# aca2d5c7be73426da00ed87e32d041a2
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 24d67001f7cb4ae1bb11c3323da644b8
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# c1c46462e13c4021be47ac4a333a0e02
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# e37a25dc101f46318b54c809ac886197
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# e4470547fac1443c93ba5895cd5e7228
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# b0e78928609341dca23a0196ca79cab8
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 001e0a27025340068fcda85c2068d51b
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 1a4d9a69a2a44d43afbed1019a65b30c
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 0e28b9ec8561446e9888fd2e391496aa
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# e72ec53bc6754321ab640b28d2237596
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 958228ba0b8f443f81e51543aa127ec2
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 601c66d4211b4c5bb9a47917cecfdfb1
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# cf159f1fbe3141e0a034527078f5ed44
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# b9d6acde2cc44fce98a03d63d130144b
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 41ac8b900ebf43acb828288a091ed55c
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# e81da8afffc94b8bb4d1ead556ab1af4
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 3915be691924411eb2e28210c11e57c9
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 2da937f4d9f44c86ba993baa3b360aed
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 0786091805ad4f17b8e330061f5d90ca
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# d2d30af7b90c4e438f3deff0c95fda97
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 3e5487decf1d41eabf53409a01e60ee6
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 5f9f040dd71f4eff80311440c96db545
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# ed0e5d4e3c52456fbd42992ab0076a44
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# b1eb1315ef704b59a55674fc13833579
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# d10d7bd88f9d46b9a235a87cc68b65eb
# a09227af806f4593950f7c60d239285d
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 0a81e49f62e044f09dee0861255875f9
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 20de5f501c3b4a43a675776355a407f0
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 6a962c36b58441289582914e7475666e
# f78003fbf86b4ad1b84ef3d146794300
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# af9e3c3636d24145ac6b68bee4914daf
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# d6bed83f060c4b6396a04354ab38a62e
# 5edb9fb26ef040759c1ab57c3b9267e9
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 3b85d69c961c4dd485ce520b23887f32
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 680669d934b047529aaee28ff6453b5f
# 86d404d4c730472e8fcded06af6cc893
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 57e7a11723114eb89f8a0e26c7ff4f4d
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 51a4c0abd0dc477ba568044277fe9795
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 399f30d46bac44588e67e02d9a43182e
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# b16426861906468bba4f2d090c6d562b
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 6c3ee0525800492d92b0022567c25e9e
# 2dad2f5d5b4247d0894e7eb055d809e6
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 7ec90b1201ce4dad91cde2d0aa593ba3
# 23cc9c5f5ed44b4c8a5ab761a30b522e
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# d8b38b1b92e04b8facdf5ca6af626d0e
# c7ff828a792f47bdbf0be5eac705c914
# d30149be33b64ded8af481ab6551bbf7
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 2b792314c6e54fc09aea81893c077d43
# 44205164eea849a78ecc4d04247fab65
# d9e0d14a9c1248b4af8e4dbd053a24e4
# f7d26abc275b48099b4b3717b1be18d1
# 0b264ca3838546f78b39934b41590a94
# 4ba04219353244e7ad9bd1ba150ccb63
# 25f79e20a8a0462fa23745e07da2dbe5
# e35d072ce14e449d9a440566d8029664
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 62f710174463407f94a9fa7d945a922e
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 4807b205952949b98b7745596f4ad4f5
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 5a6642b8e2964912bb4839c25fb5056e
# 2ae2b65cc4344832aae6a11362cb18ce
# 8a7e6bcbb060424e8c912e967a96a9a9
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 2dcdf4751bab4e478bce760edf4ba2cf
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 7e5059f6c83e4f8db9ea1ecf360fa6ec
# 18a3189b05e14a22925537834c46baf4
# 05cf1ef0ef9747a3baa4f437f2dbbcd7
# fa4ac12dbf824e5d8f1022a9ed903f22
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# c6b67b9f16234ca097e9260b55a33ce9
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 19d1d88da72b41b0a8acce682ab17caf
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 6cbb65e683c04d43942819e1fb892651
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 6cb7a64eef9a45bfbabc57939412be9a
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 6eeb72d12a6c472d9a9f736e28a29d30
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 20b6fd1d329c42fa8bccaa6fc0db815e
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 6e0cb95069434061b16f6ba2b069f84e
# a4e61f21cbe94648b21b7ff867505e43
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 9a7e52ba6aaa471683ef11983fafb15e
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# ff05a04d0c9b4e7886865f55dcae218a
# 2e62bd3016484f739cbd7b42fa9a9222
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# a2c85aadd3bf44238ec1d3ca14917b6e
# 8cc20ce25b0e4b0aafa0eb412a4d0e1f
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 87001886c5544c2ca2cd06343543c4d3
# a6550eb3d8a64c6b8eae36e0065ceb81
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 8368f0eba5944291b1ff7bae965d1b10
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 3babc6faf407485887f0768785827b13
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 1e140256d84d4fcd8cba9d5554b4d3de
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# a61e8c779a5b4bcd8a2872846e85f4bd
# bcc264f519074248a8445637c8e45410
# 1ccca99c9d304de59259ebdba35fb747
# c46cfded57c94f75bb02e005e120a0c2
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# c31e3f86e8544baabbcf35bc5f4b1dde
# 2fae097eee9b49acb259f7a3204cb831
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 22742e518724476d9818e07dea14525e
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 1c5ba0af53ad41179514eda30f259a6f
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 6ab7bda142244aa9bbff68065264e5d1
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# bcf7d5fc24c84ddf802a695ebb0098c5
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# b9ffb231ce01447492438662c3f4f223
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 1d793061017f45b4992b488c1ce5659b
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 68f624bf8d21480fa45f086473de1076
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# be5a79ff2a50475cb9e73670ddcc0d4b
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# d0ff72893e4c44a3991242e5f12a1d17
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 70484ece35b4460381f08405cf82ccb4
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 9427e61286f044eeb74a60e10e7313d4
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# aaae1ed6d9e84f2eb450f21d9c6c0e41
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 6b755f449c75472c8a41f1e841b012cb
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# deb09d2b5f4141848b982b762ae05c9c
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 21eb4d0e42894d44b421201bb6eceb0d
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 3032ab3848ee4679b0271e215be790a1
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 5f1500afa66d48dc90e9e1ee11f0b70a
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# cf7ea2872c9d477c8777c7e7f78073e9
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 0f56af05887f4a02bba970104e23ad13
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 6eae49339a4e42e88eb739dab5c1cdce
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 12c0276c5d6a4d369b15e9dd06283ce6
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 632494dd8a8f41afa29e66ebabbcf812
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 28ef44ed6c2a47a8b39896f6ca80a6ea
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 65f9d2b4e5224096a185ca39d0684a0c
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 7a7adb831380488ab27c2f250068a6ab
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 4d25b5d7d9cc41a6b1e43e331737b615
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 374d9abfda17429ab53f946e6f191da3
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# a83bd67f157142bfac6cc08c786ebad8
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 554fe2f88af444e6acf171af42422b91
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 2c1e2fe4e56946f79b36357f562b74f3
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 8e6447c94ab54b6eaa77367b4b67388e
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 7023c329c59f45b885d7cbd655e83af8
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 6b18ee17611f4b9292a16fee208c82ae
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 62953526f3054682b122b000ff4d08d2
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# a4e6bb3171ef4f5a89cae611b751ad5d
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# 4d9ecac808104719ac3c0169d3912d99
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 4898d621c0db4697813a532673e65b34
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 513dff1987034f428f7aaf8b5afd4f17
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 198b1b838a9b4417b41a66455784499e
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 1df943a4316748ccb5cece3c48de2260
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 2701a197c86d45e18827127fd373a752
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 58c8a10d3fdd48959a3f65675bc37882
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# f97a92dd0b3c4fc59fc300654fb3161c
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# b4750ea1886e449bb8a98eef52c9e010
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 044002e4bb3a47a2b561e2cb4453cda1
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# a3b13635b6f94dcaa63e852508fe6f40
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 9c631d170f494ea7a2cf702db2bda161
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# b150602c003a49ae965fbdabb9ca08d1
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 554fb133c61f484fbd1688f9fbed31c2
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 1aa1d697d971489f8ee5c95e74e9767e
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 07c2f91d01e24d45acee92a4bbca2109
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 6ef196cad95e4e6dabb01bfb7f975d55
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 043f8e993b044235a7143454cede41db
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 104feac127b44fa7b216c3c8d74faacf
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# c818556141c14a76990824c92c44e4ae
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 6c4bd7b87d8c4f3a95bde458edccb0b1
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# d78f23ae8321493eaafead78118fb9ab
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 9910bad4db354ed0baa96103bba11a20
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# bfcaa93b5b9244aab8b79c2d823662f8
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# c7cdb4d9cd734bf790319fff71fbd23e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 2ce13f9ea48a4cab816324123dc9f8e6
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# b887e5eea1a8403fb11150d5b79c62fa
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 2388d3b141b9427f865b5cb5c2969a33
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# b73d290f1ba847b3835a2a97d163c889
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 08a0b9e555054afb82a6ea729e0ddb4f
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c88e3387f22843c3b936eece4e22139c
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 4946a9b1ce2d4c04b22f82f0ea786607
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# a31c47049e9a4b06aa13f1af7b4fa185
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 203a9383855e4cb8be5396325f28a212
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 07593c6552c4410986ea36bcfc470b33
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# fcd2c93f0a3e4c28af03f236abedd9d0
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 44382cfb130740a48de67aef8861bd85
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 0d9b1d4b1a8640e68e838cd8121f22c5
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# cfcc3bb81ef94dc3af8faf5113274c3a
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 604ea17216ef46e9af654f9d612b724e
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 9dac07a25ec047cdb592906274ccacd3
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 2c203e920eaa483fbc845af3630ef5f2
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 589dad65b546457882b4e62a5c992ffa
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 255d2b16206b4a5f9ceb5fb21cfe589d
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# a55d7801805a45c89c29158e9106fc8b
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 16064f8ba7784cbfabf352436049efcc
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 5a0ff2d25f024e8da21b514c3591be2c
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 1f4e904e441c4736a73d6255342bc7d1
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 094ccb10e1614a49ba164dfb1e36c431
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 9c809d8a181d4d868dc721ff9ec90d6f
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# ae572d3e4dd24490b2530237bd24dceb
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 634ff53837b249ddb5ab843f25de31df
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# e907efe393464be890e50545a7d2de53
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# b7fb66a1e61e44bc98fd2f4fcc8ec6ab
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 9479137b999547ffbfc04f7e40f8f297
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# c36484e17fbc4825b7b416f546df3285
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 85bb5641b25c4f1baa0bf152c58c14da
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 0fd6b993ac8a40a8846bd9f75892bd17
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 5e194d816c074a2c8173363d07e05c45
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 2eeb30ec493940a4be2dc1fcca8454e0
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# baf46b436ed044648559d674e0b64af2
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 6369c5f0bccb44fd8597c5b8ea6d6da8
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# a2ad05b51619441b9788961c3020b230
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 2d08bb3eda314134b306cc7a68c363c9
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# cc2ac2d80b6149298927dcf905d0ce0a
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 0ef632e391d14238823cbad600868630
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 8847fbafb76845c880c8035e837ee665
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 091dda4434f94dd099b0e9231d8318b8
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 4bb7bfb47fbd466ba0a67e58464b5617
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 04c21cb195ae4c9f89e0280357f9b849
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# c24fb2a2d7504c1bbb05df52be7091a1
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 777f5be9ae2a4529abe3b73d9208409c
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 6d11f77944924af886e6835a05139b3f
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 60736293012c41f9973a849966e86c54
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# bf3d28ce2afa465dba9b6a2f554f7887
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 9e63fc44b03d4b42bbc3aba92cd968b4
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 5b24f45f0d70475b98444b7c75390114
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# fe348cf78d754f6990d913f767dc333d
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# b537d24a994b4113a524f63a82460775
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-09 15:33\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# b9801a3d86694636bf4ed28e1093042f
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 4c5275fbdb54446bba30fae50f88213b
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# 02bdc85d128741379527cdcd60a2027a
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 9771850dd7e142e389dca3fcf61f3e47
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# c3555c96d186438cbdac692f562a95a5
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 77671f815d694ed5b07bb39ce2ee2a5f
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# 5d9c5be314b74c5fa9f2b5db2dde826e
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# 8d8d78e4ac344d56adc0aebde708ce25
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 0f7688006a614696b37ac9e68c1bedf6
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 621fc802639c455cba08d4b51f09484c
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# fff7fef92cf24fa389bf4f69a14aaa53
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 3f139cd722704218b0840e091dc3720f
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 09375c6db7174391b8f1aed6b406c703
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 8da7ec0ab11043a38def3cbd09aa3018
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 2888eba9e6a241eeb1f8bca03e22b596
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# 055be6e20e9544f18308a1c9d90adf5e
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# 4d1a23c37548467f8bb24f9c0aac331d
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# 53f619995b014b7d899310a84929db0b
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# f4ee0d1219ad46c69a173c4c3edd0cb1
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# 72c752a9776b4fd4b15b599d9c394d46
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# 66c8eca0b9f84e568857dc49e82a3df2
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 0c38939df2864d38a34108d29dd027d1
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# fb6f55ab4b964f03ad3912030a7d0cc6
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# abbc41f79ac24f2b8ef9a473e06d6b94
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# ee9eabe8a96e4ca8b0626e4a472554fd
# 799731e9a04e4131bbb343f3a644dba0
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# 1c6719e309a14a25b6e6a44860516ea6
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 198461fb3a6c43e1ac91b5a11cae933c
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# a8a89fc10e6943a692e349555cdd1f27
# 7393b9839e1b445c9f577661f90d08ba
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 574736368e444694bf16611ed294a762
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:192
# c96a01fcef1c48ceb3a554edabce8004
# af1b674c98a1411c81cfd2aaffb0060f
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# aaa63327c5404ca1a126c2dd0d72bba8
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# a9a6ef8ccdcc4db8bf869162fe919a07
# 299d0c8e7e6941858801b065efa306bd
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 3be84b90e74349f3bf2c79b86479c746
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 8345891e8a23419a9cd7bb5dcf26577c
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 402cffe69a084c468a44bbe3ddbd517a
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 80922032f4e14446a4e1960b090f8771
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:196
# 91c21b073abb49e98eff88099f442fb3
# 3a2ecdae22a84432a36804a573af2b24
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 4ce7471950ea498fadc5d4a9457282ea
# b8db97614ff941fc80f0a7a98d933cfd
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c2b5f42498764cd6ac039525301b65b2
# 942db310671441e8a51e36b19b1c0d3f
# a632254d32f7410fbc3924e86695ad6a
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:177
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:228
# 7010d88730864c3391e16faff8cc0639
# 2bad3c1458464485b2f877930d9f488a
# e29e697216824e4b86284e8f9525748e
# 87ebd335897a4d3490d6eb977576d4b6
# cb6a2e10be4c4084be701ebb8e2550ee
# c55a11f0a94349a595bb54a08afd70c3
# 4b2dc7cd524f43d2b6e98e79eb0c2d7d
# b8cebf57062f49e4b9db5f10527678ed
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 7c1d16df3acc444a80cc8ed4837200ad
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# aa05e374ce174a20938938be884abd9a
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:115
#: ../source/debug.rst:200
# d7b14425201742f5a8efaeaca9e10ebb
# 951adbf64e7e46bb960976a6caa57c0f
# 6c90165856294d9592985b468363220c
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 09209a67efa04cc4b5a5a39c951432bf
# a16a8b044c25426990c2ef32d4255434
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:227
# c647505c42e345cbbe2c6c65f71232de
# dc899fe79f024158b62c18d39e03b251
# 5a452cde13a64f93a9eea7eac15ebd21
# c026c09a43a74d1a98939cfbef169877
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# dff357780ece43a8adf79cf9d4325b6e
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 57d477999dcb49af877c313ac4b9b09b
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 26b0a09fe5c340e793455bffcebc2785
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# a3c1d3402d7d44859fd3b5a7e5cc50bc
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 07c86f4181d04bd49d0eb79e098a5620
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# ae92e4c4f19246de964d1c4b3fe1ec14
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:204
# c06996d1a20a4938956ad6633b78e03f
# 8d6bc3c58e4e49878ec83dbcb9ef5396
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# adb85bb1ccc747f2b28717f28192c044
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 95476e96e79548439c9f5f9376a83b92
# fe5862f9650849eab82fb47f3f4a32b5
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# ce2e59fd97d04c96af3d3fa589a64a33
# 5f2a785b06134456b15540281e5d3458
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# c7f12732fb1c439abe99ca7949833a57
# 43c3226cd15543cf8f571751003c27b6
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# e3324cbdda024dd29e803b1832733cc3
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 8ef634c3e92f4af2aa7ebf64a7ef5527
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 92214c38672f47d288e8425d6ba6ea41
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:145
#: ../source/debug.rst:208
#: ../source/debug.rst:244
# 3f85ba3708634ba7afd251d80c6ec8a4
# 3c97f1d6be464a0c9f1aedc7aad681a7
# 5b8f0d66e7fa4287a4d146db64154207
# 91bc75b0eb9e4bf59159f4a826d4f4d4
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:209
# 36e8e1cc64934d6ca02612d4783f7d95
# 063f2e6fc318406880f0ff9869fe30c0
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# f2033aa1257c479cb78d38544bcf523b
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 7dfaeb1be26b41498cdedf48ffbacf36
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# cace37425ec64648b0c9fb9406e6c3ac
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# ac878d29152445f885c22f7e7800d8a6
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 21bd8c634fdb49beb6aa78c8e8f7ce21
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# 5c751792e80a4a0d97d764435b0d5d7f
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# f46c2b934f6f42f4a9c05fafd0dc360b
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# ec12ace5e8834100a30868f3c589105b
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 03d2842de6ce414da33ec71a44d69f47
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# 3c0810f239a74ca0ba96d30512361b7c
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:109
# 30a7a987c8c448eaacbbbb003b8d7357
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 466485d9710c43799bd64d6584028524
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:112
# 61ec31089b83403d8892d3119ac8d966
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 1bad5a7d4ef346e88786b11e39ac39d8
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# d8eef446219d4be9960bee0e9ced21f4
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 6b2c74dda9044936a7fef91bed30bac2
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:119
# 9bb46c97281549a79f2c92611aa8ef52
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# cb1a0a2329454dcb916699a69f5c38df
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 95fa30f9a73e43a9bfc3bbac8e4efea5
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:124
# c2a9bcd0069e440b95df98f7d2a7826e
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 0133261878434a8fac6e1ee6007bb980
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 32ebaaa85eaa4e06a5b17a4a13798cca
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 27dfe249f1564af987eff2785218d545
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 78adf0aa0a81471097226d39e06ea82f
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 381bb984d18742d387b199ef665a243c
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:128
# 0828bd3c6725454fb8002668b4f0b4df
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# b9261b7d52d447e78a91d5f94fedaa48
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# e8f7a199920d4369a408d6b276644acd
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 7b85f7c3fa4a400281ad817e970346e3
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 02131a45975c411fb164320d28629b8b
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# f26b79cde7d1467ebc99b52e28bdaa85
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# bdc3aa26d5ea4d56ac053d4e99a1e8cd
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# f672cb38dc2c4f3e8d40f47dfb73d454
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# f2398be7eaba452a8aa2cb661473faa4
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:133
# a24452fd658343e7be29da0c466d45b5
msgid "Usage"
msgstr ""

#: ../source/debug.rst:134
# d91ea77a463a4ee09b393ea93299482d
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:136
# e750422fec3a41a7a6025c07562ddc4e
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 05f3529717c04f15b0bdace07936a555
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:140
# ca83070519704ed99b5a5b64f1b235e8
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 49ed72b1075a48aa8015d91b7088f23b
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:148
# 397c75ec8edc4613b80ecf34ac9426df
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../source/debug.rst:152
# 438aebab045e41b681abd98b35c72db7
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../source/debug.rst:156
# 2a36f6c874e34c4f95cdf4cd5fbc6ab3
msgid "**Handle exceptions only**"
msgstr ""

#: ../source/debug.rst:160
# 699b3c06041c4278aaf6a3ca14e2bd75
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 39d6b943662842ab82229d33078c38eb
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:165
# 1d29a4550955497ab17bc38a30e0df2d
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:168
# 5da11fab83544c5d91730d238ab550e1
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:170
# 1b6d97136696450196ff8b6b548483f1
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:176
# d0e5a8b2a9cc4af39ed5b8e264bd1b3b
msgid "Mode"
msgstr ""

#: ../source/debug.rst:178
# 39e46e43df5c4239a3acdcce89d5b622
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:179
# d34becb0a9934bbaa1a5b3514af8d9a4
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:180
# e4312bc452724dd28a46d0c8ca224137
msgid "Solo"
msgstr ""

#: ../source/debug.rst:181
# bc701b59b56d4116bdb0904d7149a503
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:182
# 39a3dce3703a4d6b9e7df91ee69d4bc8
msgid "Client"
msgstr ""

#: ../source/debug.rst:183
# ac7710ee7f2f4ef58474a5b1d79ec68c
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:186
# 4e06404a7afa4dd2ba6f30364d5e1e19
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# fd74fb3381534f24bfdc8c7656b01050
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 43c2b971a77f4a10a7a0b27fd2bc1599
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 3a194a0792e541fa851209e8a566017f
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 25f7e284753b43539047abdb3454077d
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 918660e151184da691ef8704d0adda43
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 5a776cfc468d47edb8e540c31051a4ce
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b5117e6234aa41c1be4dc49391743cec
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# f2765d7b886242838639387cc7e3ada6
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# c255b6c7407b47b4a432d7c351a14dd9
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 24338320e69a475f806f0a88d651d0a0
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:211
# 7f20a3c67a2446019d2d0b1d50f9996e
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:215
# 67de0f7c85124a419cb7b8f319b7eafd
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# a379143c918f4fb198b1c109d378b124
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:220
# eecdc9edc06a4219878398bdd75c5f60
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:221
# 510373899a22460cb4f31682cfd7259e
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:229
# 0d6cd901f09b47b284d3239544be9257
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:230
# 17802525fc1c47b6b81c6db5cda1dbdf
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:234
# e79b788d2ad7467d95403f93dcf77596
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# c47c095559e24803b85b6cdd01b448c1
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# e95a5dec1c884c8eb28fb8a6d129a659
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 29bf201837984c56aaf854a71fb71412
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# cead4bdec6d54827bedb3909985be50b
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 4657636ae112400abe5f03e0e19ccfdd
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 02b6c99742f44cc3a04e97d2c68ef0e4
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 300dac261b0945529c4092265f78a0af
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 6949c13318fb41a5b4f203f91c41bf1e
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:240
# 661c99dd700b46ebb785f77d00c3f4cf
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# bbc2506832864693822712e42266ace1
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 80b1fe610f184e9bb05f18832ba71940
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# da84f60e02284d358b50a1c1ebec0cf3
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 92244abfb43b44f281165bfd8d48620c
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 0ba73137139d49869393366ae011c94d
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 9958c11e3c8b43b194d9b1155cf4ee57
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 976530f1d1cc4f68852c1c6951f118ca
msgid "|format chef_ctls| Other formatting options are available by using 3rd party formatters."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# bfa75e93d2ed415f936b1a8f63e522fe
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 4cc9c6abb3d34df0a427730014ed79c9
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 7a087eabd703436397a0f92469ed8b92
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 19d30f62cfff4f4f939eda39264a65d9
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# bb190848d54849a882ec24a9e21ea0f7
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# fa2941f84ac74aec917629b7a7d1c30b
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# d34dc09464bf4401812842289abc3717
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# b037d4536786417f8251cd3199332a47
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# d443ab29cc9e446f8f3f30ce2c4c1ca2
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 55a1f0c4864845c7bbe7e8267e758fa9
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 824976fd4fe54066bccdf44f41081b27
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 05b5dfa274744fdc9a62f5b266f59755
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# debf49c774374008adfb16be9ab15d1c
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# fcdd13ff8aa740a89a8fb813cf393275
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 910e89bb64fd43808c9d81280829c347
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:245
# c91fb2d04aa0489ba2367b708cc85708
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:251
# 246f025b565145fd8c7cb7a472776126
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:253
# f652ce480077437883890e4f8919eead
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:259
# e108a3f626ac461081149791b692c631
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:261
# 20e31c30b0fd424e80c9a6b6ed64ffe5
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:267
# 645e1e75974a479282fdf13d9162e6ae
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


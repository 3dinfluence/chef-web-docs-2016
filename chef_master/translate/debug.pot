# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-21 10:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# dd8d054bbddc4b698191ffff7d1f0fbf
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 51b0945df96e4e7784026a83b88153c9
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# ae6aa92537d848099fbd1918d1d0c085
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 642d12896a394e748b307c4ed2c69f8d
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# 9d916df91c344c79859c72815c27d459
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# f174ba5a485d4e1f9c0c1e154a73e275
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# b1734804bd64433ab45108f1f45ac8e5
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# 6dfaf0608dc944d9a1dfa1e2a908bddb
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 6da4c2d14ba145f692efd5017c6f5749
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# c79da5992d4245f89bd6aaf0198e04ba
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# e65a793f08454f1d990357a8b04eab47
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 39fc12908d8b4683bcfb9e63bfbddc4c
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# b6e60af0dfac475ca6a925fe402bd2d7
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 95d1fb033ac24c619c970d5c736ebe13
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 68fe9284d2df43208f140a2433a69ef1
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# afb71525b6894920a6e492569220ee51
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# ca9eb97f3a5a4a9fa0e3cf66c3b71572
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# 2c3440e090b24f058691757fdfc2b48b
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 4b79ad14fc1240b9879f1b78fd0a46c3
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# 37e4ac6a5a0149be8abe20daadcedcff
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# f37c89c20ffd4257ad0c6a91654e08ec
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 9e31c81c71ba46a68f34005639a08086
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# 96658136f33e450ebb748328d42e5a38
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# fcf4ffbbe67a48f496c585b05e0e2002
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 9c8a5b2c5fff4976a12a1225a7142053
# 8ceb63bdd0d34b99bccf172d7b807399
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# 1fa999bcb5e74da0924f6b0d9b4b9e54
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 51756cf43b3e4c48a6442cf7f7e797d5
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# c90e1e346f1c433a81bd6d364ae13f40
# aef2f409d91c4d5c8f52f48dacc97f5c
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# f1b0e517e3c044108645d09c18905116
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:192
# e7a593c8c32d4dd385c89c020673d4a4
# 61c803c4b2ed428194667d70d84ca43b
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 7a9c9ec5875a4efa897c5fed9b043b3a
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# cbfab014f15c4b24b0c30133b9698030
# 4f8cce8315c64f68afb90e86b550eace
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# ffa3822839e446e99d65ed164828b6b9
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 915d056ba82e48fdb05a829bacd3b62b
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# b89ceb6358524bb9ae371c385a471388
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 176731c81a1a4ad7838ea4b1223231ff
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:196
# bb76d6414486461bbb43769c5112d772
# 3e2d94a713044a69820c4de0f82df7ce
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 7b1b0f732bd04d80821e36891407e948
# 09069846f4a449ac91e0c3a8cb874ee7
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# edc4c03172ca45e1aec08be5483da6de
# b34515bab84841f2a772db75c9262a65
# 3fce9bb11f4a4db187ee6fefc2d1f87a
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:177
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:228
# b51d120ae09f4096983cccf89ee9c205
# 7f705ca378f4428d88d006f7f45c9b7d
# a38848bdcc894a7e917b27a6733812eb
# 9368082a2305486db169c5b66a2de564
# 11b733b94f8242cdafc66ae58f764554
# 17e4134f80ab4f3b886368b2338bb5c2
# 46600ae2c27f47a688e63971e79ddff9
# be7aedc62321428a95eee65d48109194
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 01886168c7d14e4880b6e6eeb8ccf45c
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# b3f5bfe3c4d846a68ea8d5c88d2e6fe2
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:115
#: ../source/debug.rst:200
# a7c18753e0124c3396405548026bbd58
# 72fb7d36c4094e869485d20e2cee6d71
# 4623ea0346364075ac47a2d5ab9e1da1
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 8b0a12f5f8de49e2b2ee7a5fc6074dcb
# 312633f9dc7e4955aff0f109c969f76d
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:227
# c76482aa0b86495da2d4e1ef63144c61
# 6aa8771cbc09480986c24021e815c913
# 7dedc902aabe410b93d8d7cebd00b6e0
# 608ec90d60cc4e1eb0751a7028368dce
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 0bdd63c4230641598ac2765a8e80dea0
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 874b8183c61446a98fd21c5ccf0fac64
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 65b327b1f84543dca623bc9c452fde9b
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 5850fb28f1b74f849440ddfd6ab13cb2
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 9dc68f63bd614a74be9d858c2dfb917c
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 7797492b1cef4dd58a6138ebd155b284
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:204
# c5ddef89db9542358526e14d5b641deb
# ee9a38e227734f90bba486f785fae46c
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 408623020d054d4b94f7c2c35d518e72
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 37083495cb7449fa95b4d49618b35138
# 06f93b4ed3764a76b5db9980a9b53ad9
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# c14af87b4dd547658994e50616b8ad1c
# dab8756225be4c37ae5d510efbc64209
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 5cf1f05e207644c5ad5cf5e782e44f7f
# 2e6f7ef185f44e8db272b4596e49861e
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# bf16e4b09d1e42988b3fc32f36b634c1
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 0624849bb0f343178856a4d8c93585af
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# dbaaaab5d78d43d4bbe57d98eb35d693
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:145
#: ../source/debug.rst:208
#: ../source/debug.rst:244
# 082c7c5a81964fdba8e5e788b0d7dda7
# e7f5e11c4d58441c868ac7ecb6015e84
# 0e3c736f65cc4d5a804a115d816c164d
# a3f8461c52a04899a732b2fec2bb3da1
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:209
# 061cba1490854744893c19e0076a130d
# f84a32005eb04419bd6f50563b17541b
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# ccbf9cb908154ce8b74f334dc122e61e
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 71fb714c6e33428d8bc2e551f92aa958
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 88c5dca322354fd1a13357f0bd70181d
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# ee71a35fefa0486685aa684b8ad001b4
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 808822fe29a54cf893879173b3cdff6c
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# 1dc66cd0fc804816b812db08fcd16ede
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 9c8cd61cc00e49a598d2c1f276af77ba
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# c5661223a31741f8a8d8df060bd972d2
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# cfe0bb84ad084ff7984bae2c8d8ad573
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# 1f8cd914a2334959886ce53432d12c41
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:109
# 25f51bbfd7bb4703a1f5a54538cec93c
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 512c4b4d1aa940c5925b68fdcc6e7dbd
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:112
# 71fb9cef89d94efba5cf9bf0cd3df7ee
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 3400faa99cda4b5185be9688ac1bebf3
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# dc73cc6990654927adb451e7e2dddcb8
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 94034b37f8aa4902a67641e3ea41d203
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:119
# e20c77809b054d6fbff4295d23afd94d
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 11171880e5f24795943bedc97a2e5ab5
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 46ccc00256fc45d6a64b31ed988cff38
msgid "The |lwrp chef handler| resource is used to allow cookbook authors to ship a product-specific handler. This resource configures and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:124
# 51eaaf5ed0f748c9ba1f3cffee969561
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# d4cb5447e9a94488ac7e07ee5f54ebc5
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# b853c64f9c184e0b8aa16c324d9571e8
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 06904d04e3434525af68cbde96c50fbb
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 18feffbbc5fd486aa6c63c19b20eec48
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 7e067d0b91ae4c079068038172bedbfa
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:128
# 432eb74886ac4ed7ac0ca958dfb642f9
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# eb994becf8d64861be212eff30d4c020
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# b5054a6ffe3948a79147624d5b5ad22c
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 111e0416a34b48ce81170adb5f9dc2b4
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 34f25037335c4e579fac0b99256f2cd4
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# e079086f3f7840c282dd0a443e9292fd
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 1d3826e69db64fd685ea088cd7c788ce
msgid "|arguments chef_handler| Default value: ``[]``. For example: ::"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:22
# bb058c0274fa46ce926cda8e3a6d81a2
msgid "or: ::"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:26
# c92b68838ecf465d89d57d88da97b0ad
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:27
# b0cd50bb84ce43d6b38c80cb68ce090f
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:133
# d133488255204ad2b1b232cd50e0b3ef
msgid "Usage"
msgstr ""

#: ../source/debug.rst:134
# cdebfb58859141248b46d384ee77a1c2
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:136
# fbf23da919384ec2a2e94940da1b03ce
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 37abb0a8fccf46b693ee6bf5d1a4a340
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:140
# 74f7879989f645b0b1a680d411a2db06
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 1a74fdea60ca4245b59c54dfe84f9b39
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:148
# f6bca5b088b144d7b0aada9f81d8afbd
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../source/debug.rst:152
# 8f8274771be14235b7f307b40eb893c6
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../source/debug.rst:156
# c8bd25bb845142f789e76ebb667cf47a
msgid "**Handle exceptions only**"
msgstr ""

#: ../source/debug.rst:160
# 32da016e03fa4d609a6ce778d56a95e9
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 15564acbe3ca4ef1a4f514cf785386e4
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:165
# e72c45813be646d69b2b58c9be48a5d4
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:168
# 5d14485059a042398a11e8d0e4a27856
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:170
# 00d42302aff14e08b2aeaa9ec2b0a5f7
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:176
# 7fdcd4176bff426fb71a25cb00304c6a
msgid "Mode"
msgstr ""

#: ../source/debug.rst:178
# a4c35101046f48a4a0a5d76fa972f1db
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:179
# 553dc29f1ee54723aacef868084174ca
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:180
# 0351d7195ee1483a956002c22adf6c13
msgid "Solo"
msgstr ""

#: ../source/debug.rst:181
# 58cf3417867b4b4680bc5676167fe7e0
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:182
# 465bd79db60e4a54b41011f7c9651b61
msgid "Client"
msgstr ""

#: ../source/debug.rst:183
# d937b1a4abbc454897f1dd777022479b
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:186
# 78bf0244ba134273875e37869965bce5
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# a3c8275af4784c848ec217f3aab03b74
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 9fa0580c49fe4805b2301a76b9d91efc
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 59cf81fb9e094c3584fa725d15155273
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 933bd47565b84c5f84dc449a854ba054
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 34ff1c03c593431789dc16367af6affc
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c9a759c28fe847349d63452f2fa2ea9a
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# c8aa5f39efcc4e1e93cc81fdc0cbdddd
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 6d4b0ed6d2b74cff83a5aafa32ae4a5d
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# a0bc966b23954920b10a106cfad40e4d
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 8f8235b9c5a8445e90607917d3bb4908
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:211
# 05a345c5a58c41ed9dd1eaccf2a3831c
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:215
# a6670b98b48e401181f698e11e8db6c8
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 988d49f39838415ab87a9af74a2aec53
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:220
# 9f530e5e9a104957aa43761c464e73c6
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:221
# d7524703cad84abeaabd9bea363f8a3a
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:229
# b5450f7840384d97b32d3af2dab4f5dd
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:230
# cbea8b851e5a47c38de57c8544724a3d
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:234
# 480ddf28e78f4129a5cfb75f24e9efdc
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 8a3508d34c27449ab010545a0be7ac3b
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# c1569a792bf74208a3e0b754c61b4a65
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 504a8294839e4a39adfa6e2ba9bc7bdf
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 80c75aa100a24edeabd294dbc93ccde2
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 699cd8b358734a8eb06bf77e8fcf6b2d
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 832b34c816ef401799c5abed1bf72313
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 0339bb37db60495988829395b094e239
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# fbecddba1aa448db9f00903544637327
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:240
# 1101937c514e495f9919fed4e5b956c8
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 0dbd8ba58cdc4fcdae18a8e9624327bd
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 446516cfad1a4484b0d6af6046b5ca71
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 8a0178b075044342abdcd916fd283f5d
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# e497e820cac642b4bc9965f75d07584c
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 992c84f285614cf5bbfa2bcca42a0f7f
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# b9381761dfb442c8b9b6f840ae8c56ef
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 52ea9f6bb9974315af50c99566dc3aa2
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# cd3998eb09674fa581448de842894df7
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# ba19a08fdd3749c99d56aee3895bd445
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 51c957c355e748cfb374511e9cec6cf3
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 6e5181b2cf044407b1c6e210098dc9e7
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 250d05597de64f8f9e8a1c45ac744a1e
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 841e5aa33b1d410791152011e573a55f
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 09a0e4324af94d91bb4dd0aa23d17772
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 262c95955d2e4378b795c79fa6934c67
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 0dd2947e18f14468ae5a01e71b13ac53
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 023223f7e21f4a8fb9ed62b91ee5e51e
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# f9a33d6c1ee743eb938bb87644262188
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 78b73f354bd64463b69a590d5b0a54b4
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# cb60389b2f654c54ad869ae0348e1ae9
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# e787a8dbc6994663828b155dfc31743a
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 4180ba791ac7412c9fb994c11e426757
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 6dc0e5379ea643699b6c559ff98fc1c8
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# c1f5291a10e44896b3ca270a5098440f
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# 9bf14f5af45a40389fee127434f361ee
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:245
# 5c02da4faf5842fc8c7c33a48beed18f
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:251
# 99ea4cc33fa846b18a84340d1804fd83
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:253
# 9fbcedda88c0475eaec98669ea05228a
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:259
# 20d900f142764d3e96afcfdbf64a71f1
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:261
# 6ca37880a06d446ea45ac98ee4b448dc
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:267
# 9657df38d99e4384872ff4bcccd0c943
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-14 11:24\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 34a3dea0e6da4429ab8cbcdeed59e8d2
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 5862a2dff7e34da9b026865289b715ba
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 5287144b15a84cefb06ccdd3e453c0ac
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 05643a9a003b41fe934a4338c778890f
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# fe58ef8466224fd4a5eed6399fee04fe
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 8789dd0787c24e5da90cfab66b0a030b
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 7f8ee3b023af4e5bb38d9467c153fd01
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# d0b8a86eb1324924ab3204cb43a5e5db
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# fbe5028246734a69a40a17c868e1d7e5
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 56ed423153264971a38e3812e515cadb
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# b3513d67117f45e68887883907235b66
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 99ca5b1b964f42bd88cd2f568fd831ed
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 18f9b559db3c465181c39feee2749a24
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 96e157ae5feb49d4a80b2b5294b62bff
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 6f6cce6bb2e44f58b25da51184777678
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 2e6caa2db93644bca7d5db17a09677f2
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# c75017b5619b4c8eab3e2045870fcd6d
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 0c1c6a1479134e54b1aa181b5df6d7d5
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# b515f359dadb45e6b517823601a7595d
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# d3e72e80deec470595eace39b3d7872c
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 6ec00ee6a6bf4cc2afc5df6056c8c7db
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# d02a99f2e4eb4e1c923ec370f0a0bd1b
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# aa1252c817f3448db6164d8ad6992b4e
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 4716896551ee4af191e524583eb11bd5
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 71334a36e85c4e148fc8fc0aa0631232
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 812650bef47b4a0484ff55fa2d1516bc
# 28ee8096c82f467c9848777d264cb69d
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# e47adc0cd7794e4192825a6ec2a5e722
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# fbe6b30749fd42d8bdf7f8091e122b80
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# d380de04469a41f09d442c6fd59a60f3
# e038f624ae2e440caf9521ef52efdca8
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 97d415f031ad4fefb6ea18ddb42f7b0f
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# dcd9dfb6765c42399bae0b07401a3921
# 00840ed1cea54d7a8dea8c6c81d5ec6d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# bd1e2cd33c5c4fff8674fc9b7218c504
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 9ed79cd784d1404b9f47b0744cd26678
# 7c02b30aed79401ab038a3e5988a1b5f
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 53516e99c2de4406b29103a96d903884
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# b14a002755874cdabac9ef48e76cb640
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 29b337d0d4864809af6ea1ef42cb82b6
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# c433cd538b394aec804572b92afc50f6
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 3ade8504b25e473ab4f1d6e2913276be
# a698a5bd44fa44eaadbdea480d78470d
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e683d72567ac4a3e8b54c8a458b2ca1a
# 2a789519a30140e3825f811528fa59b3
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c4975c153d364b90a80e08b0a2009e56
# 046994b0495045f19472f0924cfc7234
# 43368bd9bf294bdf94af2b77d0fc8baa
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 2ca383ab63b14095a8a0e39e0b2ef94e
# e8e17d0d3bac4acf9db1ca33fc484b50
# ce2ad00422da43caa0c40c8e2d41244d
# 1927a666dbba434cafda00bb4c15a6a3
# aac1c8fc3e544f14b61bc2b505f24b33
# f71ba74f6784475096ddc4edf84b14f9
# 1dd9185dce2d49dd8860811073aef8be
# 01a1e8297e654c0aa70f513a53415724
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# b539fba96d7649649bf4627d9511f52e
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# d194b04317794553820be8ffb89c0b8f
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 7b89e954ee9c43d8aee74df7f351b44c
# d786fa95f57a40469468b4e5c288f035
# 3682a3e112d148b1bd6f9e1d60c69eef
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 34f78b62732b46019dad6d9ebdca4078
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# ea39f853ff394dc787280bf116b7fc8c
# c6cc917856524f77b1380f9bd1351e8e
# 89cf417a4b6e498e9eab2cafbb61d8f1
# b4e2560e17824976bfc894d16c0ad701
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 7cb9c26224ee432b9051638a14441a97
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 114fd2b439f541618fc83687581db18a
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 2e62a02d05344213b64dde3b072a8791
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# b53f68981a0f428e9e1d967ac8ac4671
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 23e2bc92d2a742fd92fa47cfa0ba191e
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# ba6b0068373242ada1b89fae9a5150ee
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 58ccb2df7f2d45f1b42f55113a060da1
# 195264e270df49e2b062352718c18c42
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 35b861a599064e5d8e425c3d0a1eb434
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# ce8a555c84e44b26845978a3b08faec0
# c39dc88273894ebd965c60e7bd884890
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 673a377113ba48e7927679ac7f80d57c
# e8d3c0789eb04932928e72d6b53d0b52
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 02275eee87b54099b446726722aaafda
# 7cbe05bc6def4c64adbd4cc62387397a
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# ae30e0d8ddc44dd48860700c44fe2675
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# eed7a748215248d7a00513e1c4eb2bcb
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 0b7453a3bf7c4089a2bd3f8d40695d8c
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 0977514601f143bfb169f0bd81add667
# 9b7f2daf542b41baa655e4d6b6145d99
# 71b422ad0d314113a80b8bb212a49772
# 4375f5ce84fb47c7bdd36af838b59a6f
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 906671736c5c42878400b185df176a8b
# 8d1fc7bf62e14741b9bd34d0b864d517
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 4d4d2558f70d447b8c9a4108504277cf
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 359fd98eea0d4bbfa8decf33628d5a60
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 770350bfd9f44ea78f4dfa8e276f503e
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 46a7d67ad9ea452892edbece58d73635
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 2897b7946be74f2e99b56ad8a0651bf5
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# e2f27826e2934d9db644756b47ca1fa9
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 9bc8247ab577472195e76db0bf218752
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 900f9fbedee74e4bb848182b14e5e835
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# ea74f2fcf23b4e0c870825de9b1c8425
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# c0d30456ee19412f99974db4810d0d32
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 2bc96388758a4f39b20fa0505f02fe62
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# c985f74288944c69b7a410c2d6afcbe2
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 79dd701568cd444eb9a4eae33cf13682
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 7427ac80c1ca46bf85760fd13a7b7fb3
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 47b40ae2871f45fa966c3b8aa6b89f59
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 99c73466548e43f9a5514bf6273e8d57
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# db21717a02e74ce09a16e418f4a4a596
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# b9ee669f21204b20b02a98d9bdb57fe4
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 0873be17eb4f45e08e09172c58e8ba77
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 97ca1d03dbcc4a6dbe498288bb418feb
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# fa115bee169f4e22ab39b82ea000589f
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# a133e44fd3bb484e92be7da40dd86764
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 3b92963e2d844b51a0ce48b1a8e8e854
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# ae53b35450a945ec91e17d685d784327
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 6b8468ea3b324ffdac8ec0504702a949
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 52645787afce4cfcaa55fca4dc208eff
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 3e7fa5599d4640169ab9d8f52caa567a
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# bdf292c88fd343928fa34586b84f52d5
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 6d22f1af2342447ab443cbbd8ca1ffde
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# e84e7c1274ca45778896bae111006472
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 088136af23534e03b1ec67fbdf262c41
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 0cd01048da114a48b99fbf75139e38bc
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 750b0d6ee5da45a5b074dba7dbc5fe0a
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 32d69deb609845d5b76aaf2e503ca445
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# d3dea90518d14b36a52c0adbefca4ed1
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# 6db4a7cd76f04b90ac77a4c77002f28e
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 3922474719c844a4a8ef42d408ba1c95
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 35d1c3cf741d427f87f039e325fab64d
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# ee1a0b44759b402dba9bbcce3debc4a8
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 9889fe7fb3bf4b258db7a7659dc32759
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# f42a9cd021384ad89603b30e35a77143
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 27f35be7068540c9931e409873b0dd57
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# a0d0888ca7834c1aa2693220d8db506b
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 82eb43dfc7b14a0a81745bd3d6d37736
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# a648d793e7c14b228da28322a6e772ac
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 0afd3695955244cab80cc6b300d1dace
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# f6b3643bdd5b4dd286c2dac27b3ada95
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 627f2596cfd04115a664377f601fd197
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 6c70a405252f4d5b957a5cf91aa8188b
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 172afa7572c24506a51a2c110bfcf3c7
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 98eab94b7a6f4a0cb3b98457067f2962
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# d5132006f80944e7b848c5311327a595
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# b4b4884e0e7e48cf95c9db15c7608d1b
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 4036cb236a52458eaf860b90059dbf3d
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# c9a127970a0d4221bdfbaf6313618ffd
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 03b4d74541014c5bbf5d2e3494f14512
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 25229ddb08bd412ca85aad78838d0277
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 1e28b719b6854398a4c990e8d0ea6a8d
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# bbc6397cec364c66b1e1115a3eaa0223
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 8194463be29c437882de35c3652928fd
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# e867631bff0d4d70b6ec6bf5dcf61a72
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# ba7b69ad79c34afe80ed4b7cf123573a
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# de8fa0a890d840f097e008a72ca6dbec
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# baad160ce62649e88f9c18d7ca7bd5bb
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 08a5689a55514551a2ded6d930a1dd17
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 5e94bdbcbfd24266bac061fc891f43e4
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 0188723aedc248108298198927733c50
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# d07bb8197f3a41a0b5ccbf8583c6b808
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 54e05a488c5f40ebae5ace4aacbba3e2
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 11901db1a82649fea7e43d6fbef09a44
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# bb4111d59cb64d90afdb3edc86850d2d
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# e27cdfc55f4d4a7ab1391f13da838400
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 330f5c4cbcef416c99ca63a7411a2a3c
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 7eaec17177e84c62931ee41d0a4dbc3c
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 44f67da02ccd44bb9a44ddcd3e8a1585
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 302fa67d88a74e5b8d8129b52adb923a
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# a2cb83e616ca45868510ea3918b38d32
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 1da5a09b65854c47bc8532c0f0631b97
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 947877ac28734e26b7a9199d20dd1008
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# a488fd41523c4b3b81dbc9982aa46c12
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 11dcb3d072954478b8734aa41ecf8e63
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# c57e5599113a4451bdf20ee544727491
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 197700acaf9843cda4a4da2e7282dab9
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 3eeda138389d473a9a261c9712fca5fb
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 20abdd2cb7584b21a9a55619cecdcb2e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# ae8d3600cd6a42bebe4204fef41b3d20
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 96d4fc71ea284d37b455c0aea419b80f
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# f1924e95f3e847b1a3a89b5e5cd6e3b2
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# d5e4402273bb4eb0b480ff4361598d75
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 1913f567a6a94e1190da0e4a83f128c3
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 0604cff356b14c63ad8d3c7b52cd4ab7
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# d0823c52442d468fb48c616764de4dce
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 02cd33dca7144d4886c3824aa79776d2
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 78e6445152f541ceb1fd01336308fd6e
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# e726bacb0d184b5083adb413529740bf
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# ddd4424d311a4a0ba9f716df46e4ed82
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 7cdc6d2af7a8466ba72fcf12bab2d336
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# d679bff556e349f381c0412d4aac3ff6
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 9209e3a9620448698b3c94222c59bc95
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# ec4f7fd57e0c42419bec4ed2c80aff40
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 62e0eac4e02c4f168968f80e0db78116
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 781ef2c8a26449a1b0ba632bb5b36c52
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# b144954f243d43d2a3538edcb7567efb
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 4f076f8fad444e3d89dba180ab3c695d
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 64f9b2829f2e42dd8df0f165e413519a
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 41f1c0808c7a4689ba8fa8637c075a95
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 02af4589f50040bea694acb5c78b8d0e
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 3f8ddf1e7fd0423e87f5ba742ccc1697
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 43e99c00e4ed4411b501ee30dba0f5f3
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 81e453d7ac5d461f942def144e796ea6
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 64e40c0131644d8a80651abae8f33df0
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 8da003d9ed8b47e8a26869517de2652c
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 66aa4a51ab604cde9c4210689a246538
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 3662fbc37f16447291140fcfe14c0eeb
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


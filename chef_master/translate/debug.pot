# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-02 14:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# ee500d91692644e2bbf180efceb6ad0c
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 033eec55722f43b18b5e0b7a9cd31f00
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# d1ac705469cd4b7bb0fd0d2b3a2bc1cf
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 480e746196454db291ccc18eb1f3f6d4
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# b9045500b5164a9fb81e6c0534a3e897
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# c8f741eda02c4536a35522a16aab2d7b
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# 28c96c57b9324c89a833421e7c8a2656
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# 65a7de5ecea14daa8a2e816c4429f63a
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 3ed81539c8d94d4d8184c397ed51a068
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 8d1354fda0eb44c8bda9a08c094a1a69
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# 8f843a02c96e4400a7cf03ddd36633b3
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# a5e6c5a728a34dc7b51acaff0d01d6cc
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 5ee8214513d2469a9adeb3e736cd8089
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# b255ee40ebe44c96a4d73c1f942116df
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 60467c91c37d446781ce7d03cc3efd8d
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# b02fa0eac20045e5a2c8ce68838a5f87
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# 9c97bf3c8dfb41f39294716a79c84a89
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# 344bd5f6271a40c7805f54c8cdb958bb
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# b0f65a777d1549e3af6a5153a7bd9306
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# 0b2e41edd6cf48a8a0b105e99ab8737f
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# a0318acf3f9946edb549f174dd36cbd7
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 7fbb1e543d5745209131e0134d5de640
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# 45e2872457484c3c99de2da41459ce05
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# 8a0c725cc2d6427f97d93b87c7683c12
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# a00ac3b3ed4145fcb911872d359cde60
# aa731e0e41bb42b4b89f8c3e54188f77
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# 19a951c71383434e94d9eabf0895c8c5
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# c14aacfb8f524b3781f3b64c58a12861
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# b10de6ec33e14f8398e3b1a2d28b7199
# 376ce8fda4f345aa98069b8b420b961d
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 950ad19f77854591977da57e195fe5c7
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:192
# 4f3cc2bf83704150b45abd56c02426f1
# 31a0efac0dd345a1bfac267029be3046
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 35ecb57e29e44515a29509752ce3aa84
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# d99f0f97925d486ca3d70b7ebb5bff4b
# 3ad0d2ea766d4460b572cace982d74c8
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# dd0d9b967add451fbb93b44dc0927ece
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 4fd2f84eddc34177a3c753bef7c21286
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# beccfc0548ee4baea1605e5865a739a5
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 18f17529a27944cc8fd8aff4addac092
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:196
# 40daac92371e4b008bcadf34a8165ed3
# a400b0dff66b44c0a2adad8e6fb42ee3
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 92f4eae8572c4e04aab6fa92ec285e4c
# c8538b7a12124a87a3dfeee3f20f8713
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# f5bf735c650942029e77519e0af35e3a
# 295e334399e44fa7b3c1c53cf71808c7
# 72fc22f746464933beb3874909fce590
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:177
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:228
# dba79f85a4994cf887f45d742d504288
# 438dd37c0edb48e3bdaff7cb1345edc7
# b19a710d4068413b884044f350645e03
# cf669c4850684f4fb791195e1fd60904
# 9e403bf4eae44499ac99077a9885e9db
# 39146ec64b4a4cdd89943d48be617f9f
# 20dba5a710c14a849203d4bed92b143b
# 9718d951b6c84bdc8c179f9a700dc552
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 0401253e1829498dacd09ea03dcb7686
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 92954b0b94c04bcbaf2b3f9e0437d99f
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:115
#: ../source/debug.rst:200
# 8de03b17de3d4bc3a96885baa979b772
# dd340ae13b9c46eeaea4ec71e7cdcf71
# 6aeb74fe872649379cc1ff1975628e23
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 2970c0086a16434cad9a9d570ef0edcd
# 9777d99951664aac9c4e4e2a41217b31
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:227
# 6ba7b993175e4a92bfa9d8d41035d47b
# d23e0f731ca148df83e7e8463f374434
# c1396e0f3627431284e9c20970dd103d
# 83cbbcf853784eb8a5fd0ceb124e0fd3
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# b8a059bd5d57463792b4ef15cb64eb9d
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 43055de65f8646348785e9e797d6df56
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 7907cbaaf70148b3849867a1866ca0c8
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 517829137fdf4d30aab4765c0895b8fd
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# c1b06bc931b64fb899a03280c9563e36
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# c3bed7823e1d4d73b0943a1e45c28f92
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:204
# 4ec2fd62691b4405b698e0472717aaca
# 8107911c59d44828bdc239bd5cdc4a92
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 8c488f22e3354bdda8b5aea2dcfc6f40
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 0115ee4230b8406ebaf7d7a0b4fb1065
# d60a1c7ecb8541acba114355605813fd
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 1aaeea7a60a14b498e27923736148b4c
# 2448e3ffc620456e907a45911e66af5d
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 52ad995005304c02a4dd243fd230f987
# 09b574e4c68341c286d82426e1bbffcc
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 9ae36ef19c62431e87380689fe3c6df6
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# b847275e73a44f09bcfe9555028df6ab
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 396e133d35b141ada7c2dc0185b6ce68
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:145
#: ../source/debug.rst:208
#: ../source/debug.rst:244
# bb75328f5ccd42969189a091379b3d04
# 930657d109ef46a4a6231235e9f3230f
# 63cde55e19464d01ae21651cf9fab09c
# 85ee9ee9decc44fc8851eeb3e8c4140b
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:209
# 36e60343bd2a450fadfb79e6f4e4c873
# 442f40bda10c46dbbc55c492b9f0564f
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# a2f89804d605417791c925745fb04140
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 1da1b6d9ab3c4e6ea297ab850fbc42c4
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 445788c7c1664f219b43b9f2988c7330
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# f369ffaae341442abc75dfbba027d28c
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# f749f7d5cf6146c2ad21f0bbb75a95fc
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# f940babce5a94bdaaddb2d332cb4a977
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 4aaf48c75f144772856d0495f7f0c7a0
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 043a3f1cb3e24b7f80c94b9d25dadbd0
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# f8bf844115a649bd92c19001b4b04f7d
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# a790cf31686b4d0386f3a632f3b2f890
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:109
# 20ef0aad65d745ef997d984653ce1286
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# f885e2e43f9347848307cfb1a5e03d26
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:112
# c1d4d2ba79a94e50ba55394a08c72dc8
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 3a09d5588dcf4578bc8775fb94bba55f
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 046b4a92a6064dcaaac78b180b796604
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 43888b3cda8042268425f8028c7364f8
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:119
# f10a1523bbef40ce8047cd59b0d8a1c9
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 391c5f723322408c82af06bc79238195
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 429f841482734a9f8707646c58f06051
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:124
# c848a07fc161489da500693917da96da
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 586fe91f835646ecbc48ab156f8a6130
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 776430e3951148bca2e14bf4ec389f46
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# e666a530d525466584d2523f998590ec
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 58ee1d0254c94b569a82b88feabe25ad
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# b909ed6c64534b06ae9eb343c10c5880
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:128
# 90778675e7df4b9d81fad86f8d3332b3
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 21900afa68114d3fb85412ff51330135
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# a22512b8963a43078d5c26112987895b
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# a0d079bd0a1b438cbbc13d1e1f3ae6f2
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 4f96af29628a409494a855d8e2b4bd96
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# b0cbaf46a3ab47869af5bd690babaaed
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 0021983076ba4060b3d93c55c73f44cf
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# dafda24445c543f8900ed6a1bf8f8e39
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# bba15ed5e3ea47b1a385726a41af9270
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:133
# b3af505152044d95b684a3cf06d58bf5
msgid "Usage"
msgstr ""

#: ../source/debug.rst:134
# e55b191e83414ba2bf9e3624c7ce69c8
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:136
# 8487f1bf0bfb49839e51000ab035d06e
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# ea1601e8a6c7416e8a07f189cb33b41e
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:140
# e91acd0d3ba0425da34da4e4bff2f0d0
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# d81608f0d4fa4f8eaf41e36b299c9521
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:148
# efa0718acbc04df88548c5dc5634c21d
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# bbdb5c8b4d284d86b504fab31db8bcf0
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:152
# c01bd4f837f04145867a18d06521cf58
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 45ff54bc6c3245b3a522c0f1c5527e20
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:156
# dca89934f2e343b79f0f1a02ca991ef0
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 490827ec51cd4d098e271a2442452404
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:160
# 9fa1a68edda8421780f918f19ea88bfa
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 14cf5bdd2eab4081a0345a9b2d358583
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:165
# 16e83dc50cb3492d99e4c23247aa07d4
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:168
# 0ac5767d24c149e88a0108d6c91e693e
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:170
# c255306eed094b3984fabaf02e1e4e0c
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:176
# 1e56f7976af7423fabaedd02b3afc277
msgid "Mode"
msgstr ""

#: ../source/debug.rst:178
# bc253f6387bd44c39eec9eeca99121e1
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:179
# 751ac0f167844086b1438de0ec31fca7
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:180
# 0d82dcaf5ec8486f8c07465bddcffbdc
msgid "Solo"
msgstr ""

#: ../source/debug.rst:181
# 51fcf92d7e1441ba8c02e83a4aca4c21
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:182
# 4cabccb438d94ca6b9c33ee55d654f4f
msgid "Client"
msgstr ""

#: ../source/debug.rst:183
# 7fed1dfd148645e884e6268e8fca8fe6
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:186
# d4553fa9c72d4a31938132d34658fde8
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# b97657b0234744f7b91a40b3435aab2b
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# c7fa6840c47d4ae3909e272c8905e575
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# ad72ff7f8a5b4903bbc2c36742fe6c9d
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# f77e80835447494cb44f3bec8e01d5df
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 79f90ae64ade47d0a6c6c2fd7c0ab75a
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# a5762a05480749e482b52a17bc253937
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 8bf67452959948ed99f58e6f6d54f86c
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 3d6ba314cd044154abe071f9bca62ec4
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# b3f814a09a8f4560bbbf768a98c3b293
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# e255512085cb4900a5196bd4b07d0f7e
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:211
# 6c3d2ea95a914cd79b05b22f66136c89
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:215
# 6aec404f4fd446cb9896bdfa8a69170e
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# a7d08ca89b274114af9f4eb4ab8ee25c
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:220
# 5a5dbca1c8a14057a005a67d916ac7bb
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:221
# e334448ef4064dcd88f832c9f8f8f83d
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:229
# d3a86721ed9f4adc94b3f4b0c6d6c038
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:230
# 6504da937a3c476aa769d6e68211fb88
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:234
# b7405fa70b3a48c6a91e3cbabb6957e4
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 6b559a56c5cb42ac9e9b6e110452bca0
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 17523ed603eb4d3ba11b5ca88c955e5b
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 12f5b3c1b5214f968e8f46e5ef10717e
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 689637dfca484f9fbb3ca1cd86450ebd
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 5c51c793e4ee4a2fa3db251762963595
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# f1da4fab502b4e44bf94094510933dff
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# e31ceb2f35394aeea90b92edf1c1c702
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 6bcc877c8ac04296a583bc62d555c0c5
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:240
# 88a35b18a2404944916d8442da78b13d
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# cf7610c4048c40c2b25c05e6a010f88f
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# d37b55cbb6db45c48686ba24ad85052f
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 6ecb524f1c2c404ea993984940571986
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# e984055a1e124966b3004a1450d48f55
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 3ec3a94f46e84aa2b4382e9532a61e70
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 065147b20a4f448e97845c9678644bb1
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 1db2cc7f45984b279842423241101738
msgid "|format chef_ctls| Other formatting options are available by using 3rd party formatters."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 8512d51b4e0348b0a26cdee79df40ad0
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# d2e60dbcbe8e4a21b2a8a4c44e174452
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 153259a93b764d63b699bb34e2f8d5d6
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# ad3f4c5ebc264c0dabb789755030e0a3
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 45877e8c53604a76ac07887936e6a907
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 01dca50ce9ce4119873254ffaafa328b
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 8cf9e5391f32422b86caacb9e2bc86e3
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# b4309d452bbb4a168eefebf041b01242
msgid "|no_color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 8b50f3d006c54b1ba7d1106885bd3e91
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 1a8ef676d7324b2293ac25317f1418d1
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 2660e17ee1104eb384b0ad69d46c8e50
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# a98e3a8207f74d1491cb421c1b8a06bd
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# fffe07344add45c59bf0470a54465d2c
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 36eef8a96074437981285419b67f312c
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 58a9d1a45b6442f4b6072fc4418dc76c
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:245
# e58ce3e8af6b40aa96b68c27e67706d6
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:251
# 571cf9c2d76a4a54bfb1130e9476e593
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:253
# cde4fa6ed67744e4af9f96ddba5316f1
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:259
# 05dd91cdc16e4bb7a995e54128cef369
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:261
# 24d3421e80c44b048ed7cd408b48aa90
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:267
# de46c89884c54906bbf37841099e18ff
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


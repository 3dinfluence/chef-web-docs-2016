# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-11 15:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# fc2eb9662b32420eaafe766a2bb7919d
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 3587c512d6ff411bbe72f82293431b9f
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# 4ebf7be39ec740f6af02ba1717b2a967
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# ed203d3d84f9478ab3146a78d6f459b9
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# be44573a36784cb19afad164cb4e8408
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 6eb8ee721fb04da4887c34c988a34bec
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# b0d29308d4bf45e58d850a58c3673a52
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# bf48ab80b7c044bb86250d32ea866bb0
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# b98162dd5a4c4937aa3bef41fc95755f
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# f863fe8692a74e6296e266a65183b268
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# 279339959b814ba3b86b9b6cbf63fdba
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 4a2508a0593c436da16a63da2ad92eec
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 595619b3c83c43249f91f1913c501075
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 216f44e7fb7f4cff9ddcf2c0fa5f4683
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 0a334b508de946b79ebbd4b38565e822
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# 78879febf6454a7ebea213bfe2a61928
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# fe685a6270a942bc9139cc0d007aeb5d
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# c39e18c2a867498bbf9df747871cb6a4
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 9a88f269ce2141168dd8ad6af7e0ca15
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# 6fe1379788284f10bec42b7a150e92d9
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# 97740ca0c2514381890eba21782acde6
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 867e051e40584304b9ad6b0d8c0cc146
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# fc94e13d2e1a4275a234c54bee15068a
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# b703efb5319a4b9cbec34ebbb2a90fae
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# b88b0c5abf4940b993ff67d72cb2cace
# b3bec0a070964015ba6ea3389c57de3e
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# e6358aa9f57a40d2887600180c849d86
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 120c6e3446f149b7926438de75f0c75c
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 51b88b742c224925b253df975a16db4a
# dd7d5838c55640958f7849b982ca49c8
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# a92d4484af0e406fa978086aa4be67b8
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:132
# 5257a4b1be534fdaa27e39768b370913
# 650d4b12ddef40de99fbe5d96f797856
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# bee419fd9122494fb950d9acbfc3418c
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# c40b23ce4b744bc491aadd243594cc67
# 0177649c9c044da58764ef948f660c6c
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 4bb2616309a14b5bad6c89f52467d20c
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# c1439e455d8e4815bb49c96f39638b65
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# ad9f711f74f1469b92bf82e357bfb2e8
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# c3a9f54f88de49f2821c59965518c84d
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:136
# 403c42831f204cc8a9d33cbf21738c07
# 62a1361b2bf04c2cb79a51228d119a84
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# fc32050646924e43816671fb88e57504
# 458a748c93924f7382416337eb45d389
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 2a4c3a0f0ee64bfb86f840a2c4da0618
# df75a66db8574970b0eca67bfc1493f3
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:168
# 567cfd4f25e44c7baca66506c3b01dcf
# 5fae12d8fdf24b458f6c8104f9c64a0a
# f5123bb72d214596998e5866f62dce1b
# 58712efe3fdd4e55b44af0677a108a28
# 347338ac5269419d96e3a36db4a0a772
# b7f017e01c3b4cde9149003b284f8631
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 4e172c6e3a364601a2f1464704ebd5c3
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 7f4e44384fb64d3d978962b408978e93
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:140
# 52e7cfd0757c4e2eac2dbdd448f05e5b
# 405d9d297edb4350afcd24fea69beab9
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 59b40d84893b4f5d86b5784f5f140aa4
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../source/debug.rst:167
# 147a541985b249c0bf56a739c125f2b3
# b8c0b2b747ef40279ad8adbb5b8670cf
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 62e4ceaec2824114a5324dbc3f2f94a4
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# ab31b0e8c1044b489ec9372eea06f3ab
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 748b6d5190794dba9d416b2807389d9a
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# c540a31508a046e387851665662e206d
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 607f38da6c154adfa46ef0b5257e5ddf
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 0152309e80d747268126017027aec7cd
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:144
# c20d9fa98d8149fcad505466887b5ba3
# 5cc818ac34b145f0bb4b00d871523265
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 0bde372583ac4c45b42706f5e73e694b
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 0393367e8b234c09980c8d0dfd3bb212
# 0ab8c1e08a944233ae067e0155423b75
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 2f2fac16c3a9422a86e5b0deca71c664
# c0fa026e4a654b27b10719fee16aebf8
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 9e2ad243948c433c8533ce024024574b
# e630064a6832405abc8bcb4f46f9c82b
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 5209dc5cc0264e57b45225827900d8fb
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# aff64deb1ec4424ca4fb15bc38d2f57f
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 7244e88669b1441eb3446d013a6c0e23
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:148
#: ../source/debug.rst:184
# c6c5a0050bd44d36a68841c69300c525
# b42b38f80dec4a48abee73b23bcea303
# f84280c3243e404bbfc5924d2e109560
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:149
# 5c7ce8348fc8411ab50e8534330b04a6
# f68d5302211d497782a990a3d24d3d28
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# e50d7e71e54248e3be8cb3c9544e176c
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 58c1637b75d74e4abedcdb8936e16187
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# f3f351adada0462a9ae708f87be74070
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# d4124a9315eb437f8c4a3544cc420ea6
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 06252b720bc94de5a0f8c59ad51d210e
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# 5484ea8d944046f196580abc78365a44
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 6ac005b5e87149f5bd82af962bbfe474
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# bd545a7343d341b1bc287d8e9efe99d6
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 197d61c7044047d3ba6cf6b6a3099d80
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# aefd4f97764b4d0b997876bf92920a11
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:111
# 0cce57de47dc49769811b9aac129574f
msgid "chef_hander"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 6e597473420144debfb0f1c9f639089d
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 801dbfe5a5cf433db0706d1b219a42e8
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# e91e276542a84778ba54200eee69d78c
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 1d881ddebe0a407abc9023934406cff3
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 0d3bdc2e32d7427483e456ccec5768c9
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 3178a46feeaf48799e42081ed829a72b
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# a25c4053381641aeb049f31b25edd535
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 08effacb50f74437ba861aa242d61a85
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# c6d294aa1995427e9d8f13433ed7754d
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/debug.rst:116
# 96b2b44b611d4be2a117d1c4e0fb2d8d
msgid "Read more :doc:`about exception, report, and start handlers </handlers>`."
msgstr ""

#: ../source/debug.rst:120
# 178fd2a0650c4f8e9ad3868202681aa8
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 440c0b6adbdc467f95d0b69460b4b0ec
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 0d057423495041288ad346b811c20b51
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 2069680068b5490997ae5cccef92203c
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# a503d053c7f143e1b556f35125e52cf6
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 817f3df025d4498a82ae7be03533e641
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 88d2ba877dbd49e887b82c96b6f7d33e
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 3c26d04294a04c50b7dc702d347e40c8
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 36d793765c1246c0b777d162d159316d
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 2cec981a37794988883f54eb69256c24
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# bf41b14614f34c3198f4eaf68b756185
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:126
# 138ca4dc78c447a09246c3d3dc913f03
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 960525cd7f8f4d9387bef6c7766a663d
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 7e2bc0875f084e409adb3e621ec7b077
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 7ae5300c6375432688f775e19e55a486
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 9b21d46459244c0b8261a67befe42b73
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 3fc22415036f4decb99d60152c99ae8b
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 269461d3c599450ebfc0ff2379421fb8
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 6d60e4fd026e419aa6bab69f35f4aeea
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# b8c46658e80d4152beaba35b50493bc4
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# ba0f36942c224ff5a9f4db7e78106583
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 11a99b4051d74687a0c020a9f50d3944
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:151
# f4bb6f75f02f4b7987916bdbaad389d5
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:155
# b56ac4aeff47414eb423591d93ea1a05
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 7ce50f53f6634dde86fa9312fe99b2aa
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:160
# da676cfa9bbc4bf7868c94eb906be6fb
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:161
# a0683795f94a491e919a14c60914ae5e
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:169
# fcc96d4121b34301b6f7aa580c6d0c4e
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:170
# 38dc7e42e45e473c86445c5cf9e5b22f
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:174
# b7133109cca449e6bbcb45c8e0447c76
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# dae3ce19063e4f6ab5b16552bc2bbb8f
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# a611c777eb84453a8b85197ffbea98d7
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# cd12bebff905436789c0b40c7fa336ab
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 896cd182e15b43e89ff39b1f15a07130
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# e669e5aa710948539e5686ad231e079b
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# f8dcfae62eb04b35a50d4daf5be544b7
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 739a44ffbfe14a869a3b4b7d79ddd701
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 9afb69f1065a480990e6e2f44ea9fb8c
msgid "The |chef solo| executable is run as a command-line tool."
msgstr ""

#: ../source/debug.rst:180
# 2779cf6555dc4215923bb761ecc160ef
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# ffc8c5edf82d4572a809383cce6bd8dd
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 4430b4315f40479a84e8c6db34e5e6ed
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 00420566054c4605bcb58dc6ecf59caa
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# bc4e11df25b045599c68e7c21ebcf5a5
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 3030b3411a2843fdb03218a04b4bf239
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# a05cf6769b4b438a90c995fcf4d12360
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 07f3eb7f1e0e4c548f7d87b3c8a2dae8
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# 5005c053d1124f7cbe2b037a34ba6f72
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# d6d3b6e9f9b54cdda5b2907ba1c28712
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 0e6ad3f8adfa45ccbda21cd82a929f23
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 164dfcac162b480ab35e66b363370593
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 6e4f5a257dfb4dd2a6d1a7c43c8fd12b
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 5d2df484b3ed4ec8b4d58d91003b3e14
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 193ff426f47346aba040fd8ea4fa2374
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 473261ccdaac493090e3a565ab076746
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# c62427ad7c7640c597cf0fa79d44ccf2
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# dcb9bcf505bd4d43973a98d6227d200b
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 59e7eb35361f4d6cb22574f0d50c00b6
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 5402341170be49b5aa2edf92289785ec
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 7303e1402baf4fc6858407cbb646340d
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 0037a2744ccd4425965a74d0946b1f16
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# d08fed4fb4ef47398509df51c5be4583
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 7cf6d00b20344c49b1427baf5fa6a84e
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# b038e6578111430aa6588a0ea9aa0c2c
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# 751f349b3bd4487c9e17ccb2ab669ea8
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:185
# 91bbc71c315b4e23845bce43e47239af
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:191
# 4502d61eb00c483081f31fb441728181
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:193
# 2c1e9c7be0944187a2b8d77a3b3b4a11
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:199
# c9ccd99bd1bb40618ba2139b7578db9c
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:201
# 50534e00a1b74993bf01d067a1e9c80f
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:207
# 81dfb1bd06494a9db3378a51e22f4a02
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-31 13:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# 0781131d7e6f47a29da306ffc7c2614f
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 4f90e1f1f51e4413a9843c9c1e468c84
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# 0b1fe5f3cdbd4a4cb3ccc0f5b2fa11d5
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 74d17bc90976435aa29c23c35513c908
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# 65f702fb4d624dd28469879f668be8b2
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# fefd594041b04ea79de28f91c9c9e77a
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# 6d23e4ce637b41fba06a2110975a8f6d
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# 7246d2d834244872831dc11edbba7486
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# bad2bcbaf13d4da880d185be4a123412
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 86628ce4ca3240c8a68af0058fcc85ec
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# ee0e4b364d3e4ee9b6e67c69607efb25
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 1d668c776b06409cbdf55e668000a564
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# cc2da03c382d45219dd07355b862cff3
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 6d44e2742a544963b4fb4025f1546e8a
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# f38b007d95b044f29d3ae13e872da19e
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# b34493e133bb4effba2cf53c8281cfb0
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# bc17ec260556405584e3ed85cea1aa3a
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# dbbc8ee6febf40d9aa3c4bbe4f26a34e
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 59164855951f42d79db793bf5d7a0998
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# dbb367452a4748d08a6d8ad875da772d
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# 95f6df0b36a24744a7bed4113f55ab7b
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# e7aadd3ea40b4b798f30fb9aee2a95ec
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# a53ed1d60608481cb106173c296cea2d
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# 5bedda925a9c4482849c1e96f01b3bcb
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 2da66846d1a2419daa7d10ad19afadd8
# bafc910cce5e45b69681dbbc66228f63
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# 1f864a735bc8447fa8b8ab3c745b3feb
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# da2df56e096744fda8ea7cd18f0590e0
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 0dda1060a52646929e548262059876af
# 4453ac3a0f034045ad4b9a8d8af263f8
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 8b5a8257c6c9468f8c1daffd8dbbbd60
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:132
# 5c95235f6f1547e78029c349b371e63d
# ffcb3b8688014b0283e7e66171cb0790
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 35c1e32f9d4b421f880d36d958757a10
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 6c83756a5d024c02bc0cf7a66f833e48
# e1452e75a6ea4456aa00fa3f5a412960
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 2708aa48fa674f36ba857f0d957711e2
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 0e493f103af74513a52dc4efcee835ec
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# a23c02ae00fa4fbaa11bb5732e1eba31
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# b4d2b43480bc424da6683e44d9a199fb
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:136
# b565027e9e7847be8c6b6f5baa26380c
# 4a7a18182a6547c69494d4be2bef3229
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 95c0913f3760413780e2153f9ba802f8
# 4e2fd29de333489595ff51acfa73ff4d
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c682e6b22cc9462385d4b209df0505ee
# 7626cf0d32204d38907af3afa071c4dc
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:168
# fc1bb400099848c9884231011d707408
# 2d8b19a0a992409eb5cd0993b4e4587b
# 519f4d2f353143df996a0a9ce369b6e6
# 5be9e6d77eca4afca20f76ca8f496d57
# ffb540e402c64847ae81fe7c04357b7a
# 51a24eca80f14eb8b817d1884f2c69e8
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# a69bfaf611474fa1a004f66b3b39f238
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# c7be426463844f9d92849be6325f4b0b
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:140
# 348af1c9c00e455b8b1ef915c1a44474
# f4d06643edb945d09724eeab5f2c4b88
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 35230ab6c2a64930a2cfc03dde5cb1d8
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../source/debug.rst:167
# fbe0fc338eea4ea1918a930726fbeb9a
# 7182da2c62c0428994e65ebbc339461d
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 72c58d264c4f4f0fa4b10d9860f0774d
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 2db2f9a2e61f4c41944a2326818f99bd
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# ef2ddbfe17d44ad6b2189ffc63746fe1
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 6bdef292a6be43bd9fec5f8b1ed9dd73
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 125a2949da0c4824a71caa1a549dd684
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# bc70836649534f94a63b376e7cd29575
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:144
# ce570a907c104b6190bfd89acd009eb4
# f47f558dd13648fd9fdc6263b9ea5d90
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# afe446ba88c14b83a560a8d71f61a058
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 3c5cca1fca6f4c4da0463c6964017046
# d5dd14dfa6fd43cb85a299e541a481dd
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# d0949107394c4c5fb2ef73d9555faa36
# 6edc720b6e08418ba76ec2599bbc6512
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# bab4bec73ac947ffb5aa6e569f6d5c53
# 49dc68e21e104781b7a4973534d1ddb1
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 068a4f5552324ff6bdf050f79728135c
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# f0241d109bcc4fdb8652544a69d0a838
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 2c270176610943e0825360cc37c223a0
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:148
#: ../source/debug.rst:184
# 0c720ca968b34388988876ac30d1ef4d
# 23b87f784ba6489296739f3f4715e6a1
# afa7aa14b81f462babc921a2b7659e18
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:149
# a6d64456f0ab48528cb79350be49caff
# 2cfc98d58125438bbc7fabfa6012d3b7
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# 8ad820ef5848497892ea5cd5159c88f1
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# e0fb32d802cf4deb8e688cc3d4deae0d
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 6dca96e9f0574f408d3ecd1150f87159
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# 51d496b5a4d449afa5dda4c3bb1152f6
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 33933faca7dd4cb39de66b3f1956b97d
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# 40ffe6697da64cb4b1ff565a8a55a036
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 3acfd869e0344e97a1d14b5e68334dd5
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 1769559d74c64b9b9360a996b0ab49d2
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 271cefbc46ab42e088c9ffb64b439634
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# 09b773dfdded4b2aad3af8c9e0d59d11
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:111
# 4a8bb4f987a44d3b96f21bbd3fee9039
msgid "chef_hander"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 07ce710f98f3407abd043a6c58bd55d6
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 2e7d5fe9906d4e9296cb5fe9aee59878
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 9168970f4eec48bf89ccf44d2c40de18
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 0339ee36aa15405395638ea93accbe2f
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 4fa86610e9384b8a8fe5bd0a903e75bd
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 2f09cdc93dc043e092ace2da3e3f86de
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 212fd1c731104f3bbb02c5d1055581d1
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# a1841c5f2a904e8d989a6a2f62a62d13
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 5fc6bcda84b745aaaef00596ff704bf1
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/debug.rst:116
# eb71ecba17c8483d949c3b144dd5dc23
msgid "Read more :doc:`about exception, report, and start handlers </handlers>`."
msgstr ""

#: ../source/debug.rst:120
# 1ee0806644a7432ab729efb56a0740d2
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 4ef7fc8f8382468c9157567108e56b9d
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 5f827c48cd0c48398ba64e43c3fcfdfb
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 7119adce96054ac69cc9ebb164dd9e81
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# eefea2f2eea0484ba04d1534bce602ec
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 05a2bd0395cf43dfbb27058549a5eb15
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 006681c2278d49259cfc0f1b50dc2513
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 556684a614c842ed80bbb56cb97a4763
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# c60f62018cfd4eec9bd45ae5c0cd9723
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# ad2b91269e1648e29802c8fc868ab41a
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# b5360437842c4e898f4170ce598d517c
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:126
# 035284e3d1a44ca69201ababa6a40674
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# b2c48b606b79482daddc6562f750f861
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 910b653cb119473b95fc6c9b4bdb72b5
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 0503798008d64c20bc5e87018877ff9e
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# ce5446663b754c30bb4b7e25d46194a4
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# bcdf6cd646ad4376b4e4b9d2c5d5aae1
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# e7b69656122c484db4e3de785b270610
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# aeb87262f1ed4e379eecb5e45f59918a
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 0ce44081854b4127b9bd4a12a70d7086
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# f5a8cdd6d4f04d81bec4015cc59d2784
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 5152f52ab30d4868871dbb3751dbadb8
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:151
# c21b7ff3902c4275b8adf1e9af4e289c
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:155
# fc78311eafb841b4b1875ae2a98fc480
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 54d9badcc06a42ef97c24df46197be19
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:160
# e0831fc80e97412ab4926ff11ed6ab29
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:161
# fbbe5de2271a4074b20a5ec9f31c8bb0
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:169
# 0c1c8023adb4423f8ba447771eb20438
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:170
# d9a07ebecac54647b93845caca151857
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:174
# 38c091e8ab86407c9b534ea5d09cdaee
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 68bd5fd8b0fd4c7ab426ec924751391f
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# e24af7c54fd5420b8889cb5b0bfc3717
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 706383768ca440cfa1ceb3e5c76a33af
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 120aee5e9199442e97fea289695ee72e
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# dc5fab2f66e44aafa975726205366865
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# e1fc86d638ad44ad85d041ab55620641
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# d378a1fd24924398a225a2a0ecd02778
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# e879a2a0d0054124a993c006cf737ca4
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:180
# 02ea6cc2d6044f3797213634792a21ff
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 011e9bd6a68e40328afe54acf1434225
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# e7e7ceef03644a9492520f4fae0be331
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 82429bf3c1bb45f7a4c87620d78c3d88
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 5bbc24a8677c41b4a7a2345e51c0a212
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 35fbedc9a7f44dc79645327746358e8c
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 172fc7670859426c967f5e7c403f81e1
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 071f2da742ca495392e96641a29a6ca8
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# bfdb49ed52204817a950cf3787af17eb
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# d1f6a33bc43a4f519c93defd93ffa2fb
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 163920968dfe4eebba68e2dd2c8ea620
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 9029cdc5fa8c47ddb633c6471a35aaab
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 6d073b67c3ad461bba8dfc437ace0878
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 4a2bba3d7056400fabbe8b7210fee2b3
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# fdfe4a892ca44f1caa1250d93c9c7956
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 1f5ac1ffbbc9420da83183bb2f29005b
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# fc712869067740aba68520b5bb4752d4
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 3f09045ef1a447cbbf43dd8c4d4d0bfd
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# bb9c4a536422490bacb0b733de60c0c9
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# dec45ecf7fae4df5b83a7744bffed2d8
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 9983986bd2cd4b3383d710bd4faa92de
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 78c2d3c3bab34907946095d53d2b5eb2
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 7658c6eadb06406385661f110109cfab
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 240ad4df7591427682a82aab2c914c4c
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# 73223a0576f04eeb9187ce7561d1a6eb
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# f13b82fe3357452e805a63b747b80986
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:185
# 0b2a55787448464d8f5e84a02fdaee1b
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:191
# 408274539d1149b9bbe7599d6ec073ce
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:193
# 68ef40b6413e4b5094934fe66d427f91
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:199
# 3c3e7df7b6734085b63d0bbfb1db1d3a
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:201
# 51ce81906fa84578bf264156bd5ffe8b
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:207
# eee816bfa6484eee91dc59ef1a18bc2c
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


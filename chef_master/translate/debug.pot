# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-06 22:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# 1880227652e9447498bbe74664327afe
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 7f13e6bf400049758332f3c77f03516b
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# cb62b1db18fb472abd2c29a56f1c8255
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 23e9aad31f9f4592b4f677c76ceae545
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# 1e4c76449e2e4b43a53062530b938a9b
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 763b2070c49e47d082f9af6a65454918
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# 5434672a20794668b447e258689eb1ca
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# e3b01f6c7be34928b76fcc7ecf31930e
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# f7cf77e21feb4380a4a94960b7b059e6
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 8706d57c76ef4d76ae396b1ebec31d1d
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# 749ae216f59b46f0ae82d8ded675af9d
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# dcf2d676902e4bc3897134556603bfc3
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# c0d30b8c3ec7439ca333227125a0584e
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# c90ac4053d3c4c72b343f7a8a9acb5e9
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 3d2d034694a546c9baf5e5c96a9298cb
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# ae3a1e542bcf4025b9564584657dc5fb
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# c177747dd94741538c4695d7e37cb62e
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# a7d17e2b4bd04b22bc910ad428bf109a
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 9ba88ef7f5ec4e0eb09cb7903692305c
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# dd7ce44fbbd4473fa338656f3ee8fc95
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# 570608757d7c4b2fbe9c4bf7ab89b0c3
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# e64d92f788c0411fac12dad49f32506c
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# ef3685ee2ee844c79900fbe8e667fec1
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# 7e03e4179cfe4ecdae32835f7171fc8e
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 685a027671eb452899f92772ab9122b3
# 53b04477dd34406980ee19e4eaa42d2d
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# f3d729aa9d1144368b701d50b7b9bee8
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# c8f15390cd594139ad4bc27c416a33ed
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 9e2a52d0aa2c468f89bc026010a8a255
# e995c3a61ba14d428ac500c2777bf1c0
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# a281046cdf8243c2ac5d718356528dba
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:132
# d6ee6b316eb64273af5fe74e669a46d3
# fef01db9e6b5487db39cf9dd82c424fe
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 5ad7757f4751476d8a346c424cfd82ac
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# dfd05deda0f043a7873622910d525fb7
# 82aa0643bcb0409b83b49e792ecefef9
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# c6903d89e8c842b999d2233c6f0d755f
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 780fe074d56b46908c38c5dcdf60606b
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 2cc7c1da86cf49f8a61881ce137a2812
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# d70f64cecda840a5aa2da88a3512b26c
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:136
# 0105c1535b114560993109463a6027b4
# 43216d08a4f54e9fa91605f92f851809
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 843ba6a47dc547ec8d844af90d71d4c3
# c820c308e73743a49444871d996f05a7
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 9369802f6a2f4e1aa71ae448a49be337
# 31910851389e4308bc0805edde81db58
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:168
# d2029abdf3d5436aa5b01c3c47a67082
# 8aa6a9dc81424f8782fd256e2730c0eb
# e4135bb5c7154acc8a8389dd8f0b2962
# 6fc083d2415a42dba5ac99ae0ccedfde
# 9132b73cb336487580b402cb3fd1b917
# 4c0739e9108048d6b18c086ff5fa7432
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 89170c3e7c044193ae1d3c0f3ab798eb
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# df61570448b74b2daad5e7dc65bafda1
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:140
# f270683860cb4317988c6ac32bd7577d
# ad43a96041dd4b899af44cef4dad4dc1
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# e9605fcf4b0346d1b20f4584a743972f
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../source/debug.rst:167
# cda1511419c6450bba891e93e2a17164
# 32370b4469584192a216dd75d8804165
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# aaad6261e47f41afb4b9d8ff35049c2e
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# b5225f28ce95478b88e480079aba1395
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 257cb2919704446b8c37aa3206708afc
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# d7360b212aab41bea326c5db553583d7
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# f31fcb3411e548619daf4259785b3dd5
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# dd02695edfc04006ab6c5376bf6bb500
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:144
# e5a19877520047f39ac221fe91a2f610
# 67b869b4a33146e9b3960bf954516677
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 614c51f136b14d54b0a8ea23a3ee638c
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 5db0e4fc00bf4751a91bebdc07694cc0
# d496e123bf4643f58c025c3de85c91fd
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 2bf23f5c46d14f52acde523c3cf34e46
# 321d92a9b3404b1cb7f28a978431e0fd
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 1bc9d2f033964ce29c13b21aad9becee
# c00226a330fa4af2a287a0f4ac581394
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 4d3e1886be3148a7981d53f92a687520
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 457b0fd0fabb49639d4dd8a7b2fa584c
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# ff2d32e10e97405a8435d31de78fb3d2
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:148
#: ../source/debug.rst:184
# ea3509acdd4b4166a1161d231e862490
# 597d85d9cf5047dc91768fa4b80e7539
# 33cf46e8ab374041a66a8a2ee4079551
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:149
# b7b84489f9214f41ae5d395ca80250a4
# ca67a3e05fc14f7eb68ce65c68669c59
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# 162eafde681e412a964e91c71419b0f9
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 322dbadcf53f4b178ce572bdd92173e5
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 38b4eb6e835a4f04a79f96e43c9cc02a
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# 05acef2bbc804f6caca6ac4ca82cc15c
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 24996c888c5c4e8b8cf7aac50f4348f8
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# c0e37339cc384fafbb5a18304f89053a
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# bb1c5f2eb8f94a9c83e1ee5252e133d7
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 50a7d3b1a2194bab8c470895e184a6a5
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# e5cdbd70e799459fabb8fbccf3c28c01
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# edbdcd45b3794e5dafb402fcbc6a5c67
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:111
# a7ff59decf8048e791ba336f39e6c728
msgid "chef_hander"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 8fc36a9e569e4159ac035647d1b12ccb
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 43d18c690e5b432597a37020b637dd6b
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 3160be0e5fd44b0f9280a5532d9dbebc
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 6ce1afb257c940e2b6a138ff55b67999
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# d8b21760fb0e429a98a848a5dce22e9f
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# f379e6c85aa44cb78372465be81def23
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 7cc61616eb60498895f1383c064b828b
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# faa475dfe30e435991fae7d061e4c3f2
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 6f67be38958247d49306667bbea1944a
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/debug.rst:116
# 39d015682f634f80ad7a59086c62bd06
msgid "Read more :doc:`about exception, report, and start handlers </handlers>`."
msgstr ""

#: ../source/debug.rst:120
# d244fde265d34013bb68a9850ff852bf
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 861d9fd7c7a14953a864fef1f483f3cc
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# cbd70b6d7c3c47148d9f2f8ed23994b7
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 0457727828f9447ea600c524a32987b8
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# fc66a2e30b324cd096d92a8026b21225
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# abe3dc228cbe4904ac95367419ccbecb
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 32db409dcbdf4d7c8326a2bfbe84f3a7
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 95303880d7ad4e7dac17eeeb241e52ff
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 8f95cbf9da5f4459be8e39d836a76d1a
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 9bd1e2d02d19495eb10251e711cd5b7d
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# f4d2b79eadff41dc91211a3a7314ccd7
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:126
# ff521f3f04ac459eab465ae840b3220e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 263210828ff14785970e027878dad55f
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# ccf2865c864b4d6facca06049ee3a627
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# da178aa4d12c44969e6597faf0324d60
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 61fa94323a164a83af3e1cb0c2a41596
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# c60cd38475dc4cacb9a81ce256690ad0
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 75aeca1235a148528a0aae68c203b944
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 785a35e500564970805ad76e421d1358
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# cf61a263db5b4d439072c3dc48476373
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 48f2303a1a354ceca74dfe5460fd8ef3
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# c4bac0c11ce1472d82529fc342524cce
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:151
# 132c340dbb1945e8aa518fe084f65b61
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:155
# 8d1e305d0d834275a19f33504092a12a
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# a29a3caf854b4bf8a9c8c5bb29b45c1c
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:160
# e996cd16aa15469d8dbc1ce797f5a269
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:161
# 584702508c464e83a0868e94bb1e115b
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:169
# 47ffacff79b742e3a64eb4a7243a97f9
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:170
# 36bdfe475dd142f28d7f717dccc2ef70
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:174
# d9db429ff04249f7b9a81ddbfb6900d5
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 0b9f0d620d75478285676f09a1d5be83
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# c1a72733ca214e7c82c5fb6874d242d5
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# bf9da676f5e64ed388269dae935aa8b5
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 9a3d7cfd150840b99083551695245192
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 4dace64a52844d648fedfc78c5510ead
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 5d31dd02a5324877bb2dcee91f94ecee
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 9d829d5ab46047b79ef49d7e37fa3096
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 066e2f82fb8141f18cda5f4ce51a6e2f
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:180
# 1d6d33ba0f2c44d4b3419ce9d780a87b
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 90395098132e426f962636f87b4856e3
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 75ccc2a58fdf4f769d9b805e01b62076
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 0b0b47eb91a04b77987d5c15a4b9d318
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# c56855c50a38467ea40708135b1980ca
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 5353ae27caa645678bcd6b82f43758c3
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 0acaa79fc550475facbd9f82638498d6
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 357857e70d2f482dbb6c2b8431ef9964
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# 183401a4048f4bcb9fb8ac2bbd0046f9
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# 6e908b3a7049487d9227cdae609cf49c
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 93b846e60474448fb70397bdd62e4990
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 8dca1e356a53414fa7d816d891fef82b
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 95d182fd558349f8be7139401b3194ff
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 51ffa6e76cf74d51b574981b5433cdeb
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 186095e179544142b251fc82d7fe6b4a
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# e7f289163e064992b16423ed64e7e730
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 51983c44a3944f04a2349b08dfaf1326
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 4b9032636f3e4472a428d10156d81960
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 6a61432f123c43ec923a3462966e4501
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 178e5c69de8e4de8816de21ce68d4cc2
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 92b6fdad67d0441987a2c0969fd869df
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 62d343778ee048f3a4ff6d23b9b66d4b
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 8c4fe80785a549afb850dc361285f5fb
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 69f43ac01be043218a96f48052f5b053
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# ec6c4a9594f84b47b33ea1ac39595bad
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# 3941ae43c3f54358a8ee2e758d0190f1
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:185
# 19ecc65e82344fa9becf66a04c912266
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:191
# 7c0d28d50a55402b8b0175342499299a
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:193
# e544cef991b8458bbc09906827835384
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:199
# fc3420e87c5d4b3f959470a83e0417e2
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:201
# 22a481f217394832ae009cbb326b0aa0
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:207
# 3e7a8fc9b31f45f9afb786071a8bea91
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 18:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 81b428baadc245d5ade8168f4bc45bed
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# ef4780d697594fddb1ccc0fae227b744
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# d42eaf6d69d24e4282ee0b7d3aa1ddb2
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 62c0c1dfacd846dab0f54bc5e1b4c0fb
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 2f3ef8b9364b408c883a2a789c52e530
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# aa926aa9b53944399d6de2114f043f8a
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 2464ce9b98f84163a3cacf4d103a69b2
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 282001dc837c45d0b80fa9db242d1d27
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 1a1d82c9387b49c0836293e2637ca372
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 6340c93b693c450b987ce1540d0c148b
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 20fb83766da24c65bb21e3019a245d6b
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 1c060fb5dd47489696873684b7180ec6
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 0e8951cf6f094f55bcfc1a22d9f9e26c
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# eb4638f0c1c74fe7a4b804ae858d9b77
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 302978f7314048b9b39796c4b82124e6
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 84be54dab39b4a30a9b6a86e49f75402
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# ce5765f91a5748a487a3e53c8a365134
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# de915dbffb8d474bb30cbd80ae64a53b
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 0e5e707e21a54482b81ee530a8d5fb78
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# fb23f2226c6542e487ba7182e3af503a
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 300f9bbd0e494ddfa811f865fc4b0639
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 4f6903cc3b2c4052abed99cfd84d6c41
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# ab08bb0446fe4f8187072e6546de1f44
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 993f7be5321340729ed6b6fb0821f787
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# fa6581b701334a2b9441a16d1bb08bb2
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# a1a22a9324324aebbe068750ab8b1afe
# d2c430dbd33a4a85ad8c127a865b04da
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 8c71c3c3212e46e5a8e94b6348035f04
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# d96f073f5e744f2280be0312af6b62c0
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# e41e7ab5c96f43f0a502db8e01891d3c
# 8c2718a42ff64792b229338200dd0973
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 909adc8bc2ef418299ceaa2b2627f485
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# dc809c70746341f8a6940dd959f3df7b
# 0eff8025af6944319dd7ae391f5808b3
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 112d462342cc4d4697b110cfc46a18a6
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# b534dcf95dbb400198ee8f3c75585743
# 0bdc762194aa4446b09b9883b826ff3f
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# d3dfc88f88984184ac053e6641782e90
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 5f2d1aad4182480fa9ff2fbe01f3aa39
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# a9bd7d0bceb6421db3dba3a72d2e79a4
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 5cefdc481f9f485cab30a1cd08679858
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 72245c4dda5345faa442a4c6ac12d3ed
# 985c7a1bae9340c9afde81f8944bbdb3
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 77b89c18bdba43f5b356358ab7c048ee
# 0aad84b3503e4f97a067c5763248af44
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 6268d2b2b4f24fd892fb5270e86d92bb
# 58e63f4dc2974d85918f77bc08d3f3dc
# f0e728a2b8684565b7dc2cd4a7fd7464
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# dd9b82ac11374587b9c32a06ca038ad7
# 95d6a8b052cd43348514ca72848020eb
# b61f1867372c4ffd9ebfe7df2e5832bd
# c7222be067e64dc0913a8a8202134aa5
# f342181c949e40ef9f689bb311058a22
# 87291a7feb0d45fdb987cd9e2084fb18
# 487c27eccb1e49249ed35ef5c66d6013
# 9a5aebdd08fd4fc4a3ef2437519b9f55
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# fd13566671614fe8b857a6c6c15710d3
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# baa70d8e370042ee8a6963a095a49512
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 123b05b3624848b687457c2c9cf945d9
# 14ce1e55b54744028818ccafe60469f0
# 1973c1e3539f4718b6c0e4319f91ef4a
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# f374d3b3bee640bba358636053f3c504
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 297185fa56054d138ce5e02e1a9d239c
# 302605efadf94e519a0418f13807da1a
# 4c7a05524ef74f6f9e185bfe9f8b63a2
# a6ca0aba09714cf7819f93c84066a8f6
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# aa90767438f74f1a882b59f7bf39684c
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# ed7a491d481344088f783cde3c83480c
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 709fc594cd854ad599b7a5d6525666f5
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# d95c53adee8349fdbae9bf3d230a803b
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# c0db06aafea14571a3de05d3d0f3508e
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# b53242d122c04181870ea7d96974cfc6
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# fbc387412dd640f3acaeba6e699ac45b
# e787518d483b4cd49dcdeab318eaa8f1
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 3a09b3c1e4dc4058bf5658698ea4a8c3
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 3185c56ba7a8465eacad5e88b32967c2
# 04f08f5178bc4dbb8fe9ac97eef9eba2
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# f8aaeb4485024ca7905dde7ccc2634f2
# 7737ef1e8f494584bc6d124551374655
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 0d4caefe21bb4c1c9f944c2a34aebb85
# 23c8e315704b46c282daab458f353923
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 8d497953ac934d54bd64590bfe3053ee
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# a79cfdc90a754e269e248f56f3d71d68
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 8a484383834e46d295bfc205269ded60
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 7d730c62c97f45c38408fc984d3ed25f
# 8f3abcc6e2c94e4390ec5fe6c5b7199e
# 2cb78c2ed4ad4b828679a23f25d89661
# 83ae3b17be564331bf292cb9d705403e
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 73c7522eeb81485e916688c6927258c1
# 67b9a98e50e145d1b3a207600d4431f1
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# ba9048f8eac7400286fbfd038df54fca
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# b85289a4f6f14cb488f4fd91baf1ae49
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# cf708b592f20457ab981b780bdbe1a42
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 6eb54505525247a194540e9c45889917
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 6d4f199fe9784e949a842a5ca80ce562
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 46232096289f4a2dad68e5b15deb2bcf
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 6849aeef4cf9439da35604270ef898c6
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 445cbdb4dff14829acd58746496c9106
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 3288705e45a54c0db0edae5c27eb191b
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# f21ad3a94df54fcdb90bb346580d5bf0
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 1d38fa3398eb4b0cbecd9cbc527d123f
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 57f6e49f6e644639baa34d0a85ef2e83
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 33832a0ce59e455e9cd78f45c85cd011
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 790c0682354149718f35a732f9d4277e
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 6f0389f92ff842459b559145187394e8
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# cc1da932dcad43c880f06abce2dcfe04
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 5c46840b869146cf8b29fc044002c64e
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 730c7d427c1743dfb745d2c9da16b548
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 0d504fb414484cf2b50c8e2ea2a17d8b
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 4ee11cb06ae6418e940c637eb8f256fa
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 0375cc7db50c425fab958cfc8d8d6504
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 4e81cabc58ec4505bcf1e230720fcfa9
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 4d7b69e4d8f04c8cb8be14081ebab8e6
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# e813fa0cc9de45288d3cd0a371fcf24b
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 4c2436817546485193da0525f1ee2267
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 2f10a64840114239aa3a5ff1d80e804e
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 8e40c017986543f79a643313edf214b8
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 391199adf32e4015b6f4d2cb711f2555
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 574c8a5a563c43f9bafa3237dde264d0
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 8c0bee7959f94438a39304f656c897fc
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 96f7f31ffcf843b2b303831a704e3231
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 0e19d2a41bf84e47a8d0110e90267483
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 613403aacd8f44078861cafea21fe8c5
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 2ef2d9f355dc4907a779181c775ab619
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# e23d8a9dd10144eaa9293453fe73107d
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# df4b60ded6a049e7a49965137a80b474
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 08a2ce6944ac4a8a818cd354e5eaa06c
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# c555258436214e928c8ad2b2f87e457d
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 11fa5cc6d53f4152948bc99163d72e66
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# b499c75cf7cc4e768e1f78818a0cebe2
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# e5cb46de9bea43c1bd57dc7d42cd37ed
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 7ed912c45021480e92b6796e5e28bc00
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 3563786d3da64f7fbb6b1a69c5b905da
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 6e1f5e31182a48c886d678d7b4bf61a1
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 0b322a3478c547c29bf1d4f9639392d6
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 9c83092dcea641cd80c3f9081cd3a1aa
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 9ef2f33332ed4adc9102d04b91e186f1
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 3dbf6f9ddef249268d4cfec6e43be8fb
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# d732869fbcb24663b9fd890b1f9587f7
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 3cdf261f836d4b43b555a22259b3efaf
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 7b322b64651c43d78cfbcfae2a0b5e21
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 664fdfefc32d4a7fad67193403825f89
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 6182366c96ea403daa1d28b66c412144
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 27f849de1fbd457498b06cf171740891
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 112334b55ef8429d8011eca6d1ef896f
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 6611fe28bfae471a99661cff63527b05
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# a3dce200afc44a6685eaaf4d4aae53f9
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# c6f0727e60804caebf5d6a77ebb37934
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 5f02f94bb7824e5dbcc3e704bd690b31
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 10cd7f7349df41dfaf736584af6303e0
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 654ba9f57d264e7895150d9e73eaba45
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# e26f3f8ccf454d3b9cbf8131f3a302fb
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# df6be17720554bad9aa96358ff2eea39
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 30b4ab27cdb84c169d8e0969031d95af
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# b3ef0d42e6de462f9ffb448652a5157c
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c31e109bbcd749de85e00d021398817d
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 7b08c5d5b11c4dc89615a09abbc0ee8f
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# b92d5b3a254c438f97d5ffab7e08fef0
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 4e36f530497e4a2baeb6f98eca896fb0
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# a5120aa7952b48d485932bc2a5edba5d
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 3e57fb4f1b9a472fa69d36a69c1efb40
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 11d8b36eb41b4996a89b36a4e4981afc
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 0ffaf5834c1e4542a4d2902c95046158
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# c403231ae4714247a1fae79d28816e64
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# b15a0ee194d44f39b36dbdaaaa5a3613
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 964817a57e514e5a9923fc9a4a47d063
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 1fd705dc92504019899c9f5b8a56677e
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 2e19f63dd00c4866ab1c066c6191099e
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 85417cf55db04195beb60ba5378f3aa5
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# b3b23b490753487490b216a805482f39
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 375bd2cf77274578a2c921ced1149381
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 315142121e444987a3c8d3880586eb1f
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# f51f79d576f544b08f64d9ce340cdd4a
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# f2ed51d5604c404486eb65afa52cce6e
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 28372003a9194759b76eeb29f251d9ae
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 540cc1b7426c490f8652539ffda213f9
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# c3657f0064dc4895a2abd75fd9c98f85
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 92792ad04b5b423c8cd2e5ea220bf39a
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# c7ffd239e208483093572ab62716de16
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 42649fdd931f4fa6b28fd1f6ea7e828b
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# e8d8585955824df0b07360c19faf714c
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 98a8687b615442b1bf95b396ad31703e
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# c82d90be6f754d15b79989de7a8769ab
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 3b3bdcc4e68944ca994256d7015e85cf
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# e53c62d36c9e44c38c2932eff51e0ec8
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 080badc24a0c4c34894f2d8c1ff00947
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# f383e00e888f4fa8844eab4bffbc2db6
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 6970b370c55743f59fc68694234732c6
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# f03c761726ab4f9fa303ac9c6f84e545
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 03b2b5bdfa044bdc9924ef3f74c66d48
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 918a622d8b664e548fc332ad659527ae
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 2353fa1b32874860b85e7e4a8516cc70
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 0d1817efd4a44b3d9cd64d7cd2e8d435
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 9153ad6149b647098edbb0e4c9f9dc9d
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# e49b8b11c2594bd4b47a61a7fd41733d
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# a9f5921e86bb4900a4000f3b7104020c
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 338e4130ac514e7baaf5641acdd6805c
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 603511bb245940559da00b63d8274a80
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 8dc642cf43ff4c4d8b1843ffb0514120
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 164abc799df24109a78634748f65ce12
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 86bad427e7b14b30af2d9c6e598dbf6a
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 185481802c8d4f2f8bd758292d371726
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# b28b826ea3044d47a1886849c60e512d
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 31725c1a7de84668bb67ad85006e2d32
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


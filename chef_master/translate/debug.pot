# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-04 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# f32c351bf6ab4db786fb533ec1a2a533
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# b4450d04e9f44b3289d7ba75fd483a39
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# d5fec14079bf4f919f25992ae106006d
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 259530d1f7a244b0b32c310d45718ede
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# 33b59fc124524a4b961214e61022a92c
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 1ab4247ce07048f38dfb4831e899d3c9
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# faaa980a61e444c7879082aa1cf4002a
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# fb4381ef758e4c6080ebc5c097fde81e
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 84930e8e94bf4fe7817b4f185d4c155e
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 6608de5e1a8d4a0c826508d95f5f4531
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# a0875cfd028a4e94b54b19c17670095e
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 67511d6345334e80af5b5d64cd17f7ad
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 5173a9cd3e3a4907b7858818755ffc4f
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# f301714193464036b3c3005b28b9df47
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 598f419ec67640c99ffb776597617cf3
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# f5e401b7ef384e4d963fe4436449e010
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# 4b4dee9e5e254966b1166877a1423d96
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# e8b6834ceef6485bbb877308fcd75d7c
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 3427bc6bbd734a1c8eda530a1feef934
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# c7aadb2f3e4d4ebea246f028b96a863f
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# cd8edae014b04d98aeb6fc8caefc9c11
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# dc5679d823ab427495e8ba44e51afc02
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# d2cc2c6f376a41f0991aaefa5c5bff65
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# 585c1dad76db4928a856edd252955202
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 2d737108b5474b0595aab523d07144a1
# 8cb80934a39c430982ec09ebf42f8daa
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# 062882e3d1004ddeb688023be07c71a5
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 58beb92790554453b8f5e910280f6640
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 47709d3b93fc413681ee349322f221df
# 02113d80009145d3b9171446ded61739
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# bace36796b434845a2d40f0d13bf147b
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:132
# a819d43dc5d64f04a995a4ec2050533d
# 247003eba6744fe287708e206d2e31da
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# c956e4464fa046508c45e7958ede3b0d
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# ecb98d936c7c44fa92ecf6cc9fa0a1da
# e9e4dc8817fe43d6ad47e69b3117651a
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# afbab04ccb414f8a8b2c388dafc977e0
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 9214c0a17658450381fbd7e96126e94c
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 9d4ccd72b63249d682271e9e9f940d5e
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# b5ba3fb002fa4f2e97c5ad4ffd460dac
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:136
# b8d7766d199b43a7b8b6463773bd69f0
# d60af0f7597b4c4fb7271312b1de7313
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 18acf59a57ca4e74aa2ffb19f6de6d18
# 31ba9aaa2905421fadc29f921d56d06b
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 1f2ea454a0084596aa131983b8615c95
# f853091002d0495abc3d2cf85d5d5214
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:168
# 32563386c5ff4e74a093c9455fe1c99e
# 5ff0f1840ce54b60bc3224eafd2997a5
# 6b9c0edd4b5443989bc3814d4b2219f9
# b622d6ceb30c444985149aaa85b077f8
# 06e004a6440545a1b50b51552fc546d5
# 3eed122800b44057bb740480a827a5e1
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 8f581a8630d74c1eb99262a28307819c
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# d3b33d472fbf44be94c84709c4683891
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:140
# df7995d0f37040f99755a4eaab7afd7e
# 6a3ce2534a1642899a298dd188f3bbe4
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 9be5d271ab8e4871a990444262fda561
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../source/debug.rst:167
# 9d9920b43af64e098d7aa47c1c948f33
# f62e40c9409f4de8ba7baf036593a445
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 9e739ac2240445be836d285e7a17db11
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 8a8f724a01fd41bb9da910ff343593a6
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# e3396c7928a848c8898c84266bee36ba
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# e459fc1f1147455bb6732518f9b43975
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# bcc8ba2815d74a1a9c178a0068e9b5c2
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 8b4fc54993284406b82d3c8cb2c85efe
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:144
# bb62f8a106364546ad45a83b08352ab3
# e70db540d7e34cb08e2d186c3d3bda28
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# fefba28d85f7442daacde1af9b1aed49
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# cad3b1ca7bcc4d5baff9d3dc247e364e
# 001f458500ab4bf994b0160f417d14f1
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# fdc2fb0f3c5946b8a909b6c58b45cffb
# 9ba1128a410e424e99840e22910cefe1
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# cdf6763a2791499887b5bfc621128308
# dd8d43a73f8a439bbd61ab1467494302
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# ce715b72e63b4c4fbebcbb8f94172657
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# b5415d459fa945419402f99c47d89189
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 0cd9c0a6b53446a2958874b8884161cc
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:148
#: ../source/debug.rst:184
# db47929b2e0a4f8c8dcf1d4758d5819c
# fcb4389e2ff343b583d5f598a5db3064
# 517089ced3294c41b9a7540f05aa8b75
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:149
# eda92e040acc47adbbf39eb231db035c
# cee7207e16694db58099c3370c0d8702
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# bfcd49befec74578a3f04d9e91b80dd4
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 256f2402d6a74545a5e9b700c2141e8f
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 14ee022f44114186a4c3477806c727d9
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# fdfa4690b7384f359780448f77887e2f
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 4116479aa2ba4a8586dee5965502facf
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# d97157604c634299acdfc1d43219d88a
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# b5c8e67e81b343958bf308d76485e4c8
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 11709a619f6c476aa577432116fec36e
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 5f369d37f5894325acdf8bbc63258394
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# 179d61263c404504a746016c13802119
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:111
# 0843233895804e66bd7f476b5d1c0134
msgid "chef_hander"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 442d9accd96643a38dca0c236164950b
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 8eaeaec3a99e431c82915034c043e5d3
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 5de0f8a2283b4c00b5160cfa03ca9041
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# cf583ca29a39488caaaa81813ca08f8d
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 70cb0945a3d2418f9f8f497ca1511de0
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# b70b95ab74e34d789e7541f81b694db9
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 9b13cf9a3e4f4d65bea4156a85321f43
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 92ed3294446e4d4d97b29bff7d5f7902
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 7ac64a13c8bb4302b81ff7e81cd9df25
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/debug.rst:116
# cd998bf7baa74a8fa49a49d33c87e63e
msgid "Read more :doc:`about exception, report, and start handlers </handlers>`."
msgstr ""

#: ../source/debug.rst:120
# 56704e2571cc4e099af61c10ea684619
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 9ad78bcc36c54751b83753f404ea24fb
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# d6b217ec7a3343a090db3322658384ba
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 44ada4fb03a046ccbd92db4e23d26787
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# b286ceec20bd4f5c89c5afc0e99b03d4
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 0e4f4b45fd39497096ce25a177951514
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 3ce78488ee514b0c80c428f4bf6175bf
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# b1ef595ffb444795b017a540d027c295
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# e7c68f73ecf44c5a88852c803128060f
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# aed9ba43462f414e8421cfe6bf5f1500
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 1e79ad1712fe4b509183fcf052d4303f
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:126
# e30d5d27942b4b6582da34ecc468d83f
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# ee08a0712d07439689d6bd617e24ac58
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# f02f5671cd4047008a24fc358ce6daa2
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# acb06cff9e294cc0811bb08408b1bfbb
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 4fbcb7a80a3643b4b15fddb68e84887d
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 0e74c97a4bec4568a85dd083911c62cf
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 486eeca61d94451ca95f7f330c0a29b1
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 3d37e3c668bb419687dda6a9718bb999
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 08fe260e5ed74173a0821716d58a9e9d
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 61ace3bd37614a26a3a911690ace8020
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 1631e4c23b734cd89570b5d684bd5373
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:151
# 64cc2d68f1ff408db4b410874f83b677
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:155
# 5ba4145b92ad473283a4754049cd1c51
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 8a3b7056a624471e9ee109db30e5f469
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:160
# 065a327c5d5e4dbd9839bdcec93929d9
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:161
# 3d2fd718e0514a23ae1c603a980636c3
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:169
# b5132988088a44f29a7354ca39b8ca3a
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:170
# 1b824b0bd84b44d2b9f63d67e0da5cfb
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:174
# 1cd22bffe3704ec39abb2ed71486f3ca
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# a7e7617f95fc46e1adb1bee13f76d9d4
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# e5a74bc089b044b38298b030aaf1bfe9
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# c8e3e43e5f2b42ffa72d802b7548fa2d
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 4f2c99c2ceda43cd9f9474cd7b31aeaf
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# ca0e6e43c68a49da875210791c608bd4
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 3b233d1d4b694320a32f689d669e1316
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 7d50037c32274ad5ab26132fcaae8ce4
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 0f1418cdaf24484c85971eb41ba60df3
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:180
# 538afae2b0c24ed692e18059dbd2ceeb
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 0b34cb733faf4999afadb332dc849e3f
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# d2f64ec84a6a4b1bb200cf8dc18dbb2e
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# c8d931066a7c45d1a68206d0a6ac66c2
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 27f7eea6c313460e8f79211dd2146b34
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 2d19c8d88e1e48d793e52de392dc00ac
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 79f7b9b5198244709e7ccba66a0206fa
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 6da7a14107e24e60a01c48b1179f2c56
msgid "|format chef_ctls|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:27
# d20dd0cc2b1b4d22a1ffa4f61070bade
msgid "|format chef_ctls_doc|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:29
# ec938cc2b29e47ab89660364daadcdc4
msgid "|format chef_ctls_min|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# eb10a984f2834c91873de4e54687a793
msgid "|format chef_ctls_other|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# c9c0e0c61b934c9eb81f0c5df7b8c723
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 10e5ac5249f74bcb88fa5e7ffaaa0ae2
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 1597e9ff7a144309a00031e53da83a8f
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# e3f922b27e5d4406918209a87ddb9f08
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 4d236bc5cbd8469ab7aa61e4b680660c
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 1104a689b859483ebac2b115cf585583
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 41b1e7914e9640d494884cc9b899f262
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# f304ce6f4c504a9d88172c7b3133aec0
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 3e874e17be674c7cb9f111e618a1d988
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 4155798f2745457b8fe09338e1854e79
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 2a594be0654d4c32976db2223122e80f
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# c1dae7833c6b4edbbc3ca073142f8814
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 2266023019354233ab70c6c3360a669f
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:76
# 632a5c08ce9648a39f0cc93c62bcd3ef
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:79
# 6dbc15b97126495cbbad32ec59e1db38
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:185
# bc79a541b451434c8591ddc32ee012f0
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:191
# 6f4818a89d534c2aa584179f8fafc723
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:193
# dd78640eceb0455197bc17d633bf8548
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:199
# 1bf457105c6e4e859283c11bae1e15d3
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:201
# 037f6c0821ac48e9bf8039b1293c8035
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:207
# 9d6a78e297224150977f481a95149d45
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


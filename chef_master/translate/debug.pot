# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 22:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# e69aba246e3b49ff9b9f2d54fd5891bb
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 0a0f3b2c035e473fa121d1b97f52c870
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# cb0b8998e64b4cb59e5490c782ea2d05
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# ac9f23c330794db4b934979a7a841733
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# ddff9698bc604054933718a555feb1c1
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# eb43e59392da461e99817cdf35687524
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# dc00ef5cbc2c456e9accd1772281090b
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 92b70f1cce8e46c3856dd79b4c1d6b7a
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 1d38c3b1b02546bb92ba084138715780
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 7a90e2223bf6494caa0b2205e01c946a
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 1bde5a667a004071b238adc239095175
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# a0b557184a7a421cb96cf5259ebb6ebb
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 87104129417740d8b4bf9dd2cb01fa0f
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 507dd330da5e4e72a170074e2755736f
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# c1c3e3479ee64c3aa31f1cd33eae02cb
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# baacc5d788184b9fa1c821b8a80b46b2
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 718afcdb39454ae9add5550721cd0c38
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# b793c6dbb14f4e3ba7749dfecfbddbb8
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 5a32f3e236a14ef3a143b6fde1f44608
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 430476e9c7cb433594f4a66cdbdfc1d9
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# f31c2b7721174ab18db4b030ad776c7e
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 0595c8ffefda429fad24e486493ad9ea
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 5cd4610e08db4b85b4e2abe890068432
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 172cf2edae484499877f04dad191187a
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# ec8496ef2d1e4151957184dc38ac9a33
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 787474fd2d824e57a14aa74d8951a739
# 0814f846049143718a7277d51d138611
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 26b2371a8ef543a9a53d25c6ab073dac
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 646af50491784468ba59e5839ecd2bca
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# b904014ed27843adb8b1c455ddac7972
# 471c04313e5f49e7b96560552ec90e14
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# ab1cad1c6c57459a96b76edce8859082
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# e8707c2f3ec74b37b0a8b63644983971
# 0b727abc379b4891b59a936f827abf1d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 4813dea8672348f3af7d9a2e66b22901
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 89849686fa6f4ce1968113f7c402593d
# 0f33b119ad35440db0b7ccae00c29d63
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 30a6573628c24fc89e5f74c011c8814a
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# ffa1ab42571841afa0fcfe0b29e0b2ba
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 9aecd48b200d4ba093e23785199bf73a
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# cdb500a3cb854944964a2d15937318af
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 1d8a1166d2b24649880e8ba884ed4dfe
# 48dfe29a8de44847920e2805f07782c9
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# f7b333ed029e4edaa18624beefb7c970
# 17d1f867ab234c39ad847f7fb9301a84
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# d69cbd16a03f4635b68f907f9e2400f0
# 0bf3b9f98b6945108048e96e969433e3
# 9f01f7e53d0145c0a841d75f72036a46
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# f63d9dd22f694d41bb28ef8f68dd3f49
# 80d1ba9a73d448c29eb1b4c93d498bb0
# e5700a3c704f4759a6900a0d1c1cfc65
# efe1a531707d40b18b59477699bca3bf
# 7c6d16936dd441a6aa95ddda60940aa4
# 0b8d014883e54634a1119cc3469d71d7
# 473e80a8cb2d4573afcef08cd2ff5812
# 4b8bd35d996f45a48d4ef90f8ac137e4
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# c144dec2fcf14ae1be8f873392a664ad
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 781faf8cba14439b949dc00c145002d6
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# b98c90212a90482481de190356c4aaad
# eeb3338e9f2f475d99f5b851b86695bc
# 78cd6ccea8774ef7a9aa651e6dc88c51
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# d7b48bb7ae964cc8bb245e6f4a0764d2
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# c95df483ebdf4f10a77cf7e3c59e32ea
# bdd85f88e7e04e40bc7c97dc74166a6b
# 424873eea75740e096c6941e48da58c0
# 7df86471071c45ad9af631fb33c4bd62
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 36f9f66f4e86462f8181f054a49b67c7
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# a82007c7db5e4623a7fed1c3146a8266
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# a99ab02620244bfdb42a85fef0579a5d
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# ff8c0253b9c7451fb8ce19c553260ebc
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# cb31001660b4473da061e3174ff72ce1
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# b98ec200011040969eebaae7942f30e8
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 652daae8dd99420d97966823bf45110a
# e875e7b68eb149f4bb80049dc0296091
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 4562cc7ecdf94dab9a4f0febbc6f7788
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 5c0e79c614c3413b9185b0b6f1cb661c
# c9b53b9083c74697959b2e9689675923
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 3a77fdff1b2240608f3b560addf4c883
# ed3f90e7b9b54b39908db91d2457650c
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 0b7e985d865f47ab9f87b65336f844cd
# 369e95fda6a1421184b6fd24abfcc3d6
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# d647cb45833e4b9e959c510b6e1aef9b
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# dae026a59a3644caa1362a54ba0cc0d3
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# b76452ff66df483c8d21f38066f3d0a2
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# df1d2889263146b9a3069808f114eff2
# e163e2f2927b49df825fda413bc2f5f6
# 980ef038b5e6484cbd6be1850f2f1bbb
# f645ab5a39834dba9092e0945fba1ffd
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# b089a20e124249239a718203145af070
# 46938d33713146fea45a917b658879ae
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 21a17e1b1f5e45f4becf61ea80e672ae
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# f4df389852004356a36f766d36c57294
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 5cb0e7bb853643da93e5cff5c45d729b
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# e31ccc9cce1149a1b1f8e30893552ef9
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 5d187e522aea4aa188af6bb1356693b1
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# bb11958c9a5148d093c88f1765e36329
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 87d42291c6454a02b876c7526fea44ef
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 5d00761eca96469eb418b30dc509301a
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 5779710045564ceaa03325cdf7219a4f
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 3d77bcb7dee542d59919c35c2bf9f337
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 7120fede134d4269a1b5c13ef333c2a0
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 3912cd77bf6d43dfabf14a29c5480691
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 9dc736ccd66b442c96ae13d9d165b6a5
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 4a4780c8277f462a8d3518276d2eaecd
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 69ff326663d1400c81f7c652d76a1863
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# db6143f2b4c241689942be69b1c850af
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 65a8e81c5e6542eebfd6deed7d4bcb79
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 484f580c8f6242a99da690efea5d2aaa
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# c39ff34f74aa479c94d06cc91a28ed47
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# e5e79d48cedd4eb997db67e534dab74d
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 5c50e771ddc945808270881b671cc64f
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 8c2171a72511495f8d22110acfd0c2c0
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# ca7141bdfea44d3fab1fd5317d8cae37
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# c4e567e552d54f5898e81c169ec9f7d5
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 0a95732a0ffd4f5792859328774e5066
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 59e16cf21eef4aee8018a56d1e679465
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# a0ebdbd34c034dcba5408191fe94c3fd
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 0acfe7490d354b1fb3d9cddf19e9726e
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 7ad3aa8f39444f6ca6bb5a9c20453fc0
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 96d9949873ee45ac9b77cff583eafd70
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 617c3bd8719f48c48a909524ff7cfb61
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 81d5b79dd3574d4784e74b98e116bd4b
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# d1bfc9c998324aba8213997faca7e97d
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 7d7995c13c6d447a9d3995bef2580c42
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 0a8619d699d543a1bb767d8bb7053d66
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 23694e03c9304cb5b006f446bc40b064
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# b0e9446e41874f57a279ecab89aa6a0c
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# c3495f2ddc974e969288b699c6fd7746
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 6514b3af7f03401da51b5470bdee1276
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 0a6e7e155451412c912696293357f8a5
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 21d221c2e42647c88a5656c04e35b4e2
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 0e4b3c637c804dd88d05172597969da9
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 4a54b1d94cef4dd49b831e5c19fc7c51
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 51cffa6eea2a44baaf7da6b2283fec1f
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 730b04aca033468cbcf289635bfdb096
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 7c2049e1b81143beb3d1f40766175aeb
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 75655fb611764393be0a8edaa7d34094
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# f5d340f3f94641758abe9eb8846da09d
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# fa3628f65709461d81fc5192a3137af5
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 706e0362a202423290adee5285cdcfae
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 7c903d6165094317b123cf5426ea0238
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 77a2537d2e344b93a6fdf60bb61a5744
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 82d2295cedff4fde9f8fbd3367652d73
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# fb5d7de9bce84af98f344b34988ddf8f
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# c561db7bee9f469d8e12fd63baac4e08
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 685cc88b713b48cd81ee71477a8b7740
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 6d799f8601fe4e97bce421d497a1894f
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# f6087670ce95414a9dae7578821820b2
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 49ca2b9981314775a7e4d567242c4b8a
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# fe90a5feab1445e7a6d3898962ba0c59
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 49714010c7c84900bc0c2c8f3a99b2d7
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 80e6f9dc18f341d9b5335fa9062016ad
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# f8e009a9fa1c4a83a80b55af39b49cc7
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c94efe6a7c334f3d96ea22cf969fa698
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 09d7b026dfb74e6089dd5e59d6630d2e
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 2b22f26836d246828a1aa63e5c042a19
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# a523c8d1afa6453d8e6c3145a084695b
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 79fe93ab55f040b0a96fc9c8c7ec8158
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 775f688e44d346128ea38f422c6bef0c
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 8bf44d791b84434e8e9771f34edfee0c
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 82eaa3d90d534bcc8044872e32098676
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 258330ca811f422f8bbb4684d81f82ed
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 8de5761c91e1446293b0c8bef3b4e290
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 2496f0605f0b4d69861eefb972f1e289
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# ef712324654c4c89987df12d5cdf7e5c
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 00061bdc95ee41db89c18fc78bda6b89
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 572a46cfaa84448093be836735427e15
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# cc381d58af3145709fa13ed9f68ecf6d
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 7275cc229be54eac87fe1eae7097eab9
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 04668eb806644f7d8308915c014a026b
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 9f8ee05fb2444d5082b7eeafa8ea3b04
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 251c4f2cf7c14486863dbe30fd85bcf4
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 71f3ee8acfc8444cb95020d9a86a7f3a
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 44155aa2e0144e9dbcd2bbce6eb1725f
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 60a8dab9add4430c8234fc135047c1f4
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# aeec0d574539416d9349cdefd2009165
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 3d5506c49dc24b52b38ed989a3d23dc8
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 22758dfa88554b03b6389bf063728ecb
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 03a863612a7b46b4b2063af9731ca48d
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 53eedc59ea9a4cd3bfaf49d155195b53
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# c04de2569efc4364ad94464b60145170
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 71968f77bb084a1abb921a42ee78a145
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# a54b695277444bef9631afc175ece12b
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 573d6fdcddc8438f96eeee94db3b66e9
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# f5dc796224324f1196962f278951fa3a
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 2274e30cf4b84ac28d0a1992c592087c
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# b88674c7528b42f8a1f411b0ab4489d9
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# f1f41afd6bc8449b95246bdca68aaa5d
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 9f61c90a900a48478b3f7cc28d7a8265
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# df451fbae8094144a398235a668f87e2
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# f6317525a92d4788b1b59c0dcf7ae931
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 3908b8302ec34c999294d0be79dd7315
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 323b030376d0413fa04fb06ed42cb0f6
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# eb84020da1e04b55bb636f3c256bf3de
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 934e41305e6d4af8ad15bd0b02c6fc41
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 38a6ab146eb24d3aa8ab279484562f5d
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 1c1f391b7f184e9791f4eeb275fcbe21
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# fd97746ee8ed47578002f157ba5ea65c
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 0d385bf0dc824768840a30717308b11d
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 85b5fcb4f58d466da07f66b15b526e92
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 7ba2b024aaa04803b3be37098b894aa6
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 015adbf58a6a49e19be7a24dc4dad532
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# b1e3ef50bca44162a28804cc90ac93f9
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 278b87f4a82041508cbcab391b591ce6
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


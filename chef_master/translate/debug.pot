# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 20:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 85e7d8a8807e4ea480a14bb12ba8d9be
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 7f0b68f495a740a29e4cc0b8aeb23aa2
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# a31a8ed576fa4f378287b8c0091d9248
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# e44653ecfe7a44789edade1389b2bbe0
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 199822eba26649c1b4cccb9bda873004
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 236605527a4740c49d71c8f0c9c15ad3
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 2282001b3f1b4709bd9a7a895ddd374f
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 870bf000c54d41149fee307c0fcf719d
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 3cbdbb027e9c4028b671dfa791a91fed
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 474b90e4e6d74e8c91b8cce2ed86bb0e
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# c9555c06a68244a8a7f5ad86ff5ce77f
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# a451b945839a4d189b21360b789c8738
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# aa28af728f4e4cf6a9a274b7558eb2a2
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# b57b0905bb1848429ee67d767b83b13c
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 89cf21209d9b49a996aa496e90d689d2
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 98acc490ba0b41f5b79d909804dfd5c5
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 823a42cc10a14831828c75e7a8059325
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 2cbc99ccc541458c98ac8c1b9f8094f4
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 82380dceefae4067a7dd647532fc4924
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# b2450b9ce18247aeb6d59fd5a708bc69
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 71beaffeeeb948a087645ee5ecc8f0f3
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 26851e97a99145799dfd0519763b745f
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 7b1d042914854d2d89b227d97c494d6e
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# abd526b8c61a444fa89681f90e2b461d
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# fdf451c1810f47baaa193839933bf48f
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 0791505b29c2424d9b3192c30a5c67d5
# 61de4051b68146db85944034ee1093dc
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# bb33a2d130ef401d9ec3c24ea3733b91
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 4d84408eecd845d5b7c8196a1d7442d7
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 522f272723d548f2a02fcb155d732ac3
# e6d43517524e4527b71d060e5b7ae824
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 3a80962e14b74cb9a56a97ccd02e7adc
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 649aba9dd3f14b1ca5f7369e14c13da1
# d4ad510c741a4827a7d9e68eeeddf0fe
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 85992d04c10948c3b93d4a16362fe6f0
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# beb78ca8a126449c97a2b2b5104e529d
# 3d31f453435e43578d0a0b22b6147415
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 9bf0576816894b7ba59e28fd56b65191
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# a4762848c65e40c4b13fc02ec01eb8ad
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 81a6aa55b6fe4eac90f11f70d5140736
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 10e8c0ddb4d74525b774b05dae478b75
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 92180b2467ee4dfaa28855e10776850e
# c070d10932d74b6c96e188bb8e598d5a
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 31986464bfcb416aa40d91aae6f58743
# e60fbfa71b194a639bcaed52861c3f93
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 78836c73326c47b8bd23aea279deb48b
# 644c92ef33a9429594507e932321ea36
# 31ae5dba4a7c4c05afc8babe63b97776
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# ecc0a7742bf14ec6a146dde872e73e4d
# 33dff943c3354b3f82bf635e04b2d0b2
# d72b43e804204bc3b2ecfff5c35126f2
# 4a5bed7e88ee451ca6a4afbd6aaf7e13
# 77a57f15e5b54304b385930846c4ca80
# 4c0e8f24f46d4b9c95a21d72d1f5d5c0
# 7e0cd943647d4fc19624b7229cd7fc14
# 793db110285e468d81e27fadb95dc2db
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 3c5c8212a0424fbaaef3873d705b5e27
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# dfd34045f42443178097ba741873bb7e
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 782516cf158d45fd9b52d2143985e5ba
# b996192696e34d6cb1446ef5563e8f1b
# 0195200849784261b3006d52911f8cb8
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 3d43783533f84f3e80cc09e32cf122d0
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# fce10e45bd1e4ad28e8402bcd7b00413
# d35f3701e09f46618e39a807b3c39b5a
# 40aa7f6aaca74d04b20803f8dd02bb60
# 87d57f100e5f4687b6e03e97cb94ed63
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 3631ff2384fe48f3996ba3ec0c51428b
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# ab10ca6c77f44b40aab7be6ac74a87b0
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 7091620e989543348a2fcfb0ec37b2cc
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 3c251c8bdb0c4a248d94debb5e68a515
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 9f6914fafea04110a75bff8e9103b6b0
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 3f004b419b554ade996a3264b5e74306
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 91fb403f660c472abefedd883712f018
# da032d4f27a44db0b6e9ab27265193e9
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 7dde3a8231504e52a21fabedba0e1180
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 46633fdb7771422788dfc9d658cd881e
# af1dfd6dbfe045da8f04bd3c2878a3d5
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 2ccc1219d1f4424fb0b5a6fed5c484ff
# 543ef5241419470299a3ee439c6eef20
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# a2d3d2e6f72b44178476dcfa44fc65fc
# 4538093da2dd46ac9ccbc4ee356a4866
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# e7eac671935947d0aa1de42a9efd3328
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 8dd1da9813904e81beca0915b7b4ee59
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# e9c997a620b441b190c0e46d1090e425
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 408a84ecb1394f16ab5bee12ba88e4f2
# acf56336a90b4f6d81be1fd5cb577baf
# a90e69c5cc6849339c71f473609d4704
# 830355983ddb4ca28131d316c94d0819
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 9cdeef374136414f8fbb3923a3e9ab40
# 579f0979d8a546a3b988d5e8e2b9e524
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 34a7b232b1a043e4bc441d10d7ff6b93
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 94b54bf95f774202b81be63e7bd84062
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# f4530f346ffe4129853f736535619f1a
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 5d0076619b944a7988d91549e3dc8f42
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 856709be015c4ec1ae7ddc0bfc886e90
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 76ea75d9dba14c879348763af7ecad56
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# feb4bd04f1b645d18f02dca46a76ab0c
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 06cd77e74a624d88b6d1bbf3dad0cdef
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 5ac791771c114c9eb7a05847dfa877bb
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# f76090b464e345dd8276769df9bc6796
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 7e806fee58ec4b37bf94dd93c7415c96
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 43758d73f9a74f949127b7c8f1f432ad
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# a3f5ddefb47d4476b65d1e21a10ad98a
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 35193ad664e04ab1bcb57c3a4d5521c3
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 626a3f5ca6f04a959d2c07aca5d3ce5f
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 9f98110b9e8247dabd5db49bd56e6160
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# c9a18993e23c48dc991426e990a9ebb2
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 07d91f6f7cae4f90a3264d84f23a8704
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# df7340fdd66243c2a3aff3f762df51d6
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# a1b3ff78ae64493a975146f5a24d026a
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 4b15ef11815c4bcf8d37ec9d0b0b3d4d
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# af562be5aeca4f11a91ee08d00dd9286
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 9dfa6dd9387e4f3d838b15c985b076db
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 64418b3037904361a8133314932c8033
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 15d9276c2ace4f498699d01c5387d55a
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 86d27bea577a43808c2e226a7952e1a3
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# c5bbbfa8df78442fafb2441e9c107442
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 5f8147ca56414505a120c7c82a543345
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 7426b230ad0d4ba98e6f09d94d4ff070
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 68aecd52e0204c54a9c2dde17a99862c
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 6cdbf61131374de2a222b893dec4dafa
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# b0f39d7243404802afc7dce24046c051
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 4dcbb714d0a44a6792b9a1bb22de3cd9
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# b2af77542ef748bc864380b38f13a645
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 6e77c59d9a28414ea1359e01d0c53b79
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 844543ad010947919463992a4827c624
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 7a581890040044a0b6d61120c51a9ded
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 1dd3859c5d60498e8bd8024a1e58a2f5
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 2df3e972632740dba9db1b444d2a6453
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# d5b7a5544b1f4e18a97dceb6544bb1d5
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# ca1e6944062745d696cdf791922c7676
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 820334ef1820468595387da195e19884
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# e787e4f10aac4df6b7b8303fd5c03fb1
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# b14bdc4af8534e7cbc570b571970c88b
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 4807b15a1042434689a0832ef328138d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 7223fa416a32426aa31de8a791354481
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 90c6d700e819434fa844728044ca6d6d
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 477d68fcf83f4b91b001dc9fec3ff26a
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 24fcf6b166d449e986989807c3424656
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 7833c6717fab4a25a464c1f22121a83e
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 53844f1edaa84a2a905f107812aca54a
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# d790d5f618f6487d955f75a53bd27498
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 6918c12b0454456a98f2a4be3890873d
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# c142c6c705d344dca844ffb30472a977
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 0b88df2c14014366a3ccdb391c17ac33
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# dd5596f5555347108c54ab9ccd2d834b
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 1b411077647344e4acac93048dd5eeca
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# ef0e845cd7984dd0bab57b7c0a58a21d
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 72ce142c6aab48198fc176af09c303ac
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 124acce7d18f4a2e8d233242f58a867c
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# b231b803620245d286e27e540f3b1853
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 561be2f475c9498090d3ed30cd0a84c6
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 76d7cf401b9d43e7a63aa059ee0234e5
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 47e2a0c0fdc144d19ff08132108d4fdf
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 1edc959c34884322a63f2c82d20b1c8d
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# df4b348093bd4f84b03f7c4e31c15042
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 3dd1de3275cd42b297bf0b6b79560a76
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 2cafbc776e8b40c392d04cdc15df8f99
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# f32bd8d18d9c45c8bc99ad0408e4b362
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 25158d159d0047bea207a2d21469c21a
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 7345e2ee16d14582aa10345890f144d0
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 5f12ab24d7704f43b7eb410364681213
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 31d82ccdef5a48109488ca4fc7914863
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 127b8d5a5adb461984bc0cfde73da85f
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 6e2d858fd00e452fa93c059628e02ebf
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 2b481768c3454fdaa6e4df3dffca1039
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# ae124f37e75d4eea8b52d8c709253b5c
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# fecb12e72fb54545907a216bd7c83ba5
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# d9d351f1325447c290a0cbbd0cacbd39
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 58e6feef8bed49228e058eb00b2deaec
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 3981fae4e8db441bae73a2025c9329bc
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# d17c131ff6384e34996cd73c0d9b952a
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 9ddec6ec1cda4a889d54031c68224ab4
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 4515e0dc6e4f4500a1d05b4f70062fc1
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 49ec52f50e464a6bb6c3c6b7e1ee78db
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 342bcf95733f4ddbb890266bc709edf6
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 02a12fb9ea064fb6937114d6ffac75f6
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 7ffcf5b46a004380b607e6e62f283c45
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 204a01ff41ec4e619fd4b8b1b85eba65
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# ec7eac9354064bb8a0ef75e2637551d0
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 14664466ab644ac1945751d8acbc01c9
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 94c45acede4f4dcd94254adc37196af7
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# fe945c37ad5c4cf0947d040225d3044e
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# f44b347df3374c09a98ed4c828939478
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# a3ab2ed7eae24fe39a0818f8fe774380
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 7cd778b177ec4921b959d3d69870288c
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# a0ed8fef7cf2419a8595b4d60cc0b046
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 6a9cd1aee0a7482b98ea4ee5c9e42144
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# be0bfba38cd741cbaa45c0dcd900fc81
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 31235d800345435f9d2cb4b9778907be
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 43ee94b6f0694170bcf3c7c17d5ab2b5
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# e5f4af7c5d524372b84ca6eb8f936e12
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 6eb32af5babf4820bd8f95c4e3efe5e4
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 7f1e7b7f930f42f4867148ff29f953cf
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 08d11792db8c49a0a2c8b601df457ffc
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 82b96927433b40309ff6be0e9335860a
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 97e4d9c378e04e59915a13962da7440b
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 812eeb6aa0244d07855bb20d2114f379
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# e7213b3bb1aa49088988e4951354152f
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# e5b59551d7f44628ab4413c05193d540
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 7594982718a3465e9a93dffa4366ad82
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 03cc76093408471585c0c0d38fbcdd95
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 36262612c8094ab5b8036029fc82dc07
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 52df1e195e5a442695f37e0edec7d899
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 6c084b671f374dd3be139dde61ff6d03
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# fb2220f869fd4ad6ab7acdd3e63ae266
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# e9f582db6951467a9188b135fc3f511a
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 755c8dc896be418ca3bae6aa76828c54
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 077e1059ee1d412b9c5c684d2bd5eea8
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 9b4821db10e7438fa5fe85884e804f19
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 4fde8ed4c74942ccb509bcf6c72fe040
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 0ae5a9af357f429486ae508b9b38d509
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 8b2faf33ee20487993ff46b6723a1f7c
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# cccd0519c6c54ffaa27ffc0c470f2e80
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# fd0a97f638a74f128a36ffec81408368
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 8bbb53cfd9124149ac08291f9ee0a35c
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 4cbe8e5ee5f140d184ca6eba34cba642
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 2c93c67bb1204020ba2b7a58540cfcb4
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 5a24bc570b7a443cb02abf7cc63e1685
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# d4be9804158a49369e6e7b8c538a0d77
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 32e799037a084f468ef7e12e202a777c
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 3d070543d4f64647a742eda8fdcca087
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# a27e776187b443babb8fc71dbd6d6970
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 67450eaef4604557bf795dbe3e0e4bdb
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 76eba6692a9242638ce6151449f139f7
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 90afa9b80512413aa79aa801c08aafbd
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# a8067dcd58f641da84e4c119d827b3d5
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 31873fe0c79a4d96960cf0dfdca960ad
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 954f9424f22140e486614b5fa6252a63
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# dc4ff2d1fe0b413db3b85e98a7e47973
# a9a66af1bcd7441f91d11e920446410a
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 705ef95c57554384b1a8a86e47ba37cb
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# c721c74d4895406da56762986572c6d3
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 5487dc6c80ac465fb9988206cef12549
# 987fea5b48a44a53b7d12d2067906829
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# c69f178e6223452db4d0bfe5054022e8
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 8921522533374000b93dc29b64eb1fbc
# 637d8c4ce74e4bf7b9bdc716732f0933
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 33000e347ee845c0923c3e572f4b860f
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 3d3611be07254d4eb423e1eb3e0277ce
# 935bfda471ec4cc0b7203dc2a3a84e62
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 14f4ee599bc24316a52afc14ff41328c
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# dadf14ac96864bc6ba2f7f0255cba8b9
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# c982470ed662470b877fd074586a15ce
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 757165543a334ce08a9ff4d084c87f57
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 0490a2ff0bb547f281aa91692d6cc420
# 998c031d12a6464388a97ddae0660015
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e342bb5addd8431da034ca62614f27ef
# 4e8847b3c00b4629ba41d3dd35111f80
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 4d785557a2384c4588f58e41182ea636
# d6a5dfe19cac41ae828b0e699b91dbb1
# d7f15f1341934ad6918da4a13615a0cd
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 796b96b771fa4d31ad24e6ee6eeee4d3
# a9f693ac5a254c0bb9a35bda1dcf1123
# 358794429de84a549c6d3f1c02189151
# bba2959b1bce42e09407743122de7dc6
# 20a8dd570c8a48f1b2dc61e6953ac992
# 9b02588ca3ab423f8461f8bf7f993f2c
# 3896a2be5c724a93aa6c4cd5f21b05e8
# ab56ced119c74ed989cfd02588826ebc
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# e3cd77a8b17744eb85dfd79f0b27241d
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 217398cb478042c19194d0442feeb72a
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# c638020011b9417dabbbb233ae52824e
# 8d7d683410934a8ea254aa5153fa0956
# ad270bf799284db09d3b9a71d7653faf
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# c42656fe065d4163bfeb530270124b85
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# c175e4734cdb49ddb2300edc449fa75b
# 45f576cf78e64046b3812a16023c4d90
# 9e42f7bf8cbb4ec386f979ce108c774b
# 32fe2f06fdaa41f3acd0fa503ab89384
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 8524a230258d467d9af31646f1c92101
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 586ad62c615b4211b1f6eddc88180377
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# d6dc77ed6ba64d7ab559f61c0afcd549
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 643155a63d6043c094be2528c5a9ba2b
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# c98ce354c5444118816d1b9ac9865045
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 77a3408536ad4b2ea8b57d0c5fc21667
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 84acff2229cc45cfa3c9e131f923b29d
# ddcd72e8aba84cd2b8d403fa69881d38
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 955c5c13ef584da78b07f6b0c432d128
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 606f602d6445470b9a7ff05f2e7bf87a
# 9d6e42ad415546b98f6656f400b464bf
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 47ed7d934a9742238051810287463ccb
# 2bb82e02db3a470a800a96da13b72e78
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 5f23dd5da75642e49d0b5963127126c1
# f782abaff5ee4f72a394b825e90054d6
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 351c51ff17db4591ba869321b174901e
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# d3bb493a3b184e92a569bcbfe75b0022
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# a6fe505530004c24af48795da69c77ae
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# c7d1519ec0de463fb1c322d0de526b4a
# f6aee7d736b14d018e634a48480b5e0e
# 480f80c95dec477fb89b22b9e831722d
# 126f6fdbc63b496bbacff365326317e5
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# b1542d1a8cd24c9aaf57eb670e1f294d
# 5b3b9c6954e94d37831360cf476b7d8e
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 35c6406f357c4fe1a04ed0ecb595f8d5
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# b5f4a27a4c004ae9acdfb3ce059df33d
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 97c0b137682a47afa7314e70275a1e9d
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# e31865ea63694918a8543d8e443cf4bd
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# e1b5ba6167de48279640ed3874bdc81d
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# d99405b5e32a4b9db290c324f944a50f
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 937fddf39d5a40f7af096c1f4e569caa
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 00d39184bc9a4e4f8dc30b7c86f23cfd
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# a7b0ebbc1a0c49609c945c93a1530103
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# f5e7ea90439946c1a65f5a11f3d595db
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 95dac5f024a84f27baaa3f0201af828f
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# abe06c045ca14ce2981be61dde3e35c2
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# e30791891c2f406396fb6abdb99b8fc3
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 2fcd48bf427c40f6a2bb95321626dbe1
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 484adf56457541ecb2f052637dd4646a
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# a9a0364d41e4485e9711108db3b11db9
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 54be1685c37d446ea60c7459f9eefb20
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 5e391adf51064ce7a3f0641cb4bee164
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# bb782ea908c3480aa39810bfdcd554e5
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 9a628201aa434996b9b2e952c15cbae6
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 13f81514afe74a649125e00e1c20de9f
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 535908a4ae29437c881e561d1e5eb69e
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 2d00453f3f18467a8684adcfa9790ee8
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# bfceff6e79f944f0a41659a85c1be2c8
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 7524c7839f4c4ea285307fd62e6adb3d
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# b430dd9b58894e97bca134d656395d02
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 1b6173674e8b426db7ae5be7ada11b55
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 3dc60b1414714ff0999a825983cb07cc
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 529e9a0ff0c148109e217f30a464cda2
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 5d102704c0424b0f99777ba32d54b3ee
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 5052b6c3236f4c5fb4829d561b8e47e6
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 224c49ce7de0419cb7fdca877fc74ff4
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 4f6a74ab3d004f3fb6271f3577b5a742
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# d0d454d8ac364586a0c3a9089b6deb34
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 19d12c4ef77a4fec980a626c64d01e12
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# 92f5ca4c1b0d4694a16c2a021eb1e2e1
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 6afc3fa3b3c8489da15144845f092118
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 082ca9da11f64ca8b8597da2230916c8
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 173df89b3ed14fdab65465f350713bb4
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 2ab117cb3dc3433381a98434cadd2fae
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# d2c278440dde47d68bd884f6fd2db4cf
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# ccd78f895cac413cb6c301e5e9766f03
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 7adb1c98d4cc4e6196e69fb4766673d0
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 15abc0c76ee8487cb1654777c504fe4d
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 5cf7ee763d1f42bca2ccbc77903a326d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 2bc6d0b1a3e14044a2f413e6bad1c491
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 6626a97cfc964c90a0266a577fa8cee2
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 69fa7ea215b443108675ec55d60b5305
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 1017ad97957a4500a6dd37e736a7d0fd
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# b3d1601488434ceda6b7b8d00eef2138
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 1aa7035a21aa4d43a711e745e86fa77c
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# de339860ef66441788599f787701997a
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 78c1abf1b0454bdeb749f955ccfe7b70
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 952409153f0e46db9cc122ef0a49bd1f
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 79a32e9fb34a4d698c96ddf20feb6304
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 2ec3a3c398af4cc48ec599a75d297e1c
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# ad824622d5fd470293e58890317dd501
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 6cea6a10ea474a5f8b7156812321443c
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 2097dd9f25f448c4b8d923ebc26b4723
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 72bdf20e14b44d2b901c7694413bf424
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# ff12f968ad7e4d63acc1c19cb5b8aa22
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 684820bd1f5d404b8fa5c2d1ee30a658
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 7f56303d51674eadae639b0c71b92c9d
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 3063e1746b6148e397ca1184ca6c0897
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 13cde428247149a2b79841a791dad8bc
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 857188331d154c0eb64244cdced91cb7
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# cd8f7eb69e25401ea607bab1b88676ad
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 78737d8659744b5f826565b0040d97b7
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 9a0f4ac13aa54df8af9445b5f02d6918
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# a369b70e2c3341cea42cabd36f3d0e1e
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 69313d2ad8f64e1dbf901769329919ca
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# b01b017839104b46b77d98bb3ee5ceaa
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# dcf6dae48cbb40748fdc036454d4147e
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# e67a1798d1084b919acfee518fc36dc3
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# a744e843125f44cbbbe2ea007597896d
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# ce8dc6638391430eab88f0ace8e7f007
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 6815b7faa4fe4349b3a89b7360b5c57e
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 7cf6556750ef46a29e18d05b1a14c808
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 7228dbe8e7974f2ebc2ccfa3df74a4c6
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# fda1493cfb304ab8abf840ceec1cf7e9
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# e82e80ba826845fe97c12bb0d4510f4d
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 54718c13e481422f81e028610e5b6a0e
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# b920d2377e56420891b86d6d152b24f7
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 745201a544b84b018db3667c59aa08f7
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 05b864d0497642e2900a068a86b7da6c
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# adcc3948405046cbbde652fe8f7602a6
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# c16563c2ac534977b7cdb75d464089b5
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 6ce5e1c840944097b4d0edd075ac0fe8
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 54edc9883d3d459b9093b4aadc32b3fe
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 991178a9325c42e986cd892d1b55ac14
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 5d0770116c4248058b2d78558e4e6c81
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 62bfedb286794b86ab1927570a860050
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# d149cca603514fde8db952ed0e363419
msgid "|format|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 74e04f5929104e418010fa2d89932843
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# d0709110808341fd88732de726aaf85b
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 23f4ffd2aaba4e4ca6ea2e8d65ee48cd
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 35380cf4733d454781de43d906946b25
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 14451bf9e68243338343256f15ce3dc7
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 2a28c3bdbc3b49acb2faa72831eb9ad2
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 6cc042168f684a71bf96d66755cc4d1c
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 40aa55431ec2464081f98b8f100f9393
msgid "|no_color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 14c6d2e9fbdd45838334bb2e37cb6908
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 2e6abe399c3d4c80a6f1b97d700da22e
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# abde388ba9694c31bac77d8e2feb3385
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 672698bbefd24f1fb25d7610b95e74ed
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# fbee93da36654b3680d31a7752921082
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# c7183448f730488a8cd81e5db1e6730d
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# c4d68399bb754b60bc964bc115fa8b16
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:271
# 265012ba7d87473e851c6e03c019c861
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 67b2d8ba821c49eba9329e15db156165
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 054164f5ad244d07b1148aad4ee9a51f
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 14e6dd50ad984a159c1d6de723e08a49
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 93a428e6e923424fab594ae351feb30d
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# e22c0af5ccf8486098e7cdd5923cdac5
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


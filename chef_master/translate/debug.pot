# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 12:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# e4f766ff05354a6ca52de453f03b3394
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 458a359ffe5f40d0855d91b8a9f589f6
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# f1cf99a1fe744e8aabc9221ae97a934d
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 3905260da4534709a1a0a188e78398df
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 571054e05d7440dca141c7df88416c15
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# d7a9441a2de24211a880365d8c2dff92
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 02e47de6c779419180d30bb17f118a36
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 129eb8da85164c8686508aba73400145
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# f900bd4b1f5e4273b4680d3ea98c1842
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 926ab37ed3d647f8b687d69905be1253
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# aa07ba3356724aa69422175bd47ec901
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 4225a8a447344cbfafdd4cf49855be3d
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 05fc5121e3a043c79c545966ecce29b9
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 8c74b934f72e4624a831d6759300822d
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 3f6d2d0aa6c244ecae401eae4ae1b19a
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 05e37021e71447e6a9dceb00ffda7a90
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# e5cec10a976a46a18f5ed41914c7e056
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 2ff6d1dc3ddc4c9c9c2660ff703ba322
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 72b6abe5251e4f58b778b873a9b5c454
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 8961d050551347c0a54ed6718bcd2047
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 6a65ee0fd3e74cb6b1cca464a9ffaa39
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 24ccb7524f924051a3df8e1537714c36
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# addb7b7d484c48dcbf862a7cafcc4093
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 26b2873c26fb4897bd0f9f2b1f8f7b11
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# b622dbe3298742d8a8023362fe347003
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 2d224274af6146b189ec9b1ad64773c1
# bfb1dfed16c34e4a8f03378ca07f48b2
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 76add42e68f0462187c40f1019ede42e
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# ae80cba0faf041e783b6daca48c2f76b
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 6b88a5ba17b54d8b955285776ee6ceca
# becf3f17f5c7475cbb5beccf8e41ecf6
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 03e56c42e5ba449dbb7318ffa98b4261
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 7ecea867ffcb4ed8bec23f15cbb6a5c6
# 8c7291a8a6b545f18e0bd638bcc4fd41
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 06d88afc29c94beeb3c6d3cceffa497e
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 4a50936ba2b2492ea8a9f1f25d271a18
# 716db7df18224dd2a5a32c767deecf6e
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# f9f064891a5745648d68e9eff7688346
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 651bdc6e45b147afb7d2ad2d84cfa7ac
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 903558e35043449f809df2af4f77526a
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 6bd51504e7234330965c469990ed476a
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 41a60fed401848a49edea95e780a25e2
# 7052b5ac5cbb4d4aa8e13565ae32413d
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 4f986f48eba44ee09b3a33e79eba7427
# e18135eb28d34f308f3bcf95f9cfb752
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 1d9915efbafd4cda8b447703442d4157
# 2ee76195e73b4b2e9743bbaf23899e9d
# de2ce08b37484e50aa9c42fa3edad7c3
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# a15d1c572f974eddb6ee5374a4b8f7c8
# e417190ff32548dd8284b49f8f21f377
# afa1a2eeb4974262afd6ae5dad0d4dc0
# 94146b99b677492895ac59ddfc36c81a
# d8c2224b0984426bb7096c4bb05e23a6
# 09200304c9ea49c3aadb65d7e38145ae
# 003c6e84d88a42a79d82312e9e91b128
# f1e3e2f8f7e64e5ca1c6193c5afe6384
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 4bac6c37c73e462fad39e43108817d59
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# e4cdf10dc5154442b612eecb8b71a7f9
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# d8608a4b6ef54f999f2f7baff320e0ce
# 84db5436bcdd4e0bbf3346bac620ff09
# daba380cebe644428dfa7778b986a71b
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# f34db977f3df42bf9aae03b3e9b07dfe
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 80238891be854deeb7beea34e30b35a6
# 55a25e56025440758c65cdbaa06e4cb9
# 80c50f5268074f13bf1202cc5f110d6a
# 8093977927494bc9a670f32cb5c3f009
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 6f9e98a8b76e4273a397e9754088af17
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 27e114cf6dd64ccf98faf4e12f83d48e
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 56ce0a7081304895a085089d5ab3db32
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 1683a502827e4e9599118b01b9f14208
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 94aaa0458bf743a99266c986c9e052d3
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# a53ba02c21b94194a3a5ea745e4d145f
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# fa65cedd67f544d99bb4d3fd2ada4dc1
# 97efce6b84b5404c918d3b00d88de4a4
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 02ca1bfae55749d4be48689d0814e4cf
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# ce8017cc65484902aa750d47fa8aaf9f
# 21f9e615efd049a688b8750ab003e25c
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 82eb7b4513e3463286982de6707ad791
# 8836f7db3cbf4012a0b113441f59575c
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# e6d6d8ea916f4c698c0f7406a0c48650
# 04a2b3bbb0e540e4bcae39d2980de12f
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 7f8d66fde7ed4923a5ec60d85e78721e
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 7aca4f12a83247e683983a47f3ebc1b8
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 21c4260215684c00a3336c04cb0f82e1
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 23b0fd96e91f4f3abc4acee9341cf672
# a84ae0494df24ade97d407312f2645c2
# eee9b259ea834cbaa7098438a683d3be
# 4ad7d1476c5e4c6a92c9a5ef92a744e8
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 132576da82a841abba6c5610cd5d4029
# 388f510bd0604ef39b0039e60a8688be
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 251a672b352a4046a7894d52b889b339
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# aa54157238924923bb930794857c033e
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 80a90d3e632d4068ab06e5d489b8a1b6
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 91fefa35c38b48eab6a9b56852a5fbf0
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# a1be406760634760b2de13db377ba02b
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 47e421cfce554216b41ade9a5acf3ff6
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# d190caecf8f24a10a5c390a03ce6425a
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 5ce7dfbe969d432290971d1d8d65332b
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 05d3354f3c5c48579314f8a386468b30
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# e8bfc96bd04e4dd3afbf08ac37e8337d
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# e84f91a3347c41c9a3bd45acc60f6bbe
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# a23889670b884e87b373f351c0aadf9e
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 319f48683e6e40908984d9abaa061e25
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 536fa720dad14288b02b30e4c3e2a159
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 565f9dbaa3ff415780ff406f83e672f0
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# bb4f8bdfe8544e89a36892d56ed98bba
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 14a18dc2af274c1aa794fa53d72e11ed
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 0f885f88ea014898af878a2b06e08cf0
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 472f654d32784609ba40540ea9dc73e1
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 3bd2a48dcc56497386110ae68c014c9c
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 42f3e0a53b6c456a92db0c42ae2886ca
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# efcc70141495447389852c5adba0a69b
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# dc1726d14cab4e3daf48ce0544f48c2d
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# a11215e6b6484e30b2452d5967512671
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 34ed05cc4b554822a64bd21ff6370112
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# e2414ca8a62b44108c7407e56cbcc948
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 8015bb72c75744e6b9a6af887037455e
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 30fb5bad9acb49d8aca1b53dee282c62
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 8ade283ebb59412f974f7e24a68d4c24
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 729dc3ef4e3c4246aba15684fbcb57f4
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 02762a755b0448b4b2799be8890f6389
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 0d8030ba1ca94ecfb14772f4a8cfa427
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# a11f8ce926f14d50befe43bbe5fd977d
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 46af09812cc24e7ba2a3b705932b93b5
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# e52cbb0056b04652bb268110ea267679
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# 86b38410023a415b94a05f734291a0c5
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 855b2ef600be4245bd2573e1931cae39
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# f280c521794c42c386476f2adfa86b3d
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 827fd30c006042f990ae544808d46d14
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# e40e10acfe2c436bb20dc000585935c0
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 760a5763ddfe4353886cf9dc285f7247
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 3ebefa111f22458eb64dcc89c62a42cc
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 43360447c55046aead98cc371659f7f9
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 84926bc6c4164e8ca0d93c733d309f42
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# c7ee7d3c3a7d45e5b8ab1491d1f4dac7
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# c0da2d93142a499f83c1c285a5d77c0b
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# cf819bd195814eecb0f349680ada7ee8
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 75975b76ebd049cfaa23e54fcb2a79ed
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 9215c838f8e84039bd5850b2f812ede8
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 9b21f9e1ac68404081e2aeee82919087
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 2712c071d87446b298fa0cb6cdfc338e
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# e106f966c321433a88fc993c9afa64bc
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# bd6858d8c5a0434286351d0a4ba6960f
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# cabec49cbc0149dabe1a81474ffaccb3
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 288034a00d634ad286a29a910f15322f
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 1ec646849ef8401bbe1d8cad990c9bd8
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# fcc0be193f694289aeb4b99b7991b590
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 7d806c196e264fcebed9803cf8e7d2e9
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 2269c61984f44677ad38c679062aba85
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 414aa51866434826b1e6289e0cdee28b
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 66a9c50680f147c8abe318268fb06eb2
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 22ca9eff459642f1a1340f7e5c4d2e78
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 9762a1cb8102477bbc988754ddfc9d20
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# f2f0aed1684749c787fc4982ff325bca
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 3600f4aeb4ed42b18726408adc909ffa
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# b95c386248db4bffa17fa83afd00c55a
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 8d41cf9b1e2a4a0a9a44ae08dfbe3e48
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# b3fd94e9229a43d3a757eead87cd859d
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 8f0f1d161fb1464c85f506df3098eb21
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 68551e11c9b04a4792f6d0acb48bf274
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# b974c08e44484f2dbb2377068bc50cc1
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# c8a87bec5d5e482e816cbbad2ada6e92
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# ec19a91319ff48b5866449edfb7b74b4
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 90e775c05853420292da8b4f43b18024
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# a982f4762c344895aad2c6a4dfb11b87
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 244314a895e0498285b1b46224396fae
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 55999917882c485e839b07fe7c8b8569
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# d95dd1e4238d42b786695715b7e6c5e1
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# f84f3001a16c4360b83fbfd4329f15fa
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 3f8348a64e314dbc93a94e2d893f1a3b
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 090fc688a1a74a5eae18be0bf6db1904
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 99c54b4fe34547cd86cc5c420ba26cc6
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 24d6e739254247e5815df9cdad9b9e14
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# d0d2ce6b18f7473a8a36f6caf97d0b83
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 3d71e303f6084aa5bbd5f9a96a50255e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# a89b789306654c9c86a2d155b851efce
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 637c394179754420b26918a49b546cfa
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 14f1f65e939f447183019d20da00c715
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 784b90993b8f40b0b378e2f872e24ced
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 7c4b068dd03c43ee9ff68bcfc9d058cb
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 5d88c31568684aca8982214105a8fc84
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 2cde9ff58a184e6a8731a5714e909eaa
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 623572913cd74d358be548266085372b
msgid "|format|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# d25f755d47e94ea59c32f9b6aff43d63
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 9def6f8099bd44329e9d4ce47dadb1ff
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# ecaf67233ed1430f816c7203c9e54830
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 64d9b2df1ad54ecb8636ff2b25c14cd4
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 398598dba8df4931a5e30e81f318c2a7
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 056c51759d9e4af188bd054c5ce1e3bc
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 02cd824c034d4524a0b7b201503be2d5
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 438d61f71e65481b9155f46024dccd7f
msgid "|no_color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 077855319d1a4ba191dba7c43770dc44
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 9e190a21ce0449f596abb1370e17e1b5
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# cd18dcec925a4a29a403088b33e10c25
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# d2ff4b3441d94f3a9fbdc098385232a7
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# e064bc089d3a4e06a63359d350b3f511
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 76192b21bf0345da8bb18ccbb0262420
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 0d5a5e0221fe440da9d2a9a87c51c946
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:271
# fb937923b3b94ed19827dab021bd90ee
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 65a9f0df1ff64d188445b05bc05b3101
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 2d4f89b73a93490ea142acd243491c11
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 5cea3cbe62d94839855b1b4d99241ce5
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# fa2cac85933b4a8bb8f28327313c0124
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# b39fd93ca5034d738d39b46b67f691d0
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


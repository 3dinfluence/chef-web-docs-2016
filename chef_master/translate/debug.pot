# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-26 11:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# d5da39603bd64ce39a463b16e48608fc
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# cd8ddacbf4f44da89f2336336202be8c
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 130dcce82f8d4c1baa06368acd206a0e
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 4e63ea2ce1754b49b2057b0c8fa1b362
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# e88c33f7c8c14b12b8f109c2f634fd4a
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# e01bb333ba0743d48271b384ca7f62cf
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# c25f112f467d43548db020dc05106862
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 05c09d2d83bc454eaa5460bd115708fb
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# be1418a2b60848a499914cccb270f026
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 75dc5f8b944d4550ac5a28a882c1345c
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 87581291174f4729acbf395c45e9b11a
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# b2a71dbb02114893b391e848605aa312
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 4856e682c8824bb38add607481dde1af
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 2f8becef85e148bfa2f05b6c8b426995
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 23aca2181a5a415e866d5ec0c38d8bfa
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 27b73492f73c462bad7a5d945d382961
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 020f4ad033d94db1b8dffeedb7b3b9b7
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 932f6f6e9c3a4585a942263760a965bc
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 7f52f528e2524592942d5c93dbb9ac25
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 925898635014431c87acb2cdb67ac118
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 9ea67fdf44cb443d8791c4e4a7f66380
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 5ce3694ddeb04fb6b6feb8a1824d52ae
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# d6034daff5fd4f09a20bf82af7eddb83
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 0821a672325e452ebe1f4ab12f0b958a
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 01615e69eccd4b8f82683946337a6fe0
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 6d4e0ef7b1e04853851ba29d46693ce8
# 13e91d8fc8634424981c35432b37115d
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# ae850d4d33184596aae4597a4e7adc66
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 0a5915d8ef8a4dcd928c6794b7a6adfb
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 63c3a7efaa1147ee964c5852d7023454
# dfdf7844e495449fb1ac30aa9aa13f23
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# d298b524238942b6be4713d02cd029ba
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# bda10b40e4d74d4c80bbf5af4d7b39bd
# e0479580f0824fb3b058544ea2f2ea0d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# cd596b613660466f8689039ecfbcc530
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 35e1448a37d44091a01ca98e66d77fd5
# fc1b27d8afba42258d2205366eda95d5
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 8400bb9f7ad54193aec175b2546d760a
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# d8af74b47dbf4b3fa4e5b5ba3b7a05c2
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# ef40b69606a14840a455cad0a0b872ad
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 0b57277ebcca4e829497a270bcafaf8d
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 52295cbba2bb4837a3293beaa810a59e
# 6d3a93fd4b5b4dd19083044ce79f1f99
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# c459f1cf247c4eb3911924b47fbca855
# 16379b804e2240108a9e55f007200524
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 5bb8ab83241942279a58c849730a7bee
# dfbfa5b985484ab88965761f13ad4d84
# a057b11a6ed84709b4b0845e30d7e5ab
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 70eb53ba93444ff89a9d094530dd7f63
# c8d36743c37d4f95bafb83c1f84e2742
# 1fafe05a93e54f29998b5ba47be3519c
# 7fe5bf45050d409084538d32da90a34b
# 94be118929c54b1290976cc09d5b623f
# bb9e5bf130954faaba77bd432bb9888c
# 451855d17a3c4036a0740b8af30d6ad5
# df7e11fa01714ad8ac539c936884bf35
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# c4ee5bf1279a4b46bd09f185632adc1f
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 358697821cce42109ccb4a577244c9b4
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 376113c781794322b3d3ca9812d3b762
# 22b871b622594fceba30217dfa1ef99b
# 83e1f4dd52144031af2683d0c9a4327f
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 2454e2ca3c8d4eada8555886e1eefc5a
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 0492ee570dfa4fcf94f572f4ccdc95e7
# 5b63161983ee4823bdef7b8c67b707bb
# 2a429d28145a47d8b35adfda8ec394e2
# d36a98c85ddf45cca769fa64e6af9384
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# c303073f1df642b68efbcfe82381e339
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# ad6c5c781f774eb69811d69a2b853c51
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 7bcb0e21760f4277b422eeb0566de2b9
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# ebc93d82423c4238a430a64461020b35
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# a3271817144c4366b216bf4bf9178be2
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# ba832f67720e49f387ddbc947fe305e7
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# a095462a114045ecb9d07b2498fb1021
# 8eb2f5c79ea04e89bc2bdc75371c4b07
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# b05aded42a5046cf942584d074c5f55e
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# e08a74bd9e8b4979890b6981aaf394db
# b04148d93aab4458929d60b2109c28cc
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 0171e1c00bb2444b90b6094e3d63cd70
# dd9a85bff5724869859c769ccd123cdc
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 58af905c56d9423891fc41c2916190c6
# 591cf2c7b4fd4ee491cc38387f4764f9
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 3584e339d7484071985aa20a5c987f8a
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 416b3cebbc744980bc850d30afa33e9f
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# dd2f65af14934ac4aa56307a432ab8fb
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# d79377af89394b0989de0843f7d75731
# 872eb82ad74346d1b04dd99351a14c29
# 480a48643c9847d4a9e08d04ffa5bde7
# 9abbee8107254aaf865b9dca475ee63b
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 7f8427db1c4b46009447eaed93f6406b
# 3973c1bee0ec42f88b52ac1fddd917d1
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 3e52c5ee7f8a48bbbe8b6ee81d50fe08
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# eb2cd39267f146e8a25fd2ade0f41a5e
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 442ed855dda1440795580f244104dc21
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 4486c40f2a7d405790ee3b80a22ec129
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# f5b6095e870d4c38910aecd1b797a5ef
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 4615ce4d1cc14f7f9e30486c1bae0656
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 06f14a33e2e54e528f4eec5d8dad7d89
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# f0e0be7ae3eb43e9a0285bb7296829d0
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 12bb469b98d44622b37492752822f4c4
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# cf39d2d8b0b34edc9698d27846eff281
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# a30a8a6b53bf44589d9703294f43fbd0
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# baa02ea40e5843e1b5555e6af8d853e5
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# fcec1e2178734523b8c3090412fc0b1d
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# b3d39dcc6be04ef594c4289b5a94c805
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# c4240b4797ad472a8117275022c5b5de
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# d5cfb3508422403baa3fa21bf6d62fbc
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# bdf7b7e624b24213b371fea4e25c4ee4
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 366f17953af54f92855fe2fef46380e0
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# cead6b9c590c4fdaac87f0884ec9dbdf
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 46486ce5ff5a43e083e84d52826d05e7
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# ca86d09d9f1f459d8a3c0b302fd858fc
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 79aa782c1f054645bbd216e1006ae202
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 3880a1b7ee4d407d94cad6632a7b6158
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 21a714e5ba86472a8f833e669fd340a6
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 32c4204b67f5432b9a275abbd902bf50
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# c150334fea654c58ac72ac5c8f3e8950
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# a4c1cd601f714747bd54b8162eaa50ef
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# d8e6370ca35e4816b2522e93e2ee74fa
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 93238bd365c942389fb91c2fb0e70d9b
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# f61d475c23da4b3c854c22cd2a80e98c
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# a40da2593c6e4af08728863ac34231bf
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 0373712dc72c4ccc97e7abf6cf26541d
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 245f1f0a256c4e9a83732fe58e932af9
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# af2341915d444307b61dec296d0623a0
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# ee27d4f66e8949fb8022fc7959eb9bc6
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 98d40ae3639243ed981927c9c7206b78
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 0cfa98a55f834939aa63685f706d0377
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# fd1c5d2c5ded4755adf6ccd8df023f87
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 7aac8d5ab7574761ad95671951d2591c
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 0bc4690960d84d168cc91cfe88ca1e50
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# ae48215f05b144afa623a63684312ecd
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 98d639589e9c47fda2f853596f751f0a
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 822c3989af994085a1e6a2c0eeb9c37e
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# a5589dfaf3184935befab5051375580c
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 600f3fd2665447b1bdfecce6831860c9
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 1945e363f5e04f2794c62a058a05aca5
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# f8ce3f4094384bcc98f742a9b9b242ac
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 36e58d7f24d0478cb404d68a5ca580a5
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 236dacd98e194fcb9fe4861d1f645f1b
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 1e0dd932910e4fccbd9743ec06556e81
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# f7ac5a5410f741d4a8c0eb717164a8e6
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# e205bde8bb3a45f0b1a32fd14e6b3f26
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 8191cb61152c46f48369eb929a86c3a4
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# f73a0f693e38440eae5ba9bb4702764e
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 906cbdf72d4c4765b3048913ca8216a9
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 8f4b957812964163ad5b5c31e45cf6b3
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# d19bd72753a8422da081463ec8ae99b2
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 866dc6012b264a0a89e62623f7dd5b26
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# cac028abeb024a6295c72e082ec63197
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# ea6b68649bf24d9694994ffab1d49a2d
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# ba012da26ecc44ff9db88b635577a561
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# d1a63c41d4434cd1bb76a4c4d7101d49
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 3185b6ed03c045c9b33b5063a53ff2ea
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c1dbd7b9466149fdbd108e5d54b7dd31
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 5b3cd7e5fcf24fda935d2ee9ebc59cf9
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 1322561cf0a4421b9fe305ca1f86d0b4
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b705a9d242254d77af7c5bccc5246f7c
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 2227d9eb3e754e7e88660c6b42e85830
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 7dd3a8a63b2e436eaf7a2c1a2eda339c
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 5ad1313184b241b69330a8d7756dd939
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 06b31e0072364efc954f83c4eed15f26
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 01c65e02718749d99aca7ce381ddee52
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 62e66899642146df8a470f68114ab9a1
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 7cc2d3f6a35b4bd5b60837d6d0bd798d
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 94e525f79a594905bc61d43c425205b6
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# c16732c96f154f03ab6699734171c53b
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 721c55d2397144c99124d4b85ac4218e
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 440e7b1170f84cc495e8a24353c4d49b
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 5161a4df996f413387c9daaf7d6849f2
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# d0d192038d5b4c91be0228d0d4e4bb66
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 927852aa94b04b618c6447ab491141e6
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 16a054f8786c4534ac2cec5541047ae7
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# aac383bf1d3f4064a9acf2274f9b26b9
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 35d0b6249e5e46629de90c8372429f2a
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 862131e9279d45258637477c864c8828
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 4ff953e939284c06ae7e53cdb8198ec6
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# b8b284e831514228b5d255579f43df75
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 8ac8e473867747fc918045387a8f3b6d
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 228c703e6d12474eb140c5d729abae3e
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 5bfbb98ed278445c8181f3f55020d941
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 8c2d06c4c5854206bfd710f6e02905f5
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 29d5909ab3d04f699ee7a5e85f315a4c
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 6e971ebc2af843c7b9c203edd6bf76b4
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 7b44bd6fa9354a5dbd7d7fe61dea3996
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# d6eb326c033d465289299e300448ccfe
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# d6479ad544af454ebcb4063dca1d3960
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# b8c7524ea3714622a8941f9de61f83c5
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 9ea12280c2974719896ac8996a83768f
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 4953c79f7a2f44f5b6e8eeeb856ab5a3
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 493774c480474b2fa5ff9f0366d05c35
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# fb840f38c54e417fbfeb241f29b73b00
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 35756e9b3be84832b8f22c0663641a8b
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 93c5912e948d4a2a8bbe9b9c8aa77b65
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 50f9417231df480caa9c0254bbbd007f
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 1e96d234267e4fa79d1f67c9975f0056
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# f9aaf5f70e77401aabb8f1700d933ff7
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 11d5594a50934792931e4195dbce7f75
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# fc80bc4ca1ed4114aca468ba936cb1d8
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 7b8343c0bc88457fa64986d5f8291d6d
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 0333ea6cd1bb43f7bae3249af747d2ff
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 38f1adcb56be4aa5ba1c8b704bd6d3c3
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 82244bcc07de4bcc8d6256126091c553
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 804aed97755d4697accb74d0908797f7
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# c1c0a9951e9d4fbc8085d1e0ee95c7ad
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


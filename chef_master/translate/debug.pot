# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-03 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:8
# eee2d4cf5fed47558b4d5b0f2453d401
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 23f7674a4cf64299abeaa71220ce5915
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:12
# 6909ee5edbb7428eb8567a6c0a5b32e2
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:14
# 273f6e3ffab7434ea6b60768aa577135
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:15
# 1ca2b1565217432f847f92cabd01d27e
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:16
# 07d26a2871634a708da184afca87f405
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:17
# 8ad76f205c8244ea8e2b9bff04b306bb
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:19
# f70e6e2ad5094eadbccc49dda3cfc841
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:22
# 36ae6d995aeb4e94aaba630d3c961846
msgid "Basic"
msgstr ""

#: ../source/debug.rst:23
# 6fc974dc4230477dae39a6f4f995acbb
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:25
# ff3d55e32cb3464091c9c6fd7c122300
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:26
# 4357e5e5025046349d31219d1119d1a3
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:27
# 9ae7c458e3b84e949a9dc2ee719b6c42
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:28
# 1af4c6be54204f4d8bade059b4d50846
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:31
# 772743fa4c174838879b37e8ba13765b
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:32
# 2a44818ae92248499a4877aaff831609
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:34
# d401a057b4ea43b6bfec0b6a7094eb67
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:35
# 5a40adf4cb02442983de9ad5cbee467e
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:38
# 66616b5f7c5946fbb1321aa9f11020d5
msgid "Knife"
msgstr ""

#: ../source/debug.rst:39
# cb975eea53a04611aced24194e8cdb61
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:42
# 028d0dc623144dfaa1f0d4ee53b95484
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:44
# 9f6d5ec4407d48fcb240426621a6264e
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:47
# 2656239b39144f999350aa012f885317
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:48
# de482bf3aa494275be192929e90845c9
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:51
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 2d870689f55a49548c79f2dfaa12f2a1
# 03766395696e43b3986f031d55781900
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:54
# a5b0b912f3d24dc98dee9ca2c9e23556
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:57
# 71b3af25f02245a6a733a9d56be46e88
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 4cf13cd486bb452aad4b62a343f8a74d
# 3228fc8bbd9347009db481ad66e2913b
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 38f55a734bbe40cd9455f7d53a585c93
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:63
#: ../source/debug.rst:192
# 5506f6e17517484d91f8637cedea0a9f
# c37e741fa0de460e9463328df6fe2e69
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# b178c5a7011845608c51eaa3fe2b917a
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 3001e8705796459e8bf6b188ce1b9ded
# a068c5fc93084c42b9019fad7f51168f
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 03216f12efdd47c488c95f2bc9ed0d18
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# e60134072d934e4dbab12a7573e4dedb
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# f738538655a648789e35a7c231d131e2
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# be2f50f3f8894e8b9d7e5ba24e10ceb2
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:67
#: ../source/debug.rst:196
# b2ce64af38dc4202adda1110fa1fdeda
# 72f34ffdd7fd49008b9c1ecf24c61ddf
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# b16fae7626024582be9e423a2f378687
# 8380ceb1c6af40bdb95854c8cdf36bb4
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 30c0f66280174be38c21a158a5d6cf52
# 99298c14bafd46ac8ae813ab8a5ce76e
# e88fcc3eb526497fa926fc554002ef7c
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:177
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:228
# 632eaf941b6f4ac681ae4319cab386b8
# 1501a7a500cc43f8aa62e014f9b323b1
# b44a943d8709479e9227843a2c7ddc6e
# 19c7de5b8ed74d0c92f003cc8d9bb8c7
# 46b27e817c644ee4aacd32b2cdae320d
# fa34ad471f184dc7b2194a93a560e1b3
# b84aedb7aa9f401d9beb7232384f59c4
# 4e7951d506da42f38b98a3d224733db2
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 7d0543f65bff4d8cb1595eace9d0dbe6
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 139761d210d74c599b52b7f26ec5ef5e
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:71
#: ../source/debug.rst:115
#: ../source/debug.rst:200
# 8f517cef342e4359a1f77cb423e83ab6
# 1344373571cf4dd58e48307a581e014d
# ca0f41bac45240d2904a9b776e92d688
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# bb93015eae24455c9197cf2f28af44bd
# 8cb3969de14b4809a37263f09c4ebbfe
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:227
# 029d393cd21b4eaea138275103209cdb
# 20a90a80436646299a32c94247bd449d
# cfd8aa4e638b4090befea3945b60798f
# 1955cadffe3f4731879a92b61203783c
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 58a65b2f6f0f4bca8c54f6db2f7e39a6
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# da807142f35f40929e25d45fc6e9e86a
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 5c53c01203284e0197f78cf40e05770b
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 2f997085fb5e4f5988443b051f7854ff
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 4b8b3ac90b6d49d0b76cf01b457e49be
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# b999d2252708442b904f1ac2b63cf063
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:75
#: ../source/debug.rst:204
# 683f50f563bb416b93e4b6f8ffe319a5
# 85a809fed31d43d4bab18d56729b348c
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# d2be1f12e93f4f5a910c6244e0c1433a
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 0d78c176d3b648b5ba8eb149edaec760
# 626a6a75f11b4ec99655c6938252e94a
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 26f03edef9c3405b847ecc0e32d4bbd9
# 0b0f42ad022149698dbcf1ef0ea72960
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# d23415312929409d92e8cb00b0effb82
# f23281ccad7848839577616df717ab26
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 0a04aece5d124884824456143fff1a68
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 0a40280687374c55b2943f67f637c6cd
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 9b6a78ad8fc14f4980af786e5d1c7d87
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:79
#: ../source/debug.rst:145
#: ../source/debug.rst:208
#: ../source/debug.rst:244
# 1de05c2d7b95406894bda3975fb7409d
# 1bf82b79814847e8a8be209ebb5c15b4
# 06e2411f637d4b2f811dcec8c60e6fec
# e56434fe86e94f81a794f62e993919b4
msgid "Examples"
msgstr ""

#: ../source/debug.rst:80
#: ../source/debug.rst:209
# 09bee71d8a7543b7bc288bf39b0c64cf
# 45f11d856b5949cf9af72c23d7428a1f
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:82
# 307000b14ca24cbb8a193a87aef84509
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:86
# 853bf1cfa7b9440bbdb00972c662a0d0
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:90
# 4799352541a744359e3a0afed9ad87ff
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:94
# 4b492d3527f24bb1bc5dcc5873304325
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:99
# 0fc926fdd79c4fa9a0648fa72d9c5c4b
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:100
# a810173ce5bb4289b4515be314702b89
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:102
# 9e3f8806a7c54e83a8c2a00480625116
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:103
# 8e1cf29344684c089d31209f639aa6ef
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:104
# 806396d3bdcc465c8bdca2e30120a962
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:105
# fd04784108b748c485af5a2a20e1e009
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:109
# ef4695b08070493f85054a698dfee9d3
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 92a2a1d70fe448be8e3c2dfd6ee87231
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:112
# 3d9e98ad19a3403099c1f0261bef0e37
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# af47acc92d914f64891f0e1483fcefbf
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 9c92b68904d54f7d841ccbbe25322cd8
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 9dc89060f4734ff49a16bc830e2a6eeb
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:119
# 5717bd6020f64caba2ce58da10d77c50
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# aa333b16ce8b47f28612c16358961aff
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 4508090f0c8e4c599de4e843a534e764
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:124
# c070475841204368aa10804da4874f31
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 116390509cbf4a2197b860322d7e6399
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# c5675d1fecec4467af5b497990f7d870
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 6f77eb6dc152441682f4bbe6d7bafbb7
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 875e174354804748ae94040679771913
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 2de15eeb74c040f9a412f656dfef518d
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:128
# 2e0f928d363f43c1b6c88c7f0c622516
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 41906f6f38694756adf5e8abaf1b7c70
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# e96dfd43b1f043b6bd7a2bab8c416d35
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 86de9a397cd14d0d8b9580cd4f0249a3
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 5c704098b96a4e14b66f7cf830d2c931
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# d7bf069688134f9f91b582ea1975dbac
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 763bd437142e4d8da6e90fd7f7b6712f
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# dfaa18da926748f3b11fbf87cb9223b4
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 62d967dba0e047c098efff2d3d47846b
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:133
# 4415cf33e17d4579850b1c80cb0a61cf
msgid "Usage"
msgstr ""

#: ../source/debug.rst:134
# a482b2743f614f1cafc92b959bd0b416
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:136
# a25cb2d1452e48f59648124aa6309d3e
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 5215b56f82a442af9e4bc5be3aae6fdd
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:140
# 24b477a083464f41a56b927d2eca595d
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 428252770df34cc685070e179702ebd3
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:148
# bb4281a6d2ee4aae8ce41a359c9c2ee0
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../source/debug.rst:152
# 31afa6676ace49ce98e34ceb45dc9797
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../source/debug.rst:156
# e3438a4416664d239b8ecfdbcdbe5d94
msgid "**Handle exceptions only**"
msgstr ""

#: ../source/debug.rst:160
# 3bf58549a95647979fa18d0e187f26fc
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# a474a5a900224e79ba81c95652ec225b
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:165
# 6baae37e454642e99e120e538b611b6c
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:168
# 2f3c1788e3f4494180e84b47e468368e
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:170
# 7b8608f536e347f2b8671a2c75935100
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:176
# deda6f97796547d688cbbb9906954241
msgid "Mode"
msgstr ""

#: ../source/debug.rst:178
# 7177d2f9488e41ffaecda5226f061bc2
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:179
# c3bde925d1f147668d14b90abfb060ed
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:180
# c32a885f495345ec9434d520f36fba94
msgid "Solo"
msgstr ""

#: ../source/debug.rst:181
# 3bb3b2ed47e14a02902abaac17f86783
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:182
# 641643b897d449f39570957b50ebd704
msgid "Client"
msgstr ""

#: ../source/debug.rst:183
# c10b5156aa5c4fafb29e6bc50773981b
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:186
# a46dd854caaa49699b2e51ce74075ba5
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 31b8c15f5c094b5a8075ae12b1033a47
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# ec790da071824c899da11f61c77f35cd
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 299ab04f6a554799a707ca72b1d40aa3
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 7e44590a05404fc19e85fbb6b4d672d8
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 1a0d0498b68d4e27a1fdd5cdfb0e26e1
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# b2cf316b0f7e40a8a78a883e408ed019
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b2c0f6e6bd3548049694a465f3151dc0
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 2bcd1987fad447c397d796b3cee4464e
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# b4617bce6cb34d968174a47e5c7bdaf7
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 415f9845403740058b1473556988cf27
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:211
# 9b7556d567124ca9afbdf8070500a0e6
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:215
# 5da5357d0a42454e8b41a2aae8da29d4
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 4f3ff76fec8c4c459e2fd74fbc8df036
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:220
# 5697febba3104d9c821c8d5c21b15d2b
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:221
# ab74496dc9b94d47a815baefb9265b9c
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:229
# 4221b5df015744fab551550c424be1e3
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:230
# 8c883c820ed7433fb0f8c98da4951423
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:234
# 1c8d7ecdc473425989e9187a551367d9
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# ca583fe0c1a34603bc88e84cb8c8cc50
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 4f1eaca2c77348a68c66920c1466b3d3
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# b572f5ecdc0a401096922e4b5831b0a4
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 04e97fbf225b4bcaafa9fb7b6b6699ee
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# b2eabdb99de349caab25a0d858c6c380
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 54c2a0b8a5604ece9f073440bfe48b82
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# a5d7d822ce434656948136a8eca0ff0e
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# d61dc42dcad0445b9d01b165c1c3d367
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:240
# 656d028f858e49508bd73b9ead6d542a
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# b567a44565354528b76fdfd6baea45c4
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 04ed1f079bc64b2b95e001f038e91281
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 579fa38a14094bd4be5eaea7bf73836d
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 124f9e8d355a4e8f812f2f6f57c146fd
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 6de7c453a86a49a48b8901d584aac093
msgid "|name environment|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# eae085ef20fd472a90c39ecd59c821c5
msgid "|fork_chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# cd86a8cb6c814e54ab82b220b148afb9
msgid "|format chef_ctls| Other formatting options are available by using 3rd party formatters."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# a02c6e30f210439291d7743717c9dca8
msgid "|force_formatter|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 954d6146b20c47ce8b23bb6cdd597665
msgid "|force_logger|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 940ba282e15541eba0626425074d403c
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 132c950032b1417387fb5d5c8d3c5942
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 8a636be653334104b807a12b1330fe0e
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# ac20233c7e3e4a74965101f2afc6f5e2
msgid "|json attributes| Use this option to override ``normal`` attributes set elsewhere."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# d0fea3655e7942dbbc574e16eba9419f
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# eb80bd383a904e67bf321145809d8c5b
msgid "|color| Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 6d5982b2123a4a5295e85810ff12b40f
msgid "|name node|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 3cce88cd17204996b82ece10e954046b
msgid "|override_runlist|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# e97851dc46e840ecb01dfb644488a853
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 1a8c66052f1b4452ae23b41e2fdf5cd1
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 473194f3beb64d959c23e8c24fa38f01
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# cc805530ecde406385239019bd7c9da5
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:73
# 9e26ec9e47a74518ad473a773890721f
msgid "|whyrun_mode|"
msgstr ""

#: ../source/debug.rst:245
# 4e4e7476c3db4f6486d3111ef460c7ea
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:251
# 84e815676b494a18b7f141718d34f50c
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:253
# 0bc7f994f803434f84f0949d3fabae2a
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:259
# 39c373502d5f4e5b80264e4bea3ae233
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:261
# 5846828e86c345f4b8b27aba70317777
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:267
# 0e129897d1464059b1bbaaf9b3d6d783
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


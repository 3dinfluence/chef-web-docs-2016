# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-14 12:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 9e119a80f33d4eb5a9d9b51b6ac68462
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 5ab79ac03d89486cb5a52d295b22294e
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 8ef680b9bc524853bdeb28ce3074ded1
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# fd5804744306482ab620e4a0e0c44373
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 21822de7b92f4901844a85a5c956785f
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 7b33ccb90f2a47bb8d956d3fcb31e45a
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 6ea08a9e1fb14e46862767f6f54b9e8d
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# a2b4d93dc29147faa80f8e891808c43d
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# adfccd432aa54ec99d630537fa982a65
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 621e181432c24bea9f2f49223681bf92
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 34d674a449bb47e59c5b736c94498f5b
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# bc78bc5ab027438cbdb38ca7efce65a1
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 68ee51b492084bb58bc7d1581e50fa43
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 3bd69f3d04914ea5835b525ad0d5d1e3
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 551e57d0f9d34ac497d92db802da99a0
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# bd1f7f413c5e40cc9cc3fdfda0e60c49
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# c59bd33357f54888ae59ee64f9f66a50
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 717726d597d84530bfc4e705147a82f0
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# bf29fab7f69c4bb9b1ce1cd7bb0b5d8d
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# f1f2d9cfe36a462c8234ea3310acb54f
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# f4c81ce31009421d9c8fb6a674772ce3
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# dba7b972fd724f22bbd865f3bbadb7b6
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 422ac3ec497f4886a6bcc7c5f99d6e88
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# bde831747309464790b7e9c6abce0ded
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# fc09b71f96a34821960e1a998923141d
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 2034f04432cc403594619c65576788f8
# 975774ca240a48dba87e7b411b8817c8
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 3328cc4a4f5d4a1f9f42a4ec6454d8bc
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 075c1d7bd19f400db48f7661d44dccdb
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# fc75c1ec7b0e444dae8503ca8b7b8ad3
# e7adcc9090e045bd8aac9a76bb06b92e
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 7e986a7e2726467bb062cb87e46b3a52
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# de975fea656a41178fed32c5a7b29301
# 2a46104c8b0c401f962a96b9e547c2b3
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 0eee5b853c714bd0a806ee8822ad070c
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 6cf5926ab1db4b458ef877184c7e9c17
# e7bc79edbd5446208ec50bfca0eb9f61
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 49e5a6c4f7f7483294583f1db79142d3
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 13c4808a4a1643b3a03f3e18d2565ed6
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 67737898487145f7948998e24fcde797
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# efe31cd0c38f4189ad3c7b1255bfadb3
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 395c84856d5d440e948fb56d28e9d488
# ea050beb4d1b403b98ff6a2093568333
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 39bc266c0b6e4a1eb241ed42e440538d
# a2af6465a5cd405eb1cd4c867d6385a3
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# fb83c00430484e2fb33ee5d3ed6057c2
# 07ed4b060fa749a9829700574f6f5cf3
# a2fd60f4175646d781775326d3435df5
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# d7ff2ba0470b4a38b83635f5cb06bf9c
# ec1afd1411db43f18f3b17022be48e2e
# 7f5e4c8d16d9462bbe2fa3b9aa6cb867
# 1660d4d9b0b44cbbb87e40c0a3302d8a
# f3003f5e54e64616b75124db61503d7f
# 4cff0b01b62546f2a0579b0a021a4408
# 8f8d72b5f50f49baaf665379a8759207
# 06be74b3442e4d68af5055e9c525d2c4
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 8705dd2144bf4c63b3d030f2fde14906
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 3553fedebafa47ac83ad4fad354d93de
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# c052fc7882cf4da5a2eb299c569e5186
# aaebd486a7b648409893533faf37ed53
# 4ffdecbb9624444a99f07a888516dde5
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 83a718e467584253aed35f0a68dafec6
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 34b872aff90442b7bcb2a2643ddfa912
# 5e149b22a60a43349f164d6500be68a5
# 86b690110bfe4593996983c03f615401
# b9d3d5db68c54b4da6246daa00a62ead
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 339741a10de04068b87dd7f59ea908e5
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# d41d63eab2104772a5b0875fe27c218b
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 9f9b31b6aa1c4009bec3091a26d56645
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# c05c9f88219c41ba8307cb038d1a3b58
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 30c4ec83569440a99919d9809f7c9e12
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 9798b91be9494a58a8999b60f27a2b71
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# ec0e4c0be5f4479a98de544b75e66d20
# 94f4a04f0c1d4aaa8c19fa4f75070d45
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# e53a1d329ebe4257ab90978e2f663d84
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# b8503463641345278e4e80b5a2ccd228
# e670e73f77cd450d8e2ab38e8d8115d3
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 42966a9c96934b42ac75aa908301b4e8
# ff3d0d3701224ccdb80f702a6b83ea54
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# e4f2723f2cc74b1d898e1cacbe69466e
# 5c9945b9f037432886310d96e2dee71e
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 0df2933fe52c43068ee75c6fdb6d8108
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# f8f071faa18e4969af933f1530da3a77
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 6b210bd6b437463a813049a82cba74f3
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 83cdc61428544827841ee1264c05f4b4
# 05455d19c36545e99c9a3d3414ef0ae0
# 53b4f097332d4ed486fc09e7fedbf917
# e4aac5016a1e44f5accbd52626bae58e
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 5ff1f4ae2fdd45f08930d5dcede5ab1c
# 9e16c9a1c5ac42038d084e0d8e6b4da1
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 1ee134201b0843209827ac7ca7f27527
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# fa82615694204e23b2f0fbfa1f84ebbb
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# b65e40b7541041e98e1808cec5a20a82
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 675f466d9dbe46e8a6e19b8c786bf09a
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 8615d68b49594e4cb07c92a010254391
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# ae6a239056ef43afbf429cba492d0fd9
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 4e6acdaa45bc4e8a8957a7265617d968
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 3df5454f206a40098aa62e12478d5acf
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 882ae49c0ef1441ca2c2ad4e1eaf98f0
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 11e0b75a9e374233ae70e4783e7bbf33
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 227c951d6df74faeb9e5b4b8723fdef9
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 24604dce9eab4c80a06dcee0c16c525a
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# e98becab72af403d909dc6d2b88d348f
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 4b46cf5fc29a4f659f1747136bdc1f27
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# cdc23808e6c94be18cd9b68e8bffe157
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# bd57b8fa3607479ea9ac387b6b93b890
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 47f391d5ec344fbaad283ed6309a48a9
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 48b72395d51a4cbc9743ff8f1c3a6d42
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# fb12a4602ecb41ec89cdf06cd02508ab
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 30137248b3324094aeaa293d24eee68f
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 920955d40db741e19389d342c681a6d5
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 26b442fafda846a8808de8d4fd036d7e
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 5315f639ec5740009eba9f54616f991e
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# ed0224936af74cc1ad611000daee7111
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 7eaa0e544683440f9140454771afd63c
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 0a2f086419e943c58a8e827d84753432
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# a0729a83ac744c669b8e417034e61890
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 4fc2cdca37b24f148cf7fe315144d432
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 207e3b40ca294fa198f05c0c2012852e
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 970f36496dd447409649c054d0cd095b
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# b2ab7b506a30497db4e5f8e3b22c38c7
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 5044ccc3c0804210be6395fdfbbd8ad3
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# d9cd8e4a0ff041d6986434dc3f052f58
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 550cbc25b7aa47299bae57ee535d4115
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 4de9678ab41d481b9b7cabce0c9c5b93
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/debug.rst:159
# dea4589f81b7453eb30a887b1892df50
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# da4ae61b1ba9496993feed6edf083a95
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 109f9108daa441509d457723ceb38d2e
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# b8ab7a56d44f4ba8a2bcc57f3310f726
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# b7d366dfe59048329de734abf341c3e3
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 6a35a040d69e4386881b5094805bfbbb
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 60939b6686b54ebbbe49a1e7293d6ef3
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 95ae8087d9a6468caa35dfe77328d0e4
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 433470057a784b29bf88ab80920443c1
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 774c359f238b435a8ac7b3d9233f063d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 7d54cb79a63d42c399837fb1152dc483
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 978303a5409c454f90ca1bbcec96f8f7
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# be875ad247a04343a2727c2552740949
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 017ac8dfb6604194b879ce7b0688998e
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 8818ea883b834e229160ec03a7b9e87b
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# af5c4edbb5904ff6b167ab95b0ceaadd
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 76aaa09766104432bdf59b92070bb492
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# e49ef763897f4efe9e9abe3eb58caaa5
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# b607e37213c44248b41a5faa51890951
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# aaa9444c681d4de8b5a0754c16431909
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 076530256c6141afa778be1ad9b4756e
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 4dde6239e7924c67b7203d1896a99abe
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 4266390a341e47a2881b318a92c37280
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 2fb4001aa798446da94ab951b0c5c5d4
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 043df957a1dc4ae4915ed96814ed15eb
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# f858cf54754d4670acc05df704c088ef
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 76c6a6d224f3424b81d12b308d6a3811
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 2d4626df050d4cdfae966980036f8b28
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 69df2dafb58f46eb92e6b6db0dccc482
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 902700f2d7e841febd2e6d39c2c66cbe
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# fb2b4afbad1b4692b2b58d88e12f2482
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# e0e5808a66f94bb082297690b558c88b
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 422d178a474c4a1b8eb7cb8e19d5682d
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 1c1de6e510f54d3e8542d0e2749ed3aa
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# dea2636877f04635a2c81e93c3f94fd6
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 1a9a302c81b4485ab967963fd8b14271
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# c7a3a6f2e661499eaf1750aeb6008c57
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 0b52b7d483464136a3cae8065d99c5d1
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 91b6fa1f67194a318e2b4cc60cc9f72f
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 397d73238e7847bbb2cd6431dba70404
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# b47e73946cd443af8a6d98707f3166da
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# daae9355b2e54d59a9f9598bf60de576
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# c496973073554b2ca70ad34e53eb9f09
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 071d9d459edb45fb904f889e86c50c30
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 0016451e5a2d4a05870c02e59784a2ba
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 3e66d995d5b9452ab0e2a4cea3304013
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# f3f6584bbb8146bf9330e8702e8b282c
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# b060f206d72c4e94ba5d8f3cfe0fc0df
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 485c098f995841c2ade7634cdf670942
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# ec7f166a652e4140b2057d21b680eb58
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 08adabf44c0f45d68298dc92874b5aed
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 4a885d8b028d4e1ab1d0a5b6e33a6bb9
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# b717bd31c5c1498297b6d7bb28bd4bf0
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 6e30a7cdcce44af69f9b7a084d4466e5
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 8165498f1a364da2a230856c1af2edbb
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 6e88bd471aca448e8716ba3d61531f4e
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 07f39a6d040741dda1a43dab358d1614
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 1f70f0e2c32441479f02e72198109470
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# e1db9ecb3f9f46bc8ffc33744aa97b4e
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 5a3928ea20ef41d0a462f8ccd04a59f1
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 95c29b7bba8d4eb9bcbb6f1361343032
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 850e2d2ac05844e1874a880348bbd4e7
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# ab3db386848a410b867073673c89a3f3
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 9845b19d06094e9187ab6d123633863f
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 3e68cde87685441db76b8fce1ced7aa4
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 5cec2ee95e7a47418ab5bbacd457a428
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 5e75ef742ef640029df7b33c5ae33b21
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 83a8cbd2779540848c3eafb177834279
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 99a21f4a75bc443cbabdd9aa9aaa2e8e
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# f3d9f55dc7cc45f7afe7d680ea4c2d15
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# f921a082453a43709b52f24331d34e4f
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 54cdc5df66614bafb92f43326860803d
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# af909c870b64496fab9f45e53a8df964
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 72c00b73fbe541dcb0e4a18358f9ad14
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 2026e944044f401385245f9b84015313
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# bca85d5101ca46ac993245f77ea0db55
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 3974dc17be4d4aa2bee96b9fd68d1e7a
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 46b2055b9598494daafc04f008cf2de8
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 9d12ba468ab84b20b835d4d3d1cfbc7e
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 15:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 8907c3c749e64a9981fd2e31148f9104
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 5782b07f6fe94a818076042fa52d7136
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# a874eaa4a7ae4310826fa321eb893a7c
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# e11b321c5b5840f7b69d4be318a9134b
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# a3c16f36f8fb450495a378c1f511956b
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# aa87018d380a4e8ea42bc335549783dd
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 3296fe9b31ea4b03bea1690348682023
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 4a2409e609554368ba1cd112ee2f39bf
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# fc0330eb605849b5a6160b077292c5dd
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# ab30ed9bbda64d3893180257bae7fe68
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# c89a244074e64dbe8031cd7fed7a7edb
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 4aab3dbea5614c78a8ad4bc485cde251
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# 0cf6b9938c304094b347a32c9cac077a
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 937ec108f30746c2b1f055ab2d100e9c
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 4bbb462087e34bc0bcc9b86e1ecabb42
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 838d5523ed214457b6e5ec0ca6e3fe90
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# ee3d374a6e3f4707ab36da17403aeec7
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 3c02b1f3ac664654815b4664f2d45362
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 9da1e490e486429d88b17e6a25717e9a
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 53e4e59ba931431aab82378c1671e294
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# d82d8df5b67f4e5aa4218509cb988316
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# 3b8f756f36f742708b15e56aaa04ff33
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# fea667cbe5df4290b96bd5bf1d52b354
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 2c2ae8e0d1ca4a78b7a86dec4edfb3ad
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 641c34a9d2224598a7fd189abddcd96a
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 2e1a2529c8a04871997fa4cf91a2ec12
# 9c714ce7001c43528a63eff5b6fa0e62
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# b3eacb5b1a114e2ba7b182bf9467176d
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# f7e199f86fbe4d098c3ba837c7041cae
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# ea0817b7d197491583df3de108858e79
# d815f105449b45f9a5ada154a7029fca
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 007ea44ab01844f1b298c23e36ab0100
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# 4517a048eebd4c7a8f47c9436c45aca4
# 9683b3eb837b41879e9ec9e12ff39176
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 4fe9bb866bf8473fb0b622b03e950a1d
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 6d8e9743d2a24a47be6ab06884014afa
# 619030c9f0734fff9a6af3b7e7174e6c
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 5b075a9926924f7d968d6b753d090828
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 843e2c738f02408db6fd58eecc16ca7a
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# e462ad9bbc7f445ea0820a30bd77c4e5
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# cc258fa00bbe471098bc9e6ec4469976
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 49c684dd429c4e6db283505075dc8cce
# effc03d37bab4f5ea7800b3a695b23ce
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 214e7e686f6c4b17a890d14756f69d92
# 569f5652242e4db0873d2a5498894081
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 0aebfda00e49428a9b7cdfb7755ac4d4
# 5f5e32bae4944ceeb951d6ec4e2cbadc
# eab7a0bb9d7042baad7df4d961393927
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# 3ec66975c92042728e8672092052ee70
# 202f7125ce3f4679aa537033a2fa12e8
# eb311b294d3f471c926a455b31fbb066
# 0db6df1c334f490483bde07a45cb15a5
# 6a694bdf2bc04c5d8c1ba633d148878b
# fbba192e37414df4964c3f75dc051842
# eb1a99ae59a44b30b68861ac2e3b14bc
# b2cb0f5d9bb54749950f8c8e51232f42
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# dd8584bc87304754ab5d155cd385dc25
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 349a376aff8a4531b432a5a6380cb3bb
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# e635928f94d440a59f4941a5a9ef17b8
# fbf5d737c2ea422ab37dcec9959c400e
# 3cc88849a52646e18d0c8521aa41bc92
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# ae79c807549e49c884e1a0a2ab251717
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# ef52ef51af5740a1aa76944b97d449f3
# 0fefeada26ab4358909b9be0bdd78f00
# 0434acbbc6dd4fa78baa4f6902cee7aa
# fd7c536d7497417598805d9ea4fad150
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# e418d4fbbdc5434780c9109a43b7d143
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 2203aa41d5c7412a87f386be6097c921
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 75fd2843d04d4ef79442fb9f0074c675
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 08a7160e188d44629bd89cd43641e628
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# b5efe44e70464622b1f9c2055ccc6485
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# ea45e1d871fe4764a45c81399f975abe
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 2723e10824a34096a8c4dc2a105de423
# 65057043214d4a638cda7be327183397
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 2ab4d38b1d81471ab4fef5b20557ea91
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 883a63e384cd47f096b0045cca122015
# e9ec5c5dff1d4aabb40a0a88feb743d2
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# fa2e49de4007491799ae599101400430
# a202371f46954c7f81a3f0f2c73077c0
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 1db334bd120b40889617e26a7b779b01
# b296d8a5958a48768a72cd2dc8ff023e
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 47d33c3cba214e03983f244529ec01cd
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 87b8c7c5c7eb40be8a22322a41615a6c
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 125f075036934445a7371dc765edad5e
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# 2cde43c6948e4b6d92e98100ece0d7fe
# e1326fd601714cebafcc47db48b7f7a6
# 819a7b3ef00e4b9982c5f56da81d7106
# 9f779eda7fa244d78d08702d488ee8e9
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# aa8c4f2d2fa34dc598ecccf9e8c85f90
# 70b378f3e8e94a8c9a54fd59b4b564d3
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 78a1684a4b8e496d91e6c1a28ac8a318
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 723f0afef45747c493cccafdab2e4e43
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 3f3c382508bf4682becd6ca03a8b9238
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 9adfb1bebc8345449a09176b597e8401
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 340e636e0b564ab5ac91d34606d18d8c
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 4ace061fdd4b4d63bfdcb05c1f46314b
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# ad659e198bb74dadb010d10f712780e1
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 8ba38852795947bbb2e0ae60a932ff9d
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# e0b20ab6eee64ce185ecc9eee579b65d
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 4d20fadd2dc948b89324385b0f7d6eab
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# d143bc10950b4e5a9bebc378594a6b03
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 5387fb5876ba42e79b4d6230a5dc5f38
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 4f3849aed4fb45c3a2994dde8dcc57ca
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 03c4090996ad45149b6cd95061feed29
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 16f9f8608e4040c8ab9cb9b260e82a4c
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# cbbd3105c3f0456b854493c02ff75c69
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 36d118e766c3480698215cafa97e1b20
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 3beeae0b95ab4b20b1c4fe8befc2a4d6
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# e7d830e36243408cb87e6b50c3fb1402
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 76731a239efd4e47bc5e2d2f4754c76f
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# dedbc5c34f9b4bd79be5101a9af333f8
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 2dec249580cb4f90b8d6d67d7e657f99
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 2f989e86238c429997c50e8a3da95cd9
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 332108446da047bd99168ba697dfa7ca
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# a91eab5788264c52bbf2afdfbb77e0a9
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 206d3e230e7c45658ff10f039bc67084
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# e7a38cea55784e089a8b167c6c91555a
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 5113a12302174fd8afd52245782b7140
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 6dda43148ff14bf69e875ab43bddece8
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# a1889782127e49ebacb791f257b2ba4d
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# a8cb6e7bdd2245e68f63570d6730de83
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 7110dd5f18ee4b16ad67bf4ef5de077e
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 62b6a8276f3e4feda60047a1124e267a
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 429df35b71d746699ad9db99b51af2e4
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 5a7d03721fa4440b908fc4d4838a0a23
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 2323b42395e34460ab9bfc24898bc582
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 9cc34d730ada4fb1908409228765a984
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 077676d2d2d548aca1b41ae1163765f3
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 55af78a0fc0c40458db545195bc0ac86
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 05bdbddd5420432ca5de3862db056a88
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# f585c33021434c7abc43e79050f86c84
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 859f93d01709413daa0cc9ba5cc9400f
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 8b874de3b9c4487aadadeb9c0cada2a8
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# e779699de59f4911a880d0380d4eefbc
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 0559184ca38145a7849fad5fa1a71d7b
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# b219e5f0700f44d4aab3d2dc0606343f
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# dcbfff7cb8b8479d82788c0d66f3ba14
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 38d073ff412744699167abe8cca4630d
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 5ba06128ffe446bd90b3fc544f46189a
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 2c9be602b6b54f0b9d7954977b6c10c9
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# a3da0826394b4767baf6f62f2b3e7a5f
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# bd8b33cf72fd482aa8879dd90317b861
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 43326b32ca444cb6b600449b4c4f92ce
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# b98099a889054dbf9056d78519b613f5
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 5039d53b8c514742a28657e08a561793
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# e79f700f1aae4da384e1fe92880ce758
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 81d2e4a608664e50930bbf99dbc7ea4c
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# d9269d5e512f4ba2b981096c1928ed14
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 3f846b936d484e1ba3f1e0553bd5f310
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 65e767be39aa48bd93a4bbd429ccec4e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 3b837066ec1542e7a376d641014aca39
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 7e4730b37ad0422a83988d2adef2aaa6
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# e76884ebf5b74b489445db4bebaa0952
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 3febfef86b574a02815ae3417e09f905
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 62694cf2082444b2ba977a4dd181bfed
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 718ddd8f9a714cf0922b481251e727fe
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 3301b8f3a7454c668438276fd4d5605c
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 2031a6931d1641c29719b9b025224c37
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 00e6ef63c62540358e82d33995f2a1e3
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# ab43e401a9464a8c8199bb9f61379ff3
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# d516f75837dc40aab0736a2afcd5f2c5
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 6129c3881b3143b396fb6abda7b5b9cf
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 006a4b80c52c406b8901a2f91af23a43
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# e8383bced78e4bf9a4fad597b797c7e7
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# c657df0d8799410b8689ec61d1a6652f
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 71daec19984746a78d8db7bfaab2b7cb
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 81eec2072d6d412faad4a35c8087fcde
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# 4011c09fcf074dab9e85ed2fa50ee2ed
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 89a694312e14466382734f98f35896a4
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 8523aa22a72c4b3ca6c9b653c80f135a
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 0e1634da6ccf4d1abef6998898038e0d
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 9cceb85f47f34292b7827931399640cf
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# c84a8eee8bba46e6ab9ad79003863fc4
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 122aefbe35ce4d27b596aa47a1883c4e
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# c5903ce5a5a64de2a5ddb35fcffb5936
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# d042b9b2db0e42a88c3d1959fae1a85d
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 2b6affcebb1f43f0b0545ef516883517
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 7a8bd229ace54c9680993e7cb35c22a1
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 009302dceff14c508aef9aea4ade7914
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 07660aba01224100bd1091f0af88c2f7
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 896f60e8c97c48bba6bc7d3681823fdf
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 4c86f0b8adfd47d68d7ce0fe2720472b
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 0c3d07b4f70a487ea904d4fa807f13c1
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 0228cf83761c4ef79a0b5a8e3cd78618
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 07d5b4821fd3453db6e15d7404da676f
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 48bc61d740344ae89fc43683f75f1365
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 201f7a5b880b46a0938a28db009d24ba
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 4a6b221563a84412bb4adfaacd84d5c6
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# d3652c25f5374326b2b09fe5c34fbf8d
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# d5174cc577d64bf5aabf1e47d38f5776
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# b3f392c5121541d1a01ab4b6b3bfebee
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# afdc77af730943f68c28ea0a5becd36a
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 7f9017d1583f4515831fb8fe134878f1
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 8cd78c28d0a34243a391a99f363f6dd3
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 1d0d3561a71c4fdcb580fa2ceacc644f
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 8e7c28a71c0d4505b1bc5474e0d79925
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# bbc38a1b73454b7e9219e7324aad35cb
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# fc25c165d2e24f85a44d0a232425bedb
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 4f40359f049a4b71ae41b1b5b2c5cbd7
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 6a7275f496fc432ba779869b8532e8d5
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 584a4804eaec4c66bdeb2f1dbd1b650f
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 396f1e84acb54e70a56766b5a2a292d9
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 1d185b0fc0ea4a30a1b6dad7e568510b
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 098433f5cdba4ebc965c1c31e574c38a
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


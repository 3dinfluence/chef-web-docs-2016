# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-27 15:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# c1f18ea93a3448719e1179c9d733c296
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# d8866f86d54e46b3bc98915507799411
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 3ccffb6340f14c8488b93826819d35c9
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 78c1aeb275054aa48253143d111d1926
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 20ed5634692e45a4acc93a3f5c7d34be
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 31146bcee9d04d61b341f4fce24ec330
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# abe9cd163a4b4ded94bb32b75ab0065d
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# b49fc5a01dcd4a8ca7353854323df62c
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 40b53e857fed4e2990138959bf7e1a44
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 2941245c30db416dbe089825ecda6904
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 78da9fc76d8e467e9a30413525ef0e9d
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 03aba0320b994325bc1783d59e12905e
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# b7ef2039189c4d2c9b32e8b33ee438e1
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 0f005ab172a443888b23a24c7e06ba26
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 7fc579be3eef4fb9a23653242827d875
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 042a178a61d040a4ba118036c48699a6
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 102506ee5c3a41f298d00e7358ed60cd
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 6c4786569b2049d2acad8e897bf6baa4
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 2194fb32e1044ebab72ff2a13fe8ba0d
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# b4b0a1bda6094f28b5199d727379d3ae
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 5525668b219f47a99b7df4cc3e95827b
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# f024a44baa364824a44ac9f1942f9cce
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# fabd30db6e9047818dcc3e92abc6d579
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 1f319d746ae34619b2d2558a779b7718
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# fcf9668316454e10aba80bc54260202f
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 94f09fbfa2ec4316b706377b942eccd9
# df4f57eda98a4c53a9ffd81ff786fba5
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# bea44e59837b4abb9e6777056d4b8f48
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# e55f8c84fabc45919dc43897984ccdd5
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# f634ae74689649d79420ef724b4bedc0
# 85cc01c0ba894956ac13adf2dd1670ba
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# f81215c282904522b71ac44b5d12289a
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# fc530ca224c2470c8c2ac433e449ab54
# 9248eb95c9d049f0abee542bccdf9be4
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 0af8026b4bf441818b4e69937b6c5273
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 73360a79c921488b949ab911185ba836
# 86c77c26c31d4230a2c6aa96aa9140d3
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 1a900073828141a3bbfd6ba2a58c5ddf
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# f4649cc79c654b07bc79e4f169290154
msgid "``name`` is the name of the resource block; when the ``message`` attribute is not specified as part of a recipe, ``name`` is also the message to be added to a log file"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# bb8dea8c16d5434c8ea77be8972ee7fb
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 17e84134f4f940879bcc3775ec2568c5
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 79340161fd8c49ae96243e92ea680588
# 412a0af9034141008e1266094a3bffaf
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e9b939195087425b82b2acbba908c684
# 7cef9cd6c2354270bf95ec21a5708bb5
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# cff521977dd3409d86f5cc08b4dca226
# 3a8301b139984d258e41f508b3195976
# f57daaa6b6274fbdb6bb2910f774814c
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# d2133f9788e0496ead231c9fa068f104
# a2c0132dfa9646b09a39be328508c174
# 62c9fc05f37c4a09a3e6a2920ee07278
# 4753a5e76b2c4b8d90308b592d71e62c
# 8756b1b55749491bbbe13731bb0d059d
# c05c8bb4708449949f3e49636d0b7550
# 79d6e8d67cf549a29e91a26d670a4180
# afc28dc15ef24e11afb38e6f0a61df84
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 6eca04824d724139be8276a536ab9b25
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 3d3492d4b2a34bd392707b2bde009662
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 68bb3b824bcd4a7ca064bf7620e93068
# 95b81adae7184b23bf2aead0e4dbb4f2
# b72ee325a577418595d2e02ab4f21f34
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 3e6e6ecc37d249c8bce0b4601b12d40e
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# c9074c8bec6e4f78bfa3c7175684573a
# af020d9d5a8f41e3a48dfd22c6475c9f
# 413c2696468a48a7a304dc923376bfdb
# cccc2aecfcd5462daddcabcaf872087b
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# e5d88f674be548089e7063856c92a5f5
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 94145a227c3941dbaf7f94e5e936da7d
msgid "|level log| Default value: ``:info``."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# fd4670280fee4c0990ce927c6749a113
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 5ba650dc188a4735b43f986fb4f223de
msgid "|message resource log| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# b9145309469641f7bb3d0b7b448956e1
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 6549bf111cf94579ad84c065bf48a450
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 8bd59bad6d3d4b6593b8771edb2244a2
# 34d5bf0e7e564ad39feffe595850956b
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 42777d31a6d343198debfd33eefe8453
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 76eeac877554459a9ddd5c2553c19fab
# 31ee65abfeb44a10b50b6191ad96be9b
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 411de21fd3234dcb85a7bf7e21b79c57
# d0a1779a9bfd4f5d9ab007538a75cb7c
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# a7c510d731d842759f1247cdf3568705
# 4dfea78ddba84ffba29c9fe231a3d714
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 696e352b68004e39a49d994bf44cd596
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# e40112c1249f488c8998641e4378df57
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 19c2c3226f354d239e7dc779f2b0d0e6
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# e94b300fbe6f45f0ab89abd239139fdd
# 9a8d4825660743408300bb266ce96b22
# c3e20556bf874048813cce5539585291
# 4fffd24216234cb9a0b61bbd1dfaebe1
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# f3b778cabefc4934844d399f9fae90b5
# e053cfc82e384827a9f13a2ae6cb8bdc
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 79a6bef36883443683a28a97bd206b7d
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 5ff99b6f9abc469cb2e9b9dbe2b56433
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 41c6f9e746584f878c0e7a6ae98ab5fc
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# a525b218b0cd4edf8d60942d850756e1
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 96713c3728744bcda990847dab90ff67
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# bd4db52f6942411390ea8df4e6a2481b
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# f9ebc888760946769f39dcf8a38a0296
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# ab4bbf058f0646fb923b45273f2e1f2a
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 9ed3525bdd6f45c49d0974e509f52c51
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# fe9fe31e8978413fa1ee0e17f6f93ab9
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 81ff11a1a23c4037949250a195fa0736
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 1e2016dab22a44868b167d4e525d0b56
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# ac814807814843f09cdebec35147528b
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# c746c3fa467841de87b6b05d3bf8e8ea
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 85fffb10ba664246831f77c07d001800
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 2a7814f71cc644c990d3b74f0393ae07
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# a55d5212a377465db9f90bd982443a87
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# fb4ac848c5824892968ab51bd25f4ce8
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# c963e05b308a4621a93d08a533a6a2d2
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# bc7eede545434c338f91ff224f21a1f2
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 2bce4810f53440a7a446ec8bc314d994
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 61276b293c494596b79b94b90fb4d493
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# f6a2674fb6b84592954cfee76b68f669
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 2d25acecc78c4843990c34b67803c662
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 53b0271e4859425cb5acbd2dec57bba0
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 844aadfcb08f4bfc8edbedb589db253f
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 4d7b42990ccd4b9ab6c493a4e49ddf98
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 25da4bab402a47028d25c0e10fd00a6e
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 3dc312e1e57b4116bf1b1317a8878834
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 610f451b9bca4468a81ed1f172ca123a
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 30bea8e3289446ea81cd796f9ad91dc7
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# fee08f154d3a41c89a6e044e0fb2466e
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 965f33c43b814593b1cc30c91c84a84d
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 085e939e354d418d9dacf6f9a91627d8
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 3719f9537c6949af8b3f07221ea2d5d9
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# bb2383aee74c40b5b965b02e3b7279ff
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 35036a4054f044b7b8d6f580754f53b5
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 3c3eec7d4b10494fba442532130addcc
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 78f5b57ee2fa4576886a872f878fbd9b
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 220fa74ce0884092833013deab94210a
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 21bde16c818147f88acdb3e7edf3cb51
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 664100d878284cee9ccddaeaf9c31d26
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 0fa8477ce5f6445cbce9a68123e0d823
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# e1cf1aa5bc3b4766918dde38f2264525
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# b90ac0fcbaab4f99873a6ce1a813dacb
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# e6d0abf9362441468276a37c8aba29f8
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 31d1137f44e6439ca54063069b3fda85
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 875b73b2a0b04858b9b8138bd42f6d31
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 61716026d099412bb10306f82f0aab12
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# 6eb2decda8514418a2f09a2c05b5a993
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# 95bb8d3abc4c4ae9a3ea3cb9369fea86
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# a2f005250a50440ba21b5689c79bafac
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 245241691be54099aedf86008e466b8a
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 14015a046c4e48eca2875ff717023741
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 0e2372aff0e642448c4a6e98a38641c4
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# cc32fd4afedf4c0294550264660d9266
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# f6e0c66720714fdc9b516e746e4fc3b0
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 9b63e2282f8c4643ab7d24df98aff4e4
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 01269f32df974557a41c8c4908c4554d
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 8bcb8a9678c5404b83ecf0e2616bae8e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# a9bcf4fa092e405194d35e152b39cded
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# a9465e0e7ba348c29f31f38e8e4dbad8
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 3b16b46b9b9049f49b45aef6775933c4
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 5893d3621499475591b9ac2d2a936fa4
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# d12d8f9bb3564e00acdfdce8bb8a4374
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 10c4ccc551cf49799fa472fc4b27ccdf
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 0c0de9127c664b67aa310a7f1581e624
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# e3b351cc26c0499db99467c4bfd1e1fb
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 21bbc4a2cd2d4fa1a6ed7a4f746e760d
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 374b4d07f94648648e27dd0ef0e158dc
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 1034c73b56bf48e2a3775963d91580a1
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 0dbe2ab986f34a6faf095fd30285048e
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 8507dfac644846d6a8a4a014f870175f
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# c64b15a535c948cd98376956b3a88fea
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# a596e879946f45a48bd51d51e5af70f5
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 0661fe906a0647c1bc56f0e697096aa0
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 356e8f5eddff47b0918cca1fecc902fc
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# ec2f832e374e42eeb4cd29765c3a8a92
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 7824815a3d63457d8acd7d0e344d39e3
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 07fa870146ea4d81a884760e787365b6
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 80e2af99293d46d19ceb76f3b79153be
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# b03d9f2b2a014cb0bfa5449f1e6cfba2
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 0d6b7169912a4c83bdbfd5865c4f07ad
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# edfef516cfe547b98c8d4bb636c10d11
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 5fd3bca1d1864208bb80ce546c30d0db
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# 1f12afc2fe084195bc7ac553a0b10a96
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 5719f41802af4c979c9ecab9f82e0193
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 0023f7ed08f74201b1f020bb508e2c9c
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 7bf323d4c1804904b83657b150a3c859
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 78874f3018ed4f68931b875edbdb4dbb
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 917dbe89a43d41a89cf8fbfcc869a08b
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# f912854be17b4dec8450616cfd32d007
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 8a8a00ca177e4526a4d26350ab123703
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# e1c7327dac384387b54516d27fcf052b
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 3ddf5c1f7e0646a6a4c8383c5b6974f7
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 9e6be74132fb421f9dfe8644de7f6ad7
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# ef1dd6c735274a5ea76437df9e479e20
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 44cb351933a4493c8c5a62c2a7e864fd
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 36b096be04ee4197935b8ea9d282abc9
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# ec7325f4be48401891b47bdacc913e8d
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# a7f5390963ec443f91ed962095c8e657
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 25e2b66d9be940408101597dd586c91d
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 70bad9f7982a4705a3a34f50f9debe44
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 013ae6c55f3a43b0aa7ab253b9fb8d7e
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# a374449896854d07a01344cd43ead736
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# dfaf387f768943f1b532a726486aae76
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 2b3546d0b42e4547af2387c8ffd2b3a7
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# 262aeb76a29841e5ac3eabd003447405
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 2ee292db8a4542b78a291b619f329212
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 888acd143f0144acb499652a40f3a577
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 55db2f73860c466abe9428bd933c5b09
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# bdc7d82c151d40bbbe9f577c089ba748
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 85d43fbeb59148b89656f7a3aea8bded
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 651d90cccdc94d68ac273414634552fb
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


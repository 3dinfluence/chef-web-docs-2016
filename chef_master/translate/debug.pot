# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-26 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# acf416a10ca34ab6b73a498431427335
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 44cebc24628441428547e22d63bb8c0d
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 6e5b25eb1b3f4f38a80228de814ca924
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 4ffa2adaa1d642eeb6996bc13e744b28
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 8eb6c7b23b424e70b7942d6c61518dbd
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 5167bfa22b294421b8bd64bcf83d5067
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# ebdbda62943143f1b13034869a73c2e9
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 730d78062880446f85945c2b6365a4a0
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 9ea170e8f2684256a3576dc950934e6d
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# 244f2783ff7a4e69b1ee94dbe75cc9ed
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 44f2437e078f426dade1c40fbb7deb67
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 6653f01d70f4414593866d5742a29079
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# d5f4123b44ac45368cbe064eb6beb918
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 86354dbe38d84405a275020c3f1cf9c9
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# c866213fc51347bc9675b8861cc0da95
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# b5559787e31741cab93977e9f018bd49
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# 3a316b8a5a8945afa962bf9a8f82df08
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# ac60dbf4d9e943e0979ca3f3d1fb04bc
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# ca15a8857cec4719b56dc47e2e03d636
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# db3411c769b74c6aaac539027b198492
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# f5dc74f5e9f349999b81d313eb1cb135
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# eb393f0c01ff4b5b85f146c5f8bde346
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# d8086381e7f84317abe0d1fcac72ce05
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# d4da45bf95f34e588fd846f83b9ea1d3
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 67d6f39721a349deabcc1b4f9b1d8aba
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# 0016ce53292644e69c4423a684693d7a
# 9ca64d1355ce427f9880e82a2b87a0aa
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# aadfc8d818b0465cbe27396863165e8a
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# 9add48cd9ca74affae982f42fc325caf
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 8cda5c528bdc4b04b83ca5bbddf97437
# 50ae6c0ed443408992d2116ae67f24df
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 6d38c65251904777be576e4af3fe8f7e
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# d4dea7b79bd84caca54bb359aa3bb99e
# f0c30264d2244101b91281085b80bf2a
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 27efe356736443cb85f123d771e5bd14
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 28a59598e8834bce8f47dcc311157eea
# 65843a1c173b4b93a3d671de552fe3ac
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# d76834e26ca243b4a0504ea6431a171a
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# 200a2cf62d184b4abc57db95fd5dae7f
msgid "``\"name\"`` is the name of the log entry"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 6518569c1af047db84f7cc9488dfd43f
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# 587809cb93354d098335a45e23b7d978
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 9792d5eb9bd148ca8b957dac8338c6b1
# 5c7e2dc4749c4a5195ed30a487fdd12b
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# bfe76a7ab7484a368192fcacda76071f
# 60fc652e44984bdebbd8a8de1650c30c
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c275cc3d4ac24ee48092983b4589dbd0
# 3933c46f0ae841b48cc81778fe75c58f
# 814ec48777214351bb38501ac35ebb7a
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# e4a2a5d3873049849671be92c7eec73e
# 838c7243458f4b26a0fd0cfddab99350
# 5a2b7d303dd0466a8203f6b5c87c7bfb
# addea838402243e9bce5997d3b385ce2
# bc065e2c4ad94405bd7e29bd7fb03585
# ac1b88783e2a4427b4bacb678b375e84
# f6d10f53990741e882167e553029da9a
# 108421099d4a4ab8b14d808cb4846fe2
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 7dae794a693d442ca79d84540da4ca80
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 068681a458c0489e84c62e2a1300624b
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# eb1d21b9d43f487fb113ba42d1efdcb6
# 1eaa7741abd241d1b88404a51de70df6
# 4d3a534ab39147c4ad8126c26fade34d
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# f480837d75334f47bfb349370bdad2ad
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 22b0aa746280485eac4b9385ccd67d8f
# 7297312831dc48c89cfab9a10028b9a8
# e22a938060654a1ea312327176df2dea
# 23312490b7e945eabd101262f35e5d56
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 91314c83a16244dab14e3ebe9158cfec
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 557cdfadfe9049c3a024e43560f1fd41
msgid "|level resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# 6ff3da6d0b3141b1ad99cf494dd82934
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# cbe79aa6572940dca6905119abc2b9b2
msgid "|message resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 17d05d2b4d484386a50e2f6e5252d6d3
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 7915bab20d4142f4b420a13fa6ebd4c6
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 0750c13fb95144a294b2ccb38fded00d
# bec407c32daf40128061a2102b4abbb4
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# ea937f6174204d5082cccc207f48e1b2
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 60f0395a052348d5b8ba2ee2bbb2b5e8
# 15bdb1e393f0440d8798a16619700653
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# ca7480ac21f940deb6d5e3d7f93f5a5e
# b99ff134b44c47df86879b9daca3482e
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# af1082e387304f93aeb6183dfcc58c5a
# 7a8e2a92dc8646c49c455e80db491244
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 47736a7301fd43ca9696b20ba5a98396
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# 14f7e975370b446593c88c7c1414571b
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# cffaf6e1ce204f93bb252992034f8db8
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# ab510669a5854261b2af5530bac94769
# 4e3f697b12364d9a824686fe08256a7b
# 30b891d2f32748c1b2bcd636bf90eae0
# 1b4ebe74cf9942ccb96bf12a72e5b4f9
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# ae37d1d3aa704a999f82035f30550a38
# 78c38e95738d40e2b4cfce92418a1d22
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 60d08f64b5f4440c8a39fc3b8c447425
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 4cead9e5638f48f7a99862be4f898f9c
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 9678ae5b90c2469c89bb4c29c5ecd9af
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 2a76e784613e4af7ba330cda2c2f4862
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 53b5e9ca12d44527aa148d6b2bf3dc92
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# ea3d7795fae548d09aff8f9a16afa184
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 23f56f8ff28c497c8e1aa88a1f6d84d7
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# c869cd393c0e419db6658728ffca276a
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# a598bdec35b844d58b31dbfcf708fd56
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 5a1c7f8ceff74d5a804a1e1becb7a130
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 455e08493f1a4b3ba2b76d29da6be940
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# ce2470b0a7ba45deacb95624593ab20f
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# d0d45d2a127a47c7b7608d1459145451
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# cbb4a62d28f44e6487752b84116884bc
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 3f0afe704a9a4e08bce24a277a191731
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# ec2ee166e7794739af40dd73a0d52a36
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# d9cd4c29d68c43fe9cd96e06f245cbe7
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 8e42177ce8464dafb9dd272533a5b594
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# f05f9918aea44c2eaa3138609552fdc6
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# def9e763b5fc451d916a60e80862166e
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 9b43627a528040d790e958a827decd74
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 1d25147492154397a7ab539c18a1df5e
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 929bf7483ab24808a8e661d92d78ec88
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 5fbd471654ae4bbe9aef85c4ab802d08
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 5bf32c318732469a88766a59bdd0d446
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 6749e7d90bfa4c5b88d88ec35c0d6aeb
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 6d17533dd46d4e5c8e37d28b2acdc81d
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 133fd443cbee456dbb1d1758690aa533
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 5dbf4612999a4e16b8b731a297131907
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# ebeabff7cd9a41f2bb702925bb9b7126
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# d23ab52f97b34055ad2264d8c85a3ee2
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 0bacd71fa4254c8c8cc27cc5bacb9b7a
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 2eb8c06e530b476593d823a52586cbfb
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 5495bf28fa1d41cbbbf8679ae01e265f
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 0eeb180923554f338c031a16c8dc01e8
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# b4da0e3c82a04604af720a97bcd681e1
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 8f5bb00b30764a3fb712a12a06c9e9a1
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# b9c02d4342564677ba8091da71d6d6de
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 14094b063ac74df7badac6598f858c9f
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# 4ac4336daa8a4bbb8d3ce076755eb044
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 8f50611e2c0841c9bce6b1dd77740469
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# 78d3fcc3b1a44afca01f0de4628ea942
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 4bd81afecfc94fb2989e9c17e3280db3
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# be17520fde604a469153236e9ade9c57
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 15a4ad7e54494e9ba3078bbe36a44431
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# bd31dde8c7d244aca059f8fd35225d8c
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 60ab72ccfa614e9eaba89787d350e3fc
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 4ccd3773a4384f9e97f09722fbe6d54a
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 9910d71387ed416ebba9369bb52bd7ef
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# bfa659b213ff432eac5b08dca43b19b3
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# fee0bf7b8abc44b1a8c5f3231acf7785
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 42b63516dbcf4232916996c9d2f3c4c8
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 0549551c0a544688abad05fcc0703b96
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 9244dd72dbbd4049b46bbbea563a77a3
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 52c4601d586040b5ab2c4e46dc822e6c
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 0566b4eae7634dd58e0ae554a7dd0abe
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# af8f5af797ce46a388629b12aafbaad1
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# bfeb2c130a9742d181e2b1ceee6f7351
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# c4d9719f52314c87a0208229b685d2bf
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 114e6539455742f7a0638fcb39bf4fe8
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 0b545f463f2246918a48b0b8a2bacc68
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# e3e9f6815acd4e3fba9fda421c1fc93c
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 84cf5ec1cfa14acebb12691fe432702f
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 39e6301a37dc4fe8ad5b634fee3f22a8
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 6671b9b9000840c4a310f02959346fa5
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# b23f861cd8a04d09a64dd415c931ebb0
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# e09cc26dc2b34a0eb64416dd1f166c0f
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 240841ed4ca84183a4814e10f48e38db
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 7324a77a7e3446d49b4f39b11a2ae5d4
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# e59d6f09481e42a9931702ccf1552b41
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 714a8349392b4f31b64a58c89a140f74
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 3d67566a060247359864f8c1bdad9c6d
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 1734b694ae13406885c887b18fb91ff6
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# f4f8ff78a8fa43f0ae41d09a72bccc22
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# cce1398e9e664834b9013988ef96fdbc
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# c62cfbc2c5564ceab588916db4d4dc87
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 27332697356348d8b1a24a1f22f57f34
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# dc8f1c0f6ae64fe4aea73f6a0c97b69b
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 5846eda47a3c43e399542437eeb66446
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# d1d00ff5618242738ea88e8baca6f659
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 4a5f4d305b8343fdbb7040702bf252bf
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# e9f5fb9369a1409e8d4bc7a0712bbb1c
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 7fc74df9269d4acb91605c140f229995
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 5f21324f4e14498eb18b041d2514907c
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 3d6f98aa00524d7a8ba1ded28246a9a0
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# f6f87d5e2208492a85f86172aecb088a
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 8aafdd709217460bae2b040efb00250a
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 05152448da994d33a88b9d64d054592e
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 159c8d9fea794cdd95aed9d089e560fa
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 2d9edd1510b7454fba3ba0897f13428d
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 53ed010c97d847b2853db046026fb4b5
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 3781add829e14b549a459108e194a834
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 8a80d2403db54f2bb1ba88f10a802d8c
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 4152657e276e4556bfebbf7e935a9b32
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 0d0d8eee05e9462b8fe5367eb35091aa
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 60448e5196e4422cbd7130c83ec1b33f
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 571a655499a04316a95d77b61a4173c3
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# 0f66c1185e4b452fa6c9f4af5cb7b3c9
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 1308be4fd17b49c18acda1c776cb3139
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 767c3ed96f6f4abca2ac08353cbe4cc2
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# ef9fbfa36b5d49ada6dba4561f9b5985
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# e8ee6a722fb84a4880af08c0b7535d5e
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 8183b9f66027407293d8cc77cb2cdc1c
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 4d734c2c1c204be1b3c94d3b249aa0c1
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 6b0737a48fa5404d8d6805285bb7d4a9
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# 3709a21b80c949d780ba4e791cc388bd
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 7decad00ea9142e5a10d9f8ab2014025
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# a2997b99820f4dfe98dc5388a238dd05
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 49ac0adda7024ab6abf0f768e4885350
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# eefcc3a629974fb09b1f6300c2c0e9ae
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 83178e5d20724c078cb646cf886cd1a9
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# a888761dc3cf490caf64f305298bd181
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 9071d4646b4f47bfa71c8014f2d90098
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# 14039dfcaceb4484bf80ca48c8ba5ee6
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


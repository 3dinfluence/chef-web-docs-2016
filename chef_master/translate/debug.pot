# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-06 00:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 2d6e261a392b4a02a3a61ebc5f7c822a
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 50d1a235646641ce8140ce0658c0bde2
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# d0bfb6f89fef4aa686f1fcc0862ffdb0
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# c324dd6033be49eb97e78c9bca0b9345
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# 2ade62b192f6495fb65679f580d1244c
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 9ea57649a2794f2092cb90e973849515
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# c27b7c1fae4d4305b0584e0023a98716
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 5b5622a6624f4195b3702acb268d0fa5
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 8c7dfbedeb8d4bbc936be23f59673172
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# de6bec708c0a4cda979833b78aac7097
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 0d0ef62162db4019aef4c81dceac87dd
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# 8f6ff677a8c843b2aa68002f9e6f8892
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# ee463f54209b49a9ab218c70be580199
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# 6599fd1824a1482180a5b9d84a6eaaf8
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# 600e7f6560b849419923d783af8a548f
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# 4388b87381694da8a4358c99cc858be6
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# b07857b088fb4e449dc5ceae1e5f1340
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# d8b459ebda4342e291344e292ec008fd
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 09db5cd9bcc44e138ea0b98c6cc65254
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# d3c3353f644d4cd0a060d041ab4431c1
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 241d70fcbce94454914b3f0c30796eb0
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# b9c550185d4c4b2f84771061c01e9b98
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# 51d5f723342843ff81012d909846ab0f
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# 0ea89c3bbf02496d9bdad28e10fef045
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# eb6e05dcef794118bd63d70a305d3145
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# a7ad8e5e25164ca097d64b69cc6afba5
# 6cc1660bdf1c4a3880d486ce6e8a4343
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# 06bcf6111ae74bcb82c9870079696ac4
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# a62a3e479b9e40e5a8b99d998a83d7fb
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# 3e8eacb8e09742659226fcb387e2be14
# 7bad5bfee34d47498af4b5ac18ccad90
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 55ee50ca5a7f4a6091c71a02a0d871e1
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# bc2bdc33ff8842e7b2dc3b5054a5a25f
# 7df8e0bc68ec41aab59ea358e09806ca
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# e4ed44e89a8e4734aa3570fbad7efb09
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# a7425d659f734e5397e1de8eb9d168b1
# bad633397949406692f367ad4546a2b3
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# c087bda1cc1744e980ca4e2a1d83e659
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# d2941861598d40f6bae51fdc8b40043f
msgid "``\"name\"`` is the name of the log entry"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# a6c7d4d52f4e458494ab4eae6740bfe3
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# d600e02358ad466ba779da7d02f2d352
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 7f391fcd7486483aab9f252298646150
# 1f01dbfbc03546d3882b6bfa01c984bf
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 01a8aeb584f645ebad7f24c7b006718f
# efa8382b1e0b4276abceefd2a2925590
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# e2075bb6a13e4381b87a6e37e3410455
# 71ae13abefe846679ee79ac8b63bdcc3
# 01e64167a4064d7a80b303297c166548
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# adfc71fb780d4cd3ad3610b143b5adf8
# d9ae7ebb019d4b56a82af14f0e694fb9
# db2913cfdc484d0187aab5720dbb5635
# 91b4458112e6455d8fc0c1a9c2ec0fb7
# 8080a5306da84258bfea8131eb10d533
# ebdd273963344b8f9c896abcb38ead6f
# a37101e28ae64e4fabfa2bf97ab93a3d
# 009f1db69f17467fa6ce7c3c83199248
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 2d291114fd9d4b51bc98f861a4afea1d
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# 219f3186b15e4066bbb3b03828b584c3
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# fb94cc1c839e46589aaed0448458b186
# 8fbb420162234fb595695514c4057e32
# 2213521ff436440ba6dcbff445e736b6
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 4b3e55036f0e46978faa421d1e86037c
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# e3b883d42723490794e53677fa257946
# 7d4f765fb3b945f183914922c5b1c0d8
# 4ed2a6798e5143bab2d12bb4449bc178
# 713dcca7889c4a2aa38ba208a43a8cc3
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 0dc0880212e148b39748bbdac99328c6
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 1f773ed8a6c044208f5b62f5215f7f76
msgid "|level resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# e1f66f933f364d5cb200c11119f2cab9
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 5cf25886ba5346b4bd3381f83ba29e5a
msgid "|message resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# aa411aad7acf431faf09e497b8ee46d8
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# 18f8314367074a4a871a4066e7c8ffa2
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# ed0e4103090c4f05a14461647e81b8e3
# 7aadd4f8c36946e69b56b658c6b4e8f0
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# 0f3dce3154ec49c2b7d3db468651440c
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 3946e87533d042a4931bacb1aae1b3e3
# d39274874384413f849e0738b8082d19
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 75823319cee54952b8657899029d1306
# 661deca7533e4cb7b27d135b6b6ea720
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# fead105b12bc4aca98a18bf917e9c4b9
# 44db31cc427242af945bad1775158ff9
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# d9b256ac20804717a30678712fd63f0e
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# e2786f44f49d4ef0a01f31f4f28d6d3f
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 22a22228888b4b7f83fac41a79be4f2f
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# eeec9e77b2274ef9b01fabd2dd2d198f
# 37ab3f296ff1485981ae193362083226
# 21eb595fa2b349c0aa0c172f5723ca4f
# f64dd5c34fd84c4ea3eee2cb9ee0eccc
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# 9463945bc1e644658fd939e2f00e7859
# 49fc96d7a70348bf9199bd7c121510c2
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 9413a43c731d4a018bf260d538d0f8ba
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# fefcc67c1b32453db259136f131fd71f
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 3e8490d768ff479794e304167afe18b2
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# 61fb150931a44a149678fcbbdbec231c
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 0713a8cb958543b6837f219a6d4da575
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# ca8dc6229c864cb69a47f6db90722377
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 82c6460ec05a4bf2a584178e42194626
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 228424227aa64be987954aceabad72d7
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# 3cfd9c266a0f4cfa92557e419a576b08
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# 1ebc40f224ba4f5d970f7f994a1d8b7d
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 1ec372fd3e7e48e7ba47b98060df7e27
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 1ca09b2e09d14b94a5234f71c252027b
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# e738663e466f4c408ef1f1b698c75245
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 57d68dba4b1844be834d19abfdb32580
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 6f7d1cc10df84d1eb2edb4f799253730
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 68b1005c6f2e4aa284bf3edb81dcf601
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 4c10233e404942498dfe29f0bc46cde1
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 12a579f8e5ba44bb8cc18ecdc87b67ff
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# bb38b904be154710924e9820ab840098
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 96d23f08f5db4730a2694e60dbc6859c
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 4e46a4abc0e04e88aaa70e61aaeae636
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 5e021a83dc094b2781b3125d0db9a732
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 5e06c8418aeb4b91998510ae57b87da8
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 1c284062665e4815b22e082f25e311c1
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 2232030981ac4d55810e35dd530aba19
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# cfc781acea2f4fb4a87b25c755268ebe
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# bfe4d6f020ee4207b336fa82d3c88186
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 3945dfe8e01743dcabd1e4f157d85d48
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 5035329b554947108c0b288dc8e86bcb
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 4d917dee82bc47fd800bd4e9d0e55e12
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 4f6adfebbbe84146bdb31b11b1822de4
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# c8afb033728d445aa3c66bfc05773515
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 8251f7c3435b4fd68978429f2819daf8
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# d903116ad6ca44a3869daefaac15a20b
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 8f8bfdd1170a4132a5b9f1dbbda9b399
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 69ab2a102122489eb2f2ca71c68d7985
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# 0d37864dca144fe9baab384e71f5b728
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# e27ec2af66914b0fb4dd593de559a124
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# fe941278e76145c491a724cfa2737942
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# ce68e21fb01f41b4b51500dde2c958b0
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# 16e0975f5aee45cfb4f2605f2df47447
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# cd09223264f549a490de1cbb7133c4cd
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 10c5443a48a042e9b59cfa486e1bb450
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 95482fbd3f394bd1a3ec24b7b10ab1ab
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 7021ba602fa84e3dabe435d648f7261d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# 5cae6936d4094ca0b1ab505eadc57ea2
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 0f59e1bd076c4691800d3301508c1990
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# 4e9058a129544030b29022c866717d2e
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 3001a24bff154c8bba1ab143f3f3991a
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# f937bbd1d44c480abeb6d470aafc08da
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# cfbd2c3c088b4e7aa98a17de70625d64
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 73102dc8427a48f4a06c6ea59cde4e9a
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 999f4ce1c4174c9680069a97a2fa8ae7
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# 8122b953b8cc4d9a8a67eecc8262d457
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# 6be2776c641343cc8a11315dd93ccf71
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# 3521940a92a14d188b46046714adf1ce
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# 2be3adfda9eb4fbab3047a7dc074b27c
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 2b3b86d0622e4257981570a2d536f5ad
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 99d6f1fecdf9453482eca9b260f2e7d5
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 92cf3ecd968441b3b0c339aa49d2c63e
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 0f9bb68659a84de5bd9d53190ee2ba0a
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 5b283cba29ee4c41ac67fecdbe3349ed
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 34996b8eb41e46d5a3a71fa02ea2d51b
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c4a30571a730447fbadfa8d97fc02ab7
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 26d1fc5f42dc47ff85a8274043b4cbc0
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# d46b9a51374d4c158125d49ae1bce089
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 9c96b7b4710045acb6947daaadc80eb3
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# bc897c3f36dd414e833d7c765dc3fa45
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 3fed5c60bd484b0bbd7656dc2d631d2e
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 67479ddce56441908d1df3fbd5c4c582
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 3918111ae9384ea19ebbad978655132c
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 31bec0e098824016a9a90f28ed333ae6
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# e6981711572e42ea980b7efa2d3e1d3c
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# a93d8731d710421ca21ff7f5b3af2844
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# de54fb74ff5a4ff8a856ede40e3788f7
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 40f5c3fac1a44922a45d5312d368dbca
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 9fa16d7dfde24bdf8cd09e807d5e4183
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# e29f5cf4755a40dcbf01806480a1997a
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# f8dc49c6b6c04f9b8df27b3a7aa15332
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 716402b1111e418cb4910595fcc6fc72
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# b965d097f83a4fb8b9a286c64619687c
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# be7819a1bb764fe7b7e6bc6dbcfb8d40
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 088461ce16e5497b8864a6b9e8e9909d
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 83e12d8f30f144989aaa0782beea99d4
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# cfd4acf6609f455ba194d96d2b01e4c1
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# ef1f7d7de82b45ed8439a1010c618db6
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 06ac24a4ab8748ab9e1adc49a61b2734
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# a7d0e50c8bd24a1c8afab902c8d86f75
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 328671d3848e4249ace93cd5d3e7c483
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# 39a69c67829f459c8a46d9432f0501e9
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 6464997f7bda41f8bc6f667ae2aabe1c
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# a983e2484eb346c6a930a9249db1b97b
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 12d5c06f3b364ac2b64b05d4e923b858
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# d2d5f844787c4887a6f57861f976a878
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# e2e2d84b3a7a48d3b2ba97870d5c86a4
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# 2e37233c4a974ff392871e7a05b841b8
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# d5ce186dedf642399dea147f27c867fe
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# d85070d09560444087640f1179ff937b
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# 8deb9bfc801d42f290a8b401a6f2191f
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# dddb3a1539074036ab20ff3de578a9a0
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 5bf27ff99a444d56a25d5bef51cf9bf2
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# 374e039a85264a7e94b3a89d0770a865
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# a91f60d636db456db2bbaa38805d71bf
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# 4d51ba2a186049efa8c75dfe10c4c35f
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# 15d25834d4c2455b8e18a18b8c5aab3d
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# cc1f2d80b90246cfbcfa3035eb6a2423
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# 3ab19bd0ee1f48019b59c58d785f8c75
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# f5831437423f4786a5d99daf71132775
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# d66bfc3d1c8c441cbdbf44de678e400d
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 1490e491d4234779b9bdc2ec14a4f32b
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# abeff578009c448cb91de0a9969df387
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# a203a0b9b84a44c58a9a1e2e3665000f
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 0f267ecf3cb14fd6b1fc5502bd5671cc
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# de535e8bd8284abfb3f51786ee6bf7a7
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


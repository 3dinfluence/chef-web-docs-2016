# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-23 16:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/debug.rst:33
# 0d2cb1ae694f4c7f850d788c66e6dc1a
msgid "Debug Recipes and chef-client Runs"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 9db2254bb3ab4e868c64cdd5166b98fa
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/debug.rst:37
# 51865d3802e5465094ef710d8b80f727
msgid "Elements of good approaches to building cookbooks and recipes that are reliable include:"
msgstr ""

#: ../source/debug.rst:39
# 11a9d9f103544a6ea948bc764ae6da5a
msgid "A consistent syntax pattern when constructing recipes"
msgstr ""

#: ../source/debug.rst:40
# c6abe2e05ccf4d82915ab1aa4d031c81
msgid "Using the same patterns in Ruby"
msgstr ""

#: ../source/debug.rst:41
# 473334c50dc24917bb18da1bd53b3fbd
msgid "Using platform resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:42
# 6330dadf3fa8433db51d30cfbd6d8ca5
msgid "Using community-authored lightweight resources before creating custom ones"
msgstr ""

#: ../source/debug.rst:44
# 7395c5aa16444a878fb052a8d192e1f7
msgid "Ideally, the best way to debug a recipe is to not have to debug it in the first place. That said, the following sections discuss various approaches to debugging recipes and failed |chef client| runs."
msgstr ""

#: ../source/debug.rst:47
# 9cff9ec493a8433e9993185b102659dc
msgid "Basic"
msgstr ""

#: ../source/debug.rst:48
# af981023dbc242829903ce7602fc600d
msgid "Some simple ways to quickly identify common issues that can trigger recipe and/or |chef client| run failures include:"
msgstr ""

#: ../source/debug.rst:50
# 20cb66909c8246779b8e844f1fd8be39
msgid "Using an empty run-list"
msgstr ""

#: ../source/debug.rst:51
# af8ccb4a4a28414bbff91a03f212d939
msgid "Using verbose logging with |knife|"
msgstr ""

#: ../source/debug.rst:52
# db8b5131ad204832b231e1f719de1437
msgid "Using logging with the |chef client|"
msgstr ""

#: ../source/debug.rst:53
# a6fb95321ddb428cb2630717c88feaee
msgid "Using the |resource log| resource in a recipe to define custom logging"
msgstr ""

#: ../source/debug.rst:56
# fb51a164ec05443b89daf2e932f7374e
msgid "Empty Run-lists"
msgstr ""

#: ../source/debug.rst:57
# a331df7cbefb4455855a17b77d9cf18d
msgid "Using an empty run-list is an effective way to determine if the failed |chef client| run has anything to do with the recipes within the run-list. This is often an indicator that the underlying cause of the |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../source/debug.rst:59
# cf74562e6f4647efb0cd31222d0c1f46
msgid "configuration settings in the |knife rb| file"
msgstr ""

#: ../source/debug.rst:60
# 24f599a543ef4e79b4cae99998f959b4
msgid "permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/debug.rst:61
# 873728aebf3d4ecb85786bc58b66336f
msgid "blargh"
msgstr ""

#: ../source/debug.rst:64
# 7fd355aaac86414d8f487065270bc73a
msgid "Knife"
msgstr ""

#: ../source/debug.rst:65
# 2e1273f24a5c49c1903c70832b2b31c1
msgid "Use the verbose logging that is built into |knife|:"
msgstr ""

#: ../source/debug.rst:68
# f84cdd3c3d774e6b9a21ab76201a1ac1
msgid "|verbose|"
msgstr ""

#: ../source/debug.rst:70
# e42e3588103f4619941d1c4ccf252c7a
msgid "Plugins do not always support verbose logging."
msgstr ""

#: ../source/debug.rst:73
# b2dea03a655f444f9a245c59cf7c4ca9
msgid "chef-client"
msgstr ""

#: ../source/debug.rst:74
# 5366124841a040dcad2b4aa3d7d4b77a
msgid "Use the verbose logging that is built into the |chef client|:"
msgstr ""

#: ../source/debug.rst:77
#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:43
# a20db6c0ddeb442080505c6affdd60d7
# 22a4b44a374e4e07981b59cd9e6f38e9
msgid "|log_level|"
msgstr ""

#: ../source/debug.rst:80
# dff1aa16a7a14b758540416c5d644f38
msgid "|log_location| This is recommended when starting any executable as a daemon. Default value: ``STDOUT``."
msgstr ""

#: ../source/debug.rst:83
# a667d7c54dfa49da8c14557b719af233
msgid "log Resource"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
#: ../../includes_resources/includes_resource_generic.rst:4
# a4fed92eda134d5d9b23d8d9822891ee
# 0cc733e2098d4451973c3d91a2ba61f6
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_log.rst:4
# 7af62cac4b164448be6eb98c03befa16
msgid "The |resource log| resource is used to create log entries from a recipe."
msgstr ""

#: ../source/debug.rst:89
#: ../source/debug.rst:218
# ade5a7f045b744a880119ca423f806c8
# d820c9ff66024c7c807a194164cc42c0
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:4
# 8ba1dfe335d744b892a3b93760759bd2
msgid "The syntax for using the |resource log| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:14
#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 995a637ab64347839b96ea0e352aa620
# 27944a33c26547d8956afa1eb1fc20a3
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:16
# 4c988a5686994672bee33e17ce32cbaa
msgid "``log`` tells the |chef client| to use the ``Chef::Provider::Log::ChefLog`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:17
# f89a65b1d3ab46b7be3eb3764549f74b
msgid "``\"name\"`` is the name of the log entry"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:18
# 11eb400762df491699a76437feaa02c3
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_log_syntax.rst:19
# cfa3a35d518d40a6a30dc4d1b26a1b86
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../source/debug.rst:93
#: ../source/debug.rst:222
# 3d19f82713cd403d8b0be9d0dce929dd
# 39b2883a16874dc7a4e2c6b45dd913ec
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:4
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 18546d7d9be645bd87c15fbf449ca500
# 99c2f815d97a4cd4b02f2446ac8b7860
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 88121e7673d345d39780be2901df51ab
# 502b2e5e9f2d47538e3e6d67b49c2e14
# c26457686889470f918e44a000c9331d
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:11
#: ../../includes_resources/includes_resource_log_attributes.rst:11
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
#: ../source/debug.rst:203
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
#: ../source/debug.rst:254
# c5554a16d47043378489b945ed8db91e
# 2aa14199068c4671a47ed2773714d4f6
# 2bd2cb5d8dbd499fb2d1426d33d2238e
# fd7913d8dbb5427ea9f4ce35ed5fcf18
# beb681f2a48e46cd8ceb588fc57044c2
# 23a604ff12204256995512de5212fae9
# 2d878837d5c343ec8b351ad6dccdd38d
# 6a7d8af6941148c0ae8010f62374e48b
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:12
# 182f32b62dfa4f958f0376f754bcbe69
msgid "``:write``"
msgstr ""

#: ../../includes_resources/includes_resource_log_actions.rst:13
# eb84b0fb489845e1bc98a1e79a8e2773
msgid "Default. |resource action write log|"
msgstr ""

#: ../source/debug.rst:97
#: ../source/debug.rst:141
#: ../source/debug.rst:226
# 14ab2972ffd34859988d24cacd067487
# f7b3da28180f41e59af2c4c4d96f304e
# 0486297e9c754e6c9d58a5f8fb8c74c4
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:4
# 985af94e0f0540838b9f2ea0694cb6c5
msgid "This resource has the following attributes:"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:10
#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
#: ../source/debug.rst:253
# 65b56f35846848c1b9b87c6e9d1ca003
# 495b01a88c3845f68a79a8e3c5280e00
# 5c51bf5b00274aa89376865cc3f28d25
# 46eca95d4f6c4982a07a28a65f149ae3
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:12
# 2e2b87c5391f42ee88a0a591f05e4c14
msgid "``level``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:13
# 03b74d73374742b48373ed7895e00333
msgid "|level resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:14
# a2561dda3cda43319444ff0efdf5d166
msgid "``message``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:15
# 63bca09953a44122a3022ff14774c5dc
msgid "|message resource log|"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:16
# 202d67563f7a46a4aeaba1a18a3fe14c
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_log_attributes.rst:17
# a788c3bf9a0f456795b5cfcbb50bac26
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../source/debug.rst:101
#: ../source/debug.rst:230
# 4f5c588b52fd470aa61de772ff6f0ad3
# 55b683af471e4848b2a92055a14b4717
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:4
# ef62478824aa43beb0f0b1f7d44f3083
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:10
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# de55e03f20984f69b5f9b8a3b2a550a5
# 757823e10ba2477694ff65345d7c03e4
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:11
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# f3566a6a78de44b697befce4a4e8da94
# 607680c38f4e47a0af59cdd9a18bfe76
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:12
#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 3491e34e2b8f4a25bfd7685678042818
# edd88a7aae044e239d1df6c432fecedb
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:13
# 5ceb5189776f4c25b62bb7d32926500b
msgid "``Chef::Provider::Log::ChefLog``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:14
# dd377241ceab4ab685f63a105a939119
msgid "``log``"
msgstr ""

#: ../../includes_resources/includes_resource_log_providers.rst:15
# 7a1549d170134c2095170d775af7c1c8
msgid "The default provider for all platforms."
msgstr ""

#: ../source/debug.rst:105
#: ../source/debug.rst:171
#: ../source/debug.rst:234
#: ../source/debug.rst:270
# dca6ae00a32f457eaf105c79d494643b
# e31eaa917d3c4392ad5731d84f01db9c
# a9f4861c414845b79f6ff19af9ed3914
# 93ceec318ea448cf9e7db0b48b4690e8
msgid "Examples"
msgstr ""

#: ../source/debug.rst:106
#: ../source/debug.rst:235
# ce1784f9b3844fbab41033912bab3877
# 1c98743056ba48319f89e26e6bb63a7a
msgid "|generic resource statement|"
msgstr ""

#: ../source/debug.rst:108
# 477ddf3a0e7c4aadab53c87de195a632
msgid "**Set default logging level**"
msgstr ""

#: ../source/debug.rst:112
# 9d5bd21a5858421f9c103c3051265ccf
msgid "**Set debug logging level**"
msgstr ""

#: ../source/debug.rst:116
# 03b548f4eccf4b4499b1786222a9978b
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/debug.rst:120
# c471675623e34bed80db81749ce3fe02
msgid "**Add a message to a log file**"
msgstr ""

#: ../source/debug.rst:125
# 3d72fa7b742346cea445db844e1dad2b
msgid "Advanced"
msgstr ""

#: ../source/debug.rst:126
# 46167249602842d6bec1dec0571f1deb
msgid "Some more complex ways to debug issues with a |chef client| run include:"
msgstr ""

#: ../source/debug.rst:128
# 66448cf9dd5047489999ec0f0d2e3a66
msgid "Using the |cookbook chef_handler| cookbook"
msgstr ""

#: ../source/debug.rst:129
# 3574340db5d949279c6b9a5fb5d1a4ca
msgid "Using the |chef shell| and the |resource breakpoint| resource to add breakpoints to recipes, and to then step through the recipes using the breakpoints"
msgstr ""

#: ../source/debug.rst:130
# ae3dfbc468754c48b29fe89150280de9
msgid "Using the ``ignore_failure`` method in a recipe to force the |chef client| to move past an error to see what else is going on in the recipe, outside of a known failure"
msgstr ""

#: ../source/debug.rst:131
# a391c3e680b84512a107543d0b921244
msgid "Using |chef solo| to run targeted |chef client| runs for specific scenarios"
msgstr ""

#: ../source/debug.rst:135
# 15b72590ccd74a15bd5cb95b858c7ade
msgid "chef_hander"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# b1360084e9034d9a9e84e71067084b0d
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/debug.rst:138
# 5bfe78d0083a4bcdbf869c248280fe82
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 0e863e80046a48cdbf1042e49b0ad4fc
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 3e4805acc6e84915a308a80665c95f93
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# 8ee899543d26466ea85ef35fe5baa29d
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/debug.rst:145
# 0b3830a600bc452ab558c69b1f470138
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# e6a4b1cb4551414b843f281690125909
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# 897ce29600b74ead8846f9a86f66e6c6
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/debug.rst:150
# 0395af2cf1b84358b6fe7220c15cd56c
msgid "**Actions**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 23807e83d2714fa1ad6fc67b3abd76c4
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 728e6d96bf264b8880edf3d144ea5bd2
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# dbd07c2f39a942908533dabc67f9697a
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 7f37bae885d54df2926fc51bd3b49cb3
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# a9e1ecdbf7ab4f779d1ad836ea977acc
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/debug.rst:154
# 37cecac57258441382ea2fe700488e4b
msgid "**Attributes**"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 55f386ec09f34227955dddbf762a6db5
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 805f000c9f7140ffadf03ac39be26421
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# af97630cc98c4efb84a24aa0f208f46a
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# f4e10540f4b04c43b0d69e866864f2e2
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 6c10e8100c6746a8a89297621ac03b3d
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# c25e4874b7e547eca4a0bb4fc9c9f22a
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# cd767270547749b6b8ce287836318ceb
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# b8f4244d093f47698e5fbedabf5809f4
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 47e7d20a30ce49be861e2b3dc39c8ab5
msgid "|supports chef_handler|"
msgstr ""

#: ../source/debug.rst:159
# 4cdd36921fad44b0b5aa7c37ef760b90
msgid "Usage"
msgstr ""

#: ../source/debug.rst:160
# f1022cca0e67479faa529946498d0070
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/debug.rst:162
# 9b341f7ff808443c89edc713699de29e
msgid "**default**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 55b0bc61f08b4dfe814391edc67343ba
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/debug.rst:166
# d5e759b8a7eb44bab87de9e22271aedc
msgid "**json_file**"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# e27c947843824864b12eddfc60b10d92
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/debug.rst:174
# fb4b11946d634e9d822c21df557704f5
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# bc01ff4c14ba4057a9c39005e1087034
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/debug.rst:178
# 036da0ebb3b44c70aabc154d6335510d
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 5bd5c937875e4594bba809745e66a49d
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/debug.rst:182
# ef3152ebf01246bf81613c873fefb4fb
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 27aded4f9d2549e0859be0c44c6f2492
msgid "To handle exceptions only:"
msgstr ""

#: ../source/debug.rst:186
# f738842688d3495491a1bddfd091b649
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# bd98705db6894aeaab08891775429aed
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/debug.rst:191
# be09472c560e4a31ade7a6af9e63c609
msgid "chef-shell"
msgstr ""

#: ../source/debug.rst:194
# be96cc35b35c44d6a8beb3e744932089
msgid "|chef shell| is a recipe debugging tool for the |chef client| that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../source/debug.rst:196
# 288f818d473a4ad3980578ea87256329
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../source/debug.rst:202
# 7f32d1af64434f3199580c1c2a048086
msgid "Mode"
msgstr ""

#: ../source/debug.rst:204
# fde2b08f0aa84225bb31b8c6d2d20c6f
msgid "Standalone"
msgstr ""

#: ../source/debug.rst:205
# ec6054bdac4b46b6ad1c57cc6cd4a138
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../source/debug.rst:206
# fd70bd6596c142dd903515681d051767
msgid "Solo"
msgstr ""

#: ../source/debug.rst:207
# fc49b8965350478e87d589630521dc58
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../source/debug.rst:208
# 0b8a4992c1254500a4d8656a25da3671
msgid "Client"
msgstr ""

#: ../source/debug.rst:209
# 7918031faf394acd8656c20350500e65
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/debug.rst:212
# 4debf1c4052f429e9605edfecc379240
msgid "breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 28da5113b8fa47f284534d9135ecf264
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 17e1e90991b24114ab3cbb7d594778e7
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 7089602e9f784a54914829d3cb8ce50d
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 288d9a8aedac4037a721f0ede754aef9
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# f6c39110c22b403793f4dab75d611756
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# f5361b45b71648bfb1fd017869edbb02
msgid "This resource does not have any attributes."
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# bc00f39b05a341569e44894664992118
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 985f75373f0c4898b2cbfd9abb0c3522
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 9b4f04f970f5487fa223b7256d17d92e
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 3df0d1c2c1a34240b840cb24c9ac60ea
msgid "The default provider for all recipes."
msgstr ""

#: ../source/debug.rst:237
# 87818a6bfdee43ed9200a5fa11b8cabd
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/debug.rst:241
# 21689910d8994ffe96a968607af05973
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 3b8583dc155245b0b5bbc5b4969ff400
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/debug.rst:246
# 8f289852617e425db69b6521c8618666
msgid "ignore_failure Method"
msgstr ""

#: ../source/debug.rst:247
# 5d12846647a1409093fdd136de6aaa80
msgid "All resources share a set of common actions, attributes, and so on. Use the following attribute in a resource to help identify where an issue within a recipe may be located:"
msgstr ""

#: ../source/debug.rst:255
# 36072d2273ed48458a47dce3b35d8fb3
msgid "``ignore_failure``"
msgstr ""

#: ../source/debug.rst:256
# 90337790e9204e52b81a82abf1d1a907
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../source/debug.rst:260
# bf920dc5833243c1bf9d2269d495f479
msgid "chef-solo"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:4
# 2ec8fd24c9944849aa1b2a3f872ae0c5
msgid "|chef solo| is an open source version of the |chef client| that allows using cookbooks with nodes without requiring access to a |chef server|. |chef solo| runs locally and requires that a cookbook (and any of its dependencies) be on the same physical disk as the node. |chef solo| is a limited-functionality version of the |chef client| and **does not support** the following:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:6
# 5a4f812b0a944957b69a70155c605b66
msgid "Node data storage"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:7
# 861f43e053ed4bef8873ea542d2bcf9f
msgid "Search indexes"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:8
# 17354a244d22446ebcd4ff770e212d62
msgid "Centralized distribution of cookbooks"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:9
# 0efd991ca7ca4a4c90aed17531f07879
msgid "A centralized API that interacts with and integrates infrastructure components"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:10
# 7f436b8655344e0eb2a2d1559554c6e7
msgid "Authentication or authorization"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo.rst:11
# 72493909b7bd45dc99e30fce4a36bdab
msgid "Persistent attributes"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo.rst:4
# a20123659591448db094e7171c7ab130
msgid "The |chef solo| executable can be run as a command-line tool."
msgstr ""

#: ../source/debug.rst:266
# 476caf8eeb314cc8a5eea7ee1f4ad181
msgid "Options"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:6
# 9ace31f612ed40bbaaa81f2a4150de50
msgid "This command has the following syntax::"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:10
# 2c39e5500862405991ab39fe44849e18
msgid "This command has the following options:"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:13
# cf1256c5ed074e578493d818814d74f7
msgid "|config chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:16
# 00f1760180d54685b22c15598c480f67
msgid "|daemonize| This option is only available on machines that run in |unix| or |linux| environments. For machines that are running |windows| that require similar functionality, use the ``chef-client::service`` recipe in the ``chef-client`` cookbook: http://community.opscode.com/cookbooks/chef-client. This will install a |chef client| service under |windows| using the |windows service wrapper|."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:19
# 100117da7a4042b98de883c3962df233
msgid "Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook)."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:22
# 5c16b2fa44fb457b815fbad5783438ab
msgid "The output format."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:25
# 2529fa6ea1f34376be223eab4ee23ea7
msgid "Indicates that formatter output will be used instead of logger output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:28
# 64adcd1105c84088b3bc8775bed9befd
msgid "Indicates that logger output will be used instead of formatter output."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:31
# adda904dd8ea41949d19c49d2a2a7dbf
msgid "|name group_process_owner|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:34
# 26171893e2154bdc8a43a0cdcec7cdbb
msgid "|help subcommand|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:37
# fe8d61c78923423082d4aeb7d1e2bb3b
msgid "|interval|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:40
# c5d85abf5bda493f996c98b1470aebea
msgid "|json attributes|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:46
# 1ab93245e334447281232089a40c1b92
msgid "|log_location| This is recommended when starting any executable as a daemon."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:49
# 8d4962c34b1e467fb9f633a575c515e9
msgid "Use ``--no-color`` to disable colored output. Default setting: ``--color``."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:52
# a5a787024ada4cec9b7391fa5f20d06f
msgid "|node name chef-client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:55
# 0b5a3935aa69478ebf38699eba5addb4
msgid "Replace the current run list with the specified items."
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:58
# a2ecb9abb93746faae41afeb6345d6a7
msgid "|recipe_url|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:61
# e7ec93e32ad2449e8bf87354300b990a
msgid "|splay|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:64
# e84e82f75ffb4f43b143aa81a7584cfe
msgid "|user chef_client|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:67
# fedb488b8a11404a8366e52644e7db56
msgid "|version chef|"
msgstr ""

#: ../../includes_ctl_chef_solo/includes_ctl_chef_solo_options.rst:70
# fd4f6b939ba140a2ac294613f311b311
msgid "Indicates that the executable will be run in whyrun mode, which is a |chef client| run that does everything except modify the system. Use whyrun mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system."
msgstr ""

#: ../source/debug.rst:271
# 40de55609158402fbeb698b2d29845c0
msgid "**Use a URL**"
msgstr ""

#: ../source/debug.rst:277
# 6303d957c6b54252a03514e659dc8b30
msgid "where ``-r`` uses the |resource remote_file| resource to retrieve the |tar gz| archive into the ``file_cache_path``, and then extract it to ``cookbooks_path``."
msgstr ""

#: ../source/debug.rst:279
# 4835b470eaa2459ba066d44acb54097a
msgid "**Use a directory**"
msgstr ""

#: ../source/debug.rst:285
# 95c54271d44947e3b3e907ad0263d2e2
msgid "where the ``-r URL`` option is not used. |chef solo| will look in the |solo rb| file to determine the directory in which cookbooks are located."
msgstr ""

#: ../source/debug.rst:287
# 355dd4c50d9b4848a1fb673e8e4b6a04
msgid "**Use a URL for cookbook and JSON data**"
msgstr ""

#: ../source/debug.rst:293
# db7a0c5d2901491494f4729a1a8ef39f
msgid "where ``-r`` corresponds to ``recipe_url`` and ``-j`` corresponds to ``json_attribs``, both of which are configuration options in |solo rb|."
msgstr ""


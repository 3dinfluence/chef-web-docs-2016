# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_exec.rst:8
# c0f8bebe98d148d7995a86c8739cf784
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec.rst:6
# 93aff94a1f4f410ab83b61f1f581d79a
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../source/knife_exec.rst:13
# 85d96d4475d141b69d5acca4119d4416
msgid "Authenticated API Requests"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# e17705ddffa645a7b723dbef7d0843ca
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# 3f8a689e8c9944b1beccbaf26a4e6a65
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# 48b0de744ff648f6838a8759f54b1a60
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 391638834d3e4da1866923687719f36d
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# 56e98baa1de441adbba816bd7affda55
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# 018b7870a7f6434491ab3f53f09638e8
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# 5b9c8616eaf4474589e1a25bdf9b3377
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 4bd89d5bff774084985ddff52ae4239f
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# e28c5d818f08417888194f8ac345bcef
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 1a921f2683a04fa9891e606a9633d70e
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# f9e1046657da4795b6254610e5679808
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# 51789d9ffe4149598d1616a10dab1e29
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 7701045196bf48ee921a2dfd26987678
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# e985f0e4dd87470880f1613a8fc93d73
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# 9d2dc86d2cbb49798c73a32076aa16e7
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# a9500ed7af4e431b8da4eb46ea7c0a6a
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 408a41fd40444d079a5ab6e82f3fe25b
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# 48fd3dce2bfd47de93d3ac636f955ac1
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# c65a9fea4b3b49bca1ba03d117c4555f
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/knife_exec.rst:17
# b2061cc1203446d2a750c8f5bf37aa54
msgid "|ruby| Scripts"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:6
# 487603c8b45849b4b7a6bf2d4626dd49
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:8
# 17a041f0e4e7487089ddfad64fa8058d
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:9
# e1d783571b4946b78a4dfc098021c08d
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:10
# dbcb3dd1c36e440da4f91e2ead4d4e0c
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../source/knife_exec.rst:21
# 4990e0401a4e4897925dfff5b20771e2
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_exec_syntax.rst:6
# 6744e570279c49a1a5f7f47c47421a09
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../source/knife_exec.rst:25
# 4a93b0d36c7c4ee7a1c29fda80b8067f
msgid "Options"
msgstr ""

#: ../source/knife_exec.rst:26
# c6bc0356deee4ce5868e557376350956
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:6
# d60855636c61434d80a64e3afe925f04
msgid "This subcommand has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# 7a05dc2a83d14f808a2ff718a76f32da
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# ecf438c4be1240b590cdc9273a347de3
msgid "|exec|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 70461fd7139b4112978f9ea931bd87c1
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# e3b19d4956474b429a1ceceac8e765b0
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../source/knife_exec.rst:31
# caf8af60dba94b69b057dcd98ad481ec
msgid "knife.rb Settings"
msgstr ""

#: ../source/knife_exec.rst:32
# 708d7aa414da469f89068814c89cbe9f
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:6
# 832340f525dd43e0be4771c941aca309
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 291141a3652447d9935f13a2e3ede89e
msgid "``knife[:exec]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 32161e3d8faf44bfa4995ee9f9cb7212
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:13
# ffe8c28b89414a7f8986729c433f5ad8
msgid "``knife[:script_path]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:12
# 6b163aa3468c489480675c0cedda765a
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../source/knife_exec.rst:37
# 0a34a245414e4649a1e09f529f5475b6
msgid "Examples"
msgstr ""

#: ../source/knife_exec.rst:38
# 1157a8d54e604c94b004201a364861a6
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_exec.rst:40
# b5d97573475d43d784796ceb403c7d16
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:4
# f5f4c60d387d44a8baaf85a214435548
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:16
# 9060a10451494d92aeacb25708073042
# 49320f61b7434fceaa6aa9e91ba63512
msgid "or:"
msgstr ""

#: ../source/knife_exec.rst:44
# 22df915002234da2a8e33fb589eaec07
msgid "**Chef Knife status**"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:4
# 2acd9f3f71e3431b8e064e98ce3d7b37
msgid "To check the status of |knife| using a |ruby| script named ``status.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:16
# 503de1a7d7d142d38dc0a9bd333aec00
msgid "and is located in a directory named ``scripts/``, enter:"
msgstr ""

#: ../source/knife_exec.rst:48
# 2bd5596e050e43189767ba607b4d615e
msgid "**List available free memory**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_free_memory.rst:4
# 4a3a9bc33d954913869cebe5f04e09ad
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../source/knife_exec.rst:52
# 7d0c912685d24c729432e8ead99521ef
msgid "**List available search indexes**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_search_indexes.rst:4
# 86ef31fc1f3f487ba09f7dbd9841cdb7
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../source/knife_exec.rst:56
# 661348a07fc34a928a4a511b4ed6a639
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# 1651568ba7b04c33aaa1cb7f5a0d0fa9
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 91643050e75a44cbb902332b22d796d0
msgid "enter:"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# 36a3aa02a24345268252c73ebd33c66c
msgid "to return something like:"
msgstr ""

#: ../source/knife_exec.rst:60
# 0e5f1bfa6c68486589b08f3f1b21e45d
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# 6bf5142494f14bc0a7debb48fb7ae1c8
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# 6c4a23daded84fd38d571aa32368f5bf
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# 6c4e3623e3a941f097d44797c92e1ce8
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_exec.rst:8
# 60dabc00223648618f6748f12079afbd
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec.rst:6
# 4fa265ef5f364cfeb6f49136cc8b160f
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../source/knife_exec.rst:13
# eaa1cff7968f4960a5e9e2889eafa1bc
msgid "Authenticated API Requests"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# 77d6c760ecb5409caba85475b33a9fa8
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# 7a48f024d3df45e898312e07f154131f
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# 0411cef6047a4c13b4b1d6c9d5e3a98c
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 726011bc27ac4d51841bc1110226d35a
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# 2ea63641ce5745c6ba4fdba8b2906f0f
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# da6b6e6094274c0bae9100d636f923da
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# e3f0037573d244e5bd5d783d7069072d
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 62b31837ae0648f5bf1427bb820479e2
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# 5a4b61a40dc14c5c8160f54fba025ae9
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 993bef2d45354282b7feb46870911b78
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# a2e4767fda2b4696aae2a9a5cd1a5aee
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# bdf035b51a3e421b9427d0c9e7d0be68
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 907b7546cce64b1aa7185d855d606a01
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# 0115fe97f9ee47b18ed898a1c8751dfc
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# 179c29e177b94cff87301a838a8976de
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# 2a12b43f301b4db49baf0223c6acb8f5
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# c873ff8cf0544f2f946ca3efbf508463
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# 56b4243284904ef99a4119ec81e858a9
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# 3b22bfd4156444ea9cdb8355bd3872a3
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/knife_exec.rst:17
# 4680856b134b47d0b3c0f4a0f1ff164e
msgid "|ruby| Scripts"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:6
# 4b0e3e3d9c9640b0af5ef50519db9a64
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:8
# 98b6498f0ec2416995f0b95bd290ba2e
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:9
# 18464920669a4ecfad571a1fad00b9f0
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:10
# 63da8f172a364a4694f8999fedff2f0f
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../source/knife_exec.rst:21
# 5400f9c90b424f16b02f1106d4d4e6cf
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_exec_syntax.rst:6
# 5569b63ec92b4717b14b759451644aa3
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../source/knife_exec.rst:25
# d79a340730b649c6a29e6916be4f1d4b
msgid "Options"
msgstr ""

#: ../source/knife_exec.rst:26
# 0f3076d019ca4968ad7d25520c340c99
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:6
# 966c35020d2048f0a38ffb5ebf69b2de
msgid "This subcommand has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# 3c58370fd3a34d5e9a5a5cfb93ae433f
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# 0433c29f976047f6b8e814c7b8f4f568
msgid "|exec|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# f4d5d795fce546e2a6a4cd6bba2fb9cb
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 1c14e8146dfc42a595559b3a7f129ba9
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../source/knife_exec.rst:31
# 4fc361eef57c4320a8813bfab112a074
msgid "knife.rb Settings"
msgstr ""

#: ../source/knife_exec.rst:32
# b46ab34772a841b1b3d1ad88c1dc1318
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:6
# df3bbcfdfaf8445387dc470597cf6724
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 0ac8e809bf964602afb58798560777df
msgid "``knife[:exec]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# bb88e33d54684e868f6fb65d84dec0e4
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:13
# d75bd576801145aea8e6e126c00552d8
msgid "``knife[:script_path]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:12
# 105d284411d64259b0e5dc4a1cf9c1f7
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../source/knife_exec.rst:37
# fc9ca3019b8e4546be7e74fecf9c4f9a
msgid "Examples"
msgstr ""

#: ../source/knife_exec.rst:38
# 26f487ee4845449dbfa239e48849db6b
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_exec.rst:40
# 594ec8e2a2294bb2b3bd3ecba95f0216
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:4
# f12381cb34c0463eab4c7c05b9766452
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:16
# 9f1eaeb3cf524f23bb6f985aacff4296
# 1878f6fe446c44bd88c96c32dd34a21f
msgid "or:"
msgstr ""

#: ../source/knife_exec.rst:44
# ab8feac577e7406e98a54c1231ba1a4a
msgid "**Chef Knife status**"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:4
# 3521aae8240242da8260e86f7ddd5bd9
msgid "To check the status of |knife| using a |ruby| script named ``status.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:16
# 1dd8489bd28d4076a354052d8114abc5
msgid "and is located in a directory named ``scripts/``, enter:"
msgstr ""

#: ../source/knife_exec.rst:48
# c90ef3cf060648e4b72867662af71330
msgid "**List available free memory**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_free_memory.rst:4
# 4c4d9e83c9fe45209b50435f7e300f79
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../source/knife_exec.rst:52
# 9c363c06d7f0404ab80aa49246478211
msgid "**List available search indexes**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_search_indexes.rst:4
# 4c11f5d10bf345d7a752f3e5e653abba
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../source/knife_exec.rst:56
# eae5edd332534f279787441778662a85
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# c3ea57fbf52f40bc9d1fa02bb30e7809
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 5303c8c43c114db5b8e5df02e4e0f0ee
msgid "enter:"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# d920f7e9ca3644d29c0fc1446bb180b4
msgid "to return something like:"
msgstr ""

#: ../source/knife_exec.rst:60
# 6f20f4c0912e4f2abe8d9152ee549abc
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# 6c364e399a7d4845bfa091c12085203b
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# 5902a05d71c64b13b965af9a3df69d0e
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# f8649657c25247aca9d90edacb68955a
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


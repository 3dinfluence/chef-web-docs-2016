# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-05 22:37-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_exec.rst:8
# b71d8e79c3c94f839ec3179fc7a7a830
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec.rst:6
# 27cb6834e3d24418ae80c3f2b60347c2
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../source/knife_exec.rst:13
# df9b77dc14534f6390e6cd67e066ccbf
msgid "Authenticated API Requests"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# 30581e7e997548319d2faa2d1eb74420
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# 907328384a9940f09c7081a5ebe59811
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# 410a7477e1b14f51926537d5e2b6262e
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 38cffe3470e64f26ac89ae0a0a66adc2
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# 11336ac780b24e2fa5497117be343c07
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# 8910a5ea947d46ab8c9808cda04df5fa
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# 2be3f5321f2547b2bce05be974b769fc
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 8a8b88235d9f4e52bf9fd6befb483662
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# adf210cabeea484286d7208e2c7ca2cf
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 8ad56913ea9a48fc9d93eee40f9d371b
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# e32b5d2eb14746e198aaa0b5d8b14599
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# 2c1dbb87bf554667b3671be56373d2d4
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 3321805d52b4493eab4b7c9538a51663
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# 4f05af11465a4c05916e3ae257e09a24
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# da64a69d6e7540c0a35962967ddfe1c8
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# 94dde0716a8b4d888bf097f6b3b4cfe5
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 929106a3d22b436e85df8ac03d4213d9
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# e6ddfb6ac987445ead1b5ebfb5b5a0e6
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# 5f382c1c7e2144a0999aaba893dfd332
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/knife_exec.rst:17
# c0ee6b6457074010881fce784b95bec4
msgid "|ruby| Scripts"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:6
# 48c466766b8b4a97a874bdecae1ff31f
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:8
# c0cde095d48948a589b6e0172b94d08f
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:9
# bc9780e10a1e4e7e9b6bc2284e4ebfad
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:10
# 98514ac7051b48e5bd9404803583e4e9
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../source/knife_exec.rst:21
# ed80b8aa7c00448cae7717ec271c1667
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_exec_syntax.rst:6
# f17062ea6302474bab1bbbb42ac438fb
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../source/knife_exec.rst:25
# afad538b61604e878aa637358e4b7918
msgid "Options"
msgstr ""

#: ../source/knife_exec.rst:26
# c114bd8118aa4ead88d51a887c3bf5d5
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:6
# 1b7cd0b5cfc54295b44df85ab00f4378
msgid "This subcommand has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# db42cdb2cad749c192dd72a9d4c67288
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# c8c9b7fa743e4e5d9e5469e962ee2a68
msgid "|exec|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 9080b29554b6492b9958392cf129770a
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# fe6699f2b605495786097391c0b2b9a7
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../source/knife_exec.rst:31
# 6079bd1bb9354f13956b32bf1a541516
msgid "knife.rb Settings"
msgstr ""

#: ../source/knife_exec.rst:32
# f26ffab4e5d94e95b417e3724e2c8e91
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:6
# d6783f8c01e141b1b8a63905c8091b69
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 15a13dd090d74c39a6db714b30a300a6
msgid "``knife[:exec]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 36e43fe0aa4446b68ad174dd06de3942
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:13
# 885223984ab345c2912d6f7ccb8b3f97
msgid "``knife[:script_path]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:12
# f59890da0a3b4d7b858f658d6566b503
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../source/knife_exec.rst:37
# 7ee59c3a8d9a4183aec33b9835387e6d
msgid "Examples"
msgstr ""

#: ../source/knife_exec.rst:38
# 7a7a081840554a739f5109d29e4a2c24
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_exec.rst:40
# 8aee16d63d6248529216e85f6ae8bc14
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:4
# d49fe15f949944a29332b5793ac05135
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:16
# 86dd7dc2aa4a408e9c85f0385b19e587
# 50cd49118a334d28ba2c0c2cdb05ce00
msgid "Or:"
msgstr ""

#: ../source/knife_exec.rst:44
# 4ca59a0e6a4b4bdd8f8eb3b42d90978e
msgid "**Chef Knife status**"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:4
# 53466f66d7e44748bdf0bfb75d6e4b27
msgid "To check the status of |knife| using a |ruby| script named \"status.rb\" (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:16
# 026c855317aa4bb094aea121747fd4a6
msgid "and is located in a directory named \"scripts\", enter:"
msgstr ""

#: ../source/knife_exec.rst:48
# 37f656d38e2544f3a1351cd52a667766
msgid "**List available free memory**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_free_memory.rst:4
# 86d3ef2cee324be5a06cb56e3bbf31cb
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../source/knife_exec.rst:52
# 80caa2f78b864be68943f7d8ce844728
msgid "**List available search indexes**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_search_indexes.rst:4
# de8e203871e04441a86437d3d2836ff7
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../source/knife_exec.rst:56
# 87f13f7420734587af05821644faa225
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# 64b93acf090049e4a077a53dc2863407
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 2d21ffaec23e4c1da3c6468e38cbf6c5
msgid "enter:"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# 709531fc77b94f37bf213891199d13ac
msgid "to return something like:"
msgstr ""

#: ../source/knife_exec.rst:60
# e817b686aec94c6080753663932e0740
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# 96307114361e49a4bd1200445cf5f080
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# bf5d791a5bc84cc3ad9fb07729b008ad
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# bc21b4dbfe194ab59657b4318e7431a4
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


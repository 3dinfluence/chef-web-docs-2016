# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-10 22:38-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_exec.rst:8
# 7c82baf2227c4b98bd47a7edd7a9b7eb
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec.rst:6
# 3b132a8c619b40f3ba3861520ce4ad95
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../source/knife_exec.rst:13
# 7efafc5aeba4435d93567cff7707d405
msgid "Authenticated API Requests"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# a28e6aaa04ce4111bcc97c9acee16120
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# bbdc22cb5df54dea885b21acc2589c0f
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# df97f63b9c5145379edcd8e3f50c82f3
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# ff042e0d2c9b479d88ea6b8af7254f93
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# 340e69a2e8c4427da4a0f60abae01e35
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# c420077b23e4402f93b91ef7806eec30
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# 74caf10ae58e4b94a68e59237a7cb4d5
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# f3fff3fd3111415e95477c8c73439393
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# b2906383b3994054b3c87a93af6ea958
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 6a3c9170d68f402fa07a8f9903982f57
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# f716ce4ccea54dd992638e7419f3e5df
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# 66086a804fec48189b3522fecc74ee2d
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 11fe607b22924a93a83480ab9402811c
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# e20e6980c7aa4b97a1a5b968032847bb
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# 8b72e66507cb415abe59bc2cfcbfc791
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# 2722e7a729b5487f9ba18a7575c58588
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 6d617d3415964346af8f22eabdf06c4c
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# b49ba465d67d4201af948d1663e16d2f
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# 1ededb2aefb74ee1b4db779813a82dbb
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/knife_exec.rst:17
# 0ab7f6d9aa4b4f70bb8409cd4e1d86e1
msgid "|ruby| Scripts"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:6
# 9121b5ff7e1b4b0398cb02c27da36c11
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:8
# 7083bb4237a24d78b17280a37df0582c
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:9
# 008df024589c4db3914c064b246f2995
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:10
# 7ed688723bf8478588da5662b32fb685
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../source/knife_exec.rst:21
# 4a0d40cc87a34022985cd5c769b370d5
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_exec_syntax.rst:6
# bdd41a532ebc4816a2c0b4673c2b9f51
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../source/knife_exec.rst:25
# 3c9c6f4587d8432cbb453d34ee27872d
msgid "Options"
msgstr ""

#: ../source/knife_exec.rst:26
# d16a141b16974d9ba355c1f3f2e96fcd
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:6
# 3e2fc66e971843c68dffcf14dd1ed5b3
msgid "This subcommand has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# cd9c20413726400990f7f79cd5c3d7bd
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# 2323a4bc219b4d1e834fa9fbe1b21bbe
msgid "|exec|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 87b54b30bd2c4c9d94caed3669f2c7ba
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# b9711506d01e45e985a96d57dc66be0e
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../source/knife_exec.rst:31
# 34e1d82d027842a3839840ed8121ac35
msgid "knife.rb Settings"
msgstr ""

#: ../source/knife_exec.rst:32
# 396cf2aebc85407cb999f68d95d533d5
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:6
# fc6d4835e39f42df82b31edde126df45
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# eca42c0e845b4f92bea352e503fa1d2f
msgid "``knife[:exec]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# 11ab01a51f574ae4a61794e2348a5586
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:13
# ebc64f5c7bb54513ab4491f7570149bf
msgid "``knife[:script_path]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:12
# 4dd56206a061441bb62d517ae1cf354c
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../source/knife_exec.rst:37
# f316644d06284b8eb1377ede6c4e27cd
msgid "Examples"
msgstr ""

#: ../source/knife_exec.rst:38
# f9d262e0698e4d4ea421613d6033b4d8
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_exec.rst:40
# 88a9b362bb1741e38c272556dce61dc9
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:4
# 2765a7462bc34d5f99de530269646feb
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:16
# d4fd09a36c984474bb44c2763a182dec
# 2763d3f601e249c6ba537cb54d8298ee
msgid "or:"
msgstr ""

#: ../source/knife_exec.rst:44
# f9a3114ffbd14177a1e9616d2a0dbfb8
msgid "**Chef Knife status**"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:4
# ab86451eaf3745969358187d2708441f
msgid "To check the status of |knife| using a |ruby| script named ``status.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:16
# 8168a2b80da44ac893146e8ae80855b9
msgid "and is located in a directory named ``scripts/``, enter:"
msgstr ""

#: ../source/knife_exec.rst:48
# 45b62ddacc794f32be1fa3735e2bfb79
msgid "**List available free memory**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_free_memory.rst:4
# 7a0ee38973fc4cc197b19b228a8ec7ed
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../source/knife_exec.rst:52
# 54dccd5fd225464c88a0ae6020c881c2
msgid "**List available search indexes**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_search_indexes.rst:4
# fa0d0d1b1f764dae9c17bacce3b27a0b
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../source/knife_exec.rst:56
# 5101bd8459574c8489c2b5106bf8308b
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# 168e20027525408fa03fbe9d6250b6ba
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 74bbabacc6584863b17aeb068d98b1f3
msgid "enter:"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# 4716dd960f664095886b20f4f7dd1747
msgid "to return something like:"
msgstr ""

#: ../source/knife_exec.rst:60
# 3cfd404710034b6282202d92c99283d5
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# dc87e75380ee4058b39c98e5e7c212a4
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# 6cfb4bf3369041ebab055e2fac31cfb4
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# 4920d910e94347b09ba06b679eb94abe
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


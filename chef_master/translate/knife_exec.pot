# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:8
# 9eb6c8eec0124f618520c9c2f5aa5d62
msgid "knife exec"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec.rst:6
# a13c913d392744f8a472115c8bc556a7
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:13
# cfba0e86d3524fdfb202499856c2cefc
msgid "Authenticated API Requests"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# 14300ac32cb24dbf9eecb0cb3055a045
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# 314c8d3de9904333a68efb558e3a5b8c
msgid "Method"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# 86d90d933ab645d9b6f94b4165d102ef
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 4e6304412fc544d698d0268cae257f72
msgid "``api.delete``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# 6386d3c909b04b3bb562d06946fd3e0c
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# e57b373a5318487fb6a912876e1d1638
msgid "``api.get``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# 484292e27dbd4e519fc85e8127f0087e
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 5476e7e911e64fe9a99131c865d5e249
msgid "``api.post``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# 19c07107a98b4c3d9773b4370dcbd756
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 8bb9bdcc0e884786932e448aef168c4b
msgid "``api.put``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# 66ce64893944405fab84338ff3e051c3
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# 5d2f1b57ac3f415ebc43fb5f82237197
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 3f6ed55aa63a488a8f8e0c795cdbe435
msgid "where:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# adc560cf4c4147af908619c4a19021b7
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# 8d953690611b4b36a77afd90bbf1c06b
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# 9abf137deeb14a3894f3fa00ec4e238c
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 33773538e30d4fcd8f5bbb1cb76d0a1d
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# 4ae53f6178144032b92c022ff6ed60c2
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# fb00b72ecc624f06b401fcbc4807b949
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:17
# 1276b5372d0a46f5bbcc96d43b77f96f
msgid "|ruby| Scripts"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_ruby.rst:6
# b242cef5aafc4ed99b64f0f63104b706
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_ruby.rst:8
# 266ed15eb80f4dfaad3b4411bc788bbf
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_ruby.rst:9
# 18ce57cff9e6441fbe5fa5e716ef55be
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_ruby.rst:10
# e38f507141824566aa5a52f6e97dc2cf
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:21
# ffc5897a2c594f2eb97dbde23ac23910
msgid "Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_syntax.rst:6
# 2053402293bc4606b54b4fcf8095bad7
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:25
# 7c1a8d80c25e45f4b171bf92a9b4f317
msgid "Options"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:26
# 46fec67983594b0d82b60bd6376ec330
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_options.rst:6
# ae3e19de5c9f4c4abd92897069e2ebe0
msgid "This subcommand has the following options:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_options.rst:9
# 31d0c1203dea4545a78eb18cdbb7da3a
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_options.rst:9
# 976337f5bd89449288805c94c5ebb7f6
msgid "|exec|"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_options.rst:12
# 0cf2904abecb4dba9f5249bbe56d4d1d
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_options.rst:12
# ff888b94c1c1404fad4ec8e186448d37
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:31
# 7d693a32a06245fd9eea594ca722f24e
msgid "knife.rb Settings"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:32
# fc0b60a6fecc4b01a6693cfca7d7f8c2
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_settings.rst:6
# 31970480b94848089228deb62719b654
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_settings.rst:9
# 7d4ca99da9f24378a604de3b1bbbd1a1
msgid "``knife[:exec]``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_settings.rst:9
# 8249d7083b1e4a97bba0b86803d7e46b
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_settings.rst:13
# 604934c34f9a4923a57296980cf5542d
msgid "``knife[:script_path]``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_exec_settings.rst:12
# 26050eb89d6c4f9da0669779141d01d7
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:37
# 642ebf7ba4644a6b87f6f1650b50f98c
msgid "Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:38
# 42b4fdfc265648b8afe3777d72d5abbc
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:40
# c95091588b914d9d962b2f57447c4bbd
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_run_ruby_scripts.rst:4
# 440f85ac18964442889d447cff4f9b0d
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../../desktop/chef-docs/step_knife/step_knife_exec_run_ruby_scripts.rst:16
# 634c50451e0c4740ba2e121b521b5c88
# 2147963d1dfd4557ae65712db218b779
msgid "Or:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:44
# c2e287b19c1e4786b474648da68166ae
msgid "**Chef Knife status**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_check_knife_status.rst:4
# 2c416a58f7984a78a724bf5f501ca13b
msgid "To check the status of |knife| using a |ruby| script named \"status.rb\" (which looks like):"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_check_knife_status.rst:16
# 7e3ca5e9fe444cc48b802644fa86d769
msgid "and is located in a directory named \"scripts\", enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:48
# 612db0e61167441b8c19c9c85837c646
msgid "**List available free memory**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_list_available_free_memory.rst:4
# 53ee9dbfbb4b4cd8a66e5aa9a8ef278c
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:52
# 7cc1f79ed758458ab34a4e9375d0863f
msgid "**List available search indexes**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_list_available_search_indexes.rst:4
# 6c3aed818c3f4b9ea390d8ec70c9cb3a
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:56
# 103d101c3eb244569c69d8af04de413a
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# b2534540051449feb75efd0e1ab22243
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 5dcd9584739548bfae294d61f11e088d
msgid "enter:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# aa2159705f48461ab92b5bc00c24de33
msgid "to return something like:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_exec.rst:60
# 9088f4e0d3de4add97c917e5b5a430ce
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# cbe3e897a7f64da9875a0c64203425ee
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# f1e49fe8ba14434fb4bfce8002c6f98f
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# 4a7e86b48d2f4db5aa1d03d216af29e2
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


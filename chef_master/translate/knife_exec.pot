# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-04 13:15-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_exec.rst:8
# 85b72a0d39784738870f027bb37690ee
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec.rst:6
# 06a050aedefd43e98038cca30cdbcb7a
msgid "The |subcommand knife exec| subcommand uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This subcommand is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this subcommand any time that an operation does not warrant full usage of the |knife| subcommand library."
msgstr ""

#: ../source/knife_exec.rst:13
# 7adc0bf2f16845ce874811e6c8621761
msgid "Authenticated API Requests"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# acc1673b37154ef1bc46156f3befdc79
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
# fcf6e5f724d24821b0336a29a1632fa8
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
# 1b8c99da58a2424dbe1f54f359f56699
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 077edf917c634dd8a38c26c90d48ab67
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
# dd36cb809bea48d38f980cadc145b328
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# caf96af191c441828832fd5e00122069
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
# 450f42b590294793a95625eaa9d64a70
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 266bf7c162414f7e963801bef7d397ad
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
# c34545c87aa5482d931dd68295e6d407
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# 0b0a23d31bbe48f0a8dbf2959dec67cb
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
# 0cb4c7ca3e7748eeb89cc3bf11a424bb
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# 3a51312e538e45f3a523691798dc5508
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# cd59f8f386014bbda72dde85e64f6311
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# 6894b0988a6649d7add005f3184d5448
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# 4a20887653ae4f70992ee0f5a22cc593
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# ab3cac349aef4017ab16f93a6324fdb4
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 3136e3f2df1e4728a7eb5dc32ed39757
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# 2d27cb0c394a40839746f7d9854e2e7d
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# 0ff90992a11443fcb1eb9b11055a8ab5
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/knife_exec.rst:17
# b597a32b263145ff984f8ef181bbdf30
msgid "|ruby| Scripts"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:6
# cf8dfd0b37a6475087a8e64fa38c9ab1
msgid "For |ruby| scripts that will be run using the ``exec`` subcommand, note the following:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:8
# d3329599cec74430b75d257dd3d992cd
msgid "The |ruby| script must be located on the system from which |knife| is run (and not be located on any of the systems that |knife| will be managing)."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:9
# 701cfbe3320c4a97a6decd64d8a059c8
msgid "Shell commands will be run from a management workstation. For example, something like ``%x[ls -lash /opt/only-on-a-node]`` would give you the directory listing for the \"opt/only-on-a-node\" directory or a \"No such file or directory\" error if the file does not already exist locally."
msgstr ""

#: ../../includes_knife/includes_knife_exec_ruby.rst:10
# e6918ad033774ccca4978994bc2e6bd4
msgid "When the |chef shell| DSL is available, the |chef client| DSL will not be (unless the management workstation is also a |chef client|). Without the |chef client| DSL, a bash block cannot be used to run bash commands."
msgstr ""

#: ../source/knife_exec.rst:21
# 96768e62bc7843eabc3f41e0d29574d1
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_exec_syntax.rst:6
# b6935647a7d64c05add9d5019ad696fa
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../source/knife_exec.rst:25
# 4b2afe2c80464b20ad8065be294710ae
msgid "Options"
msgstr ""

#: ../source/knife_exec.rst:26
# eb0e4b5b53c54e71b20dca0e0ff01102
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:6
# 775ccbf866cc4fd0a53a6883cab05d6b
msgid "This subcommand has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# b3142b8f19574420be1804eb6bab360b
msgid "``-E CODE``, ``--exec CODE``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:9
# bf59ef527a884cd09781d0e384ccc05d
msgid "|exec|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 69fcaa836e314878a05712bae6a6bff9
msgid "``-p PATH:PATH``, ``--script-path PATH:PATH``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_options.rst:12
# 583fc7431d4544e6957b7dbdad1b5c83
msgid "|script-path| Use to override the default location for scripts. When this option is not specified, |knife| will look for scripts located in ``chef-repo/.chef/scripts`` directory."
msgstr ""

#: ../source/knife_exec.rst:31
# ed647592087f442d96562ecf38f51ab9
msgid "knife.rb Settings"
msgstr ""

#: ../source/knife_exec.rst:32
# a3dda69edec44d1c8c10f64db0183f10
msgid "See :doc:`knife.rb </config_rb_knife>` for more information about how to add optional settings to the |knife rb| file."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:6
# 54c6bba6734546579278a1f5052653b0
msgid "The following ``knife exec`` settings can be added to the |knife rb| file:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# a7a3bd01ba4f428aaa3a539db47d6fd3
msgid "``knife[:exec]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:9
# a3c86236bff045619ed27e817e4ad51b
msgid "Use to add the ``--exec`` option."
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:13
# 40f86a4e0e9b42acacc505917e16370f
msgid "``knife[:script_path]``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_settings.rst:12
# fd7ae6b96ad047e68d1f5b8869462e6a
msgid "Use to add the ``--script-path`` option."
msgstr ""

#: ../source/knife_exec.rst:37
# c1f79e5522ab4a7da84c35cca7deda31
msgid "Examples"
msgstr ""

#: ../source/knife_exec.rst:38
# 05a0ad789db647a9933646eb893660b3
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_exec.rst:40
# 869e415bb60d453091e7b9de25e597ad
msgid "**Run Ruby scripts**"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:4
# 8c99615250f040f2aaeb67abe190d5bb
msgid "There are three ways to use |subcommand knife exec| to run |ruby| script files. For example:"
msgstr ""

#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:10
#: ../../step_knife/step_knife_exec_run_ruby_scripts.rst:16
# 78a9adfb36a24c8a8621a0e7d7c407b3
# 86c19a3b96e5433d8050b6ea4784c345
msgid "or:"
msgstr ""

#: ../source/knife_exec.rst:44
# 0298fb155b3e4e67954b4c3db8be236e
msgid "**Chef Knife status**"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:4
# 1d85caf4cad74686a6c6d5741aea61ee
msgid "To check the status of |knife| using a |ruby| script named ``status.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_check_knife_status.rst:16
# 20c177bb5adc4b428243e232f17db03f
msgid "and is located in a directory named ``scripts/``, enter:"
msgstr ""

#: ../source/knife_exec.rst:48
# 8032785b79e44e819ca4b1de9f850bb3
msgid "**List available free memory**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_free_memory.rst:4
# 6368f37e8bd743bc8b15b72217a87a2f
msgid "To show the available free memory for all nodes, enter:"
msgstr ""

#: ../source/knife_exec.rst:52
# 67d8da805f66435394b7422118b4b6ff
msgid "**List available search indexes**"
msgstr ""

#: ../../step_knife/step_knife_exec_list_available_search_indexes.rst:4
# 7375077b7897403bb171213acd9eb166
msgid "To list all of the available search indexes, enter:"
msgstr ""

#: ../source/knife_exec.rst:56
# d1fba01441b54011b7634758b35234a9
msgid "**Query for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:4
# e391de19246646b0b589197b6e789c83
msgid "To query a node for multiple attributes using a |ruby| script named ``search_attributes.rb`` (which looks like):"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:22
# 3137187344cb4fa3b6d8181b8a7c1541
msgid "enter:"
msgstr ""

#: ../../step_knife/step_knife_exec_query_for_multiple_attributes.rst:28
# 2976064a0344425d957c0434a5651c12
msgid "to return something like:"
msgstr ""

#: ../source/knife_exec.rst:60
# 41bb029ab4d34838a8905a466acf6bdc
msgid "**Find shadow cookbooks**"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:4
# 2df4c8e8705e4719a18b95431cae3b90
msgid "To find all of the locations in which cookbooks exist that may shadow each other, create a file called ``shadow-check.rb`` that contains the following |ruby| code:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:35
# 381135cc3db94d8e89fba6b8e634d8e3
msgid "Put this file in the directory of your choice. Run the following command:"
msgstr ""

#: ../../step_knife/step_knife_exec_find_cookbook_shadows.rst:41
# a487d72f23114926ab4ca6248aa831d9
msgid "and be sure to edit ``shadow-check.rb`` so that it defines the path to that file correctly."
msgstr ""


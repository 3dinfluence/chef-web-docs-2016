# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:7
# 1e2ce1d3f31743779ee2d9edf1bc3880
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:9
# 435f126582304061b3616fb661d19157
msgid "All resources (and lightweight resources) share a set of common actions, properties, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:12
# de37c5f3e9a94c5d8686518b8c6c37bd
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# 8022fca77ea54d4d87f23816d2da5146
msgid "The following actions may be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# d425323698ce45e7a8e932c444feb140
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 964a0f316d5642f4ade9d8ff07ae6d2f
# e390df1b0b6847a998d8897333222156
# adbdb2253a7c4f71be3b03a28fc42aa3
# a937324af8564401982f89539e5efd76
# 440b05639ce5424e961cf20316dd9e98
# 9695f969e0b94bcf90e75381f3988593
# eaf80615356248fcb10b9ae30ff1e5c1
# f414c934c6644c96b9a6314064e0b7e3
# 72d38f95a1d84539962f75eb0b1863f4
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# 51530eff008b4cf59f9a11ca107dcd19
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# ff4679d6122848c1bf2f2d5b4681d6cb
msgid "|resource action nothing|"
msgstr ""

#: ../source/resource_common.rst:16
#: ../source/resource_common.rst:28
#: ../source/resource_common.rst:108
#: ../source/resource_common.rst:128
#: ../source/resource_common.rst:180
#: ../source/resource_common.rst:200
# 874fb89a37db4bdabd14eaeb895922d1
# 767f31c98e554841b49b3a16e7b34f7c
# 6e11a11f074547258872b80d1a7ee4e0
# 4600194e463b403386ff194d59fff9c8
# 8357e75af95144589ee6fd745312df56
# af89a7a051fa4df3a2d804b9055ad3fe
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:17
# 59a017fcf91a49c3a3a90ce5ce658f24
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:19
# f1e200dcb4ed47ef8853c6e358ee2c14
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:24
# db32de81b55d45ce8fb672bd3cc8fe1e
msgid "Properties"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# 8a5def4c25f0451eb88000e4a4e6b6aa
msgid "The following properties are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 01d52938206941768c70ad24437150ff
msgid "Property"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# 7a2d5a7f57464b9baee5c2c510bf5512
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
#: ../../includes_resources_common/includes_resources_common_attributes.rst:29
# 2ca42e9b60dd490694ef996f0e25ce89
# 3d36617d95a440d3b1d28da63bb6fffc
msgid "**Ruby Types:** TrueClass, FalseClass"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# 9a6424e1442041d8be358ffd0904b67d
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# b7f3034e6ca344198cf499928baee2ab
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 0b5b27ba54b4477182de95e16b29cc48
msgid "**Ruby Type:** Chef Class"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# 53f198a8daff4acbab91a24456e3b008
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# a8d135ff83494443800b8eee50bed13c
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
#: ../../includes_resources_common/includes_resources_common_attributes.rst:25
# 904d11a1c818499090eb7230ea52b4d5
# b26f292d0d074b148beac94e5f83e8c9
msgid "**Ruby Type:** Integer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# 69e86aa61dc64ca993bb5d67dc7e286a
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:24
# 911f1f334e1a40168898926728287b89
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:27
# 9afefceafc254cc097317f2ab1c66865
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:28
# 71e08b2ff6334214965f2b620b4b5b9f
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:31
# 5933461adc634b7aa591ffc318a59840
msgid "|sensitive| Default value: ``false``. This property only applies to the |resource execute|, |resource file| and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:32
# c091701a147c4fc0a76173106a39762a
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:33
# 2d8ad6fa625f4ddea6f4afb0cf071602
msgid "**Ruby Type:** Hash"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:35
# 90a50631971248dca7630fc5a2d6c364
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This property is only used by a small number of providers, including |resource user| and |resource service|."
msgstr ""

#: ../source/resource_common.rst:29
# 5ca5fada86b149d296f0b3962536756b
msgid "The following examples show how to use common properties in a recipe."
msgstr ""

#: ../source/resource_common.rst:31
# 92aafcdc62d741efb8723c966dc5da71
msgid "**Use the ignore_failure common property**"
msgstr ""

#: ../source/resource_common.rst:35
# 8c926879190744fa9fad291c9c3a9158
msgid "**Use the provider common property**"
msgstr ""

#: ../source/resource_common.rst:39
# d2e84f5b2a1243968ceb390fe480b523
msgid "**Use the supports common property**"
msgstr ""

#: ../source/resource_common.rst:43
# e762fd4383de4a1ca847b04859002fcb
msgid "**Use the supports and providers common properties**"
msgstr ""

#: ../source/resource_common.rst:48
# f0974acdbe8c4d2ab9242902d1d7848d
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# a9999cfb7e524bde910fcbdeb59950fb
msgid "A guard property can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard property is then used to tell the |chef client| if it should continue executing a resource. A guard property accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 2ecd9f082cd4430a9fb42b3f922ecd29
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard property is not applied. String guards in a |resource powershell_script| run |windows powershell| commands and may return ``true`` in addition to ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# 5ba219460d9d40038c52981079c461f4
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard property is applied. If the block returns ``false``, the guard property is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 7193991e69fd40f19361fa9b0401c92a
msgid "A guard property is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# f1961c67af3f48a4811241f4b381625a
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory property (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:100
# 9058a088db674ee19a55af5077aea3c8
# 7faf7bfe82224924abe2579c4a3e4e41
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# 6c8170d15d2c4648b135fd3853ccfa3f
msgid "The following properties can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# b268a88e68ed414389f13839272f9c07
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# 82472dfe90494a49b2081caa74d1eba5
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# 398726fc9b724e34ac1299cb23d720e2
msgid "Prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# da3bccafd3524cb1ba0c201bc2cc3e27
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# a89c619660984b57a4a885d2163bdbb0
msgid "Allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:58
# 267b3ac3482d405aa3dd51b0ce3888ca
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 874136e6ac9b4234ad02f9901d942fa5
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard properties:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# 6b8002a52e3f4a368bb08fc16b99a7f5
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# 5700cee5ac0f4d32997b8a51ae5249a1
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# be4f1d46853e455dbd0cebe83d76cf98
msgid "Specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# 0ad1e3669b624ce08347874f92c99b13
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 0a71b5093def4a26bae7360596413ec5
msgid "Specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# 8b4ee45a315c4e13a9b205e606e06131
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 952e77b21d5e42f6b46bd8b415d6bed9
msgid "Specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:35
# eff3ce2546f540a180552964e5c953c2
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:36
# df9f3069e8324364b09ed0205751f696
msgid "Set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:42
# 845d76d88f534e6791deba68ba7fd9f3
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:43
# 8d5a4ee3b74e4d678620581c816f8998
msgid "Set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:62
# fe593765d686428b85b64de4884ab9cc
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:64
# 91991dfc58594d0fa4ca60b326973db2
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 56cb2745404844b9a2065e902cb150e7
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:68
# d19e1385a1b144e9b187cf9262687dc4
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 10f653345a764fac9b1dfa2b3beca548
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:72
# 6f8f00e987f34ac7bd07baeee497c109
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# b20f1d7417fc43818aad66a4272a621d
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:76
# a69a93b6287f43d6988f7fefa6cf179a
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# b920327e851a4c2aa61f17198aeb6712
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:81
# 92bfb591193c434a8257516edeff072b
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:83
# d0c714ac69d54a6eb583311d3e5f2b51
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 404000baaef940efb25d5b6a54f10ad9
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:87
# 156081f342fc41ffa4c889525c854ef5
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 4c8e39a6829c4b7ca4d5845ab7b7896e
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:91
# 8cc47899f9f24849b592d7011b1a0073
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 3a9c0498d3264dfbaa1ed558e820452c
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:96
# 1b8da80059c247378e5dde6dc43a0c36
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# b18f81ba7e1e40d0a0d7c36b4bac54f0
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` property to specify a |resource script|-based resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:5
# 4a041858fa90427d9b8c660f656f97f8
msgid "The ``guard_interpreter`` property may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:11
# 70e9961f68c14f7ca6a9f4f7b4a77742
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:13
# 3a31e6f0b89741b0b29f4d71c2276911
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:14
# 3b8ed8d7d31c4be1a6be19ebc12f3d69
msgid "Evaluates a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:15
# 5333944375ed420baac1482d40fe03a7
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:16
# 87841b05142c40b592250b65c1c68f21
msgid "Evaluates a string command using the |resource batch| resource. Default value (within a |resource batch| resource block): ``:batch``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:17
# a07638444e694276920039c619ded7eb
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:18
# 2bb8df7b4c9a4ae3bc6cec461eb3935b
msgid "Evaluates a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:19
# ca1335278cc14126bdc9d0b9980074d3
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:20
# 474ec620c28a401dbe35020a22e809de
msgid "Default. Executes the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:21
# c68cc8e3c4e14e789a203c3b182a7a6d
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:22
# e96fe7124c924e11a4aad2a4cda15b97
msgid "Evaluates a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:23
# f2933f431c504df89e3e2248cecba26e
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:24
# a043b41e430c45df9e251369d3f50efa
msgid "Evaluates a string command using the |resource powershell_script| resource. Default value (within a |resource batch| resource block): ``:powershell_script``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:25
# 6bd3a9a02da548c4976a344a95578be2
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:26
# 214ce935d5b84a6ca0fc2e71c878831d
msgid "Evaluates a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:27
# e5ff56ac55b84e1584465279a45a0a8c
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:28
# fe86590383144780856a974a332fb3da
msgid "Evaluates a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:104
#: ../source/resource_common.rst:220
# 9e4e0fec51044a24a0f3f9bc2282f84a
# f4502ffb1214481b97eb5923d8b895fb
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:5
# 5936e323afed4c9d8fd01a88dc2bc00d
msgid "The ``guard_interpreter`` property is set to ``:default`` by default for the |resource script_bash|, |resource script_csh|, |resource script_perl|, |resource script_python|, and |resource script_ruby| resources. When the ``guard_interpreter`` property is set to ``:default``, ``not_if`` or ``only_if`` guard statements **do not inherit** properties that are defined by the |resource script|-based resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:7
# 169ccec485564f2d8e19fc14fa99710b
msgid "The |resource batch| and |resource powershell_script| resources inherit properties by default. The ``guard_interpreter`` property is set to ``:batch`` or ``:powershell_script`` automatically when using a ``not_if`` or ``only_if`` guard statement within a |resource batch| or |resource powershell_script| resource, respectively."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:9
# 5268ce66333748b4b120dac6a91cbb5d
msgid "For example, the ``not_if`` guard statement in the following resource example **does not inherit** the ``environment`` property:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:19
# 14032670be494fa59c59aa2ca23a9130
msgid "and requires adding the ``environment`` property to the ``not_if`` guard statement so that it may use the ``JAVA_HOME`` path as part of its evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:29
# 7f2ea977c97f4e539d77dda5c0aee71e
msgid "To inherit properties, add the ``guard_attribute`` property to the resource block and set it to the appropriate value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:31
# b2f60f8e3ada44d190a999483edf90ed
msgid "``:bash`` for |resource script_bash|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:32
# 8b5b27ae505c4817ac9c085c36bbab19
msgid "``:csh`` for |resource script_csh|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:33
# ec47ac56e2474cf0a210e048c8510d9b
msgid "``:perl`` for |resource script_perl|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:34
# 06746a427abd4da18dabbe9775920104
msgid "``:python`` for |resource script_python|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:35
# ad94fa6d1a26462ab9d146fbfe01cf87
msgid "``:ruby`` for |resource script_ruby|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:37
# 0618724beb33488597833517a1cd07c1
msgid "For example, using the same example as from above, but this time adding the ``guard_interpreter`` property and setting it to ``:bash``:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:48
# fccc7fc76b69423aae84146fbaee2af3
msgid "The ``not_if`` statement now inherits the ``environment`` property and will use the ``JAVA_HOME`` path as part of its evaluation."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# 4704ed64749b44ecb13e852f5ca7e517
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:112
# 9915f4c42b2e4b58ab573fd173f93b5a
msgid "Lazy Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# 3631714f89b64783ae1d22609f682be0
msgid "In some cases, the value for a property cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of property values can be helpful. Instead of a property being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# 97f41fbf7964436c9e8150ec165b7e54
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# df241c5526e64dc788c5504f02cfff44
msgid "For example, a resource that is **not** doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 30ea5d358b524156822cadfd2a215e9c
msgid "and a resource block that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# 2c6047df4ed94c1a8e3ef80bef33d467
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource property."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:33
# 88d385a53fe84444b4ee155e4b8a2e90
msgid "The following example shows how to use lazy evaluation with template variables:"
msgstr ""

#: ../source/resource_common.rst:116
# 3b34dfacdfb149ebb2811c104ab3f71f
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 81b56114ef174a89ae1b0d7a896d397c
msgid "The following notifications can be used with any resource. Notifications are used in the same way as properties and are processed during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# 7108cfe5a9d74f37a2ed2f18dc1e4d1f
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 2cc71a1219584a2aaa7a9c000231fa7f
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
#: ../../includes_resources_common/includes_resources_common_notifications.rst:17
# ae372adc063847b89cd5f9421f9f1339
# 6a37c3e50f1a4a1c86e3bc3bb9c31495
msgid "**Ruby Type:** Symbol, 'Chef::Resource[String]', Symbol"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# d94bbaace48241b79cee11f744524c31
msgid "|notifies|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:16
# 350ba6478512418c96bddcee028416a3
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:19
# 78e91875fdf14dd5847eafe381f30a2e
msgid "|subscribes|"
msgstr ""

#: ../source/resource_common.rst:120
# acec4dbd30534f79bb720acf6c954a6e
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# 6faa6cb43dc842ada5db21f3a180eb19
msgid "Use the following timers to specify when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# bc4aa3796ec24501b3d8b0a42bff0420
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 4c183866051c477987167830088de51b
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# 71d03e9ee9d44a59b434e5e7657379ce
msgid "Use to specify that a notification should be queued up, and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# 7c3be8ae14734972a10abfdff33f645e
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# dfb01592f7a84ba79f905794eaadd9cc
msgid "Use to specify that a notification should be run immediately, per resource notified."
msgstr ""

#: ../source/resource_common.rst:124
# 53d6dc8b0ac0400890e71fdee67a5780
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# c28eb140e67e4298ba02703baacbc996
msgid "Specify the ``:action``, ``'resource[name]'``, and timer (``:delayed`` or ``:immediately``). Use multiple ``notifies`` statements to notify more than one resource."
msgstr ""

#: ../source/resource_common.rst:129
# 6680f36ef3624d988826e054e96cb2ac
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:131
# 88d47aa172ee47f0935a6b0944e13d71
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:135
# af7c8b2836754d9692418cf59779fc01
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# d3dd281cccfc45a39a357adedd90a1f5
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# a2be034a874d446e992a6b837f54760a
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:139
# 63d9b888e69a40e38956d5bfd5cf36bb
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:143
# 46ff779c6b8f412ea4164068f09fc321
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:147
# 105b5cdb36c54510827d60adc9d37dd9
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# dbc6eb24f95f42eabd3488edb237b24f
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 07638ae4983644c3a3f8c337f6381058
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:151
# 116fb35de7634ba489d1772737e73b16
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:155
# 71d9f920adb54168aea87dcad633e8f4
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:159
# 7b7e2aa67eff41e2a91c6173c5e4c549
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 97d7fd97716c4c8e85c421af0b56559b
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:163
# ba9680e5dd0d42a3946781f2c550aea7
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 2660f16e041b4338bbb5f843e2fc75e2
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 9f1d9ef58dcc4bce945e645d3fa46d7d
msgid "where the ``command`` property for the |resource execute| resource contains the command that is to be run and the ``source`` property for the |resource template| resource specifies which template to use. The ``notifies`` property for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:167
# bd756997b0974e0fa3d84ce05e3ccd8e
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 429de880a6dd4b38a683eae7fbaba37f
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 6e96dd57fc1d4d4aa686983b6eae6021
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:171
# 8c48c3c8e57b4e6491ebf08ab4200578
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:176
# 226b62e00a3446f7add8bf05593bac82
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# cae4c3b31c714973b73f38dcfb638bb1
msgid "Specify the ``:action``, ``'resource[name]'``, and timer (``:delayed`` or ``:immediately``). Use multiple ``subscribes`` statements to listen to more than one resource."
msgstr ""

#: ../source/resource_common.rst:181
# 33d6a1f60cc04116b90cc50a50530d64
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:183
# 71d4935caaf14e2c953cd360aafd6c8e
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 3cbe837a838a4a9ba4b3a6adec925e9a
msgid "Use the ``:nothing`` action (common to all resources) to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:187
# 281e8a949083450eb96ba5c919499f57
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 3a4fdabaa62245fdb8b64e71d651424e
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 0d8b3e9da4634e7cb412d1c247189110
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:191
# 564352c507144bf0aba41cf5467b3d42
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# ff86db19910748398c4444edb6ddddf1
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:196
# 543641e383964514836170b594b655d1
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 5634dee07cf54f25bd92ad2b80f8c16f
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# 0013c91a129844bc9d9d26794be5906f
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# 1bf0f213cca7439a85f574dac89fa233
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# 25367e2e0e9f483c9f581ab613263935
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:204
# 19bce6bb9f344f3786506ccdda873fe2
msgid "Run in Compile Phase"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# e7e6fd99f3d04163800b4273400468ac
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# f520ff953128437aae0d85ea7cdfe1d2
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# b41c8349bf4043b69761bc31b031c47a
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and performs the necessary steps to complete the action. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# e0e2532d45a7457cbd352bcd0a0923d3
msgid "Typically, actions are processed during the execution phase of the |chef client| run. However, sometimes it is necessary to run an action during the compile phase. For example, a resource can be configured to install a package during the compile phase to ensure that application is available to other resources during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# fd834ae2a6e843d0ad0977f5852e6920
msgid "Use the |resource chef_gem| resource to install |gems| that are needed by the |chef client| during the execution phase."
msgstr ""

#: ../source/resource_common.rst:208
# a228b5f7f0cc47c69136ba36950ce82c
msgid "run_action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# dc25df72f9604dc890e3fa3b9f9e66b8
msgid "Use ``.run_action(:some_action)`` at the end of a resource block to run the specified action during the compile phase. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:13
# 76b1ec47dc154f29b2a21f60d9b8b556
msgid "where ``action`` is set to ``:nothing`` to ensure the ``run_action`` is run during the compile phase and not later during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:15
# 00607dc12a1e4801a75aa5a41a29fddd
msgid "The following examples show when (and when not) to use ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:17
# d47a7c2707424faf825725a81f2762cb
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 6a29a5d8c8a84a72b3758ca0f244720f
msgid "Sometimes it is necessary to ensure that an operating system's package cache is up to date before installing packages. For example, on |debian| or |ubuntu| systems, the |apt| cache should be updated:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:36
# 844cd1a0bab14ff9a5e601623faedd33
msgid "where ``e.run_action(:run)`` tells the |chef client| to run the ``apt-get update`` command during the compile phase. This example can be found in the ``default.rb`` recipe of the `apt cookbook <https://github.com/opscode-cookbooks/apt>`_ that is maintained by |company_name|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:38
# 4a9b9f892a954bae913e0f1bc1ece6ba
msgid "**Use the chef_gem resource for Ruby gems**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:40
# 832ff9e405b54662bd06e313ed2ef4d8
msgid "A very common use case us to install a |gem| during the compile phase so that it will be available to the |chef client| during the execution phase. This is why the |resource chef_gem| resource exists. For example, this:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:48
# 9ab3cabcb4504bcfa4fb1f76cb072a07
msgid "is effectively the same as"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:57
# 066180bc23414a31a102fc373e9930a5
msgid "but without needing to define a ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:59
# ef12ac8dc9924c5a9ca9c45a5cc780fd
msgid "**Notifications will not work**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:61
# 1fd72fe4e55e4a89b7fc6a7a2b4f3fc8
msgid "Resources that are executed during the compile phase cannot notify other resources. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:73
# bfc462d5e9b747bdbe3f5f372d9b4bc6
msgid "A better approach in this type of situation is to install the package before the resource collection is built to ensure that it is available to other resources later on."
msgstr ""

#: ../source/resource_common.rst:212
# c66d9becd2cc490a9ebe087b8282aaca
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# d62fa15781ca432a85b3be0e0c28f4aa
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:216
# b77aa44c1c8840e4b4c4543696dd14e6
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 2d8dd5904c2d4fe6adec137dbc57d0bd
msgid "The ``rights`` property can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` property is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 482648e4d24346c5be863ce204ec2a00
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# a7a859bce2b0492784990dab5859287d
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, and ``:full_control``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 93c530850c0e460088d4c1902e15a397
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 9e85a57aa36849a8abe2e637c6e53599
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 3c720a8fef6c40098ebb59ba9f8a7711
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# f7e01cdf16a7449188ed8ccdfaeb863a
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, 'domain\\group_name', :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 003bd8b356914e508c5e0cb74fed2568
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# cefd8e737465491c927d8192b11dd392
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# fa702a74dd0b43708e55b4c2717773cd
msgid "Specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# f4d2ba44f707455393199919bb98ecac
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# c7c89e31304245f2ad304b29e9518ec6
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 941b58f649ae46b5aafafd6ceaef63bd
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 06f4c7560bc2443f84bfe1a5e1ee681e
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 215677450bc943dda3fa728c1ec03c5c
msgid "The ``rights`` property can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:70
# cb0da1eeefda43d69d44271e91db0e99
# de1efbb13a4d4dfdabf388b0238a8c2b
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:52
# 78dc44121a194f06a8972fa74cfb99e4
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:54
# 58e172fa16b0438688f688494b333886
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# b0820bc810934f97a0f5536c1daaee78
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 9d0bc04a1ff444a2b0553a211a6a86f2
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# dea2767a96634470b66265c6e00e2c7f
msgid "Use the ``deny_rights`` property to deny specific rights to specific users. The ordering is independent of using the ``rights`` property. For example, it doesn't matter if rights are granted to everyone is placed before or after ``deny_rights :read, ['Julian', 'Lewis']``, both Julian and Lewis will be unable to read the document. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 59fcce5f227443069b2d907412057403
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` property can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 3e94e79be1084585a3f0c6b1ebddd133
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# ebb00275f44e4b6d8cda59bf2edf3662
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 6f470615283842bb82e9bee3ba5ac76d
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 0ea57844b864442d87b5a69152ab6646
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 8e860e081871494fbe2473060bfe6d70
msgid "but then not use the ``inherits`` property to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# e2faffebbdc24cf69a19eaaf32166c3f
msgid "Because the ``inherits`` property is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


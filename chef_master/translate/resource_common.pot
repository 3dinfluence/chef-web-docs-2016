# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 15:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 026b7ae332134b2c984dfe020c80decc
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# 9caa9211609f402596e9c908ed16f7fe
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 6ea4526bba6b48499ed5d97d6c2fad34
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 89102b4cab824fddb226c5e5961b4960
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# 707113862e9141a783a4a141736bd51e
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# da934094fea242999f59ada8af11a71e
# 16c954533c704717bce49e5ee58095e6
# 970686de8f594e9db4db61540bc417fb
# ae9ab8f2cbad471b96648e59091c776d
# 812a2c59672a427d8ea54b27554a8655
# a85ea73ca29649b78a0a6f0f96a4de68
# 55714bb7d0fd4543867a24f52b18ec08
# 862271bcac094deeb57a759a43cc48e0
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 163bd94ae4cc4813a74c65af4b6d8acc
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 1aa8804d21564e1786e61380bedb3150
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:124
#: ../source/resource_common.rst:176
#: ../source/resource_common.rst:196
# 57a06a73241242c99198c58ae17c9797
# d0e65fd9e894496ba081adb5ecac7fc7
# a4ca66b9d9cc46ab81af1175d0f9bf2a
# 71e5e7de8773452a8ba6dfbabbcb2dbd
# 91444ce7042346de8d2be92891f09979
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 9495b6700187437b8c9d02a6a23fd9cb
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# c7912fe3e54946048d7b75fdcec7c4c6
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# 109abf31502243e59a985c51f2acd2d6
# 3d3b565c554842d2bac485b75363d658
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 822e6041d0064b3184757ae1ad66593b
msgid "The following parameters are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# d466e3228ee941f6bbe4fb9b7ace87f0
# ed5260e0f14a42f9a8147812f9d6ef0c
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# eb217b0f90b7462c8ecb3a9d70cc6582
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# f0d26f0ff7724a82a3cf6fb43756e147
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# 8108599ed9b048d5bc1178a618efc91c
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# 476524d40f8a4b27bf5a25ef2a4175af
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# e1d9abd2290d4b478e5fd0469150aa78
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 59131c5f541042ddad8ea9261553ce22
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 617849f5862b4b2a924b89a54956b032
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 553a57851db74a5099e905059fe1f3d5
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# 98f3479eceec4e819b9a66fb5e987868
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# f504a121fe7a42c69a1a62d97f281acd
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# 4e8fa66e3cd447f7b64670280f3051c9
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# f60e4efb5477434fb34b76b2cdc6725c
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# 2c0479f258a548af85598b97f7d280a7
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# aa56d8074f3c4c5a8a772a5d0485582c
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# c87aa2e9bad4470ab82c19b1ede53aad
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# ac0d3e055a0746cda16d06d85326f9b3
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# 1e142ff15be740b089c64cafcc51dfa8
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 1b5d251d2d394fab9b1201f4e80f0f95
msgid "The following parameters can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# c5d7e9c87d2448af8e15bdac4e5ef10b
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# b2242e6f0c664687a6731b263c9c61c9
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# 8ba491c203a24eda9a0a74df6672e417
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 6309b870f0da4276bbb18dd87aca97eb
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:82
# a6123be969b8456ea9c8b6fda8c1abea
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# 7305437fad1446119196b58df38db763
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 89822eda2e6147e785eed1b37d260748
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 4e9bd0b22d65442a8f15c883f1636a2e
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# 6b66eef805994dfc8f1749bcc263a60b
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# c15f4be99a9d453f88a8813a987f85e9
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# f77ec6eeb828494082a4539266f76fa0
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# 5701e3ba8c0c41d88997d19d376564b6
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# 92d289ca82294fc48680288eb218186a
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# c1f71ea1611b4a1780fe55f45610ab82
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 1b69fb1a4c624b8f8150ccf13842df6c
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 1f661689d79848c7ae3388922f5ed1ae
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 96525adc487449e7a42339e80744cf51
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# 333e818426014dbca3562d2ff7c0bf20
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# 0efa79c0c3674b90a66020eb0c1f78cf
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# c35b766785b4481b9c843a6ae3fdb259
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and then |ruby| code to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# bbd2dee4b748474eb0799ac6adceef42
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# ebf6ec9701294f1981ddf988301cc8d2
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:95
# a14691316650440587fbc316b5a24f17
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 15f992b3c7684ecb879c7897e7cb53b5
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# a0825f7b9fc24aa0bd1a2ad6362da051
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# 1c399706a13b4703ba0d38dbec8a5886
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# bba538185f3f46e4b2c42a01a8bfa3ce
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../source/resource_common.rst:100
# 3df0271cf39c47d58c94a5d099a9a11e
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# 408a44a67ecc4ec6adf068653f44f26f
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# 3636f27c02644007b00eb5797998a345
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# d12a7f9e4ffd42f9acd8538bcba8353a
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:108
# 21d8cb90233a4fe38d6e30dfe591977d
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# 77765c933f2344779a74e27d8d75a740
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# f496e70610064c448c9fb951919b3ca2
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# fb8560cb9150449d9b16b37b216ea9ba
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# d661ce38deac453684a5877f23fad6d4
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 51271de932c144a4b189e89d035cd46e
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:112
# 4c05ca47be034dde978b46addb7ddedc
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# 40d85f81094b4f4aad47caef9f946899
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 7dda887a48a545648e53277358751aeb
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 1bb8d07654324e95874871ee588c6660
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 88fc57c21473414eab8e90b2b07637ff
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# c03c0bd70da3425cb230e40dd01d681c
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 79696453b00e442287aa8ee867a6528a
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:116
# 35897d7d6f974d199f348490580abaef
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# a2ed3c984daa4b5aa19216461667a00b
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# 1c9ce4b44d4d4b3dbd2240482eec63b8
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# bf0720056f084bdd84bf45b9db4314b6
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 231e0f3ccf074392abe9f895c79ef994
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# 7577c9f01d4f4a6ab48a3435dbf1a949
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# e638cbed57df42e4945748749cf7439f
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:120
# 1af7911d3e1a4e0386da95bc13e187d3
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 55a16ea262664ad9a4ea0055e7e204ab
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:125
# d741786b878345b6a580c047e72f7c6e
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:127
# 7577b31e4bb64e9a8eddd071673868d8
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:131
# ac0cc9913a0d4cb8a7d52c7d089649fd
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# b91b8c051bde48eeaaeaf3050399fa74
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 270468424d2645b1ac6a890e718eadf2
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:135
# 98305cb2074b4dd4beff4e6e406d9ce1
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:139
# afe44d7aff984ac0a29637b6d2103563
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:143
# e4d41214de3347c4987d9d8fb7d4b7a1
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 78da693af8ba4f3f8aecde8477b5f47b
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# e875b4b6211b4a699245fcb7e51c4b6f
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:147
# b011772e617d44a2bf5e33285c809913
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:151
# 1dae8159ebca4b729599704e7cb4369c
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:155
# 8f22b735d206434ba104429238181610
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 82f67ab1d4a945adbc61636140adb335
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:159
# e6280eb1f6bc4eccbc926e8a856028e3
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 716525affb1f4261bd9030b2d63b9189
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 16a85133aeed43d58eac531cfc9f0447
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:163
# a61979be2922493ca39b8b5d4486adb8
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 1e31f72cced142adb15076b2392363d1
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# f50cfaa09058476d8e39849510494707
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:167
# a4b63e49fa4c477e9ff319098b777297
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:172
# a4afa6e01b16430a8785e9b1567e0a03
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# 56e0704128e64479a98236c6fc01f646
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:177
# 03ff4ea056314f5e8a590d1c2e1a80de
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:179
# 09d01e3dd81143a99d9a7ec0087e2f7b
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 7370af434fd949c6b221739f1311c482
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:183
# 09bc3c3bebbe4242a7ce03adc90448af
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 31d062af15564942bb15455efd2c11de
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# df17e445ad4242819e1411640e548243
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:187
# 3a37a16f7db443acbb97d457127c7400
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# dff7c773285041c3a40d164ff4a5c49f
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:192
# 6e539b6cd30b4349ae80b98d25a926af
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# 9301c051abba4ad6999543dbf4b400e5
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 9fbb51377b154859ae7147d02f18d3e8
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 3096a1b9ac1f49f58dfd6b45c91450f6
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# bf8660985d484e01b02276b607dad814
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:201
# 64475f4833f04e578fe8373631d89035
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 7d56b23b52994e85a31e83c4a9b3a6b3
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 1df8f683196742a1acc7a669b64890e0
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# ca4fe58fce9f44ca8cfa021ca487e06b
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 50b1d795e88e45cbb48c618239f6d6ff
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 0097e26d46404bef9130f3048f2fb9ff
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 5ccf9fc24e174708924669e58ebab7ca
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# 0f1eeac8a35e4ec0ac63e4ad27fca7fe
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:205
# 38cf377ecefc42b9aafce1dcd8bdc451
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 109d69c215bf4a229f280086111cac55
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# d78920dd89ab407cbc8da9cce771f873
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 2be5e29f41004bdeba500b48a9f97a23
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# e1fab56ed20b40d6aecdbc510fcaeb3f
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 6a2edebc558840389855715ec75eb73f
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# de9a3dbe3a1c499faf152e6f055305ac
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# 2a69e846012741e4a43bb0029289081a
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:209
# 7899fdb3865949e39182c0582754d94c
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 4d062ff7c9bf43b38e362363d7aa7e76
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:214
# ed102261b10947748d528526acb8af2c
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 036433ddbbce4add9ccfd43dad4c568a
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:218
# 3c5504d41e434a48866007ec53562f1e
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# a8ca6e5e962a42a9b43169a724d84be9
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 6a0e31a2de874344bf836fa3a9e9abb3
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 17af0e82f4834667b2abd5efc59c3500
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# f55566dafdf646aa8ac5fca54685d810
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# d30c79ea0d354b6b8d33c24bacad9adf
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# b03a35bb19344f569fd50485eb9b5839
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# 0045d0e5952246428e1496fce698ef41
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# b2c37449aef34991b020b98bd6bdcbd8
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# 78b800323188493781a7c671b4fcd135
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 21b08d5fe5424cadb972d1b265aba362
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# 74e12e3f9cea43f1aab6a0b9e7c54267
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# bcf42fdc1f8d48279147eb7d1a293fd9
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# 3492eb24f4564a8ab661a91c1e8203c4
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# e528201a7b174f5d90a6e4e6e64981ea
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:49
# cc4a3a0ee05a450c95c2712a2c30ae7c
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:51
# 6563c945da2246fc88740385cd205f91
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:52
# 470d331e21bb45628fd5fe962fcb6e38
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:53
# 8ee20db30d734db9bb4230ad5aa9e8ef
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:54
# 4a5bb5d3848247fc8949cef87de8adce
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:222
# faa80e33f4bf480f95006852d6e01d96
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# 06a4c4650c9c4c6aa5711cef978585a0
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 2af5c818664a45c9aaa12f7ddd92ddcb
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# 70e7276ea09e4047828f391d3bde1518
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# dba23f37c61f438f98de6123c2053c9f
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# 95586021be3a4743b5c3cdb70522cf1f
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 0e528ca4aadf48f49104e16360b13897
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# 6cce467a1b5e4ce29d610b45755aa04a
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


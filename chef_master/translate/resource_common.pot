# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 1b31f5bd672540578c1ef85e163bb763
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# 79ff7035975d4ba2a35a4b849da96ecc
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 062cd26e78d141f68e7cb0b2ad1e7ff2
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 3ce39bd0994b41919bbb6af91b474439
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# 85aa8474281c4441aabcbdf620735c4a
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 6a6374a870404852b609a6103bb1d077
# d918bc9c0ac64f84bebc74d1191236ea
# 5ad0aa15ac3d4ff398f91691cae7a966
# 820620458b3b499a82e6dd3715c19662
# c563f8ccc66f447ea5e34c8d1abc6f2a
# 6eaae835a976465c86982a66f8e054e9
# cf380f0d0a2648e2be0d43289721a717
# a849a76d7d864f23bfb8162245128911
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 64df063cbc42481585bfbdc401c427a0
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 191f9580bbb8499392f8a30a8bf8965c
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:136
#: ../source/resource_common.rst:188
#: ../source/resource_common.rst:208
# 2911be67e93445d2bf7c4e4996d6bcdf
# 2cef0eb375e343eaa4c18c521c685edd
# c30e2df0d6c44d9abb816d2219464085
# a4a4cc124e7241e2a978a3235f4aab08
# e5628555f339477c9e8dc0042ff5ca96
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 7a6dec66f6754d3a8d42c43e53882bce
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# 380a7bebf8b343d8be66b5bb816cf1b8
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# ee94a791dc984745a70f35cc8f44e49a
# 7d9d21085fdc45d18f9612d1f26698ac
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 9ed3f00c733c44b7a0db2514711e56ad
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
# bdfcfde370a24e16b6d42b45a3fbca27
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# c263b119bfd648f394b1e15368e92a10
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# 5ff456f6b6514c97a6ebb709ba9a4396
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# 5c01a69cf09a4ff09a5277a23615bc86
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# 7a7c8f62b056494da83738c03e7a450a
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# 0ab27e1aa2864316b2d1b7068f76c8d7
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 6d087f4ae2f744dd93e4753734aef718
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 7cf9d19d7c5a4ccab6c79bb78ff387a9
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 541a67c06b654e6a89cdad09141e74aa
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# f6225041ea404125982381e3691bb0ef
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 6d4a4c33c2a6417b9753c981937beac2
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# e0e9fcba6ad0457c9245e81daccee5b9
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 910577eee4e749eca8cb33487039da0f
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# eef240a054c44a7c9473ca6ebb96b138
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# 18c1be672f89443abb8fc1628972860d
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# c4a79e654a10492eb016e0529e3e1859
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# bef6ba755dea442c8fc1b53bd5c410f8
msgid "Guards"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:5
# 7028e189e79e47428039be19fe100b79
msgid "A guard can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard is then used to tell the |chef client| if it should continue executing a resource. A guard accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:7
# 1e2fa617a5994dd8b4b6caf8ad501bc3
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:8
# 7340fb8077824f5099d3d9ae708d6251
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the the guard is applied. If the block returns ``false``, the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:10
# 63899bbc0bfd491ca2f9ea4d4825323b
msgid "A guard is useful for ensuring that a resource is idempotent by allowing a resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 99d73884db3341748b70522ca0798f50
msgid "The following guards can be used to define a condition to be evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 875ea861a1f9413dbc053ad759d0750d
msgid "Guard"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# e49ce6921f194f1a9c131953f69aa136
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# f2d767ad3dde4448946ce8ee589f08b8
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# 72c767e35a444bd4a6f7d35e0b49bddb
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# d62dc815acb54b00af3bb5f453797b9c
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:82
# f3ca8f2bd00f451d8e60f93eaaa98c28
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# b9d5af3583274acabb0894fbecdb8b24
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# f9fd0b4807c1434288f00219adb95c59
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 5858b234d9364b3994528bf7127bcc5e
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# a34d70c834674c18bbca9e2ea6b5f3a9
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 9b41da77df15438c99cf8fe487a49afb
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# 1db27223b3664e5dba82182589daf0f3
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# fc6afa51f9f44b0f9bf1548dd1add6e5
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# ab7f0f06c46d442b9f574033d238cb17
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# ebf06b57f4944944806c42e22fdfe54d
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 7357ec9c825e4fa99a0df3b2b6bce643
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 1ba0668d23c04c30a1b387ec4dedb3dc
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 098a7da1a24d4e68b855fe7bd22f3961
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# ec35220915584977ada2011401db0088
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:88
# 425ee01469234c56914d404f4e09e1b5
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# c01244683783467fa63849dc0bfefcaf
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:92
# b8a4250cef82482b9615e63dbe95bfb9
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 843c3b21a0e6479ab923722e80faa8f8
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:96
# 79e514eb5c8a428c96f18b4d07ccc906
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 466780fcb1374409ab509781b387a40e
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:100
# 37f06c4dd5354d07814fb1c6481ce7f2
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# a945fd4858f949bc9fbbd69a5607873a
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:105
# 4a4f0d9bf2064a2db0997805c09bb2da
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:107
# cb0e1c6f02de49279b4bab6dc0c8fc29
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# bb073cd945094df78d37159edfbb9cd4
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:111
# 4207d28f386f49c089154d3108fc109b
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# d00003f476d04167b2ffd85e1793f753
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:115
# 0f05cc98097947d8a24c111b40b2479e
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 4a9b538cdb45490faad02795db6668f3
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:120
# 6efa3290a203401882e07f0d300fa407
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# d9fc2e1e2e824b7b819bcde98588bbc4
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# 8ddb07085c5143e3894e3a3047d43ff0
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 6dc0f2585485469a9e80f6e8a0363f8d
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# 2c9b131226e44dccb78ce1cc8069a992
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# dda7b532cd4f4b33aad55fba905efe44
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:124
# d865fe61df08481bb111931174e10cae
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# ec6b96c3b20a4659b349f5d69c43b3a0
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 586cd485fcfc4d09899f987eb43c5efc
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# d709b9c3917b458080405a7bcf552ad9
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 69d016df6cad464ea6e2ea0d26d0799e
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 9b025cf399134aecab959a1663e272c7
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 3d367f4598a04136bd2657a010cd15a3
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:128
# 207ca07a60c44806b6c51733403d86ac
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# 45f4ccac5ca24b9db4a291fd53c6d6e4
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# ef646cdded0849ceb58e4e9d94d34e46
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# 11d944cacbb74b88908f59f6b4f60ce9
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# f0b365247ab1411fbf5016faf8fa60e9
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# f08d7b0309dc49e49c07db5a0459f26c
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# c802edb50ac64071998560a5b61cedee
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:132
# 951011557e364afcb89e1972695bba9d
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# d0d17e8955db4246b0e8d3b355709831
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:137
# e25ca04deafe49f2b1f4e946bf916f5e
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:139
# 5b0670f47c6d4ac5ab46e6aab212f8c0
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:143
# 0364b57d480346c49efe387afac74cbd
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 713f46a2b9854d0fb469dec2a34cd9a5
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 0aba4ae23ddf4d198f17c51caa90e3a2
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:147
# be6dfc49709944118ea13f4fb347c5a5
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:151
# 71014eca19a44779bd9f65484c620b4d
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:155
# 0f5071facab64f76a0e41d80591ce40c
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 57774df54bc04f4faf564692fb3b3762
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 93f0a89974604fcba1dc65e9b22ae004
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:159
# 6d3773304569418db01d8832d6a532e1
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:163
# 734d19acf3314d3b8836c0290b0e15b2
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:167
# 7b8507a49386465fbbd2b865b7479d78
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# eac935913ecf4a6fac9ce0c5f8597460
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:171
# 91d7e76620c94b3e9af1c70d0f697134
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# c9cf5bf63fda4d8c99fd26954d60e874
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# a9c2507d92674085bacea8652d8d3572
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:175
# e60760884f684def9d1642dd225404c1
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# bb6f036a56cc4de28d7f318acac17601
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# eaeaadc950fc4ab3bac8d9c74b945136
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:179
# 5e947e6c73ba4c8e8efab62877e84ceb
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:184
# fa70bee505514ab3ac7eb51fec787cea
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# f152875ef15e4038897228fb084652fb
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:189
# 0872e96622564fa89f521a2659357042
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:191
# fc572151ce3a4c9e8aa84153386f8923
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 460f312db4db4547871935d1fdb80f15
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:195
# 96b1ed99f35f47a59b449036e353fc8e
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 773c24fe1ec943b18e280f85a5d93e39
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 3ee9271bfe5d4d8884ca5139eb620772
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:199
# 5eeec24b861a4cbcbaa982377019bd9e
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 3ac1a78e66fc444d89f07478f2582c26
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:204
# 40e4c70208b1446fbfaa0811960e7a1b
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# d54e44723c244f17a6bf5dba2fecafd2
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# b3c58211ccdf499aaf8647b37c11a230
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 620737a6648e4f9db787b1ac29d7b1ca
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# ebd5a9f72c5b4a8fa2326eb35e75ea9b
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:213
# 6e08e0715d1f44b39b94ee58668e189c
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 45674a476344421186ac14517a3288f8
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 94d3f3c7e50f456cab1d255902f1b0ef
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# d12c37735a5d4bee9c6a0c3008ef3da1
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# abbbe48db3dc4e7a9461dfe0bddff993
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# eea239b0970e4f0e91f1b5b8bc084185
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# b59701b9668343819e4376c3eaa8427a
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# d40970cc186d45bf8b6c4194de5803ae
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:217
# 578fbc49f8ff437aa3be68c75fb4458a
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 476902e759014b87a89a74febda057ce
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 2e93b5c8a1e14b2dbc201822e81188d5
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# de53820faae6498aa00a4f8bf7472680
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# 73366e72cd074d19af921da266de5687
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# f1d28ce1b2574110aff093afa0d9f544
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 2c6f172878b4445391341ac1ea602257
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# 73bb9a7255624ad28455df9a20821171
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:221
# bd22f8e79f734860984e7aed41e57806
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 5e7453d4cc1b488e96c0542b7f868742
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:226
# eb19aae8d8f042b1be20b13ab26bea66
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 4757406af86741a19c2811c5a9d0ada6
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:230
# 69cbe923e38f4ad7b889d334cb398c0f
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# fd6a897492014aeea0a0cb1a8512b6ee
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 0b12d3edd2894a3ea2ab65b6c8f97ed0
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# da15d72112854cf19299801c5b09f435
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# c4d38632880a4c7db6b20ae943f7cc68
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 9653e5c7669141f6b7dc77d1a0a0fa5d
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# dcad503d62e8490f95113a8e34e3c3df
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# e7b199ad4865473f842774c3c3e42d7b
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# fedaeeb6a2c0404592e3899c96e30441
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# ff66e7abb3ad4c3f8741f405972aeb0f
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 619433a81ded46c8aaa5086573f12a27
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# 580d468a9bd64eaeb79926e8f1920775
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 892d5738d35d4d10b24e21d6425d75a4
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# ee6edc62f5354e2eb227835698b282c3
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# df0e3f42ff244b1bb04432bdf414a5c3
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:49
# 1f7bb09ab4da48abaf530b48c613156f
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:51
# 65df90cb1b854804a175965e8948775a
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:52
# 559fe6c5217e48d0b810578431504276
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:53
# 9f628f116a3d4eeea6057f65c29e5967
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:54
# e62c231a2d2148c5bdb5c766a03cc27b
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:234
# 986bf9bef5bd442b94eb618078b98948
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# 25e17ba38af844ff918a1bfbc7b9a78c
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 00e53a48b4254647bfbfbbb479fb6d52
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# 87e6ad914ec54a9381836e08f54365a3
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# 36ce6626d8d640c29c9f23060f7342f2
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# e4d6f73c79f7410b832e253cefd5cbb8
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# bef0c3f76dd942d3b505f82f631e7d5f
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# d5710ae45c7b4a849f3a7442db2d7809
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


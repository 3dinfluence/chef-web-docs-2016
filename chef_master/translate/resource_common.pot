# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# 12864057d70e44b499bce32547b91005
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# a910b735c62f4fcab8d455aff3b65e92
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# 95f40e7a8a8f4935b0dd408352ab9a79
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# 5d9f828e05a74625a3b2d649b933f2f5
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# d106a1dad18c488aa2fee624897aade3
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 6dcfbacfee42499e85b677fd9b872ebe
# 17f05900d68e46da850ae8571822d617
# ab284c97cdf742f2b0dc73d07669138e
# 1ea287127b254788b071161a3c59fcc4
# 87a2d1e189ad4c5caa642c009f127ec9
# 657415037a2a40799e21b0be21e44a27
# feb2da19e3c5443d8c53ddfd5f51473e
# 9e5fc0b303b44225bc99a2199c2ea254
# 3871fa429c69452484464c0a5d39dd51
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# f72c1e4ac8134c6f8504a67a73a3dd30
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# e12bb9849e5e4dccbbc2a2d69ccf12ef
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# 34bbabe2443f4cd696f0db006cd29808
# 48c8d26db83c4fd2bcf43ecf4d9926fd
# d75656e5ef1c4c39a0e957225067fff8
# c938d979fac549df9781906177fee80b
# 2163c14b7d8a4ae39784655ae9517368
# 90453617265147cea8df1ecbb4403efd
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# 6eeb8eb5d72f41b2866e83c613a8369d
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# 739cfc1468db4d1cbfafeb9c6273be05
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# ae9cd8f436744148aab332fe4509a723
# f8d40757aa054604a88257ea95ee2b77
# 6cc1b904314e4a3097f3eff36c4a7f4a
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# 193ac7d324c74195b8ecedaf18aaa669
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# c80369adba724df19c0321595a61b8e9
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# 825f4b85ecbd4e9585d290d4df59316d
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# d42db78d5fd24a48aad4466a19fffba9
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# dcc20039f280419fba8271e63780f5b8
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# 847c9f7629d14a9b8b4fdd0ea3c4536e
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# 04153721ac644e0eb9801e5a67302604
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 9bbf17108f7a4ce09fe11137e8d74bd4
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# b0998552ce3d4777835c48c6d467eae8
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# b663caae363746e7b88cceb73ebdad67
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# fa96dd6b8bfd48af92e6c43dca98464e
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# 4e9eea50cb064a85a9b0aac94d291765
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# 06fee7edb79d476f9ee1fa56096a74f1
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# f4772b24a25a4966a26a299d407f79aa
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# 663de52e79134a09a0137a4953219936
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 22db772caf9b49c6bf52467379e681ab
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# d231f7b6df7440299535f726c5ffad1d
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# 6f17be851f1f4576b3bb6bb2b2000397
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# c6ed4de404c24b9f91aef1762d5306ea
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# b72b4b70bfaf4b04b51a3eef2aac8bd7
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# 863196522c4c45c88298139ff1532e65
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 73c46210a3814de5b6ea88735c26c358
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# eba70897c8704bddadd05b662f938e68
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# bb1bec29a22042f9b4f5304533aa9b84
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# 4e4a3a5dbbe14754874757dfe3371638
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# 3edeafa68a3a4bea8099df49f1624147
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 73ad4047cef349ca954d845a21543eca
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# 105b3a8ccbed4a6d8f28e288ff586111
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# 61bcb9c8854346f3be5fde29d846e71e
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# 5490a08c64ab4dedb1e430c3d59133f6
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# a6942f8cd52045139abac2e3855b7dc7
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 3052befe5780488f95752d35cfc2aef4
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 6dfb73116b034d689b9c91792ed5d8d2
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# a1db28616ded48a9bcc5001a24d6a0b3
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# b80e5df7f16149e295dfa6ab5bb7aef8
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# c1139f8c7c274bae8005553beec92bda
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# eae7971ba95d4bc8806b945ccb6eed2e
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 5065b598e3f94d9e93692cd26f4d0d26
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# 6bdb3c491cce4bcbbfbfb2db54158e0b
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 70c413ffb46e42eaaf7d5c8c5091c784
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# 3a7fa53ad8e646cc80b389ceca03ade7
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# 1fddc046c2544286b86d089470979916
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# 96e093c686a3477fbfc100a5f88c299f
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# 016ab4011e834660954b5c9cecf05c0f
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# 94c56551ea494e6c939621d2c2549458
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# d0e2d00575894825b8694c12a06f2929
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 67f131fcec4141ba94a1c0162ecd100d
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# a4c79f18a8824b39a5a0cc6f8570c6e1
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# ed9e5f6c0add4ff1b980db1d330c592f
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# b56fe22681af4d84b5e4d51f26c4171a
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# ebe533ece6374830abeb7d36befa9d2b
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# 4a8531dbf46b4492a3c32fd24cd99e86
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# e76e06a1c84e4e12bd02b9c5790968d2
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# 6fec210ab63747999c9c055f88a70905
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# b11419f73529443b8d82f1ef999f6adb
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 6dab805bcce54c12877581ccbf90916d
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# e47170f2743d416db9da04b300cda133
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# a2cd8a1bd7ad4f5fa4c990a27c4ca25d
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# e1159fa9fef54ae58f58efcec7a93f98
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 5b59af7523034d32a6c5a5cbb24cc0ed
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# 2492e818730c4217b5285c17d4575a7f
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# 1294c2fc236445259ad241642f2df6bd
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource: |resource script_bash|, |resource script_csh|, |resource script_perl|, |resource powershell_script|, |resource script_python|, and |resource script_ruby|, plus the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:5
# 59f09262cc304dfbb759ef4b0a7654f5
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:11
# fa1c65b21a6544b2b6b9f7e4917b65af
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:13
# 649c4880dd554aa794081b0c0871296b
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:14
# be118e0a824e4e698e502f497eb7e4b5
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:15
# 052b4a75dc8441b0811e252077cadc22
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:16
# b2c43398a3454d50a17f3b8ac1594adf
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:17
# 7a6d31bdfb9b444b82926a77554c6f38
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:18
# 9dbaf85cef414bdb9914c6c02de4e8f3
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:19
# 9b8c24f16fd947c0873a12cef062db4d
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:20
# 3ddecac99dc9416e9219bdee4d2b3819
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:21
# 982233e33e714a19b4e32e2661d6fe0d
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:22
# 0024b10de0b44b8eb2645a6bb0e587ec
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:23
# 68b22c16c36d4df5ae90165aaba5e938
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:24
# c5a954b0d9b54a38a833483b114f771f
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:25
# 680be64af7fb40298d1d029d317766c5
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:26
# 9f36a1301a6d417a85a42ba1fb371eb8
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:27
# b4ecc9c8c4104f50bdfefe51ee1e81f9
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:28
# a4568ae7201747488cc759a7d6adfeb6
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:227
# b3ffe45e26fb4bc8a2c461e501d33c5a
# 0ca759910bf04a53b4798c0b90d2d9f1
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:5
# 355250fe5c124ea88e415f120c439178
msgid "All non-default interpreters will **not** inherit arguments that are available to guard attributes unless the ``guard_interpreter`` attribute is specified. For example, the following resource block will not inherit the ``environment`` attribute (and requires that the environment variable be specified within the ``not_if`` guard in addition to the resource block itself):"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:15
# bb90e30f1eba40e0b135ae6328e18d87
msgid "and the following resource block will inherit the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# bd34d1061ed440e487ebaad009a7eb3c
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# fcc7f6720ca64965b777e8145a53cc2f
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# a1c0654366f64f3b8c41f7c065e2a4dc
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# c30901ccff5649b78689fec9905762b4
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# a5c10ce243cc4d0e9bf801c8b763f396
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 78678b9573204201890f253ae6248b44
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# c080093375454befb1eff2c88fe68b01
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# 268ad7307e274d55825af43cf7952f24
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 7fe43b03fcba410d82a6462d1e42fa93
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# abee533ffa9f440faf92fd804c08d194
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# cf21839042a24c53b618cc61c9e32a1e
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# d6b2f05f91e54f06ae0a1b8eb0d056e7
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# e58f6c30a1754b3fa818ce3a9427bb34
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# 178de73b24c842e1a16fa438804badbb
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:121
# 53bf437e0da641eaaf5105d6ef9eb4f9
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# 4e0b79e1c5d94e8ca575304fa2e4c700
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# 7d9ffcff6bdd41729f56e33874aec646
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 1babc3a6414341ccb35986a961e86026
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# e2471a69bdc8445793aaf22e29420b0c
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# 6c1879a31663417f88ac272207069b75
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# 8e701b59b781498783bd118c9523c441
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# 8091c371b4b44981bce21c279619d948
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# 9e269b120930410b99d7212e1e7bf6d8
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# baf567e1b0f74eeb81d4c456e492b732
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# 7342b97a80ed4337b9d82c9eaf257ddc
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# 171da9eed2f74fafacf39a380664e223
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 10ddc86b94154abe99c968e342257d77
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# a2471ea70d71428c95f065a3de0befc5
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# a3b49d0e71d54e4b945a2670027855a9
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# a443065498364a1bbf23fd0f6ec0492d
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# c6e3bb02241345dba583c2838d36017c
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# a527270614da4e86a43153aa9d363c0d
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 83cb7530a7e14b29950f3785a0340096
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# cd911185c769488baa757a92b88f5ac6
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# ea5e7adbe1d44523ade7d87554bd8910
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# 99ea6a9830c74cb599b592899b923ed8
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 728f254037c949299ebd323cbe37a410
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# 8d4688d7734448c795d7b0aeba1e5340
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# efb64cf784da460a8162c2382dc802b4
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 814dce1495e44119b300cc2f17ad7397
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# 58e8a545f2634eccb8a09c4f6a08af7a
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# d5efe0901b1f46dc875570c680fce671
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# f534270faa0c4be593aacf6b80135380
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# 6d5cb4117da344a1ba2776b4754dcf8f
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# 9ce9f8e928cc4148b21af5a7b7c59d83
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# 583ffe8870414043be303e2a4506396c
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# e97cb428dd654280932816068b7b9932
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# f919662f664b43f09539d9b82c4d3fcd
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# dc6954f987e94f1ba039bc76ce6b08de
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# 6571a1febf724140b60506772324e2b4
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# de8f713251404847b85c9a7bc33ef73d
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 2e27eb298aa446d7baf1c402ad45acf8
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# 877e630e45f7486fbd46864155528ffa
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# f2db93bab78544128bc779a950e18ca6
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# 90aa6bef9e3d4d4fb845555b8ad09b3e
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 8459aec871d9415fb2fc1100fb6f46cf
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# 21d79f74a40f445c94e9021aecb18bed
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# a0430e86b8ce49daa83b8d06f46285be
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# dac666b8593344a99964085872ee6a9e
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# de87e2fe45a848d095adf187f2eea09a
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# c1965d36adc1424082a83437d32f3abb
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# 601e168c331444f5a6699c909bbad1d1
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# 90a590369f6a4191994a90d039442ebd
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# 709758e6334d40d2bb463a72c21663b9
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# 132cdfc97c2049b985b860a9be118e45
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:13
# 089f113476de45929c6ae0c716fba632
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:15
# 3e5aefa0e4e645bc934755c650277ff5
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:210
# 963a6061f4694d1d897ec6c1d5036b9f
msgid "Before other Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# 538827e3e44744c88fe82b19d26c72cf
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:7
# 06f14c7afa70473b86c8b0f0ad7e4e9e
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:9
# 471bea9880eb4bcf9d07a59fd965c363
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 051beb1dc9014c1487d74f95b156e76f
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:21
# 7b3727a0f84a432798677ec39c97ec7c
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:23
# 1f2165f394494a22bd147e0ce1d7acd7
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:35
# d5b254d6335d430c8257e34bc4ba3721
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:214
# 7d8293cc103543c284b9b112de630384
msgid "After Collection is Built"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_end.rst:5
# 835f83d12c924631ae24b4b10e08a6e7
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:219
# f9e52fcd6f7f4489ab3c8177075d4e8a
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 4934d4ea91334ea7ae158de19301625e
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:223
# 391d96a8bfc244f5a3ecfe35e933ef03
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 4670f7b3a70743fbaac344302ab1b4bc
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 0f7ef992b622403eb97cd6871058fc35
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 77a2e2e51caa4710858c1d796d06dbbc
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 2baa0897dc704d77b2882fc3e597ddce
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 55996f7d72c7497599c28f34e651f99b
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 8da97d490ab34d59a296c12abe0cc586
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 21ff49c4da844f33a617af6a5329168e
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 9e20a362709a47378401de0a26607e81
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# f2886d56b8d240abb830342e18f81ee8
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# e1cff69463724299ab696c4698aa0695
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# bb4b486ec9e04171abc6af28e13a6c6d
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 74e7f5b15ce74b219564f6c455cbad5a
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 7c70ce1a30a343428b71c8ee1a8611bb
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 28af21f58a754d47973af05ab439bc9a
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 51746ec6d639464cad7405e7e025a3db
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 8c8c0617606442baa1d804ac49f88698
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 14433311df0a498c8a0adf56759d1d8b
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 3e1d37232f814427a5f2a3e582420d37
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 8fb5623640c144a98d84ea1eadead49f
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# d8cd4d7f02d3426a9addbfeb1a53dd31
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 14ac569d6c2844e8a6d0060de326614a
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 488a20ed59c24f02a86da30d2f115546
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 6265e73134dc4b3582792828f2923d30
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# c73e3d75c3654750859e8412abec4422
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 40cbea727a194013a46c64cd754f5d1b
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 8ef2843d86cb4bf6a4dab80df89a9ac1
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# c16ec6509a9f438389e67b9f4ebdf48d
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# b5ab7f3bea8b465d9cdac06951ad82fa
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


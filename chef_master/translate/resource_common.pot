# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# a917cb4c12f34ae8aecb98d11b1347d5
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 9aac4a1f6da04c49b247af42f34eb17d
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# 5977056d8c9c43208108dad9281c31c6
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# bd3fd33a16ab469ab4bfa93027cab32c
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# e96e1ca769d3481e96a97ab17150c649
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 19a70be6669a43c68e79c9291ea34ec6
# d63ca8db1258429b8952611282523730
# a5e72b40a6734d7e81ea787e47eeb371
# 4c4b0649058d49edb9f344042fecb560
# 6904b24d1eea4d82b0c10f4a9d1047d8
# de556b1331eb4c25aacd1ce2f8434a96
# 781bd612c6c84c7cbb9bfd4ecca4e6be
# a8015e23b8eb4f77a1aaed2c560f179d
# 5d09b312493347b292c63386fc3b7e83
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# c1b55773b6a14558b9fbf48fa6adda69
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# 7b6bcecbff5a4a36ad6c839c85cdc0b3
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# 3e37563fe56a43e5bde84a5958e71f27
# 95045b232e5f495fa4defd8e1be11aeb
# f000568b0f4d49d284116b05cab4305a
# 7d3edb62e0274ba1a50f164c0ac76b33
# 564825dac1874256a1796e2639c6a1e4
# 6d982337efac40a29652d6703372f369
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# f1ae7ae87d7148d29e18b8ea15a491da
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# f3583920875541aaa816938b40df6087
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# 448dcf326c624158b1f14eb3e24498f0
# 2ca1f8a210f3476fa630114642c4d5b5
# 742752b3e2a147c1982850ff6ee31bea
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# ed22bda7356a4aceb751f432d3531bc5
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 7a6625f931ea48ccab295f71dc7ed5fa
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# 41ffdef5b8e84e249627a7dafd1ae924
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# cd98b18f99854ed58fb7765921245135
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# 96ff38e5a612464e9db2e0544abf3f31
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# 3add752489434e30bc8d9d312f9d19fd
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# 8ee7c402f9bf46f89ee8746c66fd9f33
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# aa6415506d114cf48e154c906fa7fe72
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# f09d51fb484443fab9f18490b4e33a3e
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# 1f1dee3d022f40978b30c50a73820a85
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# 7431f58c22a4413e89db3d5c9be0d943
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# f4bbd7e838594eefaf7d00ba545ac959
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# db0061189a744d0bb5701d95c102d90a
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# b17f9f6fc4ab4c63b3315d97328bd48e
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# bf888993b73b40ee9122d5db6e33f3a1
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 77fd573f99df46fb9c15247140e7725a
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# 220efda88110414badde39c5ccf36dc0
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# e0e1d22e235a4c73a03260339c99b4ae
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# e4dfff77fbfa4640ad0c596c9ab7e3e3
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# 8879f8c055544f6fac598220407fbc78
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# 4b6d3a80c317411ab939ef8b15c6fc50
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 513ef1ac9a68479fa42b5d6f652b3e32
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# 1ee1dd771a874494be3dd2e2d42cbd79
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 090fa3417fc3447396007ffb6994f692
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# 7c8cc54278764cc8aab78f037b43167e
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# c34e9d3732c94b2699336152db374d41
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 444b80e720904fe1985631ee0d1b9f66
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# b7abd608027c4db39fed7cf9cac02112
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# bed7aa4cc6f540beaff5b8dfa7d92e31
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# cdb99968b83045f5b6b17691cbe24be3
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# acc1158cb90e46b29c4c00dc76a07db5
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 93cc100a048c4addab9424a64541ff51
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 37b432b68e6c4664b19266f650a40790
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# d5f0473210724df196f7190e9b6f8def
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# f51de345978d4837bb6b6282e1135eb3
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# c089a35e8af64e3ab9a3a302cfd63d74
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# a1226dbc6e7e44499f158508354c4dcc
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# d8c7f92f04524f97bd87e83ed3b135d9
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# b912ad0120ca42348ed06fdb630e088e
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 94b27605a6ef4f00a63e3763132add36
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# d3fc25c006004a168e61b83f3e0316c5
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# e53af4c407224bfebea6f71187ef22c1
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# 822ad824ac0d4cfd9fe5ea7e9a78b54f
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# bc277950e4124d9cbf0d4f4a4d2b3a75
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# 3c0f43cb9c8e4c499efc4e02be82d60e
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# 2eddf3fbf6e4419a9966b845f400648f
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# d7e87b7d00fd458691f1e74837c49112
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# 77fdd3b90e7147dab44603518ba2df30
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 0cbcd828e2e043879bee9d07e4df0129
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# 9edfe49f06e44be8a575836f74b7ab17
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 623ef2a66e9241bd8bf526edcd2e3db2
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# dd370708e5814d8aa5163beaf5e5321d
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# fd49d6f87d144f5ebfd2588d7025c1d1
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# d3b8d99c04c644979e5fb7b6a73c06f1
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# 8e06f542b3d24b769ca7baa5cfeee02d
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 5acbb07f41c74efc9d29614a7fdc38a4
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# d51bee6089ad41b68f2a98ac87f079ea
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 811302bc62d8432e9494ed08cd8d5168
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# cc27fa0051a14d3c94a8d249e091f957
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# f85d55981d0c4841a04515e57ff9af4c
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# f7edefbb5de24100bae895ba213397b0
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# 8c72ebe805af452493d22e0290c868bf
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:5
# af9436b369e241a590364798f1a4ea98
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:11
# a0be9c2e9b2e48be8d1fe321159cb6a7
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:13
# 3996f14b3a0e4e349b21de6cafbe7f79
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:14
# 3e7590e1ff2a459aa3841297250951f1
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:15
# 76800ac7d0df4885a3109ffc7aee16cf
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:16
# 9ac8bb7884a544d8aedf212179651405
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:17
# ee61380b492449799dc232013c55196f
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:18
# 2bf98b96c5a54e4fa2eb1c49281f1e3c
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:19
# 47f2eee9e88c406a9fdce3845902417a
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:20
# b9dfcfea42b94e2eb392c66298f02b80
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:21
# 1a4e22b5f6024516893ca86638fa7a6f
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:22
# 81fa5308720e4dd4ae92325d74e0875b
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:23
# 62124fd9f3504f6ca2caf90e45c480e2
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:24
# 236b924ea13f4636a998f5fd7bf916f4
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:25
# 3b5d059e4c4f4023be7d677bf9c7f7bd
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:26
# e584d1ab4e3e4e6fa7cc873ca2764060
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:27
# 368c9e1deb0f41bcb32a4907b768eeef
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:28
# cfddd36b486b4b2fbb91eeaea11f5715
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:223
# ba1a70f2f7d347f19fa91ca012326016
# f2a06f74e07f445ebb86a7f2b3cb4066
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:5
# 26f0765c948e4b1893a7d62203daaee7
msgid "The ``guard_interpreter`` attribute is set to ``:default`` by default. When the ``guard_interpreter`` attribute is set to ``:default``, attributes ``not_if`` or ``only_if`` guard statements **do not inherit** attributes that are defined by the |resource script|-based resource in which the ``not_if`` or ``only_if`` guard statement is defined."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:7
# 7ea5daad03ca4225a2c9aba1f55de3d7
msgid "For example, the ``not_if`` guard statement in the following resource example **does not inherit** the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:17
# 06307a7e1f774f278c3d28ab3de52425
msgid "and requires adding the ``environment`` attribute to the ``not_if`` guard statement so that it may use the ``JAVA_HOME`` path as part of its evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:27
# 003b0afa860d4109a804585d5f0d07ee
msgid "To inherit attributes, add the ``guard_attribute`` attribute to the resource block and set it to the appropriate value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:29
# e4a9ac32871744dc9c156dc32f48783f
msgid "``:bash`` for |resource script_bash|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:30
# 7aeeb3d672584fa681d2593a413d8265
msgid "``:batch`` for |resource batch|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:31
# 57d3203da153457e9045b1f74c84caa7
msgid "``:csh`` for |resource script_csh|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:32
# e6b1bc85d6414eed8b719047fac745cb
msgid "``:perl`` for |resource script_perl|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:33
# 52e95441d1974d82b7a93a5fa12d3272
msgid "``:powershell_script`` for |resource powershell_script|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:34
# 0d58acee82de40278ffde9e27843927a
msgid "``:python`` for |resource script_python|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:35
# 827d4db326ad47dea124f9ac79ee53e9
msgid "``:ruby`` for |resource script_ruby|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:37
# 81692f82321d4bfc8f60a551f0a7c4e8
msgid "For example, using the same example as from above, but this time adding the ``guard_interpreter`` attribute and setting it to ``:bash``:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:48
# 502fbc3b179b4198a332caea67e430fb
msgid "The ``not_if`` statement now inherits the ``environment`` attribute and will use the ``JAVA_HOME`` path as part of its evaluation."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# 3fa8baae81fd473b8478d3d9db394a83
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# 0534952c436a4df4b51e33f71b638cb9
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# ca4aae059ae8453f95493f8c7b3c8d9f
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# 5006a340d3734985b54c9308fa04dff1
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# d164995072af4cb4b4166a93497abd71
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 14a06437fb4a4b0ab95ae6b5d397938a
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# 9df152541ed747a4925283ca1f0c5c1b
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# 270f1a512fcd4182bb347903bbe338a1
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 094493dc385e45ce8f4d036ea760c8d9
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# 9a643b354e6f45d19d9ba2ea80a5d27f
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 5fa9b90d21e441c7a9780a90ce618978
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# d46eee7b48534e9d9a829171205f9bd4
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# 23c6ccb4e91e45c9ba2f8276c180d1e1
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# 64427a5c7370445bbd6fc8f641ca6071
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:17
# 799e30ca221c4c6288984e45417666f9
msgid "Notifications are processed during the execution phase of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:121
# 0b956e8e0316493db36ff41eba3d3ee6
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# b2b533a0690d46ea9a9479a4f12897e9
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# e78620aea01f43e097b8704beb365983
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 820e54a47dc54e9990345972a852b620
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# b6bf308eba3e4b4baea0bdf5699fb9fa
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# c989d57f1383459e82e6e365002f827c
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# b6de2fc2f12542feabf340d695631029
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# b314731650b14723a111b9999373d4d4
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# c8ed11a462f84681bd2eaa6c3653b0de
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# da0dd98d9f124722bb188392dec0f9a0
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# 36f2e8b92abe451aa549dcf37d5e49d7
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# 2bf52647e0e54e4e9a2544dd37793690
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# cbdd1a11d37b464aaf510b654e91761a
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# eb897346d9504819bc5970ae9bd47105
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# 7c756151023e41a195036adf3df87d1d
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# dffbe1ee6707474d9be860a7f8ead205
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# 070b049ff1334e3e96a68d4aa4adbeaf
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 8397a09b63ab439b90ddfe8862e72fe5
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 73d1f4412e3248348a5ca13c69a8d749
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# 238ff1f85b784165b719ca9ca69bb04a
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# e84c9f47612f4bfc933ac0bb4f3a181f
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# cbde87ee1b934e1d9fc7d530ddebb194
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 965b005a7ff6443ebfadaa86130306d2
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# 7e7545b5f5a143b3beda6d9a0c8dfe90
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 6298e3c0fd1546398edfb367372d01ae
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 0439657af5574977b30edd5ab2c4d272
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# c396b7216719409b9827eedebf60027a
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 92d05d69eaab4656a2bb6e7e55c80d86
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 63fc645bbd9f461f94555e22c64808db
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# 3a93a35bd75840809b06baeeb180c7d5
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# 0113ef1767de424b9ef6e25f504bc6d9
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# ee22e036d30640a284728cf147d6117f
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# cb0951bdc81a4ea9a169410b0ad0083e
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# 6d5b97ddcc624d839950af92c764c3d5
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 9d15cb15e6464cce98f123385a5ae348
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# 829532b26a1a47bdad02bd2f9b9bff75
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 591e3391eb134251bdabf6ba1765a394
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 71629adfd42c4f31994b48c41830966b
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# 5c29390e1bd54464bebb54b6255ecff8
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 1adbc9c41ca64a30806da08017242869
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# 86022d1ec95c4305a0e1a4003ee6c77f
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 1c42394251d54d05926af3aa487994eb
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# b889afc2e5c84308a01355eb804dd9fa
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# 0d0be3dbb86543c0974b23036a5b74a8
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# bd58a8b82a434578baa42dab6f1cf07c
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# f33a9add40dc4eea9bf92d0d4151cf23
msgid "Run in Compile Phase"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# 543cd60b01414fceab65601bd2e174b6
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# 9bb1b236e95045fbbd1fba3b1fe9391c
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# 947d7b05ea27494aa4f9f4e8f26c81c2
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and performs the necessary steps to complete the action. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# dc792d481eed4106a57a734355c7b6fc
msgid "Typically, actions are processed during the execution phase of the |chef client| run. However, sometimes it is necessary to run an action during the compile phase. For example, a resource can be configured to install a package during the compile phase to ensure that application is available to other resources during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# eb7a880204ae4c6094ceea93518e371a
msgid "Use the |resource chef_gem| resource to install |gems| that are needed by the |chef client| during the execution phase."
msgstr ""

#: ../source/resource_common.rst:210
# 5003ec86a59b4fa28f64d8d182a65ee8
msgid "run_action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# 5555824e64c34160b5930184e4e8e0b9
msgid "Use ``.run_action(:some_action)`` at the end of a resource block to run the specified action during the compile phase. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:13
# 13dece4939ce4f3cbd6bbb4bf37d0106
msgid "where ``action`` is set to ``:nothing`` to ensure the ``run_action`` is run during the compile phase and not later during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:15
# 0c3e52103dce4e9aa71b801b036c2840
msgid "The following examples show when (and when not) to use ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:17
# fe71fd20ea894c0aaa5988164d7c9ec3
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 412ee5d09c3240f3bed284e65ae18bf0
msgid "Sometimes it is necessary to ensure that an operating system's package cache is up to date before installing packages. For example, on |debian| or |ubuntu| systems, the |apt| cache should be updated:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:36
# 88241431272c40e3b7faeeb427dc684c
msgid "where ``e.run_action(:run)`` tells the |chef client| to run the ``apt-get update`` command during the compile phase. This example can be found in the ``default.rb`` recipe of the `apt cookbook <https://github.com/opscode-cookbooks/apt>`_ that is maintained by |company_name|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:38
# e4e4ebb6def94ebfa754f9a386f6d3ee
msgid "**Use the chef_gem resource for Ruby gems**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:40
# f6a8dc9a0d0a4c9e9774aa288b60cead
msgid "A very common use case us to install a |gem| during the compile phase so that it will be available to the |chef client| during the execution phase. This is why the |resource chef_gem| exists. For example, this:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:48
# b72bd087ddcf4143a012b0c008617059
msgid "is effectively the same as"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:57
# b0c1489523e949508d464d9d348e123c
msgid "but without needing to define a ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:59
# 8b369071176b48059b274ffa65336c76
msgid "**Notifications will not work**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:61
# c137e183ecdf4c259d3c98e4915f03e4
msgid "Resources that are executed during the compile phase cannot notify other resources. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:73
# 84cbf3486cd74d7ea4f85b3437cdce5f
msgid "A better approach in this type of situation is to install the package before the resource collection is built to ensure that it is available to other resources later on."
msgstr ""

#: ../source/resource_common.rst:215
# 58b81cb4ea6a458d852250f6bf8e39dd
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 87120a0668a546469d4d668346580742
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:219
# 4e7165ab638246c8ab7d4febdc3ec4ca
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# a46878f3eb5f469fa21cd0ba75fa7dd1
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 82308de965b043a7a541968def0a1187
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 6683677b189a44c383896d16b1a4df63
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 13304eb8562f4019b593fc14f128d359
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 38f825c7395e4888acf4e74498ff32b4
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# b49808aedd584185b0f1461f86f7ea15
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 0e12d29c24d84a419c89fec1c6ec990d
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 7f52bc3a3f7c4f7b8760e33fd82423bb
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 94df0570ecfa4e88b77158222cace17e
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 557db61868d04242a812418a9b4ecf1f
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 17d31db55a8945678b80258dd384163d
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 376b3b4f067545228f41eff0e2b67d81
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# ce1ee483da694ee09ce83d869415c833
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 2698eea534f542ad867921e5cdf36984
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 0aa0759726934dcebcc5b7a10534ac3a
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 1500b921fecf497fbc86cbd15fc5c88b
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 753623d6d30b42708e926b1ed4e1494c
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 6ffc590240fe43a0b17c854f1e77f4a4
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 8a3cd2c003524802acf84bba2ef4d4da
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 32799a6e38e441508b74e60503965be4
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# a632c75cea9c47c78bfedb8d6ca68537
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# d856a0b6adff4a4582451593f771eb64
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# f08c7683cb15458aa845fd99dc30def2
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 38db07a782364d67a1438e10e325fe6e
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 6cdfa8d85a2f4dd890e6bb9512d8be9d
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 89e61b5288f14451a1bb711cefef304b
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# f5fb656ebf034ad180befd4a3bb6bd89
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# bd82def3a78344fdbd7eebc2f729e4fb
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:8
# d585de81e87d40cc92a98b5b87ba2362
msgid "Common Functionality"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:10
# becd5ce4c8ef4491858d94cd4dcaba73
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:13
# f3f05fc61cb54fbf985a63ad7c5fd669
msgid "Actions"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_actions.rst:4
# caef1dca2b584612a7c719a2e6ac7a34
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_actions.rst:10
# 6f12026cb1a940b784fcfe81e94a8e00
msgid "Action"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_actions.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:12
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 3cccb85724a346d596a33d66b063c197
# 824df32c245e41329a20c87cbb3c4f92
# d87432018a7b4783bd0fb08b7368460a
# 2855fac786754776827396a63a976014
# 97e77703a9534e13a03bd2d2cfb2bf47
# 9ec0bb7a88a14aa99541c1c0dd243a26
# 7a483e7e50c94b8e9be4e4d8912ff98f
# 1cef6328f2594434832531159dc80fe5
# 528c9a93d742408bb46383195d491616
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_actions.rst:12
# 90f00274e2ca40edafceb6b7fcaa5237
msgid "``:nothing``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_actions.rst:13
# 85fe5793935a425a970a0f9745c4e269
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:17
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:29
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:109
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:129
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:181
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:201
# 4e60aec9df2c44fc8bd890ec9ea33606
# dc983aeb91c94b1f9e85f270ceb08cc8
# 8058a894b4fc4e51a15ad43e5aa7ad0b
# 7d0f9134169d4ed591787e7c40e95831
# 96b2c9f0395341b3bce64e7be50c7491
# 6e5acefc4d9047738ca3a9e83ea022df
msgid "Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:18
# c63ac00e89294330853ccd4dcc0c410e
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:20
# 30c34b17c31d4703aeed644fa5d2f1e6
msgid "**Use the :nothing action**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:25
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:55
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:101
# 8f8e1b095f7c4e6cbf1d6fe44191d5ae
# 435ee26ededc4dc2b1088197d0f79740
# 99dd9e8267594ddb90642d9737664b7f
msgid "Attributes"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:4
# 97e7f2ee921b433ab9864c01ac215f8e
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:10
# e78d852bceb9445fad2c518163c52dee
msgid "Parameter"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:12
# 7f501f6fe4a7432881e1a8da0426c947
msgid "``ignore_failure``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:13
# 2db3ee56fe8c4a7297b6315cf74bcbd9
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:14
# 7768ad7cdcaf47da9c4fe39faee8a7b5
msgid "``provider``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:15
# 1eb9110773a44aa5a0a612e7f187a31b
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:16
# 5300e9eec4934e5ea40ae09ee066bea7
msgid "``retries``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:17
# 4542ea38a671487f9336a696acb91b62
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:18
# 8d7b634b575a4f699210b9efc04e2e82
msgid "``retry_delay``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:19
# 744cc12a30da4311a482ebc0c680a1a6
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:20
# 1b88703a5edb486798c9121c5178ae94
msgid "``supports``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_attributes.rst:21
# 3314fb447f5149819eef53c0c0143b17
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:30
# bec0c0f5fdcb40b789c7dcf67944e63f
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:32
# ebd1cc82102b40819a0f6c23bb1ad41d
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:36
# bc1e8fc209ea4cc5b828d9cdcf065e1a
msgid "**Use the provider common attribute**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:40
# 14669d27e8b84a579f54661509fbd68f
msgid "**Use the supports common attribute**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:44
# ae95c2da7fc04affbeb5e0b770aa87b6
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:49
# aeddb058f04844c8939e270ea94c3dda
msgid "Guards"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards.rst:5
# 34c6aba5ff39491f8f5537699e7dec7f
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards.rst:7
# a493e28ca56e4044a5f2fcbf294ba062
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards.rst:8
# 904d67e6ac08483da9665dab86288ff3
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards.rst:10
# 01a7372fe95c4b4589e4e4743d7e5473
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# 45b27a46dbf94da1a21dac38d0ea346b
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:4
# d8a65bda5fce47d8b18d638ef12d8d2b
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:10
# ccd75e3721fd4644a65cad53bd76e618
msgid "Guard"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:12
# ee649448fadf4752b1d7256e3f9ed497
msgid "``not_if``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:13
# fe1d7c0844f841df8ad69a372d41c177
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:14
# 46de7e79631c46e59737c1dd583b94ba
msgid "``only_if``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_attributes.rst:15
# f32adaf0b2ad4161ae6f5c751bf3a8f2
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:59
# 37dfce6668db47cbac63e2b2e9c28d55
msgid "Arguments"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 6d2e97c9c70d4bebbc023323b74457c2
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:10
# 3dbf3595cfe5418286d4ac15f30613c8
msgid "Argument"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:12
# bab3a42cce3646d58655667f23e47e94
msgid "``:user``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:13
# 0090d64f342d4fadba031bd4645802f4
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:19
# 8f119530dd7149f582b7300770d91873
msgid "``:group``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 1209b121340f46699ef83a919a114443
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:26
# dbec2f28d92345d18fa1da11a2870d51
msgid "``:environment``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 8208a7632ee24e7d8b8b8e9d926f322d
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:33
# 5b127c368379414b80ce7a0c8258d1eb
msgid "``:cwd``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:34
# b1fd65f4d2e34d01a4216b5f02d3f7a8
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:40
# 0a2af46d7f384714aa8197f40d4a0b05
msgid "``:timeout``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guards_arguments.rst:41
# 9af2baff75e3435f8824feb835393cb3
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:63
# 484956bf94d24606af0c6d378dfd358f
msgid "not_if Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:65
# 8747638efd784f5a8b90804c49ff13ce
msgid "**Update if not already updated**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 560a5afc8e654f369f7685a4a0bd4db3
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:69
# d44ddec4833746e883bcd35d24b3ec17
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 65e56164e14843d3a2ce5862eac4c8d2
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:73
# 091b8608ccbe433a9dd98b1957ceae93
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# e37c8d207cf64f2fa410bda37115dac3
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:77
# c803e6f2df774306935122f445e799e8
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# eb1df9cf45ce4a67b83514b3d3114638
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:82
# b2ebea7c83974b9f82781b6092a2bf55
msgid "only_if Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:84
# 5ec2f8bf1a164c77b8cab1f359d8355e
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# dc8e63dfc4134921a3aff90c4f9fe614
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:88
# d7eb6a917b4940e8aa76a75595f6c22c
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 7d9727c775634d0cbf40434f19a90563
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:92
# d700661815ac43cca7e18dcbe46a58a8
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../../desktop/chef-docs/step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 9c41570327724c4f9c20c36b32fe7ba1
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:97
# 74b0f0c2f5c34304b6988dad4e5b34bd
msgid "Guard Interpreters"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# f07169b7728e4903be716c8610b65629
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource: |resource script_bash|, |resource script_csh|, |resource script_perl|, |resource powershell_script|, |resource script_python|, and |resource script_ruby|, plus the |resource batch| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:5
# d8d48f80c27a4ec5b1101efd952869de
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:11
# d879dd23558d49e0b0c7f932abf250ae
msgid "Value"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:13
# ce77ae318c82490aa776caf8e484a890
msgid "``:bash``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:14
# 71efb536f2ba4db9a7ba77d90f14b249
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:15
# d1b5cec3fcf0425f91145e3a82c5149d
msgid "``:batch``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:16
# b5fe748624354b7991677cfcd8ee1b04
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:17
# 0049d276c5224e3590ebe9e4a9d7d062
msgid "``:csh``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:18
# 832edcba8aa14c169a2bb8450ba9639d
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:19
# 90407dce7995439295e9c730c437ba0d
msgid "``:default``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:20
# a96474c805184730829925f5b675c5c2
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:21
# 25df5ccb9b67473da645feab44645879
msgid "``:perl``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:22
# 48d5d918acb34b5e9126f67bcac07e51
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:23
# 67ccf8aae1de4148a5fd489a239c4e29
msgid "``:powershell_script``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:24
# ad4d5fc46bac4085b4f171f06f4e7e70
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:25
# f369ed87d5974a7fa2d9f7208f6f044a
msgid "``:python``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:26
# 9756e32879fd494582ae2e9b28b11e2c
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:27
# 1c613cfe00e1456d80a6e4f185be5ea8
msgid "``:ruby``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:28
# 711d5616ebdf4b3db760374eab713671
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:105
#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:227
# 62911f60f337483da2b7accf222f1835
# 74cdfd8a175946e5919bc887dbb2faa6
msgid "Inheritance"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:5
# 7d2e3a8fb0634a319bd7b061301d0785
msgid "All non-default interpreters will **not** inherit arguments that are available to guard attributes unless the ``guard_interpreter`` attribute is specified. For example, the following resource block will not inherit the ``environment`` attribute (and requires that the environment variable be specified within the ``not_if`` guard in addition to the resource block itself):"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:15
# 3801d3b0653340ceb17d49430a26a76c
msgid "and the following resource block will inherit the ``environment`` attribute:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# 1e81f23cbaa34abca57f9a35b7a9204d
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:113
# 75abdf07b6104502a5dfb9a7edf94ee5
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# f9fe731461d54f8791e655f98901b5b8
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# 8fd84a26097f43a0881d424bdd2bfab2
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# 9784a921c3364455aa850af81bcf29d8
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 822811d8e20943938b147d65e295371e
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# a90ba6028eb14272a32f0f665baf4222
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:117
# da8c05ed26554cc69148d90fa84866cf
msgid "Notifications"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:4
# 87e47dabd81c40a7b756655c1bce058b
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:10
# bcf61a63934941d7becfca0cba0ecdc8
msgid "Notification"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:12
# ac363df173494771b3fc72f1c21d4d58
msgid "``notifies``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:13
# 2ccc4b8018b34fa7ae7b4606db54dc9c
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:14
# cab3c27450f244d69864643571474591
msgid "``subscribes``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications.rst:15
# 699f294f35d94ecc9a92c20232213b89
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:121
# ddf538ce683c4c2e8c3ae5d277d10d72
msgid "Notifications Timers"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:4
# 1934b87124e44140a3118de3be5cbbed
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:10
# 07a8b84e96374598a602739a6623c4d3
msgid "Timer"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 00b6c78c503e4b2081ff7b4f1bbdd489
msgid "``:delayed``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:13
# 3fd7bb10a7564a5c8acfe8e347627010
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:14
# 72a024b7a4f44305aaddfa31559e0225
msgid "``:immediately``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_timers.rst:15
# 3dae140ca1494ee799362392a609a247
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:125
# b6e471588fbd4ba29c7580f1ef2bf3c4
msgid "Notifies Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# e2d0be6d91384f9c94fcf752b55ed39a
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:130
# 5a5c8a8983074122ba76fe0f3844db89
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:132
# d44a62f106f84380b5dcf3133490b0c8
msgid "**Delay notifications**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:136
# 96ed27ec3cab4a14ac8d6910e21c6990
msgid "**Notify immediately**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_template_notifies_run_immediately.rst:3
# 0188ebf3c73748839c43536c8d831bae
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_template_notifies_run_immediately.rst:12
# cd73855504784b73926792bb1f5bc935
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:140
# 783ceb4a984549b8aff7aa034a84af79
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:144
# 126391226a6d46de98f1c8c5be6a5ea6
msgid "**Notify multiple resources**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:148
# 2642e84c096c457b8c119452e477d249
msgid "**Notify in a specific order**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_execute_notifies_specific_order.rst:3
# d612ba0722944a67916adadcd150ca9d
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_execute_notifies_specific_order.rst:27
# 0f42130d41da4e04a44ae138c0a27fbf
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:152
# d004626816f749fe9f43d2fc37778d67
msgid "**Reload a service**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:156
# da5c6cfdcd414f13b56428d02f35d414
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:160
# 6997c2aa56cb426fa19f469a35a137d5
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 1117f467205b4045a245f6777250f517
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:164
# fbe0c71e8c6e4d5289dada2e4958452d
msgid "**Execute a command using a template**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_execute_command_from_template.rst:4
# e7ab0009ae1b4ad0b63361a298574199
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_execute_command_from_template.rst:18
# c47d66addf8d4c2cb2626786472b9d13
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:168
# 1b3689dfb26747c49bd337cafb18a3fa
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_service_restart_and_notify.rst:3
# 5bd06e7e5b1645af98ee8b6a2ab64075
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_service_restart_and_notify.rst:13
# a7c65ef363d941928d1b455c3b23a2c1
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:172
# 3385cc0292064e66ab32d6b945f7d952
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:177
# 26b734b95320411e843ee93b0eb5cfab
msgid "Subscribes Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# 3a27f200097743ac8f8204943425e247
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:182
# faae3d8791b5403ead487b61f0577970
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:184
# 14a3ef77fb3a4c3cafd8d85eba406a78
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# b797ed2cec2148879f38580c388d06de
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:188
# fd52f44830bd4511b35bb3c78bdca1f6
msgid "**Reload a service using a template**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# cad069156ce243e092619cc32c9027b5
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 8307a89bc30b4aa08777754a6d3c6404
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:192
# ebe6b4b7e3ac4eb28f194e419d1d8ac4
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 24380a01aead4b82bbfe125ea6b02442
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:197
# 6151a7d074ea439b9e3f262769df8fc4
msgid "Relative Paths"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_relative_paths.rst:4
# 41b4174a60fb46f1b4698048e8d2f770
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_relative_paths.rst:10
# da2102b2eedb44b8b5d88b090947fbf3
msgid "Relative Path"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_relative_paths.rst:12
# 9c07f88b4a0448a597afc501d8fb4d48
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_relative_paths.rst:13
# cf6a227b8e764551b76bde68ed116c71
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:206
# 89346b9eb95e4787a5a04e77fbf307c5
msgid "Run from Resource Collection"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:5
# 87608ae97e654dfeab4724cd1ad8803e
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:7
# 1438ae8373154bab96000d2ef143ebd0
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:8
# 9e78eec9c22047789db47a0266bec73d
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:10
# ee7802a084b9463d818346ce971365c3
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:12
# 7c75dc7f131344a193e5929389c42d8a
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:13
# 6c1567c57538484781852c84f92f6a2f
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile.rst:15
# 4ae538bd9f9d4b2591495ea93603e570
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:210
# 7c2f1c4774d642ef861de3a616f1d63a
msgid "Before other Resources"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:5
# f5c6122111bb4353b5de7d724ed97efe
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:7
# 6a41ff896d6d47babb02be6f215d29f8
msgid "**Update a package cache**"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:9
# 263021ddc3bb4cf987e29c73464bdf90
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:19
# df07694138d14921a27c9dade26668e0
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:21
# cfdc70df9f2842cd9c0496deadf7bb70
msgid "**An anti-pattern**"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:23
# 261ffedfbee74f3496ebef61cbec28c6
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_begin.rst:35
# a41274727b044b39a1df8b40a5b1c54b
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:214
# f027292f000d490d8edaa11cbde094f8
msgid "After Collection is Built"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_compile_end.rst:5
# 460e660051614c8d8bbc57d843811a6b
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:219
# b2c3968551d64f40952b8c0b83a4f824
msgid "Windows File Security"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security.rst:4
# 41bf2518016e41e4b8216c28a66ca2a2
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_common.rst:223
# 81dc58ced9954a9cadbf65136fc3ca0d
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 23009047f8e34d3795772824d563191b
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# db5e169f5779420cb5e08699922b7b1c
msgid "where"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 1a01254c340a42f98c1f9888e85da864
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 03b9f3226bd44f498cb5ae5c0f930fe5
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# dc6e5b360a5d4381a325f4d66214c915
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# edb38ff4b0684db88d2a33ad96f35857
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 375861a5e5aa42ccb2fc370fa61c7b79
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 975192c501804903b187f9fde82ea549
msgid "Option Type"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 7191e2bd3bc846e4ab01f7105e063058
msgid "``:applies_to_children``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# f3a6d2457d564499b64198f4e88971bf
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 27b8a3c88bd54305ab9d121367af3e8a
msgid "``:applies_to_self``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 621d4bbeb22a4e66a7bcc35e0a4847b9
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 7b7fc0614fd34e80b4991de55ec3f131
msgid "``:one_level_deep``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 160f1f363ef946ec9a6463ecd1666f96
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# f1736d8ded4f4badb57547a63fa3535c
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# c9af26fe092645f7a027b5d8dcadef77
msgid "or:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 71016e597d5743bd9fa5d0ddfa985c7e
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# f5757522d7014adf99650cc1f0f68930
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 4cf4b317383d40cca3a348a7e0fcc8f9
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 0b703c7de160494a88d748613d1cf024
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# bc96882a306e4698adfdca542f2ae633
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 548030b4f5ef4c87a697e3d9bb7eb8ab
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 6feb5daba6ba4884a632d7d0db9cb267
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 7303f8040d4b4c618cbf87fd0d3abb0b
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 13faa3fef1fe4246a5ceed9b2f698dd3
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 3c219ef4b06348df8ae7ae7c534cea2a
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# afdaaa97096e4e01b9c1ee08cf67d3c2
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# d5912b01a5294e83ae448e82a33f5f64
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


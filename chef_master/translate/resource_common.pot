# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:34
# f06d1fbca4314e8ab734476550cf8520
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:36
# 4a8e1152c2934f899dcafe807d9d9166
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:39
# 7fc20b522f2a4b50907471a8e58dd89b
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# bf9156d3742e453ca4b9652bba9ac5ec
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# c0fd4412beed4d759464539dddbd8e01
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:21
# 7e65541a34d6419a99dcf700bb44d49b
# 8f3c141f2d8a4db19edaf25477c0d57d
# ad867b6928a44415a178e79aba38e348
# bbad7a0d9f574cf79e6966bf87d69314
# d7197be132834217a15efcd04d5cda02
# b30a79f6980f4f8ba5ece1ecd7b51674
# 93ddb872cbfc4fb2a867c0eadd8fc7a0
# a28d67f35dd34bea95b918d4cfe34999
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 53df6e9d639b4bcbb7f6a5508ef6aefc
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 42c7a44862d74eef97d8f34056169f2f
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:43
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:121
#: ../source/resource_common.rst:173
#: ../source/resource_common.rst:193
# 4283d843099349948bdde7461bb799df
# f34f8a4dbf0943f7b148f40039e8458c
# f943306793404b868f3ef73747d311dc
# 9b88ce1c6ddc40959f9dee1db353f5c7
# d3bc065dc3774c6ca5bb75ba0d75d61b
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:44
# 253a908e01004f60ad91ddb62838969f
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:46
# c293a4bdfa7447e1a4dd647a60a38bdf
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:51
#: ../source/resource_common.rst:79
# 35c33ce01721462f8a4a39485b94af8a
# e4a74bc4bfb146af83cb24de294c6e00
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 7721d95591f243aca16a2cc39ece33d6
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 40d8fa831a3344a4b4f291c9ef125fd8
# 18f70216ef15416db6b9404f8e845ef4
msgid "Attribute"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# 9095fcaa9f204a39b91ca9163f95c9aa
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# ac625785f0c040c1805f782ef9eb483e
msgid "Use to continue running a recipe if a resource fails for any reason. Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# 453af33ee04f4114a9def26be69ee808
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# 9ad23824e1a9419f9bcbc31e94079c93
msgid "Use to specify the class name of a provider for use with a resource."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# 732fa1ff6da04f018c4363844dd682d0
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 527836850b4e46fd8e7ec487a76148f0
msgid "Use to specify the number of times to catch exceptions and retry the resource. Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 673c8879a1224019878070f3831cd109
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# c1055c98132a4e89842f6c9a06df608a
msgid "Use to specify the retry delay (in seconds). Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# 171bc3a2aad0434ea36b0b1fd5ddf7ab
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 022fdcb12f954b9e9973486525c45d53
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. |chef| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:56
# e7c2412cbdca4f1fbd2f9be20f2207e2
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:58
# 5cbb21f36f6944af8a4f77da811366f7
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:62
# 02a9b301aa7c4b3a818a20a7e26b0612
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:66
# 06dabbf0ffca4e1aa1b0a01b07eb8347
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:70
# 5ec09b98569f4e5f895860fd4c7e9638
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:75
# 977b3b51c5854dc2b3bf314376bd2b35
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# bb2a0bff78534a26becb38981eb75745
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 349b63ffdb1d4e009ca193272f047650
msgid "The following attributes can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 1c47fc96b38e4efab6d2aa3fea374d60
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# e3c3e2d7326a4a13b1b6e6ee803f0d9a
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# a79e443e0e4e41bfb767e535792eac9f
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 3fb42cde13804466b6ecf4893a56ee15
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:83
# fc05b9d4fb2d487d8af02b35965f5564
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# f70f96bdc2144e31b2ac678f14f3369c
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 041b5e902feb49048ad485f0c7b910b7
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# edf1458ec7744331a9b47cd358cdd3c9
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# c972552048684804b59f44e41337ec48
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 36555c328d6c4954910a1c88bf48b7a2
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# 0a9b14b33331493fad17add055e35432
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# 0e35846414024769ad683c6182b3f8ef
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# c7c9f91dbd8e429e8801360e0ee1ba17
msgid "Use to specify a hash of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# 90077f2d910945c2aeb24a011801ce09
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 930bf954416b4258be2a8025760a460e
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 82d46f18e47f4b2d84021632249adeac
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 4a68cb2899eb41cf814e0a4358f4c444
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:87
# d4df6791fa964f53bbe3d8ddb8b9a495
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# adc0d509be044436a6ca9ce23158cf98
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# 228f5eca3bd34d4eb604ae38eaae17ed
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using |ruby| to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# 441b183c9d50457f87842399e2d98e22
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# 0c590f3fb6824186ae298651ea4d27d5
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:96
# 45cdf99fff3c462e885b24606a1bce7c
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 5cbe4863d32a41fd9e8e7307967d0744
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# 3cf043e11e064623b45ffd0573edbf22
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# fd8cdb9d8ce6472aa39bc727ff9b075c
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# 0513edcabdbb4a2bbe3ae879abb79d0d
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:33
# 628aee1fa59f474aa188898f40ce272f
msgid "This example is similar to the ``upload_progress_module`` recipe in the following cookbook: https://github.com/opscode-cookbooks/nginx."
msgstr ""

#: ../source/resource_common.rst:101
# 7cc4f147e43845698373b940f549570b
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# 84458a822b8e4b53b956a9d4d4f3dcf0
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# 79f44ca5fd26479aa5b38fef52c78456
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# 54a75ae641714042b2595e3fb81d3bc0
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:109
# 0eba56e14a634c36bb08a73f727f2936
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# dd4fd13635334d58bdf088fa2478ee83
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# ce51a8b80d2f4106ab521b50a7a2450f
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 27b448edc63844aaba62af196e97f32c
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 2793c6ca889e4db58851482615b21def
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 1baa854cfecb481a95beaae9d35dc9b5
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# ddf228b7db21417abdbe18ab53cb2834
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:113
# 73ec5775ce0040ea908300aeca32943f
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# 04ad8237a49c43e2ab775209db603cc3
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# f4bc47101a71482d8f660b5b875e2570
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# e776b08cb24343a091a18cb0d5b9f1d6
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 47067121378e40cfa3b5e4533960de22
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# ea1dafd2ed4c49d598777bfd69f181e9
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# 7398c59711354057918a2ab6c1931252
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:117
# a5da3a1bde9b445083027cb236e51ed7
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 758f09a3a5934ec89eae35c4dcc99516
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:122
# 971aa4fb86cc40258a4d700348d8bf56
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:124
# c62bdfc1da8d4cabba48641634321e92
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:128
# fb9a3e4a75c44ce2b6e5fb4ac6714d0c
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 3431c73c195a462f938a5370b8e22668
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# c2b2c024022d4190aa9be9ed61137baa
msgid "and then |chef| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:132
# 260f6e4d334341b5814c7be490051c3a
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:136
# 92d6b81d9e2f4620a0af932e86b4e7ee
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:140
# 4dc6a50c296d4e658e0570d3570ab508
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 2878c7fbe0c74db1bac2f3c557c5baad
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 2efce6fe51fa4afcb549ad22739b4cf5
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:144
# b5147555bcca461ea8258315217b3971
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:148
# 7add3104dbd8487481e35642f7dcc860
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:152
# bbf6cff848cd4280bb6a7d0c9c0edd84
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# c9e038bfd57b4978ae02775661836b00
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:156
# 3642bb5030bd4c0f96807997d2e917ac
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 4822b9b9eed24cfca9bdd3856e07857c
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 669ffdc1582647d0bba5d948a25a8ccb
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef| run."
msgstr ""

#: ../source/resource_common.rst:160
# ea6cce3f9155464cb80e933e4b34471d
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# c72e37334e5b4f9e843a9ad60abbfc64
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# ffbd381865e24973bacd6663cb4ff5c3
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling |chef| to determine the specific provider to be used during the |chef| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:164
# 1a8315b486794b4ebcc4545e803783e3
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:169
# 4245714e80dd4227b989dae34987ce88
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# d52eb89ae8dd42349999eb19b437f92b
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:174
# 6aa46cb276ca47718acb3142d096a015
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:176
# 02ce4cc88a9e46d79ff1173c5b7d9d4e
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 5afaadb04fd145eea44f37410b7394a7
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:180
# ea67360375644597be0ad0be8146ad66
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 39d278ad694b4e46af6518750b0dba09
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# c4f182a10b9f44a7804601b7bc8e8c8f
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:184
# d2e65d1a9efe476783cb7ddb07de8e09
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# d188a37d7ed74ff597d9d6b120f471e2
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:26
# 64f9f33339d246a78792448b56d3bfab
msgid "This example comes from the ``seed`` recipe in the following cookbook: https://github.com/mattray/bittorrent-cookbook."
msgstr ""

#: ../source/resource_common.rst:189
# f0baa5141c7f47f0b6f0f7db61fd2bed
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# c40b188eb3f3495094e0f2d3cb36de37
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 488c04ade03f4ebd972ff16c19310f4b
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 926c9520c4624ef9a41d79e20a2189f7
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 2428c0de50ca4a81ad199b2b6d9beb92
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:198
# 615a1bbe6ed546bebc96b2fb0bd728ca
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 2e979266aca741ab9647b01e1a6042b4
msgid "|chef| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 38f7434383ba467b8958946dad693c7d
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# 15167ea0aa924814bd51e0fa08008104
msgid "Next, |chef| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 0c9865d580394526ac58af55fc96edd7
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 38c258fee7a148b1bb80e0667eb0536b
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# d320a0252e364286907c49dc3e3aa24c
msgid "Several resources need to install a package; rather than having running the package installer several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# ca562e017cc64a35b2c822f8170c3525
msgid "To support these types of uses cases, it is possible to tell |chef| to run a resources at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before |chef| configures the system."
msgstr ""

#: ../source/resource_common.rst:202
# 09d84b064f1747f4bd7800df6baf6a18
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 808713f6afed482c9c0f5326952bdd3f
msgid "To run a resource at the start of the resource collection phase of the |chef| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 94217839db0b45b18f2f6858bd9b77da
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 1734707d8f724637bdf0280b19b5c8d7
msgid "It is important to make sure that an operating system's package cache is up to date before |chef| tries to install packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# 4ebae4d7cead445e8aed56303742291f
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell |chef| to run the specified command. |opscode| provides a cookbook for doing this with |apt| (|debian| or |ubuntu|) and |pacman| (for |archlinux|). The preceding recipe can be placed at the top of a node's run list to ensure it is run before |chef| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# cdc04eded4b04f91a67d233026bdb37d
msgid "**Install a RubyGem to use later**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 28659356e77f41ca92ed3da23765629b
msgid "A single |chef| run should configure a node completely. |chef| uses |ruby| as the recipe language, which means that anything that can be done with |ruby| can be done in a recipe. However, in some cases, a |ruby| gem may need to be installed before anything else happens. For example, when a |mysql| database needs to interact with a recipe. This can be done with a recipe similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:36
# 45332e4cdfd84b5990b4756bef02411b
msgid "where similar to the previous example for updating package caches, this example creates a new |ruby| object called ``Chef::Resource::Package``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:38
# 8f2b732c1d1b461683488f885a66b2e7
msgid "The |mysql| |ruby| gem compiles native extensions in C, so the appropriate packages for the operating system will also need to be installed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:39
# c4b08fee76e14655bda3c080c6d06eb1
msgid "``Gem.clear_paths`` ensures that |chef| reloads the cache of available |ruby| gem."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:40
# 39bd1db4f6e848b994acd981b9c15ca0
msgid "``require 'mysql'`` loads the |mysql| |ruby| gem so that it can be used to connect to a |mysql| database."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:42
# 4351637ff2614dafb038067a811aeac5
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:44
# 4228f2f756ba4fe99e802bfddd868b39
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:56
# a02f9c45afbe442cb31f5c8679822627
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:206
# 773b97e7704645f9b85cd2d295a12b14
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 3dcb894c2aa2491695d3908c770ceab8
msgid "To run a resource at the end of the resource collection phase of the |chef| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:211
# 7ea4f89ff32b492cbf358504e4f381a6
msgid "Windows File Security"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security.rst:4
# f1efea1a21564c00a8ad18e76728073e
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:215
# edb8235d9dc0433ea2fb4b81414f934c
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:4
# a4888b9e2719480186c114197c31e3ef
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:10
# ec38b66c36914a83a99a8a143c38fa56
msgid "where"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:12
# e0d4df46689f40d6a6de66e360329be8
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:13
# 292b9e11f2df4b26ae988aed4e8ddb51
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. |chef| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:14
# 9ec24b04f1c9416ca2f9471c1ac6c3a2
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:20
# 6851e49184584aa8a63f95fa2ca17e75
msgid "Option Type"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:22
# ba7ddcedb75a4aaf908881c90844b466
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:23
# 1501d05cd98b4ca78f1d48c3be851d2f
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:24
# c73d00ff51ae40c0bf45ee26a3a78aca
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:25
# 591b21f49021401ca43b1f00be253241
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:26
# aa51dc15336f4a48ad2373cdde0ab3d5
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:27
# 7b0920a7521e45a9b1c4b3fe3baa3749
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:29
# f6ea66026b494568abd04de8262bce9b
msgid "The ``rights`` attribute can be used as many times as necessary; |chef| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:40
# c6e9483cbcc14ea295196f36088c2427
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:42
# 792b3a60afe948debe9f35a48b21c37c
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:43
# 36f4fcca94274f719f9aa3f12c6fa860
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:44
# 95236729c5314ea0b4d526d990f18e8c
msgid "If rights are not specified, nothing will be changed. |chef| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:45
# 8d62bca20bb146af8dbe0ab89cdaa92a
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:219
# 2d02ac66874c436d8dc169ae3f102905
msgid "Inheritance"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:4
# 93ab52ccd58d4f51979b9d420ef2983f
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell |chef| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:6
# dbc15a03c1864ceca431e2cdb42a3db9
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:15
# 16b0a4bbf2f946e6a0d3dcffe99837f9
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:24
# a88ee2e89a1f408fa3a72c92a3e6ffbc
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:26
# 26fade418bfc4315be9dedebf895be23
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:36
# fbfa438730e54554ab7d8d9ac2de3eba
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:44
# 184b5818d3c74766bf1022f172296938
msgid "Because the ``inherits`` attribute is not specified, |chef| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-19 10:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 2109a4046a1c40548dbef1f08daa2fb2
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# f3f24190c692488d9f67eeb45083fe0e
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 315d1242b58541d583f9649b49ab44d6
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 0f2d6959da4743fcada00ab9e4de1e15
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# 49ade09a9a5741898bc02c355124eef3
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# d7902ac0289b47d98a1966f2ebb2a6cc
# 7882b58746644d96b1cd39eeeffd51fa
# f812b58edc404246b033fd84c6637ef8
# da9175ab26e64f94987153e6e677aa77
# a20f8000fe0149cdaab005e2d842f09c
# 2cbb870e61354af3a09b2db22f1f1313
# 9fbd46add8e14c31b4b35215fb375bab
# d08579178a2a470e91be60d07a33ae48
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# ca7a2746a864425baaad5168df5df644
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 7c4b086578e4449fad7fdea1207b92e8
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:124
#: ../source/resource_common.rst:176
#: ../source/resource_common.rst:196
# be53e8f300f242e5bc39420cbb7cbbdf
# 447fbd9f68af434e8e94625e639fe374
# 08e576982332487a8961543bbf12f837
# 32cbebd57a1245b1b4dd8eb425526678
# f5aefe0617694a1f92c4c53370f12d92
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 39304de1ad484f91a178a1736f8fe295
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# 6e8f0e9207e34e4ab0c2875e04f3d63c
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# 600531c135404127aa8979872c985e7a
# 46da432a3b4a4b5a88d736b5a33b782a
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# e9a257a5ecd8457e8ed4f0f59d400b14
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 37f83d798fe947139c6b7bb23981c3a7
# 4eb5489921604ee1808382d81015cf5e
msgid "Attribute"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# dfc57b44a21c4926b17e7455cd225932
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# 0727210b076b40958745f91709f0438e
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# 39d12b858f0d4539bd6d1123712dff1a
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# 1d7746eaadf84bafbcd24caa48932926
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# d490f83ea7e84758a3b283f14f06cd95
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 6c1c85d4834048d48c572561b95c0ecc
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# ade34b4d94354f4e801900afb8ba437b
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 6c90903e5c6d4c41b8da5b4885a1a925
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# 42bddc130bf34d0c8b852ffe2f09be37
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 5355305e6d0d4907ac2f9114a1a51370
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# b24b37e026b84a5796c601bd98061aaa
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 965ea0ca7bcb465ca056d8646609c4aa
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# 0f802dec94784672822cdc22345a10de
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# 85678b7375404c4cb76db58f2cd6dab0
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# 2830f02082c7422794081b96ea6af4aa
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# 695ac24e3e374b3cb36a9a5003af4d7d
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# 2a59ed895bd5462397371e025245f024
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 52bc0201c4314ea1a3dfb442e47b2986
msgid "The following attributes can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 3fa368f6282b4d22a3f676db002c6363
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# 4e4c9cb579454f0d975b7935558de757
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# 9fb1e04eed01460cbf62ec391f007582
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 28e1ef8b8c354424b7a74c1e6ef7d629
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:82
# d581a532f59f47fd9ba5f9821a083b15
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# bf9857fbbc2e45368214a9584c6045a4
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 0cf7418b577e4bda82c0d163535643f6
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# bed3a4c4193f4cd98d48e3d938ee45f9
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# 5671646371e64a969e80db180c021cf5
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# f6396a4b45a445d7a01098795f25275b
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# 7bf2b2b1d5a64d9ba8917793afd214fb
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# 310534f53356490ba3efebce00fc9c10
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# 15002cc80c294359b5abcb7945e9f10a
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# 89c1ef102a6c47c19069f3a2eef878e8
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 9b84693151284ddab24bbfa665fc5756
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# b4a86409bf71480197422793141d52e3
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# adfbf87bd60b4fb994770c543da790db
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# a182d1d0efd343e19eca5d265e7113f9
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# 34eb44ad4d9f42f0adaa54709b9a7d61
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# cc4b69793e214d7187a66fd9fbf0016b
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and then |ruby| code to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# 4d82be867cc341c08fcb6872ae509c84
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# 16157019884b4cbcaaaa272df522b0b1
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:95
# 06637cd6769d42b687d51876378cf457
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 358fb32ead214adf9b4007e7af83d3ac
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# 1087e75ec7fa4de0ba68c3f9729b47e3
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# 9203214dbdd14749a9e3a09da819624f
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# ddbc1d50a9d24ed2a9dcb36a5f50d95d
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../source/resource_common.rst:100
# 4c1330551ab44a2693cafec09931cfde
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# 41600c5d2afb459ead8eb0a6e0dbfa9c
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# 94a15bc1e63a452b98bf54089c40344f
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# 7f07773785724781a001054eacb9cbc5
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:108
# dadde5fc6bfd475db2454f38ef9121e6
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# 49ab717b944742f7a4359ed6eccb1b10
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# f6014d95124347b5801820ca3b1231e2
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 8bdedf4077ca44a7bdd9a3349ac10d31
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# 36db0d62699144dd9beedb72130e8cce
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 0ff592bbc9a747c9be1d0923502c20f1
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:112
# 831151548b43410ba05b5cab45c8e079
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# 9469d734459846ee88b4788eb71057b1
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 1fb18f0d072b4f15a0ae21803cff25dc
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 848583a13df44721a72a19adb703fe71
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# f81a31ce103846b89d58076162755bbf
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 3bf58a2a25fd4eca8862f75b2ff406ca
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 0d7fb5799f9343b48c9f43d2aea79bc4
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:116
# 8e0b965b4ff74b178c571789531d65dc
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# cf6f0b20958049c68faa426efd234f79
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# 0193bf7d9d564c0995e931397c78da6c
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# c41cef4352b84138aa22e438852f3d43
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 5bb1744c0fe947cab30f2c05e279dd59
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# e2bf7f244b4546a3a77f70f1fc3c4c07
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# 92d80e9baf0343a0a17ba2033ab34735
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:120
# 80955999439244f4890a59683617370d
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 14c5bb60df0d486ba8cf9de6cbb41e29
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:125
# 872e8eb28ee34d3996a12e85091b61b4
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:127
# dd897127a51649bfa8459984bdd7837a
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:131
# 56877ec69f9d4babb79a91f209d0e6b8
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 67f375b8e487491ba7f15e1ffb86c404
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 7b50f7cf298a4d1c976fa4b434c4a37c
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:135
# de782af05c6d4465902f366b0ec30d00
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:139
# 2235ca5672754c7298d103e136fd56c8
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:143
# bbe31e5ffd6742858cb754dcc34bfae7
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 7f06d27a6b6944b59f637e667817d279
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 3b3eff5bcdc64ad5b6c4e4d6a68f73e1
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:147
# ef7528e315654cd689da812d83c94cc6
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:151
# f7be11b79e90428099b60d24a3aa9778
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:155
# 3840fe22d25445f98a2efd2a1780ffce
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 8b7060da0cbc4cec9174b029fc25082e
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:159
# a8b33c996e4f4710b80f99a3ee147b7d
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 5a5ed456cbb54faf979fd0f190c59fd4
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# fba28ba6695942a1ad311113fb61715f
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:163
# 750388325bee4335a70f433bef2d455b
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 68f8f588a75b40ffa518e8529eff6503
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 970859566ef1415e910fc06aa74055e2
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:167
# 34a98e328a174e1c896bed9d72e62c1d
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:172
# 48497306b3eb41acaede9c78e38caee1
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# e0cdc584be334b6983d487c64698e2d0
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:177
# 2ec15ccc14194cf59e65703db874d74c
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:179
# f9ff7b933a1f4ddb8f660fa0db891943
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 53d336a4a98845acbcb6f417b581bbb9
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:183
# 9e91c9da851a42d29388a447f2917c4a
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 8bfbd8c4cca247b4902dd65513919b2e
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# ba7885095b174fe18b8bf28c3f5cad49
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:187
# ba9a8b36c4b447d7af4dc0a44c0e5d0a
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# b51a0cb03bbc4ee3aba790a9fadbf2ac
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:192
# 18707121896c4124925ba3be1bec689b
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# cc6ad930a9a0421fa0747a10fc2e20d3
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 92effd8a4eab4341b58674e94847e2d9
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 90ef2b6e69524e9bb1214cd12fb96982
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 3d6ad7d1928d4c97b3bc8c55bad71b0d
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:201
# c53f04fce5b34b8a86105c90e996e6f1
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 4d9206c66ddf4a2a91eec3325fbaeccd
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# cb36a5f2a80b4b61b05e0d1bc76c40f9
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# f2865dba9a5d498381ff8100b9f42820
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 38f6e9250dd349219453d613d6114677
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# acc17564f8e9401da8e7574bf32cb634
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 83d0b721cdcc4df8943f5bcd1ddd8202
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# a361173dfe984533ad3ceb291381d712
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:205
# 27f00996b733461db9ea3b78c42ea160
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 539a51d6b9534b7b837c6be2ec14b769
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 6cae7d01ce4842e2832cf92485d75aa0
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 60d42977ad5241f3a1a73751d3ea6983
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# e08fa016ff3c4a8ab3f7ff9f91f975cf
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# c19ae6f3dc7f4770850854cf237bc8e5
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 4521f3752000464a848df80fde991966
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# c157acbd758f4faeaa82745e2006e08e
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:209
# 05016d8087f545a980a3438bd9133784
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# cc17a7e47a054b27a915a870416f98b5
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:214
# d3beec45a0dd4ebc97b3c22ce581272c
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# a15cfc8f2dfe42bead99dcb5f1d14f35
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:218
# 93b06e91a32b437e9e20d6f7abad4e3b
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# 23f1be857fb740d38d8679a0434cdefb
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 4a89b6f4586d4362a4769bf2f923ddb0
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 1c0bf2adedf044378455899dcf1a661a
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# 3e60c83f54c745a38d5a71fe64f66e4b
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# a03a2bb41f854dc6b0e6694ab96eed7f
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# a29cb316a4074009b9ea36900c0c7fbd
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# dd5e841f626843219f37e21a1efb4cd7
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# 1a2fbf4a440f4134905bcc4853f6eda1
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# 82fc9d0e7ec24d0f9c1d2fa5728beb11
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 1a18b2cacd344d6aae13e15275d8680e
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# 2e000db609344a2bad16cdc1bdb500ff
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 70679ef54d9840c6a2e09143355e65a6
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# 92d4f4a03e844b0b89253d2d691a21a9
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# 14fa02a2fbdf4980ac233301a6d08e64
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:42
# eee0b77cfc1d4c78a0442986311827a3
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:43
# c5504030da2b40868fb5ad819df1eccc
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:44
# 0e7af92cb4834d1b996c194d2017c982
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:45
# ed3007b89732457e959acabe6bd51497
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:222
# 1ace8da1d5cb461b84e2f3cd78ccfafd
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# 66ecd40c786049b1be524390eb3c79af
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 556f2288be684e11b5c6f30f04fcdc27
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# 49ea42b736d9458ea81ba8d2c8c23fa5
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# 5fb4275d8406482e90704eca7c67d677
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# 28c4d149d7ff43bf9aab4c194142ca0c
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 762172ac0bb042c3b083220ce3e56c06
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# 0a435837a6ae45df85e2af4994c92463
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 20:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 8f40e7bd6dd742f6b09e7246922d5cf8
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# f8f39be2846742ada64c23ca096aee15
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 0244930f4359433991761a29315ed154
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# ad8afe77d30f445280991b621bc91b2b
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# d10d8d086e0d4a9fa50e9e5094ab6304
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 5492e54b9624443195a0fdca12dd93c7
# 57764a2666294323b7eba4521e123036
# 6a52c664f91c4fed92be22e9e2541433
# 8ef6603bb154443f8eb40e6b44bba318
# 4786100c7ece4811b63b0dc6b17f43fb
# 91a0715708634fa0a807ea6cc2d3bb1e
# 48a0b23aa6ca45a7bbf9eb6b9279d078
# c17f10cf74e04a42a8cd53c9c4f486f3
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 9431ff1a161e4ca79ed43fe516796540
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 9e57b3c71cc24cbba32fa1f08347ae3f
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:124
#: ../source/resource_common.rst:176
#: ../source/resource_common.rst:196
# 624b762f81dc4bc29315c6d98bc438ce
# af7ce00e42af410ab1ebb2a96126e2a2
# 2ca27d86cbf74452b4aa6b90d5b6a847
# 54ab785e0cbc41728b2bbd63092727e3
# d2482949da9a4340b9172512a65e0520
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 9c81027ed206477a923eb7659041d9ff
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# 57e0d24cc81a49c687630d502c647e9a
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# a4de8afada764a088940000c8fe5011b
# ba782599cde64048aee70c462e39a8ef
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 47859d9bf6974fef81abfad19484f36e
msgid "The following parameters are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 4103e0b123fe42559251489c892b597f
# cd82c411e7ed49faa9c24f8ab5e367ba
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# 944d3c2613b24bc6af0cecbfd53ef2da
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# 9dc540983e464d1cbde87f711346583c
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# a3e853b6551d45f29e4400695f1386ac
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# df94caebecc74392a2ed6dece33a5674
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# 33e1a5daf3d04936a5de688410e9b683
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 01fc876bd4b54384ad5e0ea5b878190d
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 11d50d4908b44fc78bbac1100077942e
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 3047ebdc178b4c718ebe23cc609592c0
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# 146516ce7f3e42c78a9b9616410daa45
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 850bd196c27c4d0d9816394b70a24f9c
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# 5c3c7871671a486e8d0077d305eef809
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 83d32ec0fb2f41fca08460926b478f08
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# 1bc82d6d91d84f2db8b36b133294d25b
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# bf79305aa56f46bda7a95f75528439a7
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# 4ab8ef721eaf482ca7774f2742a8945d
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# de3e305a2e174e84a1ac15fcdf8d4a79
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# 20eb65d41e254dda832e0b543b10a141
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# b92f1bf0e0e0490b9931353db17cd391
msgid "The following parameters can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# dfed065adb034405a3ca85ab4268d165
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# cb7d08915c1548eb8336b84e7b4aec5c
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# 49a778b084814a6393f86a55db640c70
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# a4819e787b424deb92f26a112b131bf2
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:82
# 5071fd2ed91047c4b090b6bab493aa3a
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# e439ea27384b413fb0df7a451f7140e6
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 8b3bc30fc0c047efafc6411d1f536de7
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 3b20437772984fc080c21f53e8b0d697
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# 7e0ecca218474e2b80a6a23b0721c072
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 86fd48bbc5a74832a2767752993a6e6f
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# cf8e181562964ee086f559885f8b5dc9
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# d7600a5ea714439ba07a17eebdc5f667
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# 482855f23e20462ca39fccec24d58460
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# b58a0ff7560e4a89a0935e3e2ea9eadd
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# f9960acf20bf43188e05a26f7a5e2f74
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# bcdc3e653a8c4dcebfb838dc42d83310
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 5a47dbe868d14196bc0a08a2c4465699
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# 65487caa0d0548a2897c0b4588a73118
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# a0bb1fd91d604d9caf663f1f8a2c2c10
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# 6f9ca5fc2969499b96409a423c6b063a
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and then |ruby| code to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# 4e2d52d2b2544c11a307700672b35e76
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# 184f9d1d75fb4cc196b29500b5260760
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:95
# 5d5e3de06c8e46f3b2ef5fdc1026a05c
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 7468e0b4c63e402fa9b30b57810cb69a
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# efd4ad934bc94956a331c9d4d5cdef69
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# 05190652daf544e88265527bb1a11778
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# a00a9ca8805444e59a65c8614c3cbdcf
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../source/resource_common.rst:100
# 2464114830384fb2b94158179f23e6b1
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# e185fd94a6cf441fb88dd1c88a277762
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# e452fcf55d5b4070975c83cc0cb1b0e0
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# 6ef2d60ce14a45b6b2a5e27594958682
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:108
# 7fed7901892e47029bb162a9bab9092a
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# ad4a286217094f829522f40ce1edcf1b
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# ecab3fc3e7734989911226f820af469c
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 1ff8508557e34660a6339757c49e9124
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# 8b5c2e2a3e564cc2bcd779e732413f1c
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# a6bed60460094ab6b1fc3bdf81507453
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:112
# c2fb2b911049481d82d4fe4e3028ef8d
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# d8cbe20c079e4e95b6241e259faef924
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# acc55ca7543649fe8e9379404b318a37
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# bdcde9737b0842b3a35eca0dbb1aaf1f
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 9a917f5e300f43ac8f5a90bac76ddaf2
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 43684d10e23a425dbd818392202fd5a9
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 6f3990da35274ca7b8637dbbadf12425
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:116
# d9a806ff7603426a920e370cfebe9a25
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# a540cc03dd7845b3a847fc44bccb4015
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# 61d32e226cfc4b5d83d6741d6cdb27ec
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# 138a0975adac4cc98140c8af36fcf625
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 233847280ea24dcd8409806431a61827
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# 7a5bd6414af84978ad57b1b5dee79dad
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# 84bfcb5ad9824a1eb5e8d416a5f9acc5
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:120
# 4cf395aba7db4d7abfd1c5bcbc928aa3
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 50ce3bbcb9a94a63aae8365978ad9b40
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:125
# 04e135de16a94454b405c2a252be81dc
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:127
# 1cd1859629ff4481a8fc7efeb5ace836
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:131
# 40a639768b3f4c2ea88cd1408965e42b
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# f7d4683102b4434dbdab7c10a896b3dd
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# bc4877b2c5504da0aaec41a94fb8aa29
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:135
# b2ecf72168ae436794930118a316dc02
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:139
# 9a48182fb1ac47d483c1ad3e6c8c0dee
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:143
# 5dbfc2a91e964014b97baa0c2697654c
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 87946bb874bb4c20ad5d4fb4b1b01643
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 9489de27d16f4c6d91734a7ba28f3ed9
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:147
# 6e6aea39942a415cb8060fe1631a2bf6
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:151
# 284b8c8abaaf4e99a9ce7661c9e3ecfe
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:155
# f41c4e9d97ee47bea54213fe8e1b1e44
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 1fd6a15e3a284f1ebb0e0631e5aaaa5d
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:159
# 0d4944221d3242748779e0c4626dacb7
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# ddb5b9176d5f40469c56b44944929824
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# bd4653d0d1b74773ad77180826b8c198
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:163
# 5bf5eb408bcf4cb4a2eec45040f56c50
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 0466f8daf04e4e9bb02917488f75979c
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 9f078bc78dc54001973607f1cc3e3764
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:167
# 56a52bd7df1248579bf5ca821d52e4b2
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:172
# da389503acde4d988f0ac298c1859610
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# 1e68c88d844a4c56a28ff369e296903c
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:177
# 89f6fddc838244129d17ae4e6fd35f69
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:179
# b18d9946e7b74b0492160a5649bf8e7f
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# f4d5b60c04614ef389518451499c6a61
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:183
# eb57b9c43ebf4074940bc9be56635f94
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# c877eb87384b4ce4ae0b848033f4817b
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# ba6c0eecab7847e6a3e173997c939e46
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:187
# e3156fa1d8b6471bad457187540f0229
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 47bb229ff7b744ff87b1f565085c865a
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:192
# 9c30006768454fd9a65499f70512f515
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# 678c6c660c854a2a8ff6db66edfc86b7
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 4fbab472cfc141b8a27f1980c3b742aa
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# b5acfad7d6ae404aaa1bab884cceda02
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 3c0e174d7d0c48a6b5eee9a0c51ac941
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:201
# 30470ea751f84daf970c0fb15c98017d
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# f971fd1647bc4471918d47f01a9cdbaa
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 829f281b81634213839bc55c45b3a279
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# c6578fd6af0b422f813b98bbf863ae19
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 772f5f29c85d4402b853fdcff855efaf
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 1a3b0310349243918430f973123f3f90
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 5222cae2c3da446bb2e05b1020843ead
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# 96302ed368d14d01b95748abc93cef1f
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:205
# f61660e0e9c24984b71c0dcf5f8c3562
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 3b7d5194abbb4e33ae91620078ee5f96
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 117f99ad36c84cafbe7bcfdd3cd6ebd5
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 74681d027e644020ac978587b2554c32
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# 3763e63562cc48569d3a8a39fbcd1e73
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 62f30799b3544a16930cf26190a3c74b
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# acae5261cc6f4257bb073679dbcd406e
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# 66474a41297b4add9f658cd0a9aa184a
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:209
# 565e010871604e399b05fb9f2f658d69
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 210aa06c35b34cbea7a25b1daba1efcc
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:214
# 8bb931d69bc04de8a83cb70e272f1f49
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 29ac169757fd4ccdbf7e0b54454cbfc4
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:218
# 28fb00002d864aad8de5f746383f143d
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# ee915bb293fe4ac89b6f207982a4af17
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# e457f1cc145c474997056d319fbee1fd
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 6f69cff9e949435b964691d85b84b3a6
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# 8866bc4292344b86b8020ff962dee9cb
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 7b210c3e1a3b49db909fbf68d326e714
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# e937220131b6473cb2c7bc8ec8a86a6d
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# fd996b026f3345f1bcc2c2cb1bba3e8e
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# 677fe6321953445f99614e962ea41ba2
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# f1c9daaa979042c49fd113adc7475746
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# f1f1c614a2424a899b60aebf910976d9
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# 2310ea6b30114c3db73e493e609ade20
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 07bd8834d3024e259e93c379e4aa6399
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# ddb40ab94fc744c39e0cf13e58563b6d
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# d24bbb69d4034ca981268c55cba1dc02
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:49
# c29466e83b8f46c5b8788aa6814c6aa4
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:51
# 8c259f83ff51499ba90932bc7f1b8895
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:52
# 890dca4954ee4af1968b932fbca340d3
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:53
# d297168156f3401eb97f39ccfc7b862c
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:54
# a530e03ce0174b4b8b81c917af12eeac
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:222
# 09b2b0a8ca084cc0b513e8816a8dd2d7
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# c8f778e77eb240e09638d9aaa188a119
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# c2251a41ad2e4e7d879c5877fad1e6ce
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# 66110e9b7078480fa02df14190e6277d
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# 19df6de7b61448f3a12304272b01017f
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# f929b034d71847afb9af39b43870144c
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 964e8be1dc7d4fa083954143ccba877f
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# aa0a6b108ff946289c6bcdbb837ad635
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


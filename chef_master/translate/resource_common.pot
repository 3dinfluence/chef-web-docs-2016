# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 11:08-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# a0d15b8a1d004d3a8c1ace35e3bf7797
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 6d819bdd31f34e0a99a6d07f7c12f385
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# ea07bd19e2dc402caa5577e77fa81192
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# f7368fdd92e748d99803af08d3f9ec9f
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# 5bfed84d8c714184be491cbf4bee42e4
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 66d4588e34964759bed60f95c87e11f3
# 02cb2b9ae33b49abaafb76135225112f
# 67bb734de6ba4b7b90925320895a83d7
# d28b6b1168854250be7d7bb5b68d07cf
# 98ff5d9942594bc08526badfd9ed125c
# e1913940835f47088c3c4e4e2bae0855
# 731ecfadec2c42eb90fe872f190c368f
# d59114e6241041289520022039a9a13d
# 02f7395151544c22a6aa2976b0df2800
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# 59cb1151fcc849c689c25fe85be341dd
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# 5a472448d0dd43f2ae86c0108e9d06ab
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# 035d1dbf43254680ae8ca17dd612590e
# 70248776744f4d93a6ee6a1020d72a5c
# d8b26079d8a848738c45cfb47bc04db1
# 88ea0b0ec4c24247822e479ef3513501
# e04e14c779264986b48975be107a0fac
# 34f8a6875e0b4f82aa1ac19832cc68c0
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# 5a549c325d5f4eaabafb4a7a6d60d952
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# 4891147fe31a40b39ef5034110dc8d83
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# b808460389a34381a2e7465e9d082b43
# c07d131bdc354a809b494e56693de2f9
# c31a1da6e5a548ecb9be786e4ab84725
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# 3f18d85108454e15b364ef3edd87fbdd
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 540847350c764fd091ee56c7ab01e007
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# 98b8c48d10974fa3b913898270081cab
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# df96dad6874d4c67bc5f168da5e5e7ab
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# e09d66abb6354f12b61a32ca05784585
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# 7472c417528f44f3ab3250c2a45db681
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# d086d407754d49fa82d82fd1ee4fedd6
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 07d24dd90fa84570bb9d9ef2c1f56724
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# 6cd19f3832ae400289fa1bd80412f26a
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# dbcb4604625f44a3b10b02e255913b73
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# d5eef684b4d3487bbf698b737fb43a53
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# 9d441c94c81d4145a9a278b2a52faa03
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# d3e9b8a23f1745f496896a83c81963d3
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# 78990c5e0f074ea6a4c2a7ae535e9a41
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# 363e36d1fb7242fa8c8bc1fd2a68622e
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 18ef6823c9b0437c9046e873fafbd4fa
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# 53bb0e206bef4af6bb86a5e222021c61
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# 3e347be29af342b6ae1f65e01bb582f4
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# db36e5d41adf4f09b18e11af77c3a1cf
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# f947eb60c8e6455789221c6a7e0c9d02
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# 9c09f7fc78054574a97be99cb9f33ea6
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 1a4f4cbea7df43949b6667992942afd6
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# b2794543abc1422a9bfcb7e31a6a018f
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 002b0d6282fa49399d4a1cf99d6de93c
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# aa517f1acc504403877c50176996a8d9
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# 3148c0bbb49a4dddab43b0fe6c74ccdc
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 4fe923c6bfd44b5aab8c4d4a503ec462
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# aa7b3446f45946a4bac4e0a4f7b41a1f
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# 5419a68b1f5c4f2db2a73a6483d3ebb1
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# 66821fbfda4749f193c527221bf157e2
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# ed5c464114044b78ad0027ab468073bb
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 290c6de5fe47449ba4a5ccabd36289e8
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 6f0399f92cd64be2831b16a87b2213f5
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# 68f5cc84dc4948cea7c592ec42efa0ed
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# 19b825abef1a4d09be8094300849a459
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# c8326ba6903c4c2c824e4130623838ea
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# f9f8405ec4134d91a0e5cda237652fe8
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# ccde281f337142439d7bab0f3d945244
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# e969f104d133454eb9213b8b74901d5d
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 49f8461d4893445286454a49b67c8704
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# 9dce940c2014437393a8befd50c19e97
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# 5b1787bdda984bac805c930ac3adcb10
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# 4a8d478eb182495a822091d291f76fc2
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# fa198b2756624750a1b249824348227b
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# 893761e5b9ca45b7995cac6ea097272e
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# 4aa6af961f234533bc15c83c5b5975e5
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# a38bea4e823a4acba56ca4a437bd0a6c
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# e1f8b304bdf14239842e74f7b631f0d9
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 124aee1136244aebad43b78ac0b64efa
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# c80876fd0a7f4006b8ab3d8a18f1e09e
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 05b24b9c9eb849919576497bb9cf3263
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# 70294c4f9dff47ed9a5eb63072870b87
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# a84c42abf9ad4429acbc4d7e55f2851f
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# 1e8dfbfe9e6f48bf84531504a77e02e0
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# d8259436cab747fe817a7e4a0cb600a6
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 4752354934634e52821337f52b672125
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# 1ee63278685640cb9c725be08eb5adb4
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 638543b2ef7f4a0abe206d488c613bfd
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# 29195912f6e746e387bc65b8408a8c4c
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# bf331584fd544070bd5592dd80d932db
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# d9b89e715da54836ab78ad5d2b37f58a
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# 3a50e225e2f0444280662fe413991e40
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:5
# 28e98de6c0d74e2d9c775b836cd08a6a
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:11
# a43e01d4362a4993bf5bd91ef9f56011
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:13
# f8397508fc08440684af3927cbf98abf
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:14
# 8da9a00c7e9e4fe081aa091dd715269d
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:15
# d7bb6f641ada4543a4d77a2c0bdc4276
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:16
# 3adc69adbec64870812b69382ba0f2ba
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:17
# fc76e2db72744303b9411f201373fe77
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:18
# 57d46cbecb69480d8f11881fd29b520e
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:19
# 324909a6f9be4f6b8c7e8af79856df4b
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:20
# 143242fe4c714408879f8533f7df8dc0
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:21
# 37556d89614b4117916a86f1cbb27f40
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:22
# 02c9e80427cc4173925eeeeeda9af992
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:23
# 9bd181c26d3f4b81b8402de99dc77f3d
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:24
# b4884fdf1754471cb9a3c93976df03f2
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:25
# 5dc71ebc837a43ac93a78cbc822520ff
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:26
# 097384c0cb7e4979972d0bee7752e8ab
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:27
# dfa3f86ab2604525a9f22e13253b06db
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:28
# b4113b7101594127b1b20b3d650f710e
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:227
# d7aee68241754ae5afdb3c58bb37c468
# 013f177e1e81433598f428ac1808a4bb
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:5
# 4921bad30f314d749d9861d41b74bd6f
msgid "The ``guard_interpreter`` attribute is set to ``:default`` by default. When the ``guard_interpreter`` attribute is set to ``:default``, attributes ``not_if`` or ``only_if`` guard statements **do not inherit** attributes that are defined by the |resource script|-based resource in which the ``not_if`` or ``only_if`` guard statement is defined."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:7
# 9af06362413048a4b75beeba4f6c1efd
msgid "For example, the ``not_if`` guard statement in the following resource example **does not inherit** the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:17
# 41292c73a1bd4417a33de5413864e0dd
msgid "and requires adding the ``environment`` attribute to the ``not_if`` guard statement so that it may use the ``JAVA_HOME`` path as part of its evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:27
# db46245666934f459c3287c8a3b58dd5
msgid "To inherit attributes, add the ``guard_attribute`` attribute to the resource block and set it to the appropriate value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:29
# 00263a5f7e56478ebd8257566bcf28b2
msgid "``:bash`` for |resource script_bash|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:30
# 8e5303a637564205be2b2b57c8859be6
msgid "``:batch`` for |resource batch|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:31
# 059a1a96b9724008899b07bc07cba854
msgid "``:csh`` for |resource script_csh|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:32
# fc2a364330be4fd7a1cbf27247fbd6c2
msgid "``:perl`` for |resource script_perl|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:33
# a2202b29c1aa4082a202ac59177f5753
msgid "``:powershell_script`` for |resource powershell_script|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:34
# 797903a13a6b464b9555cd216401845e
msgid "``:python`` for |resource script_python|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:35
# 7cf472acf59e45198194468966aed00e
msgid "``:ruby`` for |resource script_ruby|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:37
# bf414327893f4705ab70d859134c338b
msgid "For example, using the same example as from above, but this time adding the ``guard_interpreter`` attribute and setting it to ``:bash``:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:48
# 0f85fa60e83b431b84e6c79ed8b8061f
msgid "The ``not_if`` statement now inherits the ``environment`` attribute and will use the ``JAVA_HOME`` path as part of its evaluation."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# c1dec6bcaf9e47dab022f253f97c3818
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# 0acca34ba9e04427bac4d400d51675c2
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# 15fb91c804ec4eb79625c89ebdec1a80
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# 24d093336b3949049f2ae4847920014b
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# 0797e8d4e8e245248247633f20c90d8b
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# ba0531340e134e21a480cdf1916a618f
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# d8f7690146f445258809a1eb60d2e8a9
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# bf389c139b38449f8aa20d3ca6982a67
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 04ed9fea66844fa884fb945cde36c65c
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# be91b9be166e4d0f9df46ee74303ca3a
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 2e8760b6baf14011899dc2ba7d08cfb2
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# 8bb83e2212164dd782d335d8acbb9c14
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# 14df35033bfb478ba10f66c0c721d887
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# 152fea489df1488ca65765394cb01114
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:121
# b4c2a19604764f908ddfdbe7f5794340
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# f72e705bb7a3465caa943474d2b8526a
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# c8d32bb4fa384249aad69f4e934625b2
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# df4a038eb8664e4a81c69396f08a6d22
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# 50fea1adb6404c8f80468f34c3afc783
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# 0efd93950f064186989e903ac445a7bb
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# d54a084e4e8f4450801150d9ede42663
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# fff1a290ec924e1f8af2eba9508f2a03
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# d568d8f759244654b598aa2240500c5c
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# e8eac363440d4707abb6692bdc42d6c6
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# 8b6b4e3249f846f7bcb714bd969ae966
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# 857ea9d9cc5e4cf2a51ab6105fac172c
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# f79046aa5aa442fd9a9581ab34f05c86
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# bb17a7e2efa94b46aac42c870d3c3068
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# ff5095688f4b4fc3a0dcdbbf0f1f6b06
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# 4c3057e32c124c94838052d915ee5f41
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# 7394053293e64500b443d34a5ba94608
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 7a2db583deb54e96b7a1ba86e6dd774c
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# d74801f9e6e4438596fd2af4a1fa1138
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# f298658605854a7bb915aee13ad4febf
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# bccf6ab76d714a7287394996c6002247
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# 073dc3407cae40d8877a29d1fd689b34
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 41533f2b87e64388885d00a755976136
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# 90ff5e8ab809499796dd650cbbb6845b
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 895836b1822f451eb6e14f696f068318
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 18479cf4e84d4bf6bb20d30c921b0ed2
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# c3525475c1224e05b206a6647317534e
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 245e0327c51d48b9bd8630526b0d12b4
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 50bcc5a692674e8eb9b81d73b0e9e332
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# c2b125d555de4f10bccf13d53809ea47
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# be1d798ae03a4d6eb8dec4cc4efbdcc8
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# 3b934c1767a544fca2bf4c820d132bff
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# 57ccc7106fd8447db55e6c7e586ab4f2
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# d95e951c6f9a4d018552b6b353d1fdd4
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 8a095677ccbe4d87aed4e1a052d1b75c
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# 7d1be6dd80a84c7293b8c4df977f2471
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 080580c61b6f44e4bd8811c6d972cfb8
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# d2e92907c7cb49449b295248b99308ce
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# ac4e9c06ae9d405fa976bce594132d76
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 09185ee0fb2647678f408e0fa736aecd
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# 8cf90444bdd74879ba7df7e7f8a9bbc0
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 69a63aedc9b64b389fdb3db363f3ce1d
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# 8c1bdc9f37b446a68defaa2db7c8ca52
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# d4cca4b50a2c49b3b63a4dbaf97068a1
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# 5d1b891d1de940e7997c05e08290d82f
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# cb9d3a461c2d4c2daba2a699a53ebf16
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# 3689f38e2d044bd0a99324954cf8f391
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# b30f3633cc604d30a8f96fd4c55bff0d
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# d74f8b642c1b451e8e5697cae82e4b4d
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# cea443ee989e48eea757f93b0ee6514c
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# a76a980f45cf4e239511ad30155a0bdb
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:13
# fffd1ead20324422b757da4b9291eafd
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:15
# a37f6c2086194e4dbd49793a42692fe7
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:210
# ce6adb15b28f4b849d3e94cb922ff680
msgid "Before other Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# 92e55d456e6f4853b7ebafddbd4825dd
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:7
# 37acc639af00454caf3845eef5713f0f
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:9
# 74303ce20b47400ea67867fd25193957
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 64532756b0ed4e02b2267e81df71943e
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:21
# b44452b7be274280a7d4bf1dea748c84
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:23
# ccf7419c6da74ea3a40b0eb2f46c08f5
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:35
# fde5c43603a84e9993b4cdfbeeb78222
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:214
# 0a4f3f0e3efa4f67bad4ab75b4236e0c
msgid "After Collection is Built"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_end.rst:5
# a5cf3fa5a0c740d7b38fd3149d7f5932
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:219
# 58cc2d28fabc47b6a701c9f5b3edd03f
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 7f3c0fef3a9e4fc99f95a476be478247
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:223
# 98cd8f8c0d174a27891869f52fe5d971
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 59a00f715a9a42e28c1e31c45f1d981f
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# add8610fad3542619f52115fbc585314
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 43ee7c089a2d42528411a50bc3332822
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# adc2f42d96ec4d229b0923e9e6f6b6b3
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 37342a27d6f64215a457f08e24197cf8
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 58379f1e3d224f30864d682c7831affe
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# f4a092a3420a469f92a84835c759120f
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 00e5aa2b8aca411d9cd94d29ba0b8035
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# a56a16ed2dec4d0782293eeb7af39cc6
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 8dab2f4c0b3e4e2ba84cb755f188094e
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# ab7a7e3632b0492da077834ab903a9af
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 5fcae3e0d8b544e8ae66dfdb8feadd25
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# dacd3161c18245839b17b518a5f5991f
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# d72750831296444a80227d019da5cae6
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# d13496806a3d4efebe16f9aab93a00ef
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# bcc55df59f814502bba741eaffcf852c
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# e2f4c0ddd18e442aa69cce567afa31ab
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 697fe4e95d914b2785495afe4cf72fc4
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 2c8fb41ec1d24a2ab6999d2c4eae1346
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# f121da269fa34344974e5ed41a9503c3
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# bd389ee96af84f738fa17e2f708e8627
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 05e1762e9ffd432e8663a90aeef64cec
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# a757160c99724820be67444795e088b1
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 3e9aa4c70a43404087d3f4c4eb209dde
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# a53464541e3b4f398c27e12f99475388
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 83f781e09a924e14a6b93c10ece5527f
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 4c39d0c1d72b4accae6ece4f519c8c22
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 10010945393547ba8a8ee6721791d311
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# e8f9cc0e506c4a4b826c725fe85eeead
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 70eade41842a469bba8f306c76111629
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# d16aa857c8e545f99b6b57026e65b94f
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# 667c3ca88e75458dbe753ebe446d5804
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# 40855cf5ecfa4aa0b1b3234dc7f60996
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 1759faaf4a704c039c9fd3fb7dadac91
# cefc468c215e47b694f40283adcedc74
# 7db3b0dcc1b640b1899b34e20822b460
# 887acac393e94766a29d64498abb3921
# 716a22469c844784a0a6eee32d05fbba
# c57c04741dbb435fab2f1f90b36f4af0
# 72018cd013c4433e8b156f3677581c97
# 96d777593cfd42c0b931cef555e02364
# 7f3b243fadb542119afebfa4f600e87a
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# b449d1bb20d84e20b4d91257a23175e8
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# dcd7e5c73ff44c06b4422f759b4aff67
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# ece51f9fa99f4dce94c6cc803137e41d
# f4aa300f0c35439ba2919f1a63c8663f
# 6f899c7cda8344598f9b2a7ec3f62e5d
# 1c261789e3b2495683b0b1bacbef52c3
# bc42457b8bfb4cd9a149520afcc756cf
# 05fcb9b1724b48a18aa1052eb5efa927
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# 7305ebdd1c21402c9a530377e44e5c9a
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# 8e8ff854d8d9436a81bfa57342d625a7
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# fbef23d2a3a2451594d4b1a4952bc8bb
# 35bd01ccba984c2ca62783bb70381c02
# e0834c1819eb4acfa5da73a830c7f3f8
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# 3ad11954aeb447209aaf31a5f70b3d55
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 9d42c6531dc44f7baf93e471703b0ee0
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# 6cbe0d4cfced40a1ab1842243408ff85
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# 12263abe00af418db0a1b80411f8bb42
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# cdf162cf9b39487ebf2b6bb6c6f7a8d4
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# db9617e3b0a64e0387f7a4f9e7943326
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# eee3b632679a4924985aeb06f6ede2dc
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 8a763fa1173b44ec8843fd355a12bd31
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# aef037bbdd044ba9a3c6f9f0f5a78287
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# 89e5841fef984aa185e56c6ac8ff054f
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# e5ff98660eaa405c9a32b94f2dd6dd86
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# 5314ceb6a58c4cb38724dc59de9358f8
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# e367701b7a924edb93c7051582843227
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# 3c00053a290b4163a67a39a68535e912
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# a76bd83cf36a4267a9b71eef6966498d
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 6b97ec9f66404261a1dc65238dfd2b8e
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# 261c4cfe91bd45b8a60555ee2227d42d
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# 421a26515fb9448a8b1a51af7c7fd207
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# 88f6165599ed401cb451a04de47c7a14
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# 70e4b13fdacc46f587bccd08d56b50a4
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# b24bf5fb7da3449dacd41f8afd8554b6
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 4e274557b72a4f63869a25d06a9519f5
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# 9ec4e527af6e4f50bf1cd1990835be30
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 3d6e618775e54ed3addcd8e0400f3a41
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# df09843788654195befec88b0674e941
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# 4ab22b08815a4b2a8dd7c9d00237a453
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 0c9929aa57864c90a8ec0de7e807ee1a
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# 0d04262ba9c34d529ce84b509e9f95f6
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# ed00ad7f82ca459581f7a0ad21e1f3fd
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# 9c6b224a727849d6a80361e8dc0f266c
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# 240e48b2d21a46889e4bfa9603c5a7ea
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 8518b8281d564d0580a799a6df96c475
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# f9ca94d2cdc34e2ca87b679f9c4d162a
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# 29ccc5a53ccc4bc0896d1c4615600e7a
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# 80230375bb174f71961126b877ce888f
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# 8bab3fbb76b542459a6f43b482730aaf
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# 70740dcd92be4b3287ce3fa405638129
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 5bd93b517f984d0ba03fda009a3b3fcc
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# 788b64c3c6b644d5b3a849da4b5783e1
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 7d9e58d7f8cd4c9f8b2f2b42b949e2cb
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# f7cffd6984704527b89bd186a21d290d
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# 61ad14ecf4e845318cf06959537fc6bf
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# d3abb1aaf63f4af0ad1e7ee8ae5b33a1
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# 1f8851d9792e42e5936c501f645cd198
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# 2e3ccc6a14784fd4a08f49b80859d44b
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# 8d5f93b041fd4ec6a940858a6ad1a7bf
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 5f48beed2ac347329afbd53adf4d7fb5
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# dc6db35d7bf148ebb519ab4dacb96bcd
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# fc69f5a8d63249e38798f039f319764c
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# cb73f661b3ed46dfb28317b86c30d036
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# b573a2341f3e4a8fb4d67bfd114f1084
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# 80c14cf6956b4e94a81f4232e6b5f601
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# 0d568990cbd2453fb91eb775d18cc3ae
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# 21817fbc2ae040a2aee8d65309c2520e
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# 646504b2a5b44e85b130ee48c17d8e19
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 1cc1c4016cc9453ab425d143091c976b
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# a9ef999902b447029dbbba42df6df681
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 69bbe0cadd1445c38ee26fd2062df213
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# 6f90bb53211a4ea48603048b8c75f744
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# fbd0bea20e5a41b3831b1525dc9bffd8
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# 2168bb4f45cd4e94b21cd3885ae186d4
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# 8ae5b1bf70d2474f8bc11bc7453b9069
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource: |resource script_bash|, |resource script_csh|, |resource script_perl|, |resource powershell_script|, |resource script_python|, and |resource script_ruby|, plus the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:5
# 839746118fbd461db23361125b2f7339
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:11
# 35b3258dc2964b788a9ef179cdaae136
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:13
# db26309eeecc46e380cdb06489807b2b
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:14
# ce629ce1fbd643cfa6a916fdbc226d1d
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:15
# b72874a64d394db0a3e79c4bbf3c35a7
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:16
# f1d867475fe944fc8d8050f8c467f66d
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:17
# d36a0f99e4b34b0aa830ac907f623964
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:18
# cebef7d4fc954217b36f35a566cbe85a
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:19
# 839994846c4746d793b629ef4851ba45
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:20
# 0212cd7f71224e5f894e1ae6ad278295
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:21
# 7884aafe122b4bb48ae110c6d23a87fd
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:22
# 74c2b4e32eaa4462ac19e1d0d75bb526
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:23
# d9a392f1234e498685f3b6d8e7f257c8
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:24
# c8042bd987b0488590ffcd1ee3b711d5
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:25
# 4c31817bbb7e41cf946d7261ca795e10
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:26
# c71cdb661e344c2fbd4eaed4a72bbefb
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:27
# da53fe9798b5497b99b24bb32e02a025
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:28
# 1e64a681df2c4fe99c58f7df63762760
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:227
# 6846ef608ff94d29bc2cc23b5f693528
# b729dc68ed8d4ff8a0b496ff42cd7323
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:5
# f4b5d723bd06494cb92388a15d9ce86a
msgid "All non-default interpreters will **not** inherit arguments that are available to guard attributes unless the ``guard_interpreter`` attribute is specified. For example, the following resource block will not inherit the ``environment`` attribute (and requires that the environment variable be specified within the ``not_if`` guard in addition to the resource block itself):"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:15
# 29f4403a8ada4d52acf5adb18ef13cb5
msgid "and the following resource block will inherit the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# cb547dc8c93e4a6a8204151407862509
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# 4fc7fca3f54f47cc98c8165890319098
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# 12320dd494cd4bdeaa28ad68efb8f956
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# b53e760285d449e3aeb37fe1bd8461d3
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# 320d3bdce892418084c30c09a5a9f233
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 1378cbba03e9486ab0769162fe9bb457
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# b31f0d3a27e34d27877cc038dc6ce4fc
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# f8ee996d643144a8bbc070e886f9bc93
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# a2416b2928314fb3a69bc3ff0c7ada3a
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# e74dee58cedc4dd3aba51596083652f6
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 623f6c8d1239492a912af3a6f8d33f84
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# c03854aa3bb24f36957f1fa510461ab3
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# 98185cf5c5e44b0ba5fcfdead13c221e
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# 641903ecda5a4b4b8a3bd237b05a6477
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:121
# 9c2a5eeb8ad3497cbc779cb9e1cce0b8
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# d02bd875272a4fefb3fb8081cc76e666
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# 93ebfb01ce244eb389bbac426be44ce4
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 710d66a8b28d4af29435b93e4b68c55b
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# a9a5b74edba84f168d916e5662626e9b
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# cea2a1991db9487b83c37ad8e1c7de7e
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# 325b5429276e4cb687bc98803ff5396d
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# 76dd188458a943fb819c1c10f12287af
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# f092b0c397204960901b0917e294c039
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# c05a5e4e20d84da1b2ac6cc5a0d050df
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# 8cb3dc58b61b47c2b6e9bf0a919f3405
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# 8ab264eca5d842f3b8776aac3979de74
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# f628cf1479ba41c6977dc444524f5540
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# f3a0328e490445e592a757b9bb355c09
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# 671a033ac1f5460494cddaed818d9478
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# 6fe6517edb404d678487fd9cde109faf
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# a9678b33646140b68c3fe87f1c4e9e92
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 87fe75b9199849b78cfddee39a95a155
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 3d1ea72f4b1a4490a4625ff65f909a59
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# 88b6fe16977245b5bf38f8036c696f42
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# 5be1abfa98fd45df8df39c0d684e3db5
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# aca96d7cad7e4244961aa40eaa907459
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 8f01be14f2a44e2fafc531375cda9b13
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# cb22a6c0a9744062bcc7c3acfd560ef9
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 884f855694c5425a98b55b29364dd667
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# e20d7ebe4d81431c98950ba281e4cdb2
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# 8ca3cfcd22fe4697a21993f4f208540b
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# f80ad383a51a436883b9bb4aa4c7b679
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 4b025df3fd284662ac134fd0fdee249b
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# e3695bedb1d34620bcf12cef691ed19d
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# 3ab5869317ec41429394ba98408a2e03
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# 5605bf169be143a183bf05a2bcc595d8
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# 3942bf980ff84005afa1f0724e108371
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# bfb3cccbbcef45c0a964cb5b39a40357
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 02906ac176764772b612c506ff97185e
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# 68e48e3380204ad3a46e403681529286
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# ae49eb97c7934ccfb0934ffc43ab79f9
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 71412106bd674ccca68fe206389127b0
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# 6328209639c54515abddfc253bab789a
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 5d4f47d3772b4092aa1e71e855394117
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# 94c59ab1f30943be8481f65cd9537492
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 0c4c25e5e4f5451cb9eef468e949c866
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# 7ad1def672e341769068f4aeec18d18c
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# 379dd2b647234d88a9ee5a4af08d44a2
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# f231ffb8810344c4884fd9c7ad84d774
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# 013a7b734af742309f22a82b974eaea7
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# c4c044b2a5274ebab2b5b61914f3758d
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# de1278a551e1469e934e0c25b0a23cc6
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# 7c5292b85695422a8bd50b6ef8d7c554
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# 5b81130d9e5240788420944547a3c9d9
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# 2e7892b396c0453f80ef8e0b0c9811b0
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:13
# c1d4e432fa9a43b09a431a01af2d2828
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:15
# 180ed1098a9347dbaf9309a00bc86e52
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:210
# b0296e4a3eb24becb0e60273dfd65ab0
msgid "Before other Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# fb0d6676ec92400e9a8d6ba884039ffe
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:7
# f3f8d98b2e534ba6a9d841be20b02cdb
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:9
# a223218711d9431bbbbfd02c1ac82dee
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 66574c9ee5f74344b207de696b0afc4d
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:21
# b91503684bcb4fe791d4a723db5401a5
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:23
# da4ce0a20fc34c8e8aba5a4edc6e746a
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:35
# a5318bd6aae64e29913f96e32b0a3789
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:214
# eeab17b2b82e407dad3a96b071fd5279
msgid "After Collection is Built"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_end.rst:5
# 1cf6017f6c8b49d6a7197a6df3238a83
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:219
# 58d10a4c1ac14869bb96c2c150a41c92
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 59b423a101be4ea6ad905b3e50531004
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:223
# 892a69a7a57a4e578203cd5b5c8660df
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 451756305040438399727c529006a89d
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# e2ae150bc5024ca8a6061bb91787c2e0
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 27d888b9b358482986f7a5c4b49da8d1
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# c44b96ad1fda4a3bac7f4133010df81e
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# fe898405edd043a2a08c39bdf24deab8
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 9fea1dbc196f4810b9e439c08fdf60c3
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 398d7474bce844f9ad6145e5371364f2
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 284ef00d340a493fbf73c318ce475458
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 9c8ab31bbd3f4a3588e88dc6c17f89fa
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 42af762a51d94b4988e580a7feb02b12
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 44586bdef74e4caca4e1b8c883a4ace7
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 59ba381fca4746b49d229b15be5acf4a
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 9be81d1b10f0486eab84984fb8f09340
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 274c19b0b0da464c810e278b50b2e5dc
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# cbcc4716ef72474ebe62a229f8e000b0
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 7c33e7fef2ba403691200f7afeeb66dd
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 56b9f4094e3d4a2baee4a664e5ff036a
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 3f8a280eed1c40caa52846d094788db4
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 07b0ac31c2fd4eb681a5c802a92a334b
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# a2afbd0259be48b9a6b2a100a5a49b69
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 61bdec9c2fa147eea4709bcca81b0492
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 591a55d868584bbbae1c9f8676983e04
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 72436ed68a8144febdab6a9207c946b9
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# e06a18513c59445cba49fa2c12f0c6ba
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# a744aa90f8bf4fba814c1d340eeb03b0
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 1487c96e393b44d4b18f8bed48fbe847
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# d3a3240ef55c408ba15298b84547b2a0
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 4415440b3f6549e8a2e447fd767821bf
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


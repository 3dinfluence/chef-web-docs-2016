# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-06 00:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# bd3cc8ada8a34e69aa6cef5a9de41daf
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# 9007e07b75c9423d84f9c78075594520
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 8b79851c50984ecf90a664171cbf50b2
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 993e4b7152ac4b1da1eea978895b84cd
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# a4176c3e733e4483a7b93b0fc6ae9a60
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 64c5108e3d21408f9e67a49bd91f3b9e
# 0326b4eff2c645eaa37c4dd9487f9680
# 049a85ca18084d6697da1b98dd7d8f71
# 5fa8975e6588401184a777dc2a43e741
# a6231288e20d4899989a9c1ecee51814
# 53cbec80f9f2473bb0f27e0670052fe1
# 160833dbb4e04e9db87bb1118372b6b3
# 5b47a77d6d0e4d048860195f40b1288d
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 29e0288ab9b34a37a499eb5516249fc7
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# a7b18b2271f447d3b4ca31d7cb9aa3a4
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:124
#: ../source/resource_common.rst:176
#: ../source/resource_common.rst:196
# 12819527a9934f4d81e4ba80ba8d1625
# 24c67c0ab84a43a79dc4ad9c2da5fc85
# 55391db906ff4da2a4bd1e58084b1a2b
# e068c466bda6449097c44e2b9137aad0
# 87fa891fc90049b6ab7177e4def7cd8b
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 2f2fde05a0e2441f89e5380ec5506235
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# d3b70e405186478987f7d2eb4f619b66
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# 145eaf546a97456c84a0b0e516833062
# 404a085ea9d243c5b23ffc613cc5d19f
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# c1b8360427664ed7984446e7c252f13c
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 9feb1b0cfba344a9adaa6bd184938e87
# 13372e3dea3548308f38746c5d525718
msgid "Attribute"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# f7b4a6a280dd41a2bc88dfec86885c2d
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# dd204491d835475399e8bc09f250e66d
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# cbf8f40c286f4290a2f60ef091798ddc
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# e0afe507ce9048359361e28dcce86030
msgid "Optional. |provider resource_attribute|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# e8a5f9752c584103a1707fc12edc6dad
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# d10834f7e6684baf9f3c265b791a827b
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 200070df044b45008cf2b23ffdb66d7b
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# f72a17036ebf448783fdca438be81de7
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# 9dceca29ef1a45c0a8480b66599d7f84
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# fbb3fee1aa68471292e6e84fd717dfe6
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# 5f56ef35f5a9470790346e15573df79a
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 75378b58d2f54531a3cc6ee15e5e0fae
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# 88f538e22e3f48c39dfd6d4295033ae3
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# 7d6ee03c5ad84c7ca6e1c996316777e4
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# 6db7ae6a821b4a09a1e9ed25a32e8eea
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# ba0d9acef1e74afaab7c7f7b3fe2e411
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# 0d5144671d704f3b88fdc685b316a120
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 0fe0341130d343679909f99618841920
msgid "The following attributes can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 761066c87ffa431d8a002e2ab307a076
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# e2235cc479ae48c0820a0af684008e7e
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# ca3f8c09251e47949c257203036f3594
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 6376d0c542cf4a618eba13d2e082b2b3
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:82
# cd3fa0b157f54109af6c2f92927c9f28
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# 65085f47e50f45b9ab17fa5393233931
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 131620490f894741854dc24defdb4445
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 17001be08dbe4d53b0bb103cef859676
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# f667377dc3e64c478a88f73fe492fe42
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 59e180e5179b4df487bd591a2e720ecd
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# c5914d47e7e24e2a82846352e4ce7ab2
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# 20b40213f1d8470682fcbb813dcee828
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# f84f391fbda94ec0976cfffff28ca04d
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# a10371807e114bbea919543c872d04d3
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 6db65431ac594fd191b547f1f2d8f7d5
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 0c800d840f3d4fe2bafbfe0f4094f361
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# b5d67b9915a2432382c20fb0561beaa0
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# 069e5a3aa6b44d7aa700ab44daba45f6
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# b16765b3d52748b28b82bb91acfbd27d
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# 0e1f9451051d4998be6ca3bbffffd9cb
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and then |ruby| code to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# 3b209588f01246f4883e10da660451b4
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# ae4c00d311bd4b14944b3aafed12610e
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:95
# 164519519ab24fbba85a3a5dccd9f819
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 4199507e2e0f4bcbbde136f8191033a6
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# adaa881c1aec48439e0745319dbebbf4
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# 88baed74d5bd42ac8e505e6caee4792e
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# 6dbd99c9064440c6be20564c4bb45540
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../source/resource_common.rst:100
# 92f04a0bb9754f8a978e06d0c561f579
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# cfab6306647146e6b7f9c1928dcf2816
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# 3a613553294e45838420039afc9312ac
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# dcb42811bca14173b5e1249a662f33fa
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:108
# 4a72e383ab0340f895fba4f16fe6022f
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# 7f0961d42fb84b02ac43ea5290386256
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# 137ccb819d374884bfdcd590c6f028ae
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# c967b36a2cdb452b9b6251e7a57771c2
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# 37b6685b7b51414aa41da6f0a71a27dd
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 55c8972ef7634d759d365e094d301ddf
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:112
# b927d444d9c441e7bbfea8b56bf75ae7
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# 201e16aaa6f44a1bb76bbff915ddb157
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 0ff70b3a191843a1bd437d349b4fbae0
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 8ab81b47c0e54f72ab64b18064904b4c
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 4eee678d9bea49cda0be999c36b22617
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 506f90c3bb694cba9dad056d5096dce5
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# eb34c07512a74ebbbab7d09d1f0e9f1b
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:116
# 5bb3d6ece6f54b0d988d2e652d7bb994
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# 2681ecd6cc4649ca89fe8be20724f9af
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# bf6b621b50fa4ac196a5378a3de1eae5
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# f11567e26b9842488841fba09a411ff3
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# bd211723493c4ba38eca9a5b1f93f0c9
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# 1e09cefd4afd424abc035740d5e9f752
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# d303b98dc26344c59668240c86872b6b
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:120
# ee8846d84795442f83a803514442e19b
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 8e59d4138b004989a261c0d57462e89c
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:125
# 24d1a56cb0364997bf614bc7bd891087
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:127
# 92cb295d867e420e93ca6166033b1f46
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:131
# 095c526c3d624c4d8a70e75839cc9f5b
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 9973b0061b3341cf8431554935695126
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 3c8a38b494e04fa2afd694c375221df8
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:135
# b88bb72855cc4b06af0e9d367c25b80d
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:139
# 608f4a29979743509e724b89688dda7e
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:143
# 7a7dc2739c71483f81a24728f961b46f
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 36035ed66400437e9237509d6f5fca04
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 1d1edfaa6980415a87c55ec7248d596b
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:147
# 98a2d301cd224c3181660d56a1c4506d
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:151
# 1a44e651e4364337b7d484b899532b4b
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:155
# e66e6717ae134624b01dc21595ef02f1
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# c1efc8cfa2564b238c95f0276fbb7060
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:159
# 0e70fa64e3a4468ca4d0173c89f8f067
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 084723657afb4d1fb2504da9929c7a6d
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 72e85d0552b54da4b24dd19d38725cad
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:163
# c2ea382645404214934d92fc084db3c1
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# c4911bf8756444ec9a7c69b61eae0096
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# fcf31cd9f1ba46a69e58a1fee886f052
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:167
# 43452ca2a074433ea9e9fbd165434b6f
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:172
# 1fd788e8098b4713b2bcc724ad9e9e52
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# 625a17ffb71f41578f33b8aac1f665e3
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:177
# 3c5ae61518104f5d9988c4d8348580c6
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:179
# 13060c254f9e4c7d80643991f5e92e7c
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 47689f5d9365487a910e161630242dca
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:183
# 408c7f938ff84fb2b20e5137a426b0ef
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# c5c13000430f4ea78394c0e6ab238800
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 367483f3a2fd4497b4a14a73b0b23af6
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:187
# 3353598a406e481fa3cd1a1efe7fad40
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# a8bc1eb8901a4d21b760b197968974de
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:192
# 1ea2d52da6fb41629f3b34bfd57f1300
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# e8f5f091b4f047b4b2d57587bcf2654f
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 1e35284b910e4c02bda009bdea8278e9
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 24f6f39476ad4b4dac1760525f27381a
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 8d62b2cf01f6484984831a6fcd50ba18
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:201
# ec5516d0162547939a5665988050de2c
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 9277d389a8c9441c9ba443e16af0e0fb
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 069aeec42abd4ae7b436aab66d278d5c
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# dbe0aaba908e470bbf202247d820a77b
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# f3ca62996c724af4a666eae4c675c62f
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 6803f33774504805a980906daf62bf7f
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 8057c392663d430e8925414f1d98adf1
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# b5047c6fbe844b7bacfc33df116bad42
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:205
# 9afce9e8747448099a0fad1aa1c87b4d
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# af89288914264abe9e9e1aca9681b731
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# ec0cbfc80050460e8c32d672357bc7bb
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 119b7e6751ec4fe9bbda184cf7657321
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# b10295f7e0174edc9d1018945508c4e8
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 2b26e039c9154f4e809ff02b9752c8f1
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 538a12c336954e97858cbdd8f4424336
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# f2088459545645b986e6489db90cf215
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:209
# aba019a20d8a49319621ce0c94765195
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# e3268c4ae7ce4805852b970f7f1a483b
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:214
# 41059b81973a471a8497dd848483b41b
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 176d466f822c4ef6b929605624ab1731
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:218
# 11eddd03b22b4323b5bf4f40d8faab14
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# 3613d298a32f4911a72ca712917313aa
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# e426b7fb2d0444d88831aa59012ce1fd
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 28b73df5d11c42d1a3fb620547efd7b6
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# 6678cc5c8af2489e88b31757e58b0970
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 2feaaff79570469f82b538f5c432b63f
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# b2844ab1a8ad485a971a7dac1d94207b
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# 3555bc1d090541b296deeabbab84dc5e
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# 076e037866784a1fb291fa94dfc61553
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# e54bf70de41d4859976dfaa4f83a5b09
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 45e91942eaa54c9aaa077f9a0a3f5142
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# e6e78fb7eaf84a4196551fedce505edd
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 5811a4a3971c48068eeb8fb7110928b6
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# a21689aa47644cb7bd6236af203c34f1
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# e517bfbb2c31490ba776c8b5708ec37b
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:42
# b3abeee532ae433a8b17d1db6bcdab17
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:43
# c7bb684fc7c54f9ea925517017b97aae
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:44
# acd05ac9995a478ca7317e9adcc804d9
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:45
# ae856eadb54349809640104f4aac44d0
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:222
# c9b925533d884d73ac5a7667d97c562c
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# efca66de6d2441bdb0d9015f95c5aa6b
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 1d671fa69aee45e98329a4fe8cef144a
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# ff48157c79884218afa96f3fbc3255db
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# 626a880abab54b1e97667c70141baf3d
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# a7f083b7d7a444b4b795b01d606793da
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 648a0c4a3b56468bbd2a7e216350ceb8
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# 3114b83337c345ca896e64445c18d9e2
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


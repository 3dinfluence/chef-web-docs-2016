# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-13 21:44-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# d824f57f4d4349069ffc353eaead7b23
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 7af682b9173d4ce99e7e58d51cd90f32
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# abd2d99e2e1e46d38924299b5bde5c53
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# a255304565424bce9e6070c96d1776eb
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# 0453382321464576af3381620b9f4673
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 9ee4218e104b45aebf6c74cb182b675e
# ca73989f29e44f7fb582d67c9aadb731
# 028c0f8d9aaf4941bf61210586a7b621
# 03a285d5f99e4bec945a7e155b116304
# 51df885194b947b7b0aea55e576fd968
# b57c6dc7d21f43b5b443de8018c851d9
# 5f5519b5bbea41ebb69dde52496eb56b
# 107159dbd7644dce96a7a9fe39968742
# 2080df33cd58456c8fce117847e6e3a4
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# 47b9c2a70bbf4edeb03b6773846e741e
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# a03f977f160e49e588bba4b58761527b
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# 85c4cbf051a24032a592233d1aeb8e11
# 34072c849f3b42b28b2c05ade082e0aa
# f8f489ddd3cc4c3ba2c0da448e7bb5b3
# f50147415cb944e7b5e03ce379453aaf
# 8456484e98f747618d55a929efdf019c
# 008a3307081f4de0b86d708eb18fba40
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# 7edde3b78dee4b94a78a85c2ac348d89
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# c10a8282618047a6bf99c7ee04becea1
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# bf22dfee5e804c96a8b7931353a414fe
# 1585b162eee44071bd99b7f74fb92b48
# 0e210a2377084cc98f6f4b4ed944e8b0
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# a26aeebe35314e0fa722eedfa29f896b
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 992dc89811364ffd854a573811765e7a
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# e64e28282a1249fd8d9661ab9295e2fe
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# 0870b3dcf9d943b1ab530c9f4439b361
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# 286283de85e847419130e04d6cf079b5
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# a089dfd122ce422988b49133cc52e943
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# e70faa7ed9b34c348aff1239ff40c688
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 94249e96305440f78079d910f8cc329f
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# 80261cdd76644473a23974d3329fc5bd
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# cc01256b8c9443c388dd70a959c5c185
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# 1acc1f26542249fe9ee3138fbce28c57
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# 4e23c112cba04841892c0cebf5dff450
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# 61ceee56d10a4eb1ad8bf75923338b82
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# 9d18bc9778e942c2b6835d0772555c57
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# c6e918d6ebd44d89a5388f8edce9780a
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 27aa2b9a2d06449e96d8e58e065e751b
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# 500eb47e70d0468cae39924bb186c941
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# a19df015b363406ba76bf7ad0b3dfb8a
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# 6a656f9bd3a04434b71a87111ef55a0c
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# e9f54877bfe2457b9e8088e9f8acf664
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# 826f9f1cd4c14ea4831836fd3fa64770
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 462a2a65540845bda060d1bd8f6d9ee9
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# 439068f459004b7b939852e76fe381f3
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 94bdce99274d499bb11d798ac04c2525
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# 8c77a40754a547d58e5a8d30eaefd649
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# 3103f21c92cb441390d721913eef5fba
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 290ecc23d084473c8feaa95f62462857
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# d7811f15be17477394e4ad24f2d5c6dd
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# 39d3f40b5f614cc797e75461773120e1
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# b65fa44aad0b480a8e652267f6c6b6da
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# c5572813bc17449b915053a52bf9451f
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 1a6e8b8f36ac45f2a660c7dff46b9a51
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 6874f39c60c340a59098f202abbc2e1b
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# b01181bee5b1497680f1267c08e86708
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# e977fcbc5c2c4a4897c169e65cced8fc
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# 25ecfd14b7a145eb930d401ded3782f4
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# f9de6086dc2d49c78a72264ca1b75f24
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 908be18be3d94c98932c2db1d4fb32d6
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# 981a7613ec874ff7820ff82713da1be9
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# e041929b62054bf192551e9e54ab990c
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# ac3ba6137b79451fba0d4269b1f03a03
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# 0026e75273bc47dcb38b301b663dc5b3
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# 59d5ae15c8e64d4bb79cc10d35acfa1e
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# a49cca453b9748afa41a8d6c9d015521
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# 7e414f4b24b24b6c8581d183f7598a59
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# 85d942a19a344c559c17d880dec2baa0
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# fdfb21eca74946bf95ff4bd933cc0b70
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# 309f241e4dcb4901be279bf4919e22ca
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# a9260ddaa0ba4eeba52327e03de62375
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# 9d3ac55f7d0f408f804f0df4611fda23
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 36c5d777aec24c02af617b79dd0a96f5
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# 91be663779a4480aa32c598f63647787
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# 53f1593650b44dd8b159ac919a2f7b0b
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# 738eb3f6017243588ea30528583375a1
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# 31f7dffc2e6141d38b119b3954a96924
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 65a94065648648f7ac8180ded853b708
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# f19ac45ec480419f8c962790cea62bd6
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# bc07acb778624e1c858b6052314da6f4
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# 95f04b44c0784c369830cb66b0cfbf79
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 479e3de22c0045308d8bf0bb82c750b3
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# 4da72a0709724cafa122c31b6d2b16c9
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# 95457070d52845d8b45c7a224f3c58c8
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:5
# d3e334b5d04646ca879633e9613391f0
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:11
# 3ca98df4617947bca15fb04038175554
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:13
# cbeeb786a3424c118b9fabe94397ef03
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:14
# d1f1ba9f186b461faf67a92b589ba364
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:15
# 462c721ba8ee462a93c3f51cfd8f1f87
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:16
# fcb7d3cb519e483bbbefb11ac7686096
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:17
# 4c3f7cba05d44fe29e8a442e9ad7ab82
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:18
# 0cebd2a592064e5a8a6d04b452dd6acb
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:19
# b7974f283b08460eacd689d310a16ff7
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:20
# 1b919da4494d4faa8c0ec62601e72988
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:21
# dd87a7c001c84ed8acbe4c2b79afda35
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:22
# 882c9793b1e241abb100d5c8690dee16
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:23
# 3168f9ac2e48456895469de594f16a54
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:24
# c67874f67c7341bbbd8b231eadc72fab
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:25
# 5c4675f089b64faf83c839f3ce108d58
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:26
# 61aeea40cd3e47eea2a22b998d6523b2
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:27
# e166b883fc2547feac8b69c7901a44d8
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes.rst:28
# f776d430d88240218de592df38c33219
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:223
# dea3146782594aea96d78f04cd119e09
# 446caf068e1944918323707385eccf3d
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:5
# 46a976dfd7bf47219131ef9def15f0f1
msgid "The ``guard_interpreter`` attribute is set to ``:default`` by default. When the ``guard_interpreter`` attribute is set to ``:default``, attributes ``not_if`` or ``only_if`` guard statements **do not inherit** attributes that are defined by the |resource script|-based resource in which the ``not_if`` or ``only_if`` guard statement is defined."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:7
# b6a374b8ba3c4e6bbf4d829a355d2e05
msgid "For example, the ``not_if`` guard statement in the following resource example **does not inherit** the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:17
# 6dd8699582fe4a22bfcf0841ff7b8740
msgid "and requires adding the ``environment`` attribute to the ``not_if`` guard statement so that it may use the ``JAVA_HOME`` path as part of its evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:27
# 5a101a0d946e4e0090841da89efb84e2
msgid "To inherit attributes, add the ``guard_attribute`` attribute to the resource block and set it to the appropriate value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:29
# 9a268e66c0be48ae81df740f0057553b
msgid "``:bash`` for |resource script_bash|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:30
# 1c5625b26b414170822d9cebfb432352
msgid "``:batch`` for |resource batch|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:31
# d48b3117f1bf46fbbe603d30106ead3e
msgid "``:csh`` for |resource script_csh|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:32
# afe6ca13b24c46a5afeaa8c975b1ce80
msgid "``:perl`` for |resource script_perl|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:33
# 0a2d929ed1c648739261f5a642cb789e
msgid "``:powershell_script`` for |resource powershell_script|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:34
# b603469a860742eebc7a76d5a8236345
msgid "``:python`` for |resource script_python|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:35
# ce82c029786b41458906e36e6d09cbca
msgid "``:ruby`` for |resource script_ruby|"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:37
# f71da6fbd46d4873adba7d753b601320
msgid "For example, using the same example as from above, but this time adding the ``guard_interpreter`` attribute and setting it to ``:bash``:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_11-16_guard_interpreter_attributes_inherit.rst:48
# 5906b087dd4949669e496c333df558d9
msgid "The ``not_if`` statement now inherits the ``environment`` attribute and will use the ``JAVA_HOME`` path as part of its evaluation."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# ffc53b38646d49c3a25a950e341e7221
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# 7d9d532b3766479782de485665fcd384
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# e8c0b2dff4774c349bbd3932618d8db3
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# c021323b89c347e3aec6335eefcac28f
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# d8cdc6b6049c4f8e8598f77482a123c2
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# 085284ea819b49beb1b04ef0d73d9787
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# fce76ea42af04efc9263d229aa4167ec
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# b0b07270ed9c4868aa10294952f49faf
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 49173beb9ae14d49ae2e63d110d65d30
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# d5deab1a6b3f41a4802b7100e9115faf
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 52128b48e8a7410c91aa9a8c4d1109d1
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# 132d5c94c75e4aa3bd98a003179a590b
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# ffb8e41e2289418baf36406ad1ee8aeb
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# 9a38ba85a07843a98a5072a7e1f01825
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:17
# b196b220521e437a9b78bda16f39e860
msgid "Notifications are processed during the execution phase of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:121
# cee6d62cd3ee490082034c9a56db7504
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# dddcbb5ba52947e29e70a954afa54392
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# 6178f9f638884cc688a7f21286391f62
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 659f34278e83481d85c27be90940472c
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# a5dfeb3caf464410bd2007246ed36221
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# ba163e440a9247739119d4fc74e37c17
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# 1dee2c6f8e5e491884fdcf66a00017a6
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# 82297a5bbc4c4c889bc90aeeaa950ca0
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# c76f806846534db0b85af2e4c670b811
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# b4f63e6d120b483ba9b300807879777e
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# dc97e7f305254ab9a851fc9d0a292bec
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# d2b7999eae1c48a48f5ecabe927e4b29
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 3b68e0aed7ef490c955821e2518d670f
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 7760f618a22844e98758ee5a27091eac
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# f37b33e3a1124e64896887206734cd44
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# 57214045d5a848dab8a6e5f3409c6821
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# c2639fd535b14e8192e8f89b1720144e
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 0accb102d2ac4c78ab81d72f6dab6829
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# f57df4be806c4c83b3fc3c59a3dfd73e
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# 1aae650eeb604fdfa1ae2e12c688ba6f
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# 911f7b5ae02a48f7baf5997fe39ab71e
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# ba3a6008e1da45a1b1d714fc9098e625
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 9dd360c1940e4691b294ba7a37273987
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# d58294c1af124b8aa340d33b8d34bed0
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# aed19b7f394b4798bc7bfb82bb8e7791
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# ee7f5b0380e840f29fa86f20e7bd79cb
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# 2b6846201a6b4829b6b90214849beaab
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 0c0722e41f7e4dd38979a7420f58932c
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 78c787b9860f46b9a60372e63e5fb74c
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# 2780d6cc07de4c9d816594e6e435de14
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# d8155f106eb745519c9e2d84ed98b332
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# 1d05337b0e2a43b49409c07a7a98cb08
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# 581037a80fe74314918abc5db0348b41
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# 445faaa664394fc7b5c005deae8ecfb8
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# ff952a05bfd84e41bcae6b0f7249dbd5
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# bc73427160ce4377848e29a5bb35619c
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# a0b99c87ec71427095c40d6f2a90b5ac
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 58e09289f8d54f27b8818c28869b36cd
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# 058dae32bd694018afbf52b6db4c0b9b
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# d06e27dabd1248e7a6f1e5d1464c44a7
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# afa423c2455142fbafbf8d2b33ebcd4a
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 1e410bd26cdf496fb05ce6599859607d
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# 63eb9a23f8ed42ee91a4cb97c8a7b80f
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# 2e76da91acd54d43b65a77391bb44905
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# 2b83072263ef455ebf4b1de1570f62fb
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# ef39a5f509ca442ca1c01e43d6fe1943
msgid "Run in Compile Phase"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# 5774706cfed74440bd5950a58a7366e1
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# 8d5776b1f00745b1ba6aa8d1185c7d16
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# 318b5d9427304a82a662ddeea9c25cf4
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and performs the necessary steps to complete the action. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# 4a861f5d6924425f8705b20bcabd82d9
msgid "Typically, actions are processed during the execution phase of the |chef client| run. However, sometimes it is necessary to run an action during the compile phase. For example, a resource can be configured to install a package during the compile phase to ensure that application is available to other resources during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# cd52dc9d9bf04e328276f133d8d44c70
msgid "Use the |resource chef_gem| resource to install |gems| that are needed by the |chef client| during the execution phase."
msgstr ""

#: ../source/resource_common.rst:210
# 133a45ea9b1546dd8e6b42febdb84d70
msgid "run_action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# 902ecf47e137431fac1c4652a861a8ef
msgid "Use ``.run_action(:some_action)`` at the end of a resource block to run the specified action during the compile phase. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:13
# 3162f9c0e7514808bbac7c9e82d56483
msgid "where ``action`` is set to ``:nothing`` to ensure the ``run_action`` is run during the compile phase and not later during the execution phase."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:15
# dfad8e0d049b4eb3ab05cfa9681dbccd
msgid "The following examples show when (and when not) to use ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:17
# 0a5092beb827403ab6f1d43ff41f3975
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 744ae85b27224065808cba890ef16c1e
msgid "Sometimes it is necessary to ensure that an operating system's package cache is up to date before installing packages. For example, on |debian| or |ubuntu| systems, the |apt| cache should be updated:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:36
# fe1bec8d92854e7d9939f869502134fc
msgid "where ``e.run_action(:run)`` tells the |chef client| to run the ``apt-get update`` command during the compile phase. This example can be found in the ``default.rb`` recipe of the `apt cookbook <https://github.com/opscode-cookbooks/apt>`_ that is maintained by |company_name|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:38
# 1d00709e6cce40eea10220bb04bebcbd
msgid "**Use the chef_gem resource for Ruby gems**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:40
# 51d49cc8af10425fb141c8d894d94ac1
msgid "A very common use case us to install a |gem| during the compile phase so that it will be available to the |chef client| during the execution phase. This is why the |resource chef_gem| exists. For example, this:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:48
# 04696e8b74a047beb9b61e45ae05ae84
msgid "is effectively the same as"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:57
# 27447559306641fe823d52b0203c5062
msgid "but without needing to define a ``run_action``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:59
# 4cae9f59588f46c18f412ecde78cd1cf
msgid "**Notifications will not work**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:61
# b9fa6a25378b4fcb80b1cf614a1d55d0
msgid "Resources that are executed during the compile phase cannot notify other resources. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:73
# 80bf388bbef44ddd8f72530e17d7cde0
msgid "A better approach in this type of situation is to install the package before the resource collection is built to ensure that it is available to other resources later on."
msgstr ""

#: ../source/resource_common.rst:215
# 9ea60eb7eb8149da88de2f9c22686a8c
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 958cc0474c484c6db4c95d6d1bc1ca55
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:219
# 10d235be2070450a9576df455376df34
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 6a7592742e1a466fb7326c3b8f81c9d7
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# b53fda73e9c6402bbf174baf46ecf94f
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 25bdbcc360344d3f9cc7897f86af91b3
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 841931ca19ab40dd9f14ba0a1081756a
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 7cebf7efed9a4e19b693e6be2db64ba1
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# bbef230d48a24840a0ea1402b3907a38
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# dde2951099724974ae9cfa8f58ef75b6
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 84dc8eb2d8bf4dff8981706be717ea26
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 32d79ed0a71649249c9ad8369ed08f84
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# eb65d3c56c5343478b0b3ceb2bdb34d4
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 246f0f93d76a40b7b52c25065c51dc16
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 4017a49d3ce845bba7c4c2207e2b0fd1
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 271efae208cc48059966076fe124ce93
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# fc916e1b36cd44789fb1732632d4fc3e
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 3d520c70eb034566b652389917221838
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 0c1da93efe7e464ea4f333395c7693d4
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 9c8ebf1cdc29495992a04288d64076cd
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 6bf47f51e5f6438abad7fa4b2a42388f
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# edb7fefa84174e39a37f6e301a80a47f
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 22eb0224e79d43f19f8ef778beb15334
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# bcaab63863da4c09b103362e502290a6
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 941a1e524c094bfaa87309a9dbee28cd
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# f33c0cdcdbce4511896e7f8837c741b5
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 15f24f22d84c4d5a87a3237345f70ca1
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 5fff4551d97b4f82afc5a00980ef0ebd
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 64e43842e84f466e92930fc981c4dd7a
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 9804b9c3c9c04c55bbac03778d0ef95e
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 43f16ed0ebba46ae9b03dd49182713c2
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 12:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 8df5c13363ad42abb9bd1df409fe75cd
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# 583213516c1f488ba02ebe1b08e7bf9d
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# 2f11c6ff3ae64ffc8c3181955af55fa4
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 7b76594e478248e782c5d4bf63acf2f4
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# 0ce40411594843f4b3aeca27d5ddf272
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 301237fab6484f7bbcb83b7133a1e4ad
# d2d6168c059441558423e36093c8fa63
# fc19124a35534baf8844f0d1eddfcee3
# d9910c70d30d40ffa8eeb6fd2f9f881a
# c4d802afc96f4f61a12024c8c73b31c5
# 692a01bcfb6a43c38b3bde4c61ece761
# d8c1fefcfe6443528c61560a5478c9e6
# a224ed4f4c7544a58fc50783a63bc2e9
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# 2b2a066d19cd45698332eb996a1a765a
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 59140f32bb654925bdeced36c53b83c4
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:136
#: ../source/resource_common.rst:188
#: ../source/resource_common.rst:208
# a4980b6570024715b06ca1b6ca694686
# 971f0de8c98941c09d4aef11ef4b83b9
# 8bcb44223a1e45808308187a6c556d91
# 9c044990ee53411daf306010819b18cc
# b8dd61ea944f4c2696ffd6c34fa3959b
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# 0622211422844d8cb495adb7734f4ed6
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# 40c70ed71d514242a1cfef2cda32f78e
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# 594f4d3c331d46568d7a6c816bd22406
# b2f96ba382d8438897d18229b7061984
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 0a10e34cb7d141c7a34a70ce9a8e41b2
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
# ce105240e95c4c9a83d8b6dae9526d65
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# 9e373f3b584a4e65915e537e3a848365
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# 164c8bb82e5a40698e3455f066fa2600
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# f3f40c3570704d6e9bf52d8521948e02
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# 88757e83f5fb47cc912129f33f08b984
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# c319e0bcb3374fdf9a17cacd2081a851
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# ad3c27669f3b4f05bc4f5f144a44b421
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 2ab8b025c6464e7ab092ae5eccc1b6a3
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 1bebb1d50f71451cadaa62602bc3467b
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# c8e7d66614a54e0fb8cddc98e6773240
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 4fd872d3f1cb4130b33af7e3a2f3f931
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# d65e802a2c41476da3f6a876cb0c9c57
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 86d807e1df8f4780a2fdccda68d4179c
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# 81f86c08a01546889732a614fc9115b9
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# 06e72906bee942d791425d5cc2d9bed6
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# e787d0c281a4410ea9cb55ad2c0a3050
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# db82388515fe4dd8a9ea81d8b9f310c3
msgid "Guards"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:5
# 285a6ddb080840208639f7ecf1176ee2
msgid "A guard can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard is then used to tell the |chef client| if it should continue executing a resource. A guard accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:7
# 27c0d57bceb3434a96cabd76fe8f525b
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:8
# 55c722f1a6664913b0c5703f9ae8cad3
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the the guard is applied. If the block returns ``false``, the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:10
# e08015c097924b5db524906c3453066a
msgid "A guard is useful for ensuring that a resource is idempotent by allowing a resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# e40d58031ecf46a282bedb49325b279e
msgid "The following guards can be used to define a condition to be evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# b72fde2b19c347bb907e3caf7b0cbf9c
msgid "Guard"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 7902d2e70d71489b8b49ca87e6a763bd
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# dbee836bcf494e0fbd62652223ac0ad9
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# c2d0bda4cdfb4b44956d4f24790ee78a
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 94facdf03f8d4865947a960df1e20343
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:82
# e9852f5ec2014658b48d46373b5dbe0a
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# f6117971beb34024807d54968458c713
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# 61eec57bda334d31a841bd3b8887fbf1
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 33d2f79fd6ff40d6b54d2e269e7b3a3c
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# da38b6f8a8344267bb6ee43f3d009211
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# df4e6e08a15448fd837406d0b604f0ae
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# 602b71bf4e3b456fba0ae271d4ab736d
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# aa4d3c0e6fbe4d76912d05c408fc9155
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# 675913fb56b64a9c815632e3f689da77
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# 76cbe0ca78df41efb0561752066cbb25
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 4c090e2774a945ea862b5218577172d0
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 639aafc4b6f343f985b8bf4502b3e355
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 35d99f0dd6594b67afd5297e5388bdc0
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# 3362293753c148ccaff29b183b496f63
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:88
# b534392a07d14ce3955451c1348e750a
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 0ac935923ad449c680ad0afb1dac7db8
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:92
# 96be4437e8fa495f9ab03516920a6483
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# f2a761699ab144058f20f0ede036f24b
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:96
# ffae8bbbde4943b8abe8e5fdcef7bc18
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 2520de43daa04631a461cafcaa8c56a0
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:100
# e9cd0377840847d4ac627cde7159d0d8
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# 74cca40d239d45febe6d7c0138615678
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:105
# 421faeb06ef64caeb7908a3ff8b47840
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:107
# 58e02c70bce74e908cb6fe4a635128d1
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 36b311256c7f4127841615e8c95c19f0
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:111
# 7bd0c592355343d1baedb8afb3773066
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# c3dd05c924e64ab5a3c523a7aa677675
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:115
# 6b5801f48c88442fbb92f454553f4d64
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 60e786e8080245e5bd3db3f6d800d192
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:120
# fde8850e5e3543da9363f27068a8679e
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# 1eb251bb29944e06b70e6cbc4cd55a2b
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# cf5e5755937f483598fc63df197e029f
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 7c42f97fa8a44f6e9ad410fccbf37df4
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# e96bdca4980540938283d80c3d46576a
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 9a1a367776f2439c95f46200d6a7767e
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:124
# f3c6f77036354f64a0ae2e13a2664d8a
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# 1c1c73b657c64a45bb0f20f8f6c0007d
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# e8ef21ff19d149399a412bb27aca92e1
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 3b5b1e4c123e43748e40117938d713b5
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 4ae54939d05848a398a3cbe6d79fbb14
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# b397e46ec74f4ba4b5a9c3c8ef70f8f8
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 1fcac434f64d432281d9820f16d4d0d8
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:128
# dc2ef5ad6f264242949a85b7f14abb5f
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# 033a9b1a03ae466db32a839969c48193
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# fff4daaea3b8464eb5a088356ab0ebc7
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# 4ca76cc1a3994aaf9fefb8c8b058a9cb
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 552d582bc85b45a1b63772bfa48fd213
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# 239a44169e3d4469b5f63ea7595cf7bf
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# 8cc3e82477c941d3baf05cc0344a09e9
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:132
# 8522a26cc02043ef82151c535ae17fa6
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# 9fa482078c3540dcbb1c738074677ee6
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:137
# 2e769663083a4968886aabb8d21e90cc
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:139
# 5e0061e4705a4698b2b87e361a2b0cf2
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:143
# 301114a3bb424c03b6ef82726331c6e9
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 43a96c72c03f4181bfca30410640c088
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 8f84427e129b4f89a80a42df91a688b1
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:147
# 5a5eb38dcb56487fa49b40590e36f8a8
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:151
# f44fd96969934d738cb56915d0236f85
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:155
# f022b8769f944c76a2e4ceba287db8c4
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# ef2c6976ba0c430d931d8d754189efa6
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# b22e00de27e74f95a8f0be6e96409922
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:159
# 612c01051aa547c89d200e691d13dfcc
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:163
# d0eb8c939ea041e0b3d573add9c30b33
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:167
# 21a78c2c69904fbc8833b261a1909a3b
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 0426cd2e2373410c978963ca91726c65
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:171
# 77a2fe51453d4f368b0951f192e47980
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 6d51db78284242ab8a4b1e35dcf8739b
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 232b9e77c28044c2a2c76803ba43842e
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:175
# 23211a55124f4cf2a860c0a8489b03e6
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 67d0974a39464ea29c48f37de02a52fe
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 5e7c45856e4c42c5926e5f6ed056456e
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:179
# 82b65284ec3f4454a4370fcb4698654a
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:184
# a60c888a58a344bb8184cb2aa0313842
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# 91d2a93bc59c4141a0e2569052f8ac45
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:189
# 2f137380b45f441892c9a32a10ae98dd
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:191
# 507fe656b7534ebe81050ab192895e9a
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 236aef80dd0e4664a9df172e455b3bb6
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:195
# e6b6a85887964b69bbd99225890b79ce
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 077aec12192c4662ac42168d164fe885
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 1172396636f546bca9225b35333acd31
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:199
# e93168a6a5b847898ab4c16c87d13450
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 5a632d20000e4ba78f4170c4d5c6dd26
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:204
# 64ea685088bf49fcaee60b34acc2de0b
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# 3ce399bfa1074e41b2f3d5edd6c7d8e2
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# d1b25c530e89417bacba3f1425d17076
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# 72ba8f36e06e4bb8bf6f97c4e28345dd
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# d807a97cf69c4530b48e429394cf0a74
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:213
# e7fff2c7ec8a40a98bdd47c667cace41
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 703b353dffe1447bb6f6546b1ce32829
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# a370f60662f44b7babd41147a0ca8323
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# 0efdc45c53c8480eb1dfc682e09c62c0
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 2cb8d52b358f470cb3584ab543a12903
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 66d99490beed45a3a01a9b442e33315d
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 3a8076e2a14745929dbe844cb57b59a4
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# cd1da0a77f02413e8f8db369b707d1d1
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:217
# 2294c3a92a004c39a467573d6c0f1bf0
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# 1a3aae6af685497e85558f6913962645
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 5c64d8a75c64450295e8f7dc03df5cb9
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# c67a711b411b47a4bccdc84b3d75d508
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# 9f85c477c34e456a94ef224305737460
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 8907e313c191454493750ef7cbc45e54
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# c7da47da4e744bc88a0f702b10ac7ea6
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# db87981dc5ea41fd8aa5a96f5cf93f10
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:221
# c9f77fe8f2a841619264da8022a709fd
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 5718144e016841a0908f807cc21d5a49
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:226
# 87c17d16c904453e81a34cf4e54e807c
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 40bbdaf8b0414d5fbabca45c17c8875a
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:230
# c99892ed1a27436b9646a2c11c690e66
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# abdbfda37c6d47048560e7c0184a22e8
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 8cf3d35a631b476fa26e9628d3615be0
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 5d3dac93d6a249c6bbcf4092b43ed175
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# 89e4bc24ffe54bb9b0cad51f62250992
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 8c894b6b501a4249a798fded55935632
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# 7a7fd8dcf4814ec89f312deca37af4da
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# fe7d95d5d23044c2add5e5e6a02d48ba
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# 5c70c42f759d4ea1b5698368ae4cc38c
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# 9dd454060fb44a13aa753e3e898b6768
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 8507fb80aa7749fb93c7f020a0834526
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# f32fa6c1f10e4bd6b49a8126dcce280e
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 96bef91ef52a4480ae109b6ff7fbc2fa
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# dc395ca12a7046c9b1ad860ddcba724b
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# 8b7d05581f9c4755883679b01c606fb9
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:49
# ceef01e5a4dd4fa6ba231dacbef0f2fe
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:51
# 61cbcb647fe14ccd891139b91501af9e
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:52
# 394662da897d4477b20119262e6ac7cc
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:53
# caf0caaeb8e148a9b5684443aeae2a6d
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:54
# c71045398c6a4d12be5c5186fcbc28c5
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:234
# 73e5c8f06f004caba68fdd52edb0b5c9
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# 8b4946a95bfc44cea1ed8abc716635b1
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 32207dcb2d504d46afc04d93753c6346
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# 570c03ae8d0c46f0aaf88dd8172e42f5
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# c71fcbd204ae47958bbdad8bb8098e3c
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# 4fa4a25d455a412b9be948783f05dd06
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 886e6f61f9a24cee9b351bd00a09e246
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# 06f5f0641b70442b910fd7412bb326d1
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


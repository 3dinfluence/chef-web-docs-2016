# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-03-23 21:03-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# 69b3eb6a49364d6fb5e0ed614c29ea5a
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 44e97c6af0e0449a9b21ce8e20029252
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# 77812d51339f44a59a814e4fd4f304cf
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 9a9b7eecd7d14eafae884420e1202b66
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# bec7daab3c7049929132701224023627
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 479cbcc81b224c8a85e9189ca4df7549
# f6222ee1b2674f229a435ea87de34b24
# fe87dba10b884edb9c5cca0927644978
# be3dca416eb6450d9e50c703f770ed5a
# 533d3803a2d74cbb8b0f06f5cf600fdb
# e604c9838b714d9f9545dccdbd644fc1
# 90825b91ceb84a4b882852dcb4a98dcb
# 706a066c1a0641c480f7b8ddfa3ba3db
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# b4d0dc43ab88463f970a62e43e91cd30
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# d11d54cc57e34b16a6eaab0a2540092f
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:113
#: ../source/resource_common.rst:165
#: ../source/resource_common.rst:185
# 40da9e9ca9cd45c9adc70a455b092a54
# 70f7ee0fceb445b2998b930cd50659de
# 81097507716d41b8b810f075b9562348
# 021722b8dac7455dbaa7073e25efbb86
# 3d3d911201f8423fa85eff162b8bc1a2
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# dc3c896a331644b4a2f01ef10b239f5b
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# 671ffc4561264c9a8ca7ed811a782f70
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
# 5a44b2a3264a4036ae100d630ac64d3f
# 88945d875a7a47b0b968480ec554408b
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 4a86c52452d54eb2969aba32708c99c1
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
# de384fc258514269a6800fd257750721
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# 40c30110d7b64a739f4f2a853b5033f9
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# e2f793732a6243b1995b5a5fa0a0fe1a
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# b8eded6e9e0c46c4a7453f002198c749
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# de3ccd5455f24b01a1397550c9490fe4
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# fdbaa63203094c15a62b9c824226c71f
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# 45bafda094324f09b5b74b1c52f86a91
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# ae634b7f7ae3474394de25c2005eea3c
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 907c4e7b1604497da7564823ee53b552
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# b2dc48ee4f224bafa76e3762b548928e
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 7648eefe3e444b02bb59f9c6f15c8a5c
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# c80cb15e24c549ffb4b9aefa6f209dbe
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 25e6daf8815246369de118fd4bce34e3
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# c2bc50c3584a4d8aa9dea57da3a6f9e7
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# 849d1e32123b44bcb9a884bad4b36831
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# 76034a8c57bb41d6a5c6ff958b429cd8
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# 9c57fdf06ba04911be1b43edf64a8c6a
msgid "Guards"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:5
# 5ccb052d71254d118c554d7895fefc3e
msgid "A guard can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard is then used to tell the |chef client| if it should continue executing a resource. A guard accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:7
# 6ff7318dd2604f52a39890a2189a3bcc
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:8
# 825cb5f1566441019835b535983a269d
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the the guard is applied. If the block returns ``false``, the guard is not applied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:10
# 271e9c20926547d4b160192c047edf8d
msgid "A guard is useful for ensuring that a resource is idempotent by allowing a resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_execute_resource.rst:5
# b9a6e74e49cc4ff4b408f6968cee9e30
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# 72d86bd30c964923844826eb6fff1fc1
msgid "The following guards can be used to define a condition to be evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# e391adc8a03d44eeb2327747e6b9df90
msgid "Guard"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 9fb292a13dfb4e5f99ebfffc65e9eb2b
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# 70d89717f6fc493f99401be571dcb9b8
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# ff202906a6924634944f345abe1e432f
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 50a9a6b0fbae4085ba1ed8de1412ecbd
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# a1df7bd241ca4074aafe159a66179f21
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# e078fe20c9324170a4bfe03a3c66ce4b
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# dacf7a319f2c465d9b58e84499593162
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 1f6b1d2d7f99428ca417951331d90125
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# c34023cdc683460889a8ee0920524488
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 382c101e511647dba8e3eac1999a978d
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# ce0822c6a95f4f1086256fe35ea0f605
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# e8a3d37305c744aa9cd2b542b0557623
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# 90802229f67747f69b7caf38c7bc69dd
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# 2de318bbda4e4b33ab6e0b7942e687ed
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# f9758d9b79494105a444665a2b4d0889
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 41a3af943df54088bba3c2d18c5ce763
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 39c173d09e1d4bbfae702a9c4a9267e5
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# f0458da502e04c78b520b7cae2ffe892
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# 7594089f9a1e4f869f3d02e5d88dbf70
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 0a95ab05adff44918ce6e82d3cb332ee
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# 4a0a0d4c67df4c809761bca04948c1e9
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# 1a3803eb71c2492b85a73a1aec175016
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# 7da9d8b6552046c69a09611e8469bf07
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 544ed5d4e6194a5085b2d2eea802117a
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# e2241a0912f84177824013cd7f3871f1
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# 30ad8a3ab3174f628d221ea35957e36a
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# 008c1b78dd7a4cceaf02e7cf3c7e72e2
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# 271801a2604147149406aff15a7856cc
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# edb950f4782f423f8eaa9fb4f3c836f4
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# f0fbb4682eb0484b83218fe066c64c25
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# f17de5cdd5c14e6db0e6a97d3c013fa2
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# e65f08574b1d419c8bc8f80713b13527
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 5f7c10c226224e68a42a967d8f8634c3
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# 8cbe8d204c6842d8a16e6010c3e18510
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# a618adb921e046b6b2e5ba69004ea4f4
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# a65f6f0abe2b4cfda5f762037f185be8
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 69783bbe8e614ed880f47be68cd1812f
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# 909599eafc494cbcabe232a34a1d8061
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 2c7eb459a27748c4993835782f5b48e7
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:101
# efd024eb46cb42b796590d89c3779c66
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# e44ccb9ab74f488fa363a5ec5af30555
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 30b7aae5402740a5a9d6d376937ef979
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 1ef2d05572b94a708b3802cd8ff7d4e3
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 399cc40042134faea0b9eed3ac41b59b
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# 4aece828c0dc4d7fbdf9c61f013d082b
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 27cc06161f6b48809e93333df6b17044
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:105
# 3821ac6964cd4598b2164eb958dcccca
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# b1deaa5895e34fed93b12cdd71841302
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# 560104c90dbc4745897b94222204d8dd
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# c5933510a030432b9082e0f7469fae7f
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 365c17c9b0524494a58342861910f03b
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# b7c15b0e220c48de81ed591f2207edeb
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# cde23219a4ba467397c45dfc8f37d1b3
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:109
# 775d3bd7beb54e47a10ba9d053331ad3
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# aec41a84f4c74ca090465e3d548bbcc8
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:114
# 2e9a0b64c7a540b590203738d786d836
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:116
# 2a2fde64e0734c6abec97450449420e3
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:120
# 960db60a63114541baa4345e1d371281
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# a2c06f8af644484a830dd02fab74b515
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# ed7ee9523f954eda84f2c4560cb1f0f4
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:124
# 54c6376887744398a4b19fbb0d37d762
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:128
# 88c40bf24c9a4ff7b3a8449e278ad162
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:132
# 5b5566ced96d4e1490dc0c8661dd67f9
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 5488a5ba44ad49f3b3e4e2a7c16c1b98
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 30a8eb591d7749f1b360c535746b431e
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:136
# c7d5c378ebc9492b8137d25ed68474e2
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:140
# 443ab0a330d24a5ba1bdbbb712745b39
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:144
# d219f92671d748dcaa2ece20e43ed49c
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 78e56f7f3795499b807454557e4eca94
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:148
# e118bb702e6f4c23950f6fe34efb8181
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 4d2abcfef8ff45569cfbdbc4a7aa9d95
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 4e8a74acc5be4e2eaf96adecc869396b
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:152
# 450f6bf9a13944b588e94b3b2a44a212
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# cb00b1a699434e2b97dbae624999f7ab
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 6e86dfbf9fd34c76aaac5fe639428cb5
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:156
# cdc9906b596d47908564e19c0f2475bb
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:161
# 36527b264ff842e1bc58090faa123f88
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# a507846e00d74edab5d556248b424d3a
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:166
# fff3a13d3aa04411961f3c16aa8de2ca
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:168
# bdc5849878594afeadbd867363622c81
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# d5032a82566d46c49b8fe5e78aa3c3e4
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:172
# f0e266ddf59344de8d1fe47b3e6c2ac2
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 2ca35512e03e4e4dac2c2eaec13c7cd4
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 2a1edd524517408aaff8fa58b1076d9f
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:176
# a67b668ab3eb494182e3ecd4400feb4e
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 6812221544a94ab98b14cdb926f5a666
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:181
# f74f46cbafef4fbfbb4b1fba8ee4810b
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# 645fe111d2054530ab82998dc6469a37
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 87827c22334b481e8f81d30c4f11fcaf
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# ea72a9be45cb4595831ecf0a3bdcd6f7
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 9a46f24c5bab48ee9646afffe27b677a
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:190
# 2a60a12e9b504e8a901f50fae885d484
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 458ffe1f4379426ca5560cb7771e3ba2
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 2f57fc3f228e4cff95d9991488ff6947
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# 533ce467cfbc4d7ca2db53d1b48449f4
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 91f530c313384d42a31e5136555827c0
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 57fe5f3ff6c944279270996e378fc7d9
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 7b8171c9c5d84e91b829f588f5586c0f
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# ac2db7a77e3e4d3389d398fdadeccc10
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:194
# 0a0e320cecf94e888cbd1b22f29d0e05
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# b0b4bcce6deb49779eb0af3f597033cc
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# b2feb624192c404888814dba573d69eb
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# 994f49aae1e14ab8a0b7b7ef352df88f
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# 8ab06b1319b44aea9b2cbab22e63394b
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 111c50faf1504da8b7057326bb64f3ec
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 895c6f13e50e4cadbeff01cd41acb21e
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# df2018d8b4894717a42e38d9ef672f68
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:198
# e745ce4e4cd749149237ec36ccd7dd56
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# b12094cdc69842f09dc3e3f1fd89c092
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:203
# 4024030dd12b4e1b90621333873c5bd2
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# 8facf52077f84ad59a85f7a7ad40abb0
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:207
# 1b67a560fea84962aea82dc9a9920509
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# ff4c27492fa74df394d257a2c635cbb9
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 462ba18ecb0f4b4eb5b37ea428ed3554
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# 7b1817daf33b4792ba95889f38089e13
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# b4c8dae8d94c4a6f9af95d63d3e3198d
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 918cb6bcfabd4925996c32083aace8da
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# 28e81900047a4563952ac8c3ccf118c9
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# 325486cdcf9f40c1812efa6497ef7bfe
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# a0e1e418d9a34f82ab4d329feda8c53a
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# 68d71ce6460f44a99eedb8e2164981ca
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 37ebe2bc6a104b4587ec750af74d5cd0
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# e5e3aec3c2e54f44990b6f996f55c6c4
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# a494a6a92cb94401b6cf2a20c55ccbc4
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# d11cbebfffba4f25834188a0d8f28467
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# 8c679f496b4c4828b795b08b79297335
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:49
# c7724da4f28342b79d65176b68d6fc69
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:51
# 213810edf8284ff9b84c3876f983e9f8
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:52
# af4005198b814039947cbdf657d34dd5
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:53
# 0a94b7ee31694e9495c16792abee6f06
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:54
# 9232343a2d544bb4b4e099243fdf6801
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:211
# 808d12beaff340789ab1de707219f80f
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# 156a42b0ac5548f8932698b90a0fb383
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# 93ce3f00a9434caf92953f27b30ef4d2
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# cfbfcd7fcd0044b5889cfde7c397f978
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# a7e31626540849069968ed83f9b29fdd
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# 4aa9d794177744cdb5e93a70759f8dd9
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 3d028adbd4f04220b1b784e3cec42d55
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# b05a72afa5734ee287767c5a7a99a807
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 13:49\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:33
# 6372d8f7ebc94adca93364988c684f49
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:35
# 8fd66f919458483e84769238f9d424ef
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:38
# ce26df3e3c91404d99a60f223bdcb256
msgid "Actions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:4
# 3ec57e33360348689f09deb651233882
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:10
# 303cc80619ee40bda849751ce645d788
msgid "Action"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:11
#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:11
#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:21
# 95fe4e44726e4a91ba52c2f8efbf70b1
# b220fa4589b24ff486de0f5c7a6ed722
# d09fdbe4cfda48a59255a86e753ca7a7
# 0f395b4e5e8746b6b0714b4090a1c3c5
# f245d01f188249d2b296071a89823912
# 1dd233154e2948919868786a7e330127
# ae5633b7e6ba4eea8f92c8896afa8e03
# fe892309e70e4a82ae480b9f41a19bf8
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:12
# ea515f813f3d43458f4f238f6587f524
msgid "``:nothing``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_actions.rst:13
# 4ec3b0241c4b4caaa030946d3ca6bbe5
msgid "Use to do nothing. In the absence of another default action, ``nothing`` is the default. This action can be useful to specify a resource so that it can be notified of other actions."
msgstr ""

#: ../source/resource_common.rst:42
#: ../source/resource_common.rst:54
#: ../source/resource_common.rst:124
#: ../source/resource_common.rst:176
#: ../source/resource_common.rst:196
# 7d8c1edbfc96449283c6df1de1ac95f9
# 41ffb32c524d42f5a0743d035067574f
# beae2a0df944428b96b7dd03c6ddb01b
# 347b7ddbf5f64f5399191b82085675c9
# 5841955a85724e148149aea4519bd941
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:43
# ceb6a31c4395401fbc93050260d5bca2
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:45
# 2dcc788329b54ff8af1344f0a2c599ac
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:50
#: ../source/resource_common.rst:78
# f753849f63e648959b22cdfa3f53c63d
# 6688369f2501478e870f85a4ec409238
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:4
# 7dcf37f429c640a7a058b5f74a6434d9
msgid "The following parameters are common to every resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:10
#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:10
# 8c63ed98a2634f2f8017a0fa39d256c2
# ef7f4b79b4614dc2ad14212af6535096
msgid "Parameter"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:12
# 9fac883ee7874aa8ad269256479bbf01
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:13
# b0f9722e96b94229a67396126ccf0be0
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:14
# f5587bbab77346c68bc102db591d268f
msgid "``provider``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:15
# a72a16416a634bbc9b64fae1e9fd2ba2
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:16
# 4bfee1d5823f45b6af016b26d8eaecf7
msgid "``retries``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:17
# de5c080c920f4413baadb8bd4a6839c9
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:18
# 604f770b6bea41f788e165068b33cead
msgid "``retry_delay``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:19
# 23fb5177531f4bfc88bf2c87f1a91fb1
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:20
# f0c5e621b98d4fdbbc3a975ab76fc17c
msgid "``supports``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_attributes.rst:21
# 3f213681446b4455a8825f438283236c
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:55
# e1845129619346b98e0abc331a7b9509
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:57
# 5a4a41951b2341d5b9fc9e3d6acbffb8
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:61
# f42591d877754bebaffe039438c70e09
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:65
# f5265928279b4ae5b4c37fd749345568
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:69
# 59428f74b1e549799ac4639cea61202c
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:74
# 593a6e5704334de9b1933aba347284b6
msgid "Conditionals"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional.rst:4
# 7977a58f886044f7b95c1657dd3a31d9
msgid "A conditional execution can be used to put additional guards around certain resources so that they are only run when the condition is met. A conditional execution can be used with any resource. The most common reason for using a conditional execution is to ensure that the ``execute`` resource produces the same result every time. A conditional execution can be passed as a string or as a block. A strings is executed as a shell command and a block is |ruby| code. In both cases, the attribute is ``true`` when the command returns ``0``."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:4
# bf83940294bb4455bdb0fb581a1aee52
msgid "The following parameters can be used to define a conditional execution for a resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:12
# 870bb29f7e65415da193e424faa89e61
msgid "``not_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:13
# 42eab509ead440e2933f6945e21a5ab2
msgid "Indicates whether this resource should not be applied. If ``true``, this action should not be performed. If ``false``, this action should always be performed."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:14
# 31c7ebb5deb14cc7a97b35432b36c025
msgid "``only_if``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_attributes.rst:15
# 8ff330d9fcbd4db7a50d3ebc3ae75c9a
msgid "Indicates whether only this resource is applied. If ``true``, this action should always be performed. If ``false``, this action should never be performed."
msgstr ""

#: ../source/resource_common.rst:82
# 6a7cb76036844115863ddb280e22dc7e
msgid "Arguments"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:4
# 100b33f0d2f0491a9ef1151a3bb679f5
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` attributes:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:10
# e7501ca4b1354e4fafb442f6c637ee47
msgid "Argument"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:12
# 9297f58488a34cf7a515ad416c7cbbe8
msgid "``:user``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:13
# 96ed5769777b44bdb51d7051a1ff5913
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:19
# 17ab2f3b5c8a420abf78b5b608289ba5
msgid "``:group``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:20
# 46cec8e977554195af4e0664d87651b8
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:26
# 07ebf99b67e94694b1050ad97a51384e
msgid "``:environment``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:27
# a80f0575354747bfae6cd8d9015394cb
msgid "Use to specify a |hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:33
# cabdd3a27d7c440fb3539b36275b3c11
msgid "``:cwd``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:34
# 5469894910f24c3d868e87574f01a84e
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:40
# 74e311c6b5b1470586d8ed102c6ef76b
msgid "``:timeout``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_conditional_arguments.rst:41
# 933406cbf05d4bc486c5f1da9c94c989
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:86
# 66cf82051d0f4e2883551c0de272eab9
msgid "not_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_attribute_has_value.rst:4
# 3a4ad1d378e14947ae8f36e4c7dafd77
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby.rst:4
# 01246151d6d44cc58b8820a7db3c97c3
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and then |ruby| code to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_ruby_with_curly_braces.rst:4
# 428ab657292046deb1449552f514d988
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a |ruby| block (with curly braces) to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_not_if_string.rst:4
# bc5a46af848e47898fb82bc93426c956
msgid "The following example shows how to use the ``not_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:95
# b2d2efe3b40640c49b0e88a2973179f8
msgid "**Install a file from a remote location using bash**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:3
# 6de43ce237ea46999d466ce50bc3fd3f
msgid "The following is an example of how to install the ``foo123`` module for |nginx|. This module adds shell-style functionality to an |nginx| configuration file and does the following:"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:5
# 0e5a5bb331d34e52887985d2f796e222
msgid "Declares three variables"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:6
# 4a1603d431dd45c3a567033eb4019f34
msgid "Gets the |nginx| file from a remote location"
msgstr ""

#: ../../step_resource/step_resource_remote_file_install_with_bash.rst:7
# 39b5139adb4d45569e6eb0160620df96
msgid "Installs the file using |bash| to the path specified by the ``src_filepath`` variable"
msgstr ""

#: ../source/resource_common.rst:100
# ee73560a9d0b4fd69cc5c61f82825032
msgid "only_if Examples"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_attribute_has_value.rst:4
# b64fc563b2ee4e25a152be515de849cc
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using the presence of an attribute on the node to specify the condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_ruby.rst:4
# 079344976baf4dae8717e0cdb020dc72
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template, and then use |ruby| to specify a condition:"
msgstr ""

#: ../../step_resource/step_resource_template_add_file_only_if_string.rst:4
# 6f310aee14dd465fa8beacd5eab10427
msgid "The following example shows how to use the ``only_if`` condition to create a file based on a template and using a string to specify the condition:"
msgstr ""

#: ../source/resource_common.rst:108
# d7c10c90d3b94a729af23dca98fd9584
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:5
# 70dfb00f804f4897a7bfa336235fc601
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:11
# c1f534872f714ffbb61abccb724b8f83
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:13
# 5fc1ab9a7cb84ed595b195de7bfbd180
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:22
# d35ef3d17cda44d682a0cb3dffb50082
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources/includes_resource_common_lazy_evaluation.rst:31
# 2e30e2ab308441efa56509ba0838b474
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:112
# 1ea903114c114222b9555c1aa289af1f
msgid "Notifications"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:4
# 3af09acee7ad4a39b7aa3765ab034c9b
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:10
# 0147b04ba1144f6086993adc82e1485f
msgid "Notification"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:12
# 374f51c1967a4a35b2862d0f77ea7814
msgid "``notifies``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:13
# 149b197e1a444798a48e88c072fe56c7
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:14
# afe444f37d3648ef968a81dded50c74a
msgid "``subscribes``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications.rst:15
# 79bb8ee701f24b9b83e91e64fdc876eb
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:116
# ed36f75b500d4716aebc6be652dd692c
msgid "Notifications Timers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:4
# edc3a2065e594b008ad23f9da23b0e81
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:10
# 67c98660ba3f4046b6062d2c993487bf
msgid "Timer"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:12
# 7caf740772be43ea956eaacb10685345
msgid "``:delayed``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:13
# 55093e7ff6c6439b81ffc7be1b71a77b
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:14
# 9634cc56b9ab4bba84421f9de961581f
msgid "``:immediately``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_timers.rst:15
# a02c8d1a9926418da3005b39bd704f66
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:120
# 27ce4d913a6a4e8982fb4c78147c74fe
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_notifies.rst:4
# d54d057ac7d94a44b24e8c47a163ec14
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:125
# 5ba2ed3c873147079520fd4658bb336e
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:127
# 1892af45e31d43f185a927574d037f82
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:131
# 4df3830002e3491fb1a647b8dd1fc9a5
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# f8ec3fda6d504de9ac234e6a1050d1ba
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 31dd7b331fcd4137a4f62465edbf4662
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:135
# e411dd15236a40ecab42539d49a1f88a
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:139
# e4710c5e17d443c39973790c8c75e2f5
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:143
# 1426bc9373d94849bf9f0370f012ee02
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# 46b3c84b4b5f4b96a07ed83ff95d8d5f
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 897b2c768ecd4c199a1afefaaaccb415
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:147
# 18abf144999542c2a698ef9469d60309
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:151
# 079385a88f624a2486e3e31659e17e46
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:155
# b0c51fb5a10c432f89b9e67586bc1794
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 25ceb1dd2ac64e4491c46dcce489b50b
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:159
# 3b85d2b1c13e4713a97e9b879fa337eb
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 6de355cae9a0423e93bac4eca2ea1f1a
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named \"forward_ipv4\" that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# d3820ea56ca74cf7bd4a223d128fc143
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:163
# cd421e5c115242d593c26583c8c60de4
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# c442205ed81543f584281a7f446393a9
msgid "The following example shows how start a service named \"example_service\" and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 2848c827f0e04fb49cfd75de04670b8b
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:167
# 98e0ae1dbcea4c3f9614a3f4f430c3ef
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:172
# 01e1bb264abd439f8bdc67dc02eb87f5
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_notifications_syntax_subscribes.rst:4
# 1c69fccc40014f46aba4755c3044b934
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:177
# 2bcfac0239734a999448687fe05a0b1f
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:179
# cb03ed41028d46afa1ba9655f42ecc7b
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# cb71e66be6244e6ba90d17cb994e3632
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:183
# 378e35aac7cc42f8816801391fd9f729
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 1575b2b713ff4a59a50fd14ff57eb20e
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 90ba19a53c06415fbe4aedb166b19fab
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:187
# e47a641ae86647d599bdd74e332121c1
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# 7f29d489a5254276b2101291cf6c7fce
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:192
# 1eb160d789ef4295ab4cbdd2829ea8a5
msgid "Relative Paths"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:4
# 1704d101d9a142dc8e89761af25a30d2
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:10
# 5198c4e7a691495d86bb1acb52c60698
msgid "Relative Path"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:12
# e683b049ee1d42749f0c8150dc873f3a
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_relative_paths.rst:13
# 0e4198109cd0499e871be8320b4415c8
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:201
# 5fad7ada560a41b4b0d2f68e08291881
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:5
# 0358b97d2dce4114864aa160445f3f79
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:7
# 0284d3ce8572477eb1e7a9451d515af4
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:8
# 586cce2e30734bc88115d27d74f4068e
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:10
# 1ccaad767e4a42c893f9ee92d72eef33
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:12
# 64eed8c9a6ae4d3e969ecd46dbd4dc1b
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:13
# 1dec72c8404d44f1b18dce5042b27536
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile.rst:15
# 7e945b17ae974bb383578f656f70657c
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:205
# 16ee8ed6caad49609c0996b1e83b3c96
msgid "Before other Resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:5
# ec106e55b2c44a5a9d0db9ac7a70266c
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:7
# 0a995acaa36e4c13ba74cc073125804c
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:9
# bed8ff594506485b8dea22bbde928af6
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:19
# ea895c4bed634a6baca8ac62431415dd
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:21
# 7827894ccba44d17a9ac0d4a84382d1e
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:23
# 78e6ba926d7648cea7865557f0bb92e4
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_begin.rst:35
# 43fb53874b8245ee91ae7aa2fad53773
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:209
# 3e63494d7a2541a0aa8f12614f20d685
msgid "After Collection is Built"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_compile_end.rst:5
# 167291db6d024041acfa07f94c32574a
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:214
# 6314667dc6084e9a90fa82a6107969a0
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security.rst:4
# f47579564ec9406093a9293adc214bd1
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:218
# 46d448802ed24d2cb0f52e1912434303
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:4
# e1528adc15904f6cbbbacae790ccbd00
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:10
# 307627e5f6794f38a8926013a1b14f4b
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:12
# df12e53b2a2f4e96818c9a9d6714cc80
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, ``:modify``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:13
# 06cb4977210e4913a2f4a8ae08ad7045
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:14
# 99fd949c661a41748b298fec820cff03
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:20
# 94ba50c44ed54d3e97beab32933c20ea
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:22
# f87f9307cd724e01a7ca03c2e5aecf1f
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:23
# 36d1c718927140cea26160d46836a42e
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:24
# e4c35ee20b57445bbd56d325da76031e
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:25
# 5280f655ed4c4f029ca424e03a0fb59f
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:26
# 785a3c6b08534d3b956504077ee2dc60
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:27
# 185bddaee5b4448d86eec55ea16ba736
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:29
# 0129d5562cdc47aab4612499b29a116d
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:40
# 27f1125a1f83493497fdaf482846370a
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:42
# d36536215977498ab1822c6ec5f95bab
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:43
# 1ec573a8717743d59b12e6a3f07c302c
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:44
# bdc646d296484a09b8e0caa16e7010c9
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_acl.rst:45
# 86ad9918c30848d8a6addccb3090da4a
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common.rst:222
# abb941c1c74445af81d31a1e862ea45d
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:4
# f5c1e5dc0cc14008ac5dcb6d91f37ef6
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:6
# a11ba806628c435995b990db8495e4f3
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:15
# e1ed07357da34f3cbaabddd9e798c63d
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:24
# dbda6f93cd5e4d7eb759f712d0e55387
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:26
# 693dff7f53434f098a02c68fb6f83c7e
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:36
# 50ad09656c8041e49c15bc7bfc285a79
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_common_windows_security_inherits.rst:44
# 377d7b0795ec4744be900788a46e758f
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


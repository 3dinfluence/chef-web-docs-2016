# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-08 14:52-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common.rst:8
# e600b6a619c44e6e8ffd9115f74cb0f1
msgid "Common Functionality"
msgstr ""

#: ../source/resource_common.rst:10
# 5cd5037801784ffd901a668c3dae1da1
msgid "All resources (and lightweight resources) share a set of common actions, attributes, conditional executions, notifications, and relative path options."
msgstr ""

#: ../source/resource_common.rst:13
# 0779e463b96046619255ae8ac8eb72a1
msgid "Actions"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:4
# 4d69ef49dd014d7bb6a7ad886df9421b
msgid "The following actions are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:10
# 3ad70b60c06c4087aa7f059fa7d4f73c
msgid "Action"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:11
#: ../../includes_resources_common/includes_resources_common_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:11
#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:12
#: ../../includes_resources_common/includes_resources_common_notifications.rst:11
#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:11
#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# a1a3c78186bd455daae19d74e5a995fc
# 5579920df3d6480a803e740f35201195
# 17d20bd3089f445495585d9f55d5dfd6
# 322d30e6d5964444a371fa6a01591d2b
# abfb9f550f844675beff4cd4e61f489e
# e4a0b889eb7441309b26a3a39bc7ce2f
# 0247e3cfa16346b79dc17bab2c8afde3
# 8a1383ef40194b6b8d0373476ebb59b8
# 3a7e9344fc5649fbacd15f684bf1d4fe
msgid "Description"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:12
# 9586b0aafbab41e8b08e449127e8b887
msgid "``:nothing``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_actions.rst:13
# c750c9ee13c9446ca5629a39b14fd955
msgid "Use to define a resource that does nothing. This action is often used to define a resource that is later notified by other resources."
msgstr ""

#: ../source/resource_common.rst:17
#: ../source/resource_common.rst:29
#: ../source/resource_common.rst:109
#: ../source/resource_common.rst:129
#: ../source/resource_common.rst:181
#: ../source/resource_common.rst:201
# db63447bebb14e7b906e989cd34126ac
# 7d30d297e25a49e590f1e4ca6df02964
# e5c63d00fcaf47109ae40ac169863986
# b81e53cff58c49fe874c977c40eceb2b
# fe4e5c4beb8d43c5a0237784eefc1360
# a45fb7dac2bb4e2c82da7e5b32bb4836
msgid "Examples"
msgstr ""

#: ../source/resource_common.rst:18
# 53433e45ceab458b95e6d9a281968508
msgid "The following examples show how to use common actions in a recipe."
msgstr ""

#: ../source/resource_common.rst:20
# fa285f697c0a47948844102b6ff1bfdd
msgid "**Use the :nothing action**"
msgstr ""

#: ../source/resource_common.rst:25
#: ../source/resource_common.rst:55
#: ../source/resource_common.rst:101
# 4125aaa2848d498dae95fd061906871f
# ba44b1798e7344c48b9656e747bb6ed5
# a90c0ea553be40ad98a8b38d7d27ad84
msgid "Attributes"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:4
# b211b8b87f4740cdbf5d3ab67b2f701f
msgid "The following attributes are common to every resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:10
# 21ed46ef18104a86a75a084394b02a24
msgid "Parameter"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:12
# d25dc615000748f09a346ce3c21fdf9e
msgid "``ignore_failure``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:13
# dc57b9f11d7945ca8519ae7600672baa
msgid "|ignore_failure| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:14
# 6a41d7fd401a44ec9cd1b1f6ee0c9a38
msgid "``provider``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:15
# 89ffe5f76473444185eb7014c669ce18
msgid "Optional. The |chef client| will attempt to determine the correct provider during the |chef client| run, and then choose the best/correct provider based on configuration data collected at the start of the |chef client| run. In general, a specific provider does not need to be specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:16
# ec5a2730de4940c98141d11ce3fa3721
msgid "``retries``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:17
# 925a9b1e92274461ae041908fbf5b7ef
msgid "|retries| Default value: ``0``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:18
# d419c7720a1041febf8358371e512bf8
msgid "``retry_delay``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:19
# ca306eb81d02417286a7920005063c05
msgid "|retry_delay| Default value: ``2``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:20
# 1b74a40d90c5434caf5c65bd63f24dc3
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:21
# 5badbb175e16400abc2eb7bec8454125
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:22
# 078531f375d44cea8a84896f3949bb60
msgid "``supports``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_attributes.rst:23
# d65c9eecede44580826f55f58041bd13
msgid "Use to specify a hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider. This attribute is only used by a small number of providers, including ``User`` and ``Service``."
msgstr ""

#: ../source/resource_common.rst:30
# dcbb9729547f4d87a227cf17edbc77c4
msgid "The following examples show how to use common attributes in a recipe."
msgstr ""

#: ../source/resource_common.rst:32
# 228071b78fcd416e863e9c27b96aa4b2
msgid "**Use the ignore_failure common attribute**"
msgstr ""

#: ../source/resource_common.rst:36
# c884deed7a0c46328128ab29f20a3551
msgid "**Use the provider common attribute**"
msgstr ""

#: ../source/resource_common.rst:40
# 14f973e68c034757a352cbfa45c1b3d1
msgid "**Use the supports common attribute**"
msgstr ""

#: ../source/resource_common.rst:44
# f19122beff5646c3a309fca0cafcf71c
msgid "**Use the supports and providers common attributes**"
msgstr ""

#: ../source/resource_common.rst:49
# 410cde343cca46009b6dd7c16b977a17
msgid "Guards"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:5
# e0d791b9a7774cc6b44f356461af0e1b
msgid "A guard attribute can be used to evaluate the state of a node during the execution phase of the |chef client| run. Based on the results of this evaluation, a guard attribute is then used to tell the |chef client| if it should continue executing a resource. A guard attribute accepts either a string value or a |ruby| block value:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:7
# 1b504ddc7ea344ebb1aa6ea4706d5969
msgid "A string is executed as a shell command. If the command returns ``0``, the guard is applied. If the command returns any other value, then the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:8
# e5c9997311114452913f3cbdf307f5b8
msgid "A block is executed as |ruby| code that must return either ``true`` or ``false``. If the block returns ``true``, the guard attribute is applied. If the block returns ``false``, the guard attribute is not applied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards.rst:10
# 1b953b3e240547d6b2ec3d38d223d5fa
msgid "A guard attribute is useful for ensuring that a resource is idempotent by allowing that resource to test for the desired state as it is being executed, and then if the desired state is present, for the |chef client| to do nothing."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_execute_resource.rst:5
# cf48f9338101474a9119a35502fd3600
msgid "When using the ``not_if`` and ``only_if`` guards with the |resource execute| resource, the current working directory attribute (``cwd``) is **not** inherited from the resource. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:4
# a583413421384b948e1d2afa9a3aa785
msgid "The following attributes can be used to define a guard that is evaluated during the execution phase of the |chef client| run:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:10
# 8fd2bc22d2fb462499bc6e148386f11a
msgid "Guard"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:12
# fce6918723e54be3afa858c260f5896f
msgid "``not_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:13
# a5cf4629b0674c318dec928cd8c91ba9
msgid "Use to prevent a resource from executing when the condition returns ``true``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:14
# 5564bb650910487382b9e92c29225f5f
msgid "``only_if``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_attributes.rst:15
# 96e20294f907485bbd191e5da6f41d35
msgid "Use to allow a resource to execute only if the condition returns ``true``."
msgstr ""

#: ../source/resource_common.rst:59
# 86c40c46a555470a8af102c527e76f87
msgid "Arguments"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:4
# 5a4092f9757842afa85a51e209a36581
msgid "The following arguments can be used with the ``not_if`` or ``only_if`` guard attributes:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:10
# f65db016296c420c89ab6efedd611858
msgid "Argument"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:12
# bf856826f716457b9c263008d37ae7fa
msgid "``:user``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:13
# 1743d3349b754afcac8aa44b5159b3b8
msgid "Use to specify the user that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:19
# d3c9814c6bed4b6e8418d67bd164bf8b
msgid "``:group``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:20
# 2ec00e0d5d8143f9b66693e82ec686a6
msgid "Use to specify the group that a command will run as. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:26
# 805000eb3e5c4248bb6ce8a9ccf6aaa2
msgid "``:environment``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:27
# 27fca92e49a04c6e9d527f33d8210b27
msgid "Use to specify a |ruby hash| of environment variables to be set. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:33
# d0e95add68c34c2f99a3b25632d02ef1
msgid "``:cwd``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:34
# e25ac938a4f541e7a2b709babaa4da99
msgid "Use to set the current working directory before running a command. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:40
# b24ad3034fb34c53b09b98ab0903383a
msgid "``:timeout``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guards_arguments.rst:41
# b33697c025cf476f920d101de1a8d461
msgid "Use to set a timeout for a command. For example:"
msgstr ""

#: ../source/resource_common.rst:63
# aeb0b01a26ec48c8881f1a0fc9659f69
msgid "not_if Examples"
msgstr ""

#: ../source/resource_common.rst:65
# ed86da47ce324c0cb809792d9739eede
msgid "**Update if not already updated**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_do_not_update_if_already_updated.rst:4
# 11718c0812384afc8b27cb66dd104878
msgid "The following example shows how to use ``not_if`` to guard against running the ``apt-get-update`` command when a file already exists that is the same as the updated file:"
msgstr ""

#: ../source/resource_common.rst:69
# 3025cab577fe4eb985b9a6757270f323
msgid "**Ensure a node can resolve a host**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_ensure_node_can_resolve_host.rst:4
# a37a18da36fd4a6e810cebdd8da7868e
msgid "The following example shows how to use a custom block of |ruby| code to ensure that a node can resolve the host. If the node can resolve the host, the |chef client| will do nothing. If the node cannot resolve the host, the |chef client| will configure the host:"
msgstr ""

#: ../source/resource_common.rst:73
# 36c0ab6acda74619bfbe926bf87c2ba1
msgid "**Prevent installs on older versions**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_prevent_install_on_older_versions.rst:4
# 68abbbe7627c4759b60947a7c8a389ae
msgid "The following example shows how to use ``not_if`` to prevent |zeromq| from being installed when the node on which the install is to occur has a version of |redhat enterprise linux| that is older than version 6.0:"
msgstr ""

#: ../source/resource_common.rst:77
# 9fc2c31c51194b34a7c5f1e757480d91
msgid "**Set the administrator if not already set**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_notif_set_administrator_unless_already_set.rst:4
# 9a4ab477b64240e092f7044e60391e0d
msgid "The following example shows how to set the administrator for |nagios| on multiple nodes, except when the package already exists on a node:"
msgstr ""

#: ../source/resource_common.rst:82
# fae6c4bbbc3a4c3eaaef9dcfdf165d67
msgid "only_if Examples"
msgstr ""

#: ../source/resource_common.rst:84
# c63970cd4c3b4d4193812758b4e8d3b8
msgid "**Install packages only when necessary**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_certain_packages.rst:4
# 3dcb9fc0616244138c9daff5d45d0697
msgid "The following example shows how to use ``only_if`` with one (or more) cookbook attributes to ensure that packages are only installed when necessary. In this case, three attributes exist in the ``/attributes/default.rb`` file: ``use_openssl``, ``use_pcre``, and ``use_zlib``. Each of these attributes are defined as ``false`` by default. The ``only_if`` attributes are used to test for the presence of these packages on the target node before then asking the |chef client| to complete the process of installing these packages. If the packages are already present, the |chef client| will do nothing."
msgstr ""

#: ../source/resource_common.rst:88
# 3fc36e53a14a4fc1bb7385a55ee9ed96
msgid "**Remove a recipe if it belongs to a specific run-list**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_remove_recipe.rst:4
# 3615945547e540be88fcf0f485aa40b9
msgid "The following example shows how to use ``only_if`` to only remove a recipe named ``recipe[ntp::undo]``, but only when that recipe is part of the ``recipe[ntp::default]`` run-list:"
msgstr ""

#: ../source/resource_common.rst:92
# 6542a94066c540b39bf88a6ad058e1c2
msgid "**Re-register ASP.Net if it's already installed**"
msgstr ""

#: ../../step_recipe/step_recipe_guard_onlyif_reregister_aspdotnet.rst:4
# 4cbacec9c152454db763b57ab0eba07f
msgid "The following example shows how to use ``only_if`` to ensure that the |chef client| will attempt to register |microsoft aspdotnet| only if the executable is installed on the system, on both 32- and 64-bit systems:"
msgstr ""

#: ../source/resource_common.rst:97
# d7cb7c9cef2048bf8799132df1b6a047
msgid "Guard Interpreters"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter.rst:5
# a74f457185f14ea68d7caf5123a2c25f
msgid "Any resource that passes a string command may also specify the interpreter that will be used to evaluate that string command. This is done by using the ``guard_interpreter`` attribute to specify a |resource script|-based resource: |resource script_bash|, |resource script_csh|, |resource script_perl|, |resource powershell_script|, |resource script_python|, and |resource script_ruby|, plus the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:5
# 8efaab8778f3409ca346ccfd26b4a5cd
msgid "The ``guard_interpreter`` attribute may be set to any of the following values:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:11
# 2c0fc9029fc94c5ebc138b2008a3cdf9
msgid "Value"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:13
# faaa582083024619843c74a769c450f0
msgid "``:bash``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:14
# d5f913a764e540adbac89f2b062f6c04
msgid "Use to evaluate a string command using the |resource script_bash| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:15
# a6dc4f45733c4995ad6411245eaff58b
msgid "``:batch``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:16
# 36ae7a3abfe444c889aec0937a5872d9
msgid "Use to evaluate a string command using the |resource batch| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:17
# b22abf1e2ba04d098133ddef08f5dc74
msgid "``:csh``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:18
# 5fd97f6b37f64f7d9c97c24f9e47beb7
msgid "Use to evaluate a string command using the |resource script_csh| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:19
# 79e9b25730684d43bcb4da8b5d4f9a71
msgid "``:default``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:20
# 47c5a787fe8f4122b31901f903ecad53
msgid "Default. Use to execute the default interpreter as identified by the |chef client|."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:21
# fb5eb8fc31c744ebac337c6363fdeff6
msgid "``:perl``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:22
# 3e5582f7dfc6498da5268831ac44d9ff
msgid "Use to evaluate a string command using the |resource script_perl| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:23
# e5468d9dc14e40b183eac4f219a6f839
msgid "``:powershell_script``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:24
# 5894818a7cf140f09e2807d83f68cea0
msgid "Use to evaluate a string command using the |resource powershell_script| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:25
# a4de45011640456b9f8644cf7bd5b339
msgid "``:python``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:26
# 8c89b3ced20c46e0b8c933e4466b8e5b
msgid "Use to evaluate a string command using the |resource script_python| resource."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:27
# 2ddc162e05cf42f3b1c7e8f9fcf9601a
msgid "``:ruby``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes.rst:28
# 0fe5613eb7424dffa609364bc2b69d9d
msgid "Use to evaluate a string command using the |resource script_ruby| resource."
msgstr ""

#: ../source/resource_common.rst:105
#: ../source/resource_common.rst:227
# 4705232dedc044d5a7c81196f4a3afeb
# 816ab3974168472087351b140769a2e9
msgid "Inheritance"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:5
# b3b8abd1f6a9406aaa017ff4585ce0d9
msgid "All non-default interpreters will **not** inherit arguments that are available to guard attributes unless the ``guard_interpreter`` attribute is specified. For example, the following resource block will not inherit the ``environment`` attribute (and requires that the environment variable be specified within the ``not_if`` guard in addition to the resource block itself):"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_attributes_inherit.rst:15
# d6def32004544a56a777ebf76838196f
msgid "and the following resource block will inherit the ``environment`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_guard_interpreter_example_default.rst:5
# 728d8e294bdd4adb8da0134bd20ee6dd
msgid "For example, the following code block will ensure the command is evaluated using the default intepreter as identified by the |chef client|:"
msgstr ""

#: ../source/resource_common.rst:113
# 7f3e58083267402a82c4037ed9e0e80c
msgid "Lazy Attribute Evaluation"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:5
# cfa8c492fbfc4529a31c66babed4e95d
msgid "In some cases, the value for an attribute cannot be known until the execution phase of a |chef client| run. In this situation, using lazy evaluation of attribute values can be helpful. Instead of an attribute being assigned a value, it may instead be assigned a code block. The syntax for using lazy evaluation is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:11
# b9a0438d0746431d9985102555ed67f2
msgid "where ``lazy`` is used to tell the |chef client| to evaluate the contents of the code block later on in the resource evaluation process (instead of immediately) and ``{ code_block }`` is arbitrary |ruby| code that provides the value."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:13
# cc942fd5c71a4ad597332edbe5e82b1e
msgid "For example, a resource that is not doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:22
# fca4354e0f274ff8b64348fdeb7e9966
msgid "and a resource that is doing lazy evaluation:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_lazy_evaluation.rst:31
# 799011219b484e348d11816a6f268f8f
msgid "In the previous examples, the first resource uses the value ``/foo/bar`` and the second resource uses the value provided by the code block, as long as the contents of that code block are a valid resource attribute."
msgstr ""

#: ../source/resource_common.rst:117
# ad856ace50b64141a3fc14c41c09ceac
msgid "Notifications"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:4
# 03a6d55e5c9a4570a577aeb584cf49a0
msgid "The following notifications can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:10
# f4d75526b83641f98cc0bf1f2f0e1d2e
msgid "Notification"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:12
# 72dd19444a4a4cdc9741a758d281d6fc
msgid "``notifies``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:13
# 94a55b1bee45477893bac531033f443b
msgid "Use to notify another resource to take an action if this resource's state changes for any reason."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:14
# 672ae4eb3a1b4e10b285428c9658e1a0
msgid "``subscribes``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications.rst:15
# a5ed97e28f194a94988be347aa9ddfe1
msgid "Use to take action on this resource if another resource's state changes. This is similar to ``notifies``, but reversed."
msgstr ""

#: ../source/resource_common.rst:121
# ebc2072620b649628578f2de7f391edd
msgid "Notifications Timers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:4
# a312df80378e4d4396aaa86eb5dad2c8
msgid "The following timers can be used to define when a notification is triggered:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:10
# 65e099f3b9ca440599e6f9350bf7dde1
msgid "Timer"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:12
# 5f64e6d873884bf8b812e14362106bac
msgid "``:delayed``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:13
# f3f1b0db057a433480c584dc01f1d9b4
msgid "Use to specify that a notification should be queued up and then executed at the very end of a |chef client| run."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:14
# 39e647b48f30423f9368b40ac44efa87
msgid "``:immediately``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_timers.rst:15
# 67b70cd8c1d04111877647660f5dbb1b
msgid "Use to specify that a notification be run immediately."
msgstr ""

#: ../source/resource_common.rst:125
# 49a8e95dbbc84e97bf81ca428b4ffaaf
msgid "Notifies Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_notifies.rst:4
# 7a0bfa6e10d0492aa3d834cdfff0480e
msgid "The basic syntax of a ``notifies`` notification is:"
msgstr ""

#: ../source/resource_common.rst:130
# 0b0e0ba992e044d8a27bb476e73ac9a1
msgid "The following examples show how to use the ``notifies`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:132
# 0916b10b5e194237b9a2d2620c3535d3
msgid "**Delay notifications**"
msgstr ""

#: ../source/resource_common.rst:136
# be99b5c1999e421b9cb10d15b4ec2d29
msgid "**Notify immediately**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:3
# 8406e845265044f383781f33d3868e00
msgid "By default, notifications are ``:delayed``, that is they are queued up as they are triggered, and then executed at the very end of a |chef client| run. To run an action immediately, use ``:immediately``:"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_run_immediately.rst:12
# 88178ced2e3d449b99ea1b847e8df883
msgid "and then the |chef client| would immediately run the following:"
msgstr ""

#: ../source/resource_common.rst:140
# 655e41755917486ea46703a31b6c7ba7
msgid "**Enable a service after a restart or reload**"
msgstr ""

#: ../source/resource_common.rst:144
# b30150ad43f941859157bba7bd8fbc7b
msgid "**Notify multiple resources**"
msgstr ""

#: ../source/resource_common.rst:148
# 022bcc32b816462abecc43f1ea2c606e
msgid "**Notify in a specific order**"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:3
# d464816439da4087afbd838d1320f2d2
msgid "To notify multiple resources, and then have these resources run in a certain order, do something like the following:"
msgstr ""

#: ../../step_resource/step_resource_execute_notifies_specific_order.rst:27
# 5a07b85d4e14491faaa189de3a06b4c6
msgid "where the sequencing will be in the same order as the resources are listed in the recipe: ``execute 'foo'``, ``template 'baz'``, ``execute [restart_baz]``, ``package 'bar'``, and ``execute 'final'``."
msgstr ""

#: ../source/resource_common.rst:152
# ae3e3d5ef7974faa978fb0353feb31da
msgid "**Reload a service**"
msgstr ""

#: ../source/resource_common.rst:156
# 933c9095440d47fc8010ae94558fd02e
msgid "**Restart a service when a template is modified**"
msgstr ""

#: ../source/resource_common.rst:160
# 9f28784699944d38a4e77b3b829401ec
msgid "**Send notifications to multiple resources**"
msgstr ""

#: ../../step_resource/step_resource_template_notifies_send_notifications_to_multiple_resources.rst:3
# 12d44c3c63f940b0a3903919e208f995
msgid "To send notifications to multiple resources, just use multiple attributes. Multiple attributes will get sent to the notified resources in the order specified."
msgstr ""

#: ../source/resource_common.rst:164
# f14a6213221d4d33b8f1b84996b68a7a
msgid "**Execute a command using a template**"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:4
# 7bebfc31bdc84fe4a631951e56239c0a
msgid "The following example shows how to set up IPv4 packet forwarding using the |resource execute| resource to run a command named ``forward_ipv4`` that uses a template defined by the |resource template| resource:"
msgstr ""

#: ../../step_resource/step_resource_execute_command_from_template.rst:18
# 5021dbc4b38e4bff911449d2a7be15a7
msgid "where the ``command`` attribute for the |resource execute| resource contains the command that is to be run and the ``source`` attribute for the |resource template| resource specifies which template to use. The ``notifies`` attribute for the |resource template| specifies that the ``execute[forward_ipv4]`` (which is defined by the |resource execute| resource) should be queued up and run at the end of the |chef client| run."
msgstr ""

#: ../source/resource_common.rst:168
# 115860cb1e644aa5b41b62720958d569
msgid "**Restart a service, and then notify a different service**"
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:3
# 17fc191cad184a9d888e50c1b888fbef
msgid "The following example shows how start a service named ``example_service`` and immediately notify the |nginx| service to restart."
msgstr ""

#: ../../step_resource/step_resource_service_restart_and_notify.rst:13
# 3f05c9dc51d8461383c4d357bb6aae6d
msgid "where by using the default ``provider`` for the |resource service|, the recipe is telling the |chef client| to determine the specific provider to be used during the |chef client| run based on the platform of the node on which the recipe will run."
msgstr ""

#: ../source/resource_common.rst:172
# c0af9d98aa6a4b2dbc62c77b91b9459a
msgid "**Notify when a remote source changes**"
msgstr ""

#: ../source/resource_common.rst:177
# 237390e0ec4e4ef184d8279236f55dd3
msgid "Subscribes Syntax"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_notifications_syntax_subscribes.rst:4
# a9689d6f6e264727bf7325ff370c1672
msgid "The basic syntax of a ``subscribes`` notification is:"
msgstr ""

#: ../source/resource_common.rst:182
# a8b0dd62ef2049338adee890ef5d91a9
msgid "The following examples show how to use the ``subscribes`` notification in a recipe."
msgstr ""

#: ../source/resource_common.rst:184
# 593fa5fd1d0a44d4803ecf60c855c63f
msgid "**Prevent restart and reconfigure if configuration is broken**"
msgstr ""

#: ../../step_resource/step_resource_execute_subscribes_prevent_restart_and_reconfigure.rst:4
# 9e74b793c09b4269bd628f103f7a8704
msgid "Use the ``:nothing`` common action to prevent an application from restarting, and then use the ``subscribes`` notification to ask the broken configuration to be reconfigured immediately:"
msgstr ""

#: ../source/resource_common.rst:188
# 408aa9ba3b9541bea2e72994ac1a1f1c
msgid "**Reload a service using a template**"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:3
# 147611e055ac4629a79649614eb211ff
msgid "To reload a service based on a template, use the |resource template| and |resource service| resources together in the same recipe, similar to the following:"
msgstr ""

#: ../../step_resource/step_resource_service_subscribes_reload_using_template.rst:18
# 4ed5df3e0b304c358772544b3d63e27d
msgid "where the ``subscribes`` notification is used to reload the service using the template specified by the |resource template| resource."
msgstr ""

#: ../source/resource_common.rst:192
# 087e316dc7b84e6baa8fdd23901921a7
msgid "**Stash a file in a data bag**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_stash_file_in_data_bag.rst:3
# ec8a2ead7c5145ada7d26142fdd51ada
msgid "The following example shows how to use the |resource ruby_block| resource to stash a |bittorrent| file in a data bag so that it can be distributed to nodes in the organization."
msgstr ""

#: ../source/resource_common.rst:197
# 1b6efdd292dd4e1f94c439cdbc800cb6
msgid "Relative Paths"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:4
# 7c5e212d3aff4d45b0ee646cf14d2ac7
msgid "The following relative paths can be used with any resource:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:10
# b248081916e64c0ab236328121106eff
msgid "Relative Path"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:12
# dec67901921e42d7845e6a6151f5f0d0
msgid "``#{ENV['HOME']}``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_relative_paths.rst:13
# 4160c10a0c5c4180b7af45b2687ece03
msgid "Use to return the ``~`` path in |linux| and |mac os x| or the ``%HOMEPATH%`` in |windows|."
msgstr ""

#: ../source/resource_common.rst:206
# 5f0c263ab5b1478cbaab872ce9e8274c
msgid "Run from Resource Collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:5
# 73dba13a3d6d4a268d9d807005a9d813
msgid "The |chef client| processes recipes in two phases:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:7
# 77769c81718d48548d2df9b0283e3a2c
msgid "First, each resource in the node object is identified and a resource collection is built. All recipes are loaded in a specific order, and then the actions specified within each of them are identified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:8
# 49f20a3418a84c76a8cff8c3fe51c867
msgid "Next, the |chef client| configures the system based on the order of the resources in the resource collection. Each resource is mapped to a provider, which then examines the node and then does the steps necessary to complete the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:10
# 59fd2e89f1ba47e2a400742a1258164b
msgid "Sometimes, it may be necessary to ensure that a specific resource is run during the phase that builds the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:12
# 088dffcbbae347a9937b58d0a563061c
msgid "A resource may need to run first so that it can download a package that will be used by other resources in the resource collection"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:13
# a78e9d2e32854235bf446f62cc0f63d4
msgid "Several resources need to install a package; rather than having the package installer run several times, it can be configured to run only once"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile.rst:15
# 9d31997fe58142c6ae2383d063704e67
msgid "To support these types of uses cases, it is possible to tell the |chef client| to run a resource at the beginning and/or the end of the resource collection phase. Effectively, run a resource before all other resources are added to the resource collection and/or after all resources have been added, but before the |chef client| configures the system."
msgstr ""

#: ../source/resource_common.rst:210
# e2902b939da9454585ecb29fb05751af
msgid "Before other Resources"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:5
# b376ab58efac496689158cdab94c0c41
msgid "To run a resource at the start of the resource collection phase of the |chef client| run, set up a ``Chef::Resource`` object, and then call the method that runs the action."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:7
# 59b786a95f204c74983feafab9b66644
msgid "**Update a package cache**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:9
# 2b4952e8932142e68c91bcaa69814516
msgid "It is important to make sure that an operating system's package cache is up to date before installing packages, otherwise there may be references to versions that no longer exist. For example, on |debian| or |ubuntu| systems, the |apt| cache needs to be updated. Use code similar to the following:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:19
# 64ed71ae4afc447b86415916c0f3edf2
msgid "where ``e`` is created as a ``Chef::Resource::Execute`` |ruby| object. The ``action`` attribute is set to ``:nothing`` so that the ``run_action`` method can be used to tell the |chef client| to run the specified command. The |cookbook apt| (for |debian| and |ubuntu|) and |cookbook pacman| (for |archlinux|) cookbooks can be used for this purpose. The preceding recipe can be placed at the top of a node's run list to ensure it is run before the |chef client| tries to install any packages."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:21
# 1974663bf1a546c6a460b8c5522ab5ae
msgid "**An anti-pattern**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:23
# 9737ae709f854410a806802647fea62c
msgid "Unfortunately, resources that are executed when the resource collection is being built cannot notify any resource that has yet to be added to the resource collection. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_begin.rst:35
# e51d7b67c8d14c309c455ef32e45e538
msgid "In some cases, the better approach may be to install the package before the resource collection is built to ensure that it is available to other resources later on. Or, something like the following can be used:"
msgstr ""

#: ../source/resource_common.rst:214
# 50a524d7692e43719afd2d0489d4fa26
msgid "After Collection is Built"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_compile_end.rst:5
# 323c05549b024582a86924b4bdf60737
msgid "To run a resource at the end of the resource collection phase of the |chef client| run, use the ``:delayed`` timer on a notification."
msgstr ""

#: ../source/resource_common.rst:219
# e92e5c9c3b6f4711a59b9a35b844d7ba
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# b42bacb16f984e85b3541e3a8886ada5
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common.rst:223
# 360f46598cb44ecebb5b2158386dbd4b
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# aa7aa9e30b1742f998799f220eb344df
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 4d74c4ac735d491e90d7ae1f45127543
msgid "where"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 0eadc78d419c45fda469dc58dfb34f70
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 467c3c26daa04a21b3fd576564b53f03
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 5495909d66c245488503a6cc5a560bee
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 3cac0a972ed7424794be2ddf9f5600b4
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 09008845484845d989d6bf45fb3c1197
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 17d85afca75b4513936148ba67642bcb
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 33d80b68f1a3441a8827868dbfd1b026
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# c4c8a725cb7d48288ef0da7e7cce3648
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# f6d0010cdeb34b769436a79d396a7eb1
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 511d57f0789d496aa546f6259a27d370
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# cf13562880a74127aef285efbf4699fc
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 52f2349a0a2941d8a00f689bfcf5356f
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# fa0f5d7532c7483ab36791cc55fc2ddc
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 5b038798fe7145e193ca8ebdeb8bb66c
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 3cc064f22a2e45b39bd22602cebfc394
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 92fbed920c304ebbaf64001085209c22
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 8fbe52c2d87243b796ebfefcb21faffe
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# f97165b7972d404b8d54b1b728b432d1
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 379d72bf1f2c4150b9188558087aeb8b
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# ba23069057034257987e0fb3d86e724c
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 9be02f837a914caa9f5bea75932cf1f8
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 785341e244dd46b5ba728bfaa27f01cf
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 5e8d7eecf56a4698b395a1ac891e1c3c
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 3e196ae0a75f46008fcf02de876ee251
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 7bc44409cf79469d8653a104032b0752
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# f616b9031d894bfdb69995151ba9e417
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


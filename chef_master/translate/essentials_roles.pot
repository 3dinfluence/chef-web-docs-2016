# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-07 08:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_roles.rst:34
# dc6e41c4132346e6932b242e8ddb480d
msgid "About Roles"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 5ad1ca33e3564cad9b3679465f6022ab
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../source/essentials_roles.rst:39
# 4e017f3401f3462680d7fa203c0a2160
msgid "Role Attributes"
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:4
# 61c78a7508e24a4f940665ea5d0a0869
msgid "An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:6
# e94d483133ec43dd9f6be7d7cacafe04
msgid "A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_roles.rst:42
# d24ac2c7685b4d3c849450ea6cb14065
msgid "Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, |ohai| collects attribute data about each node at the start of the |chef| run. See the :doc:`overview of attributes </chef_overview_attributes>` for more information about how all of these attributes fit together."
msgstr ""

#: ../source/essentials_roles.rst:45
# 465b682a4f0e487f83b8baa74eb1b80c
msgid "Attribute Types"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:4
# e4443125e4eb4ff8b4379e74a8645814
msgid "There are two types of attributes that can be used with roles:"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:10
# 3680b831332f40d8b75f1e92f91a2806
msgid "Attribute Type"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:11
#: ../../includes_role/includes_role_formats_ruby.rst:11
#: ../../includes_role/includes_role_formats_json.rst:53
# 946acbfcc8044f4fbcc13a0234635cab
# a69d820dc96444d198a8131e4e25784e
# f5657936d7254bd2972124408c3a152e
msgid "Description"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:12
# a5a2e0a57870469d9bab83665c507544
msgid "``default``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:13
# 835007ba319149608540aeb022c145a6
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:14
# fb3f05248a734fcf9101784407032500
msgid "``override``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:15
# 801a6b448fc443dc82dad9c9af611dc4
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_roles.rst:49
# 9617aacbad054e80ab19747064a137ec
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 7c72e434b49444b59f5753d24cde60a4
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds them using data collected by |ohai| at the beginning of the |chef| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:53
# f4d1af568f5a4b5cb93d6e02def0c93d
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 2d2ee7b1c5a64768942195d7e5ff1292
msgid "Attributes are always applied to |chef| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 1d8307c115724f3aa66bc8a6f7a09087
msgid "A ``default`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# f5863f0355304c158593f0c68355f989
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 04c33af6ebd24958a47974b3a5cfd774
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 9bdc89b042c649e99c4393432454e4ab
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 58e42f0f49794871aab030518c377206
msgid "A ``force_default`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# cdd8c812dac64369b672c4ff392530ce
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 91c15e5d95474a0b9912c304f271348c
msgid "A ``normal`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 173ad157ec1f4f39941159a4a233a919
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# a3393fae02a740e596d9ff421fef32b2
msgid "An ``override`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# ba105ffca8a94c988e99bcf3fe00a117
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 08e2b75ceab74da08e78b2a37cd41f77
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 4a6d035ced764412bf076f6e76c2112b
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 61f36b9a3f1d438e93af67577aa4ea75
msgid "A ``force_override`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 6dd76bcf8388457282612c4316243dbe
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 3537585ef4f54105b3dff3f7d2933832
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# aff2103cf6db453f874083c36a4a0276
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 3328f7ae502f4b339803ce5c3adfd592
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows a role to exist in multiple environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 1bb2f9ed24ad480bb9e437f42974e2d6
msgid "Attribute precedence, viewed from the same perspective as the |chef| overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# c19c80a414a14f3694fa3e1c4ea160a7
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_roles.rst:57
# acce34be97a847d4a65bc39bbdf1c3d0
msgid "Role Formats"
msgstr ""

#: ../../includes_role/includes_role_formats.rst:4
# a69ed4edaa1c43868c4e9b57f3b3059e
msgid "Role data is stored in two formats: as a |ruby| file that contains domain-specific language and as |json| data."
msgstr ""

#: ../source/essentials_roles.rst:61
# 3748f191c04e4edb95b5f22a4d52062d
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# f835ac505f61406e80ca49fb90b34dbb
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:4
# c99fb715acac422aa86e099216e95520
msgid "Domain-specific |ruby| attributes:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:10
#: ../../includes_role/includes_role_formats_json.rst:52
# a0cf44fb0a1d48d8a6e25b891c17bbbf
# ca7713c18d0b4115a955e0e311b9979a
msgid "Setting"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:12
# 490999182cc64655b44c32ffdefe0c41
msgid "``default_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:13
# 2727f83f91c34e36af1f56511718ec8d
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:19
# aeb50dc2a3f74c4a9b41ee34b2669a9e
msgid "``description``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:20
# 355cdff2a7ae4464a3caf2bbb28f75ae
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:24
# b55d97a3eeb94240ac1f971ce867e98b
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:25
# 5e3ebee334c44c8bbd63026af2e0bb8c
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:30
# 03fd4245da83419cab3cad865e7cba06
msgid "``name``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:31
# 22f628385d6d4a6d9c67252c8e7a14ba
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:35
# 42f1b823de824584b43a4b76d357a11c
msgid "``override_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:36
# 55c0bd0c74a549b7a0ce30639b45087c
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:43
# 16802629f1f04963a2e6e7418f8600ff
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:51
# 4b790702c134489ab49fca1329d1b3d6
msgid "Or::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:61
# 9ec3dad0f14d43e6aece48abe616ff85
msgid "``run_list``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:62
# 9837fd92625b4e8caf3a20f6adcf0ee7
msgid "|ruby dsl run list| For example, the following run list: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:69
# f0bea93c042841f98257c22adf3ae390
msgid "would apply the ``apache2`` recipe first, then the ``apache2::mod_ssl`` recipe, and then the ``role[monitor]`` recipe."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:71
# 8daae622a50046f3bd57e93234d2de4c
msgid "A |ruby| DSL file for each role must exist in the ``roles/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it using |knife|.) Each |ruby| file should have the .rb suffix. The complete roles |ruby| DSL has the following syntax:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:82
# 9731cec821a444a4b0bd83b91d187f3f
msgid "where both default and override attributes are optional and at least one run-list (with at least one run-list item) is specified. For example, a role named \"webserver\" that has a run-list that defines actions for three different roles, and for certain roles takes extra steps (such as the \"apache2\" role listening on ports 80 and 443):"
msgstr ""

#: ../source/essentials_roles.rst:67
# f4b7c692c27c42ec9ef146eac2b5429d
msgid "JSON"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:4
# a1a36606aff04dc18538110087a98782
msgid "The JSON format for environments maps directly to the domain-specific |ruby| format: same settings, attributes, and values, and a similar structure and organization. For example:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:46
# 9740adf3abe748b882d3e5724bda3b2a
msgid "The JSON format has two additional settings:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:54
# 36762c9c66704698a4240b18a2d8ca70
msgid "``chef_type``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:55
# 1ec71fb26a184e85af361258ac505318
msgid "|json dsl role chef type|"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:56
# 60d96c28b56d473790bc4a0f87c3123c
msgid "``json_class``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:57
# b1a83869a509480c9b8ad94614777f8e
msgid "|json dsl role json class|"
msgstr ""

#: ../source/essentials_roles.rst:71
# 73e29b0b40ab4d3b8e89135da00db4f4
msgid "Manage Roles"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:5
# 5b0668d9d7694a4891e1ba4d177b7fce
msgid "There are several ways to manage roles:"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:7
# 5b0e57fe3d5447aa8ed9ea29432c7d8f
msgid "|knife| can be used to create, edit, view, list, tag, and delete roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:8
# 2fe93374c474427fb49a0532d952c736
msgid "The |chef manager| can be used to create, edit, view, list, tag, and delete roles. In addition, role attributes can be modified and roles can be moved between environments."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:9
# 76e1c0bd52424615b0f0bb8164fcf3c5
msgid "The |chef client| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:10
# ccad4969e9b346c39863fff0a09dd06b
msgid "The open source |chef server| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:11
# 0eb2f50508714154bae683d72ffa2d78
msgid "The |api chef server| can be used to create and manage roles directly, although using |knife| and/or the |chef manager| is the most common way users of |chef| manage roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:12
# e62763e138fd423c8499a06a1f71de5f
msgid "The command line can also be used with JSON files and third-party services, such as |amazon ec2|, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:13
# c9e39727213f4b2c95ab0f1b12bb694c
msgid "|chef solo| does not allow roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:15
# 6c8a7450143944d28ca67f0f862046c1
msgid "By creating and editing files using the |ruby| DSL or JSON, role data can be dynamically generated with the |ruby| DSL. Roles created and edited using files are compatible with all versions of |chef|, including |chef solo|. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using |knife| or the |chef manager|, as changes will be overwritten."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:17
# 475104bcf64a4e7ca64ed415a56e2221
msgid "A run-list that is associated with a role can be edited using the |chef manager|. The canonical source of a role's data is stored on the |chef server|, which means that keeping role data in version source control can be challenging."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:19
# df919b156b3a4d968bf43421491f0e08
msgid "When files are uploaded to a |chef server| from a file and then edited using the |chef manager|, if the file is edited and uploaded again, the changes made in the |chef manager| will be lost. The same is true with |knife|, in that if roles are created and managed using |knife| and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using |knife|. It is strongly recommended to keep to one process and not switch back and forth."
msgstr ""

#: ../source/essentials_roles.rst:75
# c77020107e5c421ab3a1296cc90f741d
msgid "Delete from Run-list"
msgstr ""

#: ../../includes_role/includes_role_manage_delete.rst:4
# 7608d0c80e864ed1894b59eb2568af44
msgid "When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one."
msgstr ""


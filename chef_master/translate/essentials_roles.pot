# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-20 12:06\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_roles.rst:34
# 0d511536c83a49e89dcb0f2f8f3d680b
msgid "About Roles"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 6d26994739f14384bbb4f45a13996f95
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../source/essentials_roles.rst:39
# ff2132fe83414006a823c27e92074720
msgid "Role Attributes"
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:4
# 7d56791b72c14dbc973068e788030cfc
msgid "An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:6
# 4a0cae38a55a4e15a58c2950240f6477
msgid "A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_roles.rst:42
# d1a614eff961435ea401e9d10487e4bd
msgid "Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, |ohai| collects attribute data about each node at the start of the |chef| run. See the :doc:`overview of attributes </chef_overview_attributes>` for more information about how all of these attributes fit together."
msgstr ""

#: ../source/essentials_roles.rst:45
# 28c1edc4fb234b1791a9c3234e8ec6bc
msgid "Attribute Types"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:4
# 466ebb7dab05420dafd1fe68d2eb706b
msgid "There are two types of attributes that can be used with roles:"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:10
# c22298b68f6545e9a6b33c207494df76
msgid "Attribute Type"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:11
#: ../../includes_role/includes_role_formats_ruby.rst:11
#: ../../includes_role/includes_role_formats_json.rst:53
# 687cc4d2327b49f4bcbe28192aa5a253
# 23a96f8b9e404708b85a25eb9a0ff7fc
# 7ac95a9a4b20408d9cdb9b804b2421b8
msgid "Description"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:12
# 2beb32a32d0847ed84973835228e17d1
msgid "``default``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:13
# 13af19b92a6a4e63bb34a85e058d23e3
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:14
# fd741a3d0ccb4466af58dc4f570ea024
msgid "``override``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:15
# 54bc87997a8a4fe4a0035b603c2d367e
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_roles.rst:49
# bf92a89b7f3842108aac402766c73185
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 4f583216c9b6490193bfee711ec99197
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds them using data collected by |ohai| at the beginning of the |chef| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:53
# 3365d54b351d460fb414e349cfde2966
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 2882a6f88ace4f83906d4b1849a5fa94
msgid "Attributes are always applied to |chef| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# ce2a3191b9ee434b93592889b5136d3a
msgid "A ``default`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 3cb0c0a525ac4c9cb1a8364c4e558f1a
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 7025b32907414fb4be8392efa8ee9742
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# b52634aacf844985b4330d2fc3294a7c
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 08d0008af9e04c78938b50e22207be8d
msgid "A ``force_default`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# a8f11a4a2d624287bbd0801745d898e0
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 3f135342b1654549860803ff9520a83c
msgid "A ``normal`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 800dae4ea73c471da035e19591519236
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 63fa4838b71c4835873be5de2b163d6c
msgid "An ``override`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# e99ad56d711e4b9ab7de53f407bca70d
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# dd6871be2b634f48ae4070a2e6f6daf6
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 172b44a174be4adcb93f19bcf51a1d80
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# f8fe2f1db372449fb6b90945d4151920
msgid "A ``force_override`` attribute located in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 6c74c87163f248708dd95bfe73d90feb
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 321a3c76bd9c4083862f0655d084ae91
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# d3e3fc171b2a456ca620439913bbbeb9
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 11ebac7a6a4b4550bf7beb2f67caa62a
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows a role to exist in multiple environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 33bc7c5005c24a82b6d6c3cfde2b9da3
msgid "Attribute precedence, viewed from the same perspective as the |chef| overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 32185c2adc13487c96c7b39843f07f8d
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_roles.rst:57
# 4ecaff6b8c3843519fbaa34fd3584b39
msgid "Role Formats"
msgstr ""

#: ../../includes_role/includes_role_formats.rst:4
# 6afab792d7de4d8d91f784862f267474
msgid "Role data is stored in two formats: as a |ruby| file that contains domain-specific language and as |json| data."
msgstr ""

#: ../source/essentials_roles.rst:61
# 21e23370eaab44d18e355cdff1c80cd7
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# bcc0545627834dae8d1016477efeb2a7
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:4
# ba8bfca2adc942a296e6d7ca0ee86895
msgid "Domain-specific |ruby| attributes:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:10
#: ../../includes_role/includes_role_formats_json.rst:52
# 04376eaf23b54afbb0cf5e5b45a77bec
# ee1a6c68f7044bee8cca513c78c73581
msgid "Setting"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:12
# 7fd2ec493dee47bab4fc2b503fb3cfe5
msgid "``default_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:13
# 6b54396d27754114b43e8f282ed3c548
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:19
# d88ceb733ba34387991674f4272a0cce
msgid "``description``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:20
# 27f4a2c0b23f415b9a99ae7e7d6966aa
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:24
# b3ed5e6c29ef49dc88c1a39d9a37a90a
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:25
# 5fe4860f8b5246878402f628a89c4c30
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:30
# db633fb51fd94dbfb0c1ee94e3a563da
msgid "``name``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:31
# 3f2e06270ff14155b563153e68d39f1d
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:35
# 00d32acd1a834100aa309ed55333b253
msgid "``override_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:36
# 11a581aaf12d406d9ed43c50cc1f5ffe
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:43
# 78185ee1f5eb4d1886694a428c63e7ed
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:51
# 861dc486451b4dbf84b4067a0d6f4451
msgid "Or::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:61
# c7d1cdc7d73340cd9933168abf838254
msgid "``run_list``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:62
# 11def2cf2f21461dbb3b06bc902b61ca
msgid "|ruby dsl run list| For example, the following run list: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:69
# 51c9a13527d742a3947b57067660143b
msgid "would apply the ``apache2`` recipe first, then the ``apache2::mod_ssl`` recipe, and then the ``role[monitor]`` recipe."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:71
# 8000cc2628cd4d2389c287cbf1b835c4
msgid "A |ruby| DSL file for each role must exist in the ``roles/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it using |knife|.) Each |ruby| file should have the .rb suffix. The complete roles |ruby| DSL has the following syntax:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:82
# 5836723c5da54bb8970843dd4f3ecc1c
msgid "where both default and override attributes are optional and at least one run-list (with at least one run-list item) is specified. For example, a role named \"webserver\" that has a run-list that defines actions for three different roles, and for certain roles takes extra steps (such as the \"apache2\" role listening on ports 80 and 443):"
msgstr ""

#: ../source/essentials_roles.rst:67
# f79c7328cc7c42938060d378107f6293
msgid "JSON"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:4
# 0474d39c19e74aeda97c8773ef83443d
msgid "The JSON format for environments maps directly to the domain-specific |ruby| format: same settings, attributes, and values, and a similar structure and organization. For example:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:46
# a1975ff9b29b488fb0fbe2d50b8c43ae
msgid "The JSON format has two additional settings:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:54
# 9275d3db6ade4906867cb6a05e883b50
msgid "``chef_type``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:55
# cd44706a22414759a8c8cc95f34fa342
msgid "|json dsl role chef type|"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:56
# 72b1acaf55e547f6b5e80ebd453c97e7
msgid "``json_class``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:57
# c2a1a83f101b45b68b39afb58ad0bb9e
msgid "|json dsl role json class|"
msgstr ""

#: ../source/essentials_roles.rst:71
# ba5a4d51cc7b47b5b32b01af1f295f76
msgid "Manage Roles"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:5
# 80a891f83cac499ba23f71ccf8699e38
msgid "There are several ways to manage roles:"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:7
# f2ffdb74860e4bf5bcfc31914015e52d
msgid "|knife| can be used to create, edit, view, list, tag, and delete roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:8
# 66383b76eac448ebacda8d768b59f1bd
msgid "The |chef manager| can be used to create, edit, view, list, tag, and delete roles. In addition, role attributes can be modified and roles can be moved between environments."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:9
# 20e9026eb06f448697edc479ad68e16e
msgid "The |chef client| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:10
# 0b3f9f1be15e4898a1ee3f6b9d88555d
msgid "The open source |chef server| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:11
# 7bf4fd0ebcfd429c9619202e4ef4e775
msgid "The |api chef server| can be used to create and manage roles directly, although using |knife| and/or the |chef manager| is the most common way users of |chef| manage roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:12
# 526f91ee25d64e83aaaea71bee853fd8
msgid "The command line can also be used with JSON files and third-party services, such as |amazon ec2|, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:13
# ffe348d8f1a044498baee873ceb31208
msgid "|chef solo| does not allow roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:15
# 99e3742a09c847119b7c4e6b0f4b4cb8
msgid "By creating and editing files using the |ruby| DSL or JSON, role data can be dynamically generated with the |ruby| DSL. Roles created and edited using files are compatible with all versions of |chef|, including |chef solo|. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using |knife| or the |chef manager|, as changes will be overwritten."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:17
# afe096ee5cce4daa9ae3d88932950c5d
msgid "A run-list that is associated with a role can be edited using the |chef manager|. The canonical source of a role's data is stored on the |chef server|, which means that keeping role data in version source control can be challenging."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:19
# 62a19912bc6248ef8b7b668118c4f219
msgid "When files are uploaded to a |chef server| from a file and then edited using the |chef manager|, if the file is edited and uploaded again, the changes made in the |chef manager| will be lost. The same is true with |knife|, in that if roles are created and managed using |knife| and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using |knife|. It is strongly recommended to keep to one process and not switch back and forth."
msgstr ""

#: ../source/essentials_roles.rst:75
# f4844c6e242e495784cc900cf7441095
msgid "Delete from Run-list"
msgstr ""

#: ../../includes_role/includes_role_manage_delete.rst:4
# 789cabcf59014d57bcf2d38138a61ffa
msgid "When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one."
msgstr ""


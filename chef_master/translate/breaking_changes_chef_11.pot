# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-02 12:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/breaking_changes_chef_11.rst:33
# eeecd9de3d3546419509c79b5ffc30ce
msgid "What's New in Chef 11.0"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:35
# e851ce1948434d1891bc30dcbe7c8c4d
msgid "The following items are new for |chef 11| and/or are changes from |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:37
# f517a512ad69434880af965ab65fec5b
msgid "The |chef client| 11.2 release is updated for Ruby 1.9.3-p484, which resolves a security vulnerability that existed when using prior versions of |ruby|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:40
# d02bbb7151964f02b43e9c9b639f3caa
msgid "|chef client| and |chef solo|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:41
# 27ea4e4e36a74af38cf1ed290de2830e
msgid "The following changes have been made to |chef client| and |chef solo|. Some of these changes may break recipes (or may change their behavior); other changes may affect workflow or scripts."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:44
# 7ba30762b3704069a10b529a22a12bc5
msgid "|shef| is now |chef shell|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:45
# 1da9064a91654b879b9561b66af3b2c9
msgid "|shef| has been renamed to |chef shell| (CHEF-2925). Recipe mode and attributes mode must now be entered using the ``recipe_mode`` and ``attributes_mode`` commands."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:48
# 71df2dfa32b84744831b2b437b5250ff
msgid "Node attribute changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:49
# 79cfad640eb04456b800e5cff170fcd3
msgid "In order to fix bugs and surprising behaviors with attributes, the implementation of ``Chef::Node::Attribute`` has been completely overhauled. The APIs for reading and writing values are now completely separate."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:52
# 96d3745c0e3042ea98746450db438f15
msgid "LWRPs AND Recipes Both Now Automatically Qualify loaded Gems"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:53
# 8b93d0286a4042b5b49b385b5d7ca7c4
msgid "Previously, in Chef 10, one could do the following in a recipe:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:60
# 92d062f073334a038332a7c64a7118c7
msgid "In Chef 11 you must add \"::\" to the beginning to avoid the automatic addition of a \"Chef::\" qualifier."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:68
# 84c4ce79d04848d4972d826237e7aad3
msgid "Implicit writes removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:69
# 64ae4a2b519443de9ce631316f9f09a2
msgid "Node attributes may no longer be set without specifying which precedence level to set. The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:76
# ab04f5f9769f4732a8c1f2d33c8a3f2c
msgid "When a precedence level was not specified, ``normal`` was assumed. For |chef 11|, the following example replaces the previous example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:83
# 3b57eb844b0549e58284637991e3f9f0
msgid "Even with this change, please take a moment to consider if a cookbook should be using default-level attributes instead. In general, normal-level attributes are only required when a value needs to persist across |chef client| runs (such as auto-generated passwords) or when a node is a \"special snowflake\"."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:86
# f202de7e44f04dc8b3df5693063fa8ed
msgid "attribute=\"value\" required"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:87
# a15cd465f361445e844819a3f679eec6
msgid "The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:93
# 417436f071904ab0a80ebf2584e90976
msgid "The following example replaces the previous example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:100
# a7c19547630340f783ed6e139540c24d
msgid "|knife| Output Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:101
# 8d2c012225db4d8090bb48a46d134126
msgid "Previously, |knife| was adding the ID field to search results for node attributes. With |chef 11|, |knife| groups search results by the name of the node. For example, the old output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:121
#: ../source/breaking_changes_chef_11.rst:168
# 9b92e629eb854d068d0b50ed14e65c7b
# 9a677b7c9fd04951a6e80669e7e53df2
msgid "and the new output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:143
# 2612ce9b27f94f29b35980c637ffe77e
msgid "This may require that search queries be updated for |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:145
# d6fa9319c25b40f0ba677568b9b3a6a2
msgid "This change also affects |ohai| plugin output.For example, the old output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:193
# b4e6d12f395c48849d4a1e6dd58661fe
msgid "Role and Environment Attribute Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:194
# 10741c1b811847b0943658fe30fb16e3
msgid "Role and environment default and override attributes are visible in attributes files. In |chef 11|, several changes have been made to attributes to enable you to include more complex logic in your attributes files. Though you should still try to keep your attributes files simple, you can effectively generate attributes composed of other attributes or based on a node's platform in attribute files now."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:197
# ff559528c56f4bb5bcb3fda74405959b
msgid "Computing attributes from attributes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:198
# 7234dc3c0cb34d34aa1baee34e1db299
msgid "In |chef 10| and lower, code like the following will not work if you intend to modify the \"source\" attributes from roles or environments:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:211
# 082c7596da894de1ab7d28a45fdb6ae2
msgid "In |chef 10| and lower, default and override attributes are stored as a single nested hash, and role and environment attributes are applied to the node after attribute files are evaluated so that role and environment attributes can overwrite attributes from attributes files. In |chef 11|, the above code will work as you expect, because role and environment attributes are stored separately from attributes from cookbooks, and are applied when the run_list is expanded (before any cookbook code is run)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:214
# 48e40e2593bd4fd2bd9f9a822cc2594c
msgid "Setting attributes by platform"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:215
# 223cf84d9def4d098fe7d88e5ad57e19
msgid "In |chef 11|, ``Chef::Node`` now includes the platform introspection mixin, so you can use the following methods in attributes files:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:225
# 6bff21f989cf483596581176cc1e9473
msgid "Behavioral changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:226
# 76274446f5244039a86bcbaa12258f0d
msgid "In |chef 10|, you can set a default or override attribute in a recipe, and it will overwrite the default/override value from any role/environment/attribute file. In |chef 11|, node.default always sets a cookbook-level default, and node.override always sets a cookbook-level override. Since cookbook-level attributes have lower precedence than role or environment attributes, a default or override attribute set in a recipe will not overwrite a value set by a role or environment."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:228
# 4d84fba13ad5483295ccfff2d24635ea
msgid "For example, given code like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:238
# 23de5e106987452d92fd56cb564de37c
msgid "In |chef 10|, the value of node\"app_name\" will be \"from-recipe\" and in |chef 11|, the value will be \"from-role\" (assuming there are no competing normal or override attributes)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:240
# f60eb23dac89431dac7ff69d51b00f44
msgid "Likewise, if you take any action based on the value of attributes when evaluating attributes files, be aware that attributes from roles and environments will now be used to compute the attribute value."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:243
# f13f33fb1099416ab065b24aff193854
msgid "node.run_state Replaced"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:244
# 7ad400c409424d86bc7d95eb9ae2af2a
msgid "In |chef 10| and lower, you could see which recipes had been evaluated by looking at ``node.run_state[:seen_recipes]``. ``Chef::Node`` was not the correct place to track this information, and the previous implementation resulted in bugs where a recipe like ``nginx::default`` could be loaded after ``nginx``, even though they are the same recipe."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:246
# 8fc1dac17d0146bc9c58c72e64b06419
msgid "In the new implementation, this is tracked by ``Chef::RunContext``. The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:254
# 1f3d095e934a47768e6e0d1e16f40ea0
msgid "Use the following approach instead:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:264
# 0820ea00b0094ba39bfb97c41ea1c03e
msgid "Subtractive Merge Removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:265
# 26771e63341e43d998d2e00510e78840
msgid "In |chef 10| and previous, you could use special \"knockout prefix\" attribute values beginning with ``!merge`` to make the deep merge algorithm remove values from arrays. This feature was very seldom used, confusing, and greatly increased the time and space complexity of the deep merge implementation. This feature is removed in |chef 11|, and attributes containing the \"knockout prefix\" will trigger an error upon merge."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:267
# cad3f834a3554a1c9bb55158bcf9739f
msgid "If you need to selectively remove elements from arrays in your attributes, you should place this logic in a cookbook. Combined with other fixes to attributes in |chef 11|, you can put this logic in an attributes file, which is the most natural place for it."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:270
# de1c8fbb5749461bb875d83bf64e52c4
msgid "Chef::REST#run_request Removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:271
# 6554ebc8564140ad88c077cc460b0fdc
msgid "The ``Chef::REST#run_request`` method is removed. Use ``api_request`` or ``streaming_request`` for low-level access, or (better) use the higher-level ``GET``, ``PUT``, ``POST``, ``DELETE``, and ``HEAD`` methods."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:275
# 4a8b1e11f28047ec9e462578c195d4a7
msgid "Delayed Notifications Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:276
# 656bac3b4ace4cfdabfbd08851faf052
msgid "In |chef 10| and lower, delayed notifications are lost when Chef does not converge successfully."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:278
# b060a00512584c73b859a6ea43015c96
msgid "This fixes addresses the following scenario:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:280
# 20ffb9b12ef9486688dcc56cfd2f2ff0
msgid "The |chef client| reconfigures a service"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:281
# ad835458ec454672bcbd364e948f64b6
msgid "A delayed notification to restart the service is queued"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:282
# d3a9ebf5261a4de798ec38a1c49f76b4
msgid "An unrelated resource fails and halts the |chef client| run"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:283
# 1d4e3bda45214f18a9b473eeb9b8e53a
msgid "Subsequent |chef client| runs don't restart the service because it hasn't been reconfigured during that run."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:285
# e5b33bcf9f8e4692bb5e697953d3bb4d
msgid "In |chef 11|, delayed notifications will run after the |chef client| run fails, and will be executed even if other delayed notifications fail. Conversely, if the |chef client| fails to configure a service and a restart action has been queued for that service, the service will be restarted and will probably be broken."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:288
# 76073a5225354a59b3441b0e854f9be5
msgid "Single Notifies for Notification"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:289
# 256b6999eaf44ca595d8c1a86741fd82
msgid "Previously you could specify multiple notifications in a single call to notifies with code like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:297
# 640b6946156a41e2b5f7464d065cb900
msgid "Instead of the above, just put multiple calls to notifies in your resource declaration:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:308
# 9f46c663c1ed4895800ac4512f8656cc
msgid "Changes for Data Bag Encryption"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:309
# 176cf6673615445988d33f119549b4d9
msgid "In |chef 10|, objects in encrypted data bag items are serialized to |yaml| before being encrypted. Unfortunately, discrepancies between |yaml| engines in different versions of |ruby| (in particular, 1.8.7 and 1.9.3) may cause silent corruption of serialized data when decrypting the data bag (the version stored on the |chef server| is untouched and can be correctly deserialized with the same |ruby| version that was used to create it, however)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:311
# e97ddec3063f4405a8306c0a19f91392
msgid "Because the corruption is silent, there is no way for the |chef client| to detect it; furthermore, all workaround possibilities we've investigated have severe limitations. Additionally, we wanted to modify the encrypted data bag item format to support using a random initialization vector each time a value is encrypted, which provides protection against some forms of cryptanalysis. In order to solve these issues, we've implemented a new encrypted data bag item format:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:313
# 6dcc6d6fa05845698b91603d7a7a2fd8
msgid "The user interface to encrypted data bags is unchanged. This change only affects the format of the encrypted values."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:314
# 0b6273a956c14966bf043c09503a9556
msgid "|chef 11| clients will be able to read encrypted data bags created with either |chef 10| or |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:315
# afc95315445b4de4b04f5f7f0b9dc91d
msgid "|chef 10| clients |chef 10-18| and above will be able to read encrypted data bags created with either |chef 10| or |chef 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:316
# 32108edb87a84e439463f3440b17843d
msgid "|chef 10| clients version |chef 10-16| and lower cannot read encrypted data bags created with |chef 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:317
# aa04df9d326c414c9dded0d600acbe10
msgid "|chef 11| knife commands will only create data bags in the new format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:318
# eb0a672da32f46ef84f7cb54367aba55
msgid "|chef 10| knife commands will only create data bags in the old format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:321
# 2fd94a9db9214cde989ade100a5166fd
msgid "Diagnosing Compatibility Errors"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:322
# ac3468cb2d2241d38020a10e6df1895e
msgid "When trying to decrypt a |chef 11| format data bag item with |chef 10-16| or lower, you will see an error like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:332
# cf3deea9957e49b98a1225389d8a72a4
msgid "The above error output is from |knife|; the |chef client| will fail with a similar error."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:335
# 69e0736e6380450c978e2f7a02f36d64
msgid "How to Upgrade"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:336
# 5f5b58f0820c4eacaccd8d5a78efda2a
msgid "Before upgrading on any workstation you use to create/edit encrypted data bag items, upgrade |chef client| on all machines that use encrypted data bags to version |chef 10-18| or above. Once your |chef client| fleet is upgraded, you can start using |chef 11| on your workstation (the box you create/update encrypted data bag items on)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:338
# d2d72993d21a412eb00501b22b9bd6d3
msgid "In order to get the benefits of improved security with the new data bag item format, it's recommended that you re-upload all of your encrypted data bag items once you've migrated to compatible versions of |chef client|. To migrate your data bag items, simply edit them with ``knife data bag edit`` or upload them with ``knife data bag from file``, whichever you normally do. |chef 11| will automatically upload your data bag items in the new format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:341
# ca734f40cb7f4baa92ea95b9e813c941
msgid "Server Versions"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:342
# e520ae7f20ea4d7aab9a8a6daaabd9a8
msgid "Because encrypted data bag items are implemented as a client-side layer on top of regular data bag items, the format change is transparent to the server. You can begin using |chef 11| data bags even if your server is version |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:346
# 4ba513f532c44e17acfb5a9176a9879b
msgid "Non-recipe File Evaluation Includes Dependencies"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:347
# 7f3a559ed5ee4636915db640f2fc5788
msgid "In |chef 10| and lower, library, attribute, lightweight resource, and resource definition files are loaded in undefined order (based on the order given by the |ruby| Hash implementation, which differs based on version and vendor patching). In |chef 11|, these files are loaded according to the following logic:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:349
# 7c7dac6bef554b558d352b36fe67dae3
msgid "The expanded run_list is converted into a list of cookbooks in the same order"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:350
# 636805a84e444da0991ddfe3e7e11298
msgid "Each cookbook's dependencies are inserted into the cookbook list before the cookbook that depends on them."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:351
# 64ecb136b06e43a084395393b74c1bc7
msgid "Duplicates are removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:353
# 42a8ac85e44f4dfc8e2bbe20e0d90eb4
msgid "For |chef client| users, there should be no negative impacts from this change, as the previous order was essentially random. For |chef solo| users, the new loading logic means that files belonging to cookbooks which exist in the ``cookbook_path`` but are not in the expanded ``run_list`` or dependencies of the cookbooks in the expanded ``run_list`` will no longer be loaded (in |chef 10|, all non-recipe files from all cookbooks in the cookbook path were loaded). Additionally, |chef solo| users will now see ``CookbookNotFound`` errors when a cookbook is listed as a dependency in the metadata but not present on disk. The error message will look like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:362
# e1577deb42474a8c8a203c9eadba991c
msgid "|knife| Configuration Parameter Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:363
# 23cdc13779614ca4a592832f13435055
msgid "In |chef 10|, it is difficult and error-prone to ensure that configuration parameters are applied in the right order. Configuration should be applied in the following order:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:365
# e90165afb929400998a32e12176713c7
msgid "Default values"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:366
# fd47a2c3928a4001a246e3cb8f198543
msgid "Values set in |knife rb|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:367
# eb1b2cf6c285482e87937067e3ed6376
msgid "Values passed by command line option"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:369
# 178596664e0440b08232e452e0a15d58
msgid "Because of the way the the ``mixlib-cli`` library is implemented, it is difficult to determine which values are defaults and which values are user-supplied command line options. |chef 11| takes advantage of a new mode for ``mixlib-cli`` that keeps default values separate from user-supplied values. In the configuration process, |knife| automatically applies config:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:371
# 8ba86c1d063547289691dbd4207f4abd
msgid "Default values set in the mixlib-cli DSL"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:372
# aeee1543c939488f957ced2ff43c89bb
msgid "Configuration settings under Chef::Config[:knife]"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:373
# d39e79b7e0a349738f533c32799a8074
msgid "User supplied values parsed by mixlib-cli"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:375
# 55116bcaa9684e509d980f413d9b892e
msgid "Depending on how |knife| plugin authors have worked around the |chef 10| behavior, it's possible that this change will lead to incorrect values being used for configurable parameters. The |opscode|-maintained cloud plugins have been reviewed and should work correctly on both |chef 10| and |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:377
# 8a4cc75d578a4b49929b51a5f09c76b6
msgid "When writing |knife| plugins for |chef 11|, plugin authors are encouraged to define default settings using the ``mixlib-config`` DSL, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:387
# 14e2e45285a74e7cafeb57f9944c5659
msgid "and access configurable values via the config hash with symbols, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:394
# c653cf86974a4c0389e9fce878373de7
msgid "If compatibility with |chef 10| is required, accessing configuration via a helper function like this will work correctly, but only if default values are NOT set with the ``mixlib-cli`` DSL."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:403
# 66530854866240239e5a5a0cba9953e9
msgid "Default values must be managed manually until support for |chef 10| is removed, for example, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:409
# 7e8016db56284d45a892232e0ffcafb8
msgid "Further information is available in the ticket: CHEF-3497 - Allow |knife rb| to implicitly provide all |knife| related options - FIX COMMITTED"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:413
# bcd0da286d084bd6a31386cedc83676e
msgid "Remote File Mirror Support May Break Subclasses"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:414
# 1f5dcf8ad6d04be490350a281d22ccbf
msgid "In |chef 11|, |resource remote_file| now supports fetching files from a list of mirrors. As a result, the ``source`` parameter of the |resource remote_file| resource is internally stored as an array. This change is transparent to users of the |resource remote_file| resource; however, any library code that subclasses the |resource remote_file| resource---for example, to provide |amazon s3| support---will likely need to be updated to support and/or work around this change."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:416
# 99bdf7ea481b41b383bb4085c9ec8242
msgid "To effectively revert the change so that the ``source`` parameter is a string, add code like this to your resource:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:428
# 09f00a664a024fbd92427e51d0959d71
msgid "Alternatively, you can update the provider to handle the case that the ``source`` parameter is an array."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:431
# 35b090ce41e94ccc9ba13cb0aa84d2c7
msgid "The Server"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:432
# 9b14e69bafa04738a16ffa427585d761
msgid "The following items are new for |chef 11| server and/or are changes from |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:435
# 681fd70dc14a47db95e7e4c98d007223
msgid "The /clients endpoint returns |json| with a |json| class for edit (PUT) operations"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:436
# f794702a00024e6db9118670fe627481
msgid "In |chef 8|-|chef 10|, the server's response to a ``PUT`` to ``/clients/:client_name`` does not include the ``json_class`` key, though other calls, such as ``GET``, do include this key. The client-side |json| implementation uses the presence of the ``json_class`` key as an indication that it should \"inflate\" the response into an instance of that class (otherwise, a plain hash object is returned). As a result, code that modifies a client (such as requesting a new key from the server) and parses the response with the |ruby| 'json' library must be modified to accept a ``Chef::ApiClient`` or a hash."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:438
# 3f60ec718e43487c8f58bb2c6bbf77cc
msgid "This change breaks the ``knife client reregister`` command in |chef 10-16| and earlier. Forward compatibility is introduced in |chef 10-18|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:441
# e455e142bc2447118156b4cd976c9869
msgid "The admin and validator flags are exclusive"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:442
# 82b5b85920e74cb9b5a4f74db93488d3
msgid "In |chef 11|, clients may not be both admins and validators at the same time. In the current alpha release, you can set the admin flag on the validator but it has no effect. In a future release, you may receive an error when attempting to set the validator flag on a client, or when attempting to create a client with both flags set."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:444
# b0e97b03d5a34b909845592ccf8f597c
msgid "Exact behavior may change before release or in a minor version release after |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:447
# ae3167e57cd24455895d40e3eb5b628a
msgid "Strict checking of top-level |json| keys"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:448
# 6b1f987db0984597901c77336a28155b
msgid "All API endpoints that process requests to create or update an object validate that the |json| sent by the client does not contain unknown top-level keys. A 400 error response will be returned if unknown top-level keys are encountered."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:451
# 0d13dd2890494862a3968b2c9e1475a0
msgid "Creating an empty sandbox is now a 400 error"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:452
# c066cb3cdb8e4625bb1b5e5c3a063965
msgid "Sandboxes are used as part of the protocol for uploading cookbook content. An empty sandbox cannot be used for anything. Creating such a sandbox may indicate a logic error in client code and is (mildly) wasteful of server resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:455
# 1044039f2ee74516b86aa6f4b41a23aa
msgid "Error messages included in server error responses have changed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:456
# 14adb1bb7ec44a6c9f7a90eb24b06436
msgid "As part of the move to |erchef|, error messages have been made more consistent. Code depending on specific error message text may be broken by these changes."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:459
# 9403ad658293420480ae9bbae9514d8c
msgid "Some error codes have changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:460
# a533949695aa4b66a0ccf5f9efe7623e
msgid "In a number of cases, |erchef| returns a more specific error status than the |chef 10| server. For example, returning 400 instead of 500 for some bad request data situations."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:462
# 1a1d13da9d2f43099062daddac731c85
msgid "The ``chef-server`` cookbook has been completely rewritten to support an omnibus |chef server| install"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:465
# c49ba0417dd74dc785abc5139c5ccef9
msgid "knife reindex is not supported in |chef server 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:466
# 1eb3e95f53584c508fb5988f012eddaf
msgid "You can trigger a reindex of object data using ``chef-server-ctl reindex`` while logged into the |chef server|. The |knife| command is still present in the |chef 11| |chef client| for use with a |chef 10| server."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:469
# 970b5b8ddd014f26bc8f88a7ed9871ec
msgid "OpenId support has been removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:470
# 25ceec3c4f624a27a8ac0a293f04c5cb
msgid "Support for |open id| is no longer available to the |chef client|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:474
# e1ffe7098ce141d9b8df1c1085de3ce7
msgid "The Ruby server code has been removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:475
# cdd4cf39949b41af80fab32ccc8bb8ce
msgid "As part of the move to Erchef, the Ruby API server code along with classes not needed by the client-side have been removed from the main |chef repo|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:478
# 25d4689118354513a96a5756ad242642
msgid "knife cookbook delete --purge is ignored by |chef server 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:479
# 4596c4af5fc14b5d9fbc6a6a14bbac34
msgid "In |chef 11|, the server keeps track of which cookbooks use a given piece of cookbook content (via checksum). When a cookbook version is deleted, associated content will be deleted if not referenced by another cookbook version object. Therefore, there is no need for a purge operation when using the |chef 11| server."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:483
# 1af837821b8e443dac162963fe4404cc
msgid "Other Notable Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:484
# d94fb467b4a6434c83d66fb86a554195
msgid "Changes that are not expected to be breaking, but are notable improvements."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:487
# 5a9608cac9f94c16ae32f69283cff847
msgid "Output Formatters are the Default Output when Running in the Console"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:488
# 2a1b2d161daf4be39ed742b787a64c0b
msgid "In |chef 11|, when output is to a TTY, the |chef client| will automatically use output formatters to display information about what it's doing. To accommodate this, the default log level is now ``auto``, which evaluates to ``warn`` when running with a TTY (so log messages will not obscure the output formatter output), and ``info`` when running without a TTY (so you get important information about changes being made to the system when output formatters are not active)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:490
# 9cb2afb544104294a3cf7c7c1657f972
msgid "If you prefer one type of output over the other, you can force the |chef client| to use output formatters or logger output with ``--force-formatter`` or ``--force-logger``."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:492
# 4117cbb648214d56b26860416f0b7eb2
msgid "In previous versions, bootstrapping templates would generally configure the log level to ``info`` in the |client rb| file. You may wish to change this to ``auto`` or remove the setting from your config file entirely."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:495
# cad1f9c2bfb748dc98ade57f4975e4a8
msgid "Inline Compile Mode for Lightweight Resources"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:496
# 0c7e5f22acfb42f9b3aee0fd62d607b8
msgid "In |chef 11|, there is an optional \"inline compilation\" mode for lightweight resources, which is intended to make notifications work correctly for lightweight resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:499
# 88e6a02c49164a7a8f45c12adf75c462
msgid "Without Inline Compilation"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:500
# 4afe78486a9d422d8afc99c87255323e
msgid "When not using inline compilation (it is disabled by default), any resources created in a lightweight provider's action blocks are inserted into the top level resource collection after the lightweight resource it belongs to. For example, given a resource collection like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:502
# 117407e74e5c46b8938c55209718a852
msgid "top_level_resource_one"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:503
# e2ff330b1c5c48dfb618aa2ab641c6e3
msgid "lwrp_resource"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:504
#: ../source/breaking_changes_chef_11.rst:512
# 3ab96566d6704b7eaa9870bb0cae2a80
# 717872962b49495db3e34a1aa719b1ad
msgid "top_level_resource_two"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:506
# 4bf2b1510f61445aafc75fe06f21b50b
msgid "When ``lwrp_resource`` is executed, the resource collection will then be modified like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:508
# 1e0999974dff46479d85c5f8fd1e1da8
msgid "top_level_resource_one (already processed)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:509
# 767485cce1554cb3aacccf66eb378a06
msgid "lwrp_resource (already processed)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:510
# 5c44c00bc3634f68a6a8b5eef256258f
msgid "embedded_resource_one (created by lwrp)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:511
# 5b4fa963d5b34c3f974d1a9472499617
msgid "embedded_resource_two (created by lwrp)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:514
# 5ce027b49cbe4797ac3738a22bb131ea
msgid "This means that the ``lwrp_resource`` cannot correctly set its updated status based on the embedded resources, because it has finished executing before its embedded resources are processed."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:517
# b31680e4729141598dcb2ed711353d8f
msgid "With Inline Compilation"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:518
# 423d162ec55f4efb8488bc67925e3bce
msgid "Inline compilation is enabled by calling ``use_inline_resources`` at the top of your lightweight provider file. When this is enabled, the code in your action block is executed in a self contained |chef client| run, with its own compile and converge phase. If any embedded resources have been updated, the top-level lightweight resource is marked as updated, and any notifications set on it will be triggered normally. Within the embedded |chef client| run, resources in the top-level resource collection are invisible to the embedded resources, so embedded resources are not able to notify resources in the top-level resource collection."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:521
# 1721cc1109f24a6ab923cc26218585d2
msgid "LWRP Class Hierarchy Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:522
# 52e9ab231b7b4b4885967eb2dae90ab1
msgid "In |chef 11|, lightweight resources resources now inherit from a ``LWRPBase`` resource instead of directly inheriting from ``Chef::Resource``. Likewise, lightweight resources providers inherit from a ``LWRPBase`` provider instead of ``Chef::Provider``. This should not impact existing code for lightweight resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:525
# b27584858ac64e7c982b93ae7ad0d808
msgid "Partial Support in Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:5
# fceae606295e47a7a0b32cd7a7d7b7bb
msgid "A template can be built in a way that allows it to contain references to one (or more) smaller template files. (These smaller template files are also referred to as partials.) A partial can be referenced from a template file in one of the following ways:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:7
# 403d5ca145a7428db2f16759db08ae3b
msgid "By using the |ruby| ``render`` method in the template file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:8
# 4233aff5e46f453c8bcf29fcbb77ba78
msgid "By using the |resource template| resource and the ``variables`` parameter."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:529
# fb32cf106c0e4802ad33f091d7593bed
msgid "``render`` Method"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:5
# 98184db558194035bb203d8a48f78075
msgid "Use the ``render`` method in a template to reference a partial template file with the following syntax:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:11
# fe59c0b298ca47f5b8ecc36a03bf94a4
msgid "where ``partial_name.txt.erb`` is the name of the partial template file and ``:option`` is one (or more) of the following options:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:17
# bb87b1a49ef0429b8977ce34077debb3
msgid "Option"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:18
# 5dfc3340de234b61bd5bc30191eb6a47
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:19
# 97784399420141328c15446ec1f68b4e
msgid "``:cookbook``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:20
# fe2335fca6fe4dbe8962fb6986856c2c
msgid "By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:21
# 63b17c4805b348219a0e5758282ebddb
msgid "``:local``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:22
# 4474e69da3fd4aa7a21d46f0480a9961
msgid "Indicates that the name of the partial template file should be interpreted as a path to a file in the local file system or looked up in a cookbook using the normal rules for template files. Set to ``true`` to interpret as a path to a file in the local file system and to ``false`` to use the normal rules for template files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:23
# 3221c4b7e99e4fa6bea7a715f6836df5
msgid "``:source``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:24
# 981e05fd121346449c479bc7655214c1
msgid "By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:25
# 53dbbaab2d2042d693f68daa6d9f14d7
msgid "``:variables``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:26
# 94b0187cc6074ee1afbc2ab2b5fab28b
msgid "A hash of ``variable_name => value`` that will be made available to the partial template file. When this option is used, any variables that are defined in the top-level template that are required by the partial template file must have them defined explicitly using this option"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:28
# 6be1e285ceb9471c8b7845360ba4d305
msgid "For example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:533
# e4dfda6eefe54d66be1f6fa77ccc8731
msgid "Template Resource"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_template_resource.rst:6
# 1873a79be99b4fbcaeec3ed0b23b90c0
msgid "The |resource template| resource can be used to reference a partial template file by using the ``variables`` parameter, the ``:partials`` option, and a |hash| of partial template files. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_template_resource.rst:18
# e828f932dcf24c34a0406a87eeb1daa4
msgid "where each of the partial template files can then be combined using normal |ruby| template patterns within a template file, such as:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:537
# a5939c222d6f40e1a1bfe4c9e66aad79
msgid "|chef apply|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:538
# 5efc5e5be04c4c1ea06476e0b1f3701d
msgid "There is now a ``chef-apply RECIPE`` command that will run a single recipe with no ``JSON/run_list/config`` file required."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:541
# 0c3e2a1240eb491ab9bb7adc1e145162
msgid "Miscellaneous"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:543
# 30cf6b4bb52649a6a165df74b7df3133
msgid "Locking is used to prevent simultaneous runs on |unix|-like systems"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:544
# 6c969ce9d9da4646870ad0df909c3e9d
msgid "|subcommand knife search| assumes node search when the object type is omitted"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:545
# d956ce76d14d46268c583185eabf6e09
msgid "|subcommand knife search| will search over roles, tags, |fqdn|, and IP addresses when the given query is not in |apache solr| format (does not contain a colon : character)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:546
# 6cc9154a68c54d748fc0b7f9f31c46a7
msgid "|knife| essentials (|subcommand knife upload|, |subcommand knife download|, |subcommand knife diff|, and so on) have been merged into |chef 11-0|"
msgstr ""


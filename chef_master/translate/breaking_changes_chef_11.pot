# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-27 22:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/breaking_changes_chef_11.rst:33
# 8ea332e8cc6b471095171e5489829e75
msgid "What's New in Chef 11.0"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:35
# 558384a35463455ca64cb00390b38289
msgid "The following items are new for |chef 11| and/or are changes from |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:37
# e104dd9aae954e29b8cf284375580907
msgid "The |chef client| 11.2 release is updated for Ruby 1.9.3-p484, which resolves a security vulnerability that existed when using prior versions of |ruby|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:40
# 15aa83fde84a44889dd51007fa388913
msgid "|chef client| and |chef solo|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:41
# c8c9270dc2d54d6c92496bc9e9d00393
msgid "The following changes have been made to |chef client| and |chef solo|. Some of these changes may break recipes (or may change their behavior); other changes may affect workflow or scripts."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:44
# b77f4943a9fd48e0907a789bac4511e5
msgid "|shef| is now |chef shell|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:45
# 03fbfcec1efc4e38a06a133aa4ac78e5
msgid "|shef| has been renamed to |chef shell| (CHEF-2925). Recipe mode and attributes mode must now be entered using the ``recipe_mode`` and ``attributes_mode`` commands."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:48
# 214732fc4a7c4cb29de6fb06186e98e4
msgid "Node attribute changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:49
# ec9cacadb78e4e629b5627ee949949a3
msgid "In order to fix bugs and surprising behaviors with attributes, the implementation of ``Chef::Node::Attribute`` has been completely overhauled. The APIs for reading and writing values are now completely separate."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:52
# 53a5aa68491a43a1a0f60294b13d6472
msgid "LWRPs AND Recipes Both Now Automatically Qualify loaded Gems"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:53
# f934c04af5cf42aaa6e4da6ba32c6751
msgid "Previously, in Chef 10, one could do the following in a recipe:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:60
# bf655c93f61044b9b41b79bacd161b6c
msgid "In Chef 11 you must add \"::\" to the beginning to avoid the automatic addition of a \"Chef::\" qualifier."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:68
# bf1dd8ddaa5e4bedbad5f27aa6ec1da8
msgid "Implicit writes removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:69
# bf93d5d0ac1d43929e421e2372287016
msgid "Node attributes may no longer be set without specifying which precedence level to set. The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:76
# a3bd869aa37f4adab645e48b98768086
msgid "When a precedence level was not specified, ``normal`` was assumed. For |chef 11|, the following example replaces the previous example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:83
# 3e29442578134fc4bc8612d21c907779
msgid "Even with this change, please take a moment to consider if a cookbook should be using default-level attributes instead. In general, normal-level attributes are only required when a value needs to persist across |chef client| runs (such as auto-generated passwords) or when a node is a \"special snowflake\"."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:86
# de048b08662c4c10b0cec11f7659d1b7
msgid "attribute=\"value\" required"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:87
# cd930526cdd6446c98c45f4b2356913e
msgid "The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:93
# fb209cc1542b4a878d4791e1cd07a738
msgid "The following example replaces the previous example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:100
# fff2948cddd545708d24c9be6f358d4e
msgid "|knife| Output Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:101
# a90912d1a9bd4213be9593a607a6af94
msgid "Previously, |knife| was adding the ID field to search results for node attributes. With |chef 11|, |knife| groups search results by the name of the node. For example, the old output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:121
#: ../source/breaking_changes_chef_11.rst:168
# bf693f62d9db4651ad28c10b35ccf225
# fcc93ba9374a4c74ba86fc506dc1eac7
msgid "and the new output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:143
# d45983c65edd4360bb3fc26d77a8e66d
msgid "This may require that search queries be updated for |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:145
# fe8f37937d1f45a58ecacc38b3d82599
msgid "This change also affects |ohai| plugin output.For example, the old output looks something like:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:193
# 630bb1dc407d46c48f3410a59c69032f
msgid "Role and Environment Attribute Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:194
# 53878f893d284490a768f136b84cd58a
msgid "Role and environment default and override attributes are visible in attributes files. In |chef 11|, several changes have been made to attributes to enable you to include more complex logic in your attributes files. Though you should still try to keep your attributes files simple, you can effectively generate attributes composed of other attributes or based on a node's platform in attribute files now."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:197
# 1bd74b1827b04bcc9ad7b6580487544f
msgid "Computing attributes from attributes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:198
# 3b7ca18868324c1398bba7cdab72754c
msgid "In |chef 10| and lower, code like the following will not work if you intend to modify the \"source\" attributes from roles or environments:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:211
# a0c01ebd621e4d979865a3b8b66cb1d9
msgid "In |chef 10| and lower, default and override attributes are stored as a single nested hash, and role and environment attributes are applied to the node after attribute files are evaluated so that role and environment attributes can overwrite attributes from attributes files. In |chef 11|, the above code will work as you expect, because role and environment attributes are stored separately from attributes from cookbooks, and are applied when the run_list is expanded (before any cookbook code is run)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:214
# e554cfd703f14c648a81865b7663d8b5
msgid "Setting attributes by platform"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:215
# a84f5c9e9af147f7be670fe80d1513e8
msgid "In |chef 11|, ``Chef::Node`` now includes the platform introspection mixin, so you can use the following methods in attributes files:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:225
# 8fc1878aa27d416c9e9e8f4b7942f28c
msgid "Behavioral changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:226
# 1c0ee9369dfa484d8bb0382b3c4790e0
msgid "In |chef 10|, you can set a default or override attribute in a recipe, and it will overwrite the default/override value from any role/environment/attribute file. In |chef 11|, node.default always sets a cookbook-level default, and node.override always sets a cookbook-level override. Since cookbook-level attributes have lower precedence than role or environment attributes, a default or override attribute set in a recipe will not overwrite a value set by a role or environment."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:228
# ac8bffeea4674ef1a9176c688ada5652
msgid "For example, given code like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:238
# b845dcd6d8b44d5cb6e57a1120627add
msgid "In |chef 10|, the value of node\"app_name\" will be \"from-recipe\" and in |chef 11|, the value will be \"from-role\" (assuming there are no competing normal or override attributes)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:240
# 12eaa838bc9d49a281e36d6f0cbe18e0
msgid "Likewise, if you take any action based on the value of attributes when evaluating attributes files, be aware that attributes from roles and environments will now be used to compute the attribute value."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:243
# 88617ce8377142c18baf3e95b4980197
msgid "node.run_state Replaced"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:244
# 3c3a2e7bfc04437da2c901ba7e1e576b
msgid "In |chef 10| and lower, you could see which recipes had been evaluated by looking at ``node.run_state[:seen_recipes]``. ``Chef::Node`` was not the correct place to track this information, and the previous implementation resulted in bugs where a recipe like ``nginx::default`` could be loaded after ``nginx``, even though they are the same recipe."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:246
# b8b484321f374883acd6ffc4ea63d145
msgid "In the new implementation, this is tracked by ``Chef::RunContext``. The following example is no longer valid:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:254
# c4efbe1b89db435aa5491b3c4d3aba45
msgid "Use the following approach instead:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:264
# 34484e5b17f14ec1a3fa6f46c1d98471
msgid "Subtractive Merge Removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:265
# 66954085645a401ba6300ca3e78b577f
msgid "In |chef 10| and previous, you could use special \"knockout prefix\" attribute values beginning with ``!merge`` to make the deep merge algorithm remove values from arrays. This feature was very seldom used, confusing, and greatly increased the time and space complexity of the deep merge implementation. This feature is removed in |chef 11|, and attributes containing the \"knockout prefix\" will trigger an error upon merge."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:267
# d083ab69e497411f8a403fceda995755
msgid "If you need to selectively remove elements from arrays in your attributes, you should place this logic in a cookbook. Combined with other fixes to attributes in |chef 11|, you can put this logic in an attributes file, which is the most natural place for it."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:270
# a0f0d9a752fe442f8a277936a68a97dd
msgid "Chef::REST#run_request Removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:271
# 1ff0823cfd5b4177b349165b458a0d1d
msgid "The ``Chef::REST#run_request`` method is removed. Use ``api_request`` or ``streaming_request`` for low-level access, or (better) use the higher-level ``GET``, ``PUT``, ``POST``, ``DELETE``, and ``HEAD`` methods."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:275
# 57f4440927974ef4b65e4a6b7b2abe3c
msgid "Delayed Notifications Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:276
# b2f1f61981954bcca08664d66c6996ec
msgid "In |chef 10| and lower, delayed notifications are lost when Chef does not converge successfully."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:278
# 9dd640b120494624a211b19f95066e9c
msgid "This fixes addresses the following scenario:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:280
# bbbb4329974d46868e7fa58e67be6d32
msgid "The |chef client| reconfigures a service"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:281
# c0e1ab3648d54ccca566a8dea6db77f4
msgid "A delayed notification to restart the service is queued"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:282
# 7c3cf2a44c31491da17f14be981beb1a
msgid "An unrelated resource fails and halts the |chef client| run"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:283
# 491e7fef53fe4057a203e06fb34bd1dd
msgid "Subsequent |chef client| runs don't restart the service because it hasn't been reconfigured during that run."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:285
# c63cca4ee4b44f57a92e5551d7c49508
msgid "In |chef 11|, delayed notifications will run after the |chef client| run fails, and will be executed even if other delayed notifications fail. Conversely, if the |chef client| fails to configure a service and a restart action has been queued for that service, the service will be restarted and will probably be broken."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:288
# b371125748c6402d988df49e1dca9ba4
msgid "Single Notifies for Notification"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:289
# cd6ac2ff9bfa4aa6a96ca0f2d24c4908
msgid "Previously you could specify multiple notifications in a single call to notifies with code like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:297
# 08f5491ba5b74b8e8acb6b14aa4da864
msgid "Instead of the above, just put multiple calls to notifies in your resource declaration:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:308
# b662a33e184441fcac1e8e2a95fa7bb1
msgid "Changes for Data Bag Encryption"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:309
# e086c3950d20469d917e6283e4543961
msgid "In |chef 10|, objects in encrypted data bag items are serialized to |yaml| before being encrypted. Unfortunately, discrepancies between |yaml| engines in different versions of |ruby| (in particular, 1.8.7 and 1.9.3) may cause silent corruption of serialized data when decrypting the data bag (the version stored on the |chef server| is untouched and can be correctly deserialized with the same |ruby| version that was used to create it, however)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:311
# 80d58902318e4545b46ede9d11e0151b
msgid "Because the corruption is silent, there is no way for the |chef client| to detect it; furthermore, all workaround possibilities we've investigated have severe limitations. Additionally, we wanted to modify the encrypted data bag item format to support using a random initialization vector each time a value is encrypted, which provides protection against some forms of cryptanalysis. In order to solve these issues, we've implemented a new encrypted data bag item format:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:313
# b7b703e83be847eead241e098e2569c2
msgid "The user interface to encrypted data bags is unchanged. This change only affects the format of the encrypted values."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:314
# 49071ff805e94a7e8fa18e057e623cdb
msgid "|chef 11| clients will be able to read encrypted data bags created with either |chef 10| or |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:315
# 2e223bda116940a8b56fecd832a5bfed
msgid "|chef 10| clients |chef 10-18| and above will be able to read encrypted data bags created with either |chef 10| or |chef 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:316
# 620f21f63b6c413c88ecdcab4c5ffb7d
msgid "|chef 10| clients version |chef 10-16| and lower cannot read encrypted data bags created with |chef 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:317
# 9b87fa661c1e448b918f45962b5e9a96
msgid "|chef 11| knife commands will only create data bags in the new format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:318
# 0b29f3b6c54c4443b551e891e872f1dd
msgid "|chef 10| knife commands will only create data bags in the old format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:321
# 147ba92ffc5f46d6a40477f8f740cfd1
msgid "Diagnosing Compatibility Errors"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:322
# 673de47dd0a3423190b76dabbf462148
msgid "When trying to decrypt a |chef 11| format data bag item with |chef 10-16| or lower, you will see an error like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:332
# ec8e14f78de948e8a4769d3cf8be6bf1
msgid "The above error output is from |knife|; the |chef client| will fail with a similar error."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:335
# 842febfa67d74e90b170650c57418dec
msgid "How to Upgrade"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:336
# c709d6f440cd4dbfb7c1cee0b03ac0a7
msgid "Before upgrading on any workstation you use to create/edit encrypted data bag items, upgrade |chef client| on all machines that use encrypted data bags to version |chef 10-18| or above. Once your |chef client| fleet is upgraded, you can start using |chef 11| on your workstation (the box you create/update encrypted data bag items on)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:338
# dd0b9397c4e74d758d8e8489729dc8d5
msgid "In order to get the benefits of improved security with the new data bag item format, it's recommended that you re-upload all of your encrypted data bag items once you've migrated to compatible versions of |chef client|. To migrate your data bag items, simply edit them with ``knife data bag edit`` or upload them with ``knife data bag from file``, whichever you normally do. |chef 11| will automatically upload your data bag items in the new format."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:341
# 181fdcf153d5481390c5a53234bf83e5
msgid "Server Versions"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:342
# 0a232e6a8bf7495798b5564ed6601a2e
msgid "Because encrypted data bag items are implemented as a client-side layer on top of regular data bag items, the format change is transparent to the server. You can begin using |chef 11| data bags even if your server is version |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:346
# cdec663571d04fbfbd499f0c097a434a
msgid "Non-recipe File Evaluation Includes Dependencies"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:347
# 370d8f5826344e80bea74344b9817d13
msgid "In |chef 10| and lower, library, attribute, lightweight resource, and resource definition files are loaded in undefined order (based on the order given by the |ruby| Hash implementation, which differs based on version and vendor patching). In |chef 11|, these files are loaded according to the following logic:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:349
# 9b40f752dae0415caef8f46f76c1fbd6
msgid "The expanded run_list is converted into a list of cookbooks in the same order"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:350
# db11c3079fb44a55873496896f6ba684
msgid "Each cookbook's dependencies are inserted into the cookbook list before the cookbook that depends on them."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:351
# fd6b875bb96b4cf38c430a577d1ad2b9
msgid "Duplicates are removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:353
# a82925f5b3f640afabb5b1884a9a97fa
msgid "For |chef client| users, there should be no negative impacts from this change, as the previous order was essentially random. For |chef solo| users, the new loading logic means that files belonging to cookbooks which exist in the ``cookbook_path`` but are not in the expanded ``run_list`` or dependencies of the cookbooks in the expanded ``run_list`` will no longer be loaded (in |chef 10|, all non-recipe files from all cookbooks in the cookbook path were loaded). Additionally, |chef solo| users will now see ``CookbookNotFound`` errors when a cookbook is listed as a dependency in the metadata but not present on disk. The error message will look like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:362
# 79a39c8641784b3898b7dd4530ff966c
msgid "|knife| Configuration Parameter Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:363
# f116dd94fc8f4dbda555574cf4115b88
msgid "In |chef 10|, it is difficult and error-prone to ensure that configuration parameters are applied in the right order. Configuration should be applied in the following order:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:365
# 9d5494c0b4c94728bd71ac4efb413a60
msgid "Default values"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:366
# 5e49311633474cf99bb520e0fe88608c
msgid "Values set in |knife rb|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:367
# cccdc683b58b4146864d9e69a41de24b
msgid "Values passed by command line option"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:369
# 7a5258eb2cfb43059164a361695995ed
msgid "Because of the way the the ``mixlib-cli`` library is implemented, it is difficult to determine which values are defaults and which values are user-supplied command line options. |chef 11| takes advantage of a new mode for ``mixlib-cli`` that keeps default values separate from user-supplied values. In the configuration process, |knife| automatically applies config:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:371
# 692aab41157941fc8b2b23ca220f5098
msgid "Default values set in the mixlib-cli DSL"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:372
# 4c0d9c7e602e430085eed4c468f789f9
msgid "Configuration settings under Chef::Config[:knife]"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:373
# c6b20625c20142a3b17cc300387f715e
msgid "User supplied values parsed by mixlib-cli"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:375
# 02b592ba417f42218d9b30c9697168bf
msgid "Depending on how |knife| plugin authors have worked around the |chef 10| behavior, it's possible that this change will lead to incorrect values being used for configurable parameters. The |opscode|-maintained cloud plugins have been reviewed and should work correctly on both |chef 10| and |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:377
# 2534475e7884452c8b4cc5726b980e10
msgid "When writing |knife| plugins for |chef 11|, plugin authors are encouraged to define default settings using the ``mixlib-config`` DSL, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:387
# 5bd6e31247494596a4a2a62932d65716
msgid "and access configurable values via the config hash with symbols, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:394
# 7608062c9d7145d89c067b9461e5e96b
msgid "If compatibility with |chef 10| is required, accessing configuration via a helper function like this will work correctly, but only if default values are NOT set with the ``mixlib-cli`` DSL."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:403
# d89184b827d340858b0b5da6b40c608b
msgid "Default values must be managed manually until support for |chef 10| is removed, for example, like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:409
# 0911ae82946d40ef948d6fdc897e843b
msgid "Further information is available in the ticket: CHEF-3497 - Allow |knife rb| to implicitly provide all |knife| related options - FIX COMMITTED"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:413
# 7d96e53f797f4d47a80fb92e09b2067e
msgid "Remote File Mirror Support May Break Subclasses"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:414
# 18b1b675548f4c18bbc56fd9ab420430
msgid "In |chef 11|, |resource remote_file| now supports fetching files from a list of mirrors. As a result, the ``source`` parameter of the |resource remote_file| resource is internally stored as an array. This change is transparent to users of the |resource remote_file| resource; however, any library code that subclasses the |resource remote_file| resource---for example, to provide |amazon s3| support---will likely need to be updated to support and/or work around this change."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:416
# 92cadd7ff90847d58779f39430d0e2b4
msgid "To effectively revert the change so that the ``source`` parameter is a string, add code like this to your resource:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:428
# 7eef5e358b8b4cb4be60343cdcfdd763
msgid "Alternatively, you can update the provider to handle the case that the ``source`` parameter is an array."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:431
# 2465c78a8313435cb7619e23dcd62472
msgid "The Server"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:432
# df4b7928c7ce454588f9b70d573d7677
msgid "The following items are new for |chef 11| server and/or are changes from |chef 10|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:435
# c464afc59dfd48debfc96f05bebbf4b7
msgid "The /clients endpoint returns |json| with a |json| class for edit (PUT) operations"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:436
# f0c6bcad512045df9dea00e52f156cef
msgid "In |chef 8|-|chef 10|, the server's response to a ``PUT`` to ``/clients/:client_name`` does not include the ``json_class`` key, though other calls, such as ``GET``, do include this key. The client-side |json| implementation uses the presence of the ``json_class`` key as an indication that it should \"inflate\" the response into an instance of that class (otherwise, a plain hash object is returned). As a result, code that modifies a client (such as requesting a new key from the server) and parses the response with the |ruby| 'json' library must be modified to accept a ``Chef::ApiClient`` or a hash."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:438
# 55ce254759444589bf4fcc713d4b69de
msgid "This change breaks the ``knife client reregister`` command in |chef 10-16| and earlier. Forward compatibility is introduced in |chef 10-18|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:441
# 1202964c161f4a07b1ab2da254e70463
msgid "The admin and validator flags are exclusive"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:442
# dcc1d11accd74f28816c49b329cd2eb0
msgid "In |chef 11|, clients may not be both admins and validators at the same time. In the current alpha release, you can set the admin flag on the validator but it has no effect. In a future release, you may receive an error when attempting to set the validator flag on a client, or when attempting to create a client with both flags set."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:444
# e1b7ff5b55a44db2bb71690ee8b130d8
msgid "Exact behavior may change before release or in a minor version release after |chef 11|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:447
# 16d2d8601833487e8b8cbae416e89701
msgid "Strict checking of top-level |json| keys"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:448
# 79b0ac0cf6a843ebaee012be7202ffdb
msgid "All API endpoints that process requests to create or update an object validate that the |json| sent by the client does not contain unknown top-level keys. A 400 error response will be returned if unknown top-level keys are encountered."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:451
# b1b53a883e3642b98ccf0a2677cccc34
msgid "Creating an empty sandbox is now a 400 error"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:452
# 17ac36b58c4a4f8da7c1dc846c01b936
msgid "Sandboxes are used as part of the protocol for uploading cookbook content. An empty sandbox cannot be used for anything. Creating such a sandbox may indicate a logic error in client code and is (mildly) wasteful of server resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:455
# ab87f8eab046407284c1d83262ac5241
msgid "Error messages included in server error responses have changed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:456
# 38b16b433fed4bbe98dc656f6e6aebb5
msgid "As part of the move to |erchef|, error messages have been made more consistent. Code depending on specific error message text may be broken by these changes."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:459
# 9a1bc95d754148f29f832af80e480ef1
msgid "Some error codes have changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:460
# 1a654345f5d54e44918841de81683df5
msgid "In a number of cases, |erchef| returns a more specific error status than the |chef 10| server. For example, returning 400 instead of 500 for some bad request data situations."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:462
# 234ddfae8f4547caba437c073b9ece83
msgid "The ``chef-server`` cookbook has been completely rewritten to support an omnibus |chef server| install"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:465
# ded32c82648e42459b34630c2723c577
msgid "knife reindex is not supported in |chef server 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:466
# 727dc5f01bbf4bba835aef5e445ff8c2
msgid "You can trigger a reindex of object data using ``chef-server-ctl reindex`` while logged into the |chef server|. The |knife| command is still present in the |chef 11| |chef client| for use with a |chef 10| server."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:469
# 09a465ed43444b4d87683107e21f77b2
msgid "OpenId support has been removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:470
# 8f1293ae76a9463dbc7284b60fe14378
msgid "Support for |open id| is no longer available to the |chef client|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:474
# c0e8c783cb8b475da2f99b13a98bfd96
msgid "The Ruby server code has been removed"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:475
# 94d6223005f244568034163b584e3d5a
msgid "As part of the move to Erchef, the Ruby API server code along with classes not needed by the client-side have been removed from the main |chef repo|."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:478
# 38af44c4e1c842eaa275dc2c361d9277
msgid "knife cookbook delete --purge is ignored by |chef server 11|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:479
# aa0241a61403469798f3fa562d4f2166
msgid "In |chef 11|, the server keeps track of which cookbooks use a given piece of cookbook content (via checksum). When a cookbook version is deleted, associated content will be deleted if not referenced by another cookbook version object. Therefore, there is no need for a purge operation when using the |chef 11| server."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:483
# 25caf90eaf5d408fa7f030252d7eb5f1
msgid "Other Notable Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:484
# 720a73e4d35143308aea6b6592d03722
msgid "Changes that are not expected to be breaking, but are notable improvements."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:487
# 2989a347c53d42ec9dac94da96c2bcd7
msgid "Output Formatters are the Default Output when Running in the Console"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:488
# 8b768719bf464469abc29436508a77d7
msgid "In |chef 11|, when output is to a TTY, the |chef client| will automatically use output formatters to display information about what it's doing. To accommodate this, the default log level is now ``auto``, which evaluates to ``warn`` when running with a TTY (so log messages will not obscure the output formatter output), and ``info`` when running without a TTY (so you get important information about changes being made to the system when output formatters are not active)."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:490
# cd40d147d2e84d3b8a62f1bb58a04fbc
msgid "If you prefer one type of output over the other, you can force the |chef client| to use output formatters or logger output with ``--force-formatter`` or ``--force-logger``."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:492
# cb135a84dc874f2a8285d960fcc8406e
msgid "In previous versions, bootstrapping templates would generally configure the log level to ``info`` in the |client rb| file. You may wish to change this to ``auto`` or remove the setting from your config file entirely."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:495
# ff25cc4bf0c14c74a64798f141680d64
msgid "Inline Compile Mode for Lightweight Resources"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:496
# b90bc0f40ff84072af13cb582af663ab
msgid "In |chef 11|, there is an optional \"inline compilation\" mode for lightweight resources, which is intended to make notifications work correctly for lightweight resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:499
# 1b4c8de6bdf744a390d102f46e82f172
msgid "Without Inline Compilation"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:500
# e0e293ab156944c4bd3f447daf1ac386
msgid "When not using inline compilation (it is disabled by default), any resources created in a lightweight provider's action blocks are inserted into the top level resource collection after the lightweight resource it belongs to. For example, given a resource collection like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:502
# 7409e51266604d3c8109fb6bb4a2c74a
msgid "top_level_resource_one"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:503
# 39563fbfde634856850fd8bcb17fddf9
msgid "lwrp_resource"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:504
#: ../source/breaking_changes_chef_11.rst:512
# 5395bef365d64847866a514ba59fcc3c
# 4e1dd51120554a6d87395b35f01a373b
msgid "top_level_resource_two"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:506
# c597695404184de1a81e0191aedbd29f
msgid "When ``lwrp_resource`` is executed, the resource collection will then be modified like this:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:508
# ef4598bfb1b8495296ef56dbc053fb9e
msgid "top_level_resource_one (already processed)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:509
# 03e9069a1a5948009518f99fa01e0cd3
msgid "lwrp_resource (already processed)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:510
# af95995a9da54750a1ed112f36322c88
msgid "embedded_resource_one (created by lwrp)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:511
# bcc6286f702c44ebb87d5a2c0c5f906c
msgid "embedded_resource_two (created by lwrp)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:514
# 653509382dc5486f9f8c2df51d0cc6af
msgid "This means that the ``lwrp_resource`` cannot correctly set its updated status based on the embedded resources, because it has finished executing before its embedded resources are processed."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:517
# 4afcc88f685d46ffb252ab2033703fc7
msgid "With Inline Compilation"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:518
# 09bdba0b3e3443c2a902e00481a09f37
msgid "Inline compilation is enabled by calling ``use_inline_resources`` at the top of your lightweight provider file. When this is enabled, the code in your action block is executed in a self contained |chef client| run, with its own compile and converge phase. If any embedded resources have been updated, the top-level lightweight resource is marked as updated, and any notifications set on it will be triggered normally. Within the embedded |chef client| run, resources in the top-level resource collection are invisible to the embedded resources, so embedded resources are not able to notify resources in the top-level resource collection."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:521
# c11082b5b5144b719028a3764556f7f3
msgid "LWRP Class Hierarchy Changes"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:522
# 61587b0639e14b6687ade1c08a83fbaf
msgid "In |chef 11|, lightweight resources resources now inherit from a ``LWRPBase`` resource instead of directly inheriting from ``Chef::Resource``. Likewise, lightweight resources providers inherit from a ``LWRPBase`` provider instead of ``Chef::Provider``. This should not impact existing code for lightweight resources."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:525
# 573c2b1dd93c495eac21b24c4831881e
msgid "Partial Support in Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:5
# d140870aef8c4788a8042f2072cfc537
msgid "A template can be built in a way that allows it to contain references to one (or more) smaller template files. (These smaller template files are also referred to as partials.) A partial can be referenced from a template file in one of the following ways:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:7
# eea113af7adc40b7a54ee27980c15995
msgid "By using the |ruby| ``render`` method in the template file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials.rst:8
# 3e0565fbf608498eb251cb466d68a49d
msgid "By using the |resource template| resource and the ``variables`` parameter."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:529
# e838c28e96d040d69d0e2f15839ecf20
msgid "``render`` Method"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:5
# c7a5a9cde8b348f1a59079bacbefa56f
msgid "Use the ``render`` method in a template to reference a partial template file with the following syntax:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:11
# 526b8d3eef184119a8de2f71d4fb8509
msgid "where ``partial_name.txt.erb`` is the name of the partial template file and ``:option`` is one (or more) of the following options:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:17
# df20eccc66b2478e890944828cb5bc4c
msgid "Option"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:18
# e2b20bbfc3bb40b2b62ed4fbb96e063e
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:19
# e108ff5bcf7944738f2c9e83d7e8c05e
msgid "``:cookbook``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:20
# 8f594dddb54345e0b6de43c5046c926d
msgid "By default, a partial template file is assumed to be located in the cookbook that contains the top-level template. Use this option to specify the path to a different cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:21
# bccfe8788e144f9e8576e1ed2666cd25
msgid "``:local``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:22
# 3a6c06a8f138468ab9cf98df87cb6805
msgid "Indicates that the name of the partial template file should be interpreted as a path to a file in the local file system or looked up in a cookbook using the normal rules for template files. Set to ``true`` to interpret as a path to a file in the local file system and to ``false`` to use the normal rules for template files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:23
# 2a55c98cbf2e4542a52058dee8a907e3
msgid "``:source``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:24
# 74c32e114a8d4dfca31a38531a3450f8
msgid "By default, a partial template file is identified by its file name. Use this option to specify a different name or a local path to use (instead of the name of the partial template file)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:25
# 12400a78c683408e961ed7cf3030a2d2
msgid "``:variables``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:26
# c2f497bc7de6486ba0e5bd89839ec5e2
msgid "A hash of ``variable_name => value`` that will be made available to the partial template file. When this option is used, any variables that are defined in the top-level template that are required by the partial template file must have them defined explicitly using this option"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_render_method.rst:28
# 845791cc44da4919b85277aa54e82472
msgid "For example:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:533
# d4fac1c706c64c3cbbbb0d4142edc6bd
msgid "Template Resource"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_template_resource.rst:6
# f69fb79f2d9a40588bf63b20049d4d2f
msgid "The |resource template| resource can be used to reference a partial template file by using the ``variables`` parameter, the ``:partials`` option, and a |hash| of partial template files. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_template_partials_template_resource.rst:18
# 60789b5226bf48a4a5de8d235442bd5f
msgid "where each of the partial template files can then be combined using normal |ruby| template patterns within a template file, such as:"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:537
# 521da34c12114b36bcd83017a09e16ee
msgid "|chef apply|"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:538
# 1b5320e6fdc24cba8b452697ee9355c3
msgid "There is now a ``chef-apply RECIPE`` command that will run a single recipe with no ``JSON/run_list/config`` file required."
msgstr ""

#: ../source/breaking_changes_chef_11.rst:541
# 4e64f4b9212849e9b00bde034f6fdd49
msgid "Miscellaneous"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:543
# 21183d06ce904875ae654281263ef471
msgid "Locking is used to prevent simultaneous runs on |unix|-like systems"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:544
# e82e10c4c86645719790423c4615ad65
msgid "|subcommand knife search| assumes node search when the object type is omitted"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:545
# c40983ec108c4046b5ddb972aed77666
msgid "|subcommand knife search| will search over roles, tags, |fqdn|, and IP addresses when the given query is not in |apache solr| format (does not contain a colon : character)"
msgstr ""

#: ../source/breaking_changes_chef_11.rst:546
# 266ab1cdea624c049a5bdc84be157dc8
msgid "|knife| essentials (|subcommand knife upload|, |subcommand knife download|, |subcommand knife diff|, and so on) have been merged into |chef 11-0|"
msgstr ""


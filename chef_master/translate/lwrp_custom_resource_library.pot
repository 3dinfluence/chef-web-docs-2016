# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/lwrp_custom_resource_library.rst:8
# c53ae53c874344549a32a7546f1af684
msgid "Library Resources"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common.rst:5
# f2a158d69e47469eb54e114908347aef
msgid "A resource defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common.rst:7
# 0163745479a34575a21c73af9972b978
msgid "For example, a resource can define a package to be installed, whether a service should be enabled, restarted, or both, which groups, users, or groups of users should be created, the location in which a file should be created, the template that is used to create that file, the name of a directory, and so on."
msgstr ""

#: ../../../desktop/chef-docs/includes_cookbooks/includes_cookbooks_provider.rst:4
# 69d84a58faa04f35a641f80dab7845ee
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state. These steps are de-coupled from the request itself. The request is made in a recipe and is defined by a lightweight resource. The steps are then defined by a lightweight provider."
msgstr ""

#: ../../../desktop/chef-docs/includes_lwrp/includes_lwrp_custom_resource_library.rst:6
# 78812f06ab7046d4b1b7240b7bf8a8a6
msgid "A resource can also be defined in ``/libraries`` directory. Some advantages of this approach include more control over how resources behave in the provider, the ability to control the name of the resource directly, and more options available for writing tests. The resources and providers for a library resource, similar to lightweight resources (defined in the ``/resources`` and ``/providers`` folders) typically have a separate file for the resource and the provider, but this is not requirement. The main disadvantage of this approach is that resources defined in the ``/libraries`` directory are not able to leverage the |dsl recipe|. That said, a resource that is defined in the ``/libraries`` directory may leverage core |chef client| resources by using the following syntax:"
msgstr ""

#: ../../../desktop/chef-docs/includes_lwrp/includes_lwrp_custom_resource_library.rst:12
# 6f0f10ed53014cd48c05d8febfc2ea97
msgid "or:"
msgstr ""

#: ../../../desktop/chef-docs/includes_lwrp/includes_lwrp_custom_resource_library.rst:18
# 99fda8d775ec4616ad5acef3d1501574
msgid "For example, the following definition leverages the |resource directory| resource to create a new directory, and then evaluate that within the context of the custom resource:"
msgstr ""

#: ../../../desktop/chef-docs/includes_lwrp/includes_lwrp_custom_resource_library.rst:31
# b6faf12dec3341329022756b5db305c4
msgid "The following definition uses the |resource template| resource for |debian|-specific cases, but then the |resource link| resource for everything else:"
msgstr ""

#: ../../../desktop/chef-docs/includes_lwrp/includes_lwrp_custom_resource_library.rst:54
# d3da9a5d31bb4ad7ad4970350b814294
msgid "Otherwise, a resource defined in the ``/libraries`` directory is done using |ruby|, is added to recipes as if it were any other resource, and is processed by the |chef client| in the same way as any other resource. See the ``/libraries`` directory in the `database <https://github.com/opscode-cookbooks/database>`_ and `runit <https://github.com/opscode-cookbooks/runit>`_ cookbooks for complete examples of how to use this approach when defining a resource."
msgstr ""


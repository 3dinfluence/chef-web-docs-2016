# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-07 08:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/auth_headers_and_endpoints.rst:34
# d3ff1b36dd38405f8c9b8a5c4cb38c14
msgid "Headers and Endpoints"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server.rst:4
# be5ac453aca542e88c3bf71ad47fe122
msgid "The |api chef server| is used to provide access to objects on the |chef server|, including nodes, environments, roles, cookbooks (and cookbook versions), and to manage an |chef api client| list and the associated RSA public key-pairs."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers.rst:4
# 00999266839b4c62aa32caae498678fd
msgid "Authentication to the |chef server| occurs when a specific set of HTTP headers are signed using a private key that is associated with the machine from which the request is made. The request is authorized if the |chef server| can verify the signature using the public key. Only authorized actions are allowed."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers.rst:6
# 1d4436beeaa04a8da02b2ab93538c7f0
msgid "Most authentication requests made to the |chef server| are abstracted from the user. Such as when using |knife| or the |chef server| user interface. In some cases, such as when using the ``knife exec`` subcommand, the authentication requests need to be made more explicitly, but still in a way that does not require authentication headers. In a few cases, such as when using arbitrary |ruby| code or |curl|, it may be necessary to include the full authentication header as part of the request to the |chef server|."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:41
# cb3d06a3c94a4f7c9596832819bcc772
msgid "Header Format"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:5
# c6bd06512fac4aac9d45780c3df2ad1b
msgid "All hashing is done using |sha1| and encoded in |base64|. |base64| encoding should have line breaks every 60 characters.  Each canonical header should be encoded in the following format:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:15
# 51bd52611bbc425d83e71c003e832222
msgid "where:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:17
# 1aba0978a08745b3bf730d2ea2317a63
msgid "``HTTP_METHOD`` is the method used in the API request (``GET``, ``POST``, and so on)"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:18
# 0a321d9b42bf4c7cb38f5549bf71826d
msgid "``HASHED_PATH`` is the path of the request (``/name_of_endpoint`` for the open source |chef server| and ``/organizations/organization_name/name_of_endpoint`` for |chef hosted| or |chef private|). The ``HASHED_PATH`` must be hashed using |sha1| and encoded using |base64| and must not have repeated forward slashes (``/``) or end in a forward slash (unless the path is ``/``)."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:19
# 8c2c7afd458a4b0089eb1740479d7713
msgid "The private key must be an RSA key in the SSL .pem file format. This signature is then broken into character strings (of not more than 60 characters per line) and placed in the header."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_format.rst:21
# 774f802b06a64abcb2b0d351e1fe4a4c
msgid "The |chef server| decrypts this header and ensures its content matches the content of the non-encrypted headers that were in the request. The timestamp of the message is checked to ensure the request was received within a reasonable amount of time. One approach generating the signed headers is to use `mixlib-authentication <https://github.com/opscode/mixlib-authentication>`_, which is a class-based header signing authentication object similar to the one used in |chef|."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:45
# bd1d52b38498432ebd50bee5a0a6da75
msgid "Required Headers"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:46
# 79e3ea842d70463196b859dd8cb48626
msgid "The following authentication headers are required:"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:52
# f2e75afd32ad46ed99ca49ab2110f425
msgid "Feature"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:53
# 96eed191ce71409fa223f57c4a6c6834
msgid "Description"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:54
# 449af98cb90f4932b07a7ffd2215d1c2
msgid "``Accept``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_accept.rst:4
# 079afd5c94d64ddaaf729829b88bfd68
msgid "The format in which response data will be provided, such as ``json``, ``xml``, ``html``, and so on. This header is not required, but is often included to ensure that response data is returned in the desired format."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:56
# a9239fa1409a4cb5a24aab724673bdc4
msgid "``Host``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_host.rst:5
# 209ab0f892b64412bc29463db349fc2d
msgid "The host name (and port number) to which a request is sent. (Port number ``80`` does not need to be specified.) For example: ``api.opscode.com`` (which is the same as ``api.opscode.com:80``) or ``api.opscode.com:443``."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:58
# 5a29ec770e2147b19c03c95000319267
msgid "``X-Chef-Version``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_chef_version.rst:5
# 51f82e86d18442e2b4a8254436342b7c
msgid "The version of the |chef| executable from which a request is made. This header ensures that responses are in the correct format. For example: ``11.0.4.x`` or ``0.10.x``."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:60
# c5ca889458aa425bbd338703b8578544
msgid "``X-Ops-Authorization-N``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_ops_authorization.rst:5
# 1e0c2aacdb454b8a9f38c0a6cc422a33
msgid "One (or more) 60 character segments that comprise the canonical header. A canonical header is signed with the private key used by the client machine from which the request is sent, and is also encoded using |base64|. If more than one segment is required, each should be named sequentially, e.g. ``X-Ops-Authorization-1``, ``X-Ops-Authorization-2``, ``X-Ops-Authorization-N``, where ``N`` represents the integer used by the last header that is part of the request."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:62
# 09ba5421150c4273b9850a5dfc18a0b3
msgid "``X-Ops-Content-Hash``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_ops_content_hash.rst:5
# dba8ce88d3b9439c9ff5a488733f69c0
msgid "The body of the request. The body should be hashed using |sha1| and encoded using |base64|. All hashing is done using |sha1| and encoded in |base64|. |base64| encoding should have line breaks every 60 characters."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:64
# d658a5f0d26f4197a07ca4a11bf13412
msgid "``X-Ops-Sign``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_ops_sign.rst:5
# 3f168a0a335c46719b9a9bd02b5443cf
msgid "Set this header to the following value: ``version=1.0``."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:66
# b1b65e0f883b41e4a820d52686d37c56
msgid "``X-Ops-Timestamp``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_ops_timestamp.rst:5
# 9469ea046f8a4f29b6c0ff68ad3a6e70
msgid "The timestamp, in |iso 8601| format and with |utc| indicated by a trailing ``Z`` and separated by the character ``T``. For example: ``2013-03-10T14:14:44Z``."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:68
# 0ec965417a5040bf81c9e2a96afab0c6
msgid "``X-Ops-UserId``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_x_ops_userid.rst:5
# bec9f7ba45f04136882e0e7e02c0a738
msgid "The name of the API client whose private key will be used to create the authorization header."
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:72
# ee9c38b1f39f40bfacfa1ec1eb024d98
msgid "Example"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_headers_example.rst:5
# 8c0c08a9cdaa4cd88ebbbefc2a96b53b
msgid "The following example shows an authentication request to |chef hosted|:"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:76
# dc03cb4143164cf8ba57b29fffc9af96
msgid "Endpoints"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:77
# 7c2a803ad02d445fb916061ff0312399
msgid "For |chef hosted| and |chef private|, each authentication request must include ``/organizations/organization_name`` as part of the name for the endpoint. For the open source |chef server|, each authentication request must include ``/clients`` as part of the name of the endpoint. For example, the full endpoint for getting a list of roles on |chef hosted| or |chef private|:"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:83
# 371a08f989404829a77d3a492c836655
msgid "and for the same request, but to the open source |chef server|:"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:89
# 50cae4afdc2246c0b65031c9079c5e41
msgid "The |api chef server| has the following endpoints:"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:91
# a187d74795de4812850a512d94d1f989
msgid ":doc:`api_chef_server_clients`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:92
# 4a847c13d02b431ca5590ada347e6634
msgid ":doc:`api_chef_server_clients_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:93
# 607687a4f03f401ca9fd5fcdc5feccb4
msgid ":doc:`api_chef_server_cookbooks`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:94
# 0d0296c2e9e245a1b45d871f1dbde055
msgid ":doc:`api_chef_server_cookbooks_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:95
# 985e4cbf508b49eda5fe882bca8b7141
msgid ":doc:`api_chef_server_cookbooks_version`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:96
# d693a0ad02b049d882b5fe3b541503e3
msgid ":doc:`api_chef_server_data_bag`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:97
# a11f1cd08fca43c4b73fee695fa49fba
msgid ":doc:`api_chef_server_data_bag_item`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:98
# 40acf6cadade43cb88a080a3ad8fedd6
msgid ":doc:`api_chef_server_data_bag_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:99
# 843387545c9247fb8f9ff88e09dbd442
msgid ":doc:`api_chef_server_environments`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:100
# 9aa64cb598b047219647627f67604abf
msgid ":doc:`api_chef_server_environments_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:101
# eda77b7db5cd4535ab1a643d3cc18e88
msgid ":doc:`api_chef_server_environments_cookbook_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:102
# c014adaa0749434192dca7f60b0fdf89
msgid ":doc:`api_chef_server_environments_cookbook_version`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:103
# 54b7a8f59d1547acab4ce027b53da80d
msgid ":doc:`api_chef_server_environments_cookbooks`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:104
# 5e390245a58345b989f0d96defa66a45
msgid ":doc:`api_chef_server_environments_node`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:105
# 9646bb6faac24d799a2e4a3a442e1aa0
msgid ":doc:`api_chef_server_environments_recipe`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:106
# 73a38013f9e7497c8b81b507b1c8d8e6
msgid ":doc:`api_chef_server_environments_role`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:107
# 309e2b03c163437aae55b143bc5450ca
msgid ":doc:`api_chef_server_nodes`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:108
# 84a6a009c9814fb3b6e51a8d6fd3b5f0
msgid ":doc:`api_chef_server_nodes_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:109
# 62bb577c952a410391965a2ff1689b88
msgid ":doc:`api_chef_server_roles`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:110
# 5e6c6ae90dab44d9bd3ae1016ca1f0c2
msgid ":doc:`api_chef_server_roles_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:111
# 1cecd05092cd43bcb7885baee01a8c68
msgid ":doc:`api_chef_server_roles_name_environments`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:112
# 537d1535ddbe4971877ce4406b421b02
msgid ":doc:`api_chef_server_roles_name_environments_name`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:113
# 896d11963c084638a62d77304397eb44
msgid ":doc:`api_chef_server_sandboxes`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:114
# a8b946c68e7449bbba03294f621497ac
msgid ":doc:`api_chef_server_sandboxes_id`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:115
# 47594511e9784d09a516dbc47dc78e67
msgid ":doc:`api_chef_server_search`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:116
# 1f63c9ef3a6e4d358b0cd40b3b2d2a70
msgid ":doc:`api_chef_server_search_index`"
msgstr ""

#: ../source/auth_headers_and_endpoints.rst:117
# 9a848bd9191649fe9345b3a6b69995e2
msgid ":doc:`api_chef_server_user`"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:3
# ef0dc61a499149ba85beef2a6dd6d12b
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:5
# c3319d9a046a4299ad461d09f78cab8d
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# ecb91704b08f4c53b5a2d3f177d6f925
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# ddd248ccd43144a9b1665144d36da0e3
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:10
# ffbf1977162f4f9eb99c557071b819d6
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:11
# dca4fcb5ae75463d80ea4a5ff9fcae25
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 1cea922f63234d39b8332ad946cf8fbe
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:31
#: ../source/chef_overview.rst:48
#: ../source/chef_overview.rst:67
#: ../source/chef_overview.rst:96
#: ../source/chef_overview.rst:115
#: ../source/chef_overview.rst:132
#: ../source/chef_overview.rst:151
#: ../source/chef_overview.rst:170
# 9ad90f12bd224014baa9aa62a1ddb7e0
# c9447a18e2ca468fa22d6002b8bd96d7
# 6799c1700ea247debfb7f1c9d5618455
# c52370e684354f709584d628402fdde7
# 6965a14124d048b1955fa4373f2d5e7e
# 0c80ff2d38f0490190cfb7cb3d28fb5a
# 0e2d71d3cb6c4dfca18b0aa8247388b7
# d545fb9a9bf64e94b1e976b85d4baa4f
# 23e77d2f121b4c9295d1aa4f1dac8c84
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:32
#: ../source/chef_overview.rst:49
#: ../source/chef_overview.rst:68
#: ../source/chef_overview.rst:97
#: ../source/chef_overview.rst:116
#: ../source/chef_overview.rst:133
#: ../source/chef_overview.rst:152
#: ../source/chef_overview.rst:171
# d0db6cc7c905457684c4ae08e98adddb
# 13c356aec19e495d86fde7226790bf0e
# 545dd52b520c4ea18f661866d8e97e8f
# 427df3bd66fb43afaccf1e8485f13d00
# 21315cd5db854c77b548face53cf8a1a
# 512eb243a8f84f42ae6ba72a11ab17b6
# 698dc5589f6f423f99486700638dd646
# 167c6d53e88f4957a371f86a581e5b28
# 7fe3fdf3259f46438cb9c80060e58dae
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# a09b982783184e228dd7e06323052f1c
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 4b6cbb0f66694c448f8eb7cd770fb7d3
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 1ad654cad3fe4055bc6462f5cab131a9
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# b72fc91344cb4cfda2e287f85c60e7de
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# 1f9be1dcb08b422f887735b49775373e
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# 0853aded69ea49998c2e871e35c1dff0
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# b76d582d6b4f44a298de9426aeb1df25
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# c363be093675488abae7d86abae1e47a
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:17
# 6995c988dafa48d5885da94f6b550527
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:19
# 6d609af43fde4695975d51d523b53c64
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:22
#: ../../includes_chef/includes_chef_manager.rst:6
# be8624318e28453d917c579a1904bdd1
# f5a67ad89a704867a070ed3bff0609f3
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 0536600525f144c38b4c87ed63cd9f66
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:25
# a72457a51b6642cdb97e90012a8d91e9
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# e145110a40d54a7a88d309900e82f274
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# ba56f37d7bad40a6b961b6a1252954fa
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 017405a9aa094888bbdd03ce93fa7688
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 1ffc5ad1b22f4d9cb9fa62173c3b99fc
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:42
# 96c78dbc96064972a8c79c2a3a3a3723
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 9ea45d0b56f04278acde724a2e57b90f
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# d12e9d557fc346b6895cdb458d499f02
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# f2c5bbd1ef19416980ca1466a0fe9f35
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 8ec6308c025c4c03ac83242e5a6c1218
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# d0f6f43314b74321a89b01bbe8cf43f5
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 16e316279be0409b8fb58e7b3a504afd
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# bf1bf4b37b8744ed9cd9be5cef321319
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 3ca00e79577b4706b7ca5513506f2dbd
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# ac1c90503f7844de8e251b333b7b6ad6
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# e8310a7719dc4cc19beab9c87c155fec
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 6f870f63f66f4329b0febb3abc9761a5
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 5f7e670401684c2cb36939b941f27a1d
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 52932f491d0a4190a1d03909f6ad75e6
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 621561a91ba84cf2952d3d424342bb15
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 0b28c20ef4244a49b37440cd70bc3ad1
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# a16b76bfa12f492eb9f2ac06cabee9be
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# f7a3551af473418abb0fa4927d1884b2
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 2df250e152a746afb68a4aea330f8eea
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 5422b3f698c042cf92633a32edde052b
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:58
# fa15ba10d2a24b0c917d42985add85ef
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# ba2adf7a058348d686ccc30047f07542
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 483090edebd24bc3b1974ba39ae303da
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# f6306ae61af04019a460718e0ffd4785
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# ddb17a1206f5475abb7f209e882e1657
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 9db4c4cd39124b6a88bb92bc3a85e4eb
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 32e70290472a4b5b8de2d34162fcde87
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:61
# 2ede0f5d9ce44f07b49107a80ae515ad
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:70
# 7cf0538c9f3a4b56a76e5db8cbff6dc3
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:72
# b60056e57bb447af9b1b19fc9cfb1c75
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 4e3ae0d8d0ae4594be738daa644771df
msgid "Use |kitchen| to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 9c5c45717d5f4609bc9c24a296c65f9f
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 547de56aa4f14e32b1ddee12e62908ed
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# ff36116221424790a3c6aa54f751b0bf
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# 3e2d6a74167849b9acc4e6b70a51fec8
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# 0ce00773f03d4aa5b7182349763a211e
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# 9fc510026ec84a53a5eabed2e23cd6d6
msgid "Runs the |chef client| on a local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# 89a70143322949a987da709e9c2fcfba
msgid "Uses |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# ad0a7c6e50a84ea08316fe6df0e97d2e
msgid "Is an extension of |rspec|, a |bdd| framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# e3292d6b759644c0bb4bfcf6b8d18240
msgid "Is the fastest way to test resources and recipes"
msgstr ""

#: ../source/chef_overview.rst:78
# cba0fdd7c99d4d47857154e2a7d079fd
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# ee61a9b127a44c78b55b949cf105a6c0
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# d212f8dda07a44c8a4671f897767b6e0
msgid "Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:8
# 9ae80f3676ac4490ac7b7031ba27e5f8
msgid "The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo_structure.rst:5
# c6b18b7593404b2da7b8e2a1cbd91aeb
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:84
# 93b7d2a22c81453b894f36d250e127e6
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:87
# 1553de0d487d4b66832f28831137225a
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 65c401e0a1ab41f48560142511e9dd2f
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:90
# 2d4861344dd9497585cf412236d1f906
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 230633205c5d462386edc19d6bc13268
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 689fe0b0c1a2444bbfdb7164aa5e9858
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# 73a1270d8abd4b219fb94900c402c3d2
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# f4e1816f94ef46a5af0c668967feee2a
# 420c78aeede64ce3b36f441f2e6566c4
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# d151383d7ccd40969ea93e1059a70437
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# ecd221ce21d94a0a94aa102ee92891cf
# 458f0777d6f84498998f9cc45d19cb0b
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# 57215e8cdea9457e874ed06f996ac5cc
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 3e581931f01140e8ae9a5007635104c9
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 1cf7ab8ffd0640a48d23d34509756e6d
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:106
# ee1c9a2dad6f4e1383f29402352bd235
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# e51abd62eacf4b4b9338e409470121ab
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:109
# 636c890849be4cc19202e39a6093a0be
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# f2d275559df340a38110f3a85a296a18
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# eb83c7da04964186a8eaec467691f9c9
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 820c7ba3f72348cb894c8757f9d396db
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 0dda704bd2b5472bbb0bc04b8b4499cc
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# 8bc0ce146e3f437a9a44ba2d3405f4d0
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# d9a1fcfff6cf44539c3d89baee79d5da
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# f80c40b9d7d84f958f6f8405f58ac690
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 478016f30aad491383e89f514690823a
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 4ce751fb5df54e8189edbea34ecb62e2
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 400a9f365a4948a29d3a4e902a36bf9a
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 6e632a2bc1ed451c9a58c5c29a30c6a3
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 5a331ec0a2c9459e848c8b5473513ffe
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# ce464e259e344e32a1514036c6044de9
msgid "A run-list defines all of the information necessary for |chef| to configure a node into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 019f82b4d39d41408b1c19aeb8dcacb8
msgid "An ordered list of roles and/or recipes that are run in the exact order defined in the run-list; if a recipe appears more than once in the run-list, the |chef client| will not run it twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 8697745e98b0470c9bc77c6484298703
msgid "Always specific to the node on which it runs; nodes may have a run-list that is identical to the run-list used by other nodes"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# e3d2d25f007f48bf9de910f49c5e18c6
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# da8bcb4813804aee91f38e79a7339a1d
msgid "Maintained using |knife|, and then uploaded from the workstation to the |chef server|, or is maintained using the |chef manage|"
msgstr ""

#: ../source/chef_overview.rst:123
# f9424f956ec44aa69d6135001459bd80
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 33ee4bd026fb49f08a0fc134df694e50
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 10ee9ffede1445048093c83fa762aab0
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 86aa29faab91480c85fe6549da19daf5
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# a054e1e0acad4ff7ba53732f194b856e
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# da2ec36bafe34341b0ce0b9286a58398
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:126
# 469d92802ed94c1caffd8cdb78129473
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 18051d26b0da460aa020b270c90b64fe
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# ad3704977873475bb0ca4056da481147
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# fe02e4fa7ea04002af01e2ec605a362a
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# c8fe6a2000764239833b084c5d3d86e8
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:142
# e9c33f92f967451198b2f1b653790882
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# de0c1cd05bc648499415c8662c538673
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:145
# c8e515b6a61a4059991611d31cefb455
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:154
# ca79d032b2b745a3b3c477d0c171dbac
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:156
# e949b24b7b234286a2c1f3d5b3ef745c
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:159
# 5050e87e6ec941d0aa807edc25f5ecd0
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# d21bbf69ab724081a9f3054077b3bfc4
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# b4d7de0d6e9841aab13677a163762e5f
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 982df3357c3c403c92ddb6900720fc0e
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 5adb4157dd714383b176578991903906
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 6ae7b998e0bc4041b063e278d70333a3
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 1c1a6964641c467598c5e875862b6572
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_overview.rst:162
# 83bd33e4ea6f4ecaa38d03d18f8f3b57
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:164
# 185164ea752541e08cb2cc5f01ee64b9
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 9c9fe67c8e9b40b1baac70c71038326f
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# fb4efb68d6c04f5e830218b68050025c
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 42da7a964867431bb82efd452bedfdc6
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# f0da5c56bc4a4b3f85b2978db03d0742
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 3e41ff9d67494c12b01d191cb64817b1
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# a962025ecaf3472ea3737ab46ddd5d87
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 7bb809c2497148c593a8fb0948c28115
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# a2e757dd477b4d4bb1905ca2c16ccfa3
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 93be17c85df642ff811e5ee330e751d4
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# dbd4448056cf42eba88ec6322b141bad
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# ba1895f6184945f88e838a4a261b71ca
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 2c4a837aa499454cb6bd3f6290e3b470
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:177
# decb72ba631447c5b93b9e24de48624c
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:179
# f5999bc094a84eaf949625637e6a237f
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:181
# f89912464ba649609da184c0f04c2f83
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:182
# ead056953f1047d2a33d141c0e903fc3
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:183
# f4d733508bbf43ce80e2f9bc1990afe2
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:184
# e0a4f9d5e84b48faa1b04fb763fa2e14
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:187
# 0f397bc20d844c279e10db775a4baef9
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_about.rst:5
# 27558cfdd11a47eba705fe414010bf32
msgid "|chef| is a thin DSL (domain-specific language) built on top of |ruby|. This approach allows |chef| to provide just enough abstraction to make reasoning about your infrastructure easy. |chef| includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the |ruby| language. |ruby| was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well being able to handle any customization path your organization requires."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:3
# f5b0c0ca3d454e90b6cb6f061f04f4cb
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:5
# 0929370e1be84d6db864d158b3fbfa19
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 17343d6504a84b3397efc4b6fd265b5d
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 427fc7c3328b49e3981060c35de1aec0
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:10
# 1c0fc13ce57748138dd68be3ef88d731
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:11
# e08701893c0f4ce98835e8bb529a4b5a
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# 8340b0927dd643c39aafed461c4c3822
msgid "|chef| has the following major components:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:31
#: ../source/chef_overview.rst:48
#: ../source/chef_overview.rst:67
#: ../source/chef_overview.rst:96
#: ../source/chef_overview.rst:115
#: ../source/chef_overview.rst:132
#: ../source/chef_overview.rst:151
#: ../source/chef_overview.rst:170
# 220fd58e88ed48109735de71f5567982
# 9efe2bd89f504d7e9df8fea9575af2f8
# c95937083f6c4c4182008e6e710d402d
# f0ee559ca71d4888a9b16b2e502f9f2f
# a2ad06c425be443eb53c37c1e9b680fa
# 006adb521cb848d08f5012e3b1751f9d
# 43848864fd18422ba9249889efbe5c95
# 3a6924239dfe4c838843725e3658b849
# 21131a41231b429b947c20e899cd86f3
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:32
#: ../source/chef_overview.rst:49
#: ../source/chef_overview.rst:68
#: ../source/chef_overview.rst:97
#: ../source/chef_overview.rst:116
#: ../source/chef_overview.rst:133
#: ../source/chef_overview.rst:152
#: ../source/chef_overview.rst:171
# 235652039d98451eb4f99b5c68c65528
# 2fb5bb91ad32424e9646c8a4623db500
# e34784ffeeb64b22abc8e4d3c1191687
# 042a2f5bee984db6a10f533e9f166c6f
# af7bc0cd67e24cd2860fb4dd10144dae
# da77cb744abe4776ba6d953ce37ce0dd
# 9ed868b6603547228f239e6c3cca1b86
# 7aad383701e3444f9030788ae6c58c3b
# c7ebc60cbdf04062a1a453cd187dffb1
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# cea3922bbf154ea490f33d6c2115ba94
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 275875628a1840419015b95c99e4c861
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# 85ff288d15d745cb87e083c508e8551d
msgid "Often, a workstation is configured to use the |chef dk| as the development toolkit. The |chef dk| is a package from |chef| that provides an optional (but recommended) set of tooling, including |chef| itself, the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 901fa251598f48fa81f37c0af5956a72
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.)"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# aefa4c1a951a427c943fd644414c84b6
msgid "The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pull down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated run data to the |chef server| (as the updated node object), uploads data generated by |chef client_audit| (for additional rules processing by |chef analytics|), and generates reporting data."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# 08fb1af8343a44c5bf192ef9fa46fccf
msgid "|chef manage| is the user interface for the |chef server|. It is used to manage data bags, attributes, run-lists, roles, environments, and cookbooks, and also to configure role-based access for users and groups."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# c358a65daffc40d0aa2c125d17aee7f6
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Details are tracked by the |chef client| during the |chef client| run. These details are uploaded to the |chef server| at the end of the |chef client| run. This data is used to build reports, run rules against the output of |chef client_audit|, generate notifications based on the results of auditing, and visibility into messages that were generated during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:28
# 8f79af4456d54bce80cdd85c8d255b19
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:17
# ff6eb491044a47e6a15424eb3f324916
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:19
# c3cca4dd82374ddc9ca9c3270ca09ca6
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:22
#: ../../includes_chef/includes_chef_manager.rst:6
# 1d2691b04ac441838b1a9b4c61f7d6bd
# fbdd36c7efd44b53a90db8cf97d847ee
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# b36da26756bd44f383facbdc6e9993db
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:25
# b705aee6927c412fa7719524e877cd8b
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# a651bd5f88b94bbf81f4c6d7a5a64606
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 9d983b82a21c4d3e8b66f5da7a544939
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon aws|, |openstack|, |rackspace|, |google compute engine|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 3801806570284082bd74cc20aba2bf3b
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 67bb1146b9ce4241aabf7a7d125663a4
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:42
# 4aa18d9452894bd0a561d19fe85896cd
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# a8185b1f2c1d42dba58812bb3e4dfc82
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 9abcae2030204465ba916f219bec64f6
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 30095796af06457b8d716e0b53d2c328
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# ffeefb3790f6491788727c7f131ce759
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# d2eda969347f4736a411a57b5188a5d1
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 480e45d76f874f4ca3472e02eb5d6e2a
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# e4e09da3c40642e1bb7d333b51e407b5
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 59c7c2d8c3254d62b4e7e8f301dfcabe
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 929e06fcffe44a69968a47d26950a7cc
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 6ebcd8dbac1a4c7eb59f0e41d46f49f5
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# b981d40be8644132b7e8276520018de3
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 1240b12d897d46309cc0f8438aefa001
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 7687d48585b449a280305f16d1d9240c
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 439eba7ba72a45f8b39f21332fd92107
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# fa19fb8f93fc4ce4b1005cab00e2b406
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# a9c6471285de4a3b80354505a1151bab
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# b4cb85627f5f4cbbb067ce440d11bacf
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# b9e7a175538e45a0af3da2c8dd1899ed
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 14398b2114ab48638fca28504df00822
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:58
# eb208382433e4839bbf5d243ad5dc595
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# f54dad626bb44d9ebdf33df15e935e16
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# a7116848bff2401b91920e38c6cf5391
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 3eb48c6052184a08b29cac1d17297809
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# dabd9666cbf04b598efc335870fc8217
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 64fae507336a461fa165b022b5d14aac
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# e1a57298aedf4a47a61837ac813dfe6d
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:61
# 5e244b4ed3a243e1b080ad75d8d937e8
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:70
# 9452c73559144f42ace6160ac7840270
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:72
# 67624bc578f84b19bdfecce2015ed6b2
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 6977029c30f0452c9fca1f6bf3057241
msgid "Use `Kitchen <http://kitchen.ci>`_  to automatically test cookbook data across any combination of platforms and test suites:"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:7
# 72475281e21a46e489af68874f3b5433
msgid "Defined in a |kitchen yml| file"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:8
# 84daa111a41d4f048b0ed2ca60fe2c6d
msgid "Uses a driver plugin architecture"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:9
# 054aae42b5384436a0355ccd1cffbea8
msgid "Supports cookbook testing across many cloud providers and virtualization technologies"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:10
# bb20bca1b4fd4052aa10b1fcee2a71aa
msgid "Supports all common testing frameworks that are used by the |ruby| community"
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:11
# 1a74c72ee18d4da5a372cc8b179e4b27
msgid "Uses a comprehensive set of base images provided by `Bento <https://github.com/chef/bento>`_"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# ade392f98cdf40d7931d1fa4b6459675
msgid "Use |chef spec| to simulate the convergence of resources on a node:"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:7
# 9e23754533a748ffbb812f5023606db0
msgid "Runs the |chef client| on a local machine"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:8
# 0ef49259a508467a8e8634c1220e7a35
msgid "Uses |chef zero| or |chef solo|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:9
# 078b12bd5d8346e6a08861cdbca04cf8
msgid "Is an extension of |rspec|, a |bdd| framework for |ruby|"
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:10
# 62bc7dd676e44ac3bd04ec03fda74bb3
msgid "Is the fastest way to test resources and recipes"
msgstr ""

#: ../source/chef_overview.rst:78
# 5843ddfd4b10407ca74f4e15e6504063
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 91f4f58d7afd4650a08592bd4d54c4d7
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained:"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# f458c322035649d5985340b06d148027
msgid "Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:8
# 01f8382f83494e0ea470553888a85bfc
msgid "The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo_structure.rst:5
# 6a804df29a2f479db102202949168ac8
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:84
# d7aaa874c9eb48de98f6c262891e170d
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:87
# 5f5bf08ec1dd4042819d119934ca0782
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 74437ff51af74ff78cc4dbf49127d442
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:90
# 6ee32335f6734ed085f2c66d8e4ba376
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# ebc94a30ce9549f499514d462be87bc4
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 3a72b8ce549745f8ab861e3d11216d77
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# ae68c70d933d4f48a7532736f22015ff
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 6807b434971d489c8ae490a4f67caae5
# e9e348feb16f400baab851ec033b1b3e
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 7426df70a35a4fc6b54c1193219f7e12
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 7912b5b182cc4ab3b7261196ff3f6a68
# 262fca018f694e67a9f9d30624272307
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# e3dd8344693740dfb2d11ccfac0f0adc
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# e548412b1dfa4ea1a376f217c2688e5e
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# f64b3e3706d14145afc29ee54c8bc4d6
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:106
# 2d6969e4382a4e1c8146d933bad173ba
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 87d5775e31ce4967bb5b28a24fa020dc
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:109
# 6d873001aa974723a7d310aedf5655d5
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# a487e153a4e34e10b14fae65a39742aa
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# ebf84cee1dcd4ed1af97fdcd2bdf1975
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 83f2e0ce3a6f4cd3ac14101397b7d97c
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# c535cf152442425ea18fd9579b5e4fb6
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# ddc6794903b04ef6b2d09f01962266ac
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 34c51e735f5247789e6d4afc4a04f5b2
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 4b887ca162e64e86bcb5ad6002669ea9
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# a6c54f42e34b4ee385d4f89e4a3ccb69
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 2840647e257946efa4407ab0e90cda91
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 0a6da280adc743e285aae72f2dcf3f95
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 74b2130bb28044b4a35bbf6f08d811c7
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# f98dc3632c1344fc97adf17e08828b71
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 0b77ab0346d3441c8708e0f28091e124
msgid "A run-list defines all of the information necessary for |chef| to configure a node into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# bd478504dbca474a91ef714cb7c72734
msgid "An ordered list of roles and/or recipes that are run in the exact order defined in the run-list; if a recipe appears more than once in the run-list, the |chef client| will not run it twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 0d26641720d84c0c93cd4d33a3f322c5
msgid "Always specific to the node on which it runs; nodes may have a run-list that is identical to the run-list used by other nodes"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 842c4ec31fc7498985a3289669df67ae
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# fcc003fafe3e476fba7fd879322f403c
msgid "Maintained using |knife|, and then uploaded from the workstation to the |chef server|, or is maintained using the |chef manage|"
msgstr ""

#: ../source/chef_overview.rst:123
# 5ba6587b82ed4ad6902c82d1f27db9cb
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# b2211687bd38428283ac9efaea257645
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 3e6df34463324fa0b8e5b57f315f70dd
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# a090a386c1034e0fa9591cbec3f74fa5
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 5ce78cb685eb41b8bd2b19e15525ac7d
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 0052960e0b564bf89fc93315a08051a5
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:126
# 3ef913f853da4e3783dfd7857d1d72a3
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 96a086d457174027b082e3c051bad28c
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 6aadfe786c2e4774849e684d069f77bc
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# a90fc457804944c58ab188b5e42ab8eb
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# e2cfc171116849f4b6d92e6427694bcb
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:142
# 27f389e35baf43e0bc83e80d97459c01
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 6173ccfe252d48df9c699b6601636a05
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../source/chef_overview.rst:145
# 78f1b30bf1a342cb8819a23d7beb5db4
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:154
# 55aae69f591045619b827ce0eb3559e1
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:156
# 81a48e2eeebc4417883cd35a39f61aa9
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:159
# 3fa64e8dc39246dfa08d5e4caf842232
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 1e2fb4b225c74026b7a4c41efaa9b9c0
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 25a2729bf8f94ccabdce5eac1f509e37
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 2ba938eae9cb4947863b0b5c9a4902eb
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 7ca8a5c1ae3645c5ace4b53330e65ab2
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 17113206b6834522b2593863567e1abe
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 452e2b80767146378b49b89ef930ab98
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_overview.rst:162
# 33900102565248bd9e5d2819bc69640c
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:164
# c33c7a89792d43959fe412b32c2eacae
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 49e474d8bfc14013809016574f4073c5
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 5b6827357b2248ea8df90d96718e6db2
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# e7e2e20867a8407699a8060e10ea5253
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 42170aa0e015470e82f8663df9b9a90c
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 62108182f26e4a739691e85ec9b2fd16
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 9fa195b854104ca8bdf6b41cb1ea3ece
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 26bbefefd8264fffa31a8f18c0ab70c0
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 47fa4a83e0eb481f8d0195c46f804016
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 55ed576089054dacbaadbd7ce4513dc5
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 10a0e9912ef34029938b27161766ab5f
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 1054e6981ac547148908c140fae35eb5
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# fe99044939c24e68bf1bfc3a49edad54
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:177
# 424b77acf5344842976e970e59e51e31
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:179
# f25e57eafa0042d3822eb9d2ee3a38db
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:181
# 040cb20144cd43fda09c37adcb36c9ff
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:182
# 31d5307553d34e4587efef3802e338f5
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:183
# 8b0e2332ada649c7a2bdb11bc3fcbf6d
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:184
# 25e5e0a4183c4871bd78d9e103f87d2e
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:187
# 3c499e291e8b42029eb4efece72276dd
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_about.rst:5
# 3e883df9c15c4e83a2c7fd546f9f276c
msgid "|chef| is a thin DSL (domain-specific language) built on top of |ruby|. This approach allows |chef| to provide just enough abstraction to make reasoning about your infrastructure easy. |chef| includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the |ruby| language. |ruby| was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well being able to handle any customization path your organization requires."
msgstr ""


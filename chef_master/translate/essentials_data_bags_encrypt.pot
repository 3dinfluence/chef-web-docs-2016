# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-13 19:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags_encrypt.rst:3
# 46d6d16a21a74518b98b07208417b3a0
msgid "Encrypt a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 93fe895d12dc4cf197c4bc3f414b7595
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# 9cbb7a1837c54a01ac6ded39a5a95e3b
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# 894edc831cb745b2b50eff9d5a6c2fcd
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# 78398f434e2c4879babdc991e445125c
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# c612ce6e5b4f4646943c4e3a7a8706f6
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# db238327a40b4b47a26bd60058bf801e
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:39
# 6c4dbba59938402cb3e4bd11c0df4412
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# f7e8dfd5b83348c781364bfd52d5c892
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 167b71cebc234a06b07f291438786b0e
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# f0cc89659a5a4148866113fabf1032d4
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 5b7003897f9d4fbbba62f79bfd03b75a
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 4c6d1e9f251c4896b33bab84fc4a3157
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 4d7b043cc0e949e7b063542e31ada021
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 9430ba4656844f6497fa5dc731ea34dc
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:43
# e4d71e78ad4c4ba8baaad3cedc81f5cc
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 33de7d4662ee428e8c46f2097f6e3001
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# d51f5a3258374d279930ba0ba11ab561
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:47
# 6cfd0a1c40e04f80ac9e40a47015d40a
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# c9395b307ec3459ea8ba07b16565037f
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 2d28dc6e211d4bf08559341a4601bd37
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:51
# 6e5bd946c870441d92140e20692d6fc6
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 498cde683ecc4560a92892cfd92e63be
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 502f4ea25c6d418494fda3c1ec0e3217
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:55
# 3d4e19ea0cfb49e3ba2573c39cc651b5
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# bd2bf1c66f76492c9c3edec5211bc863
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags_encrypt.rst:59
# 3d8c932f5dc64d7fac3ddea08ac50638
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# be381f6a9ea440b3aeadc6bc94046211
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# 7377cb1562cf4800affa5649a0c95542
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# 4c5a98d07d244bb3ae22543883664196
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# 0737b4374ea943ec890624f01add17d7
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 7503abb891dd48e6b18421a244e60a24
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# 54004e0095c24fc9b9a8ce7702f7cac4
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# d7146ef932b240f8af84433213f65356
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""


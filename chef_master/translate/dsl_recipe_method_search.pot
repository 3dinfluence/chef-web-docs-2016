# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-05 17:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_search.rst:34
# 213ed7fabc2a468cbc6093d54614ddf8
msgid "search Method"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# ba25452d8f724435bd562df4754705a6
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 6bbb588376a346b39b484b3e99b9443f
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# e8e122a6a59b48bdba4660a6f1727817
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe_method_search.rst:41
# 7a622b06bbc34a189e97f82dc007d054
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_search.rst:42
# c2d0cb07f2a147b1b1590091eea03753
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_search.rst:44
# da75fabf5d094ef7a72988b34080a7bb
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 61ebc9b31db242ce80cdd7d1b27513fb
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
# 9e88744848784ce39ff696c627792285
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# 26218472fa0549f5b30d307b2d8eff53
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# a33263ec5e3d4aaf99d5e6bde595435b
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# e208be63ccf144c1930ae6f5793a5a79
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# f1494b558fd04fe89f8cf9a54edcd629
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""


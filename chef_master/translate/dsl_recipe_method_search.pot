# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 17:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_search.rst:34
# d779af72200f468b82c578a55218c2fe
msgid "search Method"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 0d325509774641b593bb3a5393a676cb
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 8c9c69dfece1493da1a0e84d074304d5
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 686213f5c2754421aa517d82ae4d47ff
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe_method_search.rst:41
# 70597abb675d42a7af25211547305308
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_search.rst:42
# 120cc990fe9c4462b913310ce3a84c22
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_search.rst:44
# 94774d5f804341bd907fd343efb5eb3f
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 1635baf36f8a4e2786a8b253f0814324
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
# 9647c22f7f3a4c85a8ec61503afc3e3f
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# 5063313d0711431c8e2d9870dc9c3add
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# 986de645282240b4b46d4559c900cd6f
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 1c505fdbde1f4a4396a0d2372e0d8679
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# 227f7469b7c044e2a8970710bccccfda
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""


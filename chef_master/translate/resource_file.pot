# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:49-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_file.rst:8
# 275ba14391bc45e1a30d6de9672611a0
msgid "file"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# afcc164bd37f4aa99032378038eed992
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_file.rst:4
# 367bc01f5af445ac83721d5633ab630c
msgid "Use the |resource file| resource to manage files directly on a node."
msgstr ""

#: ../source/resource_file.rst:14
# 9abc9b5f52014cc2a6cc668a63ca8daa
msgid "|note file resource use other resources|"
msgstr ""

#: ../source/resource_file.rst:17
# 840d9673c1b4422bb0546e97e514f6c9
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:4
# 35ad1a1e273849a9a6cd83de97b6d4fc
msgid "The syntax for using the |resource file| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 6759be462c384befba33fbf79d42f36e
# 2e12934fd4254f1cb15a5e242edce580
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:16
# 8aa2c081b1984dfca20ecdb2c05756db
msgid "``file`` tells the |chef client| to use the ``Chef::Provider::File`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:17
# 5b48b292e2d0452398cd22d40c137c96
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the file"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:18
# 24e41d03e079406aa3a889d8c3647746
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:19
# 7df5033685e541db96e91268d87e8792
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:21
# bf3c8c223aa942fd8b0ed8c50f67c3d3
msgid "For example:"
msgstr ""

#: ../source/resource_file.rst:21
# abaa73d9982941a2a0223759392493f2
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:4
# 4b37cc7d566e4452b8a92a52e4fe446a
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:10
# 732f41a1c2624ce3bd4e88494bd6ed69
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:11
#: ../../includes_resources/includes_resource_file_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 41a556ecb038480ebf455e776431e9c7
# a6d0875f62fc45a4b73d9cfdc5948311
# 0c33701472da419588b1f926f703ffde
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:12
# f2c54ed5d41f467b97b3b3f593d7f26d
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:13
# d957aacea1294cbda25c6b090631fe51
msgid "Default. |resource action create file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:14
# d7589f3462fd4f6bbc39489f06e3d4ab
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:15
# 2d36ffcc62fc48be85fead3df839f12d
msgid "|resource action create_if_missing file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:16
# 50e12a3605c74de08756c20ece2ae139
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:17
# 745ae52ce36843e981ab271f19a61242
msgid "|resource action delete file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:18
# 88acef82807d498aac729f9c0a4c082a
msgid "``:touch``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:19
# f3140e763098410ba104bd851d2e8c4d
msgid "|resource action touch file|"
msgstr ""

#: ../source/resource_file.rst:25
# 472ef6c583454505bbaeb1dbc6a6edf3
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:4
# 819d3dc9fe86496ebf961b4af0055c04
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:10
# 70de2b9df7f04d1a9c760242126c48d9
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:12
# 9614e1ab939748e98e76c50d89c0a582
msgid "``atomic_update``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:13
# f99f1c24b3b84d62b3da573460cf3250
msgid "|atomic_update| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:14
# 2f7a4b29c4624dad8352c2b3a2832aa5
msgid "``backup``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:15
# 3a12152fd7ac4bb2a2ee4904405db87d
msgid "|backups_kept| Default value: ``5``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:16
# 6ab1cf379fa04dfaa77be851ab558fd5
msgid "``checksum``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:17
# 6b0308d5d36046e2aba0b0ff73d7f909
msgid "|checksum file| Default value: no checksum required."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:18
# 8f1b03f57d6e4b1291787cad558f5e88
msgid "``content``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:19
# 0ca060158d7e4c98b5e1e4ae475b5666
msgid "|content file| The default behavior will not modify content."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:20
# 6284ec92976143cba9060f72c7aba071
msgid "``force_unlink``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:21
# b09126994ba042c4820ccaf562668f3f
msgid "|force_unlink| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:22
# 9f05214279c24cdaafd70b6768f121ba
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:23
# 3110c42007724747ac77cf5ec3f46079
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:24
# bba5fcb401fa4f7c9d1c3d7aa98c84ae
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:25
# cf58030926264b20a35e82bc5def3710
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:26
# cffe4b132ccb40a89d3014b3bc32289d
msgid "``manage_symlink_source``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:27
# 3252d4d3f27e47ac839bf498d0a906d3
msgid "|manage_symlink_source| Possible values: ``nil``, ``true``, or ``false``. When this value is set to ``nil``, the |chef client| will manage a symlink's source file and emit a warning. When this value is set to ``true``, the |chef client| will manage a symlink's source file and not emit a warning. Default value: ``nil``. The default value will be changed to ``false`` in a future version."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:28
# c8be9da0e2004e74864ff7dddfa62415
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:29
# 60fb625b163147538fea47534aa6191a
msgid "|mode resource_file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:31
# ef92b879530c4fa4864dc11dab0d9914
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:33
# f4623cc97bd24b9785eade2247c03864
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:35
# 0a7da02e7ccd4889bddecd0e60c18493
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:36
# 7e645c28f9c44cfe9f1fc29abef4bfd7
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:37
# c515a8e952ed40b4bddeffcb787786f8
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:38
# e717eaae83d84f87a2b308a520ace1a4
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:39
# a1e3d18418a246d0ab8cd56ec6dedd0c
msgid "|path full_path_to_file| For example: ``/files/file.txt``. Default value: the ``name`` of the resource block. |see syntax|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:41
# f377d55bf1064b4f809426d3eb403901
msgid "|windows|: A path that begins with a forward slash (``/``) will point to the root of the current working directory of the |chef client| process. This path can vary from system to system. Therefore, using a path that begins with a forward slash (``/``) is not recommended."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:42
# ec4d28a4c0fd48698ac2f5ed959a1529
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:43
# 56ee0231bbdd4ec9b5e918a8fcec0e84
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:44
# 3b010fafd13942f9973c497a8593318e
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:45
# d7be274955da4c929d5f4ef2076e1e89
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:46
# 2cb16394adb74e318d4b94ca0944b503
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:47
# 5a4b3a18926f43c293e42a9fcc0ce16c
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../source/resource_file.rst:28
# bec83f32053b4fb0acb89bead9bfb5e2
msgid "|warning selinux_file_based_resources|"
msgstr ""

#: ../source/resource_file.rst:31
# 2afa905019bd4df58d5c86d5dc32ac54
msgid "Atomic File Updates"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:5
# 835bd341d61b412ba8095b85bf121788
msgid "Atomic updates are used with |resource file|-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:7
# cf66155e286b4c14b63a9902e9d2a627
msgid "Atomic updates are enabled by default. They can be managed globally using the ``file_atomic_update`` attribute in the |client rb| file. They can be managed on a per-resource basis using the ``atomic_update`` attribute that is available with the |resource cookbook_file|, |resource file|, |resource remote_file|, and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:9
# 0fc0df12be0242208dee7083c48d824a
msgid "On certain platforms, and after a file has been moved into place, the |chef client| may modify file permissions to support features specific to those platforms. On platforms with |selinux| enabled, the |chef client| will fix up the security contexts after a file has been moved into the correct location by running the ``restorecon`` command. On the |windows| platform, the |chef client| will create files so that ACL inheritance works as expected."
msgstr ""

#: ../source/resource_file.rst:35
# 3aaf6de8b52d444398281bf6fa85009e
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 7e4f13579fd4419985b17c2d4f03f5c4
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_file.rst:38
# 9b3e718d2b5946bb9a6499f45ac86d4a
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# b714072f8bf24b09984ea747abef9835
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# c434699cceb142608bf4c8464c3c1d52
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 2109656320d74e1794c4c4b46fbd2aa2
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 6e12239d628940ff928bb776eb93ff60
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 721c2813abcf4579aea47c399d1b9a4b
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# c7effa0248e142fabb881cf83b6daeaf
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# aa0d8e1ed4c740089d25677346f47c18
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 6e277400a91048049dd9530d96331aba
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 43bd20de9d27477dabae133ce4def387
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# f7d141159704458bb8f3ff9fdad5e361
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# c3bf19379f7d481aa5ad9bfc28a908cb
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# ab21d9291cbe4a27b8b44804dc7f5954
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 9c580c8ce0f94a498cef0865fac087ad
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# d58bf87b29bb4b0ab1e685ca12b1fb7d
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 611aaaa317b84e66af81c9fb05520ba0
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# eb1a6e9b8aa54c6695dd32f4947c7fa6
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 9a8f530056f5403cb8ad6b343c11aa2b
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 0972220d71b44a119cc9098f5d7277ff
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# a3a562390b9540c2be5f118be96fc0fd
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 448a8b0099fd4f0c83c2b39f3c8c4fb0
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_file.rst:42
# 5ef9db6a0c904300a5c1b31f358a9d56
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 4d45975006d747f59f3db2e5892bdda0
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 61f1f02288494b269d2dc16242cc1074
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 3156ec726d2c4b68afa9ae9d29e87709
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 11fe3d7bfe66418b940f03fa342e64cb
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 94f16e31ce464c81b4af1add5cf7f94a
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 7ab6bf24fb8f4953b6fa3f3f40cef73f
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# bb6a35c71a8b474194b7a751b856b03a
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_file.rst:47
# 65f2c8fc13ca422db43cb77e9cf93e97
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 93f8e3d7044c45ec833c529a2c64dfe3
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 393559a180164740a894f9df134d5d1a
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# dbde271c05384e9aac65bd3b6f8e19c4
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# f9105f946ca94bbabedf6b473ace697e
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# 492f2cc116914d548ab05ec48059e922
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:4
# 89ace72948044a3683ce2e804a1deace
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:10
# 9ed315a22cc14d959fe6927d288dec76
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:11
# 93543cb55c2b4848af32054ab4394dc0
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:12
# 85e46c34ef0742f7847d818169b4b7ce
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:13
# eca9324ce1204b22ae8ebcfe34c289a7
msgid "``Chef::Provider::File``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:14
# 1aaf339208bb464884212a976f0fc63c
msgid "``file``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:15
# f7b32fd9ef5c4804a39219cfb75f1ab2
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_file.rst:55
# 1aab8d1d94e74091b1a753767c2e52e1
msgid "Examples"
msgstr ""

#: ../source/resource_file.rst:56
# 1e506fec94ec49bab80f95a46ce89db0
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_file.rst:58
# a2233173fefb4ae4a16f4f1694a7554d
msgid "**Create a file**"
msgstr ""

#: ../source/resource_file.rst:62
# 2113f087815c4d4aa8540ca960b61df4
msgid "**Create a file in Microsoft Windows**"
msgstr ""

#: ../source/resource_file.rst:66
# e0d7095ea0474d7cb0af5fe2578e3b78
msgid "**Remove a file**"
msgstr ""

#: ../source/resource_file.rst:70
# 3d008caf59df416888b8770b108f5bca
msgid "**Set file modes**"
msgstr ""

#: ../source/resource_file.rst:74
# dd9f0931e27143ae80e3fdb27a273712
msgid "**Delete a repository using yum to scrub the cache**"
msgstr ""

#: ../source/resource_file.rst:78
# 11fd4e2a54f846b4adab80dc1fa7b65f
msgid "**Add the value of a data bag item to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_data_bag.rst:3
# 47ceda5bdcc34f9f8cf5333d854d8e78
msgid "The following example shows how to get the contents of a data bag item named ``impossible_things``, create a .pem file located at ``some/directory/path/``, and then use the ``content`` attribute to update the contents of that file with the value of the ``impossible_things`` data bag item:"
msgstr ""

#: ../source/resource_file.rst:82
# 084f9716bbd8415b96af322bb164bd6b
msgid "**Write a YAML file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_yaml_config.rst:3
# 5abfed59b66b44b0a5d235c1d36d8294
msgid "The following example shows how to use the ``content`` attribute to write a |yaml| file:"
msgstr ""

#: ../source/resource_file.rst:86
# 51451b17177247ebb31e8a1f3b416ef2
msgid "**Write a string to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_add_string.rst:3
# beaac2a2a47640b2ae5bdd29a96c23ca
msgid "The following example specifies a directory, and then uses the ``content`` attribute to add a string to the file created in that directory:"
msgstr ""

#: ../source/resource_file.rst:90
# 4bd7019f13f74b9a8d817c214c6ae318
msgid "**Create a file from a copy**"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:3
# 588ef37f6d06466cbaa5fa4321c4080c
msgid "The following example shows how to copy a file from one directory to another, locally on a node:"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:12
# 973028d3eba44d828dcfbb8e7d8d11b1
msgid "where the ``content`` attribute uses the |ruby| ``IO.read`` method to get the contents of the ``/tmp/1.txt`` file."
msgstr ""


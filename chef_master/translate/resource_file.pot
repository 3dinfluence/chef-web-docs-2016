# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-13 21:44-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_file.rst:8
# e5b94510207c41b9b3ed4696f4322844
msgid "file"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 08db6f2fd37b466cad5e2bd529d0d6f3
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_file.rst:4
# efc17433d3ec4d4e832dcc66640b74fc
msgid "Use the |resource file| resource to manage files directly on a node."
msgstr ""

#: ../source/resource_file.rst:14
# db19f74d4dbf4f1298c5c85e682fcf6f
msgid "|note file resource use other resources|"
msgstr ""

#: ../source/resource_file.rst:17
# c2bf915e43f746f5a2c19f9b760b575e
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:4
# feea495fcbcb46b481db191d1a952111
msgid "The syntax for using the |resource file| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# a6058e48a9944b94860816ae704251cb
# db0e06f37d3844d397b6eb6b6d7155ad
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:16
# 6f9ec4feb67545f89662bbb5564e9a28
msgid "``file`` tells the |chef client| to use the ``Chef::Provider::File`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:17
# 3e1383bb1044466bb360726dc3a431d8
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the file"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:18
# d1fc72b2902643e7a84d248206c7bc3c
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:19
# e9159dcc9ee84bb195bf941b90d10b67
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:21
# 7653d9c765ea48ad81bf029f6d6a83f7
msgid "For example:"
msgstr ""

#: ../source/resource_file.rst:21
# d1fa728eb9aa4b31a230d4cecd6dd3d5
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:4
# b56d1da7bb9e42fcb976a91d5cf810dd
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:10
# 4d7d96b108a94f74aafaa3e4045726c8
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:11
#: ../../includes_resources/includes_resource_file_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 58cd6252ecc24a1192c8a6002050f44e
# a6dbb02988d5471894c91996e07af504
# 65b709e417a6465abf7d26bb5cc5f22f
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:12
# 87931215b843439c8ddc789363b8203d
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:13
# 00da7daed53241faa2dab9cfaa24b406
msgid "Default. |resource action create file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:14
# f5e8f3b3f79b4613874959726ecb3ec4
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:15
# 12eb4f3c404749268e96b9acaf3b9b4d
msgid "|resource action create_if_missing file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:16
# 7bd425e56dc64be1b11bad60913fa679
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:17
# 7f1da202f5074a8f8a1391d09aad44aa
msgid "|resource action delete file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:18
# 5f429b02cd314eb6abc49a9b6551f7b8
msgid "``:touch``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:19
# 917095c0368a4feb81d16092291e6dda
msgid "|resource action touch file|"
msgstr ""

#: ../source/resource_file.rst:25
# 7387f794885c4810b62ac2e4822d3e3a
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:4
# 1f2497b78a394ed1aa85ab81bd9a5843
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:10
# 14ef1d643d0a432baf1c5d9ecafc5ac4
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:12
# a89e81137c034f02b95f4921e9e4b039
msgid "``atomic_update``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:13
# 1e45be0529214691967d487a3c286aa2
msgid "|atomic_update| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:14
# 1b766bf249b24212b61bee61b5865e80
msgid "``backup``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:15
# 8881224a25fa44aa880a44315adcb509
msgid "|backups_kept| Default value: ``5``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:16
# 850b66fe4d2c42caae152831fad447d3
msgid "``checksum``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:17
# 52f93085974c4cf7a8922c46413faf41
msgid "|checksum file| Default value: no checksum required."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:18
# 635e3632d7a5465d986c1e46134e5831
msgid "``content``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:19
# 3ccb220c61d24f878750650792714915
msgid "|content file| The default behavior will not modify content."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:20
# 1c870fd62e364169b7b8797f38fa9520
msgid "``force_unlink``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:21
# 657c7de7c3f84e389ebb5a3132719590
msgid "|force_unlink| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:22
# 0337e231629a4305b3c618f90379d460
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:23
# 8c911a8c531a42d6be57bbe55cf1c4e0
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:24
# 8616d51a8b494dd3aca9c0b44af85ec8
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:25
# 19534ce270df40d08bb18aee708d875b
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:26
# 90adaae208bf452a9cd33cb4806a4f50
msgid "``manage_symlink_source``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:27
# f7bfbd146e74459aa3c7fb5cfc3b53e9
msgid "|manage_symlink_source| Possible values: ``nil``, ``true``, or ``false``. When this value is set to ``nil``, the |chef client| will manage a symlink's source file and emit a warning. When this value is set to ``true``, the |chef client| will manage a symlink's source file and not emit a warning. Default value: ``nil``. The default value will be changed to ``false`` in a future version."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:28
# 6f0840ccb26b423d9d30d250c32fa258
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:29
# 18819bfa69af4a88aed49d6d72944249
msgid "|mode resource_file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:31
# aab22a995433475a8faadc5fb645d167
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:33
# ede3ed88f5b84598a9c0d6ca9a26162e
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:35
# 53636332e969466cb274519fcf0278dd
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:36
# a3af64ea7cc04c58b9a23fe30e686459
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:37
# 76ff0c826ee447f08e99744d903d37f0
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:38
# 789d505f483842c294657347d2ec88e6
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:39
# bc61d4c57d054c37a3deed32eca45c1d
msgid "|path file| |path_fully_qualified| Default value: the ``name`` of the resource block. (See \"Syntax\" section above for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:41
# f6c3aab3f5a841e582d347ae6e102a35
msgid "|windows|: A path that begins with a forward slash (``/``) will point to the root of the current working directory of the |chef client| process. This path can vary from system to system. Therefore, using a path that begins with a forward slash (``/``) is not recommended."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:42
# a8009d42b565439bb5e5b320b38cb905
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:43
# 9cfd08cce544428d9c056be0139e1432
msgid "Optional. |provider resource_parameter| (See \"Providers\" section below for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:44
# 1224777830ae4bcba7f15d5619e655b7
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:45
# c668408fab254bb4b2fa6f8f0d6d7810
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_file.rst:28
# 5bff0d8c7f7e4ec89c7f5cf72f9653a6
msgid "|warning selinux_file_based_resources|"
msgstr ""

#: ../source/resource_file.rst:31
# dc6718706a1748b2abfeb4db6a5fb1bc
msgid "Atomic File Updates"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:5
# 8ae1a8b99d0541b591b8d97f3005df47
msgid "Atomic updates are used with |resource file|-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:7
# 28807abe02394d7a96dcc81226978996
msgid "Atomic updates are enabled by default. They can be managed globally using the ``file_atomic_update`` attribute in the |client rb| file. They can be managed on a per-resource basis using the ``atomic_update`` attribute that is available with the |resource cookbook_file|, |resource file|, |resource remote_file|, and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:9
# 5e1b75ba2a2b4595be634e768eafbe7d
msgid "On certain platforms, and after a file has been moved into place, the |chef client| may modify file permissions to support features specific to those platforms. On platforms with |selinux| enabled, the |chef client| will fix up the security contexts after a file has been moved into the correct location by running the ``restorecon`` command. On the |windows| platform, the |chef client| will create files so that ACL inheritance works as expected."
msgstr ""

#: ../source/resource_file.rst:35
# a89388016f9848a9943b3e3d7fe97b38
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 4d5dbb2bcc8d4bba8c258f74bb816b86
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_file.rst:38
# 0b22ada14942427fbdf4bccc2b68d295
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# c709ebb442f1404eb9316d97fab42f48
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 14b000bb838941048aae4adebfc45234
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 9035c82b0168479eb3c81ff827db0c8a
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 72969ecadf5d4ffbb04d9fdacb644e3c
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 571eecc178534025b0b8d841e9da3365
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# d38c675ed53f48618fe84a547a6b9f1e
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 51596e5a91dc4ca6bac31264d92db794
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# d812f3ed0548439a81311c4ea5d91258
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# f023f6b5ed784be89e88ff69302a5473
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 28c40fbd885840c5a21be9ed19574956
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 6313d8c7867045ffa621b540e6fe1251
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# fdfd430baf29427fb638513eac3f694e
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 00664f9af1354a0f83d8f17bc5611987
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 5c495e204d5548659b803ceddd969f10
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 1c12276b4f504016bd7d30a682859176
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 58c84cd38e364c2a94e6d989a46c0c8b
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 75f81b69dc534238851f9068b341141c
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 2dce3d9143404cb8805b7483b8144b85
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 2467901ec26f4d5981d06ad21d342e99
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 3464fd56d7db43ff980172b5bb10ddab
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_file.rst:42
# 2035ea42bb584ae0b287ac898c98f856
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 261ce9263aaf4a43a9f5bf596c87e2fe
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 8feacdbfb2d74dcb82c830600296f686
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# e209c3a801c04f0994d6794534c2e2ee
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 11a85c1ab5814d9dabadc5cab3cc2c3e
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 9cc141ee1aba42a2899893172deb80a0
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 77f4e4db656342338d92efb4f8b00e5f
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# c0baf130b2074941a415bef18d7fe76e
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_file.rst:47
# bfdc3ff56be04c6a8e3cb230535457d0
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 81435e80608f41aa873683bdac4f4d76
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# aff7dae3a5094cf0ae99a9a87e32b2be
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# b47b74a5e5fd4b4c8836512f53b9db83
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 80010ebbc1de41f6b272f0c133de0da7
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# dc55dcc8a1064e5da216554dd418b337
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:4
# 55bc7beb8e8946719bcae5041fd88aab
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:10
# 77900dc1b5ef4a889f1108f791a6494a
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:11
# 9b9a8a07c1fd44ddb8ffa093ac83f4a3
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:12
# 812d172d1dbf484d8d8a16d7c634e731
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:13
# faebc7eb95e348eeb1443349d92ce17f
msgid "``Chef::Provider::File``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:14
# d3ef9ff774214152a7fa02b8da996c8b
msgid "``file``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:15
# 0618052c3bb74f9cb007c50c235b1c3c
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_file.rst:55
# d9e0b8e297724f1b998b69a905306532
msgid "Examples"
msgstr ""

#: ../source/resource_file.rst:56
# 1062ff5c9b9240d49e06ce00e0626979
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_file.rst:58
# 64e071e7d06b496a8d4fc5893d94bf85
msgid "**Create a file**"
msgstr ""

#: ../source/resource_file.rst:62
# bfbb4de7690a4a53a18bb5b3a5b64a93
msgid "**Create a file in Microsoft Windows**"
msgstr ""

#: ../source/resource_file.rst:66
# 5722855a6b124333a18c29bce3522fd0
msgid "**Remove a file**"
msgstr ""

#: ../source/resource_file.rst:70
# 2f61a7fd813d4eb68e81771371f455bc
msgid "**Set file modes**"
msgstr ""

#: ../source/resource_file.rst:74
# 985d84db5de040618cd25157c1420397
msgid "**Delete a repository using yum to scrub the cache**"
msgstr ""

#: ../source/resource_file.rst:78
# bbc7565a7bf34fbc8c50263a3040078a
msgid "**Add the value of a data bag item to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_data_bag.rst:3
# b792e53949ac41808d57f0ac7f58c20a
msgid "The following example shows how to get the contents of a data bag item named ``impossible_things``, create a .pem file located at ``some/directory/path/``, and then use the ``content`` attribute to update the contents of that file with the value of the ``impossible_things`` data bag item:"
msgstr ""

#: ../source/resource_file.rst:82
# b3f7405ec38b45729ce89b264cfe2a2e
msgid "**Write a YAML file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_yaml_config.rst:3
# 219800b56cb94aa283b1a12169badd06
msgid "The following example shows how to use the ``content`` attribute to write a |yaml| file:"
msgstr ""

#: ../source/resource_file.rst:86
# 1e261118eb3146938357b76384a6bafb
msgid "**Write a string to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_add_string.rst:3
# 6be9f44615cb49f1b53ed3f7dd8d4f88
msgid "The following example specifies a directory, and then uses the ``content`` attribute to add a string to the file created in that directory:"
msgstr ""

#: ../source/resource_file.rst:90
# 7c05324cf5b14aeb975b5a6491341eb7
msgid "**Create a file from a copy**"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:3
# 79c296b4805c4b84946287a537a080de
msgid "The following example shows how to copy a file from one directory to another, locally on a node:"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:12
# 62f30f4f451f45838c81e4da008e2cde
msgid "where the ``content`` attribute uses the |ruby| ``IO.read`` method to get the contents of the ``/tmp/1.txt`` file."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-10 22:38-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_file.rst:8
# e060e460f5a24e8eacdb6d2c6f66530e
msgid "file"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# d9033a09b5964a3daf9360f17843dd7f
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_file.rst:4
# e3e2dda368094e7cb5aeb241ab430079
msgid "Use the |resource file| resource to manage files directly on a node."
msgstr ""

#: ../source/resource_file.rst:14
# ce5d53f235434cef96f07cc4a929f175
msgid "|note file resource use other resources|"
msgstr ""

#: ../source/resource_file.rst:17
# 41667bb95ed14c139e50aabe6543f0c4
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:4
# f66cf198e38d4ce0a45959d53977fcfc
msgid "The syntax for using the |resource file| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 6267e026e42c4fa2ab305bc063493fad
# 0f04e87d56584cc69799e6710cdb57a4
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:16
# dde5bba2ed1f4509b36fa979b163d487
msgid "``file`` tells the |chef client| to use the ``Chef::Provider::File`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:17
# 3028df8fd3b247f7a0e7806d58be17aa
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the file"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:18
# 90c81ce30848475397227972ab9131a3
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:19
# 971ca86e7e6145baaa02b57e2a11e173
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:21
# 05b2114ba5074dcdbca9b9d861182478
msgid "For example:"
msgstr ""

#: ../source/resource_file.rst:21
# b456660d5b234dedba4aa4d4be8add2a
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:4
# 52c4aeff3a344223aa2e4902baadb2fd
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:10
# 1341cc0719654a6d9583df86ddfa0ced
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:11
#: ../../includes_resources/includes_resource_file_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 6865e0e52c8e417680d37314b53e4c51
# fc1c3f35d8e7408e81109e95f19d7f34
# 8c892f26c57a43c4b04b8731412cd3f7
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:12
# 032e27507f4843b3b9d8af1a0f86a022
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:13
# 362bf30ca6934f039cc1e81d998bbfe2
msgid "Default. |resource action create file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:14
# 8b393154700949aea4d6896f643a3d00
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:15
# e44a9aeaf96c4fc2bfc8dcdc8bbaf847
msgid "|resource action create_if_missing file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:16
# 08ef640e3c564353862ba133ce2634dd
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:17
# b74e6887db644ba3b1ea6b1d16762c4e
msgid "|resource action delete file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:18
# 40392289b8644814b6f006716f973c25
msgid "``:touch``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:19
# 2a2c01d7a13847f3acf0e8167f46e7f5
msgid "|resource action touch file|"
msgstr ""

#: ../source/resource_file.rst:25
# 8638897dbc154d78812d55d1b047e3d2
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:4
# c4fc899eef154d14ae011200616ea8f5
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:10
# 09d1b578d69143f19356683c82be5f83
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:12
# 39756912bd1848bcba6721b406a5ef96
msgid "``atomic_update``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:13
# c4f8e5b1c42640b79ffba3920dea0087
msgid "|atomic_update| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:14
# 71fc7ad6f45545daa4fbcd72bf8d07b3
msgid "``backup``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:15
# 71a0e16a78fa4fba9fcc04118b37826e
msgid "|backups_kept| Default value: ``5``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:16
# cdf048fecb9141ceaf27250b23993e03
msgid "``checksum``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:17
# fe712f466afe4e3fbf193c0d1bee45e4
msgid "|checksum file| Default value: no checksum required."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:18
# be11614f66734230a065913191a8300a
msgid "``content``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:19
# 97849d9a19404f47aaf754948e4cdea6
msgid "|content file| The default behavior will not modify content."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:20
# a223a3c9708442fe9b7e4346a951aceb
msgid "``force_unlink``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:21
# 5851cb7289da454296e5e9d25c9fc231
msgid "|force_unlink| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:22
# bedeb87965194c75b4c6ed8fcd3f41bf
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:23
# 39cb3eaadb2b4369a6e3a0d8e24225ef
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:24
# 4d9be7778f0b439ca93a375f2d52bb82
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:25
# f5ccfb1c995f4865a11d43eba8257abf
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:26
# 1a2a557c021e4ae28c6e8733ed21c87d
msgid "``manage_symlink_source``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:27
# ea9b9d7617ba433c88b995e63c5cd5a7
msgid "|manage_symlink_source| Possible values: ``nil``, ``true``, or ``false``. When this value is set to ``nil``, the |chef client| will manage a symlink's source file and emit a warning. When this value is set to ``true``, the |chef client| will manage a symlink's source file and not emit a warning. Default value: ``nil``. The default value will be changed to ``false`` in a future version."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:28
# 106754ed5b5c459cab4834b0d15d0a33
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:29
# 153d17a7ef6a471e927f6b8c25d07ebf
msgid "|mode resource_file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:31
# 66ce8c48ed574928b52488391385aa79
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:33
# abfac00c214c4421b6a4c361bc90e591
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:35
# ba13b51e7d15452fb72d3af1bd258fab
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:36
# 5ddc2ec25141404385546dbbbc73ff40
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:37
# c0d1367f2d75415dbddcb177af8b2d2e
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:38
# fae42c8541af4f7f9db4f725704c5d83
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:39
# ef69d6093c524847bd4cc73a7fdc3caf
msgid "|path full_path_to_file| For example: ``/files/file.txt``. Default value: the ``name`` of the resource block. |see syntax|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:41
# 01a067de8f264f1399d83c31271547cd
msgid "|windows|: A path that begins with a forward slash (``/``) will point to the root of the current working directory of the |chef client| process. This path can vary from system to system. Therefore, using a path that begins with a forward slash (``/``) is not recommended."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:42
# 7543630eee094be98c1670ff84101853
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:43
# 913d131b41be4007b5b8c39a7cd8e48b
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:44
# 77f4487db37c4bf9bd88494dbe2e2e13
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:45
# 5979e545da6f4a3ca40121eacf4ee277
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:46
# b5fa99093c1a42499eb835b1d8549d4d
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:47
# f8bf674a1ac14cf0ac983f3880c2206f
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../source/resource_file.rst:28
# b5555641fc8a45a4bca7c3f6deb0eea1
msgid "|warning selinux_file_based_resources|"
msgstr ""

#: ../source/resource_file.rst:31
# ea77e070f56d4af7ba3ee3f13ff959c5
msgid "Atomic File Updates"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:5
# bf2f5676d7dc49abb4985b55788fab61
msgid "Atomic updates are used with |resource file|-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:7
# 26627c53dbba43889e9c4429f9870754
msgid "Atomic updates are enabled by default. They can be managed globally using the ``file_atomic_update`` attribute in the |client rb| file. They can be managed on a per-resource basis using the ``atomic_update`` attribute that is available with the |resource cookbook_file|, |resource file|, |resource remote_file|, and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:9
# 32b0f09172aa4831b845e2145fa85721
msgid "On certain platforms, and after a file has been moved into place, the |chef client| may modify file permissions to support features specific to those platforms. On platforms with |selinux| enabled, the |chef client| will fix up the security contexts after a file has been moved into the correct location by running the ``restorecon`` command. On the |windows| platform, the |chef client| will create files so that ACL inheritance works as expected."
msgstr ""

#: ../source/resource_file.rst:35
# 25943f0b1b4e4b34bf010a065963f01c
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 59ad3086f8294b7fbe4fb8b363921067
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_file.rst:38
# a532d29b51014727a613a6eb70e60873
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# aa2f30df5a7242e586869c80d66b00e7
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# d66c3cab609d4534ac09953f16414f3c
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 7c6d7bb904104f6cab6811e785b12c17
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 3e1e720477bd4dfea30213e0fc45fd18
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 9e6cae465af846589fd636d95ae4b0ad
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 0d9230d1f98d419383a34da51bbfc4ef
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 75cca4a0fecc41f29b083c96827eb2b6
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 001c710164c14893a9d853665e0a4335
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 280382cb6e0847ab91b5d1d127eaf153
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# e836906b87564ea1b7cd4e749d56762b
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# bd62e3dbd82c4737b97c7fd400280525
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# f9f087f4c5534262ad5709307ba0b19d
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# e982c14e39c44d2584e6bd3df54f8277
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# babc102f72294fdc91241ed3c5bb8dab
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 00dd1fd564f34e17a5acdbbde1053e40
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 8c05d01c12ec489fbf2efc632568efbc
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 7c8568c2596a43a296cb62ca3adae8d5
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# e758eea76e3844f1ab5222bfbfeff180
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 809b3280e1914949a70c60752f1bbc39
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# cd0d54318f564e248a953e243bbbcd7c
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_file.rst:42
# 7c9447e233814e328985aac394a7a5d6
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# d20c9bd6143f4996920ea16677d8e39d
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# c06f3e9f9988411f9697520afa6419d5
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# a60796adaf6549cc9234271230c0919d
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# ef14f1b6e353498582ce51489fcf2be7
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 64e053ab33244c3da68bc64f36406248
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# aa59f7558dc74d95b4c2d825f1168278
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# ca23f98da1b94ad1984ee0571e6b6b3c
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_file.rst:47
# 61f7b6d8308e42eea739196c718879ff
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# a2e562f3afaf43e4b3f9d566354b07a3
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# adb8a6ad3dd046c5af0a41daad4d2085
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# a6ffe1893a3f46a08bd7703945dcba0f
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 35023a64022f4065b3bc2e782ad15cc7
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# ece058873b3141a99364c432c6018e21
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:4
# 7fc47abe1cf342618b449778a1ba6eb6
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:10
# bd350553a8074c15a0e028392a6e8a7c
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:11
# bf8e5d5494df4c0893d30342d394559f
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:12
# d905e9e363f041be985d457dd9275e2a
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:13
# 7a98249dcf8b47c7b318f4fdd55e62f8
msgid "``Chef::Provider::File``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:14
# 587f03453ac74b7e845668e1ed781c96
msgid "``file``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:15
# 6332be3f551246c4baed6a114f2a4722
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_file.rst:55
# cd37fbdd85524d23ad37265499e06865
msgid "Examples"
msgstr ""

#: ../source/resource_file.rst:56
# 81ebcfad7a9049c8b020a048be25e940
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_file.rst:58
# 91b768456e184befb74d06a6a7c4820a
msgid "**Create a file**"
msgstr ""

#: ../source/resource_file.rst:62
# f7ec86989a2043d1bbe552d70ba5ad7c
msgid "**Create a file in Microsoft Windows**"
msgstr ""

#: ../source/resource_file.rst:66
# 1201049f38a845859fd3b8b3564fee40
msgid "**Remove a file**"
msgstr ""

#: ../source/resource_file.rst:70
# 5b86fa82a2a34c9a9e33b6857e052221
msgid "**Set file modes**"
msgstr ""

#: ../source/resource_file.rst:74
# 44560e5ff9c44429abb5ee7dcb8cfd9c
msgid "**Delete a repository using yum to scrub the cache**"
msgstr ""

#: ../source/resource_file.rst:78
# 108ebe57952d498cabb481a43cbc08a6
msgid "**Add the value of a data bag item to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_data_bag.rst:3
# b765e3d5b62145d9820016de6aa0c684
msgid "The following example shows how to get the contents of a data bag item named ``impossible_things``, create a .pem file located at ``some/directory/path/``, and then use the ``content`` attribute to update the contents of that file with the value of the ``impossible_things`` data bag item:"
msgstr ""

#: ../source/resource_file.rst:82
# 07bd70fd2edb4f75b7c5503f53c80cac
msgid "**Write a YAML file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_yaml_config.rst:3
# af43ee3a98dc4d5bb23e5aba5f5d059a
msgid "The following example shows how to use the ``content`` attribute to write a |yaml| file:"
msgstr ""

#: ../source/resource_file.rst:86
# c6e04e59846f45ceb386273f20f2d9ce
msgid "**Write a string to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_add_string.rst:3
# a704b84d6c474dea8f9625ecd3e721bf
msgid "The following example specifies a directory, and then uses the ``content`` attribute to add a string to the file created in that directory:"
msgstr ""

#: ../source/resource_file.rst:90
# f5c029131ab94bca9dcb6b2bc67cbcb8
msgid "**Create a file from a copy**"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:3
# ec58cc7c9913426ba5d7f8dbc8c6edb5
msgid "The following example shows how to copy a file from one directory to another, locally on a node:"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:12
# a4e1a2a2839440578a2f7765ce890d60
msgid "where the ``content`` attribute uses the |ruby| ``IO.read`` method to get the contents of the ``/tmp/1.txt`` file."
msgstr ""


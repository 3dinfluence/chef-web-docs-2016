# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-28 12:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_file.rst:8
# 083b4db49cfe4aa8b4e8c5f83df0fd00
msgid "file"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 4c1cde9b8c4f49dcad42b8022737aa3d
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_file.rst:4
# e8495977ab4c44fbb32c8eaa39f48abb
msgid "Use the |resource file| resource to manage files directly on a node."
msgstr ""

#: ../source/resource_file.rst:14
# 243f2c4c265b4913b70ce8fd588054c2
msgid "|note file resource use other resources|"
msgstr ""

#: ../source/resource_file.rst:17
# ff22ae1800a64cf1aa6857b03b772069
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:4
# 557c323dbc754c12801ee98c9eb72d23
msgid "The syntax for using the |resource file| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 6bc810bf29204239a7e4b7a497ffc9eb
# edbb6779bc68466380f6153cc19ebd55
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:16
# 6be38b4c599841e18a4b465f4e4fa1f3
msgid "``file`` tells the |chef client| to use the ``Chef::Provider::File`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:17
# 5bfff28be00a49f59c4374c10fce9b63
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the file"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:18
# 94104314d6db4dbe82d25af7ed6b9753
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:19
# 9410c0e413f94b52997ad2f944b568b8
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:21
# 0cdf6482cb6b41e1a15a5d75f91a31b7
msgid "For example:"
msgstr ""

#: ../source/resource_file.rst:21
# 1b90cd73a2444575b8716849517a324f
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:4
# a4b032f34d1c47ab8d954236ac172cb6
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:10
# 6b0150a54e27431f9b4d2888e4a3fa86
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:11
#: ../../includes_resources/includes_resource_file_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# a5fa5fe2d5184cb7a084b310377ee820
# ceae2a4f02854dd195395c5cbfb3bf3d
# 4492ec3ca7064c30a362fe837c24ec04
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:12
# ce8edbebcb1b4446b2a6b091c8ca26e7
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:13
# 465af7fc7380412d9bc2971e87859c23
msgid "Default. |resource action create file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:14
# 5ce9557a74bf4a2f9801fb547b6d1abb
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:15
# 79e0e3bfe4fb4048b8fda96c65413726
msgid "|resource action create_if_missing file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:16
# 649665a8292145e3be6e02866847a2cf
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:17
# 21a6a2525ca2475498215e1f13814e90
msgid "|resource action delete file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:18
# c99e8b6a684b4a2fb7c8f748f0ac3f96
msgid "``:touch``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:19
# 0d2222ffc3da42018fc0d4a800eda812
msgid "|resource action touch file|"
msgstr ""

#: ../source/resource_file.rst:25
# 866d6236a1ac46e4a00611c6ae2fc744
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:4
# b8a102c7ccd64018816ea1520ae899d3
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:10
# d6eafa65a46e427da173a10017c6f7b2
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:12
# c32c1efc5d2740a1be41603bba10125a
msgid "``atomic_update``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:13
# 88f55ed222344a0e8770fc9b74a864b0
msgid "|atomic_update| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:14
# bab0f51511724fb894d28507b6d43c2d
msgid "``backup``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:15
# d78d80384457429d8deb668459dbd678
msgid "|backups_kept| Default value: ``5``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:16
# c1a4c8c04ee64de392379b52aca56477
msgid "``checksum``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:17
# acc086b2822a4dc8b229b6478714764c
msgid "|checksum file| Default value: no checksum required."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:18
# 5aad673ae5de43caac0ec9a696785cd6
msgid "``content``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:19
# 9ca2d8b537ee4fe5b862a58f2faaebbb
msgid "|content file| The default behavior will not modify content."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:20
# 6dd1ef1974bd4975af3214d88ab53e68
msgid "``force_unlink``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:21
# 5f67eb4a7dd44d349a3e5605e8da2e75
msgid "|force_unlink| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:22
# 99d9ea908126449c930aee0f6e527edb
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:23
# b212df67e87744b18ee99609a65df5d5
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:24
# f27e7ae0d7224dc8a0e5b3798a004965
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:25
# 0fc2b445c00d4e10a3a3ca0d2a33e32b
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:26
# 15f703458b504111b0c84af7e423d0e4
msgid "``manage_symlink_source``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:27
# 7f6dc3d7e0a84570bff0ec05778718ae
msgid "|manage_symlink_source| Possible values: ``nil``, ``true``, or ``false``. When this value is set to ``nil``, the |chef client| will manage a symlink's source file and emit a warning. When this value is set to ``true``, the |chef client| will manage a symlink's source file and not emit a warning. Default value: ``nil``. The default value will be changed to ``false`` in a future version."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:28
# 1eed6bc75aad42c5bd6973c8d5ef2e1a
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:29
# fefa95b8b1624994ad2a2cd1c50108b7
msgid "|mode resource_file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:31
# d4f6d65267a9434aa271f56b5bc5c2a1
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:33
# dd27fa1d69a74b209be3938ffb653605
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:35
# e51d1f9efc1045358b11c057c0a53cee
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:36
# 2621d5d18b2a421f92a7af062f4d1cdb
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:37
# 2eb4c86eb7ac4cddbc3c4f9871db8d01
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:38
# 1846d13363c346b5bb8e09f75e192cc0
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:39
# 95f03865f034444a838dc9a10b02a676
msgid "|path full_path_to_file| For example: ``/files/file.txt``. Default value: the ``name`` of the resource block. |see syntax|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:41
# 30a622e06be24cf8ad72b21b283b21ed
msgid "|windows|: A path that begins with a forward slash (``/``) will point to the root of the current working directory of the |chef client| process. This path can vary from system to system. Therefore, using a path that begins with a forward slash (``/``) is not recommended."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:42
# 8cee152c2bd14d1dace27e1ad2c07de5
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:43
# d6c3febfa87a4debac5b3739f5b83cf9
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:44
# f23756d2a9e14acab89a1df1b0c48a68
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:45
# 1cdb63cc68584df7923cb14c85c2d726
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:46
# c1d1acafa50544b991f0aee55fc3146a
msgid "``sensitive``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:47
# e3cc0e006fe344d5a6229bbc5c817ac6
msgid "|sensitive| Default value: ``false``."
msgstr ""

#: ../source/resource_file.rst:28
# 80a61f5fdcee4c7281a78e4f2a9390ba
msgid "|warning selinux_file_based_resources|"
msgstr ""

#: ../source/resource_file.rst:31
# 79bd6a92d0bb45b394cc997db56c23cf
msgid "Atomic File Updates"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:5
# 9a18aebf28f64356abcf78509d81a2ec
msgid "Atomic updates are used with |resource file|-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:7
# 97fdecdd15d948d8bd5dc98d871fe5cf
msgid "Atomic updates are enabled by default. They can be managed globally using the ``file_atomic_update`` attribute in the |client rb| file. They can be managed on a per-resource basis using the ``atomic_update`` attribute that is available with the |resource cookbook_file|, |resource file|, |resource remote_file|, and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:9
# ebb3c51e31574e1686f41fce3be6a052
msgid "On certain platforms, and after a file has been moved into place, the |chef client| may modify file permissions to support features specific to those platforms. On platforms with |selinux| enabled, the |chef client| will fix up the security contexts after a file has been moved into the correct location by running the ``restorecon`` command. On the |windows| platform, the |chef client| will create files so that ACL inheritance works as expected."
msgstr ""

#: ../source/resource_file.rst:35
# adb6d1046d754950a3b52babefa01b56
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 802beff32928446186dd0139ea650169
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_file.rst:38
# 6a4e040bb39245cd9ec11c6fc0c07e85
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 6685a56577dd462a87abd014c728fb85
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# cd96a69d7ba1454bbbe574fa639e12ec
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# bc0b05f5bab141f092bc3d5562113591
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 6b58c7a7bcae44efa5ee15724d6e3a30
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 2000c27aed114ead91040106b0d1a002
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# fd7199d16ff24ecc89248ef341fc63f8
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 10eef20e72a240f4bc65fa702b63cf56
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 980fe1ed4f0f4776ab06ea90aca77fc9
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 4117ca53f1eb4e2887d16c5041a686da
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# fcd79f9538c54c118e00c5c0ffc38711
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 1dcb7cbb1c8040c9aea17c730e431bca
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# e795ca44ebbe4a419a4689d5a78af589
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# be189c4ad8f143d1b6a7bebf85e6cb14
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# fee6786b3bb54e73a7525d29f517c4b3
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# de976e941898407596b9e56d2a0ca6bd
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# ef5352162e1545c6bfb2585f2cf4f818
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# a234665f2c1a41f78c84c40a89bb2973
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# d17b5b75cb7f4085a41c683486948831
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# db8248991aeb4ae8babf091bd8bfb4c7
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# d39e477c4be242f19e5dfbe029506b70
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_file.rst:42
# 091680aafc434fa18adb7ac1591d16ca
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 1c0510d5d2004b85891a6e707cb5f8c9
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 0841b65b906649ce8cd9bb3309c7098e
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 7a3de1f6bdec44a4ac27e77e2d40253b
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 495916c8093b4b49a7d1f48be8c9b3a6
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# ff92f41ab5b24b4ab759f95f8751abea
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# b750aea00f484e3eb677128afb10380c
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 8462dfe722d1492887f23c4ff67e712e
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_file.rst:47
# c6d4504be7a54a2c8bac84aa45d5d774
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 169cae44503048f68cc84f9f3f250daa
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 63336abe12b64b948aacf621a9b056be
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/chef/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# e8c37f32047c42039144a42b9544537c
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# b102efdb619c459ab0af730a4c86cb13
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# f0f4901ffc044b5b89c4926ffcb89d99
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:4
# 66391c6a1fb14d6f90beda24a80455f8
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:10
# 45b524d709ee459e9dc6fdaed8a1f4f8
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:11
# 248bdb9b993b49a7ab6297ea6ca071b6
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:12
# 492bf9b758774164b68d7ea4864e7b6c
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:13
# e3f9785dc422406cb0c24b1b63e00197
msgid "``Chef::Provider::File``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:14
# c626e5481fd4454c8a3705c45ca41b36
msgid "``file``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:15
# 5ca9d3d9a6b7460d9f6737f854b44b10
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_file.rst:55
# b8e5a9e5a13f47e1a6c71d1f7148a7ac
msgid "Examples"
msgstr ""

#: ../source/resource_file.rst:56
# 1e8319ae43354cb18384ffb312432499
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_file.rst:58
# 572996bf07bd4752a783e1952042e602
msgid "**Create a file**"
msgstr ""

#: ../source/resource_file.rst:62
# 52dfed5d4ae64c2bb18c7628cebeff02
msgid "**Create a file in Microsoft Windows**"
msgstr ""

#: ../source/resource_file.rst:66
# 280d41d3cb5f4b4d8ab93ad8bceb829f
msgid "**Remove a file**"
msgstr ""

#: ../source/resource_file.rst:70
# 0e7d9f1b8b2e45f6bf9211723da8def8
msgid "**Set file modes**"
msgstr ""

#: ../source/resource_file.rst:74
# 13da3233c752431699fe92ad597cbd80
msgid "**Delete a repository using yum to scrub the cache**"
msgstr ""

#: ../source/resource_file.rst:78
# e1c77cf78987450c8ccc016ec394f549
msgid "**Add the value of a data bag item to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_data_bag.rst:3
# 8fdd1d591d3d4b3390d6db1ef11d1333
msgid "The following example shows how to get the contents of a data bag item named ``impossible_things``, create a .pem file located at ``some/directory/path/``, and then use the ``content`` attribute to update the contents of that file with the value of the ``impossible_things`` data bag item:"
msgstr ""

#: ../source/resource_file.rst:82
# 6c9cdbdc0eb2422dba83951a623e75d4
msgid "**Write a YAML file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_yaml_config.rst:3
# b0fe4e65edf844369acdb512878eec73
msgid "The following example shows how to use the ``content`` attribute to write a |yaml| file:"
msgstr ""

#: ../source/resource_file.rst:86
# b6ba2f1ceac847e390b245f53ecb9660
msgid "**Write a string to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_add_string.rst:3
# 5458c715ccee4c5480fa31d1e2c44bd4
msgid "The following example specifies a directory, and then uses the ``content`` attribute to add a string to the file created in that directory:"
msgstr ""

#: ../source/resource_file.rst:90
# f8258360526a40be8a23905b57db844e
msgid "**Create a file from a copy**"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:3
# d5550b58ca8f4cd4bba897981bf9da85
msgid "The following example shows how to copy a file from one directory to another, locally on a node:"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:12
# f90abc95df254e38aa89e45ff144dd8d
msgid "where the ``content`` attribute uses the |ruby| ``IO.read`` method to get the contents of the ``/tmp/1.txt`` file."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 11:08-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_file.rst:8
# 87494c8e68e845a6923acf24a8c1e694
msgid "file"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 55d8030c1f2e42f8b52f569ee3a8202a
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_file.rst:4
# 3d64dcfeebdf46c6aaf22d2030cdd267
msgid "Use the |resource file| resource to manage files directly on a node."
msgstr ""

#: ../source/resource_file.rst:14
# f57e13c8c41541bfa8968b365aacbc67
msgid "|note file resource use other resources|"
msgstr ""

#: ../source/resource_file.rst:17
# 01678a2f6ac24e80b5ad2806d57bf9b3
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:4
# 9faf55a1a1ae4e91a347e4bd9bbe3c46
msgid "The syntax for using the |resource file| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 505c48b80e3f42fa944b68ac15e9e9d1
# c20547ae39f340cf8aba73a870cbc873
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:16
# 8813a96ad7a1416c85d28e7b1fb515f0
msgid "``file`` tells the |chef client| to use the ``Chef::Provider::File`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:17
# 8116cfa390d943cb9e3a915ae2d767dc
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the file"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:18
# 6d66029514014df79b4ec1f5c7ed7641
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:19
# 99e0cea0d2284614a4088e582ecbb22c
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_file_syntax.rst:21
# 72c6f7c53ab544db9c23be178ad68b64
msgid "For example:"
msgstr ""

#: ../source/resource_file.rst:21
# 354a2f6fde504caabdc007c0ae7b45c7
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:4
# d74c4ab36c794e81a68af53523c4ecc5
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:10
# f6662726a9954dbb90d1c2db1c245557
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:11
#: ../../includes_resources/includes_resource_file_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 2ba9ece2c865458aa74ce3dc66b8539c
# 4d0bef3978234a2a8f8ea6d6a731fd93
# 7e01c350e33d4f5a8c881185e2cb8337
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:12
# 0695e51299f64ecbbf8068f4324bd147
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:13
# 96fa4faa8e974ba8b5e1d6bfd342d7de
msgid "Default. |resource action create file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:14
# 21293bc5cd0e42769c85d4df01e3ee6f
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:15
# 51d669d608ee4dba99ce5b9e35716537
msgid "|resource action create_if_missing file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:16
# 93e1aad2d3b447b88231c11a7481f13a
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:17
# 1c1a4eb58f9c43d3b07c9952bc986024
msgid "|resource action delete file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:18
# 97dfc9d1da234de8a84e8d67808630e5
msgid "``:touch``"
msgstr ""

#: ../../includes_resources/includes_resource_file_actions.rst:19
# ec6bbb350c53434d9e297d06de5a31d6
msgid "|resource action touch file|"
msgstr ""

#: ../source/resource_file.rst:25
# ba1c1a36bded4f9292e2701604c88f77
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:4
# 32fbfee3ba1144228cbe3c7f1b50e275
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:10
# 4ec4cb32e7bb4b4d9cb4731aeab2ed45
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:12
# 4338f04db9a14ca99485c9ad93df2caa
msgid "``atomic_update``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:13
# 122ce9f8337e4a3582cf2432feaf600b
msgid "|atomic_update| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:14
# a8d1d4709ccc437bbced7688efb1359e
msgid "``backup``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:15
# a5fc4bd3d716496d9e24d4e73ae8ecb1
msgid "|backups_kept| Default value: ``5``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:16
# 723ee7f8754648a38c3b628b5e1cc070
msgid "``checksum``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:17
# c54b4462a464432faa5c35febceac7da
msgid "|checksum file| Default value: no checksum required."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:18
# d45f14f2e9334daabdd0a3cc77838a0e
msgid "``content``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:19
# 030a44bab00649e59c6f297431be61a6
msgid "|content file| The default behavior will not modify content."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:20
# f31c3d06d0a1463ea5363f0b4567e221
msgid "``force_unlink``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:21
# 7fd6e9dd17734cba817c9b81b9f1da78
msgid "|force_unlink| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:22
# 3d9c9d2cd8ba427ca38d53a530ec3c8e
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:23
# 7dc8f9f3615b456382a16c35b3622cee
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:24
# 1d349295fa1d46198a5c2e16c01e17f2
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:25
# 36d6481b8bd1481aaa2bd82c9f131d17
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:26
# c44ded8842e342dca4b8680a0beed1d2
msgid "``manage_symlink_source``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:27
# 067711ef5c6e45f192d44f195592d85f
msgid "|manage_symlink_source| Possible values: ``nil``, ``true``, or ``false``. When this value is set to ``nil``, the |chef client| will manage a symlink's source file and emit a warning. When this value is set to ``true``, the |chef client| will manage a symlink's source file and not emit a warning. Default value: ``nil``. The default value will be changed to ``false`` in a future version."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:28
# 7b2653106b7a4164a893e9ce446b2b56
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:29
# 3dd8016fe0f648e3b702ac56c0be8649
msgid "|mode resource_file|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:31
# 5ffef3da61c1456cadc8b137923f7e86
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:33
# d0ab48f4647849a7a600fbd1be976146
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:35
# a30176f82acc4e2f9d7f5256b07ce660
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:36
# 566fb1d882374337be08d9e74822884f
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:37
# 9e8ce738749e46b3a6f48d699aa39b20
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:38
# b44da05e8364480e8faa890a1b3dd8f9
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:39
# d4076589240e4dc3922e672f679a6bc4
msgid "|path file| |path_fully_qualified| Default value: the ``name`` of the resource block. (See \"Syntax\" section above for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:41
# dfeefa6bb636452eaef695d6c9100b85
msgid "|windows|: A path that begins with a forward slash (``/``) will point to the root of the current working directory of the |chef client| process. This path can vary from system to system. Therefore, using a path that begins with a forward slash (``/``) is not recommended."
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:42
# 407bf7d80e8247d397f3d71dd2873773
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:43
# bb02775e95f546e09427bc7a3a971e91
msgid "Optional. |provider resource_parameter| (See \"Providers\" section below for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:44
# 2c08d4d781f8417a82a22b3b10418611
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_file_attributes.rst:45
# d2f57e17708b4b5ca6430e31f7b793ce
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_file.rst:28
# 992fbca78fcd4f25ab51764652d08e34
msgid "|warning selinux_file_based_resources|"
msgstr ""

#: ../source/resource_file.rst:31
# 6775d2738d31499992e71cb3692e6e60
msgid "Atomic File Updates"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:5
# e24d5b68e3084ddda3a71e7008d07c73
msgid "Atomic updates are used with |resource file|-based resources to help ensure that file updates can be made when updating a binary or if disk space runs out."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:7
# 3a1428c6161d4bf2a218f5a03e880f8c
msgid "Atomic updates are enabled by default. They can be managed globally using the ``file_atomic_update`` attribute in the |client rb| file. They can be managed on a per-resource basis using the ``atomic_update`` attribute that is available with the |resource cookbook_file|, |resource file|, |resource remote_file|, and |resource template| resources."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_atomic_update.rst:9
# 09f430ab429042408c29a5edc36b0940
msgid "On certain platforms, and after a file has been moved into place, the |chef client| may modify file permissions to support features specific to those platforms. On platforms with |selinux| enabled, the |chef client| will fix up the security contexts after a file has been moved into the correct location by running the ``restorecon`` command. On the |windows| platform, the |chef client| will create files so that ACL inheritance works as expected."
msgstr ""

#: ../source/resource_file.rst:35
# f1fa41a45a9d40b4814eafdbbf8b1ed5
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 8164a994399046e297fa61dd8b920f72
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_file.rst:38
# b7a96fd3f3a247a0a3f45cf96a2fde0f
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 643ec3265bbe4cf085c4d547b057fbd7
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 8fb858cc377a4e8fa614f5829505a8cb
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# a5530515a73e43ff80a776a1541ea866
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 6ec6881678a146709789a68ee999d088
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 1fbfefcf88604e878e66c931f3bb03cc
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 01e27d0413e44d608cf9d40375ac2f37
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 2a09ca0ffbf34166874b33b10d099c18
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 7faaef470bcd4482a239dfc21cbf1198
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 87a778b48cf041eea591a7ae389e7824
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 0502d984f6b64084a817e6c6e29d9437
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# a8b23b921cea48d28c2d3a29fc4d6482
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# fe306e25f39d44f4ae706e9a9f1e95e5
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 269476ed0f444f82bea91b3ad0f357ef
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 448c6bf67151471c8004d36cd1f9bebf
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
# 5838ce0d3fd840cda617385b7232b8ae
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 0510d71c10174656bd9662b2c0d8bce7
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# c60c8bcb1dda49d2b0fa1873d6995262
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 05c6f3d779f241ef897d2d4bab16d345
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# d0a827b35ed049928654edb843777cd1
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 3bb5a6f63aac483e957bac8f3f33b1dc
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_file.rst:42
# 7a34c13e885d4b43b66c00c46394f920
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# b88f98e9e69f4a609b9d0c8ee6351a09
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 77e4df4e4d344b09a0a41f4f63df13d6
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# ec0da27e503e48d2873094e5f992c45f
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 46a7308af26d48f698477cf78491cfc3
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 895cec62eed34d13a27609c6a84e0911
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 944502da7dad4d17af65270b01bd4c70
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 54b26e4382c148e29afc99218fa7ea5b
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_file.rst:47
# 2c4a8572ef564ebdb67fc246bb925308
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 79d89e34d2144b038a098ed002af1f0e
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 6e36910d663548a8931716f0cb9c20fb
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# 9bd8c533a4a14677ab2857143db6c0bc
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# b09089814e22449a9a525d25c2304ae0
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# 271731d9a5d945a298bd744911989fc8
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:4
# c25de7b391c040c5a63613dfe4f68fd2
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:10
# 24a5be055c2e4ab4bf5fa9f64562459d
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:11
# 4c70d5f0d806482c83aa1115c9e6bce1
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:12
# f6503c0f355141028da7d5e4ed8f5049
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:13
# b0db3db5193746b9b574eab4e2670e40
msgid "``Chef::Provider::File``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:14
# 22372c0cb2ed49479c3977b5f71739b1
msgid "``file``"
msgstr ""

#: ../../includes_resources/includes_resource_file_providers.rst:15
# b00dc83e53f1449dbcb375ac46de3aa8
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_file.rst:55
# 8e3062e1eb794151a14da494b4c15b58
msgid "Examples"
msgstr ""

#: ../source/resource_file.rst:56
# a5f7864c62f54435b124635f239dcd81
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_file.rst:58
# 463441a6b27648d889ae8310b56c263c
msgid "**Create a file**"
msgstr ""

#: ../source/resource_file.rst:62
# 9688c61fc4184cd18a71b7eb1aef9e57
msgid "**Create a file in Microsoft Windows**"
msgstr ""

#: ../source/resource_file.rst:66
# fcd843166b234741816d8cb756eb4751
msgid "**Remove a file**"
msgstr ""

#: ../source/resource_file.rst:70
# 92654f83c59f4d18a7836f617a3305af
msgid "**Set file modes**"
msgstr ""

#: ../source/resource_file.rst:74
# 3dea443432e941a991f888ee8c8d7569
msgid "**Delete a repository using yum to scrub the cache**"
msgstr ""

#: ../source/resource_file.rst:78
# 3f2a0bad1ee242138149f61996f46a21
msgid "**Add the value of a data bag item to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_data_bag.rst:3
# b42ec593f7a94ff5b0a6f6fc7332a4d0
msgid "The following example shows how to get the contents of a data bag item named ``impossible_things``, create a .pem file located at ``some/directory/path/``, and then use the ``content`` attribute to update the contents of that file with the value of the ``impossible_things`` data bag item:"
msgstr ""

#: ../source/resource_file.rst:82
# b8eaca700d27454d8b7f5e0a8f2129ab
msgid "**Write a YAML file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_yaml_config.rst:3
# 3478bc454ae6464194c760696dc853c9
msgid "The following example shows how to use the ``content`` attribute to write a |yaml| file:"
msgstr ""

#: ../source/resource_file.rst:86
# 1cc92a967a574ce1a847770581ae16a9
msgid "**Write a string to a file**"
msgstr ""

#: ../../step_resource/step_resource_file_content_add_string.rst:3
# e270cafb4dc94e3ca361e5b92348a1b7
msgid "The following example specifies a directory, and then uses the ``content`` attribute to add a string to the file created in that directory:"
msgstr ""

#: ../source/resource_file.rst:90
# 313727d1e86c4bc8b3228032e7c09d0e
msgid "**Create a file from a copy**"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:3
# 8b3197833e974a868e914062cbf2e5c9
msgid "The following example shows how to copy a file from one directory to another, locally on a node:"
msgstr ""

#: ../../step_resource/step_resource_file_copy.rst:12
# ced4ddbf49224495a46b953226052333
msgid "where the ``content`` attribute uses the |ruby| ``IO.read`` method to get the contents of the ``/tmp/1.txt`` file."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:8
# 23777ff3b9534666b3431c0d502a3d25
msgid "|chef shell|"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell.rst:5
# 8d94dbd5243d45eaaecf114b4749db97
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell.rst:7
# d8f56525b1364357a47c0e06af2a7c95
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:12
# 8e3612995de34c9098a96524abd05712
msgid "|chef shell| is configured using the :doc:`chef-shell (executable) </ctl_chef_shell>`."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:15
# c6d5f83c50444217b4d5b3e6fd562844
msgid "Modes"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:5
# 62a9109e5f344bafa1dedaca19b3cb47
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:11
# d393b260f5644fc18ce5125bc44aa707
msgid "Mode"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_actions.rst:11
# 490695de19fa43f6b7db5ecfaf778568
# 8860202775cf46859042f7d584d08f08
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:13
# feb6807c42b045c7a452c0fcb37e92d7
msgid "Standalone"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:14
# 165ff51b28a84d04ada4daabdf38b41c
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:15
# f6b813ae9a014a0db5c7449e5b58c10a
msgid "Solo"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:16
# faf65479830747cb96f3c485b7a35b26
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:17
# 15d499ee901549838328344e5573b0d2
msgid "Client"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_shell/includes_chef_shell_modes.rst:18
# 041687acee22434d9e6422b1be5fda7f
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:19
# 1f93fa2c7bdd4fb7975bdfa1dd7c5c1b
msgid "Configure"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:20
# 586fde16b2574a8797047a6ca0f776e1
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:22
# 017976200ebf451dbc714af666e494dd
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:23
# 949f6e4dc6934489bb21655a01c51453
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:24
# ee78edd7b9a241f491b9ca7f6fb02353
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:25
# 8c713d43d0c2435a86f0d7131d7b214f
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:26
# 2012e065698140c1b3b42047938c7256
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:29
# 9251f355c091479f9e50c9f3433f709e
msgid "|chef_shell rb|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:30
# 01ffb6a8d9fe4a72915829f7adad199b
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:38
# b3666e620db3422db30d7f6d218d6f06
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:41
# 5d8fe65fe27e406ea886f99e16bfd17f
msgid "Run as a |chef client|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:42
# 00347a1009d34d20a1a8196139e3b79c
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:44
# d6081397691041b6b7dbfc93da68b30f
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:51
# 0edc99e6d0f44b138df7e42de38ce0aa
msgid "Manage"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:52
# bed6dcb4ff904fc893c6df0f3935222d
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:54
# fa4f161c4637478c94c18ff6bd5fa918
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:60
# c4fcc441e0174204bf53cb2482ce9eb8
msgid "where:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:62
# b458e2fb0a0643f8a629bc114b271bfd
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:63
# 28867dc2b4fa4c4a9ec8cc62d24adc07
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:64
# 77d9faf6e774429288862a16f4c38d5b
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:66
# 8a78c671d6a945b18f70dbb200f29c70
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:72
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:93
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:109
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:121
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:139
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:159
# 0eac0d7c588441159b6a1acfadad5d34
# 5526b675b2fd4fd79123b56383453170
# 2b839a5771694408b479290fa0f3bb80
# 734c5fe31e7a4d8db9997a76b8cc75db
# e2a6bfb887d34db5b97545d754563f62
# 4e2645e66bbb4d32bae6b706d9592ecf
msgid "to return something similar to:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:87
# 579fbe650b054ab2be9c5dde69077382
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:103
# 1f030507e0e24aae8b9d914b97db75e2
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:115
# 1a6ea1df1ec84b87b8a2c1fa698a217e
msgid "or:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:127
# 0ca2411d4e0c4046b9bd0dd84ad6518f
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:133
# 1a1a5f172dbc433e8de23965988dcbc6
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:152
# 486a2b3c52474597a5149acce57a6e49
msgid "Or:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:170
# 423eb841f5794920be3bfc9517d2b0e2
msgid "Debug Recipes"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:172
# 82ab86aa9f1f432f9948f98ea7548f95
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:175
# e36cb58b84a8430b8b90a1bcf84f9633
msgid "Breakpoint Resource"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint.rst:4
# a15059ff9c5448018c1fbf56bfec6c53
msgid "Use the |resource breakpoint| resource to add breakpoints to recipes. Run the |chef client| in |chef shell| mode, and then use those breakpoints to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run. That said, breakpoints are typically used to debug recipes only when running them in a non-production environment, after which they are removed from those recipes before the parent cookbook is uploaded to the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:179
# 72bb271a0a50485b8b6575e3b9097303
msgid "Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_syntax.rst:4
# 2b59c1a3b2654def882cd2cd8dcd6f0e
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_syntax.rst:12
# f2a90fefe68a4892b0b62e44d576b0fe
msgid "where"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_syntax.rst:14
# ddfd22c60236472cb12ad7a9d5138891
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:183
# fb6c206775fd43b0be91a1431293d99b
msgid "Actions"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_actions.rst:4
# 79071bd31c664455800d141c92f557b1
msgid "This resource has the following actions:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_actions.rst:10
# 5ffd8934b8c64410a39997a04bd325c7
msgid "Action"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_actions.rst:12
# 34528f95a9494c82977229e22dec5bac
msgid "``:break``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_actions.rst:13
# 7573f1bdbd4f4d518ee72497679ef20b
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:187
# 93222f1374e84c66bc76dcfeb1160888
msgid "Attributes"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_attributes.rst:4
# 0a37b26aa6aa44209994aa99fbdb3221
msgid "This resource does not have any attributes."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:191
# b018d7d5e42f4aa987ebf58519718c28
msgid "Providers"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:4
# f02936e746f8422887ee39be710b11b5
msgid "The following providers are available:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:10
# 23d4746ee77b4d1a872e1ebc8ac83493
msgid "Long name"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:11
# b07673c7551a4e8791a8cb5cb6177e2e
msgid "Short name"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:12
# 44bbf03e9c0342b782460a0ae611d961
msgid "Notes"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:13
# 9acf081d21804e6e9be36d226c75e131
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:14
# 522c5dc630674296934e3bc12e5e489c
msgid "breakpoint"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_breakpoint_providers.rst:15
# 7a0a60da682f45538d0c781abaa1082e
msgid "The default provider for all recipes."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:195
#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:366
# 3459b09d49c0445186676cfa945caf26
# c608c4abf3134a42ad7f4b5059d374b8
msgid "Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:196
# 2ad2404336ce4ded90d80c1ee84df60e
msgid "|generic resource statement|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:198
# 212412fe3ce741ebbd6cd148c4a8ea3c
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:202
# 98a2d06b33bc4cad840eb7b3497cec1e
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_breakpoint_yes.rst:37
# e00ca82f46c044db9f1c4e31029d9b5b
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:207
# 2ab8cc9c46d8400cbfcabad606fff205
msgid "Step Through a Run-list"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:208
# 25595b91c1d04e27a6a56975cdcc6cfa
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:218
# f26cb1c32cdc4d78a49d774e3a751e5d
msgid "and then run the |chef client|:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:229
# d8692c8923094101b63a420e958471c9
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:236
# 0f6120a9d7914646ba95abaf7d8d153d
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:243
# 7972c8698e1547dcbe6353e23aeb645a
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:264
# 8f21c9329557472bae9f7a18af2687a7
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:271
# ccf659ccfc7642088f72fd2332c2ab8e
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:288
# 46705e97cddb4689be8e09d21c884470
msgid "Debug Existing Recipe"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:289
# e58c804015cd43c0903aa9d1f2d2b3ef
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:308
# 446efa90f3264daaaf74f5f3c9a87ead
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:317
# e77bb46d7f1b47ce974e911bb14da5d4
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:325
# 874c8ebebc34446ca5955c7f35672a16
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:328
# 984d91b1972c485499d51f24c5b03b7e
msgid "Advanced Debugging"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:329
# 10c1685437df4420b098fb140b4fee8a
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:339
# 1a16496e48b34388bd3f8047b634391f
msgid "and:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:362
# e9bcc1171fab4bba8386c934c9b97b3a
msgid "Help"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:363
# 733d58e2c2554910b36af843b496e36b
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:367
# 5c548f0c1cba40e59d6e6188a7b13f67
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:370
# 576b580ba6b74c9b8d765ec973794d8e
msgid "\"Hello World\""
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:371
# c9d0143c368648f7a504bb1157ff9838
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:373
# b7e66d4651f3497bb8c64dd57bc8eb5d
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:392
# bdfb920b569b417d85766cebd9468b2e
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:399
# b3d418fa0bca4ac1943a8d7d0d8d3277
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:432
# 6f8b5b63b4d84be1ba83a92797437875
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:442
# b2db4c13ec544d79860fc41d3007f595
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:451
# 423665c5ce404bf18095576f800ea09b
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:459
# 8e7d41fe5c344ea29d512a94be3703de
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:472
# 0e9bf919f7ea4e05b9ef33d15e97f756
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:482
# 5cba64570ddb4d3ea35538c93790faa5
msgid "Get Specific Nodes"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:483
# 02fdbe4fe8554f48a45915239ca6ebf4
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_shell.rst:489
# af945c3bd4784ba2993df07209ca0258
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 18:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 7d93a18ddf104a9fb114fd60babc3731
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 0638f051b5cb4259b824c6f2bd9da260
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 1e957a9a5912422c823f7f7a821707be
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 3a1d2f49892d470281f5f5ee3ffd6aa3
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# ed61ece3e0d540d1b7261339d8ecc166
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# b1593b947e494670b6486a3c063cbedc
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 7ff41966abe14dcdb174f34ff5bd5378
# 6b0968b2594347e6b60380a5b23699fd
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 4f1ccae795324b3fba2fd1d8403b40b9
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 671353b33e064ce4aca7f062dfc7d771
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# cfd2891044074fa9bcfa27a6df74a002
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 8217efa537644f76903252a0df717fe0
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 04bd8dc118784cdf82db972087c5bc28
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 9498819e56b0495d9a80c5a941b171e9
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# b381912e785e4502a56ab06b985736be
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# d0145f129aa641118430a0bf64e4c6b2
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 46a43a72dd0d427cbe6624a6575a4a1b
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# c4fde5fcbbd042ff91be4e27ef4cc19c
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# c86639df553f4bb6b3d475f2bf561d70
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# efa1657d4b4040c28687c6aac46c6e1f
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 12b715fbdab847a88607d3db28010306
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 56a87323745a4b7489c92832cb0d264d
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 4d01b4f214704f20bf25a0c713992b25
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# b5dd31e46b7e45c7927dab108942276c
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 22aa4b8b1e5843c7936653fb83bc5dca
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 6f1e08f6afc54e44be27476b00b0b7cd
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 1900b78ae20546a1ac9181864f460726
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# c82ca151607749f8a68ed2a643c51b4f
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 4d8738352c03484e98a9c2fd038c68e7
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# d9373e5888564434817c88329c751e5a
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 3f88e270eb77443bb5eed4f0363e9801
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 673dfc7efa4a4bfb82eec2dce5832af0
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 01284507b0984af7bf28419b1c22a2d3
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# be45b6e24d6847cc92e56034913de761
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# ef3070163fb4469f971336d1757819bf
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 88c031f15cc74a4e99ade113aaea327a
# 20457de6689d448c9fd0ce38916265e4
# 82e6f1244f4a44cea9576618977046a5
# 2fbdaa58851d48f19e6e9aea68108512
# 9b4a3b62012544beb1e79175b829fe20
# 62d9e3bb37404f6f97abb0e03f343cd8
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 436efa2f5f02411595714e40cd06911b
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# b170325a7e024f56a3fa7c040d64744e
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# fc455eea1e2545a8829cef1da3ca35db
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# b86cab95017d4938966d8008f050b97a
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 76abf5b1e4de493785dc30e10dcb95bd
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 10ab61ad41cb4f849a559bfd1b621ce0
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 5c54fc434c0e408ca580ffda97295f99
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 8ff45d0bead34eec9e237291cef491f7
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 955480fd3aff4f0ca8cef045eca86cd3
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# c1a9cbb10393440bb063aeaeb8f27836
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 9887d82c43c74841bd38c9d66f6ec7af
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 83664dfb59654778964dd0586710a88b
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# a1743f98338c4bd8a58b2088ae73be4a
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# c5176d8355404f229e69eeacfc681146
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 6ce042e5963b4277b4e65124d70a1082
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# ab8d83fe27624579835834799cc1840d
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 6ba4cbda4edd448bb9a3dc7c8dd99776
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 6a3d925e37d14b058713dc94648691a9
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 2f2eca9a9af44c55ac38dfa80edbc507
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 51f1c4ed60214c119ab212ed9278fe81
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# f1c54bbb3b2d4d038e34e10ddb7942cc
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# afbcefb61116460cb776a45d4129f9d7
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 06952df82ca441abaaab6295f8cb5deb
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 8366fd9d760c45518c6d9f9f3606efbf
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 6fc8d87e42a44e9497804ebafb06ff7d
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 267b136699dc423d9f0916e4ba92aa70
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 4b98e9eb378b41e09db4ad682da2a83e
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 4257129c47384608802fe16fea1c1f9d
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 777eef6e1d664bb69f46c0af640217ff
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# b997baa9b56547e9bdaa938694852868
# 54fb0f6c7c364e1a92aaf92eb941ec94
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# a71b9ba150924d0eb648953485eab32f
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 685ba443c83b4fc0876c85f9ca17692e
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# d4164cbe05684ad3a1292dbc5360816f
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 89bd91858036439cbd061aade10dad89
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# d4fac5889d5d4a5998e923c212b60eed
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 200529757f654622afde6d12e07e098f
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 3b83aecec2ee432e9eb3b62b97b67a3f
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# bb1577a73294494e87030ced7a7f2f5d
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 4d2ce8568e304d2e835df2274027bc7d
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 7f17765943884cbdae8f9ef8bcb27b2d
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 56845edc6f7e47da86da1c7ee16bd1d3
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 8bf8d194a77746cd9e7d1f53989bd197
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 229ccebf78d3487f88f16312f67613dd
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# cb06af744fdd4ce6a9b37fa33202dc87
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 42d658976c3846d5832658bd209f708b
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 62b3d0bd886c4fb7ae2eabf6ff3a7699
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 40f2e6fb0dad43638af068ec5b44b1a0
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 9b542a1c1e9d402fa5db9988d6746407
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 785a37eceff748cda87e692d40d9e759
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 5bc806b52f9843cc8a9fa79050b1af8e
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# ae06095ce9c84af18f298f11962d041f
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 55cf0e4261834385a145622ceb3bb45a
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# b8cd57e383384e46a05cb6065d85a3f0
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 946ef4de707547e3a014b81cb33a61e0
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 780b0fd00fd0428aa70e4e8939958d8f
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# e7fb9545c3764a149ed5948dd5969e7e
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# bc3f0d9533894b64b6ffb907ab1443dc
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 3036e56025ef4b34b1e863297a6fa540
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# b79a076b349e48d08db3893d07fde958
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 8130a97a58ec44a5b6863c4d04f9f13e
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# e7b030638c7f4d77b7b4b5b57a7976a5
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 998f07621f4843558a45144a3a753cef
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# f5b4a987f91d41a1ac407221808117e1
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 082e25d3bcad47cd9f70e0b61e372c0d
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# d0e6aa371b4742e4aa1843a8701fbf0d
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 4d6dd928a5204caca0f1b408ebb5ba9c
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


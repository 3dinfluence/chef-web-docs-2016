# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-06 00:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 97137ecc0549457fa50bd8d2053deb31
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 9ea627de48ac4b368b256b0d00302e2f
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 85dbfe26d66046b583649465f1ed6ba0
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 1a251dedda744f2fa01484535409ba64
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# f8f743da6aaa4db6ab067e7002137ae1
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 6c05e84e5d33496493438e7f7d59fafc
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 9d2a45b4dabc4d02a25ee0195ed84897
# 9669d8a95a4f4ec88f6058bb15036d16
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 493a1d572079454892e1ce8e15923b77
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# ea8b6020f7374a559c739c685368ca3e
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 78ab1a8afb1240f3994e0ae5972ea349
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 656cf424110e46e1ba6f432e3e2b0f44
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# b0d32805146e4f849d2a82ab32b8a19f
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 43b857a3e751498d845d1e1a24f1a392
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 4527b22f3df4495bad297df563b9d865
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# c6865f8d67184694a19eb54b42caacec
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 2e5d785b568f4e9fa0c5846fcc243ffb
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# a175606e70384b8dbc7d5feb0f636f9e
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 16de867558804afca50bf3a6608ba138
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 85a3e54e5c284037a29bcb0fb7de1593
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 7dc00dc083334199b2ae4d7382cf8796
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 3929ea8a925244e596468ecbc4cd7cfe
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 36eec2c037ed4d1db6808dd5825f1730
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# c938abeb291d4f20ab4d00109bc5d444
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 9857924eaba6454f96132dd075dc6666
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 7f0fdcfc94324ca2997d7445d62a4874
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# dea089143d5645378e03bc26eefbba36
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# ff38eec2063a433bbb9c829b232a61c7
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# fda1a608f757442daff25e388e481c34
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# ddd2e4d84d214553a995f0fe263794a6
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 1eb07a819ac744768b73f1683d69ae81
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# d6ea9181b47545ad8dddccdb8c7b380c
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# d22818ceb3b04984bce665a580021273
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 6e55a5336a0a433f973ff23bf9c3f229
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# b64f1c215f4941759a075df5a62c3d19
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 322b4a82fd6742c2bbcacd4535811dca
# 9f6ab385b4344d898cfc62dc173f9d6b
# ee901a4ff61f49c89506f67557f6e887
# a180d26bf3564d4ea5ee139cd84798dd
# cd9da848a9f4469fb182bc595f0aa6ed
# c9cd9116ea9a4da5b48f1c737a1acd95
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# ab6a6418fa8843afbf36b710fb32a35e
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 8b2b3503ba6f4364a9e43937be6b2983
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 7af45778ec1642068197ec03b48075cf
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 2b8bc5020fdf4bcfa9ee4954ba7aaa6e
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 8e8bee491b8742f2af394dfde719096d
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# af6d6108249841dd8599e91888bded98
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 367170e150704c83a4529aa57b101fde
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 462b466f04164d6ab3006abe16bb69a5
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# db182a9e4e4845cf8363e5747499823c
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 304604097a214d1ea958f393bcec2a73
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# eb6709d1a6b140c78549c04bb4f78a61
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 5c94566e4d874f7fb163fbacc27dfb03
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 93a62840b9104d209ff66c8d35b7312e
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 403f6b418e9646f6bdefdacec750d80d
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 8d1c2c9d5b8b4515939d031c023e1e8f
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 71c7fb5639ab437aad6cced93ab37eee
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# eec8e7d3467d4b12a623177f2e33a3cd
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# e232afebe659494fa0003b7d66719849
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 5dcee1dda93a4542a2905b9fc453b82d
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 5e340678bf2b4eec8a400f64420a8e9b
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 71b991c95fa54df8aaf48d0cdef362ba
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 8ae2c03f9f874ca8b9ee2433fa81afb0
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 6ae2448e0cc44c998e288ce2d11d56e5
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# a8eb61201b5548cb9287fd744a9c8bca
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 84456a5b0c8a4e3f999a02024f07e1f9
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 2f1b4cf0aeb94e0ca4b2efb672596aad
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# db623c15ffb84a5bb76b15f2f4e2119a
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 0b41eaa156b644d58315643948e0c4fd
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# f01d31bdbefa4ba1865d7ae39db119d6
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 6c42b31b6f314af38fe04f6b06614b59
# 4631cb886c5548829d88cc6a7c95d6c4
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 0c1f9948f7d3412d9f4f48c34820785f
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 58db928769a84194a7af88ddff7d25c0
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 3cf469ae42cb49bea2720a9cd924b0a2
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# e2c4feb90cec4fc9b3e4eed2659d2c1d
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 7d6a89848e964e758aa26f6254a2a863
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# fba9477713c343f7b7c0d562610edbf0
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 50db130e4f044cb580f0744d2a9267ac
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 2444f790af624a72982dd996ffdf312c
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# dbb8b50bec1449c0b3460c7533d74a68
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 468a8c8ffd574a859fa5800ee2835ad5
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 957360145a2c420bae01198f9098a9cb
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 01ccc3b94faa453d9a04a6947621a656
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 562daad2e72b4779b229dddd16c929e6
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 2f8b882d2d974a5896e91ccd8a9c612e
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 18fa8ee2b0a34cf1b032f89491277a7a
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# c92cacc03d4344f09d4228cbd4143ad8
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 049a719c1b4d4a09a6feb8fdeee482e1
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# c2bd4a8426b24bec90ff4620be94b7ef
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# daab4bbe11c44fd1b91d73f3c4b219c4
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 42d9d92055334222b608f6ec96793f44
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 2ddeaceb31d9466c845032f8476c254f
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 99a07bf87c644bb5a84631bdc95e5b75
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 265b4effb4ba46de99495b6136e5abe6
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 3f378433875a4dc2a9ae7618ce5ffd27
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 49d5440f61544ea6b5603e5d2086da3b
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 07be1b2ce4df43fbbde4829004152f3b
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# d2e708fde8624bc39b49f8652901f222
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 1673118007984ebdb94f556124980d59
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 9457b33044184804a6cddd49aa38734d
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 4a33bd66cd8744ac84796226721845d1
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 603fa77eae25497c9ccc9e971c4847f9
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 3b7cc0e33a314958a2fb6d5d1768dbcc
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 2b6c8b5a25fd4902878f9917192c1542
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 5669f46f67eb4e66871dc7d34f750a80
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 51a5e3ccb49745f5b8ff12296234f5ae
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 96b560dea5b64ef8a48c3687ceabbf9b
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


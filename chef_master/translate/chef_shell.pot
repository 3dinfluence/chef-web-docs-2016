# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-09 17:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# f78f1ff0d65243b498153b4b0163b4d2
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 62340bae49bd471aa84cb2b1a86c3dd9
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 9ce4503be0db4d519d28c919c8d2777d
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# a48e17390df54c39b033746e2aa6f227
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# eedbafdf569e470280f5e36aeeb65437
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# b22c70cb25cd45eab8d24a1d051efcc3
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 2b6fa39b57ff49809db8fb388be848b3
# f46f0ee4a1904b44a8d4e971f628eff6
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 4e79ce8259d543eb8421f39bffe7f116
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# ce4e116d88c24682b88aa46419ddaa4d
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# e1fd38ec25a24496b133afffb1743a62
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# f573971b151747aaa2f749d94dcc33db
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 07bc2bfbe7f540a48b00c02e6c7476da
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# deee624131684ef391b13bcd4ec222ba
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# e0a4c255e8f04b20a3d510226fccb6c5
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# cb912a61020f4cddbe03d8ef3d87f046
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# da05d9f10f6d43cb9e4a0f1f84e6d02e
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# e57c2934aa804a60ab76896209c548f1
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 66eeaf87b5c24fb99e1566bb1da61f14
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 602cb84bb06441de87ef1e02711a61ad
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 3c2df128fb9d43baa7a0e98bfeb474c5
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 8722e1952e8d4488aa0c1ac179847efc
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 45300cc900044d5582000132634dea88
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 9321a220620a43819574d2768666efa0
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# e59e97011fe3480194aafb75a14b4853
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# b70b901b9a5541e1965b85992d2516d8
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 37c67920d69540f6a57ebaebaf4746e9
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 3fd97c689861401980e7de332b206d11
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 1abe263f72fe4beba28164726e06988d
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 340b8da76e3d453cac7dd07bed615867
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# acb64972954c4c41aaf95ee6c7432247
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# f6cc94c156194ba4b19913797ef648c5
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 6697a06c02094d1580d7d7287aa1aea5
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 3aa3423c62dd49e181138e538eed990d
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# e98e6f659dc64b87a9ac3702c151fa2c
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 67081db2642e4cbf8c65f7ca385e4364
# a419ebd3244c47f88f67bd381e4b9e71
# 52ad94e31a7445e793d8c5307a7f217e
# 59897d11cd864848873f79242f4e8e03
# fb6c52b1a57b4b72b5b444fce0fe810f
# 8141b52142004cec9e27b9bc783f16e2
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# a9074d26bec244ccb8d0ea9278007bd5
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 709c53a3146e4287b8b634aaeeb01bd6
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 7b245b7d28bd4ce4813eb2a8e727e41d
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 84b83f2db487490c941e9020890ab214
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 7cd1c7837eac4222bc3350fab9b0e8a8
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 6f92e0a15a3c4ff79482949551b4f0ac
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 1aef71667fd140b0a7da2fac1c91e907
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 3ac07d21b6cf4934a67d9db2716a0fde
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 08badeac94974ea5958360b0d2299b3a
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 5dc79944d8e64d28aa3e66e79455cd79
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# f9e29f6580174b8d8ea6dfd2a074b76c
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 86b40977b108471a9d28537582e75f86
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 43447a71149d4d67b27db181d2073e02
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 854460a421334756805f25c9c3567d9e
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# ffca82ab20fa45f2adcd432d3e00f7b2
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# fd3f97708ba34f4ea5adf3768851323b
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 25e50c54f5c54e00a8b3882d7aa68550
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c81419aff3ad4afa80abf14a6f314808
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 8c8c21d0220943a5b5c58e4e30e4d916
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 05f5c7b1ff5f452db01f85ec4781dc50
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 449f819f50a14912808c1add233ce6a0
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 48588252f49d453d86159f4b3bb7fd7a
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# f81f9a3869454b23876176d13d03255e
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# ba5238365cd247d09b6f87d4614eae9c
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# f3562379790c486590cfbb1ec9d2b0f9
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 52448f0d32974303b3dbe4fb2c308276
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# c1145ed209534526b691b07f2331a939
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 7c0e10ff7483466abf08246a31051753
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 9ef64c5bba0345bdb1674afd457a22d1
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 75f3d0f64e4848ceb1a9da37f05fb420
# b28e7e80c4a545588658e5b4ebc01987
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 60b3f15316a44e72bb6b4c17fda7cf40
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 6e0f1d6766644207bec56b2b5dee224b
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 8bccf4a19a6c49e89e475c479f732791
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 6bda16b797bb4259940332cd646d3311
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# b2dc79b6793a49b280bfab07fa412845
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# c31d6e835cde40809d18451cfdd10890
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 7d30dc2b2f6a4e88be0e951ddb58a0ac
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 6424c41b54174559a8fbfbc2e362d6dc
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 30285b99f41042508796e0daf3a26a80
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 6caf658df79a4690b6469c011cebca53
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 6f80785728544e5d83d4eefa49ae9d26
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 817864912a184af98bf15012234dbfc1
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 0385cf55f8414b44ba7696d962218892
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 6e7e8adbc7d94d0dade37b369f16a424
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# b5ce3b3ed5af48aa85f00cded9e81f75
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# f007f15036cf430b970e06cdb5a5f1ce
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# b008dba3ddee43ac80f67ac7a7a53fdb
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# de7a86cab720448fba1a183b4757fa1a
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 1ec3b3055e404500a848d6ab090f35eb
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 95bf49798d1547bf98edacd746b474d0
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 73b090c576f242e980ce2c2e49b3c1ea
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 1afddbfcb6dd427283406d4cf778b1e2
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 8af34c047d3f4af6aaddf7a6cab616f0
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# eae392d6e3db4968a3f99889dcfc114a
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 55cc095045734c548affda1875167d83
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# b49787e4ea1c45099f44bcf54e3ce184
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 0719a6625133439f9efa09a29a63c389
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 2d76c303f5f8451c903cf51c4ab692f6
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 452447e52d9448bdac2119d857fb80ce
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 7aae61647e5f41b8a9dcb6d5385016e6
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 5341673a095b4036b26e1433fc2082e6
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 0bb207135c03490ebc43b1639327b014
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# c0cdfe4ef3cb4e60becc0fa96f6d6d56
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# d90a41ec294149ada249e0b593170791
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# b44956291e85408ab43505bdfabf7c76
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 095efb39be274477800a1c33229a5296
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 20:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 73471adb6bdc4a598a3094ef592013df
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 84d3eb3875d34c05b1a560d9a8b17e11
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# dddfbb589e7140a1b678b980fdabfe4f
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 914137c4ce8d45088806246889c5d0b1
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 57ff03dd12f045ad9b443f7ab387b97a
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 5e466c394bee4901b67049dbff4e8d3c
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# c161c3e7ea2542bdb7fe33323444178a
# d674835de77a4dd5b8a1c0f6eae6c6aa
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# c6efdeb56f24400bb07be44513848904
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# a7ef485bd3324039910df6793362a0c2
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 6a86850276b548db9b866690c5cb8d62
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# c7560bc2af8d44f9bb153cc3f4aaa20c
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# aba0371142a94a438494e42b135cdc74
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# b98daccd164b49f9a742f8ff85ca2957
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# f697ebc9e55c48aaa61066e5496753e0
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 957f8d1022924d62b414caa4faeb17c4
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 1e344e2f424347d6af400402a814e780
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 57dfbf0ec6ad4f51b66b5d68b969a59b
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 5cb6c3798e7443e99221bc211964730b
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# bc83269ca9974a169b9e23e2cc8327b4
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# e9fb7ec0b2b54050b34b72a1ede7b1a5
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# bc60e6c5b07a48e7b1373771c5c77c0d
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# ad9b6bcaffab4588878976f6b05833c2
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 44d3b3df6f7f47d1b7662011597386d6
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 4cb6410368344ccf83af0819bbb6ccd3
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# d5ff3d0041434054856d1f84e765241b
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 4059d58a544045978d237767bbcdc2ad
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# eda38d3833444483b420ad1df59d5b11
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 8f730a2b5bdc43b88e6d547fdd0a2544
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 908a0d6686ac4c89855a7effca8c0062
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 6c1fc5febe014033b06efee8cf989b86
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# d2339479ec404210ae852bb8dcb74b08
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 20dc2f76459b472aaa7338272f87a049
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# b094bae433b14e678f976217747dba25
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 32788a61744b427cb62e042815605165
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# c57d0b79b14745fba7076e6d946aadbb
# 11394b60a3c94086907052a2ef4dd7c5
# 236c4f93b26740d9a6dbda3211ac5d6f
# 6b83bd160b044144808baa85855a128d
# e25e891037d4434fa0413c452146cd18
# d8c473cb9ad041c99ada6e06db97aa23
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 53f4ef7f31344990a635b26fc05bf3ea
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# a359fb088ff44cfe99d8bd9323830b36
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# f17ac681fedc4e9dac3d17a91aa94be1
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 6fb6b91551e94345830939095df45335
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# f2773b755aec4ab787f4afb095e5afc7
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 5da2c26daf34442da6433888f3c0f1ff
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# f4cfb1b54486497cb5aec533f0baf46e
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 10865b66f61f4b1389c24f8bcfaa700f
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 3af0d476b82c48f0843915ef59979c3b
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 84884854ee454e8d9250eeadf82559de
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# a7a984c50ea74bd8ad2cb42cad939595
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 707610433748429aaa8d64a975cdd4ea
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 838a900b163e40d693e96e31dc367d45
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# f506d4a5725440329b8f1e1354113550
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# cd525352aead4871940f73c7c91b7251
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 2ddadec4e2774d0fbdb488aa578a923a
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# cfc3e9b4d4c84292ac290168c295a7f0
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 895e0c6ae44a48758c1f9ec7f7dec40a
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 001baa30e0fc4af09969c0a01ed90403
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 56d9bd323bda438e917b4dd0a42af06e
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c07aa348483248c2a679a988b2d25a7f
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# d35ace10e072494e8be4ea2cf3da0c52
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# acb7385da51d4e67b7a104f8f17d6243
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 2c46a6692641440fa77704ed66f31818
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# f0566d8d511d49ae8113c0fb5fb1ac71
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 047549c66abd47e4af138fa6a6dce88e
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# b9764ef3258c4bd8ac5d54144f0157cc
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# a48900e9a3354d8aac06e541220301f6
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 021df0aaf42d49aeab66c1af95dbcc8b
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 85e78c2632ac48999f767b77e9ac50d5
# 772521f31be14432a0e8da8c75f6d505
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# c88e62238f6e452caa2b7d150da62a2c
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# dad282f80b40490b892da33c6cd66629
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# f54854e46d044be99305f0b073aa4405
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# c1a563e88879419abde00b92d8159b81
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 51e0ede61b4d4af1a0b91646cab056fa
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# ad9fcd0908ef43dd8f1a4547a7bf9494
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 29a293f5264a4481af05603646f3b563
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 760544ae8d0a41a38ba7e666190efb76
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 86325797fc7e41baaa87d2a888878ee6
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 6debb5245af14064b2440195a26d047c
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 6f64c677c865455887b4993e53b7782d
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# e85f14d0a3554b9da3e2ca3ee6bfa83c
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# d3cae56f8fea4a009066d950dff7dff1
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 82687b2980c24551955b906e3c5b2c08
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 4221be26260540a1a90785d0c1b72e37
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 0c44bdfa662241c29701c3e183120b68
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 13b9a737493040858dde7d1f8e0052c2
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# ed3cd344f5f34cd99a6096cec93b7c54
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# d9d18067a38e4dd683b50d96e7bbb7f7
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 219a6117ef2e434f8be424cce45c5f4e
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 8ee8e8af9eb34b7d854f8133e802392c
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 376d607b43cb46549d81b5cd4249b6eb
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# cf1556ba82be4fa3bb455324fd8f0a53
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 9da53d6e4a774d5eb4f228444faea77c
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# c1c64b4cadee471291af1694ccaaa3ce
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# a294c9fa42094eb7985b339f36e1e7eb
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 6058290bd3754931b6f14be5cbc83157
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 085a7928577142cb9300292010461794
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 85c1f661c6504cd2b2a0929ae816c329
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 0992d348f80e4e0b963e44aea2d3f809
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 01bba7c686d24a49b88139aef5a18dd0
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 4cf883e500424ca2907cbfdb2ab5f57a
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 305d55111b2a4c15ae90542d3f972daa
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# b1a1508a66cc49828b16f72410f166b2
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 1b99acb3d01448b8989b735324d87bfa
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 9bc6375898d14fb1bedd137fa3f18cf1
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


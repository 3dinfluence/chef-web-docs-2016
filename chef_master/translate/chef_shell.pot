# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-27 15:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 7bd98418b2e540babf1b2982aedf8cda
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 66844057633c46a3955c4f542e7a6eff
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 77f66ac179f248cba31e7181abbc06c6
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# b62305b90d564b2e8f7ac45fae9be008
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 142a52e7aced443b8e3d898d381b0bec
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# b18ccb96bd334c5d99d2f8baf6c5f304
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 52397707a12745d5ae04a2e7eb541374
# 789bbc0c9252438ca40fa0ee0f9d90f7
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 8353db69cffd4944b15518d56465a3da
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 1defbc399b5d4df1bf6c5f68196ef36f
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 441ced6b86e8437caa0c5bdb04792ea3
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 351d566d8bd54af48422255d4387fa08
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 563bd2ae6182499ebc2574e75e261a27
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 353d6645369b4d859b862a7d44140bcd
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 7f4d742ab5f942d7988966bc3794e8b8
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# d5450406564a488aab9140f8f3358e7d
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 8497ff89c69e4ee4aec38d4ce146e9a0
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 284e1507c9fa4797a881316d4f96d675
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 4eb46c0d44bf4547affea3759cd21bac
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 80804469a7134ac2ab3b59d127a357a8
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 621d2710d3184b3ebd43a94e06bb45f1
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# c135f55b8d1b476d9a647e60c01fa8a9
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# af1f61e88a774523957ea7252cacaca0
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 83fd8e866b3949ae80aca4db7a7dc761
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 9cd7acf543bd42a8929024d360aebdd5
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 872235be6bac4ed4a421a1702474dca2
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# dd12d242b8834a8a86500ef771a93028
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 11fabdc1123e48ee9562aa47d8064bc5
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# afcad0179155455c8cba7b0d27218efc
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 27bf0f50568640afb608b6921e567069
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 9003cb0a758b426dad7696b9a9ed948a
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 45fb2f491e544ecab48217c3061ce2ab
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 2c80e9dc57ae4d399a2723d44fcc7215
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 7758a305fed14418876b930fb92ed295
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 83d6e0d823414d5aaffa7c8346e29eff
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 3c9579acb6b749948c1a6a7edf3fcab0
# a1dabeeeb846429683e99c0509642b23
# 328c39dc09ca4d889a31381fbff600af
# 255d0a90d7a34deeb7bd3b14c4f370fc
# fbc8747c20e4402d9241527bea6b3bea
# 19bc24edc6ae404289d7f0a4ba3ccad9
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 02344b23cfc34045b8a6cee600eaea32
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# aed79248627d4d60a0ccb1e6fdeea34f
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 3b19376008f34b22881b6e6cfbfcd4e9
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# ba78f59f073b47ddb230851117297c57
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 6c61bc1fc2d847c4a29a9c1a9b09fc4a
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 7dabe5f72ac945f8af3311322c6b2cdf
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# cc605e49ae5a448cbb9de86ad1aafffb
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# e32b36bc82de4930b5bd4447bef92f7c
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# f286bd293df24186aeca2bfec1c39643
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# d174c4d3012e4516b428771b947ebd10
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# e500a2f097a548e2a244bde8aa850358
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# e17a3d26114340869a9e9a495d3179bf
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# ffafe6d6df7648b7a77d72ac7df19ea2
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 1b85af937374494ea62fbb4f8cc2a458
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 3ce61a292135413f8ad2c82f59c6fe2e
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 0861eb576f074008986d006fff2f9b61
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 947bf50a231f4797a89ee90017a587d7
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 768a2ba5ba4f474585d69963795e9069
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 59991a474bb143b5a8268278ddaf9e82
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 1890f18e0b0c49d7891dae7d70af97da
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 4aa47b3f7feb4a5880d3c0858439f442
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# f33064d40390410bbf6341d21e88fbc1
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# a630553df2d644a4a122e974fa51ff39
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 59fb44b8630e433892cfb64cec808039
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# b6a4c6a19a6e425791ebd0c26b37cc19
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 89d06628d8534be284513cd4ea939a65
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 15727d6dc1d64b61ba4ac7bf44ab23e3
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 5381648b4c27497f93184d2e898b12bb
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 7abde48a22a14931a82303b2949c246a
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# fdb6f2bbc11b40ffb54d0bfcd89819cf
# 4fc3ade850664db78d9de308e21c7daf
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# a9d4867cbde24306842c3f7bf285d390
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# afdb455d89f4488083ffc746819a5254
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# d4e98157dcbf4105a655dd201f71d238
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 6b837a68fa5348ceb2bd68ae54ff9b8b
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 368517286d3748d9abc5fb1678d8a71a
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 000c7b7296c741f28202df6f4260d107
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# a0ac683f870d4cbdbecd4eaaef4fb7ad
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 736dd47a909b488da50f7d3ad24c74b9
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 2248e1dd55e24b33a4979f033ee9a65b
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# d76227bd81fb4d59b9717ee472bd2126
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# d93c37acac184e638c16ac87d6675bc7
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 29c6ac10359a48bf8169ecffe4839263
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# ae9e3d02153048b3b996759856d3b290
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 6c20f8ea44534bddb01d495c240f12af
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 22b33e4a732b43768461ec8272815ddc
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 8ebaa153406e4b38ae8ac7000310f34f
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 9c8484d472db4d0e80f7bc01df15d2b0
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# f976be36935d4e60bf9559ce1b394570
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 117638ac7c1a42cb96b502cce14d41a9
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# ae6fce447b174f2194eccff998782eaa
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 8493c39c0b5e42279c60b436d56c08b5
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# bf7b53785ec944fd9a27efc819a89ac3
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 73ace3e682224964acab4fbe3570d27b
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 85dbd589877f47c5aa768c7cd8bf096a
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 0c6edc7c20514be79b8e35089f841f76
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 0aed5762262d46bab45b6ce31955b062
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# bf720cb5ab524cca952dd20956fbeed4
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 23421c1f172746c8a57c6e48f48f7e7b
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# f451ba4a6c8d459596e56d61bc92e428
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 88166501b0064e11819c681b42d08516
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 0fc7df83c5e8410f8c24c5da0aceaaa0
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# b9be6d6fa9944bcfb6ec78b62b649ec7
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 135b406972674a0f84a4bfdaead00e9e
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 3f411c4a8677467bbe6651aafac450a3
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 5d0909b1fd234e50b300cb226bc06292
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 84f8d527087245edb37fdbba22a59b41
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


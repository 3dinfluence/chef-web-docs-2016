# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 13:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 14c80185d78b4383959d962c3e9450f5
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# bbf59882f26a4da5be4235c6ad2bdefb
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 1a6b838d531143cc9baf6f4232581e34
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 230c2775569d401cbee8c1ea2baa3d34
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# ec0c0ccf287e460da76dda9b587cfdbb
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# e510f7bd1ebf41f3b2155c9685b70ffe
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 859cdc70edde4e1abc88ea11894b157d
# 82955f9fa65a4d248e7ba9013d1e96f8
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 723a92fdc75e4b1e886729c35b95ca14
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# b0eab08145ef4349a514157cfc3ff168
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 2b78ba4c5af4414bb3409506903bc002
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 54b90f32c88c4e8394d6a9578139ec60
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 2009d283165b486094e4630f7e65bbd2
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 86d9cb68e038451294bfb45e7f29ae37
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 63b4d7e2f02549659aa60b18b4c7f060
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 08f5fa0d72eb415bb1282ccce6dfa39a
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# df2486eb8fb24985a5dea2691f37522c
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# c9ce600a75274bba8aeb3f51ea5343e6
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 363a24c831894b3385b63619392fccd1
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 050f31a225f446368302682237ec249d
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 4a88a5b2db99410ba2b30ef4beb311d3
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# ea05386f765a4ba8aa9853485d0da9d9
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 1d2788ebf3ce49ce9dfe2c38388a835a
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# ef97bccdd36b4749b912dc4bba3f70c3
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 33358eacd6d845f1b7465aebfa1cab52
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 5ad37f1230e3421784764be747b21bbb
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# e3dfb67f4b69436191ac821c89d1078f
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# fe7453fad6d1417c8df7c9890bc3dd3a
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 4cd3851973ee42fbbd84f4afa144a6fd
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 7c813f48125a4891aba3ed9fe0148b5c
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# a1acfa6719de47b78783d8e2cf40a22f
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 3b1b36fd6d08430293c2b4bf00fea1bf
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 5935898d730a447591db9484c5b16127
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# d522a63f85d3453abfb7a01371a2bf56
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# c1d912b433354bba81479047b6a317c5
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 63552eabfd714f7380afbc6c393209b8
# a5c99f5bc8e645b2b9008423ec5d3cbf
# fdcdf8e6d12a4f16a131cfce26d0b3bc
# f62283873cd5438a8084ad9df0cf66ee
# 556b63c27849494ba0b5a54781f5467f
# 86840a2919994d68a13e95e2607fdd7c
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# c7ba010926614dc3a11faca6d0b19ce8
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# f70ad37a74dd424fbced4676611fedbc
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 71ebdd5438d74485947e3f326f151951
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 83bba80bc0af4886bc56bfc8cb6fcd61
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 5091d621554145bfbd938555eb5d7dc7
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# eb9e5b5a8e1247aa8b47fb6d21fb4d14
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# c09fd6a622c4428783a16d0449f21e14
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# a1611dbd68ad4d38aae943d2f84d9a1e
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 527ec005b7e44e2cbd3416ebb240b274
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 27984a0d735d417ab2505ebea384d4d1
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 81dd1a29d45a4e5c9e55f0842bec9542
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 99e1db15985d4ba195e955b403cda4f9
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# b6bb9eae3ce346f79adfc57c32c2c9cf
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 9edb48929b5c4d30ad3e562e11133827
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 9bd88a1d39554c71adf986fa907f9f86
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 0f60acc15b52481fa4a3777c34446220
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# cafa6c733a334166b85e8c68129acdb4
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# ca8209de4a3a4b4ea99c0de3765282c8
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 8feb666a4c1c48778e43a51a72f45e14
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 4fe3c7ac8f8244efa85c2818e9854520
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 4b3ee1e25adb46c3b405f314ac1be3ce
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 33b35dd0aac348a2b63151056d054fff
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 6d0b77cca9fa4e3aa7f3f91300dac946
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 46c2b53b039f43179dbd891c509da229
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 4541a01dc20e4af5b767021c3fe11d53
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 7aba1fd019544a728286c73181813861
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 99b12cba41db48d78b2d4bd6ea81a890
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 2444b2c5da104a429d89a0650bedab61
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# bdebe9131b534466be52c43f35270454
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 7e88a85289524a65a1b6ad36a34eef27
# 73afd4d0a95a4fd984ecae336e0c2fac
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 39bcdac36f3b4f16b86ed685cc4a23d2
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# bb69e0a78f994238a7c29bf38766bfc6
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 1613b4848279484384dfdf95497c86fe
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 9f588de54fd442e18b3d26bbb3b22b61
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 3825043b39634225984021cc9a0c6d0b
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# cad4b42f768d49fd8c4c2b455da69c16
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 234feb8b935c42a2b5ef84a2e248bb2c
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 58dfa9006d6e439692a7ac04e95c438a
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 6aa21a8fe8304b5c8b3bd2c046385288
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 44ce4e8f948e4b00b864df2747d96b55
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# cad52933b3b2407eb49434b622fde583
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 23dafbf85847431c85d7ba062c553e02
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# bb5ff402a7144f89a7c8e2473507e5b8
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# afa564d1d347477684e64f96d2112db9
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# db3cacd8d9cc47dcb2bbef328b9c12f0
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# f513307df00b4140b31be15fe1998eba
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 6529e7a3da0446c7ba7c009998c096d7
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# bd2f9d27331345a39aa746eb2c0d3b01
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 6984f61414e34c189366d2b981e79344
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 1f8a3cc88217495aa463a7378852a078
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 63974ce5af1e4bf488f11f54e4d4b9ad
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# bb115089d25c4a5c8ebcc7d2c2ba1ab2
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# cf4f87cc10b548de899ce9874577ec14
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 4b4c19107190421c8476580d30fbd150
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# d1a49252be8c45929666f6657529f62b
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 4742a6906dc44bd189574b6d612596fe
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 93923839d2134915a961035ee4535485
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 6cd3cbe9f67140779cee9c23511cea87
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# d9ba433a3fff4564b985196da87bde58
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 157167839e6b459cb7e9b6505c0f9a26
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# f933b219fd0148cb95e7a9585494b4a9
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# e1f648f288924c458aa119ecdea7b6fa
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# ed0dc5b1240c4b4da195df3ff3841cf8
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 75d415917f1d462aa23552024166d45d
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# e4bef1d30ce64885bd30864027f7fd96
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 8312bb66ea104e08b713bef2d79b9d1d
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


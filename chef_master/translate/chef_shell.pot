# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-05 23:33\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# d3db04ae47d9414cb41dc1d43970f7fa
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 0101c521b6d6426c9a2b92d5d3a7e059
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# a291a1b993af400b88aba33da79dde31
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# e49109c8fcfd4a50aa005161122b0875
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 78bc0664273242dc98efa61c5ab88f53
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# c0b2f75b392a4e2dadfc2e5b8ccade13
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 38cbae32c3954d96bc6242fbb7996900
# 1b74a9b14d5b47a9a162c04e5cda7a41
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 17202281c672494e8532a2c6a8d7395c
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# f7bac32b79454b79ae316535df3207d7
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 0f7edda9caaa4526845112d1bccab778
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 9181024ee31e4fdbba0326a97f186838
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# ae0d7b4fc72b4b3192f77b50491ceed8
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 39c80fd6f29d4ceeb064423eb0919b5c
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 9f0ace53aad144a3a87baff520349b76
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 867d7d1620d9431d947b1341715d506c
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 352224da02b84d47bc74a792e7a5ed13
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 423236aa943c4c63a584889c9d484b79
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 48a85ae5bf2042b4b7e190a38b4bde4d
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 1fa5d771a7284f3a8d4dfc49e480038e
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 0890c8d721244f37811414c7609826cc
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 2768a1e916c54347b1878235b96b71b3
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# b1129106f8634b6e84bd155c596cfab5
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 0e85dc3c92ee496e918bcdc70f69fb09
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 20f9d97b6cfe46078a1d97bdbcb4d448
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# bab6ecbb169747ba92530ecdb62fa4af
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 535dee7866514f25b7c3148d7a47cd58
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 530a5ffd820749ab88697b8857912b43
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# b1577fab52034a6183f635ac5017100c
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 2dc023506abb47d1a621cd857aa69595
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 6057903c352347a6a4d42b0a74a0d18e
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 1110b67f14214b9a817bd374c99867d8
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 5f24d80cf3404663b4a545592457d39c
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 7fcccadeae0b4805b4d0281e72fdd288
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# bb1f5f4579b7415a9c11bdb1ebde29df
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# ac00356cead6408bbf48eb3edfedaacf
# 8079028e094b48dca13bfab130c89ae1
# f5965c88e0d34bd5b672c2184cdc889c
# 02419063d21a4ae0a563ed5a1f5eb091
# b4e7cf07ca724c71bd9579cfe66c27a9
# 2575bcad6d2d4085b5ffa66304b01347
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# a9fabdd26d3e4dada807004d3a386f1a
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 4239aaf2819945a890a099b1f94e0979
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 65ffacfd69624142b364ee33da6d436e
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 4056afb5c3ec4f79bf465a975c00f6f9
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 0facfefc6fa24179a18c80e7cb3f3c4a
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 7b4d47f4401648f49fed1591daabf9ba
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 666f1052c45849c78118d464b17e66ac
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# c42b55525bb34debb6c817dcd8b18fdb
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# f43c5307908d47bb81ca07ab4b6081ac
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 44f37f06cbe64fedb5ce86288243e155
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 06ff2e602e9f4fecb6953e90aaafafbb
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 45f8a8695a73466cbf9c4b0635cafaa4
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 6d824bd1bb7148af9a64ccf5c0794d31
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 8cbc0d688f8a47d0bbdd7f68b8c6671a
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 79a4e76573d7449f9b9d9fbb8087b58b
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# aea13f99efcf455797d82c513fe80776
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# abb8278cf1f64df4b6ff0dda14c2b524
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 8aa4d7881a87473885b56a73135f6205
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 04617651b2a6484db36eaf98947900aa
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 40d7a20e1b2540dab7171669da2881a6
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# d7db8b98709e4a8c94703b34ceae0b0f
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# e42504200b8f49dab41d136587cb4c63
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b5d8909b394f40b0a67d75006bdab49f
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# f0f15766722344e1b6c339aaf63892b6
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 1ac3c9bf636c44469fbd6a0d2e96385d
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# bfc909978f7641efaae8c41c98a1ae22
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 6b348148460241e683db9bd03114ea9d
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# bc8431dc999b40ecbf47ef625c3cd3a0
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 0c730154f0cb4a2b9b3dce221ba41d39
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 9aee8220d17440c1a0432f35e0c945ee
# 9e6d3e04e4c94eb8959648d43a80c3d0
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 73ccf7c41b61434eaad052af5e741c99
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 0088a0cc46424a14b36734f1a3a827f4
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 0db5ab744bd34abf9f7f4588db6fffa7
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# ad7d2b1fffab4fb081abdcd6ecf7a5f3
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 68ba6add67534c7ea265f66ba05a177d
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 7b3c516e94744b4a900ddda13855cb9d
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 062e50eb01da42b9bf5c6b2a3e7b4864
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 209ed33c82d342b8b593e529fbbba891
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# f8c2b2a2549c42efaa32d21e8bc79087
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# f242ad845b50444cb5fbfee066cdfcc4
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 772746f6201d457fb2fc8fd21ed9c30a
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 5d62cb6e933f4a8f9fd867af78499333
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# d906d472394f448b9d2b71aae532beb9
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# dda58ed66f67418dba4999679f62a1eb
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# f9c0cdccdcb04dc7afb773f5060ebd9b
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 367ed9d62b354edc8137af01e1375d51
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 90bdf7fb3d114dd39ad0d78d19f7c532
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 9bb079a66bfa46e69f52f2ab4aefb008
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 1ada02c26b0f48b8872875a793508c11
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 5fb5324bede347f299faff218f45aff9
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 00d6be3ef0f249b0bfcc7a69af029702
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 298e758d2e4a439db38652a354cde9fb
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 98904540b75345b28afa94fa3f00658e
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# e50cbafc1f3e44bc8dbb506d9980b155
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# be4a92cdf95b469fb5189a8121ef1b6d
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 00ac4438d994428aaabc5ebf85f1ab7f
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 4b735c6447bf45bf99a73e1201a43b13
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 3698fba47fc94e47959ef2695a9bcd61
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 61c228fb6f63476b8406ea940ab38efd
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 1f1a4051c279447bbe5b572739fb1b10
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# fe3982d3dd53436995481f02bebad25b
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# e9e635ad353149119babe83fefe2969e
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 7e6191c1520a4c2b8b291f7d12ec271e
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 59ae5c7d99354b67a8660f1c4fd71224
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 0b3ed7ffd5984e448c6a332d5e565b18
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 6987ad8dd7ca42e5914d5b7ff39a157f
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


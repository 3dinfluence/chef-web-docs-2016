# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-19 10:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 7a01fcba014a44ee8fe2395d4c0d0f11
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 62c715f360c74530836b0ce132796c1d
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 0c2d9e3903ee43c08574ac9d61de0258
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 05acb03639c341b2b9fdef1848cd90f9
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# e292fa51a2974bbb9cca3917b89fdd04
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 3aeac1ed08a74ff6a810ac4c255d42a2
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 4c0ca4f0c40d43b7a3491b97a9200b0b
# baa7dfdd71774fd29cb9851ac69e0ad3
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 51d8879ba11d40c6bab5996ae2a1fbbf
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# e322330aa33b405b9fe546f8f4490d25
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# bea1912cc260410a9ef418e2e64d9be5
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 3ea3607bfc9d4e5c99e5e0e595947e40
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 5d15a32233ff4c73bbcbe6423e11ba98
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# f0b2e7af83984408ba49ee0a14462687
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 4ebae848fd4842dea261ad0f40a19ff4
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# faec227b56dc4a2fa39df4aee7cba756
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 76a44e46eed7439d9c6280ae54842d71
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 79bc01d943de42429f7db3d7750d72c6
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 9e693db5469941c79eb3803fe433199e
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 4408a9eec2eb45d2a1ca4bc5aa73b0ab
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# af54cc9699cc4c869e0ca56509c1cf80
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# d667bb44f09d42678ebd129b5816edde
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# c958a40a283048c493cd995c9e8c279c
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 21186bce10544f7aa138c9bfb600c59a
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# ea28fd88898c44ca8d7a5376e15c5d5a
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 52d9134ebaca4ce384468e08b0f8c698
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 2196ebc191f4492b883e2ed3a95e6c77
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# dd75e73341bc4756abfaae979b823cad
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# a92d21285dfe4d72b3622401950e6275
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# e3750bab9f084020b862f7f57d8c2ab5
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 5529f03c1e9748f0b710c50d1b451343
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# e06b144becbf4023a5e27d7e9f525f11
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# bb12d54fc81f444f80ec190ca47ba8f3
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 7b5c7279e1a046248f0e202eb882ea04
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 2c1e8beee1dd402c9ea339e908070f96
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 8beb4fb223224a1d9afd2197fdf55773
# 70c5549aa29843d4bc7b95a27d99fc48
# b49c8ff246ac48e58f609bcbc1e2ee12
# 30bf64b2bbb54988a30682c698f74300
# e8a914bcab264506872054e14ed4b4e9
# 4ca86bc9e5a54cb08b2d8f95961b60d4
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# c79e0ee8fbad41219265bc47c0781097
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 749ba3105d044145a5715ef8b45a77b7
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 10041ce783c84742bbc5784ba6cffa43
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 2ab3248e469145cc9d6d350cba9df992
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# ab3ef73356864c55a5c4a8a0937b3412
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 835fdf2fae9a4f8a9a919d78bb9fcea2
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 14465fa24a034e52b74cecd561f5fcf8
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 074627f02df14b45bf9e1e06e90b78a7
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 469ca34325cc4da097f7a32732f36e3a
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 9ac055950d8a4559b53548c120b2dc16
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 35fd8f0fe20647c8907aeb0f1a9425b6
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 26d149be9e904c06aa7d73a4b3c27951
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 20e64c2114124448a4542ded75344786
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 165a59ec330d466db9cffef662bf3579
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 467b1d29615e43e4917d121cb468ebdb
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 1cf92849cdae4cd2b4bbf3c565d55614
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# aedda439d16d4419973776dd936c075b
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# c553abf4d47947fcb4459b4405050a1e
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 69ce5627b5e44d71afae95d52f20565b
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# de852c8ccbde4af8bb4ec0c271884ae3
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 074b9c82cd584e4fa5c9fd82639d18f4
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# da06a246e8ba4cbaaa6f6bcb8eba6b37
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# 6e05b1e071494f4fa0d8efcf47749245
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# a3970f0e61ba443a9e7f8233253e2df1
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 096afd16335e47cca98c5b2da9c91d3e
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 7111b108bda04c57a283b45fdd2602ba
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 80e0d93eb75d48ca8d8dad94f72cdf92
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 010f23db1da749b391bd0d600850f758
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 729fad146e9349ca80497750c750233b
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 00a4f0545a62409583ba7c2fba048527
# 0f4ad62003a84443b975f2269abddd57
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# b3872a252f1c480fae2cdbd28534a1f1
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 55d441f7f8c049d6bee0b95cdf5fc1cb
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# b0b49de03339433a81556d9310de2f31
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 83b98cfd3f824c21ad0c816a75355c1e
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 5cf156eb8fc44c9190c524bcf9a23807
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# f8605fcb4d8b485fa4cbd1a1abbbc701
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 64b2b515f9464699a468ae5d3b50aaae
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 480a4b602dc7439bb5c9807c59ce0598
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 6767dcae9b2d40588218226335e544b6
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 378fef8fd9a842e89f32552f77aa96e6
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 8bdbfdcf39e44462aeea406db067f754
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 6a17e2a66e6a43848953dd1dd46603ef
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 003a11ad6be44ae6b6af1ffb5652225a
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 83ca946b46274eca819b3550cf5f3ba6
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 467eeb64e82f4fdd8661c652e9e76c4b
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# df4ddade0a584f8cb91f495a2eebad81
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# f60f64123ec046e0b344266025f8f695
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 8943b268e409475190a8016ffef75c3f
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# a561eac454e947f8ab4bd6da8f7b225c
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 09019ccdb17b40d7a8df288cc66cc3d0
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# caafee7c40aa40e5987cdf850d48abb0
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# b9d23809423645568001258bbb582939
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 340f723102284a1caa69fc9e4a74f8a2
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 7ff8a997a7954c358500a5b8ee64556c
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# ca369e8a1c044e3aa327dbf3168bc0b0
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# edfea8632c3a4705a6432c9e0dbd6f57
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# e55ba6c2f3ae4a6f8af4eb211e1165eb
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# a6b604ebceda4e8e8e8515af0619e236
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# ab0805d55ddb442c8b798459ff364060
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# a71424860ee64cad86b8b581186ea4f0
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# baf6ba7b1c6e4ea0a69fbf3eba37e1da
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# b90abfda62b7457582dc2e526b3e35cd
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# b5ca0182a72f482a95a3c77b6948336d
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# eb3c9140b2d14e6099a9bb598213bbb6
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 4e331e274a254d3880d522448ce5c1da
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 8154f2cd74fe486aa9d3723f35ecee01
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


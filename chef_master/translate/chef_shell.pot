# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-25 10:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 726dc2f5dfc642049c7d2ed47fee3623
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 08b0b86013214e68a9c31cd00cb5f619
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 8ba6e8ec0f7d4dd48ad13470a453dfa8
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# d027169db6c74fd7b4dacf0dbc19609b
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# b6abddb7d9b44eebbcba2f599b77271a
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# e9a55ba45e1c4db39ae28ce087a4b307
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 5c94b37e635b457191575b26a7e89e79
# d0a778c703a44e78885335188afc5a8f
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 9e5bdd6ddfd94c9483188e1e54c2c833
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 7fcb3e20885342ac9d0371b47b433d3b
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# ff403e8cb1f44c05953730f4aa7249ad
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 8cbad446519344d2a43f0cc3e43cce87
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# e35ed19dd99f47fcb5b475ef75b97777
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 298808d5455944a888f91d07aca8fa71
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 2ff2f1deea4848c2b39d4324d3c93d17
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# c49e65be4b5c482cbeb09dde4a210f6f
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 14f8d6ac2f6845dfb098f529d6d8beac
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 64abe307b28a4122afc8a6c6e2e4962e
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 9fba38bda7cf46d9b280ef7b77528901
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# a4b58b837cf643e99e46d4ee9cb2d3f1
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# f0c657ea44fd455b8b14f894817b12bb
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 2f31daf9744f463d999a148afaab6558
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 08dafe5eade7448fb2f2727a4680c248
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 86f24da4b43e4e889ee7053759f83672
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 65c9a53dfbb1411eabb518b41a92949d
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 06c5da81d40a4deea928656e4e159397
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 9fbcea6917fc411c8a886e0be5d280de
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 3268a9b0f2fc4f93911f665bd7af403f
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 6bc9673146e74419acd7eb9bb9f054a7
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 99665a42516d411581a9715499918b2b
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 563b703c277b46249ea01dedae47f129
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# f5efe4cecb88419c884f68eceedbc1e2
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 592a3814e1fe4e90a342a274b26075de
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 97374b95f26047c9ad24242180712fdb
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 154cd9ce171147949cc6e1e5e3329033
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 7c26ec81dc044a04b95ec0c7374c0651
# 63e490369aed42a0a9c8f78ca0bc1e83
# f8e6142179d04f1594259336fb9d99ae
# 9664be1a5919409a9765162b3ce223a6
# b26774cc5f3b4a99aeffba3082c470d2
# bdaad749ff104a9b955210fbfbb08acf
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 1c0b415722214a12993a114c4585b2dd
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 10c9f1354fcb4705941c19781e33ff9b
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 26330314ede04e738a63ea7f2a5923ae
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 91a322f9279e4ca08b26d8bed5439dfb
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 3d01a4f0ee774df6908f0c5a5e4fcad9
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# fffff356c97743a69c956e5307b92373
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 8e6c8d33bf5842258beeb6f692a96a11
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 962680df5a90431e9e79f695362abd7d
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 48d5eb8780cf40c489ad72146315cc9a
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 402237e0ecad4ad6864ac9ddaf89a227
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# e0b098633461436fac9e6203cbf8ec05
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 2bc2c4cb2b044c1390e6516e44600069
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 600802d7efca4139926c0e7c90c61890
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 065e7b40ca0243238308706fb43284ae
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 907f113c005f4df59a54900ddb154d80
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# e93dbd5045ad4fea98086dcbbac251d9
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 17d16ea78f5f4d7db907294a271b6378
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 44b9ecd2baae4222ad62e05d96f07db3
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 5a7afd3181c343dc88670428cbf8e274
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 3c5b8106109c4ef99c69d30af399dacf
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 2ceb408864d443c1a9c81d2547f443f5
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# a7be99e140984f7097aefdc0ff00a134
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# f76e203b10ac448eae69f9c6bda4baec
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# da593d5dd2574baebe624f523f2c80f1
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 617cb59d582e4fa3a62f1718b73311ab
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 72a12e84cb3c4e7983d1a6fdc360c1b8
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 045be13948b044c6bbfa8886c961d72c
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# f671afcb733d4967b106e140556e68b6
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 7a4ac90a9cac48e7814a748e851fe95d
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 5f499d8ac9cf4a63bee5dd4dcf02017c
# 02ff8185a9a04dd991e3f9c8a96503cd
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 40d730ec88f34a249a61d9d0e95b50b1
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 92ebeba86d794ce6937ddd0138fb23d6
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# a087fca29a3b463ba9422855911f0b34
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 1fe311eb2a2b40b4a301a3515b36da09
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 72f75d39be9545138e5c28b61b6a4a7d
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# cffc426a289748eba36a5fa436637a10
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# d07a71d0318b4064a036c92525dd062f
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# a6fcbb85582c4ee0a53a12d374368808
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# df3b4fdb4a3141f3baa8af79d9580543
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 53a61376f01d4955a406d07cba6e6120
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 46aefcaaf41747e9a61fc186724cb208
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# d1d86b9b11ee452981197f9b587f366e
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# d381d2a9401e4df4af1f5790f1d989ea
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 09c74a2fff424abd8b117764b659c88c
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# d3c37032d15c48bc8d82003426330487
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 2324dfc5762447f68861d5f602d3796b
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 79ce24a4c5f64f56832366ccfdc5ae18
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 460ddca8f44740a8b0653de158f516a5
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# f610abc6a6ed4270bbc204c35a557d03
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 7a9e6f35a13e4022a5488e1ade793ba4
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 498e88c6babb49209931262d8a55e0d6
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# d86234047e654e9eb415b96dfaf84e09
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 5b2389793097496d86319a5c8fe9c606
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 68b0d1bd81794cea9b2fc04d1586c8c5
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# d11e9408e9834919bdb09acaa179b4cc
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 9cbdbf8c23f749df90e961da42a6bbc5
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# fc4d3c7a076e459c95a62df62004dbaa
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 39a4278f318547a5b351729a022a229c
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# b0213caaee0b405d9a33cd922081278a
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# f096959cc80f47ebb09564202bffb641
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 8f746258a61948d3b96656a488c360d2
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# b62ef23dbdfb487eb1f15bf2b57949ce
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 05b12f7e8f9a495aac8253290d1ba0ef
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 90d5ba0cb3f1418ea79ec015b07c63fe
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 944b16c1688244f6bf5cd479d3a32fb3
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# fed243649ff3484486a2ece9d62fbaec
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


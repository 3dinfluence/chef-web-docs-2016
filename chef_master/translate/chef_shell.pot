# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-26 11:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# e82205f5ce0b47cd9f6558fc4bbeda37
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# d9a246dc59fa43a8b3f3e22e21e9917b
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 5876764597ea4a37abd6c50aacc3671f
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 09d858ffb06f4af7a5be279db644e97c
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 0205a6871eb547c0b1bd1569aa564cc5
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 8e14dfad3c3d49158394e50b39772660
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# d7d56051aa8c493aba44ba88e776f9de
# 78addbe074fc428785235624253a04dd
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 47503a4a81a145beb86307aa2113a80e
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# ece023f17fff45e6ae9e119006d75e78
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# ff3e314197a245dbb1f33e57ad46dea4
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 32b47fc31c1641e5bb2e54a5d8f45699
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# d8c7530b06e942edaff8755e78a7c19d
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 8d01ef0270e54ce58d6ed7dbd743113d
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 0c665b9e1b854bb1bce3ef36d8f78576
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# aff2e009b53c4c149d8dd2312ebb4643
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 722ea8f19b0e4ee18378f9b83b26e5ee
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# da8a12d9ff334e8389f2d319d9b0b335
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# c01230b8438b4977a9d5d244d14ed64e
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 8c612df96c3a46a186ad265d7200503b
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# ec2021f21ed645bb8f181ed3f190c659
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 730969fb23284347977cd628e4661b9d
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# b9bf301941b54d759da08eb70ed7fa15
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# eb52c5e9b30f4baa9d15175572c5d10a
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# d4cbcf29ee7f4365be86f955948d806c
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 50a377e516c146eab58f1dbf52bc2bb6
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 51edb59e8cca4463a965f60bd68b9443
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# e58952d09bcb48dc8f992b7e43a740fe
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 1f82d48516054d1f8656e65e6a89b88b
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# df70cce429bc4aaea24f7873f4b187e7
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 81cce048c87246278de96d3cbc7a74c4
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# e2c02cc341774507bb8de6f8d68f4502
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# a4042037694a4716805d0c5a757991cf
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# a4c9077cfdba40918a624ac672c45540
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 4d13e4ae102740cbb1745a872c07b20a
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 448e141e9a1547b1ac2e6782a9e4f6db
# 974c22b6de964aa0a2942b958e67dca5
# 1002eac8b0d44380a31cee34ab1cbe7b
# 82dd8e0ed1064cd08b4613a47c9f71f9
# 6c8023ac7785412bac075c087946bce7
# 48094d8000be4717b4f5843aa05c7368
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 5a8eb595dcab4fdabe0d28bf1ed7fdb3
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 8a543cc9f95c41deb8a9d53ebc00ad48
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# e85727f82cb44c5f8731cdbb8999220c
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# cc75212b31c34354990bdd3bd25fa1d8
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 6ab9cd154f38409e9f2331cb0d6ed48a
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 985d04256e2649ea980fe2d08053e792
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 839c91290ab54738bfd128a7c8f04518
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 1398187469c34b1e9af64f10d63e156f
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# bfe44401c0f44fc989bb36158a3d4d0d
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# ac402e94bf8944779003c4bea3638b3a
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 819be54400f24b5d8cc9a8cda0ccdf5d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# ed70599740c742ccba4ecdaab4495795
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 6d01d405992445dd9ccf12677a555c51
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# fe5ecf150a774c43b0a4dc180e7cceaf
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 1c3b5e9276d0441bb534d00b7972c17e
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 70c45b33d4334258b7a2fff47e3f58a1
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 3b27c09807554a5c8bdb7416de84603e
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 4b58fd2e7db047efa0da187d30e62b27
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 30e5bbc8691b42dea407d79e0889c16a
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 5b7cdaf975b94ffba5ab19930af6ca9c
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 9313fc67061445ac99a08035cf00cc39
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# ae4d5ff714114b18b47211a7ddcf58db
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# d2a414acd1e145649f958ccc4948fa95
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 503b13d150784e5d929ef6794a464be3
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# a202e008dca04cdd960c4de858c5d267
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 98d59070d1dd444eb6769a37d5eaba66
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# b99fb0692eac4ab3b1d4788a8880e8ba
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# d9b7947b74db4c26a3ee5d7401a568ac
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 99093912f96844119d9387330f7f93c3
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 3804b13d52b04697a821c634f08b635b
# 700b946ae80c4d578e54a9a01f2c1ea9
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 87789fda83fd4002866b89be6b68faf8
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 680cec08274e4f75a27a3626877351a6
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# cdbca2948ae74bdcba6ae4acec6fa512
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# fa5cbde0bfe94f57b67bdf4210fbec58
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 0c216de078c941bba7dd2809e98e78e7
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# d0215fd314234f018bc06a782b9df4bb
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 54448da586fd4967afc9ebedd777a925
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 670f4f483e704415921aa5e52b1becbb
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 214a230153e8426e955fdb1e16602212
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 07c543f270bf43f1851a74e747d32ea0
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# e4570c18b7644bf996d705fcb26eab2a
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 8aeecca19cef4bbfa82f72261aeb132a
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 12b2c0ecc4eb461f9d68927dd9cc987b
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 5599a1881ef9469e9faf371ceff8fe96
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 3cbb7d4f9a634f0fb26a18bb3556a836
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 23159f2d6c374601866676f95ad73376
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 1c7630f3363b4cc990b83056c31f7995
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# d03be2161dfc4840a4ceb691dd49629a
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# bfbcdf6c0b154aad9866432493b3dc8a
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# f9dabe68ffc842a58959482c14aaf6e2
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# d6873dbcb3834ed088a5c0db55c41cd0
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# f2af109dce3f44c5b13bde6f4eead045
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 3fa7431c4141413892d8402707eda471
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# cdfeb264481449ca8059b2c098674447
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# bf8f3586ac0c45babe9f2ae6a819d170
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# f3d3b6401a2547a39e76f2ef5645cd11
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# bc4d3b1d250c4724b3b8eb17356ee4b2
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# c11694360bb34e48b482ae72b6a3cf36
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# c824aa26e217405d9093be1789eaa42e
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 20e065fe919c4203b666e0a534836bf9
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 56495a5fb1974db1b3047b79ad334b07
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 75f28e633282406194f302e8f0501766
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 3698aff3a39645cf9d891e5ea0b37e69
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 5a35f78bf35f47dfb6e132db4f6c4420
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# bcf83f93687f40099419e26815e79a76
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 14561ae1393d4f6fa4b1755c8796ab94
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 22:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 86a223840435463a97c984b327de99c1
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 803bb04d3bb049dcb74a3862258d0fa7
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# a31d9f8ddea84adc8fb605d1149082c6
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# 33ab99631fab4e9b9d971f0e6c4f4729
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 1097fb02eb5f4909aa8c79e40b8d972f
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 97609dfb74ca40efa13cc54678ee2cca
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 0410eff46fdb45718b32e303653275a9
# 27ab3b40318b4aa985e958faa3572cd7
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# c7327329c249427398de532c1188f714
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# fd427a4be1c4401290407ddb9f6606f0
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 00668720bcb9447592c5a178195ad5d1
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# dbc4c39ede9845a6be11bfe811a6e34b
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# cfd09305374d4e6a9b6435ddfab8f259
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 17be851545b847068b74a2e60890e4e5
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 9bdb20f830f8447099c5be9e1a05c84a
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 47beae6ba8c1443ba6b961eeb66a16e0
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 58431adbcbd04e278618fcc9a16ae26a
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# fdf4950b906e4b1cbc441aae3723ff18
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# e9758dd6bf3b46c8a3640cc33c406715
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 04234916f18844729046e168ccbf03ea
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 6e73506ca2e64f55bcf09643dc2df3af
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 90a4158feaf44d7eb229a3c1e5db10c7
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 5e4e184b6f3348b887025156e3cff20d
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 00c68c55d8df40448087c236a47efb0b
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 8be1ca5d756b4be9bbc96109005e3d4b
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# bb810398f7e44fb3ac89efdfd88e0a27
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 97895df4d4fc4ffb83391f5f17e379ef
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# bafb4c4da6a0432f9a7ec497dad4e735
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 22d49e7258394fa1a0571c4e38f87beb
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# b4f2a654360043ddbcdf1b59e8373424
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# fde2b67b4a104cba8f10f3b7b6485524
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 8aa3693b23b84b37b57ad05b7497c066
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 4a32df36d8064d2fae722558504419f4
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# ca9a5a09e9c743fca4cf7b3421fac91b
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 6d2952f444cc4ac7ae9ce36d74eb315c
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# b103fe5d425744ccba2d3abee656d75d
# 74a73dc33db34c3e9a5387cdcc9e5d32
# 9d3bff36d0a741eaa0ceeb52a6fc9400
# e3701d05c1bf4a25bb4f351a3460c29d
# cf9e7448259c4d67a2c973508216f675
# 41644c19f33e4c60955a513da1b7dada
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 9d36f1d0969146719eb869301a133487
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# a75c7ce1d34b4e2089a02e60928ca959
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 2664657b397c4603b79e98b5567007c1
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 897dd3e600714b7791c5c9d1921f6861
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# f250640bbdeb4f1f81f76c4509ece75f
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 2df9866ba3f04a82b692b420857b1931
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 4f4ccd7a411146078830c664023a5ba4
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 4911c5a958e744f0ae3bb25981b350fb
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 6de7ea4f7bbb4d1cbef17b14f29817bd
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 5b3c987cf0af4770bda6f7007132ac79
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# f0c566e7496b442590f3e6c5e8a85e32
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 25be27ceb2e943378e078cdd1550c6cd
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 530f2833ef744dbc82ca67b195504ad6
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 842681d71d1d4ceb812ffc41f7522fa0
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 7d99db139f5449f68b08ddbd5a43eafd
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 19842c0cb86f418c933345c4b38ad06a
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# c60df0dbffe44552b687b611089e36a9
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 9407479bd2b04e8ea2c4d2d042945919
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 6a075bb2b7d5462e9a6940cf59aedaf1
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 80df61f70a304112a8929678cb3281ef
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 9189696b3fa142b78a2275f6c9a45ce6
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 870571d6a80c46f282852f92ee872259
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# e078dedf05404e518a665f4f8854ae14
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 3f8795d2c651487eb38a47aa7b9d979e
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 874aa9d7ab204e37b16ae21c809ce39f
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# eeca06e6e63a4a44be57add963f01e8c
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 46e28b737b4e4bbdbaa1b1dd5ced53b1
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 0857599bacba4591b0dea69f9df89fa9
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 54bd7e1962094a7f9d6262cda20c4dd8
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 454b2247738d472e8a856acfb088fa6e
# 9364ecbec93149fb8cfac7d95028f587
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# e670ce9e5b0145e09d401b7e7190c81a
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# be0d9153844a444eaa1ae0aa2bb75d4f
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 8481687b8de44e1e9ec2950580f780f1
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# ab205f7f598a473c9472830f5cda6bb3
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 275277b4cb974d6e976cb6a25f8ce4c7
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# b00adc5ebb8e4195b52b6cb896b88a07
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# 50e1dc87c4cf4c608426af3c9c2c4925
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 01f346e8b43040a0bb57a343fb0f8fd6
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 1f41f5a7537248029f1eaa6752de550e
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 9b45ef9020a94abd92ad379ce4e550ee
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# c757b83d5b654b73886014d5b109549a
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# adb60080cb2645238e32687ab2091ac5
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 25dbbb494b724978a2a35082cd251375
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 4d33c5832b4f463eba83115bd3a324e4
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 2822ad69efb34f0fbc88bac69f00e21c
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 10ce95a51883460f87fb4d242c6f701a
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 0933dd522c474204aa4b6f0dec039668
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 0060934b086248e4a0cb67806c21f541
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 1d842497ef1e4f4a90ea585ddb12b9f7
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 6703dd6f14844fac9f8e1ae756c5fe47
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 34e730e02bc44245820a250a06861619
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 5c7723be0ec34049a45fa703d6f588da
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# c64e5e410b5e4619a927141ee971c8a5
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# fef5203679084ba3a81987b4ae58f6e9
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 7f89648b42004e5dbbba8430de93ff59
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 0515a7f1122e4c58aabfea22a23b4fac
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# aebe2e84246b48fc96f25adb79a690a6
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 61d53efab6fe4d949131130bd43edee1
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 86b472b42abf421e9cb5e07dbb173295
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 194b35f986c9419ab2fe9a58bf7a8cd3
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# e9bdfe71fe7042bfb2cbf5f81575a6ca
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 60e4acf722c04da6900611d9c7a7d15c
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 33d4213d53ab423fabbffa3d8a91c409
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 6b62de9b9c9640dbb266b1fea0e80ae1
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# d19e876a79cc4133a4e963b40c8bd867
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# b73fd94dff144149bdb38feccbb42a5a
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


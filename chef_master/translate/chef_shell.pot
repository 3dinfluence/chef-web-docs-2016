# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-01 19:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 326d25d73978435ab88c8f1fc4760fa9
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 93a2116db33d4147857c986eafabc559
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# c705aa37081047ddb6d8fa8ea34fa324
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# e438137dc9ae4bbf88a598cf62daa9df
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# df79b195b2234e4c8e319d83c733dfdb
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# a9871f1a79e846018d237e20d7ac8d0f
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# cb7586d594ee423db5ff8eb1b6f9fd8a
# 3457a214af914057b35c1c0655cf0f9e
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 5bd4a89b945145a9b14518d958e88f38
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# ae35ebcfdb454740a5be21a5500ea084
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 24a919dd4b9e423d8e1538aaa62b458a
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# ba7e15a959b74835aed9903c6017ad8f
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# df381118e54b4aa9873566c042367943
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# d364df84dca6485190614f3569d92e7f
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# d4404ad431704f6ead1e21b11ab20956
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 844a2a71aa434f69817f714b7f3d9eab
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# a1c22e7d9de14a37bf0698919d60fffd
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 539f00b879c44e2886d6582c3e7f349f
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 0f90cdf973f040cc8c453e1a24cb1413
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 7cf19b7140b34e37b193fbe7c149fab7
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 2c4cfd43573e4911a4af1c0459edd220
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# df3f6151802c4e4bb7dc391535d131d7
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 1f440c59e2ac46c092fc1df0f842d1ee
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# c885261f3d7a47b89737cd95bcc65509
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# da01c46c83b2451096c68815425909ba
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# e7fc886e71194d8488680599758bc786
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 7a6ab7908d7e4c08b476bd88bcb19795
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 009836aa08304124a1376dab5ef60fe3
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# fe82bca3ae844ba799eb0fd3c0d96afa
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 4d7c954ee2c9417f82be48c69b84f461
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 4edccaf8f97c44e1b1d412e65fc21487
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 0a30543eafca4d7d8c8675d91732c062
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 1096ee370fe748e7a0ea6c40c004d6ff
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# c17effe2e16c4a2588ae7a8a389552fa
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# f00733f4405446ffb5cb0356c75c12d4
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# ee0aba30241d45c2a41e226bdfededef
# 812c347118a04f2bb29c2911838ab9cd
# 05dfb44090574aa5a70296e32b647359
# 6075762c12e2403b97a988e0375197e4
# b5a3a3449dc84a75ac5ce06c744c3c1b
# e499020ec2464ebea77d7d3cd45d2e2b
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 353e5365967849e8a6197f90d8ce2bca
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 6ceb9097464945d9a183fce9295f09ef
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 463d5798067a4142ad88da9c07e79045
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 8a6bf06a7f3741ceb76f45f1608d5d4d
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# dd566ada289345a6b6dfc5e596d37113
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 5a4e7c7e44f9476bbbe64b9961a88f16
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 71f89d98916643df9424d95e851042b7
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# a8aec869912244b2aec44ffaccc96c98
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# aa49469e690346a2a51aa1a9b0e5fdc9
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# ba338cefe40f40218370c61764534ec5
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 87989a2d90db4421a2701754e7cc6e4f
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 5c1ff2e29dcd489ea71a3c9e5b68d289
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 54a22895ce0445a1be2e304ff9b71458
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 60b434e42890453fad0fec2ac3634bd6
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 5ee05f5b8ff547a6921f512403673263
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 8c32dce67b1d4889ad9ace862bad8d19
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# b3b748cef0d6475f9b6cc114b7e04f69
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 43cdf37c792048b08ca0b12038853c8f
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 10ed779eaf7e4abb86407659bde7086a
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# f65b946645bd4fd9aabb014d06e540b8
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# 8bf63d19621c4e9fbcedd304ab257206
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# fc927450de3f481cb53f76aa399bcc42
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# e153ffffb5c743f997682f5c88f651c1
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# cbabf41b7e214ab985b730b17c8f41c3
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 7732aa3d09184ffe92e17f3bfb094acb
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# e0759808aaa74a34bda59fc5d19b2303
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# cda9c666c49440fe80d0026db5009351
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 6410ed2c652c4a67b2d19b3f1081d89b
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 83f1d3b529f84f6cb41f1095df8873f5
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 9e8c580c10df4650bda2703096f1a6b6
# ce26f8b100904ccfa0b8a231ab54d194
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# b4d6e8221ff2456b866dad9aa18c1ffb
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# d66eea33dc0344ca95bbd9a86aee6412
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# decbe8cb27dc40ef925c222cd22498c2
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# d2e786327b0f45fb8a12bff72f2b11d0
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 6e429b493b694889b7bf98803e92489b
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 608e89c4dd2d4c51b35fa72da5fda52c
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# b7d91913b7b14a3694428cebc84a5c27
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 526d314c90054ef9a96b7bd2d783a72a
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 323ce7ddd0e14f1fb179262aeb5cabb9
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 826c8a6e09274f07b2cfd277ad0ae063
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 37e7fc872d9446e6b8ee6721dda5a447
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# 74d787bdb5874dd5a6eed848e1e23e9a
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 85238859b60a439ab982a8303fdbfeaa
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 556653adf3b54938a839b1abf71816bf
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# ffdf886c59e242168dc2a9f5ec1805bd
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# c73d6d1a7b4f42f1a93b98973993287c
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# b4d976cbadc944989681cdae1dcb198a
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 6acbe8beb24f4c5aa767b890e5fcb0ad
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 28bcb720adf048b5a564a2b90c1e0042
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# 5475d230a3a44d9eba1de69a4fb0016a
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 853ebcb89529445893df799d20e535f9
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 11bfc7a2b76b48b88f9d1a856647b8dc
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 6651a093ae424918baf17fe458d08f20
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# c78fa13c1eb343819a4c1dc5f7b2a6a9
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 3b610d7ffbef424181943e60f8d3b1d7
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 30500045f7184d38bb452ed4ef98f9e9
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 9a694fc368654027b66bab32982a818f
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 58b389f7c6994ffa9488777d424bd259
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 0583f7d0ed7a4091bed2a0fb67e106d5
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# ead6a1036b494d689a9e9af96be12b38
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# ce47274324f44106a73e3c37d548e650
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 70921d9fe7f74a94b3a591c6d81cdee7
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 7c906f3a60274b95b25d9d9f553627e0
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# d9177d55e4f740e1a6b6fee63a0cf5e6
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# c64834b0c4694101862b4612097b6ddc
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 796d4da4900b4a4c9ce3fdb4b0f3691f
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


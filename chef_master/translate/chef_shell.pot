# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-24 13:49\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# 2543c58ec5014fefad7497b44cc1b003
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# 306426fb573e42749d5432d3fe8f92b0
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# da3d1246d5994cd68f5a7ee240a34ff7
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# f2d657da10b8482e860908d05ef18cc7
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# 2d39408770a24a97850f77d13603b411
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# 4d8f792883e34a52af4fa16cf47d65a7
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 549e9993975d47eb833d26016800516e
# 2c6f67193e1b4b5e847aca3b0b1b8a09
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 28cd1b7432534546ba98e0abaeccc5c0
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 1fa74592b39e421884432dbe3ec4f28f
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# 025520254aa8437e8d7d0d01dc612f3b
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# 5b2e6f85d21d47ae876e966e3e37493a
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 82bb2561437e49bc96167763039a4b87
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# 57fb44e0b0a04a3fae78a51b81befa97
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# f874d90591184e27a3b5a153ff4346f9
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# 2b1f2610bd8648e2b992b9e54cccce9b
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# 7b2a7ab2f95a4f1aafc2219e18a583db
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 7fde53bfacac4a848a03fdbcf92d137a
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 77f903196bdb4274acf051fa77dab59c
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# ad47a8dfac2245ddad6ea1c28ab076aa
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 7a931e627ebf491191e98b607cc2f78a
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# 65942efd326f4c9a8a7ed1745b5e146a
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 711e417cf4444994a617ee7ed4f07c8c
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 7d57422638ba4f3f84a76f4ea4540ca1
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# 56e44772a9f54f00b0b94fedbe985fcc
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# 2b879766920d4515b1386d21ab0159b1
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 1ac09dbf87a346df9deaa74d7cdd80de
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 18f426cda98740a781bfce5449b63b97
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# 80291a54c4be41d8b70feeee885133f5
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# 5d9251906dab40f1b0a6aa9f1d0495bc
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 82b7a88e15944609a3aa8e2c6bcdf1e4
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 72d3b9501eda444c8986fe4f5de2c6c4
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# 7e56745aab1f41ed810bd7f7caa5c740
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 9d2c0a57f02f40509ef0c0e5819e4516
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# eb513295be0345408f7c4d63ed0ebe35
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# 5ee0be6b77944b20bf058047e8d39f3d
# 642c4f1b8e26422385bb020094a99812
# 7183a89a8ebb40f0961a04fa7afe5386
# e5afe69b72374386962a30e26d3e4aaf
# 1048470e24bf4627b694752699fffbf0
# 7005d9e44e1744c0a224d9672835828e
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# d6616eba95064293a9cf1119f3c6c5a8
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 07c16360774c4d8291fac51ad766468d
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# b630a957ed5c4926aa75652404f163f9
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# 3d32f66c496e44049a0b1bfbb3a107d5
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 6d382d21fc34436a9f5e0f2b1b3fd1ee
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# db5629628faf40abb7f598538986f612
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# b78497e19bd5492589a707778a002d67
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 611146e6f0b742c981bf5f3047630dbb
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# d5ed7c6af750497f8521beaadf440bef
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# 2c08216d41aa4d1197d6c1d353afb95c
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores then when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# 2aab2507500e44a1b6ea9dc2fca68e0e
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 9fee20d4473b4efc8b665c4e67ec4811
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# bb724bd1081441498a52a01101ffdcb6
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# 0b8c4d7491634e22bfff9520d9df20dc
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# 69dcf3dea5c2421ba3f2e43658518c7e
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# 564049c78e9a416081ffa98b90a57564
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# 30d0ba5cb45b4e3ebb62caa85b50c15b
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 2270cdee581d442891ff681d21005ca7
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# 1476946af6694d23b026b1601135102e
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 6d8c8c16b07b4760b0191febe757765c
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# c2d0cf1db4c24df5af50f3a8d577282e
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 30a5ca63880a4ee3a7d3ce920c9cf5e5
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# b1e2d8fa9fab4231995b299cd615f686
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# e7ccbe71344d4341b19ed722267e6dbf
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# a1dbbb8a1eea43bc8af180594297c84e
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 95b77c1554684aefb99c56dd6dabceab
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 861a14db1f3f44bf94312db9a24cb4ea
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 6757fd29ccc84ea29750b2c089868096
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# a57e6e79552d4d10aaea94685832cb61
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# 5acc3e295a544777bad10fa60e00dc30
# 058d84c384f8453fbf013397fe8324d5
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 9503b1ce0e2d4a8aa0fdd630ef003e50
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# 3dc7c1d71b12410faaa2c053e4131503
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# 2fa25d90ca914c2a980a91a6f1c0b7d3
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 633376a1223e4375b4d6b6736246ee87
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 0ea36b28f71c4babacd9d6b36ff9df12
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 632aaad28f904a2fa23e5cbe34312195
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# c0cb0d162ee64feea541fb752dc2bb67
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# b2ec895f2d0a48269cf81c7d3c1d6c3a
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 0b90b25b8864439ea1672412e2663c81
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 3f1c1d1c819f49a885ff3cbeeb6c90bb
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 640e5038e4d744aa822cb1fd5c56f2bc
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# fe19608582e544b09f253c98a59e5db4
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# 2b1ff3af23f04ca3a5b9aa7c5b370352
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 8a840c526d724762b1a9f4c43ff4aa7e
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 40498fa7ea274c4db60623fdddd81a1a
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 1807823891c94cbfb8b55c8b5681a0c0
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# 94c77b18ed2d4fa6a89beac0c8f1e68a
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 91377ee1b3f245cd8871210aaa6b5c4e
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# b3e3a393eef54e4cbaab89dfb72aa6e8
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# b8d6d2daa3de484180e42385cc33cc1c
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# ae052657bb8b4c049b4bef28e3814de8
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# bbb87df97c9e4543ab029fae4acc97c0
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 876de094dfb049d9a018a89b9632ab76
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# 151985c77a2f405e88bbee2226f75867
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# 7ca7750b461d44718568b68bd467baef
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 28dc0676a8f44c43b6850d2a0fa2bc31
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# 481d9f459cb74942add92bfe574acc9a
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# bb14b30ddd5e47f18e712b1a3ae6e2ef
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 7ea1e538f75840f1b20df56ca31bc773
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 8cf28bdba38f4cae9fcdfd0bd1e94424
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 2aae2920c45a4224a6a09e66b092dd20
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# 0a48f9ef6511478da306c3821aff42fa
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# 2f08eb8b413e47afa041a47a515a563e
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# 1ed044e9052e407597d5c6fa57411e15
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# da149b4f11444e048daf97fe7d19db53
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 389640d8b59640a5b867775e910d3c31
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-14 11:24\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_shell.rst:33
# a7d0fab976554c1cbd600c0d223457f8
msgid "chef-shell"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:5
# cde6581ce2ad4410ab131add1b9d4bfd
msgid "|chef shell| is a recipe debugging tool that allows the use of breakpoints within recipes. |chef shell| runs as an |ruby irb| session. |chef shell| supports both recipe and attribute file syntax, as well as interactive debugging features."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell.rst:7
# 29dc1e8e89c84343a91230bcff9a410e
msgid "|chef shell| is the new name for |shef| as of |chef 11|. |chef shell| is backwards compatible and aside from the name change, has the same set of functionality as with previous releases."
msgstr ""

#: ../source/chef_shell.rst:38
# dd9a11d4552344318c2f32d73a89b9eb
msgid "Modes"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:5
# a03ec701b92749cd8e04d6acf63f66cd
msgid "|chef shell| is tool that allows |knife| to be run using an |ruby irb| session. |chef shell| currently supports recipe and attribute file syntax, as well as interactive debugging features. |chef shell| has three run modes:"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:11
# fdea5361b5c24392b9d8bb7430a70e16
msgid "Mode"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:12
#: ../../includes_resources/includes_resource_breakpoint_actions.rst:11
# 74b012b47ca94e749f8ba2bf0949547b
# 3a070dd9d9a344b0b7906fbd87079d98
msgid "Description"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:13
# 6ec1fa2f79df428aa767e98d9fc9342e
msgid "Standalone"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:14
# 4311a445d5d94b74ba06222d0e0fe47d
msgid "No cookbooks are loaded, and the run list is empty. This mode is the default."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:15
# e813e57f91474c219ccd86a24ab6f089
msgid "Solo"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:16
# df7f2a5eee774302be8bb8d30f2d1e15
msgid "|chef shell| acts as a |chef solo| client. It attempts to load the |chef solo| configuration file and |json| attributes. If the |json| attributes set a run list, it will be honored. Cookbooks will be loaded in the same way that |chef solo| loads them. |chef solo| mode is activated with the ``-s`` or ``--solo`` command line option, and |json| attributes are specified in the same way as for |chef solo|, with ``-j /path/to/chef-solo.json``."
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:17
# 6798d0b2a0e740e89e6dc12dd9ba652f
msgid "Client"
msgstr ""

#: ../../includes_chef_shell/includes_chef_shell_modes.rst:18
# cd2c797ec7344c278ccb26d410dcd4ee
msgid "|chef shell| acts as a |chef client|. During startup, it reads the |chef client| configuration file and contacts the |chef server| to get attributes and cookbooks. The run list will be set in the same way as normal |chef client| runs. |chef client| mode is activated with the ``-z`` or ``--client`` options. You can also specify the configuration file with ``-c CONFIG`` and the server URL with ``-S SERVER_URL``."
msgstr ""

#: ../source/chef_shell.rst:42
# 5e7b5b5f8c03463586420907df794e21
msgid "Configure"
msgstr ""

#: ../source/chef_shell.rst:43
# c5454ceed1f941059b34c83f7015b154
msgid "|chef shell| determines which configuration file to load based on the following:"
msgstr ""

#: ../source/chef_shell.rst:45
# f3a79da301a2444dab67452ac661f84f
msgid "If a configuration file is specified using the ``-c`` option, |chef shell| will use the specified configuration file"
msgstr ""

#: ../source/chef_shell.rst:46
# 532d41e5085d41dba515f3ba9109eb71
msgid "When |chef shell| is started using a named configuration as an argument, |chef shell| will search for a |chef_shell rb| file in that directory under ``~/.chef``. For example, if |chef shell| is started using ``production`` as the named configuration, the |chef shell| will load a configuration file from ``~/.chef/production/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:47
# 7c0be5afdc714076937cff2bf85a2305
msgid "If a named configuration is not provided, |chef shell| will attempt to load the |chef_shell rb| file from the ``.chef`` directory. For example: ``~/.chef/chef_shell.rb``"
msgstr ""

#: ../source/chef_shell.rst:48
# 1cfadbf507434507b64d29dffa8cf825
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |client rb| file"
msgstr ""

#: ../source/chef_shell.rst:49
# 74fe03d86cf24a1480d70fa6842d9703
msgid "If a |chef_shell rb| file is not found, |chef shell| will attempt to load the |solo rb| file"
msgstr ""

#: ../source/chef_shell.rst:52
# c121d1332c76415f96c78446532d44fe
msgid "|chef_shell rb|"
msgstr ""

#: ../source/chef_shell.rst:53
# 9904e163bb274cb4876816143ffc2e02
msgid "The |chef_shell rb| file can be used to configure |chef shell| in the same way as the |client rb| file is used to configure the |chef client|. For example, to configure |chef shell| to authenticate to the |chef server|, copy the ``node_name``, ``client_key``, and ``chef_server_url`` settings from the |knife rb| file:"
msgstr ""

#: ../source/chef_shell.rst:61
# 8438609940a541a09e6616669dec112e
msgid "and then add them to the |chef_shell rb| file. Other configuration possibilities include disabling |ohai| plugins (which will speed up the |chef shell| boot process) or including arbitrary |ruby| code in the |chef_shell rb| file."
msgstr ""

#: ../source/chef_shell.rst:64
# c1da13e54b1c40eb9d3117f978a8a872
msgid "Run as a |chef client|"
msgstr ""

#: ../source/chef_shell.rst:65
# a91ea778612c48fcb43563d9d1257b05
msgid "By default, |chef shell| loads in standalone mode and does not connect to the |chef server|. The |chef shell| can be run as a |chef client| to verify functionality that is only available when the |chef client| connects to the |chef server|, such as search functionality or accessing data stored in data bags."
msgstr ""

#: ../source/chef_shell.rst:67
# 9a389fc8602843b9950784293bd82bae
msgid "|chef shell| can use the same credentials as |knife| when connecting to a |chef server|. Make sure that the settings in |chef_shell rb| are the same as those in |knife rb|, and then use the ``-z`` option as part of the command. For example:"
msgstr ""

#: ../source/chef_shell.rst:74
# 1d26ad4966994b01905a657a12d17ace
msgid "Manage"
msgstr ""

#: ../source/chef_shell.rst:75
# c5df1693ce5a414b80259c543f6ff14e
msgid "When |chef shell| is configured to access a |chef server|, |chef shell| can list, show, search for and edit cookbooks, clients, nodes, roles, environments, and data bags."
msgstr ""

#: ../source/chef_shell.rst:77
# f745dd9a4c1b48579105aedd3b925b01
msgid "The syntax for managing objects on the |chef server| is as follows:"
msgstr ""

#: ../source/chef_shell.rst:83
# 7e596388070a40b7ae880675d6c5b2c5
msgid "where:"
msgstr ""

#: ../source/chef_shell.rst:85
# 69be17e65d7740a69913fef137b512d2
msgid "``named_configuration`` is a named configuration, such as ``production``, ``staging``, or ``test``"
msgstr ""

#: ../source/chef_shell.rst:86
# c9716462be674093993d9f886ca46b10
msgid "``items`` is the type of item to search for: ``cookbooks``, ``clients``, ``nodes``, ``roles``, ``environments`` or a data bag"
msgstr ""

#: ../source/chef_shell.rst:87
# 72d388a4534f43e29af8bf16aac295cb
msgid "``command`` is the command: ``list``, ``show``, ``find``, or ``edit``"
msgstr ""

#: ../source/chef_shell.rst:89
# 3dc45e67a530488b92a93cc2cb99121d
msgid "For example, to list all of the nodes in a configuration named \"preprod\":"
msgstr ""

#: ../source/chef_shell.rst:95
#: ../source/chef_shell.rst:116
#: ../source/chef_shell.rst:132
#: ../source/chef_shell.rst:144
#: ../source/chef_shell.rst:162
#: ../source/chef_shell.rst:182
# d5e08fea69d74d738dd514038824a679
# 6e2e91f9f7ca4508b6b1f87e5b43b239
# b8581f797d79439e800bcb6adce5aaaa
# 097a7a06ceec4a38b1c9724ade11cb19
# 02a2835d466947d3bd3337aa6b3f1dd3
# cc04c0dac8944b47adf5f3c0ce400b95
msgid "to return something similar to:"
msgstr ""

#: ../source/chef_shell.rst:110
# 81be3737bdf14a48b5744f642fc2328f
msgid "The ``list`` command can take a code block, which will applied (but not saved) to each object that is returned from the server. For example:"
msgstr ""

#: ../source/chef_shell.rst:126
# 61df2787475c420dbb35eca0ca4542e1
msgid "The ``show`` command can be used to display a specific node. For example:"
msgstr ""

#: ../source/chef_shell.rst:138
# 66f12a574ad84e3eb662470d467af639
msgid "or:"
msgstr ""

#: ../source/chef_shell.rst:150
# f90bfcb3c4204085b328c2189872b00b
msgid "The ``find`` command can be used to search the |chef server| from the |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:156
# 90b7c6b521be4a93bbd9d38bd245117c
msgid "A code block can be used to format the results. For example:"
msgstr ""

#: ../source/chef_shell.rst:175
# 230f2b50070146f2abd341c7f49324e7
msgid "Or:"
msgstr ""

#: ../source/chef_shell.rst:193
# 430ba651d8774e1eb7dd3b1b242485b7
msgid "Debug Recipes"
msgstr ""

#: ../source/chef_shell.rst:195
# 8ab9d7d0dd66428297c9875bc5e168f5
msgid "|chef shell| allows the current position in a run-list to be manipulated during a |chef client| run. Add breakpoints to a recipe to take advantage of this functionality."
msgstr ""

#: ../source/chef_shell.rst:198
# 67551e160b47464fa16d28c78c1b5ce9
msgid "Breakpoint Resource"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint.rst:5
# d0a14d52026b49ee94aa636a6d825e29
msgid "The |resource breakpoint| resource is used to add breakpoints to recipes in the same way as any other resource. When the |chef client| is run in |chef shell| mode, those breakpoints can be used to debug recipes. Breakpoints are ignored by the |chef client| during an actual |chef client| run.  In general, breakpoints are used most often in a non-production environment, for the purpose of debugging recipes. After those recipes are debugged and the desired behavior has been tested, the breakpoints are typically removed from the recipes before uploading the cookbooks to a production environment (even if the |chef client| ignores them when building the resource collection during an official |chef client| run)."
msgstr ""

#: ../source/chef_shell.rst:202
# b240191b8bc64c9fab7fa70bc46549f8
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:4
# 4efce2c9a2fa46ba9a65ed0bf6547703
msgid "The syntax for using the |resource breakpoint| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:12
# 3d45fa7e484149f2953f43a016a4b762
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_syntax.rst:14
# bf5e0bdbb8c1476eaf86734a4e547ab8
msgid "``:break`` will tell the |chef client| to stop running a recipe; can only be used when the |chef client| is being run in |chef shell| mode"
msgstr ""

#: ../source/chef_shell.rst:206
# c10760a02c1643f4b9e20be639d88481
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:4
# ecd551789e974edcb4280e06b0ee8e44
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:10
# aee6286df52d4e94bd845b55a097660e
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:12
# 923cd14c75c549c0bcc889b185b9e4cd
msgid "``:break``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_actions.rst:13
# efbf20f8c36c4f16970affbd0fb7e853
msgid "Use to add a breakpoint to a recipe."
msgstr ""

#: ../source/chef_shell.rst:210
# 288e5311963747a4afb8b44a2fd9a22d
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_attributes.rst:4
# adfd394876ff4b28b2ba34600dddefa4
msgid "This resource does not have any attributes."
msgstr ""

#: ../source/chef_shell.rst:214
# 02ec91478ad745d1ae44c9508aa80df7
msgid "Providers"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:4
# dce441990a334689bba04b3c7c33526c
msgid "The following providers are available:"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:10
# 23cedf9f45cf48d3ac50a278a631f89e
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:11
# 21d426b3f5434d49bd3d7ab10d82bf8a
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:12
# 781fbd52c54e42f1822370edf71f1e2f
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:13
# 330258317e0547a3891a7dddd98f9047
msgid "``Chef::Provider::Breakpoint``"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:14
# 47aa0a892efb4c6ebd3c62f006a1ef4f
msgid "breakpoint"
msgstr ""

#: ../../includes_resources/includes_resource_breakpoint_providers.rst:15
# 7b575f1fae9544cfb8898c42b82071e1
msgid "The default provider for all recipes."
msgstr ""

#: ../source/chef_shell.rst:218
#: ../source/chef_shell.rst:389
# e12715e9a51845f596da1ac9c18b09c1
# 0d51e28135ca4e56a047968913e31e96
msgid "Examples"
msgstr ""

#: ../source/chef_shell.rst:219
# 7a0ec2331f554cbbb3a66e715a37cbbb
msgid "|generic resource statement|"
msgstr ""

#: ../source/chef_shell.rst:221
# ed3f9be55ad24fa98b96fd24297b353c
msgid "**A recipe without a breakpoint**"
msgstr ""

#: ../source/chef_shell.rst:225
# a048fb47fdd7452287eac55d60db4527
msgid "**The same recipe with breakpoints**"
msgstr ""

#: ../../step_resource/step_resource_breakpoint_yes.rst:37
# 4cafc72cb38040898ad36489fdfae449
msgid "where the ``\"name\"`` of each breakpoint is an arbitrary string. In the previous example, ``\"name\"`` is used to indicate if the breakpoint is before or after a resource, and then also to specify which resource."
msgstr ""

#: ../source/chef_shell.rst:230
# 7a8c3333a5de49f0a5ad2cebeec7b612
msgid "Step Through a Run-list"
msgstr ""

#: ../source/chef_shell.rst:231
# 2a4b785b39d2475b80b4d7ab0332d719
msgid "To explore how using the |resource breakpoint| to manually step through a |chef client| run, create a simple recipe in |chef shell|:"
msgstr ""

#: ../source/chef_shell.rst:241
# da199d71c8ea40a88c8475806ebb47f7
msgid "and then run the |chef client|:"
msgstr ""

#: ../source/chef_shell.rst:252
# 7d267c9beb554f049885d39b87c28107
msgid "The |chef client| ran the first resource before the breakpoint (``file[/tmp/before-breakpoint]``), but then stopped after execution. The |chef client| attempted to name the breakpoint after its position in the source file, but the |chef client| was confused because the resource was entered interactively. From here, |chef shell| can resume the |chef client| run:"
msgstr ""

#: ../source/chef_shell.rst:259
# 68463514860545a7aa4e2ecdd00618ab
msgid "A quick view of the ``/tmp`` directory shows that the following files were created:"
msgstr ""

#: ../source/chef_shell.rst:266
# 75d2cd1270af48da894d6a6b2b0e5106
msgid "The |chef client| run can also be rewound, and then stepped through."
msgstr ""

#: ../source/chef_shell.rst:287
# 37828b1bf6714c83bae12c0db181ce0b
msgid "From the output, the rewound run-list is shown, but when the resources are executed again, they will repeat their checks for the existence of files. If they exist, the |chef client| will skip creating them. If the files are deleted, then:"
msgstr ""

#: ../source/chef_shell.rst:294
# a0c7e16c6aff4c9a9592a0aa0cd4a451
msgid "Rewind, and then resume the |chef client| run to get the expected results:"
msgstr ""

#: ../source/chef_shell.rst:311
# ddb7076d440245a2b7508b881943f3a5
msgid "Debug Existing Recipe"
msgstr ""

#: ../source/chef_shell.rst:312
# 5039d5da5f6143dfa4879cef56e861bb
msgid "|chef shell| can be used to debug existing recipes. The recipe first needs to be added to a run-list for the node, so that it is cached when starting |chef shell| and then used for debugging. |chef shell| will report which recipes are being cached when it is started:"
msgstr ""

#: ../source/chef_shell.rst:331
# 3dd693d8e29044048fafd832f1beb1ba
msgid "To just load one recipe from the run-list, go into the recipe and use the ``include_recipe`` command. For example:"
msgstr ""

#: ../source/chef_shell.rst:340
# 6fb84fd8c7db4dd9891e572ff0cc5930
msgid "To load all of the recipes from a run-list, use code similar to the following:"
msgstr ""

#: ../source/chef_shell.rst:348
# e417f03852a24575ab676c9ce2085d69
msgid "After the recipes that are to be debugged have been loaded, use the ``run_chef`` command to run them."
msgstr ""

#: ../source/chef_shell.rst:351
# 44f3ffa795e34ff488a9fa3d393ed006
msgid "Advanced Debugging"
msgstr ""

#: ../source/chef_shell.rst:352
# 5d35c5b5c9c44123891926c180604ccf
msgid "In |chef shell|, it is possible to get extremely verbose debugging using the tracing feature in |ruby irb|. |chef shell| provides a shortcut for turning tracing on and off. For example:"
msgstr ""

#: ../source/chef_shell.rst:362
# abc9e36c9d4749b3ac9f1ad665558a0e
msgid "and:"
msgstr ""

#: ../source/chef_shell.rst:385
# 85dd0ad6e4014876bd355b4d8ba1e70a
msgid "Help"
msgstr ""

#: ../source/chef_shell.rst:386
# 8b3bf25401a84eb8bba7067aef52c9c5
msgid "Use the ``--help`` option in |chef shell| to view help."
msgstr ""

#: ../source/chef_shell.rst:390
# 8d41fc797c444800a32c73bd64f8fee2
msgid "The following examples show how to use |chef shell| to debug recipes."
msgstr ""

#: ../source/chef_shell.rst:393
# dfea0c64713b4365b273b2eebee59df7
msgid "\"Hello World\""
msgstr ""

#: ../source/chef_shell.rst:394
# e5150ac042b349f58009a0ed35976302
msgid "This example shows how to run |chef shell| in standalone mode. (For |chef solo| or |chef client| modes, you would need to run |chef shell| using the ``-s`` or ``-z`` command line options, and then take into consideration the necessary configuration settings.)"
msgstr ""

#: ../source/chef_shell.rst:396
# 1068726beebe4aab8653be1d0e7fbdcf
msgid "When the |chef client| is installed using |rubygems| or a package manager, |chef shell| should already be installed. When the |chef client| is run from a |git| clone, it will be located in ``chef/bin/chef shell``. To start |chef shell|, just run it without any options. You'll see the loading message, then the banner, and then the |chef shell| prompt:"
msgstr ""

#: ../source/chef_shell.rst:415
# b0248f1b9a8e42729953827ca634dc18
msgid "(Use the help command to print a list of supported commands.) Use the recipe_mode command to switch to recipe context:"
msgstr ""

#: ../source/chef_shell.rst:422
# 4210f5b85635492fb11b02da7c49b656
msgid "Typing is evaluated in the same context as recipes. Create a file resource:"
msgstr ""

#: ../source/chef_shell.rst:455
# 4309e9a0f49742c8a8392d7e7839bcee
msgid "(The previous example was formatted for presentation.) At this point, |chef shell| has created the resource and put it in the run list, but not yet created the file. To initiate the |chef client| run, use the ``run_chef`` command:"
msgstr ""

#: ../source/chef_shell.rst:465
# 003b413fce1743bba6b3c75629b4639b
msgid "|chef shell| can also switch to the same context as attribute files. Set an attribute with the following syntax:"
msgstr ""

#: ../source/chef_shell.rst:474
# 636de0e449474a8d99646e972ac9350a
msgid "Switch back to recipe_mode context and use the attributes:"
msgstr ""

#: ../source/chef_shell.rst:482
# b605c5d78991475d815f7015562dd411
msgid "Now, run the |chef client| again:"
msgstr ""

#: ../source/chef_shell.rst:495
# ba77e0b9879b444980e56b2b23ec48d8
msgid "Because the first resource (``file[/tmp/ohai2u_shef]``) is still in the run-list, it gets executed again. And because that file already exists, the |chef client| doesn't attempt to re-create it. Finally, the files were created using the ``ls`` method:"
msgstr ""

#: ../source/chef_shell.rst:505
# d446177089d246d98567efaa7945417a
msgid "Get Specific Nodes"
msgstr ""

#: ../source/chef_shell.rst:506
# 3a7f586284a1456989cef423f686a1ab
msgid "To get a list of nodes using a recipe named ``postfix`` use ``search(:node,\"recipe:postfix\")``. To get a list of nodes using a sub-recipe named ``delivery``, use |chef shell|. For example:"
msgstr ""

#: ../source/chef_shell.rst:512
# 81b7deaaf60d4ffd9a3e4b2de692ab0f
msgid "Single (' ') vs. double (\" \") is important. This is because a backslash (\\) needs to be included in the string, instead of having |ruby| interpret it as an escape."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/libraries.rst:7
# ba9b5131e7ef437d893907fa78d73487
msgid "About Libraries"
msgstr ""

#: ../../includes_libraries/includes_libraries.rst:4
# ebe13f046839439594e2db0b906db7d7
msgid "A library allows arbitrary |ruby| code to be included in a cookbook, either as a way of extending the classes that are built-in to the |chef client|---``Chef::Recipe``, for example---or for implementing entirely new functionality, similar to a mixin in |ruby|. A library file is a |ruby| file that is located within a cookbook's ``/libraries`` directory. Because a library is built using |ruby|, anything that can be done with |ruby| can be done in a library file."
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:4
# 82025240337443e8a6ed0efada3acfd8
msgid "Use a library to:"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:6
# 5ea8673f21b2429e9a3d68fe4b8fe717
msgid "Define a custom resource"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:7
# 426fc0f6e9fc43308547deedc8ff7c53
msgid "Create a custom class or module; for example, create a subclass of ``Chef::Recipe``"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:8
# 39f88e5943b5483788f64118bcd54791
msgid "Access attributes that are stored in files"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:9
# 7ba1ec1cd9a84cfa9aa896fdd9941d1e
msgid "Connect to a database"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:10
# 76b4f04d6efe4fce98bb33a3a206ffe2
msgid "Talk to an LDAP provider"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:11
# 567fb675334546d39feab433a9fb8234
msgid "Do anything that can be done with |ruby|"
msgstr ""

#: ../source/libraries.rst:14
# 269af73bb60a4e59820dd0c0cfaf03a6
msgid "Syntax"
msgstr ""

#: ../../includes_libraries/includes_libraries_syntax.rst:4
# 50ada7c1557e4e608867da17f8107710
msgid "The syntax for a library varies because library files are created using |ruby| and are designed to handle custom situations. See the Examples section below for some ideas. Also, the https://github.com/opscode-cookbooks/database and https://github.com/opscode-cookbooks/chef-splunk cookbooks contain more detailed and complex examples."
msgstr ""

#: ../source/libraries.rst:18
# 537d5f5ca4724791bb92db2c51e10c6f
msgid "``Chef::Provider``"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:5
# 69a710b0946c4279909647c4d5899da6
msgid "Cookbooks that contain custom resources in the ``/libraries`` directory of a cookbook should:"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:7
# bef30016e6b84369bb758ecab767dfb0
msgid "Be inspected for instances of a) the ``Chef::Provider`` base class, and then b) for the presence of any core resources from the |chef client|"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:8
# 1c505d5875a241e1a5c27acc4a25442f
msgid "Be updated to use the ``LWRPBase`` base class"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:10
#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:24
# 6d71e24c1044482c86dedf01aa09f2d4
# acef588ab2344c5382804e4c1e396ee6
msgid "For example:"
msgstr ""

#: ../source/libraries.rst:22
# da3f270ce15540aeb6f94b96cda2b1a9
msgid "Dynamic Resolution"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:5
# 376c6ab570e64f929ecf7f1744812195
msgid "Resources and providers are resolved dynamically and can handle multiple ``provides`` lines for a specific platform. When multiple ``provides`` lines exist, such as ``Homebrew`` and ``MacPorts`` packages for the |mac os x| platform, then one is selected based on resource priority mapping performed by the |chef client| during the |chef client| run."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:7
# ec5a127e55ff471983aee9d196e0a78f
msgid "Use the following helpers in a library file to get and/or set resource and/or provider priority mapping before any recipes are compiled:"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:13
# f4f04ed087d84335a6329c3715b544dc
msgid "Helper"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:14
# 96eb162cfc804d1aa1ae571a54f6843b
msgid "Description"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:15
# f985bf5baccf4823b8abff423d82f804
msgid "``Chef.get_provider_priority_array(resource_name)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:16
# d71df1ba6b4c4446b4578d6df3798172
msgid "Use to get the priority mapping for a provider."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:17
# df84cee28f084c0784762ce210e286f3
msgid "``Chef.get_resource_priority_array(resource_name)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:18
# 6f7ca47a71ae4a13bae8c705be3f913b
msgid "Use to get the priority mapping for a resource."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:19
# 8ccba379db834c79827880739701c997
msgid "``Chef.set_provider_priority_array(resource_name, Array<Class>, *filter)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:20
# 62754dfcb75d4d53b80251be3e743500
msgid "Use to set the priority mapping for a provider."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:21
# 7b2d718bf3584582b58fba2683fbb919
msgid "``Chef.set_resoruce_priority_array(resource_name, Array<Class>, *filter)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:22
# 523ba849f42f4273968b81ed6a64d6ad
msgid "Use to set the priority mapping for a resource."
msgstr ""

#: ../source/libraries.rst:26
# 5d4e68236630466ea832451698c2c50a
msgid "Template Helper Modules"
msgstr ""

#: ../../step_resource/step_resource_template_library_module.rst:4
# 9675fd36070444f18bf0e4c1d76625a4
msgid "A template helper module can be defined in a library. This is useful when extensions need to be reused across recipes or to make it easier to manage code that would otherwise be defined inline on a per-recipe basis."
msgstr ""

#: ../source/libraries.rst:30
# a5455b253d774adb8d1f086ae3991db1
msgid "Examples"
msgstr ""

#: ../source/libraries.rst:31
# 1078097cc4d94ffeae8d9e504fe758c6
msgid "The following examples show how to use cookbook libraries."
msgstr ""

#: ../source/libraries.rst:34
# 643c0347357b419b85c30772ae6a5b81
msgid "Library Resources"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource.rst:6
# 75bb10af3c4045549c69df7663466305
msgid "A resource can also be defined in ``/libraries`` directory. Some advantages of this approach include more control over how resources behave in the provider, the ability to control the name of the resource directly, and more options available for writing tests. The resources and providers for a library resource, similar to lightweight resources (defined in the ``/resources`` and ``/providers`` folders) typically have a separate file for the resource and the provider, but this is not requirement. The main disadvantage of this approach is that resources defined in the ``/libraries`` directory may not use the |dsl recipe|."
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_core.rst:6
# 4ec0369146934f3f88cc1b75c295596f
msgid "A resource that is defined in the ``/libraries`` directory may leverage core |chef client| resources by using the following syntax:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_core.rst:12
# abc890157d3344d991058eb60927226f
msgid "or:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:6
# 343af188f1ac49aabb798f3e9bc91c1b
msgid "For example, the following definition leverages the |resource directory| resource to create a new directory, and then evaluate that within the context of the custom resource:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:19
# aab1342d518a415f9aebef5e505e0c60
msgid "The following definition uses the |resource template| resource for |debian|-specific cases, but then the |resource link| resource for everything else:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:42
# 9a3002c085ce4df1953a9947dd4e1af9
msgid "Otherwise, a resource defined in the ``/libraries`` directory is done using |ruby|, is added to recipes as if it were any other resource, and is processed by the |chef client| in the same way as any other resource. See the ``/libraries`` directory in the `database <https://github.com/opscode-cookbooks/database>`_ and `runit <https://github.com/opscode-cookbooks/runit>`_ cookbooks for complete examples of how to use this approach when defining a resource."
msgstr ""

#: ../source/libraries.rst:42
# 50dbb504d28b4df6b1729ebedab2c339
msgid "Create a Namespace"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_create_namespace.rst:4
# b6631ce59a9544379eaa5cff03f9d333
msgid "A database can contain a list of virtual hosts that are used by customers. A custom namespace could be created that looks something like:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_create_namespace.rst:44
# ae7d9e7595f547ea80535c2039f2b3b5
msgid "After the custom namespace is created, it could then be used in a recipe, like this:"
msgstr ""

#: ../source/libraries.rst:46
# 13e26095629a4b308536406fe3c4e47e
msgid "Extend a Recipe"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:4
#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:4
# e194df52c5b44e81892de8f8ecad5295
# c234faf8ef4b401eaa0d8336cae71603
msgid "A customer record is stored in an attribute file that looks like this:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:16
# 09e987a4ed114873b79c3b8313b1216f
msgid "A simple recipe may contain something like this:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:26
# cb10033db44f4ce4b9d9f8df4a83d2f1
msgid "Or a less verbose version of the same simple recipe:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:36
#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:28
# 0fc719610e6c4fbfb615db2a7d03e2c0
# 5cb875bb80594e4098c1b18cf60079f6
msgid "A simple library could be created that extends ``Chef::Recipe::``, like this:"
msgstr ""

#: ../source/libraries.rst:50
# b892445a761a49c8aa014b43e6a376b0
msgid "Loop Over a Record"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:16
# ff17d0d18677442da2669e9a79ec0da0
msgid "If there are many customer records in an environment, a simple recipe can be used to loop over every customer, like this:"
msgstr ""


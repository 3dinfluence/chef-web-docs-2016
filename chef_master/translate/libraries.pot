# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/libraries.rst:8
# 46c6785b50144ce18d202d0c47d7896f
msgid "About Libraries"
msgstr ""

#: ../../includes_libraries/includes_libraries.rst:4
# 1e8445fcb6ce45d3bdac92e347b64283
msgid "A library allows arbitrary |ruby| code to be included in a cookbook, either as a way of extending the classes that are built-in to the |chef client|---``Chef::Recipe``, for example---or for implementing entirely new functionality, similar to a mixin in |ruby|. A library file is a |ruby| file that is located within a cookbook's ``/libraries`` directory. Because a library is built using |ruby|, anything that can be done with |ruby| can be done in a library file."
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:4
# ae944ed29d764d04aad1efb7ba54c6ef
msgid "Use a library to:"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:6
# 7e33fda73b694be89f3db1f6414b1577
msgid "Define a custom resource"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:7
# 561d130709da4c30a78a259cf2a4c052
msgid "Create a custom class or module; for example, create a subclass of ``Chef::Recipe``"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:8
# 1397d72502604fd495cd9d6e21a78115
msgid "Access attributes that are stored in files"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:9
# e8da56cd64184b428b87c34487a477cb
msgid "Connect to a database"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:10
# ef6e38348bc348d68bcf6b367bfc7587
msgid "Talk to an LDAP provider"
msgstr ""

#: ../../includes_libraries/includes_libraries_common_uses.rst:11
# 80bb8ad3f52843568a719dde34782de6
msgid "Do anything that can be done with |ruby|"
msgstr ""

#: ../source/libraries.rst:15
# 6d9cb4bb6a9a4d8897110e2c4589f2db
msgid "Syntax"
msgstr ""

#: ../../includes_libraries/includes_libraries_syntax.rst:4
# ad3c1e80c98d442ca082e6c037a82240
msgid "The syntax for a library varies because library files are created using |ruby| and are designed to handle custom situations. See the Examples section below for some ideas. Also, the https://github.com/opscode-cookbooks/database and https://github.com/opscode-cookbooks/chef-splunk cookbooks contain more detailed and complex examples."
msgstr ""

#: ../source/libraries.rst:19
# 14b9132d4c5e470186b3e1a800fe568c
msgid "``Chef::Provider``"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:5
# ef0e1797968e409bbec4c38cfc1ba95a
msgid "Cookbooks that contain custom resources in the ``/libraries`` directory of a cookbook should:"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:7
# c8893946fadc493593fae0972fb54e97
msgid "Be inspected for instances of a) the ``Chef::Provider`` base class, and then b) for the presence of any core resources from the |chef client|"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:8
# 1b8d90394a574fbca0a2f4c487c7ef8c
msgid "Be updated to use the ``LWRPBase`` base class"
msgstr ""

#: ../../includes_dsl_provider/includes_dsl_provider_method_updated_by_last_action_example.rst:10
#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:24
# e825f88fa51041aa81acd276511de45b
# 29e22b6f1f4c4e6fa97565394d256963
msgid "For example:"
msgstr ""

#: ../source/libraries.rst:23
# 77742ce79c574359b5d13f8f65e1f993
msgid "Dynamic Resolution"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:5
# 1c7663c36a6f430a98c42bfbd74f5aee
msgid "Resources and providers are resolved dynamically and can handle multiple ``provides`` lines for a specific platform. When multiple ``provides`` lines exist, such as ``Homebrew`` and ``MacPorts`` packages for the |mac os x| platform, then one is selected based on resource priority mapping performed by the |chef client| during the |chef client| run."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:7
# 32a0e739b1174feabadd1d0cc8449aeb
msgid "Use the following helpers in a library file to get and/or set resource and/or provider priority mapping before any recipes are compiled:"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:13
# 6542c335d6fc4fa7920e211028ffbce9
msgid "Helper"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:14
# 6db307259abc4e9cbfe77aa58b648a42
msgid "Description"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:15
# 50321878da7e444ca1159d39b347c1d7
msgid "``Chef.get_provider_priority_array(resource_name)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:16
# f1adc35608cd41c3b9efe1378d502452
msgid "Use to get the priority mapping for a provider."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:17
# 90ae65476df44efdad60d8c2ee07a0a2
msgid "``Chef.get_resource_priority_array(resource_name)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:18
# 8b8d2258a99e460da3d8801aab660d97
msgid "Use to get the priority mapping for a resource."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:19
# 0ec39e855d754e26856c43e64b7695c6
msgid "``Chef.set_provider_priority_array(resource_name, Array<Class>, *filter)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:20
# d877e465316944d1a004af80a425e2ab
msgid "Use to set the priority mapping for a provider."
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:21
# 907660b79081476496e550689b15cfd6
msgid "``Chef.set_resoruce_priority_array(resource_name, Array<Class>, *filter)``"
msgstr ""

#: ../../includes_libraries/includes_libraries_dynamic_resolution.rst:22
# 6b9fe65362324bc0abc5deafcf74b30b
msgid "Use to set the priority mapping for a resource."
msgstr ""

#: ../source/libraries.rst:27
# 9ea963fb34124c93ab9eebcd65535ffc
msgid "Template Helper Modules"
msgstr ""

#: ../../step_resource/step_resource_template_library_module.rst:4
# bc0a06a1661540fab443ce9d4fe01495
msgid "A template helper module can be defined in a library. This is useful when extensions need to be reused across recipes or to make it easier to manage code that would otherwise be defined inline on a per-recipe basis."
msgstr ""

#: ../source/libraries.rst:31
# 2f67401d1ec44abc8da28c1b03d4bbf1
msgid "Examples"
msgstr ""

#: ../source/libraries.rst:32
# 06e63f26299f4804a73476d5ba49e294
msgid "The following examples show how to use cookbook libraries."
msgstr ""

#: ../source/libraries.rst:35
# 86b727b977a94a2fa14548c79890b92f
msgid "Library Resources"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource.rst:6
# 885f99b0ad5b4046899f2bef821e4861
msgid "A resource can also be defined in ``/libraries`` directory. Some advantages of this approach include more control over how resources behave in the provider, the ability to control the name of the resource directly, and more options available for writing tests. The resources and providers for a library resource, similar to lightweight resources (defined in the ``/resources`` and ``/providers`` folders) typically have a separate file for the resource and the provider, but this is not requirement. The main disadvantage of this approach is that resources defined in the ``/libraries`` directory may not use the |dsl recipe|."
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_core.rst:6
# 13916000b03e4febb531b507e9896b88
msgid "A resource that is defined in the ``/libraries`` directory may leverage core |chef client| resources by using the following syntax:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_core.rst:12
# 543e9a3ff2074de89ef449c0f2f575f3
msgid "or:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:6
# b3dcdcbeff734d67909602da4b640982
msgid "For example, the following definition leverages the |resource directory| resource to create a new directory, and then evaluate that within the context of the custom resource:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:19
# 1a224cc3d112469b91e6c8e042d3167e
msgid "The following definition uses the |resource template| resource for |debian|-specific cases, but then the |resource link| resource for everything else:"
msgstr ""

#: ../../includes_libraries/includes_libraries_custom_resource_example.rst:42
# 4522583d51da4c37abdf39ab119cda96
msgid "Otherwise, a resource defined in the ``/libraries`` directory is done using |ruby|, is added to recipes as if it were any other resource, and is processed by the |chef client| in the same way as any other resource. See the ``/libraries`` directory in the `database <https://github.com/opscode-cookbooks/database>`_ and `runit <https://github.com/opscode-cookbooks/runit>`_ cookbooks for complete examples of how to use this approach when defining a resource."
msgstr ""

#: ../source/libraries.rst:43
# 932308e877774134a08e9d9b469577db
msgid "Create a Namespace"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_create_namespace.rst:4
# f974cb5c73594b259adbd216592c06ee
msgid "A database can contain a list of virtual hosts that are used by customers. A custom namespace could be created that looks something like:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_create_namespace.rst:44
# b28e8122e7f442c083789f51d1259313
msgid "After the custom namespace is created, it could then be used in a recipe, like this:"
msgstr ""

#: ../source/libraries.rst:47
# 7c53dc20c41848a4b5e2e20742d783cf
msgid "Extend a Recipe"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:4
#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:4
# d02f1245a02242dd8a5fdce11e9e3ed3
# a3b27ea37175470aad8c340c587909f3
msgid "A customer record is stored in an attribute file that looks like this:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:16
# a33ef0f776914f39829b2121e1729b47
msgid "A simple recipe may contain something like this:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:26
# 5cb31ecac47747f7b316756448867713
msgid "Or a less verbose version of the same simple recipe:"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_store_attributes_in_file.rst:36
#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:28
# 733c5f4990d54a118408c833a871ee0e
# 539804b5c7c0497f8f9137f4036e6050
msgid "A simple library could be created that extends ``Chef::Recipe::``, like this:"
msgstr ""

#: ../source/libraries.rst:51
# 6812748cff784954bf3299a8a94410a5
msgid "Loop Over a Record"
msgstr ""

#: ../../includes_libraries/includes_libraries_example_loop_over_records.rst:16
# ef0d3768f72b43bfaa3eaed892de09af
msgid "If there are many customer records in an environment, a simple recipe can be used to loop over every customer, like this:"
msgstr ""


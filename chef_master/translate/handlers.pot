# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-22 15:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# eed1a34b80c7431fb5253cf05c447639
msgid "About Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# f82b8b9562bc4329a445b26531ce4c18
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 6c827fda71ae404aa2d22532be2bc28d
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
#: ../../includes_handler/includes_handler_community_handlers.rst:11
# dad9284edd79479faed03733ef8ad915
# 431c76b8937244f79d9233a19f423188
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
#: ../../includes_handler/includes_handler_community_handlers.rst:12
# e369d6231a1b4d72982a1fd88b5ba86d
# 8de41604576543aab08f3e7037fd5b57
# f2af7076e087470ba5b2f2c1c4fb2c3d
# 85b9881d5fa1438ebec145e57499ac3e
# 4897abe1d0ce44c18f3f30886cae7a3d
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 20826408e8b247a3b9e386f808027175
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 36246f0be8354183b4b73e77371527c5
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 5ecac9eb86ba4ab5a0b1c51b71c4933e
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# df498d5777044848a6465bcae0659368
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 2a4371ae9b52428baa6172cbd0fbf678
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# cbfe69cabbb741afb61675ec461c3069
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:15
# 365ef335de774ad09a3f4988f304ddcf
msgid "Exception/Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 8687544c4b56473eac37b7488ad43256
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 0f353a77215f4a39b67df63155f7a3ee
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# bcfec9f0f35f4e57b322830cb7d27eb0
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# 12be2687ef8e4f0cbdd639022652e409
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 35e332ae63ae41e2a89b5d6fdbc8d7d2
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 86d2d92159184153abf104a280a42eca
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# 896f5a56f473491abd95adcc3f7ba83f
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../source/handlers.rst:19
#: ../source/handlers.rst:31
# 41ecd8f8f7c1444aa9599d80330054ce
# d67364ec994a41fc9323c7664987c0bc
msgid "Run from Recipes"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# c538002d0550429aaf18184679e8526b
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 40ecdd196cbe4d46abccd9382338657b
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# c08ccb031498448aab960f40edceeda3
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# 3358aadbe01943569f35ee32381c83d4
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# b61503c7b19d40a6981d480ac5fd8b12
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/handlers.rst:23
#: ../source/handlers.rst:35
# 61b284d5491f45ceb6cbaaef23f2ed35
# ccd439312eb14136a1e389b77083af3c
msgid "Run from |client rb|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:5
# 97d26768c931441a94a08e1ae7803cdc
msgid "A simple exception or report handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:11
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:11
# 0c012cff334a44639d09870215cd2731
# e87188a8ae6a4c209c0ae4682b2e9902
msgid "Setting"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:13
# 744c306167fc41e883ef110f72e5328e
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:14
# ab2be007a33d448db403b1f71da406be
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:15
# 0c6eaeb70afe4918ae3b7eef42a97a84
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:16
# b3055a4f0332486fa89a8f6de2df518e
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:18
# 470f0e88ea914f62b7cf002175156fe2
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:20
# 611e9af05efb449ead5d3132d9194f26
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:27
# e2cb8d2d0a234a4dacddd89f4a7cc3c6
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 1bed4b91ddbf465a8c74990925161224
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# ef1395c0d170428e89b4c1412110c362
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# 42d55f6bd8cd4ace9032318838681f82
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# b6496a7effe843ddb01c6d45ee1e8b49
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 94ec5697bc2845e6ac6091ba82bfe4d9
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:5
# ffa4261f7bb546ff898a77e09e6e6e00
msgid "A start handler can be configured in the |client rb| file by adding the following setting:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:13
# 8be1d4ab13d94522a0372e2acac9a376
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:14
# 8d2346daa560428a9bb8ecb325d98761
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:16
# 2100153fbe2847ad9690beb09f8996ec
msgid "For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:27
# fa0f7370bd804b1aab4d92675dacc373
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:40
# 4cef5fa1f3484c5aa07d9a4d59e75e0a
msgid "Handlers and Cookbooks"
msgstr ""

#: ../source/handlers.rst:41
# ad6f9bcd941549cc96a8c6bb85c9071b
msgid "The following cookbooks can be used to load handlers during the |chef client| run."
msgstr ""

#: ../source/handlers.rst:44
# 42c2f25811d74089843256f034bde5a2
msgid "|cookbook chef_handler|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_handler.rst:5
# 579c6925ffa645e0bf1dbee147a0442e
msgid "Exception and report handlers can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:48
# 93fdd077dadb49b6b0990071f8ff1088
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_client.rst:5
# 41f2de76db6049648c5ef48a503cf802
msgid "Start handlers can be distributed using the |cookbook chef_client| cookbook, which will install the handler on the target node during the initial configuration of the node. This ensures that the start handler is always present on the node so that it is available to the |chef client| at the start of every run."
msgstr ""

#: ../source/handlers.rst:53
# d5d0289003a748b59083756ae1003ab9
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# 2ff593d8e71d4889b0382ab1f2b8b3b5
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# b44406f8fb2b4ed08259c6641c58cbe2
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# ade978ffd91b4033824b796bacaf789c
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# ff6765f59ce94ca5913cc2e71fc68383
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# 5cf7875cc522449d83f9367c27ce654a
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../source/handlers.rst:57
# fa8ed1e1ea344aad844b3e3a0ff53f5a
msgid "Syntax"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# 453ebc5fd5414793af10887d455ebc9b
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# bbe88d8da5aa45579b2f41b29e9f71df
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# cf99aa5e38284c299df079f65a0915d7
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 5fdd35d22ef24c71a729511f247f3f01
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# 10d96b4b15894412b74a3d2f6b8e4c22
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 6a335b35147f466e89a5c8870ea7bb03
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# a54fe51deef0452d92ada4c48a441161
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# e563b227c6604318ba3c8a8c80d2dc86
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:61
# c0c54d97130e4ca1a661fa6473d7b663
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 846e9f1688ad42859ce5ff138b287063
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# b2e48d9365d14b1ea85e1e6e99c481ea
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 7c921b23f1d545e19a02174599b92292
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 7a1e00da66b7481abc2e2709f2fb2e3e
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:65
# bbe5a1670d9a4e4e8f2db04d0a2fc2b8
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:66
# 3e2e9ee2e64e445ca7155eb43a1eaa86
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:69
# 0cb6a476095d429c9dbbe5ca493ffcc4
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# 23043677542d496b9391dd3eb802298f
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:73
# 49044e34310846a1a0cb8bcf978d7cef
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# db758f80cdb94f588c4188549094967c
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:77
# e342838f768a485b851b57cab866edc2
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 32edbdb8556c490da910121a456a4904
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:81
# 80bbaa0f9e4446879ace1f87c6c2b6ce
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 0fb00077fa974dcca7476407593b0192
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# b28c57c191f24137839f6132a8b51f9a
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 118c2cea2a0941878299bca727ffd1db
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# 7b509a26ee6b4042851b2cb1d8e19f19
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# de795b315cea4f12bab8d48ead85bda9
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# aaa805a4db3a4dd688c59ce5707879ba
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# c0f7e3c152604150b2493358bc471101
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 49fbf97400284e80a1e9f67d7e19fe39
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# 82503565c7f74ac3a2218be83dfa5c1e
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# 7d19e0669d4c4fea96694cdaabcbf133
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 76df64d216ad42deab2d0334dbdd4c7c
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 0aa192416c1c40e280fac9b8601a6c9c
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 289af5d806cd4125a177764a19050450
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# 4c1a12183b9e4cdc8ae6e85c08bb4e7c
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# c96b76ef931148509881867b6c1c84f0
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# d928cfe3a5e84520a785c9fa73dd63bb
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# f65b9f25815d4b7dadbfa080b2a94f24
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# af3eeecc9c52452baa774dba93d6ddc0
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# bf0f0b5af9b14ed6ae7ce332116ed507
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 47303564a3b24c4281e5ef57ce07f92e
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 69e7ac58011c46cc88608699f4ac186a
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# dea415f728cb44e89704f4ffd2be2bbe
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# e6b907273d6d40178a791c0dbd79fe0a
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 9ad581ee18c942c1856ab86f0e4f84f1
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# 1edea663bc9744b9ada8fe0172fd1708
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:86
# 6deb667eac89437cae3fed059c46cf16
msgid "Examples"
msgstr ""

#: ../source/handlers.rst:87
# e03f54aab80047eebf331694b8ff56a5
msgid "The following sections show examples of handlers."
msgstr ""

#: ../source/handlers.rst:90
# df31aa1e62834df58c35b98dabd5bc9c
msgid "Cookbook Versions"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# 4f58c08e5649485c8e9b0d6bea711a92
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:94
# 46a4444882404f00a787144353c90b63
msgid "cookbook_versions.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# 40c031b69252423ca6c686968c5c342f
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:98
# b923be73d86b49908aa81ec9f89b202b
msgid "default.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 5f8ce33244b84db99fde7376cabb1565
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# e7b8e3ec929942f6b387c8a7c571585f
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:102
# a8b2fdb0cc8f4f3e845145fe592feb43
msgid "|reporting|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting.rst:5
# a239c0873052471f80c9e5e9249c637d
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens."
msgstr ""

#: ../source/handlers.rst:105
# f916c02b6a204239a73223ecdb776fd7
msgid "The start handler used by the |reporting| add-on for |chef server oec| is always installed using the |cookbook chef_client| cookbook."
msgstr ""

#: ../source/handlers.rst:108
# 8aa28c13d522471d88bbabca8dfd5332
msgid "start_handler.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting_handler.rst:5
# 696d430737344d43841bc2447ab0c259
msgid "The following code shows the start handler used by the |reporting| add-in for |chef server oec|:"
msgstr ""

#: ../source/handlers.rst:112
# 070f0c3dd9684d4fa312e54f9b7ace89
msgid "``json_file`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# 50f4f69229b644dca6d5c6870b53a788
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# 30165b4f226444e684cba40b9f0c72a5
# d7d9ed7c4b8d4df599fea9f5b696c6e7
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# 89cfa3f65dc84d7381dc40f4fcd64680
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/handlers.rst:116
# c2dc267b0ec54263af8dccd76248dc28
msgid "``error_report`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# ea2e0a6751b64482b714310ddee5e821
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../source/handlers.rst:120
# db686b3c2aac4795889fe10173928bca
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:5
# 073b7e8422484b049f2dd216af48338c
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:13
# 01217d1a4aa14345a54430fb89a958e6
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:14
# c64e1085432543e28b246ad768564f65
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:15
# 3371b8688bdc418ab956c8270dcac1bf
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:16
# 8b233d39696a4ae4a1bb88f56f30e48f
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:17
# 455c18bf7110439fba895a4848a44801
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:18
# 28b87195adda48acb0ef4b59d5d1b4b1
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:19
# f69afef827664df388e3c7315f3697f2
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:20
# 94f25a4f4a9141eca3137904c83e868d
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:21
# f337313e53634629ba0a43b6b86b1d01
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:22
# 9cda549547364aee8c0648cfdd131a66
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:23
# 147ea5275a0f48a68b5007c105858857
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:24
# 70fd741234aa4cbbab377797990f9bbb
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:25
# 7870da152968468fa62211eefb3264fb
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:26
# 26a60e7d360d418886dc36e0ed8ae7ca
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:27
# 9197831c92fb4f8a98d7294ac525bf03
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:28
# 4d46e747215545b4b73709235275d464
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:29
# 6d76fcf75bc4437c873de0fc31c5e593
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:30
# a00dfc11ab8042d2a8c9548fe2b137c3
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:31
# 05e66219fc404f47b5790f40c198357e
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:32
# e5bce2ef6088418983de1c552cd05acd
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:33
# d80e4fe60ec94fe3ba1abc9bc20373f4
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:34
# f6c36db67c3a4d01ac2af2b9aaa866cb
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:35
# e2f98353ec0f48259437dd0050a8bc3f
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:36
# 30a83d7cf6974573b2a1b4027bd600f3
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:37
# 53695cd3313e44de86f3b60f4d568b3a
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:38
# 4649de34530b4fcf928e4876ef674323
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:39
# 26fa571b7dd54d5db2ea07c47d09c033
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:40
# 8c5eb5b1577042d9a50ab0726aad0047
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:41
# 28d530228dc7460c8edca2cc2698b9b5
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:42
# b1b1e4a08aa648a5a3e092ffe1eb1f12
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:43
# 05bc2d05764b41a1adfe50a22e679124
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:44
# d67b5c9bac2f46b185fe6e7b4522bd9a
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:45
# 7d26ccd27510405db95eca751df51085
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:46
# 9aee496574d647a58039d7f55b10f016
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 18:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# feb549d477c8416caf3ad2ee12b8c55f
msgid "About Handlers"
msgstr ""

#: ../source/handlers.rst:10
# 6ffca5cc01e84abd8eeeb846cb04acad
msgid "This topic is a draft topic, intended to replace/update docs.opscode.com/essentials_handlers.html."
msgstr ""

#: ../../includes_handler/xincludes_handler.rst:4
# 3bf437c3d6cc48d1b7cef99905e2317e
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| what to report should these situations occur."
msgstr ""

#: ../source/handlers.rst:15
# e1149ea63c5c47ee9f0fcacf64f9c196
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:4
# 54a8a1797afb452c8fe87b31eb761d11
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:10
#: ../../includes_handler/xincludes_handler_community_handlers.rst:11
# c1c7ab563ce6407bb6d0bef1146886b7
# 652f61f54f474e8dabf98a6f26191e8c
msgid "Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:11
#: ../../includes_handler/xincludes_handler_object_run_status.rst:12
#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:12
#: ../../includes_handler/xincludes_handler_community_handlers.rst:12
# 183d6d8c632744539063432ffb19b0e2
# e8abb85586674c4189393e0c5fee405f
# cbaa08a366424af5bf83b1c8b2249833
# 6f4a51b5fcd04e5ab6fe35b5be45491a
msgid "Description"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:12
# 94472ec2e4ce4e51887df1be643d3ae1
msgid "exception"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:13
# 71110f5e75e24a6e857fa9ad2004f2a1
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:14
# 714cb74c30b34ff18272b9c544f35347
msgid "report"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:15
# 00566cb88fbe4e28abdc8d4133101d43
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:16
# d1cbeb08e17a4e1f8ada6d88422e91cb
msgid "start"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:17
# b5faf0b8fcde4ecfa318d2e45401fab4
msgid "A start handler is used to run events at the beginning of the |chef client| run. A ``success`` handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:19
# 011bcafe3a4f49f88ec2407419f57f95
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:5
# 6f8dea7e236c4b1eb47f2a88b07cc41d
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` method is run for any handler. The ``run_status`` keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:11
# c3d95b6dd2f9405b96f8ea3198fc91c1
msgid "Property"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:13
# 68789dd8f8e641a2a315055653041fdc
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:14
# fea47d286744438b9466ed52f2611b32
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:15
# 4a8ed55469de4a399b4e97b1fc254441
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:16
# 038e2088a53b418ba08f4daec6ae1af8
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:17
# e3cac527366145e6adc8f387cef0615c
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:18
# c79c54e865dc4d4db960de9977c18a89
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:19
# b811b727c18843b2910b9a6444b9366e
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:20
# 4989af8b1f884471ac8f6d89c7568b18
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:21
# 73b85fea4545498dab8e4a3281cc2065
msgid "``exception``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:22
# 6bc31323968f42c188a49e354bb2bd3f
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:23
# 99227ea3a8e94a249d39f0728668b96c
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:24
# f1f36217b6714c9fb18dbafe396aa9c7
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:25
# 04985062d7b940bbb8ec5f76f5f17783
msgid "``node``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:26
# 6d8d46f60be24f3c8f012f19e0a803a4
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:27
# 207083efb7174d38b876d603b101c81e
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:28
# 93617a09fbbc491598cf109d33b3f704
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:29
# 2280a86cd6934be0ba1c282f3dcd26db
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:30
# ccedf5d972d241b091fea2da2720555b
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:31
# 7d62fa1d5af845c3a5062f72c8a602fa
msgid "``success?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:32
# 75b21475ed8a4acc9323280535a4a758
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:33
# 429a73c6e87c41d597933c9b096b7719
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:34
# ec1a454008514081ae800cb2dcf0940b
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:36
# d5a57c67be404beeb1a5e06fda050298
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:23
# c86274f5144144b08e15578259deb134
msgid "Run a Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:5
# 73ee9e00e32f4f3a969c7522d13f25bd
msgid "There are two ways to trigger a handler during a |chef client| run:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:7
# fbf06610dd6f4e1ab33a09e38e3e5620
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:8
# 6637cc8f20c64edda957bd0bd30bdf23
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers``, ``report_handlers``, and ``start_handlers``."
msgstr ""

#: ../source/handlers.rst:27
# 119831b7be144755a0c1a2576c2ef646
msgid "in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
# 38915dc641e44f77a44816239413b306
# 9443fbfb9b954545930c550b3eeba284
# 6badf6f90b6448fba1baab356a863455
msgid "The |lwrp chef handler| is a lightweight resource that allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file. The |lwrp chef handler| ships as part of the |cookbook chef_handler| cookbook. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:14
# ae3156adf1aa4a9fb9fc58474b32002f
msgid "For example, GROWL:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:22
# 29aae01a92f744f8b69c93c0338f3fe4
msgid "which installs the handler at the start of the chef-client run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:24
# 799a716aff5f4be99af65c3732b9e4e3
msgid "And then in a recipe, activate the handler using the ``chef_handler`` lightweight resource:"
msgstr ""

#: ../source/handlers.rst:31
# b622cad30ce04acbbdf873fbaf0ce0e7
msgid "``chef_handler`` Cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
# a929d603d668408fbeb4687871bfec9f
# 98d80d3540624e059f719456d10d18d8
msgid "A handler can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:35
# 02b3352ea25c4e35bd360350829ca078
msgid "``JsonFile`` Handler"
msgstr ""

#: ../source/handlers.rst:39
# c64d87e4af254a4a8a60e3fec5021859
msgid "from client.rb"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:5
# 94310998cdf3403c81244b65cbb92ef7
msgid "A simple handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:11
# bebcf670c342480194df86b7b13b3952
msgid "Setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:13
# 203584e534dd4e7f80e2bbaca0adfb96
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:14
# 01bb3d4f3c7e462aa3bc01b32e386710
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:15
# b9220467597c483dbfa073195dcf977f
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:16
# 15fb33c8d71546f9a14985961addef65
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:17
# 10c84d8e2a654247bce21a0bcbe274bf
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:18
# 9afc88486eda42ac82c5cb1d52c9434e
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:20
# 5dc0a32be1f74b68ad88a1ba5cc8109f
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:22
# 59aedfe9b75f4812bcebc8fab064dda5
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:43
# af4623dadd114d72b1f66ef71a9eb760
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:5
# 2ed0a718eb1e43efa6a65ae52651c793
msgid "A custom exception and report handler can be created to support any situation. The easiest way to build a custom handler is to extend the ``chef_handler`` cookbook and then use the lightweight provider in that cookbook to build a recipe and then add that recipe to a node's run-list."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:7
# 5b2d4e3386574aa5b908997bc4c35aed
msgid "https://github.com/opscode/chef/blob/master/lib/chef/handler.rb"
msgstr ""

#: ../source/handlers.rst:47
# 568acee56c2f47ea8e5b7e061cca7b9e
msgid "Syntax"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:4
# 04bdb8603869492898f9072e3cbe984b
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:18
# 8a03bccbc79446f4bcb5b4937862aefc
msgid "where:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:20
# 7c15251366c1499d8cb6c4892785307e
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:21
# 9fa6f95c829240c9888e5ddf0cc21796
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:22
# 74887af759894e539c5e2833a4115477
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:23
# 011292498fe14d1da12adc2f617b0e49
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:24
# 9ffe2539869042db8b70a14c3857b5d1
msgid "``run_report_safely`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:25
# 8572870b185b4a48b1f30f2c8c64d788
msgid "``run_report_unsafe`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:26
# ffd30c6dbb4d423b9a276d339aa90f53
msgid "``data`` is xxxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:28
# f5c4b34c4d1a4292925e77c0584b8cb1
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:51
# 2f7504c19ae54daca143d436dbd9105d
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:51
# 8969b37ab4e9462ea1de704631f52830
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:5
# b42d6d4498984f48af7c7daf41757943
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:13
# 95042d4ef0c7494bbe9b156a617b06ab
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:15
# 9920f74741fb457f9818447bf087c69e
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:33
# c1be5922f3fd4c4eadfb4178abfe56ed
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:55
# f83f00f1012b4db38fee835d46ece183
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:56
# a697d9dfd8564a0d992301223451634e
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:59
# 7fe6c5f850e449a1ad739221238d61fa
msgid "``data``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_data.rst:5
# 755f5a285ba845568b9581e88c14ae5d
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:63
# 6e44547bfbe04ac0a6120ba9dc0e1096
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_safely.rst:5
# d173a231c7cc46b5b0ca7f61fda20d89
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:67
# 81a567e767144fec9108176e49af98b5
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_unsafe.rst:5
# 74d582da08894854b24e71ab014a508d
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:71
# b1acc65ea4eb408785cddd2c824266ad
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:5
# 7cda4d76674c4e0fa39815c1a49bd0fc
msgid "A custom start handler is custom |ruby| code that defines the desired behavior for the handler. A custom start handler cannot be loaded (currently) into a |chef client| run using a ``chef_handler`` recipe. A custom start handler can only be loaded when it's listed in the ``start_handlers`` setting in the |client rb| file for the node on which the start handler is supposed to run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:7
# 71cc8c728f2848b699c8e33fc4604563
msgid "The basic syntax for a custom start handler is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:21
# ec60767fcc234e048b750f121f58b9da
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens. This is done with a custom start handler, which is uses the |cookbook chef_client| cookbook to install the start handler each node for which reporting metrics will be generated."
msgstr ""

#: ../source/handlers.rst:76
# 885cb5b68da341ba9356e293d240d0a4
msgid "Example: Cookbook Versions Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions.rst:5
#: ../../includes_handler/xincludes_handler_custom_example_reporting.rst:5
# 14ec9e03857845f9b0bed85c85e61a12
# 1d0e31223d0047eeabbc9ae40a01d7a9
msgid "Community member Julian Dunn created a custom report handler that logs all of the cookbooks and cookbook versions that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:80
# b8d74bda311c4887aefb99b354a4ca78
msgid "cookbook_versions.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_handler.rst:5
# 2dbd0c71c0b446c2bb64ecf7bc019092
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:84
# c64a28b193754508996c1512fb445364
msgid "default.rb (Recipe)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:5
# ed1e859f56e040ceb62ec4f25fd20aae
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:25
# 1d99846cc4a54fe99f2b1b82ee17e4d7
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:92
# c3ec5a0b65bf4e31abf674e21d9f605b
msgid "Example: Reporting Handler"
msgstr ""

#: ../source/handlers.rst:96
# 085f364c68344cbcaf0d039983323334
msgid "start_handler.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_handler.rst:5
# c7690fc19f9b4541acc0c23a404018f3
msgid "The following code shows the |reporting| start handler:"
msgstr ""

#: ../source/handlers.rst:100
# 5c5105362d724d4bb3b8bfd27fdc247d
msgid "Install"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:5
# 253818b261304462a6d45ca34d79e23e
msgid "To use a start handler, it must be installed on a node so that it available to the |chef client| at the very start of the run. There are two ways to do this:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:7
# f8247e2daaf6481fa09e0348a31d1ab8
msgid "By using the |cookbook chef_client| cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:8
# d03ee8a6349e4ef98093e1bfea648585
msgid "By modifying the client.rb file, and then adding the appropriate information by using ``start_handlers`` setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:10
# a0b166ea360b485f86b412ecc5190873
msgid "(The |reporting| add-on always uses the |cookbook chef_client| to install the start handler.)"
msgstr ""

#: ../source/handlers.rst:104
# 4adf081854d945339a6760079f1e599a
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_cookbook.rst:5
# 24108a9cbfaf412db879ff838a471189
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/handlers.rst:108
# 1bc8d556ea5243db8be4cd3656b0b79a
msgid "|client rb|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:5
# 92bab4d3eb324e1b8db13bdcacd3e5f3
msgid "The configuration of a start handler can be configured in the |client rb| file. For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:16
# 087534fead234d76bcf98282d24cf6ee
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:112
# 88050be07c6c43d3b4732cf1e56c60b8
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:5
# 3320554938914fa7a28b19c4d915dca3
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:13
# bbcd9f43487f40d9ae772a15a2c5f92f
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:14
# 3310b606896d434582634ff27a39df3a
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:15
# b088276243494de1b20918495e925d4b
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:16
# b271eed3a1d741c48f170a7d6c85e332
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:17
# 8f34ce824f6f4fe19f6ad454841f48b3
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:18
# 1daa8f8a6c2f4284b98e613e9f444ae7
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:19
# fb7b6cb1a77842049d2d81d9850c2541
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:20
# b6b39388206e4618b12c92d63f749baa
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:21
# 3de7100096714357a0d20483c1472ed5
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:22
# c1824582826e46799954ec1b3d419ffe
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:23
# e13773b042df4514b6d62ed6a99dc895
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:24
# ac370766ec9a43448c1a9d4c8b398471
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:25
# f35f7938920e4bcb926294b2fb2d60b4
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:26
# b7302f428cc64dc8993de668228fe124
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:27
# 3a1f2892d97f4736a007523602665e48
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:28
# e6ab726fd1394dc9b9a0f7d6a0ce938b
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:29
# a56a5dc743964b029189b253e67b12d9
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:30
# df55e512d3b54b43bd485c25fdc924a5
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:31
# 0bfb1fd2ba114c83b81d2fc85d4b3648
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:32
# 5c6ac01f9aa6453fb64b8554d39021ea
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:33
# 67829235ccb44564bf0c76d27b206f3e
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:34
# a566e3d2527d4ea28cd33e6521062d10
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:35
# 8df1c77abda04139bb19307573f11868
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:36
# 526f9e4a239f4c039873842723d3d6e7
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:37
# a616b94387104044ac7d58f04bcfa1ea
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:38
# 28d6bc193da34859bd994c2a3490a19e
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:39
# fa9dbff9415a4354b4a6c4cadab15ffa
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:40
# 63f256fc3e24450c89289339b1ef1480
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:41
# 334d788a32ce431e895c2b11a1520473
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:42
# 8a8a2bf9f9e540dea0e50d16eb2c8d72
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:43
# 88604b99587e4523bb5278a2318ab023
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:44
# 783b3d6cb82c45eaa3d8af4c88334ba7
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:45
# 5039538f19ea412b8e289d7c1a730eb4
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:46
# 61373dca45ca446aad23d3d9b37c172d
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-04 22:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# c27add2f3ad543b989b5fa02ee263a26
msgid "About Handlers"
msgstr ""

#: ../source/handlers.rst:10
# cc1d3a52dd35455d890d180039f021a5
msgid "This topic is a draft topic, intended to replace/update docs.opscode.com/essentials_handlers.html."
msgstr ""

#: ../../includes_handler/xincludes_handler.rst:4
# 00e937ccc81e40deb27e7878d5e0f6a3
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| what to report should these situations occur."
msgstr ""

#: ../source/handlers.rst:15
# 6501275cb88f420bb544d9862015f1c5
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:4
# 6a899f857e914acdb6cafcb2a5d974b7
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:10
#: ../../includes_handler/xincludes_handler_community_handlers.rst:11
# e47e8151cfaf40ff9d6999acb64b22b1
# 664b3696ea2540b393098a650d2cdfab
msgid "Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:11
#: ../../includes_handler/xincludes_handler_object_run_status.rst:12
#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:12
#: ../../includes_handler/xincludes_handler_community_handlers.rst:12
# 274f253196fc415baee580b2c58ec45b
# 2ca45f6c0c864fc183d3b5be458b64d9
# 6e418d45f52b460ebb8f270e4508f081
# d965d0020d1b488bba09f40d0ec4fe2d
msgid "Description"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:12
# fdfcd730094a41ba894e82c899369ed5
msgid "exception"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:13
# a809c1c8f23a4d6e80dd7bbd442f87e8
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:14
# 9adbca7f0679472992da4e82bc01dee3
msgid "report"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:15
# 57921aa4dcf2487991b485ebda07d0ab
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:16
# 1ee1625245414f2d97e59cb2a2b75e92
msgid "start"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:17
# 72a44468a1ce4795b4153ad1b4a713ac
msgid "A start handler is used to run events at the beginning of the |chef client| run. A ``success`` handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:19
# b19eb7dc57a042f39fb140ea1addb13a
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:5
# fcf6a99b3fe048ab87f7dd6ca1e59c80
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` method is run for any handler. The ``run_status`` keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:11
# 1759e58b8b2b4e25b3d8752361170f41
msgid "Property"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:13
# 035722a013ae4d519d10cb2be2c1d7f9
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:14
# 6dd1441786854c5da347d55bd6032f24
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:15
# adf0adde67894bcc9273b88237f829a7
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:16
# 0578861c770b4884bcc3710736bc081c
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:17
# 3f7ab11409e14258a5eb389e3d5c6cb0
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:18
# 2518d7bb4b30448eb9eb31acbfd0ab36
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:19
# 953a466d91fd4308b3577ef49b66faaa
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:20
# e9b2372e17de419884e35e079e03791c
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:21
# d6f4acc438034d5ba53911a1b6e5a825
msgid "``exception``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:22
# 96a36a07d6144eb6a6966829dba74cb1
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:23
# 57474c47034f497389ecede9bcd1d6c3
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:24
# eab0058b7ffd42d091466e0412d12744
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:25
# 731fae568f314aaf99e2219b3d13488a
msgid "``node``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:26
# bb2752c3e50f4943acccad59f1866fd4
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:27
# 93a141bf91d44402923e1e4216526180
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:28
# 8ff37f3e9fa6492dbca4a8d3096278d9
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:29
# 99cdc881fbea45aaa0d9483ba5c9945c
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:30
# 288eb795d9b842388a3a08240b08b841
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:31
# cfdc54e8cc4e406cb8d331da32c8127f
msgid "``success?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:32
# 4d733328bc7842b4ad9553156cfef735
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:33
# b33db58cb8dd4c20892bb7d45528061b
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:34
# c1f217c8cf404df3a8b1e89aa60e22fd
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:36
# 071a3dd8635c4586808f9b7250f89303
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:23
# 7a66359c2a2a410f82f42c10b234cc81
msgid "Run a Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:5
# 3e2d9330357648ab8b9ec02862a96fa3
msgid "There are two ways to trigger a handler during a |chef client| run:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:7
# 3007310bbfa0481fa874f15101c83f3b
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:8
# fedfb17f921941388ace04e9d860c164
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers``, ``report_handlers``, and ``start_handlers``."
msgstr ""

#: ../source/handlers.rst:27
# f1d9de59cc3643f694fd8fadfef540c2
msgid "in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
# 39f02c6266ed43f2b184711acb5f4600
# 6a5028a228e74c6d8a7c1be6d3efd45d
# 7debdb769f854feaa6f3217c2e4bfbed
msgid "The |lwrp chef handler| is a lightweight resource that allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file. The |lwrp chef handler| ships as part of the |cookbook chef_handler| cookbook. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:14
# 5b7bc3fd831e4903802d771ef46c0f35
msgid "For example, GROWL:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:22
# f0ef703d25f2427aad7f8308573b8eb7
msgid "which installs the handler at the start of the chef-client run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:24
# 8bc17e4ba79143288a3e4f5e442b19a7
msgid "And then in a recipe, activate the handler using the ``chef_handler`` lightweight resource:"
msgstr ""

#: ../source/handlers.rst:31
# 4da52c7b0f8043c3884c76bc1c7cdf66
msgid "``chef_handler`` Cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
# 2124c9bff58f426da152dd523633525c
# a06e065b57694041a7e04ac2da0dd086
msgid "A handler can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |opscode| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:35
# ccf3763d5ef24471b81b8a1e34174d49
msgid "``JsonFile`` Handler"
msgstr ""

#: ../source/handlers.rst:39
# b42f9e946dd64489afc8d515df1d22d1
msgid "from client.rb"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:5
# c4dcc25152cf48f28274e22c77bc8301
msgid "A simple handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:11
# 20547928f9e84e578600cca635c013ae
msgid "Setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:13
# ddc1e9d07d514d29b90320267439fd34
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:14
# a1de6e2e3b064e0cb33f17fec1296934
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:15
# 78c40d582772415f942c908ed6d26302
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:16
# 8c1fd63086e640d5a4ac4614572d9541
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:17
# 7e385e8b669e4e12bef9cd9527687605
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:18
# ba100556965340a7a8813efaa1a1adb0
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:20
# 71f1bf83aa9e4276920b9958fe2c01ec
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:22
# b205d8d20c994ab6a75ca278860ddf36
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:43
# d6013e7d14a74aedb82d18e388a97471
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:5
# 82473aedc78d4dcc95ef199eaaebfd2b
msgid "A custom exception and report handler can be created to support any situation. The easiest way to build a custom handler is to extend the ``chef_handler`` cookbook and then use the lightweight provider in that cookbook to build a recipe and then add that recipe to a node's run-list."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:7
# 2f1ac3718be94b58b271e953a8d927c1
msgid "https://github.com/opscode/chef/blob/master/lib/chef/handler.rb"
msgstr ""

#: ../source/handlers.rst:47
# f1e92e5466d2440c8e03581bdb8ad65c
msgid "Syntax"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:4
# 9691ea91b7904baf8fa64e870b160580
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:18
# ce332f88e58d443aa5a3493ad7be76ef
msgid "where:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:20
# 85a329505902471fbd23aa04d10f7dfa
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:21
# 0f450a3b9b6e478496bddc73a775456b
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:22
# 6930d4a263bf4545ba06e2bd8626c9b9
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:23
# dbf6f86004ce4f95b95681151361d881
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:24
# ffa3fcbcd7844226b5b776e039b9ac11
msgid "``run_report_safely`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:25
# f2367720f60541c38f7364ef6e5f420e
msgid "``run_report_unsafe`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:26
# 1fe43880041d40bc890dcf51ffd9a242
msgid "``data`` is xxxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:28
# b79a0e7b64a3439f9e33ceda51b322fb
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:51
# 2815adfee93342269a94ac5eafcf1289
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:51
# 2d9dd6f85e9f44159ccc30385f76d26c
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:5
# 06fc0a1fe3264fc7afcd45d1924f94cf
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:13
# 8fe2328c7c2c48ce95e47d67d949b577
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:15
# 0e64e568558e43feb4cf139f18eb121d
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:33
# eba55f2bfa374250a3535a06c898f42d
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:55
# 9dab82e05a9142519b2c5b993e427174
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:56
# 36d455e5cd064ab8b982ca0f1586a86f
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:59
# 2e4d418651ad41448e8b9bf5472d8122
msgid "``data``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_data.rst:5
# 6ac421306a944e02b331fa20ba60ca60
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:63
# 6c69a8fb07524c47b28629061c924749
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_safely.rst:5
# 4660367d360040778fbfd1e65936e8c7
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:67
# d3cbe64b767a45a1be228b78578d4ebe
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_unsafe.rst:5
# dc7048162c2c4617a148ebb2e8dd868e
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:71
# 40ee76ee0bee4a80973502cc4b035bc2
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:5
# bc10f1c2088f46c2acde5cac3376fd05
msgid "A custom start handler is custom |ruby| code that defines the desired behavior for the handler. A custom start handler cannot be loaded (currently) into a |chef client| run using a ``chef_handler`` recipe. A custom start handler can only be loaded when it's listed in the ``start_handlers`` setting in the |client rb| file for the node on which the start handler is supposed to run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:7
# 0589cf6e351c4bde9bfb148baa24a78a
msgid "The basic syntax for a custom start handler is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:21
# 485d4ea406e24e1eae86360a5bd2fc6c
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |opscode| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens. This is done with a custom start handler, which is uses the |cookbook chef_client| cookbook to install the start handler each node for which reporting metrics will be generated."
msgstr ""

#: ../source/handlers.rst:76
# 3be06b7c545d4dc3ab7d7ae4c7e14e10
msgid "Example: Cookbook Versions Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions.rst:5
#: ../../includes_handler/xincludes_handler_custom_example_reporting.rst:5
# 33554155e4f644dc84ea86ab8a2f20eb
# 26c5a475481848b69b1fdf5497654ad1
msgid "Community member Julian Dunn created a custom report handler that logs all of the cookbooks and cookbook versions that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:80
# 83a0f7def08040abb67b2edb84bc356e
msgid "cookbook_versions.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_handler.rst:5
# 23a8483b418845b4b0114a3e7071826b
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:84
# f8e1bd6c55244addbae67e7e831679c6
msgid "default.rb (Recipe)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:5
# 3fb7c81839674b2089eae62828c89be2
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:25
# 6f5faca7775a44d2ae88dd0caf2bcda0
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:92
# 95ac93f7a3894502b5980276d54778da
msgid "Example: Reporting Handler"
msgstr ""

#: ../source/handlers.rst:96
# 9075489bbf82432eaf6cce21ed85ddf5
msgid "start_handler.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_handler.rst:5
# aa64b4b406784a92b788df6276bac28e
msgid "The following code shows the |reporting| start handler:"
msgstr ""

#: ../source/handlers.rst:100
# 0548f2993bea4613baa727b78f664ce4
msgid "Install"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:5
# 47f2bf560fab4ca08bf05c38473f5fba
msgid "To use a start handler, it must be installed on a node so that it available to the |chef client| at the very start of the run. There are two ways to do this:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:7
# 21acb2e54b7e4bf28b040f2f7ccd559c
msgid "By using the |cookbook chef_client| cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:8
# f3b445d232ce4729ac4a937e21a78eb7
msgid "By modifying the client.rb file, and then adding the appropriate information by using ``start_handlers`` setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:10
# 16f775cb5a854984ba2113d8eefd5f92
msgid "(The |reporting| add-on always uses the |cookbook chef_client| to install the start handler.)"
msgstr ""

#: ../source/handlers.rst:104
# a5f9b9ba9fc0401fb612805ee0d2f5f1
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_cookbook.rst:5
# 6d639989d3ce45609a627ee81247e3ce
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/handlers.rst:108
# fc52b26dcc124d3bbacca8ff4c22b499
msgid "|client rb|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:5
# aeec976a70a2420bb06c8a4b3502adb9
msgid "The configuration of a start handler can be configured in the |client rb| file. For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:16
# 9fa981e043e2478b917f6a6f5e51f351
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:112
# 14cd493103a9442685a1fd625f609613
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:5
# 8687039122ec4eb697ee15cc4b5e820c
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:13
# 7a87f18ecfc945d78c51ce2030c6ecd0
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:14
# cc11bdd866f64d82afdceb06c5cdcec3
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:15
# 7f78d4120c9341579312dbdd66b5ab8d
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:16
# 535c7bac3c6f4d0f916fb61ceaf212be
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:17
# cc3bbd13d8444ee3ab3870c0696de76b
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:18
# a2f3c171aa6640b2b7d5c3ca5ccaf80e
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:19
# 0f49708202f54e6b838a91b86f1b47d3
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:20
# d60113a0a7044e9ca1235630afe32cdf
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:21
# dcf8f67ed29e456fbbd3cf375b573167
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:22
# 2447c343b477408a9a8f2bdf1d9e146e
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:23
# 28ec693cf11c4401aef6a84e837e43de
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:24
# 8d225b35a85449d5aff8caf75691cba2
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:25
# d2b8c5214c7647d1854f95ab6ef38793
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:26
# eece4c9adf3b438dbcb1c72b3bfe7c02
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:27
# c3f0de9b8348499e97c868927cf3dbeb
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:28
# 0464261256304179b7c16a5aa8717621
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:29
# 40b56c8cba144c518d2d2c61308d5321
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:30
# 05e30e137caa4f628bd157c8e1733eff
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:31
# b99089e6e6d84de5ad129672a87deff8
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:32
# 0d7e2abde37048b395f638c79253170b
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:33
# f0c4e69ecb9d4e3facbb8a9abf2b205f
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:34
# 1a818b562a064c839d62c9b96bf1ab2c
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:35
# 9edec3786aa546d99c6e131608ce94b2
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:36
# 2d1af334ead14ef297b929f63e6c14b7
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:37
# 94ae2ffdfa4d4c0584040b637cd7087b
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:38
# 4407e390845944548042fce57b93c286
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:39
# e8f3e009f0d04bae8fe08fe6de598cf2
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:40
# 44ebda7a444e4f4b980c80faf1979094
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:41
# 3f0ce2e8c51e42c598952b53809275aa
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:42
# 32c2c28c91ff40b4826e22b060cf44d7
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:43
# a529278a96634c849bb2d0437b021f72
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:44
# 66c73930e96c4caa9a1c9093ff4f0604
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:45
# 70d4ca66456b43a4b64a2f666d2de8c6
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:46
# 9f727bda63e44d8e92da32703e6c83c2
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


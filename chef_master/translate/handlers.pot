# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-04 15:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# 7d524c192173473c834ba01dff07b339
msgid "About Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 2820dc6c27b649809e3d453c8dcc8f2e
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# c3bea4dfdbc44765946599f525414a79
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
#: ../../includes_handler/includes_handler_community_handlers.rst:11
# 912c9ecbcabf4d7eb4615ead0ad907c3
# d3c36fe915b046308f65a81df448b7b2
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
#: ../../includes_handler/includes_handler_community_handlers.rst:12
# cf289a9a38fe4038bf1a08fde721e4ae
# 86835e817afd49af99478921f2282448
# b122aa8f860f43709dd803e00cf2f59e
# 5241260f1a7c44f9a10103f14ea052e4
# 95015ef3f7024466910ff85c2d2dc4c0
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 32576b9b0cd745aeb8f795383c7468ce
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 4544ebcd47e54015bf5fe13455a6c5a5
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 9b57ad22b2c54c4ca7c19e2bbf62a42c
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# f77ff86a50d245428f5841a9e6fc8745
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 81be8b8ef1914ddbbb3fac0f66ecc8b9
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 25a6f200057849b18839699d6b985681
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:15
# ec2b3f928d83483cb0bf94154b7e7092
msgid "Exception/Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# b09e57b3d95a4dcfbe4d84ffaa4d4015
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 0ab3d81bfbfb4d2481421bd9e31ddca9
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 03efa704c812401285e2fa2fbf0bf256
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# 5cad4dd45e8842c3be6f58dbfcabccab
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 3617e8f19417406d8e4a98de198383e5
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 7e2bbcae5d884183a2a3be2663a13811
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# 58b9864d87b34f7498670bd1550a8b95
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../source/handlers.rst:19
#: ../source/handlers.rst:31
# 1acc819f68554a9299737f03d13578ca
# 45168ed2de524da0a36c4b3a83039909
msgid "Run from Recipes"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# fcd0c5185c284491a89be5d98c81a371
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# ed7c0376d43b42dbaad358e7b6dda837
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 6a479263fd1c40dea486bf3764ba79f0
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# 827453ca12144b68b564c0709ed3a966
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# c16d28cf3b284141ab448d02d3284050
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/handlers.rst:23
#: ../source/handlers.rst:35
# 7f9a5bfb43db449289425d381ee9aae9
# 7f4f7a70d4d84593a92cde71a9fab59f
msgid "Run from |client rb|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:5
# e78793426f154dcdbb468b2e66f5c928
msgid "A simple exception or report handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:11
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:11
# aa0d31ea371b423a8896374bd49067b0
# 456b0d43c4a14328a46a490a251b28ed
msgid "Setting"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:13
# 1db1650788834685958c7d57fcf0b95b
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:14
# 9d6e91b0ddb340d39145ae423ccac2f1
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:15
# c7f621668f6143d9a493d3fc499be2c0
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:16
# f4f22907c18a49bd9161b9d4da21560a
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:18
# 8eef92f4f0c74bae9363b1fa74462f06
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:20
# f57bfd4e27b14d4db480d482ececa599
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:27
# 4ba2b9a3492544448975f1d54de197df
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 47d31287a255478aafedd9f793cafa9a
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# a79f0d8c2f35439b89710860894e532c
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# d66808c9e4f5459abd10cc3e24b131ae
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 4e35649ea107495fa55301d2b29bd8e7
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# c0d8ac06e6424635a523002c58eabe94
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:5
# 992f39305d294b4ab6c89eb5167ab72e
msgid "A start handler can be configured in the |client rb| file by adding the following setting:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:13
# 45b2310ff2a74aa48db2ce9ac5a78fe8
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:14
# 3411d97f3d1e489b9eed92d8b608996f
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:16
# 7ef888c22618423e9d98557dffcf822c
msgid "For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:27
# a2635c3a62de48dcaec7338ee714ad3a
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:40
# 5df28546ab3241bb883495b0e0f4741c
msgid "Handlers and Cookbooks"
msgstr ""

#: ../source/handlers.rst:41
# 979716c179874b13823617a716ebb40c
msgid "The following cookbooks can be used to load handlers during the |chef client| run."
msgstr ""

#: ../source/handlers.rst:44
# 6a2c2376b8a84883acf1ffff285c8872
msgid "|cookbook chef_handler|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_handler.rst:5
# e59edccacbb64f85ac5beca664b29a9a
msgid "Exception and report handlers can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:48
# f69a536ad901434b97e90d7979c2b6c6
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_client.rst:5
# b375f6b59d404e9984605eabd53f368f
msgid "Start handlers can be distributed using the |cookbook chef_client| cookbook, which will install the handler on the target node during the initial configuration of the node. This ensures that the start handler is always present on the node so that it is available to the |chef client| at the start of every run."
msgstr ""

#: ../source/handlers.rst:53
# 2c9d58b2ce214b89b014833f6fb6a455
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# e89154c34b2242b59c3e922d5b028ed0
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# 7ea2e82c5f5a4ffa99798c02458009bd
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# ceab0f8e42854c0f9d31135eadc0905c
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 9fddffcbedcc42acbac4130e39ff1937
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# f711347174ea45348622686102f1ba5c
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../source/handlers.rst:57
# 8c34bb0583094ec59ec89d7565a74f71
msgid "Syntax"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# 550124cb4bfd436e8b6621fc740f1c3c
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# ad4387999fd1482e8b9470b38c1f27d9
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# ce537eec6b6745488dfbc9d185fa26b0
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 0d73f2ca51984bb3b2a36896eb33f71b
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# bafa0b08e2634d3d955e3142c3ae9d1a
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 2a1cafc91af546d3b7c05a96353d0540
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 34b3bba6c8b74bd1832fae66d7d17828
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# c05bd8d0954a4007b700c74569ffa5b8
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:61
# d8f1d6019b7747e094545422366a7097
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# a1f16619ca3f46d089fe052dfca819fb
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# a20d14f297484b91bc2f3a53167889bb
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# d7cc67cc4a5e4b7dbb38356bf22d2883
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 0514712cb8f54a148846545d31720f1b
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:65
# cbad726243494260ac2b2dfe3ebc8fc4
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:66
# 16a65780494e4535ba05a170713151fb
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:69
# 5ec950de3bcd4f0eadee6f409546cf21
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# f7ed708b56ee447f87890f9ea4e00760
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:73
# a50f42e03b9f4cc79bf64dd0979f21e5
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 1b400cb2a46749079fab3666023bd645
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:77
# cc929e6c38b44254b7e5dcb4b7085627
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# a59f9d7a695f42ecbd2de42a4fc6ea04
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:81
# 9099f58a2a9449b4a5d4176992d7745e
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 5de79c61422242c78e0af2388b3b4da6
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 973c2282d20d4ad5bd24989f0c3fa3e6
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 84a2125f29a944efb26726db907cdb76
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# 2d1bac7baccd405388d0ce85d5e571c3
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 3878848965fb4770beb09ed9261e10cc
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 573bd50d45b6451aa070f9a11dec8b86
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 1c1c8d705ecc42cc83873ac5add381e1
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 084f646ed9134218b9b62c88cf542635
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# a09c27f5d7004c3fbb462405dbfc1324
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# 1131ee0410fe4ceea900b411d625b112
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 47dda160c9fe4557afeb2091043d9eea
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# e14609f591de4782b8a24fecdc3e0a1a
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# e01ac751265f4c1c82deea1e6dbbdd78
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# d2381b8080ab465ca48088d0571619e1
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# dafc0b9aeda24a6e94b4486ab003d559
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# 4ca07e3d208948bcba70190637aa0ac0
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# 1c71ea0854d546e790c2b68c2ac6c593
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 94c22bc0c38e44cea4df1d17db9400a5
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 24fe6aae058b45f4923a53aae8985481
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 5c5611a0a83c437ab38592014cf76e03
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 9acf1e284b2d4cd1b454876eb11c39b6
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# 1479d3c9d5dc4778b413dede370510d8
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# f86e922c88d34eac8116c04d66dbe1a4
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 8fbbbf2cd46f47bcac1a186224a3d7ad
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# 4d03e017085942d8a3afb5e44dd6da62
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:86
# b80d7d14552e43aaa6b0faba39d80fef
msgid "Examples"
msgstr ""

#: ../source/handlers.rst:87
# 2a595b0050654dc69f8aa8ed98ced49c
msgid "The following sections show examples of handlers."
msgstr ""

#: ../source/handlers.rst:90
# 4d6c046081654f37a9cb4d28d267d9a7
msgid "Cookbook Versions"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# 6ed0398d58704aaf88919e51d404929d
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:94
# fd43344946414fa4b7ba918e97da95e0
msgid "cookbook_versions.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# 93541f3f349a48a2a58ea5fb01b2b60e
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:98
# be1a8acb12db42b69fc1892aa89cd2dc
msgid "default.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 1445dfb49bce446cad6618a8e09374a8
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 7089de99e7da461590c19d7bd50acc68
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:102
# ecfa2d9e12454b97ad02f73303bc1170
msgid "|reporting|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting.rst:5
# 2d5b681ed39b49bfa4c2bf4e37f49fc5
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens."
msgstr ""

#: ../source/handlers.rst:105
# 4b87329890d84774bd0155e6e6c73467
msgid "The start handler used by the |reporting| add-on for |chef server oec| is always installed using the |cookbook chef_client| cookbook."
msgstr ""

#: ../source/handlers.rst:108
# 3608a599d41243dc809ee48e79eea0c0
msgid "start_handler.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting_handler.rst:5
# 9fc9a91402d14d57935bae90b7f43a19
msgid "The following code shows the start handler used by the |reporting| add-in for |chef server oec|:"
msgstr ""

#: ../source/handlers.rst:112
# a83db7ee3194481586ffb348b4077aba
msgid "``json_file`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# de1e63a2063d49468cf6554c0217b401
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# 987b0cc1b5834010bbb8cca7b332f493
# ccb5f8c7d5514c1dbfa029aed3333cf1
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# ed46b271ae22401ca4a28fef4c4732ef
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/handlers.rst:116
# 226f75ed45e74cb48a17fa6a67403796
msgid "``error_report`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 0d323190021e487e9eacc5bf3bf945b2
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../source/handlers.rst:120
# 8c7d311353784e85ab1dcfb082a5f7e3
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:5
# 122244b37cc44dcaa4092b88e4cfa1c7
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:13
# 8f41e513c6464164b4f09ba8eec2d65c
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:14
# 6f8c63f3b028404096ebc4442719757f
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:15
# baf42fd71b384972904bcf0c3302076a
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:16
# 056060112f5943968cc7a17b84802be2
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:17
# dafabaaa14d7403da57b9ddaf80b65a2
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:18
# 600b742d036c4fcb96f24e5f1d838e84
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:19
# 5e54a60a398b4925b68af2ff4294acee
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:20
# 29d9cb97d9bd4b1b95538b582dcab7e0
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:21
# e0ec7fefd5c142b0a041180c204147ee
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:22
# 14de84f7ab4041308446eb8f939095d0
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:23
# d5299f4de49c496a9fe950fed3e8ea2e
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:24
# 8343574e0f464551870cda821b939dc4
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:25
# 97697a63dbd5490c961e2957c88667ff
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:26
# 87f91ee37a41437482e8f8938f9d4d84
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:27
# 61ecb5133c6e485c8cfe5da320c2decf
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:28
# bf09815df13d4b17b62d8777f99662a1
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:29
# c3323638c25249a1a4fb9eead233d874
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:30
# 3f4752ddc7bf47dab463e20e21aaab29
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:31
# 633d9ce9959943b8b55ca5fa0c8b3850
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:32
# 82aa6dfa299e4b659d53a12b14aa5132
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:33
# 84a0c92ae75148169d366e9d095e1646
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:34
# 0a76a3dfa5494460a5c7b6a399824914
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:35
# 9a5b8bccbcef4b7aa3231f1896324524
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:36
# 46512b37097f4dd0b1226d6edb64c3a2
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:37
# 6e45d71c446942c581d5198d3871eee8
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:38
# d977bb42a05641609755fb5f9dbf33dc
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:39
# 90220a2bd28e443fae1ee55ac40a999c
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:40
# 26f4f4ea5a1f48f7982be9d2be0cb69b
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:41
# a0708c0742594b0b919423e5667ec124
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:42
# 76cb6e0a50e14e04a46413aafe6088dd
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:43
# a5be57e4424f4f8b89f57fc13649790e
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:44
# f5032292a9b2470aa82db4a144c7dfcf
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:45
# 0324d80c295e49e0aba562b5dc6e3d6c
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:46
# 1d53f49b02a74facbcbab8595bc6b9ee
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


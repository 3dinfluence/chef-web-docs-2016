# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-28 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# aa9e7fae766e4488892d714db9a4c971
msgid "About Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 52be49a13263408e9da0dd52ae3567da
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# cbf0086fda454635b1178f541c9281c2
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
#: ../../includes_handler/includes_handler_community_handlers.rst:11
# 765c7230e9564f03928ef6e7bd493d2f
# 1a6a35c00e334e91b6a7d77e42c5f9da
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
#: ../../includes_handler/includes_handler_community_handlers.rst:12
# 6359322756884951b3d323811197bc24
# cead40a64cf24d75af8e80434250e163
# ec102f6dc6fb4f9ebb3fd9f2c4102b5d
# ddfbb0723962493da9121c0f49b53954
# da08815e9645498c9fb79e904a45e529
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# fcbb18e0da5144de9cde10ae41a48177
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 753eea72ab614544b3898774b6577d7c
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 651e71eed5e34eb395bfaed132b0a9f0
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 3768e819bc7b4feab4be6a7969d0b3bb
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 0aea493d2ffe44d8a7b00206379a97c2
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 5f8041f31b6b462aba86bca01efa5d42
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:15
# 67eb7c17d7d84f3bb314b830e3ccd977
msgid "Exception/Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 7eb092e145cd4d23a89b9e2d81d8128a
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 554970810f474f0fafa1d305a8d3c98a
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 6599a71aa5f545009ebe4a810b68fe86
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# bc572272afd844e1bf29df011b29ffed
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 78af6c8f57754d0588a54e3ff0a990fb
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 85ff8219217a4ea7adb0a18c4928e987
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# faf35f83b6474807a3cc7bf61f967244
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../source/handlers.rst:19
#: ../source/handlers.rst:31
# 36b8dc9e98d446f38a6f3deb68035ab3
# 1924fa3020594bb4a79d77dce48b177f
msgid "Run from Recipes"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 7749451486314a36b4de93e09188c4f2
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# eb53c7e52e9f4af3810ed03a8098a604
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 86b3068d0b0241c1aad0088c18492034
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# cc823ed007214da99a277f9de002a981
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# ec520f6715a14b88811743f96099f207
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/handlers.rst:23
#: ../source/handlers.rst:35
# c85618239af14738a390b5d03abddec4
# 45afd3bfd57641a4952cade8870f6ded
msgid "Run from |client rb|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:5
# 688584dc80e1456abf2adc640c29586c
msgid "A simple exception or report handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:11
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:11
# 36569fe823c54416a9486dc6e0ebc113
# e03b244ff7cd496ead9fe3441b3acd46
msgid "Setting"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:13
# 9c6cf127ce8e4d71a25ffcfb3372531a
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:14
# 9af97f0ad57a4b6eb52bfca3d19f3a92
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:15
# 7d4004fee172402aa5b6b1c9a5846a3d
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:16
# 15ee4023bad841e0994309b06f537a17
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:18
# 1d01f481e4d74ed99b76d7a23974f42b
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:20
# a0c0689f93cf406180ec91a1a6b38d66
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:27
# fb986f00879a4f909948762c13246248
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 2f4d865a50ab4131baa7a18df6503eb5
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# 706ae301769644038a5586b4af53f066
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# 89063615d4c4467381ab5782f30df5bd
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 2eaf67d477b448158cd583ef6bbd7912
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 3bebf65c18a6424fb3aa264fadf8009b
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:5
# 4ecf12ca34b34ea58108728dd525572e
msgid "A start handler can be configured in the |client rb| file by adding the following setting:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:13
# c176563c59f247c095679644641d03ed
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:14
# fade8dc9d9d347158b4e30c9f9d2793d
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:16
# 314b418b38c449cab2b4fee2eeb49f7d
msgid "For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:27
# 9b080f56bc2a4c67884af761721f0c4c
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:40
# 754b7c79f5684000a3648f0eedfe6b40
msgid "Handlers and Cookbooks"
msgstr ""

#: ../source/handlers.rst:41
# 2573349e995b4a2598a0477f6671e6c9
msgid "The following cookbooks can be used to load handlers during the |chef client| run."
msgstr ""

#: ../source/handlers.rst:44
# 7499b0f3c4ca4da8829d39f6cb48d1a2
msgid "|cookbook chef_handler|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_handler.rst:5
# c35f491149fd4cc59080a499cda89200
msgid "Exception and report handlers can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:48
# 1fc7f919008649d8bd2e7948d904e664
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_client.rst:5
# 973f3366a0ea4b9ab874e6c058e2c767
msgid "Start handlers can be distributed using the |cookbook chef_client| cookbook, which will install the handler on the target node during the initial configuration of the node. This ensures that the start handler is always present on the node so that it is available to the |chef client| at the start of every run."
msgstr ""

#: ../source/handlers.rst:53
# f1a26214337943adb654be1725a5e6b0
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# b93e65f593b94aa7bd14f0fd8088dd47
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# 5319db3c72b6422f8cc3ee3bbbbbbf1c
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 6670fd4b7a3e4a3791e0c6309dcb1f7f
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# c4f47317ad9046c5b662a727ae5124be
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# bf31ac8d007a4fdba87c74d79838d700
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../source/handlers.rst:57
# f1998cee0e594bc4b62234e145598111
msgid "Syntax"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# 76f76d9cad1e46ddabd90cb2129f5460
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# afb2337d6e2341e4b4695deae1d74282
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# 566a4be677714389b82bfff2fda7f2a3
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 9265a711aad84d2d896151651825742a
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# 1a83e392a30b4f2ea4ff7ce05489235b
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# b9a9db282926482f9ca24d7396855c16
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 85629131590e47d9900cfb8f09b6d556
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# 7454081ce9e04442bf77a4ea5630e590
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:61
# ed75f3f8818f461280437f23e4ca27c0
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 6cc9686fdf2f4e518590011f830c40c5
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# b8d8b8738e474513abf35f6f4ef9ec4d
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 8823cd640ee440d3b146e513876f71ab
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# a3b2d8b9e05842918c76e875008d07a6
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:65
# f8c4a4d4e09c4566bec16b123cef86a9
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:66
# fff26f102dbb45bca612e779506c9716
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:69
# 5502db6e7a5f489fbeb21bf17bf6fb72
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# ae4551c24d2d47fea6984bf00c7bc0bb
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:73
# 308a0ed079f44236b2e7f65ed7324355
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 9b291fd65f224bca864df9752d7b81db
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:77
# 858c8dc3e73b4d1a8d4ccb3ba7e82e32
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# c6e48a803763478e9d4c0a3a101ab455
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:81
# 4aaba62f635a447c8a9d2771bc9b34fc
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 4f20a5b2e11e4f819d63b0ff160a87cb
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 139f19260f484fab9875b209e9000baa
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 44dc2db4a5fa43aab721fd60c6431dfa
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# ffb3aed8e08f4070803b7a71fe4dfc47
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 7201f33aa5974fa08a93df7bc5e01b97
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 5080ff441053479383e35c88eed77e3c
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 8589620df4c3496e8931df35b0ca03ca
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# aed77a0a7adb48c8a1c4b3a151969dea
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# 1eae50057baf437e8bdc9dacde237993
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# ccbb3c2e25be43ffb2dddaa7d5ebc8c3
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 69acbdb099774cb892c8d2439dedf298
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 72950118469a46c3812876187a055cb4
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# a756078f66124bf7803233735cedf8ce
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# bb41c4de0ebe4f9dbaeddba9a3aede89
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 335b1f34c275445aaa7a985461892758
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# ad182ecb4ff744488c4b3f82d3e065e9
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# 82b8332729594528883e2e76b66b3008
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# b75eb550e4314501af20d8902f057bd9
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 26385f089b4a48889a8b948c078b430c
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# fbe48424cf114a608755029af1ed18d4
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# ddeefc175eb14290a549600bc363c9c1
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# 23592b295bd0490eb5a882b4dae920df
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 4bcd40540ac546d889a40a207f3abad2
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 987c8ce357314929a38d82a742d72010
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# a3bcab35eb1f40a1af66c6b447db951c
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:86
# e66d5468bbca4af283dfb93172615777
msgid "Examples"
msgstr ""

#: ../source/handlers.rst:87
# 7b860da1817b4a4caecb7af76f2e3d97
msgid "The following sections show examples of handlers."
msgstr ""

#: ../source/handlers.rst:90
# 86261f4beafc450397d753e3e3cda59e
msgid "Cookbook Versions"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# d0ae5e18a9c14ff98749ef90f46be8cc
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:94
# e42d71bdbc3549a897c9f31e11257d46
msgid "cookbook_versions.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# a7753a784e4b42a4b0101a11b52bc883
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:98
# 9ab47f3b7cff4f6fb74d5847e065035e
msgid "default.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 3632b5fb9a984fa38a3589e5711fb838
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 7333c5e55fd048d8ad8b49b262fdafa0
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:102
# 8d3c6d3330c945928cf843b64fa9c940
msgid "|reporting|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting.rst:5
# a94e036d0a9c484389f4d2724e524b10
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens."
msgstr ""

#: ../source/handlers.rst:105
# 42a62c013b314afeb98332c829e3fae1
msgid "The start handler used by the |reporting| add-on for |chef server oec| is always installed using the |cookbook chef_client| cookbook."
msgstr ""

#: ../source/handlers.rst:108
# 86c9f568318a4f67b0b3299fbe3f9258
msgid "start_handler.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting_handler.rst:5
# 00274ae16c93419bbb1ed58f27639c7d
msgid "The following code shows the start handler used by the |reporting| add-in for |chef server oec|:"
msgstr ""

#: ../source/handlers.rst:112
# 48e8c5d1ff0b4225b06e864e868d565e
msgid "``json_file`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# 3987c5e536a5460d9ead69f7da4bb457
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# 364152409b004fd796f8594197981846
# 2166222c6faf4814bf2a0ec5e05f5b48
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# ad30ef53cf6944ab9865aa2ad8146019
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/handlers.rst:116
# 854cc169f00e44478036a16c6f66290d
msgid "``error_report`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# a3102e553f9d4dfd9c585084576c4f91
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../source/handlers.rst:120
# d3c8c315f27b40a3b17175902d5b5515
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:5
# a962612805cd47dda4cb7bafd92ac0ab
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:13
# 246878a61f374921981d403b9bc1f8ef
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:14
# 9a7842ddc0b8407a9beb7dfc10cac9b1
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:15
# 92bd943f1bce455aa44ed33c34b2e0b2
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:16
# 915278a930214de19cff890ce435a7a2
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:17
# c2f6aa480d4646d2abae8c04ebf9f044
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:18
# 481c8c68dbf74db69ebad4508012c476
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:19
# 9a37c28df0bb4df59b5153494876a255
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:20
# 2dbd5f2b4d324e7a8f1c0cf5c2326774
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:21
# c7bffe609a464b619f44149cc782a6fe
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:22
# 60b2021a61fb4e15afa1cc9e109fb92b
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:23
# feb103e71d094a9d851964e4b65b8c50
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:24
# ee06dca1d16f42ceb842f65228d88ace
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:25
# b2c39a846d2f496bb35297264c99b724
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:26
# cecdc50dcf2e412791bb1ecaf0a03ec2
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:27
# 1af2aa4747014c828de24ff53ee8c730
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:28
# d599b267f4994fd39c8d579dd4549808
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:29
# e70327b4b1084000a99a5e4b46d50182
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:30
# da3b4eab7b044424b6ad228c00c31897
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:31
# 0f3a14cf85384521996de0118109adff
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:32
# 3aceb1cae9bf417183df9d73b78ea235
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:33
# dc275a1f739048f488998f06368d2365
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:34
# eed13b40303844aa8d0fc08a639cff39
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:35
# c6f4d9c28fd1416ba3010b5ca4b13a31
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:36
# eeb515648c7148efa4d820828d25ecbc
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:37
# e8e672cfc7c742cc815f458883e36e49
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:38
# 44441d02aa40434f960aa158a0214031
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:39
# 26aaff4362cc4583833c98991d1acb9c
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:40
# 765f20ddebce44c08972af02dda8f110
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:41
# faaad08d12d64d20a17490747755e7b5
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:42
# 4ddc386d996347d8a4e4ca36b1c29ff9
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:43
# eb0d7b43bfd649cbb50e1175f5fa187e
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:44
# 9eab0c06cf3e4b8b98cf9b94727ff672
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:45
# bc4207755f1f435ea39df36ecdf3dcc8
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:46
# 2ef805c37477462ea8db28d06cd692ad
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-07 14:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# 1e32f2801a0a4a40b4932bc89f162b54
msgid "About Handlers"
msgstr ""

#: ../source/handlers.rst:10
# b72ecb07efc44b6f8b01641139e2197c
msgid "This topic is a draft topic, intended to replace/update docs.opscode.com/essentials_handlers.html."
msgstr ""

#: ../../includes_handler/xincludes_handler.rst:4
# 2bfe99a2b6ce45bdaff721af1e1dbea4
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| what to report should these situations occur."
msgstr ""

#: ../source/handlers.rst:15
# 69cbec11ac0945089ed0ea5d043919c5
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:4
# 284e40b09af4477cb8c5e9108f004473
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:10
#: ../../includes_handler/xincludes_handler_community_handlers.rst:11
# 947baf21cedc480dbadb9fc82708aa35
# 6d3b59f197924e82a407625ed6447893
msgid "Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:11
#: ../../includes_handler/xincludes_handler_object_run_status.rst:12
#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:12
#: ../../includes_handler/xincludes_handler_community_handlers.rst:12
# 45b12f7196f641ee99ff37489fc849e0
# c95365e4ca744d129466772efa4aa989
# d6ef269cc0ff45ada62adf93ff13865d
# 3632dc02493a4a30a651c73fd0fbc35b
msgid "Description"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:12
# 32181ecdf61c4c6f942b983516b41f98
msgid "exception"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:13
# de5054be3e2e4c85861f546ef9f33747
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:14
# 05bf3fe32bdd463496e2dc77ec2c65f2
msgid "report"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:15
# 7f035c85e6de4999b50489df049e8822
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:16
# c171a213a4b94b8ebd9d577576c0c235
msgid "start"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:17
# 3da3bc600d224b2aa84ea2fe80662f1f
msgid "A start handler is used to run events at the beginning of the |chef client| run. A ``success`` handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:19
# 42c952dbe1f3435d9b75830290331b57
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:5
# d6686df0bc8f40349b4034a0337fc90c
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` method is run for any handler. The ``run_status`` keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:11
# f4e08e0bb9524f1abc1711d549e9a1c1
msgid "Property"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:13
# 4a98a03d546047a7bda80671552aa0ba
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:14
# 22cf1a5500c44327bcab546a1b141562
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:15
# 8aa41b1c8fd348edb7401031b1ffa298
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:16
# f15b470ed8924b578104bde69c12a523
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:17
# 8ea571f4b8ae46c4a3e0a29bfc3417cf
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:18
# d928d275014449b593a83f973c6019ca
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:19
# 6c145b62a3164475920566901e505d45
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:20
# e61803e42d98451a8b50d84458c7d7bb
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:21
# 740f12f331544d88a5a033a85cbb42e4
msgid "``exception``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:22
# 3f6708e59dbe4c85875d22626908d62b
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:23
# 176cf2c8f99949c3956d1db0e9948df2
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:24
# 89737b51a5fd4d0880a0834da045ffb3
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:25
# 843cb09ec0ac4725a2311bd58c5692bd
msgid "``node``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:26
# 7080b34c03af43e0aa5b8642a40259eb
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:27
# 4e39c6c9e4eb422282b502f1cfe2a189
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:28
# 1d373a30cda84dde8811483a84d8c6e3
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:29
# 40be8541d6774f4c9208821c3eeb1503
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:30
# 08b4c920845343c68181e4feaac73359
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:31
# 79125a2fb8014ebebbabdc06187c0827
msgid "``success?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:32
# 60970325c942450398fd4697a5c8ded1
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:33
# 14ed0359d79540c6aada3b92e18b1a0a
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:34
# f4619e907c2140bba49c93245a2bce24
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:36
# 39b427c93b6b4d9ea7c03c75abcdcbc2
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:23
# e9f3ccba596845b8ab3fc0c6977c0666
msgid "Run a Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:5
# 74161f8173c6461b8eecd20c76219d93
msgid "There are two ways to trigger a handler during a |chef client| run:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:7
# e255e50387164220ad7ea75d2798ad65
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:8
# e6a0ecf7475b49d9a3d76c97174838fe
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers``, ``report_handlers``, and ``start_handlers``."
msgstr ""

#: ../source/handlers.rst:27
# f428975852274fa389b00f5675ac5870
msgid "in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
# 2c5ce42ec6e24c6da502f934eecb0ee8
# 953278aa3cc141a0a44b13f9dc42dbd7
# 3ecae01feda84b2b90b9ac8e2ec866d1
msgid "The |lwrp chef handler| is a lightweight resource that allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file. The |lwrp chef handler| ships as part of the |cookbook chef_handler| cookbook. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:14
# 705fc6effd9b426780f4b2c95c5f05c7
msgid "For example, GROWL:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:22
# 0da4ba221db34991a1b5c400a912b059
msgid "which installs the handler at the start of the chef-client run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:24
# c2a1a687237d4eb8b9607ea520b93209
msgid "And then in a recipe, activate the handler using the ``chef_handler`` lightweight resource:"
msgstr ""

#: ../source/handlers.rst:31
# 169b63a41a6447a58bf7f4c10c24476e
msgid "``chef_handler`` Cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
# 3cedfdb116314a4595626d1a9ae7cfbf
# eb05489584024578a2eacdad585b33ac
msgid "A handler can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:35
# 5c837e0fd3f44c748300ec52900f845c
msgid "``JsonFile`` Handler"
msgstr ""

#: ../source/handlers.rst:39
# 7141cfda099749718dc7fdb1455808d0
msgid "from client.rb"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:5
# 6b4c0b21713944d1bb5bbe70b0c0f424
msgid "A simple handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:11
# 2d414c66082a4a08b621a885cf1ced0a
msgid "Setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:13
# b93598f3b9cd48b9be4ff7c977fb8127
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:14
# 0438aebd77684b4190e326374fad6eda
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:15
# 42b862ae2a08449da19c15d39c79b24e
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:16
# 9ca03d36d3f5485b88574ab0c65e0c99
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:17
# 96c235e178ae4b5483ea8854338ab4f6
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:18
# 21efcef5f0b544c18affd730a1e0f821
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:20
# a38d5434ccf645f290524145854bb3ba
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:22
# b58cce005b914c19a41a04ffdb854fd6
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:43
# cc52a36f2a8440919baf6d1fa489a5a8
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:5
# 1c7cd7f1b0d242c2bc0b5a31036d9528
msgid "A custom exception and report handler can be created to support any situation. The easiest way to build a custom handler is to extend the ``chef_handler`` cookbook and then use the lightweight provider in that cookbook to build a recipe and then add that recipe to a node's run-list."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:7
# 0bb025a539e34e6492b12bd60a717e49
msgid "https://github.com/opscode/chef/blob/master/lib/chef/handler.rb"
msgstr ""

#: ../source/handlers.rst:47
# 28824e9fb40b4dc3a487bdf1bfd7e058
msgid "Syntax"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:4
# a1ae233edc0446ad8a742c3aaaae48c1
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:18
# 4eeb0e4f60c54888ab36bcb24dadde65
msgid "where:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:20
# 3a84987d7d3b46cbae918b27c10373b1
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:21
# 4dbebfc0e7b64727ad7557537dd6df83
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:22
# 17d5c031d13f4a58a3f648fde4d9a696
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:23
# 3b8e2c16eecd46728ca548d8ee29a4a8
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:24
# a8a3135440b84984a2b85a2410c600b0
msgid "``run_report_safely`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:25
# a09dc4eafd334f3ebd77748dff8b4ad5
msgid "``run_report_unsafe`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:26
# d038f873d2d149229c04e8de6cd91c3d
msgid "``data`` is xxxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:28
# b615386be5a8416ea2ff7f2aebec8be1
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:51
# fc00eeae449b46e7845c7d667326310e
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:51
# 391d94c8cf9b4f21a1ab149bf17ef886
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:5
# 9d1cfe6a8aa248b0b5311b4d2e1162e0
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:13
# a8eeb71674b7439f9729a6c80b63145e
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:15
# bb20c0e5f5ee4b2cbce736db20c12c00
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:33
# 5cec839dc6214870a70df157993cd033
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:55
# 4376c41a4407477084a75ddc9232767d
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:56
# fddf583a71e847b6868d6b12cbaf6ce4
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:59
# 4cf3a1583c2a4facacf0f7eada765c56
msgid "``data``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_data.rst:5
# a8cf48de6e614fb88cbfac61ab9541bd
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:63
# fdbcc7748d224c33a2f29617ec790beb
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_safely.rst:5
# 4292a5c81a49450b999dfc409c9859e8
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:67
# 97c487f1b8e140a9a96386161f1f0518
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_unsafe.rst:5
# 4f32b43fcad547a8bc2b0ec972dfb02c
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:71
# beb29079e8614e8fb832e3ab7a112d4f
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:5
# 7c4b4e5ca86d4e4fbdd50ca2bcc8dff5
msgid "A custom start handler is custom |ruby| code that defines the desired behavior for the handler. A custom start handler cannot be loaded (currently) into a |chef client| run using a ``chef_handler`` recipe. A custom start handler can only be loaded when it's listed in the ``start_handlers`` setting in the |client rb| file for the node on which the start handler is supposed to run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:7
# 4142d796fc014ec4aa1e13c011c72cd9
msgid "The basic syntax for a custom start handler is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:21
# 0a4bddad2b2e4af8a03fe596ec968898
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens. This is done with a custom start handler, which is uses the |cookbook chef_client| cookbook to install the start handler each node for which reporting metrics will be generated."
msgstr ""

#: ../source/handlers.rst:76
# 2471a705b36b425d90f582fbc144133c
msgid "Example: Cookbook Versions Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions.rst:5
#: ../../includes_handler/xincludes_handler_custom_example_reporting.rst:5
# c842d08f5f9c4f0c9ec24181d9c0e503
# 9df148e2a725414fbcc4a145ef8accf3
msgid "Community member Julian Dunn created a custom report handler that logs all of the cookbooks and cookbook versions that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:80
# 12de8ff6c78a4aaca10a9aefac09b0b0
msgid "cookbook_versions.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_handler.rst:5
# a4b0d3883bda4b2aa2ee69bfb9a3a477
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:84
# 5afe2659461a44b2816ef56b741e58be
msgid "default.rb (Recipe)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:5
# 241dc0f2fd5e426787ce5a323f9fd42f
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:25
# 079d67e501a7412fb9a21b5509a37da4
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:92
# 9cd0198c4a304774a113aef53a34529d
msgid "Example: Reporting Handler"
msgstr ""

#: ../source/handlers.rst:96
# d7d449f5fb3a4de68bfd2ae62220c34b
msgid "start_handler.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_handler.rst:5
# 246b9a85d5cb41a3adb834c7d611d467
msgid "The following code shows the |reporting| start handler:"
msgstr ""

#: ../source/handlers.rst:100
# fecc5070f92f4e4cb34fe71684757167
msgid "Install"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:5
# 409ee36a908447ff90331589e3fba532
msgid "To use a start handler, it must be installed on a node so that it available to the |chef client| at the very start of the run. There are two ways to do this:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:7
# df5422a39f57412c9342dc793d0b60cb
msgid "By using the |cookbook chef_client| cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:8
# 8128d80bbf314a3abc0524d4d8dd7ffa
msgid "By modifying the client.rb file, and then adding the appropriate information by using ``start_handlers`` setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:10
# 4002be8bd5444656a6990bfca067f38a
msgid "(The |reporting| add-on always uses the |cookbook chef_client| to install the start handler.)"
msgstr ""

#: ../source/handlers.rst:104
# 6266389d53684b579dd1b7044e3b5bce
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_cookbook.rst:5
# 48a30b32f95d4ce6ba18b4bc3426a4a1
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/handlers.rst:108
# 2341650864044e719b4238d77b23c07d
msgid "|client rb|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:5
# 399535e575d24136b1fd238e8ef0340a
msgid "The configuration of a start handler can be configured in the |client rb| file. For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:16
# 79f6a17985894fcda0258bd9c4c72991
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:112
# 50cb96bfa9b142aa8d8ea3a78a456bc7
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:5
# c7cc82b180394e1494c28a7658f6e78c
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:13
# aa5d8f9eabbe470985a19e8efd056105
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:14
# 15f0448bf66649598b0774e21f857bb1
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:15
# 768c142a74dc4f65be7b7d763d22ee42
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:16
# 20ce94b1b1004c34aa8870ba5a25f8e1
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:17
# 161efd9699f14296920038f442133633
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:18
# e73b24b56a2f416d8ff07a2fea9b9434
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:19
# 7e3e8ee17e964735b17882330ce98bed
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:20
# 18eac18d757042349d46d4d4352313c8
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:21
# de80ef48815b48a28a684a7ecf79f5bc
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:22
# 8aa833bc912e412e925a293edf467c1f
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:23
# c5fbde3262c3416dacb63197668d28a4
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:24
# f42fd11828404efea64bb9ce336826cf
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:25
# 57d1111d81694cb0a691d4f2dd281765
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:26
# 024f84e3cf9f4f7395736ea375cb7764
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:27
# db15697297b14165924fe05672684cf0
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:28
# d210150604614a0e9f7885ac64646da8
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:29
# b2e04a31beb84bbb9144e139413af0c7
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:30
# 52728ea3d0f84a389b4831da56946ce6
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:31
# 7cb251cf6fc445d3aab01deafc0e99a7
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:32
# 820101c1ff4c4beeb44eadda45e0bef2
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:33
# 351d7772e9bb481f8a0a41dcb41d2e9d
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:34
# a2c79130729448e390f3583435175558
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:35
# b45f9b77860443cea1721622b77df1f8
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:36
# 998efc900902483d9d695183052068e3
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:37
# 10f4fe516200452facb5974da9f90ecb
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:38
# fa797ab206d04552be197e3cd2ebea88
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:39
# c5c08494fbe14cb8951f2525e68094e2
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:40
# d0d1aa8aa34b426e96494ee72bb114b5
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:41
# 0d38524c0e6e4cff85cddbe7585390ec
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:42
# e5ae1a2f39f4482dabe84ca28ab740e1
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:43
# 277cc9f90d2e4565b9cc4b509cc50790
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:44
# 23f8a5b3b30a42f9ad2657fc88eb3f33
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:45
# fa732cc52a844ea8a0a456b27b62ce64
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:46
# 4e4df4e20d1243c2ae6e7ea5844b6307
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


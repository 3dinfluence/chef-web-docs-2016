# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-31 13:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# 27d1d7d7865243de95f8da9a66ee27e4
msgid "About Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 2110e89e56294b30b0a73f35822d5673
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| how to handle these situations, should they occur."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 8c09b69aa1bd4c898007ec8f21b4ae51
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
#: ../../includes_handler/includes_handler_community_handlers.rst:11
# 221740b867844f709d4c3ef6752f59df
# 45affcc253ff4736b1b10784ab477e19
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:12
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
#: ../../includes_handler/includes_handler_community_handlers.rst:12
# 6e3b50e8d46d41a985583d6258ebd30d
# a0dd1428f8304ddfb3e85b80a87ff0da
# 963a30c7cd9148f093f4d5b009504f18
# 71dc6c94f1ba416291fdb30f3993c592
# 0a34cf99d3d5485b85ceb42df67c0143
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 5220c1d66baf4c17b7beb35d962ede45
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# ac289003c20d4be2b9e1a83eec14bad2
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 0b303ce07e364b2c80409d445bd5ebdc
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 2494a9fb1f3e46a2951494d592f1dd53
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 2f847ffa501449348cbcc78d30bdc321
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# d41680b9e98842b0bfc6ea702f4e3d9f
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:15
# eecbb807fe7d4d60889dc01f0b8d3844
msgid "Exception/Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 71676703a8ee4e62bdb0bb12bd76d220
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 9d9cc2b13d0f4b2cbde9ff2ba67cd6f7
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# dfbc3ed74c204412aa37759e65c3236f
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# 58940ed95f2d48028b59e23f4e9a873f
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 20c473dca1664429b69c98c6a5a35395
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 3e9adce4e9f3434a94c48762ca292211
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# aac44dd8a73d4c5baddfc71f05b90ae2
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../source/handlers.rst:19
#: ../source/handlers.rst:31
# 1a431aa7cbc049028ed687259de038bf
# 85fd20821ca2417b890bb2d9eeff5f9b
msgid "Run from Recipes"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 3aa5d32f475f4303ab51bcd589c3f525
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 025ab3daed8c4e89b662d6500464f4e7
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# b6ed0fce2baf4a7eaaa95e79a1eae208
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# 52b02039232643c2af69ea897c3f8d80
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# 220336540b0f4264829b4c11c67ac4e0
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/handlers.rst:23
#: ../source/handlers.rst:35
# 454de5cead684144914765db66cf77f0
# 1fb66fe3d352442b876a28756f7c3125
msgid "Run from |client rb|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:5
# 62022120da5c4c7f8098c377ffaf2961
msgid "A simple exception or report handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:11
#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:11
# 6dee3fbd4afe4f6190bddc0779b9b38e
# 6e7d351966e34519a784fe436bb5d65e
msgid "Setting"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:13
# 90eabfbd800e4ab2bdf44d3c90550f4d
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:14
# ce4ff7bb87d944f6a99c081eb0ccc36c
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:15
# 52bdd4eafca1455eafe98f1b118c9f05
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:16
# 172e0537f47844a6b9d3c79abc6573f6
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:18
# 4783ad28e8334227825ce5a12936d01e
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_client_rb.rst:20
# c291a296638a450fba66f3e05230aed6
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:27
# 635dae2e2762406191c33327d162b42f
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 8e0e7280d13d44349b9f02d216e48255
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# ed322cc5a97342819e21f99d03877143
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# 15ff6a7f3ee54299bf519837ffa05fd7
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 744b7ec551944c52ba57cfb57591cb2a
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 1917e9175d614bbcaef299c8e42417a3
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:5
# 9fab4249c6c942eaa2fc4bba97299d7c
msgid "A start handler can be configured in the |client rb| file by adding the following setting:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:13
# 2bcbe6aedb4d4f3aa7f56c0d4a9bf220
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:14
# 050df4602b17462ea2aa4f3c224e3894
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:16
# 4a463173e9404a818147548f7dd691b1
msgid "For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_client_rb.rst:27
# fcce4ae661a945ae9e118eb23905572f
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:40
# 5264fc438e0947b099bc464f7aa1d318
msgid "Handlers and Cookbooks"
msgstr ""

#: ../source/handlers.rst:41
# 50fe7235ecaa425aad3b23add5540108
msgid "The following cookbooks can be used to load handlers during the |chef client| run."
msgstr ""

#: ../source/handlers.rst:44
# aa9ae0ac0e14458393c74a4b13c89390
msgid "|cookbook chef_handler|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_handler.rst:5
# bc7b91692301401297bf171b8744234e
msgid "Exception and report handlers can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:48
# f533b10849374fee8d0b20c9ea322757
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/includes_handler_cookbook_chef_client.rst:5
# f99f016fc42243a48f441798daac7d2d
msgid "Start handlers can be distributed using the |cookbook chef_client| cookbook, which will install the handler on the target node during the initial configuration of the node. This ensures that the start handler is always present on the node so that it is available to the |chef client| at the start of every run."
msgstr ""

#: ../source/handlers.rst:53
# 44dcdf76d3ba4b6d836435bdfb414060
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# b067a3084bec4a26971b298bb27ab303
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# 9e59f23eadae4330b79a4f52349a2e2a
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 3c9be1b796244d94acc9904c429a9a8b
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 354fbc1542624b82bc63c6d60fe065e3
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# f9ab3a34f97c471098b8bd3998bd5a0e
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../source/handlers.rst:57
# d4950180af664ee786f6c7e255ddaa32
msgid "Syntax"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# a8005f743e6d48c19ca80711da5a64f5
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# 7a880d53f49643648ae4cf7113067459
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# 61ee397360534fcaad28f5217332b04f
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 415a0b048c294130a26ebcf7690256e5
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# bcd51b5d6cdb445e8483bbfc78bcb74d
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 441cd47a3242455e9ca13da8830d5022
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 7bf1793b15ba46fda064666735371b4e
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# b4356c422dfd43d497d7a9d4e26f46be
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:61
# 4d0d0f1326554ddbae62860b075a46b8
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 589e4d8ea66846048fa52c08a9862d77
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# b7fbc34589fe49f4b5d4e4b92fffa4cb
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 44208299a1de473ea8388bd3eda8403a
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# b939197ecffe4df4898298a7a71781da
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:65
# ba74f1269eff4f0ba1c8725f9264b7cb
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:66
# c0a5d7cbdb92472284856cc152218bd2
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:69
# 1f0f164fbc184f1cbf20d8b0adc08a88
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# c0d73cb359db411093df6d15a415c625
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:73
# 22e4052146fc454b9fd0b7a48e28f6fe
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 5ed5cfb2d6b341848c51bf41daab017d
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:77
# 529e5c7160a64fb0ba6ab621e9f6d8d9
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 067cc924c8cf46e783416a9f754c01d9
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:81
# 6b208b0214294a44be748032ca431d71
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 6d894d00c2b94f95be067b0c1e5fe9e3
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 9a7465d7543344e19790414c95bbf93a
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 575155e4f7874d2580010ec0b3b83246
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# 318f188c65fa4bbb81f0dd9e96e60c3e
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 50acdf2dc3ff4de5ab55c1e6d44426da
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# d3b1b82bb0864de4a453edaa6f6b75a4
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 2b7cee5311f7424b81c891b90f67e1c9
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 8b13d0ae040e4228ae07651fe05f153d
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# 95e3db70d72147d7a3851187286f1547
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# ca113bd8a63d41038e9836dcd361a183
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# b8e2002013514b50982cbf4742176c8b
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 3d5af9fd1a804eb6877cb56c1cddb8d0
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 56f2f9cc5e3f4b598d455e1d2022ea9c
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# ebdf1076daa745ff9235a09d8039e061
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# e7d5f392db904f7d800f63ee9ee39841
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# c9da583c2e1a4cc3824f1a2c84f6fa65
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# 6b7175d85a474f908476de8a847f34f3
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 329c2dea02c846a5bb1dd67aa9dd8363
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 897caf462013458e9afa1c2e9aba099c
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 7f1cfc60b00740fcbf85bad1f53f57ea
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 33aea83ca4fe4eeeb28a8aa921647d2c
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# d28dc259ded146318f3960b7c0867105
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 3c0f1719e06f44ac9aaf61f6e74c8359
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 28a0fa195b2f4a05bf4678f2c262ef3a
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# e559cdc2b48a4b24ab22f260cfb30b8c
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:86
# 59a64035ce094574ad0198db6b7b0c83
msgid "Examples"
msgstr ""

#: ../source/handlers.rst:87
# 33397440447940f79134eee244ce284a
msgid "The following sections show examples of handlers."
msgstr ""

#: ../source/handlers.rst:90
# 2ea6235261f6402288d4e22c5de48ede
msgid "Cookbook Versions"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# f5db1433563b4c23a4ce71002a970502
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:94
# f38ead2e87c34a799fa15de9cfa18711
msgid "cookbook_versions.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# 7704424c0e1f4f36a41a4d4664445797
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:98
# a35fb833afb740bbab4e3b0e777572a4
msgid "default.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# c9ac86a75868471eae59158f2f8e5f0f
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# e0fae8cdc34d4bcab51fc06af506a6c9
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:102
# 7052a29498014e9d882a7bbb10fe87e7
msgid "|reporting|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting.rst:5
# 698b697e46be42afbefbe22696d07f22
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens."
msgstr ""

#: ../source/handlers.rst:105
# 8f76360e0cc94460b723897b13bf42b8
msgid "The start handler used by the |reporting| add-on for |chef server oec| is always installed using the |cookbook chef_client| cookbook."
msgstr ""

#: ../source/handlers.rst:108
# 849bcce65bd242c7b03d35551686a266
msgid "start_handler.rb"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_reporting_handler.rst:5
# 5b34f0c4ac0a4b539da8bec95371aecb
msgid "The following code shows the start handler used by the |reporting| add-in for |chef server oec|:"
msgstr ""

#: ../source/handlers.rst:112
# 07a7ff3a5cf04c37a155bbfed7bcda26
msgid "``json_file`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# ff856c862c9f4bdc9613d633a1488494
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# d79df1fb0e8c4383a36cd65a589de3bb
# cb18b51347a84fc385841fba8f90360e
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# 86d13f2b3b9f467f9dae3fe885f625e4
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/handlers.rst:116
# 39d749542f2d4363ba991783672de41f
msgid "``error_report`` Handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 632cad0b16a64435a449eb2f8a112d3a
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../source/handlers.rst:120
# afd6bae4dad34ba29884107e782ae757
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:5
# 61ca942f032c4b86bd77a8bb098d494b
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:13
# 3e989a1f2556411aa084f1bb96f14b3c
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:14
# 425482cae9a34daeb4412379e7690042
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:15
# 97b9ba5c9efd4d5592c4da5dc6e61e1a
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:16
# 84f17d7abaef4565b47580a3a2b5d891
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:17
# 32b8b5ecd8f04454bfeaa943be65fcab
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:18
# c584477804fe44f6956903552d6fde5a
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:19
# 06c8d799f3df44d08acd31c16fcc94c3
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:20
# f7630e8d7d4247d5b0763a4347a98526
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:21
# d8e83c100ce945ffaa3e3e7e53ffba9d
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:22
# 9947d34bcef44b818b1c069932dc1839
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:23
# 05574839fc7e427ab0bdb3774d7b4188
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:24
# e75213b880e244058ca2008ef0b81c86
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:25
# 67d25086561c4170a54288630502a908
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:26
# 0aa609a950b64990809d47f9914b8d33
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:27
# cc4d21dfe5464ea19b453a35bf45d446
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:28
# 2ac25b4902294031ba9a4f768bab2886
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:29
# 27ce41515d1b4d37848ecc4141ddecbd
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:30
# c1131dc4cf664dbb973d74dbf7c4d5ea
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:31
# be5ba5e293a54945aa901954b1e00243
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:32
# 76e4c9eeb38641c482ef33834c4d4745
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:33
# 1927b58679e84b39b5861542bcb70f55
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:34
# 24776bb8b12c49f2b156e457fd41903c
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:35
# f4b4f9f31b84423298f951bf705628dc
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:36
# de52b84fafea4e7381d2d4563279d6e2
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:37
# 7f4a202ed5ea4d85a5f6a38f1e80c04b
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:38
# 8dbb6a0e5f074b5986c5ef2b90accd3d
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:39
# afe5acc9f216433f959b3a386a5f698e
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:40
# 579e25d30559480d8a16792be201c7d2
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:41
# 67cef904b5a04f0c94076cf6d7761607
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:42
# fc186bc6c2514eed955c06718f75ffee
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:43
# 7ecd59cd40e9482e83835350f4baba47
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:44
# 4c01b3d8b7f84cbd9b9e9287ae8972f4
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:45
# d2f8ca4b6ce848f6a7916d888bb65efb
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/includes_handler_community_handlers.rst:46
# 417503ca67234e70943f84af5443c3d4
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


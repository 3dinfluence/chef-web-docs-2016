# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-02 12:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:33
# 2b0ba139039346b48a3b61d2f131b2da
msgid "About Handlers"
msgstr ""

#: ../source/handlers.rst:35
# 2fd6c2a543ab4a2299685d0b10fb1a33
msgid "This topic is a draft topic, intended to replace/update docs.opscode.com/essentials_handlers.html."
msgstr ""

#: ../../includes_handler/xincludes_handler.rst:4
# 7a21154f19334594970fc48fc3277b19
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| what to report should these situations occur."
msgstr ""

#: ../source/handlers.rst:40
# 01c9ea4caacf405eb11a5fe097701e48
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:4
# 90f65db9082442c096743c6a6eb48ee6
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:10
#: ../../includes_handler/xincludes_handler_community_handlers.rst:11
# 6153659179384f22b3ff76d8c7a58e00
# 645deda1ea8e4dc493ac325f68198319
msgid "Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:11
#: ../../includes_handler/xincludes_handler_object_run_status.rst:12
#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:12
#: ../../includes_handler/xincludes_handler_community_handlers.rst:12
# e606736b1e16427d981877651218653a
# ec729083265142bca680b7c7f52d215c
# a7a6613b7e7b49de9c17d70cc7f0befa
# d20c04d1d29a41a987f99c1f3a866394
msgid "Description"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:12
# 1030c0d2a12d4b37a5eeb598d02baf0b
msgid "exception"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:13
# 2f5afaea47e94f9f951dd14ce8aeeb13
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:14
# 1bcf773fd0ff4fe8bb1326fda83fc116
msgid "report"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:15
# 607423f4351443d7ac9519bf03b76e9f
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:16
# 8198d95b8a9f4d01be008541d1c2f522
msgid "start"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:17
# fa73a7795ae4482d87117bc8959ce0cd
msgid "A start handler is used to run events at the beginning of the |chef client| run. A ``success`` handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:44
# 4ee2d1f2fae64f79b07b4f3ba761ec18
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:5
# 2a1c3a96df2943f5aa5ff31686c0553e
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` method is run for any handler. The ``run_status`` keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:11
# 303b539fd3514abf8fadeae120a4d3f9
msgid "Property"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:13
# a7c909fec2554101a3916efc680e3bc1
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:14
# 41092e9eebdb48dda6488b0be0dbf706
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:15
# 47f67307998d42f4a3c43c672c0715d7
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:16
# 58002e9b5ac745ad8715d0179cac9a0a
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:17
# 54c2ed5eabb74aacb4c3ddabdc72695a
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:18
# 756b5e00850c4f5783b0609e6fd72e49
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:19
# c6f3a540dba24d1294d275ad0b2d68c5
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:20
# a587178f5d914d0588be6966a3de3376
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:21
# dfddd5fa70214238917ee25c471990ed
msgid "``exception``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:22
# 8870c251009d42f78e778bce67b118a1
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:23
# cd1f692da75b406c958543939575809c
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:24
# 7d73ede2688b4abb98b62c3dd09f2e6f
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:25
# ad1c61f0911e48eeaef26c093c10e877
msgid "``node``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:26
# b7146fdd2c8d4df88de74309e41156e3
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:27
# f5fba24b8dff48bb87169027282ac152
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:28
# c8ea31000c1b4fada2ef00661a8532a5
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:29
# 88945a8d2eea463f880179302b77e201
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:30
# e2f0d3e367aa45d9828407445c71d206
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:31
# 99a217cebe1a424ea1bc950b67a9cfeb
msgid "``success?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:32
# 498f38d9fb3244b5b7d81967b2b75fea
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:33
# 1e1027b1d52e498892544103b72a7771
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:34
# 571e5fcdc22445028e662d2f8f94a592
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:36
# 8de8ff9f701a4acdbea95ab503b28850
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:48
# e859b7d56fba4cf48ae7d398d24c60df
msgid "Run a Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:5
# 2e1793dba95741a99e5c93c02fe1f600
msgid "There are two ways to trigger a handler during a |chef client| run:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:7
# 6b3057ae8d4244d5882f381ceb3f7929
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:8
# d186a19db9ba455a8e8a78d0d5c2e8c3
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers``, ``report_handlers``, and ``start_handlers``."
msgstr ""

#: ../source/handlers.rst:52
# 4f8d53336fdf422c9d74dabee8145af7
msgid "in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
# f65538e59deb42098b7c51c674e5a51c
# 3ee7d2a2e55f4d1fb2a9787c7897624e
# 45eb42257b234daa9d96043757b9af0c
msgid "The |lwrp chef handler| is a lightweight resource that allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file. The |lwrp chef handler| ships as part of the |cookbook chef_handler| cookbook. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:14
# 8d98036bad8b48a1881d916fa8997c95
msgid "For example, GROWL:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:22
# 71354aa6e78c48688207ea45a0225698
msgid "which installs the handler at the start of the chef-client run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:24
# b783c99086354b09917100cf98c87353
msgid "And then in a recipe, activate the handler using the ``chef_handler`` lightweight resource:"
msgstr ""

#: ../source/handlers.rst:56
# 4702f31cfa5e4bb088b7c5b6dcc860e7
msgid "``chef_handler`` Cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
# 360a5e7a512d4c6786049abb69f1baae
# 3884529b3d814c24bb3d674476635642
msgid "A handler can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |opscode| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:60
# 6976eb758824482da83c4cd79740bf3e
msgid "``JsonFile`` Handler"
msgstr ""

#: ../source/handlers.rst:64
# 7c4ec8c18aef4ce8866528cd904fdabf
msgid "from client.rb"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:5
# 902db9c23910498ea0c13e88d1903260
msgid "A simple handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:11
# f96eee7e10f74b38a54ac6fecf64af52
msgid "Setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:13
# b1c287fc049848209cdabed35f01f69c
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:14
# d4fc5aef537c440bbc1c0a1c03a7de80
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:15
# ba31811ac48843eba67eac8df8e1984f
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:16
# 9ae02f03dad34e7385fe19662535be01
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:17
# 7d99adb11e574495a70c3f2216fe478c
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:18
# 9f348d86772e4b1b901a76f5d55379d8
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:20
# 34324a365c7d41db85d30ac541f57fd7
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:22
# 21e841567baf4d6899114ba49562e8e2
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:68
# 520939ca78b845e3a72b38e739a7a05c
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:5
# 4e515618e84a4db5942fa89bfd0c431d
msgid "A custom exception and report handler can be created to support any situation. The easiest way to build a custom handler is to extend the ``chef_handler`` cookbook and then use the lightweight provider in that cookbook to build a recipe and then add that recipe to a node's run-list."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:7
# da2e3c1a44744ef1a26a41f74c06feb3
msgid "https://github.com/opscode/chef/blob/master/lib/chef/handler.rb"
msgstr ""

#: ../source/handlers.rst:72
# a1cfc3c0adde48bfbdfb7fdcc1c6c008
msgid "Syntax"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:4
# 602b74af88d04046b43cec59f93ad666
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:18
# 55924e101adc4492b6eb442ba05d1e99
msgid "where:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:20
# 0e5fa1e59ceb4344ad203f2e05cea2e5
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:21
# 13355b4ec53a4acea073e6a7cc2c61a6
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:22
# 50d805efbd994f5f97c50fee24279576
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:23
# 64e1d308e90446b680b22256541f732b
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:24
# 08a2fd80db3844b28c2ee3f122fbc843
msgid "``run_report_safely`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:25
# 24eb98d001964f16a9d6dd2a1ac6a433
msgid "``run_report_unsafe`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:26
# edad1e2f549143ffa1c0e60f0403e43c
msgid "``data`` is xxxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:28
# 1c48174b39514a998949fc2bbdde2b13
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:51
# 72aa4696d0054aac824b2beb05989e03
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:76
# 8b7494d518d84efa83ebc963157e9691
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:5
# 64949c26dc6a49e0b7d653c4d4de506c
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:13
# c729893cc691409bb9883df60ac84cc6
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:15
# e7e5458eb19c432fa660416e93940395
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:33
# 6ea0b149ff5c4a3e98b9ff2945db93d9
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:80
# b551d013b25e45a7a8d80017b0f4dd12
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:81
# ac5b4a1ca18e4dd49e56421919b26b60
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:84
# 67bc34ee23f14947bb2cb4d202c99e02
msgid "``data``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_data.rst:5
# 9abc332fd673441c91ee29c6aa6caca0
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:88
# b678ad817c074220bb1253f1f5e296d1
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_safely.rst:5
# 75a43d2f799b4ec0bba5f287b49f4891
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:92
# bb3fc44b95eb41a3ac12e8b9ed2b1097
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_unsafe.rst:5
# 719548ab4ef443d1b43600e83f72fc9f
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:96
# 45098481ad42402dab5be34d39fb23ff
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:5
# 917bf58a6b8143ffb5b211fd5696c357
msgid "A custom start handler is custom |ruby| code that defines the desired behavior for the handler. A custom start handler cannot be loaded (currently) into a |chef client| run using a ``chef_handler`` recipe. A custom start handler can only be loaded when it's listed in the ``start_handlers`` setting in the |client rb| file for the node on which the start handler is supposed to run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:7
# fef87280fbd6457bbdefd83c2d2575c3
msgid "The basic syntax for a custom start handler is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:21
# cf58a920798245d7b5239a215b9c229b
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |opscode| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens. This is done with a custom start handler, which is uses the |cookbook chef_client| cookbook to install the start handler each node for which reporting metrics will be generated."
msgstr ""

#: ../source/handlers.rst:101
# b24248cfbeb045519a4f69d2c7f5855d
msgid "Example: Cookbook Versions Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions.rst:5
#: ../../includes_handler/xincludes_handler_custom_example_reporting.rst:5
# 8f8626b28b32423fb74af654995b8d54
# 4aac06a5810442ef8353b3f4587dc80d
msgid "Community member Julian Dunn created a custom report handler that logs all of the cookbooks and cookbook versions that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:105
# 3ec92cfc29d24d648e9fee9cff1bf0ff
msgid "cookbook_versions.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_handler.rst:5
# ab87f0b03cfc4331a52f5f18a887fc25
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:109
# 9ed87bd7806a40df993274f75181a178
msgid "default.rb (Recipe)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:5
# ec1cf7bdb2164c488400e148095e9398
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:25
# b4e26abda54d44258c1bffb75b02f2f0
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:117
# ada116b18a8f43308a776a132177e8e8
msgid "Example: Reporting Handler"
msgstr ""

#: ../source/handlers.rst:121
# 995dcc035fe74b5bb89adb91d908434e
msgid "start_handler.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_handler.rst:5
# 286d8bbdd2b24b3ea14df5fb30ca96af
msgid "The following code shows the |reporting| start handler:"
msgstr ""

#: ../source/handlers.rst:125
# 6e37e65169df414281df18981e6f9886
msgid "Install"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:5
# 0a6e0a2187e1446684bfe19c44b5a225
msgid "To use a start handler, it must be installed on a node so that it available to the |chef client| at the very start of the run. There are two ways to do this:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:7
# 79419d80032f4774a27997f69b999919
msgid "By using the |cookbook chef_client| cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:8
# 1676fcaa6a2741199333846ceca4ee9c
msgid "By modifying the client.rb file, and then adding the appropriate information by using ``start_handlers`` setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:10
# 05f9a77ee9714082b32fe046ce598cdf
msgid "(The |reporting| add-on always uses the |cookbook chef_client| to install the start handler.)"
msgstr ""

#: ../source/handlers.rst:129
# 7abc85d974d34667b233e8c065d329cb
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_cookbook.rst:5
# c62cf5065051406182c4c0bff056ed07
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/handlers.rst:133
# eab5db34baf74cb285ba4c9329c2d8a3
msgid "|client rb|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:5
# c79933a2f8e44534834686d4435cf002
msgid "The configuration of a start handler can be configured in the |client rb| file. For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:16
# c885a884c81f463f9692afe35fa58d47
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:137
# ff969ffe4ae34b449f7acd7c1f3d27f2
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:5
# e8d49c6bae374429a4e9b474e2a1321d
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:13
# a83eba3bb4a246e0964c1683d1828129
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:14
# c03cfc07534841a581d163e49709dc9f
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:15
# 9b02eb263c2f4cfebc50c4cb8aaeb918
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:16
# d40abde560cc4cb99e1c42b1a77b63c4
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:17
# abfaf5cf0341422f9fbc0f03ad927b4a
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:18
# ab79d100c0b440f09c1925c046725164
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:19
# 0f91c557156e40949c8d23fec9f23442
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:20
# 9daecc67ce1a4788b5e9a4dd4d02a13d
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:21
# a0dde0494d344c3293e3aa395ad6a3e3
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:22
# 232d40a575f34045ab5e518fc8a9f875
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:23
# c7942c6bc938419e96b2444ad6cdcd4b
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:24
# 68e22f628d434096a4a3f14285d9179e
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:25
# cb2b218f94c44be4afc5cb7ad5955fa3
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:26
# 82f43b1cdd304dd5836eb315c896c95d
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:27
# fc4b24f699234ab598efc519ba2942cb
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:28
# d0a3eddc63f347b199d835e81230067f
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:29
# 93f0447af985433baf0420a457acc542
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:30
# 3530683d95ae4ac9ae2822d49bd5fe53
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:31
# 514a35aa2c4a40d9883fce29964b1bfd
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:32
# 45a5edfb80b248008d13ba5e96fae7e1
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:33
# 7e7dd3e1c1c0447696d792eb1402d81b
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:34
# 7b44a6430674412d9bd120e60fb8d729
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:35
# a3b58ac5ee61472e81812eb861a13ac4
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:36
# 007e053d87e9489eb5e51df3627b35b8
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:37
# c1ee1c1a01a544a99ca377b1f7b3bf9f
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:38
# 470c937f257744838d410947ea880fb1
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:39
# 55b59c11ca2a4d3ca554cbdbe5f93b94
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:40
# 91f0a3e83a7d4776a06daed0c8017d74
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:41
# a08558ddb7724c6e9534051399ade74a
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:42
# 021c2e0d42ec4c90a0a5c117510b2db8
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:43
# f0e37e862a7d4641b401b8d4bdc6aad4
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:44
# 4f72c83a9c234f59b2e3be50310d4727
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:45
# 3abc7a01beae44bea0fb85a1d3745ee0
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:46
# 759e5dbf752d4924a5a8127a5eda426b
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 22:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/handlers.rst:8
# 34a8b04583114ecda47c0bdacdc17834
msgid "About Handlers"
msgstr ""

#: ../source/handlers.rst:10
# d53242a8afed42828eb19a8a441fe872
msgid "This topic is a draft topic, intended to replace/update docs.opscode.com/essentials_handlers.html."
msgstr ""

#: ../../includes_handler/xincludes_handler.rst:4
# f43eca70cebb422ca037e2603883030f
msgid "A handler is used to identify situations that may arise during a |chef client| run, and to then instruct the |chef client| what to report should these situations occur."
msgstr ""

#: ../source/handlers.rst:15
# 6fa5b96c903d4d39a45e047f3e5e1bdf
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:4
# d3d08caf81554c449a6efffd8149b793
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:10
#: ../../includes_handler/xincludes_handler_community_handlers.rst:11
# 7cdf0174912841e196d4f9f6542557fe
# ab8e83fec69f4edd823db36596b9c735
msgid "Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:11
#: ../../includes_handler/xincludes_handler_object_run_status.rst:12
#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:12
#: ../../includes_handler/xincludes_handler_community_handlers.rst:12
# b1eca0407be74ea1b5234740e8f53168
# 7370af85fd084f1cae0b731f91eb80ea
# e08d013178a14d64b3473c711363d448
# 1a93af72b31c41c691e0344ae43903f9
msgid "Description"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:12
# d82b09fbcd764699a7b8c117a6834eb1
msgid "exception"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:13
# 9f6e07fa435a403885c377d7e88511d9
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:14
# a9c5ecf587b74d0d8db360c0364e09a4
msgid "report"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:15
# 81e1607f8ddd4f9aaba87a9f317d531b
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:16
# d8c5c9e20a704e37a4ea70bd1b31ecf1
msgid "start"
msgstr ""

#: ../../includes_handler/xincludes_handler_types.rst:17
# ecf1ce794a5c45b5a95f10d789ce968f
msgid "A start handler is used to run events at the beginning of the |chef client| run. A ``success`` handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/handlers.rst:19
# b70558ebacef4d2e8640e42607cfd710
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:5
# 6e5ec5d628bf404a87b5be8537391b41
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` method is run for any handler. The ``run_status`` keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:11
# 21f8c862f6e34ac9abcb60e05f91631b
msgid "Property"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:13
# 63aec7109a414809af9fb51dc7462300
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:14
# 30768b2ec8624d94b0dbd9a2ec70f325
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:15
# e85a1cd86f1549cebd003c3f9acb0d34
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:16
# b34bf4b3cdbd466f97bc9633ca720c8b
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:17
# 5b65122206f24fa1b5ee05a3f902f541
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:18
# b04e999ed33c4d26829edcdd7468f5a4
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:19
# bc6f21c85a4f4cc0853265dca85d322e
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:20
# 9e1a0d5e77754f9fb62cf8291244d4bb
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:21
# 40f3b09f89b5476a9d2795af9aaf1c0d
msgid "``exception``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:22
# a38f3ab6cc22439891e062868f21929b
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:23
# 3f14b6736fcc4ac5bc004ade52ff0a82
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:24
# 6e605b0462634bfe9a001cd93ad0ef28
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:25
# 86e59f55a61a479f84e25dc1a3429594
msgid "``node``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:26
# 18c2dac18a8e447298da725dfd7b457a
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:27
# 9871e45b05b2409d8c3b0d8f6c7d51b5
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:28
# 3665d550ed604e77a4a0b6e62ae833b7
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:29
# 18f1c1d68cb64bc88209764a0fedc2fb
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:30
# 4ad45c55b2b64990b4531be75bb33b2e
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:31
# 0ac90a410df0427cb90b58206ddceb2c
msgid "``success?``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:32
# 37d185a3d4e94dd095ed5ccbf6a22459
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:33
# 06526c15d1ff4317917e6388aefacf93
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:34
# a5753f40ac6c485587e53df88ea1537d
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/xincludes_handler_object_run_status.rst:36
# d9b8d99df8a54c8fac2c8ca29332af83
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/handlers.rst:23
# db21235c4bb64083bab50f53b3f3ec32
msgid "Run a Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:5
# 9bf726e8fec04aeb932f96f29fbcbd27
msgid "There are two ways to trigger a handler during a |chef client| run:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:7
# 645cc2985de946a39770be61d3260392
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node"
msgstr ""

#: ../../includes_handler/xincludes_handler_run.rst:8
# a6b37e19061a47e291d87a6333625fd5
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers``, ``report_handlers``, and ``start_handlers``."
msgstr ""

#: ../source/handlers.rst:27
# adef8a4d110e4791a79f44ef83437be4
msgid "in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:7
# 6e78939a1e0d4e288dfd4ad406ead6e0
# 4857bcf4e98c4e67ab01a167fdc98da2
# 917c6348fe7449828cca62b07cd5615d
msgid "The |lwrp chef handler| is a lightweight resource that allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file. The |lwrp chef handler| ships as part of the |cookbook chef_handler| cookbook. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:14
# d239ea64d17a4f5d8c74300aa19fac00
msgid "For example, GROWL:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:22
# 54069d13eca44f62a8ff630077a7a1fd
msgid "which installs the handler at the start of the chef-client run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_recipe.rst:24
# 1513bdc6522e4938a10d21347ac484cf
msgid "And then in a recipe, activate the handler using the ``chef_handler`` lightweight resource:"
msgstr ""

#: ../source/handlers.rst:31
# 6e35f288e39a454fab2824c82114606c
msgid "``chef_handler`` Cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
#: ../../includes_handler/xincludes_handler_lwrp_chef_handler.rst:5
# 77692ff826c543d78a31f45c999a1723
# 813df9c590a9457484343a93993a09be
msgid "A handler can be distributed using the |cookbook chef_handler| cookbook. This cookbook is authored and maintained by |company_name| and exposes an |lwrp| that can be used to enable custom handlers from within recipes and to include product-specific handlers from cookbooks. The |cookbook chef_handler| cookbook can be accessed here: https://github.com/opscode-cookbooks/chef_handler. See the ``README.md`` for additional information."
msgstr ""

#: ../source/handlers.rst:35
# 89fe9e57a6204a1cbbbd9bf38aeecf1c
msgid "``JsonFile`` Handler"
msgstr ""

#: ../source/handlers.rst:39
# c9c62394f54f4e72b8e13fb44e647638
msgid "from client.rb"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:5
# 5acb2847447244d6b594090e0d7c8993
msgid "A simple handler may be installed and configured at run-time. This requires editing of a node's |client rb| file to add the appropriate setting and information about that handler to the |client rb| or |solo rb| files. Depending on the handler type, one (or more) of the following settings must be added:"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:11
# d11a9370b4e24215a8b65ca99449d2f2
msgid "Setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:13
# cdd5c08847134aa0a26c595b4d20e62e
msgid "``exception_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:14
# 908f257be90e4b7294728f05641fd353
msgid "|handler config_exception|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:15
# 594204e016e047a2bf2ed1a95fb32bcc
msgid "``report_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:16
# 6c4ff9b4c6794b24bb00ebf5f5cd61bc
msgid "|handler config_report|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:17
# ff5a799bbec040bbb82a754faaa4c841
msgid "``start_handlers``"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:18
# 8e9391f90bf04c85a1870cea1949f1e4
msgid "|handler config_start|"
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:20
# bc5907c1effc47678ad77db9558eb67b
msgid "When this approach is used, the |client rb| file must also tell the |chef client| how to install and run the handler. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though other methods such as |github| or HTTP will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it. After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrg::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required. And then the custom handler must be associated with each of the handler types for which it will run."
msgstr ""

#: ../../includes_handler/xincludes_handler_run_from_client_rb.rst:22
# 7847d475470d478ab937cdfe52301837
msgid "For example:"
msgstr ""

#: ../source/handlers.rst:43
# eb0a48cc9dbc4e17b751e95567d8170e
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:5
# 92f59cb8ab6a48349f2a93e02068dd7d
msgid "A custom exception and report handler can be created to support any situation. The easiest way to build a custom handler is to extend the ``chef_handler`` cookbook and then use the lightweight provider in that cookbook to build a recipe and then add that recipe to a node's run-list."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom.rst:7
# d00540bca34445d3b937588607f6c4d8
msgid "https://github.com/opscode/chef/blob/master/lib/chef/handler.rb"
msgstr ""

#: ../source/handlers.rst:47
# 1de9bf43b2294a32b9d281685f73befa
msgid "Syntax"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:4
# 20f3edccc30c4250bf00b9032a1a265b
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:18
# 4587867fdadb40d9beca2a81dc052414
msgid "where:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:20
# a7e591241774494bb1eab7183b4321dc
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:21
# 2cf53bb54d0040728c2e0c265888356e
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:22
# 10012b7f8dea41e8a06057ab49c18532
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:23
# ccad23e64e7a4627a0553e7e71056aec
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:24
# 84dc1e18206241bdb6dbb736d75cf3ba
msgid "``run_report_safely`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:25
# 4cd0508ad44d41a4ae61a863cdfbf0a9
msgid "``run_report_unsafe`` is xxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:26
# f15c76f560fe471da46a940582c7f501
msgid "``data`` is xxxxxx"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:28
# 65b3b90f7a0548579033627852cadcb9
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_syntax.rst:51
# eff5eac13a35498795a72cac6b2207f4
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/handlers.rst:51
# 244eab15f74740a4a81d74587fe21d52
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:5
# 36382cb40c63408d8cf8175aa224cd48
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:13
# fa1283d8eb1a4e67998c21974f0cac4d
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:15
# f28be50219054c289b294fe40ac67592
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_report.rst:33
# a42618d6a414471694710d4264e34fa3
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/handlers.rst:55
# 623de9e98ced49e38e95b0b906e43a5b
msgid "Optional Interfaces"
msgstr ""

#: ../source/handlers.rst:56
# 7041c2ce39264ca0bba1fde23b247844
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/handlers.rst:59
# 8742434b39964ac9bc48d7787d4f9686
msgid "``data``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_data.rst:5
# 903c055d31bc4718b9960399508bd5e8
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/handlers.rst:63
# e215ce245e4c4733abb49d6e8a36dabd
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_safely.rst:5
# 45faf1a9558c4d2ab5f1ec18d038caba
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/handlers.rst:67
# 5f483c9ba1de4d619a67c76cde1d017a
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_interface_run_report_unsafe.rst:5
# 76720300b9924aa9af05c3046857a818
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/handlers.rst:71
# 0291a5f83b5f47b58c150eea4c6ee351
msgid "Start Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:5
# 37d1b6e6d9774bc29ac06378eec1406b
msgid "A custom start handler is custom |ruby| code that defines the desired behavior for the handler. A custom start handler cannot be loaded (currently) into a |chef client| run using a ``chef_handler`` recipe. A custom start handler can only be loaded when it's listed in the ``start_handlers`` setting in the |client rb| file for the node on which the start handler is supposed to run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:7
# c4844ffe94764c21bc6c2363fab31192
msgid "The basic syntax for a custom start handler is as follows:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_type_start.rst:21
# 26a9204f508d4e389ede19b555ed3ca1
msgid "A start handler is a newer feature within the larger set of handler functionality. They became necessary when |company_name| started building add-ons for |chef server oec|. The |reporting| add-on is designed to create reporting data based on a |chef client| run. And since |reporting| needs to be able to collect data for the entire |chef client| run, |reporting| needs to be enabled before anything else happens. This is done with a custom start handler, which is uses the |cookbook chef_client| cookbook to install the start handler each node for which reporting metrics will be generated."
msgstr ""

#: ../source/handlers.rst:76
# dd6b13ba56864775bf2a426d15dd73e1
msgid "Example: Cookbook Versions Handler"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions.rst:5
#: ../../includes_handler/xincludes_handler_custom_example_reporting.rst:5
# 2f1e8199374d4d3c887a96dc8ac041da
# 399ce20bc0fb4078a88a8385d486dee1
msgid "Community member Julian Dunn created a custom report handler that logs all of the cookbooks and cookbook versions that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/handlers.rst:80
# b520ed4cc45f4a48994ada3c843329c5
msgid "cookbook_versions.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_handler.rst:5
# 8546e252ad494842b2ecb665884f694e
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/handlers.rst:84
# d4e233b5f9d04b4297fdabf10f7ba3a7
msgid "default.rb (Recipe)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:5
# c6d84839e5f24dac90283d0ba045e6d2
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_cookbook_versions_recipe.rst:25
# b084e24a56524f73b961f13f5450a09f
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/handlers.rst:92
# ce4a13e3510a4e4686cc74558579c3e0
msgid "Example: Reporting Handler"
msgstr ""

#: ../source/handlers.rst:96
# 1874ead1a6b14416993066cf422cd6dc
msgid "start_handler.rb (Handler)"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_handler.rst:5
# 0b65da554f6c43fa876682ec94accdde
msgid "The following code shows the |reporting| start handler:"
msgstr ""

#: ../source/handlers.rst:100
# 1359b5e2d8f340c38fa321700e882b94
msgid "Install"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:5
# 65b311534e234a61b3aeba1f053c4a65
msgid "To use a start handler, it must be installed on a node so that it available to the |chef client| at the very start of the run. There are two ways to do this:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:7
# 68c7088783a94806bcbd0bbd85dc45bd
msgid "By using the |cookbook chef_client| cookbook"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:8
# a88c1bf4732942d290138b691ffabd1a
msgid "By modifying the client.rb file, and then adding the appropriate information by using ``start_handlers`` setting"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install.rst:10
# 2a6f25fdecb84f218253e54b3f46355a
msgid "(The |reporting| add-on always uses the |cookbook chef_client| to install the start handler.)"
msgstr ""

#: ../source/handlers.rst:104
# fd074c09e5df4f6ca2895f8c0a138d91
msgid "|cookbook chef_client|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_cookbook.rst:5
# 19a2ef284b2342cda1d80db28e6a6879
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/handlers.rst:108
# dc8148198aa64903abe9444b17e8fecd
msgid "|client rb|"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:5
# 95069376353a456da6dfc53da917e872
msgid "The configuration of a start handler can be configured in the |client rb| file. For example, the |reporting| start handler adds the following code to the top of the |client rb| file:"
msgstr ""

#: ../../includes_handler/xincludes_handler_custom_example_reporting_install_config.rst:16
# 9562b701b8e54e97a5205f8650acd3e8
msgid "This ensures that when the |chef client| run begins the ``chef_reporting`` event handler is enabled. The ``chef_reporting`` event handler is part of a |gem| named ``chef-reporting``. The |resource chef_gem| resource is used to install this |gem|:"
msgstr ""

#: ../source/handlers.rst:112
# 86cc61bc348c487b9b6abd04dc03f1a0
msgid "Community Handlers"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:5
# 7ba1775b9e564baeb1ab4cd495688b1a
msgid "The following handlers are available from the open source community:"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:13
# 10f0761e56e1447db023f030ab936329
msgid "`Airbrake <https://github.com/morgoth/airbrake_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:14
# 18cceb1c4c13428996dc3ad3b3da3d5f
msgid "A handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:15
# b3528ad6935646a7aaed9d398f98227b
msgid "`Asynchronous Resources <https://github.com/rottenbytes/chef/tree/master/async_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:16
# 18c285be4cc04e2d9f71f149809eb08c
msgid "A handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:17
# d5c3571eccfe41fb8b65dfc50a3d0782
msgid "`Campfire <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:18
# 5b4e057ef518429ab150123d86085e1a
msgid "A handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:19
# ea6511bfdfe743669b760be7658a7129
msgid "`Cloudkick <https://github.com/ampledata/chef-handler-campfire>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:20
# dff73762b3014be79d89d8e1573690c8
msgid "A handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:21
# 131731214cf640149f16e493689a98ce
msgid "`Datadog <https://github.com/DataDog/chef-handler-datadog>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:22
# 4b4076f5747c4013bc46360c28be0e41
msgid "A handler that collects |chef client| stats and sends them into a |datadog| newsfeed."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:23
# f4dc5bc99986454a85ce573616914edf
msgid "`Flowdock <https://github.com/mmarschall/chef-handler-flowdock>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:24
# 0b5d7068d794442b86d734032af30bda
msgid "A handler that collects exception and report handler data and sends it to users via the |flowdock| API.."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:25
# 213ff588842c444aafe06da2a5a5623a
msgid "`Graphite <https://github.com/imeyer/chef-handler-graphite/wiki>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:26
# c9ff1f2981f24306afa1ba9d2b2d65fa
msgid "A handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:27
# c4ef6d5020f94cd7bac838c33fa4001f
msgid "`Graylog2 GELF <https://github.com/jellybob/chef-gelf/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:28
# eaccce64b51947a7a2d8cae195da2e1b
msgid "A handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:29
# f798672a12c14a61a6f2e04e7967e176
msgid "`Growl <http://rubygems.org/gems/chef-handler-growl>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:30
# 6a1afedb18a24e709b0b976ac3fb5895
msgid "A handler that collects exception and report handler data and then sends it as a |growl| notification."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:31
# 9f83699653ee46939c9fc3aa6dfd99d6
msgid "`HipChat <https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:32
# a1bd31e480424eec824e664909d7afd1
msgid "A handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:33
# 2f0e972fa2354e28a262d6b12070a393
msgid "`IRC Snitch <https://rubygems.org/gems/chef-irc-snitch>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:34
# 33ac81aaeed646089a0017355dbb8bb1
msgid "A handler that notifies administrators (via |irc|) when a |chef client| run fails."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:35
# d5a07d6ba5734bd39a3c911c5d450692
msgid "`Simple Email <https://rubygems.org/gems/chef-handler-mail>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:36
# c73c83d978a0485cbbb654d5a944fad8
msgid "A handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:37
# 951bb00514cb45bc89ba63dbb5eede54
msgid "`SNS <http://onddo.github.io/chef-handler-sns/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:38
# 04e8ddb48897439eb960aedaeecdedd4
msgid "A handler that notifies exception and report handler data and sends it to a |sns| topic."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:39
# ec739cefccba4f72bf7078ae50f885d7
msgid "`Splunk Storm <http://ampledata.org/splunk_storm_chef_handler.html>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:40
# 93318a9ae47942f890e080efa020d5e0
msgid "A handler that supports exceptions and reports for |splunk storm|."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:41
# 03ffc32608224170957417e2aa5c5149
msgid "`Syslog <https://github.com/jblaine/syslog_handler>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:42
# 82dc38239f8c4beda9d9832a2edf9d41
msgid "A handler that logs basic essential information, such as about the success or failure of a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:43
# 4d6613c87b744cab9122e9946c0b0ba3
msgid "`Updated Resources <https://rubygems.org/gems/chef-handler-updated-resources>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:44
# 1871d8b71334489b8649ed5aa85bf289
msgid "A handler that provides a simple way to display resources that were updated during a |chef client| run."
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:45
# 9cfaad3eede547f78f87d9d9c0de4466
msgid "`ZooKeeper <http://onddo.github.io/chef-handler-zookeeper/>`_"
msgstr ""

#: ../../includes_handler/xincludes_handler_community_handlers.rst:46
# 1308cdf14da344b39221fb48188a85ac
msgid "A Chef report handler to send Chef run notifications to |zookeeper|."
msgstr ""


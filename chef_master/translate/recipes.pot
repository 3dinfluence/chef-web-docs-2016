# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/recipes.rst:7
# f32e6e54b6544b58a339d14bee3147c7
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 74f0f84fc9264f04b4af862e5bc256bb
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 39c61d52994f4d97a31356e80d2b4976
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 3ebd8d5cfe814584a5d1ce37c80f9bcc
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 02473f530da24620a718df25728ad398
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 8f4929d5446246a2b8a6dcc0aeead4cc
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 01c3f1bf63c6471cba23474f054302c0
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 6aa1751226884562a2521461ce8964d7
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 907eb1727e9a4a71a29b47bed849acc4
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 24a20d0cc2e24082a37227eb2a3992e7
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 4d18c1304fe647f3baef2d4bc0d7141e
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 0021a7dccc5a43c2a546e1a71b9f9e8f
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/recipes.rst:12
# 3f92773ee4e348c4bf28eaf959b0c789
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 3ab2d1fcc60f4b86ad20ad259420d0cb
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_notes/includes_notes_see_attributes_overview.rst:6
# 5aa985ed4e254c75993ed82ad2132fa9
msgid "Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, |ohai| collects attribute data about each node at the start of the |chef client| run. See |url docs_attributes| for more information about how all of these attributes fit together."
msgstr ""

#: ../source/recipes.rst:18
# 93118398058545c4972f8b9a2b403f95
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 0792326c70d9413b90fb6039e09275f5
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 7ee322b53b474f29aa6d066b8aee83cc
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 3d0a692728f049c4abc80b6ed582c322
# 7caf855e1c6949ec9544d6f4fc884139
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 06560ada584b48368c1a2e6d063ba5f8
# a402dd03d1534ca0a76067b6199b41fd
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 54dfaa11c90841fe8d9409ebfdf1cb43
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 105fd40153d64cacbfccdf337927e7d4
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 0f223d2a1e4f41cf8c7ea7b13a8d09c0
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 65b31032870e4fb8af16ec08c5634307
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 9f7f6668082e4d8c850255ed3a027eb8
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# c92e32c6858b45ac882f4d6b463b9384
# ad2c40b998ac4f30830ae471b9010fbf
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# bfef5e9d93fc4133a17785d018274acc
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# f7f54a8102c94064a27c42aa66424fbd
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 020b3548a2fe4777bfa6743aa9ed9c37
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 10793f2c1336494787553eb78db1d277
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# c3a22428cd594317a7f56c636c7c5e91
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/recipes.rst:22
# 65ea83a1dbcb4050bb752732e35e5dac
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# f9095390d07c4dc5b284269c8d694c90
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/recipes.rst:26
# 22e0bc2610084c98bbb342785b8ed672
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 5ed52d9b22be4a468769af2e6900b2b5
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 9d83640147a6469bb951e821d9596c5d
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# be9cf4bbe47b40ca8cf2ac4d5058e6c8
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 126533ff669b44b1a97a4683289f57db
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 4f08c95ac14e48559c491667c396c118
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 477a948774c24f149580f4adfd570337
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 97be64937b9f45dab0b01ba88ae7df93
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 3bc5cdeae7ab41a1bd588edb485d6dea
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# f14f39b8a29e4427a90ca3dc3dfb0800
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 04e07ea8cdfe4d8b94226a07a43d1760
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# ec675bd49dac4cdd90bc79dd92f00115
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# fa56e89648864db6b29dcc60671b8514
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# ff72b6d6f5c3431898fe684abddbd203
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 10fdecc77d0642838c85da58668c7b40
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 9902ace1b79c417a99d7d473f66306ef
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 350168090be24ee391d9a7d2f539aafd
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 208c44b7e5474b3ba6898ef862d148f9
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 1cdb14103834436eb27d3e865cf4d043
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# b013989707cd4db1b701b23cdc5dd722
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# d0e4ae20b6ba42aa89db95d4fec7e0e6
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/recipes.rst:30
# 1129156d57474ee9b5c8b8a720dfdba4
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 20da2ee4255040a398104ce3d39eae2f
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 62ab386529af42da9356f2a34c049909
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 4a12b92636f64d179174688d91e3ae89
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# ca57a4741d3b4d1cbc57dfeba8aac3c0
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# d01755ddb9e14c60b179f8cc45c197ac
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 6fb8953f53fa40418283ebe8990d72e9
msgid "|whitelist attribute_automatic| For example: ``['network/interfaces/eth0']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 0e5ea36fc4ad40fe9ebd1619f321c01c
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 09190e06823f4d14ac7012f486148f4b
msgid "|whitelist attribute_default| For example: ``['filesystem/dev/disk0s2/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# ac9aba5a47544c45973cc0a6bd5ffadd
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 15928d27d29b4c529044ac4f5ed0b34d
msgid "|whitelist attribute_normal| For example: ``['filesystem/dev/disk0s2/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# cd050708280f4761bea2c6f06ffee307
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 877626e4d3544d4f9f9fc7285299b340
msgid "|whitelist attribute_override| For example: ``['map - autohome/size']``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 64f6cedb02b743d6a734a1d5f685118a
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# d48bf4f019e349c79a2d2ff7de00d84f
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 899f666d3cd94d13b23a7d877f3fab5b
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 59d8e0d260c342cb9c7e432e024e13cb
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 48f7afaa90b34d32ba8c8b1ec773333a
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# 96ed9e59e660442888291a3748f51a2d
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/recipes.rst:34
# 140a21dc6c824c408f32e8af04a56529
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 006fba6a703241ea9021eb9e6a022e06
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 34376f0a654a4f2ea4f97379963bea98
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 63b9e8824ac844cd902c0894ef211de7
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 00c8f00f01ab423688b1b910dcb06bfa
msgid "``attribute?``"
msgstr ""

#: ../source/recipes.rst:38
# 6a97abcf688a4641899dd1fd1b97f783
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# cdbc65b0453846488c8aafbb925e5fbf
msgid "In |unix|, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# bf128228315a44a69d6aac91743a57f6
msgid "If processes is started by using the |resource execute| or |resource script| resources (or any of the resources based on those two resources, such as |resource script_bash|), use the ``environment`` attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 7c5fe05b331b4d149d4a10df39b6c36e
msgid "The only environment being altered is the one being passed to the child process that is started by the |resource script_bash| resource. This will not affect the environment of the |chef client| or any child processes."
msgstr ""

#: ../source/recipes.rst:44
# 55398a4fb2b9483f9477ecfaeea53f5c
msgid "Work with Recipes"
msgstr ""

#: ../source/recipes.rst:45
# 84132ec18760458f927cf8335fbb49d6
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/recipes.rst:48
# 1d1f7b9139dd4dbe95825d725a49c92e
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 711d792c1d8e40c9b7c9cd8edc810ca2
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 4e61900b9a5345b081f98d5eab5dea32
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named ``apps`` and a data bag item named ``my_app``:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# da582272c8d84122a957dd4275804b83
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 637059bd2e6b4c3a99721716504ac1a1
msgid "The data bag item's keys and values can be accessed with a |ruby hash|:"
msgstr ""

#: ../source/recipes.rst:54
# 84e58be1b9494bb59f9b319ab8c052ee
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# f03e1e6de4604f80a153c7afd686776c
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# cdd6fd64cda24971beda32356c2974ba
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# fe97c548311346719e1235f4d547ff8c
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/recipes.rst:58
# c3364996e7774936907cf8c4a54e553b
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:6
# 9f7edfd8fcb9404cbc7b40908c43a2be
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/recipes.rst:62
# 6e88e8e0896741cf999c9741effb4dfb
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 3c16e08d0291450681016634ac07872e
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# d8bdfe682bc845a5a113a725b2643dd3
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# 8788edbbe1764dc1ac40a5dcd7cdb483
msgid "For example, if the following recipe is included in a cookbook named ``my_app``:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# 53ff54c56772438386a03039587005cd
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/recipes.rst:66
# d6e6a292c4da4578b51694884d7501a9
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# a80108ea5a4f4e6ea5b0565543292b8d
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:6
# 619401749c7140e38f4457230426286a
msgid "The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:12
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# 2727513f4a7e4b4bbc51786e8792e450
# e86b250d86744a2d8b60330cbd30a719
# 635a6a0aa03f43fc9f89f2b48c65e8c6
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:18
# 6c17c3fc1afa4b9493f7ec01f9ade61e
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/recipes.rst:70
# d98d51590a9642928238bfa88fb926df
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# fdbf3f96a59142cdbe16f131ab63e4b7
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/recipes.rst:74
# 4f587d3676e94b58a76d4f25f21227a5
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 253531d5f6774ecbbc360eb7210b58cd
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 12920912ad00435c8e02d6b73d8dcb31
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/recipes.rst:78
# 5e3e472f9a3b499ab430d0e27708ca15
msgid "Use |ruby|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 6fadc85a31024ec2ac8636048709d25f
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/recipes.rst:82
# 099c9bb6d5ae4638ad4670ce60133cea
msgid "Assign a value"
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:4
# b24383dd1031405982c3e5cb904ed8e8
msgid "A variable uses an equals sign (``=``) to assign a value."
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:6
# 3044fbdf5b7647b58ee1757f243628db
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/recipes.rst:86
# 7ff20b28e3d24bfab5624008265cf99d
msgid "Use Case Statement"
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:4
# 18ce1526d8064772a744602fbaf0b245
msgid "A case statement can be used to compare an expression, and then execute the code that matches."
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:6
# 0d81981548b349c78a431dddd2222f72
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/recipes.rst:90
# 09cc21569f364b21a2271bcf5b826b0e
msgid "Check Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:3
# 878ae60db6864f6e9bdafe37ae642fbc
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:5
# 8bd5f4576bd94897b0b8edc962164f8a
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/recipes.rst:94
# 193c4e8085a04b9ea143bbb448d56bc6
msgid "Execute Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:3
# 8c10207736fe46cf8e617f1bb6460704
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:5
# c1f1a869f516489f933f52fa7acbddc3
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/recipes.rst:98
# 7705bf8e34ea4f91a17a50ac2d455d01
msgid "Loop over Array"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:3
# b06e4daf17c84ec28d77343d415198cd
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:5
# 3172dd9516b0412580fce733e3ba3564
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/recipes.rst:102
# bcfae0fabc8b47e8bf2ba0d2d65485aa
msgid "Loop over Hash"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:3
# ba9f6346e5864e6c886421c630468364
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:5
# 4843c1eeb2cf4e73a4e86aff4bc425ec
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/recipes.rst:106
# 7d74992b35b24fe1ae0ba97f0c944d81
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# 05866146376c49eebd8a4bff51399635
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 9261ff6327d44385997b01f3ca7f94f3
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named ``mod_ssl``. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# b3fd13599e0a41aaaa97a2137de5fef3
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/recipes.rst:110
# 9765db935afe4363ac689f3e5fd1dd0c
msgid "|chef server_title|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# 50d7b522e0ec4e3a87f5157a75a93c34
msgid "Use |knife| to add a recipe to the run-list for a node. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# f11b4552d78347e189e8e2c8be000e01
msgid "More than one recipe can be added:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:16
# 238c2886a440417a84837c4bbdeb3c4e
msgid "which creates a runlist similar to::"
msgstr ""

#: ../source/recipes.rst:114
# de158ab1f3de464fb2dd84758a5f3378
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# 93859658634f485a86377597f78dec8b
msgid "Use a |json| file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a file named ``dna.json`` contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# 962da0d602544c929ad1a0040b2078d0
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/recipes.rst:118
# c9b005aa54b4444cb6625c0ac30db6cb
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 14c3bf7b1af34cd284586880058cbff8
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# cdb4284b6e5345bb936515d73c7a9539
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 4f18011742f14e178806901a5fd7345e
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named ``webserver``, and then render a template which includes those role assignments:"
msgstr ""

#: ../source/recipes.rst:124
# 277bda635eef47d5ae46e123454d10b7
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 895f45f803894231b6e08a2808dbbdd3
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 182ad9101e2443468a81fddcb0430413
msgid "Tags can be added and removed. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 653aba2baced469797909b25d474890e
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 491ced0fd084402a8646bfe0ea33dab3
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 6e43e43f457341f6a6f14ea537c76b82
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 71a84e72928740efb72406e2c7398d83
msgid "Will return something like this:"
msgstr ""

#: ../source/recipes.rst:130
# b1208a31a051469996103390ab335912
msgid "End |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:5
# d9508b392e6a402da31c9c047388c1d3
msgid "Sometimes it may be necessary to stop processing a recipe and/or stop processing the entire |chef client| run. There are a few ways to do this:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:7
# 4a32bd8306a84601b10b3b5f423c5485
msgid "Use the ``return`` keyword to stop processing a recipe based on a condition, but continue processing the |chef client| run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:8
# 9326ecfb4f514ba1b82ee34778456b09
msgid "Use the ``raise`` keyword to stop a |chef client| run by triggering an unhandled exception"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:9
# e714e51d80264355861dcb59b9228a74
msgid "Use a ``rescue`` block in |ruby| code"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:10
# 93c88e5ca7054bd28bf60b21240d5ce7
msgid "Use an `exception handler <http://docs.opscode.com/handlers.html>`_"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:11
# 82bbb87c77e94f5187734092dcdc4c06
msgid "Use ``Chef::Application.fatal!`` to log a fatal message to the logger and ``STDERR``, and then stop the |chef client| run"
msgstr ""

#: ../source/recipes.rst:133
# 6585007c360d4681b4975977b9c9e78e
msgid "The following sections show various approaches to ending a |chef client| run."
msgstr ""

#: ../source/recipes.rst:136
# 9a2aac21b560498cbe8c890ba884ea08
msgid "return Keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:4
# 48e5e07437434e41acacdf2fd49a3f9f
msgid "The ``return`` keyword can be used to stop processing a recipe based on a condition, but continue processing the |chef client| run. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:18
# 04bb33c3977346c9b3a987fcb631ca8c
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it's OK for a recipe to stop processing."
msgstr ""

#: ../source/recipes.rst:140
# 4628836a31e048e99ae9fb2c6868aa4e
msgid "fail/raise Keywords"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 41cc5b3b17f04877941ee280a2f58910
msgid "In certain situations it may be useful to stop a |chef client| run entirely by using an unhandled exception. The ``raise`` and ``fail`` keywords can be used to stop a |chef client| run in both the compile and execute phases."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 5fe7de5b75db4552912224ac026ed31e
msgid "Both ``raise`` and ``fail`` behave the same way when triggering unhandled exceptions and may be used interchangeably."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:7
# 9853b3405bd2468a885dd557bef6ac0f
msgid "Use these keywords in a recipe---but outside of any resource blocks---to trigger an unhandled exception during the compile phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:21
# 53138f08a1f34de4921dd254daf9ba9c
msgid "where ``node['platform'] == 'windows'`` is the condition that will trigger the unhandled exception."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:23
# a41ee5888647402dafb871ba52e8b9ae
msgid "Use these keywords in the |resource ruby_block| resource to trigger an unhandled exception during the execute phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:34
# 7c774f1983c143c5acddd9c2dc4cf529
msgid "Use these keywords in a class. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:40
# 6e5e4d709d964020a5ff6b697673b808
msgid "and then later on:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:48
# 66c34206c1b04cd49a21c6f1b7745ef5
msgid "or:"
msgstr ""

#: ../source/recipes.rst:144
# 6383f83862704f2ba0ee06cfd2d2dce5
msgid "Rescue Blocks"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 72cff93fbf3c4cfd9a104cace13e24ef
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# b38d9d570cca4abd8bb1d403e055ed9c
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/recipes.rst:148
# b228006836bb472586c032c73e574c8a
msgid "Fatal Messages"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:4
# 536e3ab8add345b39cac826f3ba1ec53
msgid "A |chef client| run is stopped after a fatal message is sent to the logger and ``STDERR``. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:10
# 685b71345b344d84b921b316a68860a4
msgid "where ``condition`` defines when a ``\"log_message\"`` and an ``error_code`` are sent to the logger and ``STDERR``, after which the |chef client| will exit. The ``error_code`` itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:12
# bf4ccb629a4e4cd1860182bf6880b3c3
msgid "This approach is used within the |chef client| itself to help ensure consistent messaging around certain behaviors. That said, this approach is not recommended for use within recipes and cookbooks and should only be used when the other approaches are not applicable."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:14
# 1db82532dbe049eea0fcf4af585b3e36
msgid "This approach should be used carefully when the |chef client| is run as a daemonized service. Some services---such as a runit service---should restart, but others---such as an init.d services---likely will not."
msgstr ""

#: ../source/recipes.rst:152
# ad310a89eb7d4e279001ecf6978a34d8
msgid "node.run_state"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:5
# 37ea8e7a8fd046f6ae9db72f01b75f64
msgid "Use ``node.run_state`` to stash transient data during a |chef client| run. This data may be passed between resources, and then evaluated during the execution phase. ``run_state`` is an empty |ruby hash| that is always discarded at the end of the |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:7
# 65038e5768fc442ca09dbcf04adc3ebe
msgid "For example, the following recipe will install the |apache| web server, randomly choose |php| or |perl| as the scripting language, and then install that scripting language:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:30
# a3fc1cf00a954e4599ba50edb0b6b2c0
msgid "where:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:32
# 80c2640642e8433ab19176bd6e71d17e
msgid "The |resource ruby_block| resource declares a ``block`` of |ruby| code that is run during the execution phase of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:33
# 69b7b289241e4f8c82c9894b1af5bb97
msgid "The ``if`` statement randomly chooses |php| or |perl|, saving the choice to ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:34
# 50822724aae2451893e8c8888f4fc844
msgid "When the |resource package| resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:35
# d5d6d2a1637e4d739e5a42e7d0050c9b
msgid "``lazy {}`` ensures that the |resource package| resource evaluates this during the execution phase of the |chef client| run (as opposed to during the compile phase)"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:37
# b92bd7c676e945f09f62525287b8ebfe
msgid "When this recipe runs, the |chef client| will print something like the following:"
msgstr ""


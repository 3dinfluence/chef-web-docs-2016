# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/recipes.rst:8
# 062c7c6897c64112a426c81654c081b0
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 04c05d9f3c134447a141047889378f14
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# b6cc4632b723409f8bf7241cd413c145
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# abe52c53bd434f3a992cd5c00fcf88e3
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# d54a7299758d49fc8c69ca3437f815d8
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 79cd6f8a6404489e993b8b978abf859a
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 2f3cdb31f017421f9461beab7049ca0f
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 40dc3d5978cf4573a97c875e9f230b74
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# e045e51e09e74af3904eea43bcc793b1
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 1615541313e74f599da1c43162c3b1cf
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# a3839a57712a4b7eb7ea712edf4ec9ef
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 4fc5f8eea697453ab2d9ec1d9a9e0434
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/recipes.rst:13
# f74a3f621c514ca186ff325cef0d3d89
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 2c230bff796346e88317fdb42cba082b
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../source/recipes.rst:16
# ccaba86460664e4f81897857987aee73
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/recipes.rst:19
# 01dd2b3338fc49ac968e5a4bd7d9e1c0
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 54167eb66e0047ea9e8666de397fe53b
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# ef9c7bea90a24dbf824343e42dbdefad
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# e16675c4a4954660898ed7c7e26c5386
# f6ac1b5714364dc7b20ddf3596ab7be1
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# d860c19d5cca4ef59261c51114f9eeae
# c7c886b818e04cd98df3eabd2a78950d
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 751931c7c66f410ebda52829951a6a03
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 4bebab3fd71f47f592aa672afba07fa5
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# c3fc1aed87a049cdb4c68ed05676c0a5
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 249955f4c79843868b2c40fad1bd09a0
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 7a313ea646084173b6b44b999a7e30ed
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# b0bb4c9c17bd4d42a62421f21187b955
# 29f2ae902e0a43e2a9afd55c22cc67d3
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 6540f0e817ac4e3680aa201c6f3e05d1
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# b3c7368cef134d42b22bae6fcc423aab
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 0feee4ddb45443878ad53bc0e1af4da2
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 8bf80d6cbdc843a8b80c40a2de89b787
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 37ffb12e930d402db0721aecb03afe41
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/recipes.rst:23
# 14275b0254454e0984e43ebd1c3ef182
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 68492f20ec4b4600bf90c2f43f0d5a42
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/recipes.rst:27
# e98120eb33bc4a59aeb2c821366abda7
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# d4c4a1dd80db410a94e7a9dad6394ec2
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 73a4374dc92b45469495251efabb89cb
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 81125a8a688c49fbbac3756b569ec17c
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 69d212ffc613465b8975d317ec1199b2
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 1b89a5035c414712a46720ee5f882805
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 84663422399640a69b6fdb9254d337be
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# bfc23f03ef944d68a8a1963b9a54b3de
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 88a659e92589414da3791cc1d0f29615
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 7352c636f7e74aff9bc2e2d38968fe5b
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 766c3ba4390f41d4a9ed77731e69d453
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# ea3db6e576f7408f9ea36c8f0aba18c1
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 1d3e2e2093984acd9bb84d6de9453ca3
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 6c83d7892ee24d2bad76642fb895a8b6
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 1fa4a7d6b13d4da38c2daa03d5d94338
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 90e3d280636542788e366e4167d17abc
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 871ac27933a246b5b046f24ad93feccb
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 1a8d7bd5db374f0cb15ac5308deb3c18
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 6a11f696ccf24dee8cab537d159a1272
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 808cffb97db743c68e53605d37e5a5ff
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 079902a4e1994479950cbc19029f2a76
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/recipes.rst:31
# 046efc82775a4e7eb24a6f8d5dcbab43
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# fade8ce5394f4768ab6d28452581a23c
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# dc1a417c9a0d475d90379d47910a8ddd
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 0cc8e030f08843d9a87874c229155425
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# e95e11a749e6424a8050705e157e0db6
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# c6a4f71ebb1149fe832efc39df514568
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 4b1622c7e4ee4f529bda6d20bcaa2b2e
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 2738613b169a4c188c9a483c4a9cc5bc
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 6b2e285a97504e4a863af578f710cdee
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 2912ceedfb574dfa885157d9ee1accdd
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# a583d6606b4b4ba49e5d04c2978031a6
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# d25c70bf4c1842308f0a2dcbd8c82ac0
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# f06b7252b6064aa9aa0d15a80507e1e1
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# b5288d17daec4df685afc44267edd248
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 47d3d93a30d846d1926c18a4dea72448
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# a1496cbf0141445493a778454b10e9f8
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 99067cb8416a41ed9073b3b91b823611
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 8e8a24a5a56a4167aa91c109d1ced5a4
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# bb7d60d937574c3b91b0d16425d0f528
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/recipes.rst:35
# d487f5ab5a064b8780fbe3f9544c85dc
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 51414b31d87a45e9a61323bb0d5de25f
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 0009f1ad3a164127bcbddeda52a8edf7
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# aa23cc588631414e829f15263ec615bf
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# e815545704b54bd88479339408530523
msgid "``attribute?``"
msgstr ""

#: ../source/recipes.rst:39
# 975aa616818043a5a7fea44dd919fffd
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# 7e0eb34286554294b3c171085872dccf
msgid "In |unix|, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# 0f9e009dcccb4f4186a56b3a5349377e
msgid "If processes is started by using the |resource execute| or |resource script| resources (or any of the resources based on those two resources, such as |resource script_bash|), use the ``environment`` attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 068a522e104c4f6f8f50a89d69436d1e
msgid "The only environment being altered is the one being passed to the child process that is started by the |resource script_bash| resource. This will not affect the environment of the |chef client| or any child processes."
msgstr ""

#: ../source/recipes.rst:45
# c81d1592301c4bf69d76bee70ca893f0
msgid "Work with Recipes"
msgstr ""

#: ../source/recipes.rst:46
# 9c97604d12f14dd4a15e907a80f21179
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/recipes.rst:49
# af019247f0564531b8f19c44a2ac628a
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 899b0083281b436c97ee67afe2f49ed0
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# da73e2a12f5b42c48f77f1ffc6691b52
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 97ed0f4425dd4bee82221514581b967a
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 1cada9feb004407ea7cfa9df295bec89
msgid "The data bag item's keys and values can be accessed with a |ruby hash|:"
msgstr ""

#: ../source/recipes.rst:55
# 42e46c7695f24aebacffeaf75641021c
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 169661314a744786b8a72266f0978594
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# baaf14e4731f4b5d9f452b6696bebd67
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# dcbe755a413b4e968c8f5cec15e8b459
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/recipes.rst:59
# 4e57c8f1cf6d402099a4d79822a8180e
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 265772da05af493bb99125d8a1d307a5
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/recipes.rst:63
# f43867165c704c08b272cdc9f065e900
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 744a143fc1614191b75d51776104686c
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 8f2fe06c70b349d2a18f93e9836812ea
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# dcebba044cd7478fac44650b40bb47ac
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# eea9a393352443d3b1b9f3647b5db937
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/recipes.rst:67
# d4b9f63b828a48c189715ac1520830ea
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# f97df8de2d644f268f40663c062cfb1c
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# be07c127e6914e9cbadd3c0530e784c1
# 80dfb2ccdc4e400399d9a8ad6270a271
# 7584b6482b8148f7bc99c1c01bdbbc4d
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 83b2266acc3d48e79e03e68b6ab48267
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/recipes.rst:71
# 431c41005f5b42ffada018203c96fdcd
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 01119e3590af46fcb52539e3f4e90a66
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/recipes.rst:75
# 069cc64b85d546c0984420060b6e46f7
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 0207da26d44e4498a5fb84d1af1ec8cb
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# dc3db56a50d5487990532e3e2515a9d5
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/recipes.rst:79
# 47b5633beec04e06be3e60925d9cc6a3
msgid "Use |ruby|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 0d5d90f6387144a1965c63e99fbd5a9d
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/recipes.rst:83
# d5d2184f2ee94f80ba89bd00f9b66fa9
msgid "Assign a value"
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:4
# 51f6b71b491b4bdcb58a0b48e1385f7e
msgid "A variable uses an equals sign (``=``) to assign a value."
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:6
# d05fec569fc04d62a9b7cfc20056d897
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/recipes.rst:87
# d1915c6062e24b58af7ba35bfca88229
msgid "Use Case Statement"
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:4
# 098af02c3f3a4e24a3521504a503b209
msgid "A case statement can be used to compare an expression, and then execute the code that matches."
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:6
# 4a7706b5d2d2418f92943ae0b7b0a37f
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/recipes.rst:91
# cfc06869b6174f728642f7d5f1ef3728
msgid "Check Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:3
# f0df29da0ec64b8395196ab8d29b1d1e
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:5
# f7fe81c123ed402eb8a46fb5ec64b75d
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/recipes.rst:95
# a8b25ad5460f4c3098d39ddd681bc1ad
msgid "Execute Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:3
# cb92f325e8b9443f8bf85635a8e86d96
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:5
# e03dda287d1a4f899b781e304f35dc14
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/recipes.rst:99
# 749d54addab54f739308852c8e4a42cf
msgid "Loop over Array"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:3
# e3142a16c88f4fb4a02e0b9cfa7e0546
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:5
# 74a5cb7c0dd14db89c0ea8eb5b9d5172
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/recipes.rst:103
# c17e2b57fcd844158409d470e2376a0c
msgid "Loop over Hash"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:3
# ae4fae3ab0584b91bc3dd35ea8ecf6f9
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:5
# 1bc5b12581d54625a5ceb87db4044c29
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/recipes.rst:107
# e0601de660a04562b69bdc4f6343c91f
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# 4265eed389ec47fbafa2303a4392b262
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# e3665001a331481d85faed8cf502b4bb
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named ``mod_ssl``. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# 8138cae2c8bd4d76b27164f36b31537f
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/recipes.rst:111
# a7866cd5b2d8466bb163b54121d6b46e
msgid "|chef server_title|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# 86904db8f1a043d6b7f75544066504b2
msgid "Use |knife| to add a recipe to the run-list for a node. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# c4a2cf256034478a950f8826274e5f24
msgid "More than one recipe can be added:"
msgstr ""

#: ../source/recipes.rst:115
# ff90bc0306f04345827fb4deff612525
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# e8407c6e9a204180bcda712b0ff73cf4
msgid "Use a |json| file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# db2678e16d9b4ae981a3dc6e09329ba8
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/recipes.rst:119
# 5f54d761554140edbcea3aa386af318a
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 9ea5ce58660541e996683d748f09075e
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# ce9f2eae298c4f668223c255cba53ad0
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 13c21518e47a49028e1c71fff9678858
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/recipes.rst:125
# 646d4b988efb45a7b8197bb871d57ebe
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 6413c4e4ff0340f5a41fc16bb47a53e0
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# b7f8bae46d854350b52e215306cf6ec5
msgid "Tags can be added and removed. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# d9efc8a3ea4f4190a65928b0d19084c4
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 8e72f851cb164d1b9f9370b540a0ea0e
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# d49500738511475b909409554e160742
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 4a5c1ce88bba441c91553bb138688522
msgid "Will return something like this:"
msgstr ""

#: ../source/recipes.rst:131
# adc8f0289d474bc7a3d99288c1bc2748
msgid "End |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:5
# e3eaf5341268433d90c7561331f56b44
msgid "Sometimes it may be necessary to stop processing a recipe and/or stop processing the entire |chef client| run. There are a few ways to do this:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:7
# d5ecb1b9bfd342f0b458b1a219e386cb
msgid "Use the ``return`` keyword to stop processing a recipe based on a condition, but continue processing the |chef client| run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:8
# 2882f4a6ad7d4d5f8a81637520cd55b1
msgid "Use the ``raise`` keyword to stop a |chef client| run by triggering an unhandled exception"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:9
# bbc4803763354f208f87e18f64293be5
msgid "Use a ``rescue`` block in |ruby| code"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:10
# 00892593f4404b24b2f2932ef50cceb5
msgid "Use an `exception handler <http://docs.opscode.com/handlers.html>`_"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:11
# a28e396a6d554334a3729cad106aa289
msgid "Use ``Chef::Application.fatal!`` to log a fatal message to the logger and ``STDERR``, and then stop the |chef client| run"
msgstr ""

#: ../source/recipes.rst:134
# 6bd793d99230454280ffdf95d5283305
msgid "The following sections show various approaches to ending a |chef client| run."
msgstr ""

#: ../source/recipes.rst:137
# 67fb59281012444bb5621cccb945f6c1
msgid "return Keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:4
# 1238e7f470004896ac9b0e917bdaa5fd
msgid "The ``return`` keyword can be used to stop processing a recipe based on a condition, but continue processing the |chef client| run. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:18
# 5fbb2bffcf7a460cb6efd09017d2d399
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it's OK for a recipe to stop processing."
msgstr ""

#: ../source/recipes.rst:141
# 60016df453b64bd2972dfbaedf937e88
msgid "fail/raise Keywords"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 269f0955f03d4e278786bc66225dd3b1
msgid "In certain situations it may be useful to stop a |chef client| run entirely by using an unhandled exception. The ``raise`` and ``fail`` keywords can be used to stop a |chef client| run in both the compile and execute phases."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# dbfb9ddcfb28453a8974103e8b9c2846
msgid "Both ``raise`` and ``fail`` behave the same way when triggering unhandled exceptions and may be used interchangeably."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:7
# c30d9cbe2bcd4d629f55ad02a78853f3
msgid "Use these keywords in a recipe---but outside of any resource blocks---to trigger an unhandled exception during the compile phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:21
# 827dd61e9eeb4f09b2fe050c6d669c25
msgid "where ``node['platform'] == 'windows'`` is the condition that will trigger the unhandled exception."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:23
# 64806611df4c41b0a8bd178d9b0bf4a3
msgid "Use these keywords in the |resource ruby_block| resource to trigger an unhandled exception during the execute phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:34
# 4a0f258c9b5f402ab9b6b27c9d652299
msgid "Use these keywords in a class. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:40
# 43ccd40aadd247cfa35b17274cdc3fc9
msgid "and then later on:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:48
# 390373b3129b4f5d87c2ab4c2da33e86
msgid "or:"
msgstr ""

#: ../source/recipes.rst:145
# db73eaefad9745ed9727355ee7f2d330
msgid "Rescue Blocks"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 0f0ea13d0a2c4f268a8ebbd4c2eaad07
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# 44bc7eb5aad2420cb4abb0d57b1aa3f8
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/recipes.rst:149
# ac6df326c8414222bffe4c424931852d
msgid "Fatal Messages"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:4
# 33afc43cf32f45f58e752141412dcbe1
msgid "A |chef client| run is stopped after a fatal message is sent to the logger and ``STDERR``. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:10
# 3ef327fb6ee041429b77440e7e01dd2e
msgid "where ``condition`` defines when a ``\"log_message\"`` and an ``error_code`` are sent to the logger and ``STDERR``, after which the |chef client| will exit. The ``error_code`` itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:12
# 92890594997e4138ab6d75bb27b15c7d
msgid "This approach is used within the |chef client| itself to help ensure consistent messaging around certain behaviors. That said, this approach is not recommended for use within recipes and cookbooks and should only be used when the other approaches are not applicable."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:14
# f8345e7ac2524c73a00593fcdf01bf9f
msgid "This approach should be used carefully when the |chef client| is run as a daemonized service. Some services---such as a runit service---should restart, but others---such as an init.d services---likely will not."
msgstr ""

#: ../source/recipes.rst:153
# bbb3c00233ab4e7a90b5ebe90ddd90a8
msgid "node.run_state"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:5
# 7579b0a8d743453184148549e31167e4
msgid "Use ``node.run_state`` to stash transient data during a |chef client| run. This data may be passed between resources, and then evaluated during the execution phase. ``run_state`` is an empty |ruby hash| that is always discarded at the end of the |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:7
# 6bf6a104e6b24d1d98ae69bade893080
msgid "For example, the following recipe will install the |apache| web server, randomly choose |php| or |perl| as the scripting language, and then install that scripting language:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:30
# 75d3245ceec145d6932143e4e3931872
msgid "where:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:32
# 56523b416af64786b5e1ee169b48a259
msgid "The |resource ruby_block| resource declares a ``block`` of |ruby| code that is run during the execution phase of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:33
# 3968761e792a46949c71268e56c5894e
msgid "The ``if`` statement randomly chooses |php| or |perl|, saving the choice to ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:34
# 4b764f00a75041ad97e073ec243e568e
msgid "When the |resource package| resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:35
# 7a6e818a07f544bd833954c283d9907f
msgid "``lazy {}`` ensures that the |resource package| resource evaluates this during the execution phase of the |chef client| run (as opposed to during the compile phase)"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:37
# 81010c477cf9437e91debfd7e9568972
msgid "When this recipe runs, the |chef client| will print something like the following:"
msgstr ""


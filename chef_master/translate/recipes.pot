# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 17:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/recipes.rst:8
# f369b4235cf6415c94660f330a957977
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 429270da33c64a1a87efc9406046c661
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# f765aa9d47914bc0b94fe60a64b852e1
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 15cf0a9875bb4b6cad1815cd531c5523
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 497d791a97eb48008291372b23ee7781
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 6d94118d1ba54aa2ad90dba60a7cd1ec
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 2bc77274331e47df9b7de0ae0ac6a50f
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# c9b8e15b1e34431890fce1764bcaeda6
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 8ff137a6f22d482baa7b3aa665f0c5ed
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 9b1e39a2b563407c9e8dd8688c363dd6
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 17a7dc605a1f4aa78711e45ba6bb960c
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 7e2c376abc5a4e8f98f178d6dcf68cc8
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/recipes.rst:13
# 52584110ece34d6fab9a5611294342d9
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# fbf71f97c390419f9fb8e7e2e1ab8a43
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../source/recipes.rst:16
# d72d77f33a364049928cc40eb83bddfc
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/recipes.rst:19
# e167ad034182414ca5b28bba1f6b70e8
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# bab0253682b14e09abe5ac8372897f67
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# fa0abafc761d4ae586262181a74d969e
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 6302649ef4b24c37bea7a54c6837c4ab
# 1f78a75b4e954fdb99fc4aa463288dae
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 3b02d2590b6e4c02af6afae363a9ff30
# bc2252dd90304c2a8e6a41b199cbe402
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# ded9d948f85a4c31a5827cded850b86f
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 734625c2a0f64222949731aca4ef2930
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 981d8171a1754efca6bf59886135a4fd
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# fca60be43d144079ab7eeab345b3cfff
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 90ba90f4262046ea94bf70bca9c7123d
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# dad4c284d6eb43efa3564e1c2820e844
# cf2b1f0c27d740ca95134d0616ad9302
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# f08411be57ac443c858f7d8218de6ace
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# 14d09bf15626472a81f64d006faf337e
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 0d0b3194fc084d1692d5f72659d21f82
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# dab771da5254458b83c610597952314e
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# a9a59107b334415f810e5c0b3ecbee89
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/recipes.rst:23
# 670fb4f878b54c85a8f8511fbfcd9c34
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# b5cdf4cdba2f430aaf78c01d85e06a7d
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/recipes.rst:27
# b5a9771ab64a4a4caa081eca2837be54
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# dc664d04c43d43fda270cc0b236acda4
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 49238c2b21b64d40962b76b1cfededcc
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 871cb9b62824458d8e844f6203ac0d6c
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# a81ff2befdc04f848c51ebbc55fc2c3f
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 1e2a09b1623f4e7e94ea40789c8898e6
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# d86687cbf5ad497bbc9053b31a5615d6
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# ad695678551e4730acc6511aeecc576f
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# c5e44543cfa8488db3048ec15ea98210
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 0b59eef9eccb40e38672824d159fa6dc
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 6b4cdffdf3c542029114b5635842c522
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 354769f3f3d742f4ac7bbb49fa9107cf
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# cb42340a7756495389e6e0fa49b35f49
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 896fc64706c444c0bc96a7266ceea857
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# aab1f7118c444ea794d84276e876ca6a
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 60340bf2cc0e4859925d96731b5d96f7
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 0b89c449483644d4bf95a055c9169e21
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# c21ed9c6f7344e6da7d1ad53da1deca5
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 635cf9b6b3be4d96bfcddd00c49dc264
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 65644233f8ea4422914ab819794049c7
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# e68bf50112654639a6cbc06626bec18a
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/recipes.rst:31
# 6e8add21f27e4ff3bc772329869e5b24
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 525a2dae717846d5b52431004efd07ed
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 86fca33259d5471f8318904f2421ff90
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 289e71af594e47debe857f8a4b1fa219
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# a75707300f8c446fba2e3049b04aa471
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# 942c550dc6d240539d077d290d4d9c76
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 06b9411e77214ffb90c23c1c64b5ca24
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 59f5be5df7c84852a3654f63c69e16a9
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 42c7549edd1a4c5e92c7f4da3958e3b5
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 20de0b48600346b1b38e0b9b0882ec4f
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 4f00d9c826564785beaa4b47378de2d8
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# a0e2beff4b0b40a2aae0b01b4af9e57c
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 91ba915310f94ba19822728dda81bd03
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 009523f27c054be4bebbdc871b2fd6df
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 7184742d2b9f4c599d82c41ae7bd359a
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 1709262582354f1791d380b0035c88b4
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 3db5d86e38174e5e864ea850ff1aed76
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 88b0011b327f406b9558fb624a0a0557
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# dd483644d05845d081c82ad14046e65a
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/recipes.rst:35
# cd30b2f9df0543f4815716a824bda4c2
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 4f4f784f9fe44584917989189656d41c
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# b2dd4e0e8ee04479998d3da4a6346f4f
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 76255c52a359412f944f97263d403e79
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 94c3707cf60a4386adad012aaa06bf94
msgid "``attribute?``"
msgstr ""

#: ../source/recipes.rst:39
# 9656b535de494551881aedc7db7ccf02
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# 52b5e4db77144715b57442435b43d481
msgid "In |unix|, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# 5a40f88ff48547868cddcc4cbbc5fc28
msgid "If processes is started by using the |resource execute| or |resource script| resources (or any of the resources based on those two resources, such as |resource script_bash|), use the ``environment`` attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 672ba0c6851a480c9a65397bfc4fba15
msgid "The only environment being altered is the one being passed to the child process that is started by the |resource script_bash| resource. This will not affect the environment of the |chef client| or any child processes."
msgstr ""

#: ../source/recipes.rst:45
# 5c31d250f81c4d3aaf232057765678d2
msgid "Work with Recipes"
msgstr ""

#: ../source/recipes.rst:46
# 43deea5f50184dcfb1e35e7ec04f43c3
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/recipes.rst:49
# 130f18928e9745829d62d1e3178a09ac
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# e1b77f647f0f45a2b7ab3847c443f6e0
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 507ee716ac224c7c8c45a2b72630a8de
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# b50b1071306a4632b7331d3f1ccad997
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# c6f03237d4204f19b8173bdc0430cb8a
msgid "The data bag item's keys and values can be accessed with a |ruby hash|:"
msgstr ""

#: ../source/recipes.rst:55
# 783b25d540cc4920906b1756aa658b06
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 2daade22d8014ad5a98da8b2ef8576f7
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# c92ec902ec5d4e13a293a2949b3d651b
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# ec2524081e9d47cb9e8405b00879b916
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/recipes.rst:59
# d0b3a5aa9cb04cd58e7a9128c4c54660
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 233fff7d37154409a3a26df897209f63
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/recipes.rst:63
# e92ce39be3c8410ca0589b4ef1b21d1e
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 2d9797ebb98b4a5baa5565ada872c123
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 5356ba3c9dd7418ab821a3eaca877368
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# e08e08b889dd4f1c894da0e884099d0b
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# b462f932446a427fbbbf719c148b9898
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/recipes.rst:67
# 030962bc3e8e42238182c197c390f952
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# e487eb954b2f45e9b82cb6439c027772
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# bec1540f401c475fa1d33779219e5832
# a24c8d915d7f420c915d411c58ceda0b
# 223aa20ad75c436a836241ea2d76ed0c
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 09c4ac8225374f5dab38bc2144c4a9da
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/recipes.rst:71
# 42f4315b3e904a93acead1bcd8e5f990
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 2b0f6a360b1045b0b2b5befaad731170
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/recipes.rst:75
# c29979eecf694537a8bd027e8f28ac05
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# d95fdc6f394042d48eed50c9d07fd078
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 797cdc04b19b40fa9e276d6e8ff7d8b6
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/recipes.rst:79
# eb76951428ba423486deb564d53c2704
msgid "Use |ruby|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 40d11ea2e02d4cb9aa5dc06bd60313d4
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/recipes.rst:83
# 02c29519772e4429bf6f36e44fef1b27
msgid "Assign a value"
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:4
# e3ea4f8c6bd84094a5a7ab52d772a073
msgid "A variable uses an equals sign (``=``) to assign a value."
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:6
# 62e3ece7536e4157a46ddd983d43bc36
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/recipes.rst:87
# 8d1657bf88134630831ac913ddd831ab
msgid "Use Case Statement"
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:4
# b62c732b2dc64531af799dbbb378cf8e
msgid "A case statement can be used to compare an expression, and then execute the code that matches."
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:6
# 1e52415c2417471585a18630732262bd
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/recipes.rst:91
# 50a8887ed0cc40179b3bae9d0a708d8e
msgid "Check Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:3
# e95900a8e8414eea99ec14eee0ca1f9b
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:5
# c8b649c402aa4fcc97e2b91c658e1ec3
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/recipes.rst:95
# 7b1458aaf3c84cd1b6b35563cca35861
msgid "Execute Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:3
# 88a1d92cd2d1495c9123e315c6217dc5
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:5
# 76565ac8969f412dab372da465d65b15
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/recipes.rst:99
# e112bf95416f4920ad8e925a0155e3e2
msgid "Loop over Array"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:3
# ffa675e1dbc04a5d97c452f6596259da
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:5
# 80af60d86fa24a51bf448b8dc6eec976
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/recipes.rst:103
# 44062d49a190430c9cbc255c65bab7eb
msgid "Loop over Hash"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:3
# 43d1fafd79a0426a807241f699c6a621
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:5
# 572f94f45c3949fda71322a71e72514f
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/recipes.rst:107
# 4f5dcabe7401451bb7bb153fefcb0566
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# 7d201f190db2436287a9823864235930
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 83f731453a864dabbed996c1cfbf7aa6
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named ``mod_ssl``. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# 2641a3ab3d124328bc691714e607cd90
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/recipes.rst:111
# f63df228acac45819c9608536bd4d209
msgid "|chef server_title|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# e57469dd85e047b2b1806293d2c7d29e
msgid "Use |knife| to add a recipe to the run-list for a node. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# 5c4381edab0b4d4094149b897fb81512
msgid "More than one recipe can be added:"
msgstr ""

#: ../source/recipes.rst:115
# fdd46f4a56194dce8c32d435d1f797f1
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# 2c86bf69d77c40ca9002e5c1290ae955
msgid "Use a |json| file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# 8c2c010f25aa45158c0c8d80cbceca6e
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/recipes.rst:119
# a32f5b5fc7bc470a9597f4ebd4c6d8a5
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 2dbeb250d34f4e3d89dbf8010f7e2736
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# bc26431222aa4041ada190f7cd82ab26
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# f025d75ca9ae42d4923f19e996c3f74b
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/recipes.rst:125
# 5c4f5ba29116452385e7f41c57ff574a
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# cb47c842fd0f4b4697d333041618ac5a
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# fdfed89c3bca490698ece2cd4c7f80e7
msgid "Tags can be added and removed. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# f6a88a9672324744a54332892e9746af
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 9294cdcb93ae4685904c88394eacd357
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 6d67293cddac413a98f852b0ea30c272
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# b9484e39d4794241b46f6ee8e5e7b464
msgid "Will return something like this:"
msgstr ""

#: ../source/recipes.rst:131
# 7d2bc172467f40fda1dcdc95ff19784f
msgid "End |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:5
# 034c2b9dd4304d348b317cb4a62879ff
msgid "Sometimes it may be necessary to stop processing a recipe and/or stop processing the entire |chef client| run. There are a few ways to do this:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:7
# 974bb58e3207453881f483211631ab16
msgid "Use the ``return`` keyword to stop processing a recipe based on a condition, but continue processing the |chef client| run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:8
# 468844a4a11a442f9a631b6191092b56
msgid "Use the ``raise`` keyword to stop a |chef client| run by triggering an unhandled exception"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:9
# 62e2ac8086384e1abed514f45feb6cae
msgid "Use a ``rescue`` block in |ruby| code"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:10
# 5b2bd3bb6e49424f87fb794248fec3b4
msgid "Use an `exception handler <http://docs.opscode.com/handlers.html>`_"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:11
# 35aaca5aaca140148f876e6e7c2678db
msgid "Use ``Chef::Application.fatal!`` to log a fatal message to the logger and ``STDERR``, and then stop the |chef client| run"
msgstr ""

#: ../source/recipes.rst:134
# e8c113186dc244068382686544341cf7
msgid "The following sections show various approaches to ending a |chef client| run."
msgstr ""

#: ../source/recipes.rst:137
# 399391c0e6104819ac4d757d77ed7ba4
msgid "return Keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:4
# 8f961ab950744be48b938667290c9543
msgid "The ``return`` keyword can be used to stop processing a recipe based on a condition, but continue processing the |chef client| run. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:18
# e746e3fb363b4194a25c28cf29cc113e
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it's OK for a recipe to stop processing."
msgstr ""

#: ../source/recipes.rst:141
# 4d825711974c4e1c96d1da7fb2289980
msgid "fail/raise Keywords"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# e1ebe0c834d044dfab5c533e0507e356
msgid "In certain situations it may be useful to stop a |chef client| run entirely by using an unhandled exception. The ``raise`` and ``fail`` keywords can be used to stop a |chef client| run in both the compile and execute phases."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 2be711d8c5bc41aab48487568bf1d9cb
msgid "Both ``raise`` and ``fail`` behave the same way when triggering unhandled exceptions and may be used interchangeably."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:7
# 6f9d57dd92c84d969868694d9b342fae
msgid "Use these keywords in a recipe---but outside of any resource blocks---to trigger an unhandled exception during the compile phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:21
# 352e480f094040d8a5e650572ef7a088
msgid "where ``node['platform'] == 'windows'`` is the condition that will trigger the unhandled exception."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:23
# ae242c0d1fe3451fa281e267ec3fe033
msgid "Use these keywords in the |resource ruby_block| resource to trigger an unhandled exception during the execute phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:34
# a2ffd0df9a9b4aadaa67f641c01b643d
msgid "Use these keywords in a class. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:40
# 1f3f5f69024d4760b39a9412eadac9e0
msgid "and then later on:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:48
# 4124cddcf8664c8f8feebae2b62175c5
msgid "or:"
msgstr ""

#: ../source/recipes.rst:145
# d8a6b5c99f464f3481cbc23b5dfaad72
msgid "Rescue Blocks"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# bd520b42f48e4bacbcdbee25c12d0b97
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# fc7e02c13bb148e4a15cd3e02ae36d20
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/recipes.rst:149
# c654aef7b06341589f0d18b185ab0b5e
msgid "Fatal Messages"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:4
# 9128cfa67ff249c38c5af0dda92a2888
msgid "A |chef client| run is stopped after a fatal message is sent to the logger and ``STDERR``. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:10
# a230e5ee6ef7412d9e279a9c7f490039
msgid "where ``condition`` defines when a ``\"log_message\"`` and an ``error_code`` are sent to the logger and ``STDERR``, after which the |chef client| will exit. The ``error_code`` itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:12
# fc46281192db4e18bcb6fde8db515317
msgid "This approach is used within the |chef client| itself to help ensure consistent messaging around certain behaviors. That said, this approach is not recommended for use within recipes and cookbooks and should only be used when the other approaches are not applicable."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:14
# 4c0c5a9f1d7a4e9ba6e5405f1a589c2a
msgid "This approach should be used carefully when the |chef client| is run as a daemonized service. Some services---such as a runit service---should restart, but others---such as an init.d services---likely will not."
msgstr ""

#: ../source/recipes.rst:153
# 89ceea18f36d491d8e404914d39f4573
msgid "node.run_state"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:5
# 6be0eef3eb18424f8bb6d9dffb38f8fe
msgid "Use ``node.run_state`` to stash transient data during a |chef client| run. This data may be passed between resources, and then evaluated during the execution phase. ``run_state`` is an empty |ruby hash| that is always discarded at the end of the |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:7
# a909542656b44988a540f518f8ec8ee7
msgid "For example, the following recipe will install the |apache| web server, randomly choose |php| or |perl| as the scripting language, and then install that scripting language:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:30
# 12ee542f313b460db402f425f7df8dcb
msgid "where:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:32
# d0622d40129b4a5587623a8ae10d86e8
msgid "The |resource ruby_block| resource declares a ``block`` of |ruby| code that is run during the execution phase of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:33
# d3fa2327478643a0a409012d568b6c5f
msgid "The ``if`` statement randomly chooses |php| or |perl|, saving the choice to ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:34
# d8c731801a27410ea4890456cc43b824
msgid "When the |resource package| resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:35
# 26c3d2ef71c84e1086c9644e01a90e95
msgid "``lazy {}`` ensures that the |resource package| resource evaluates this during the execution phase of the |chef client| run (as opposed to during the compile phase)"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:37
# a4386243dc9f4418ba0dca3dcf42300c
msgid "When this recipe runs, the |chef client| will print something like the following:"
msgstr ""


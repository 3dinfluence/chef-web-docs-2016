# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-20 12:06\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:34
# ff717e64495c4bdb83841eba24f289d6
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# a011bdf86f7e4ba3a6d77c11e35e5e4c
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview_nodes.rst:38
# 8284c6f8795a4638b26663cab9441a91
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
# 05badce4de7d41f69c6a7924ffeeabf5
# 6b9960a29b96463db059213c7885f86a
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:45
#: ../source/chef_overview_nodes.rst:58
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 652483911e2b4ae9a1dfd2865a5eaf09
# c0e3d4f323584c0984f5471051c1bee8
# 6e1c25d514d24d8bba06c8c15a311ed8
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# cb4462544d074c1486d4588a0e5cac17
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 8fae9f2ae77d4812be4d42d3c6747400
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:51
# d121f0c5437944f59825325ae3d883d2
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# bd83da4e29224a3f800124217ce122ab
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# d7202e0e293d4c9d8b8243f5597ae9cb
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 7852c6eb446c4fe6bf6ab028ee9adb61
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# fbe56e3b947549e98c44fc54a9f85e66
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 537b37bce8004e87b5391b95e3661d30
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# e51506a6e1f147d9a11bbae91a16db2f
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# f0421ffca0f5459bb15f55bc2142ae18
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 75bf98de76ff4c9b9a66a52da118a21a
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 6034c32508c3494b99533a7cd772f732
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 89a125ae93524bda9cf2f74c55337cad
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 331ade67683444f5899d09e112abb071
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# d4bded08da0a4b98bc3f17fd2944ca32
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 251c915b561c4ba3ab0c048b52c31193
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 00c973f953b24acda7cea349fd744d10
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 7e123faa83604cb28aea4d80be573d67
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 82e8749b26f144fdac346386caa0bed6
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# baf4fe83dd374c0d9d4f48c48a737ec3
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:65
# 90c3b16c2ce24b0a9a470f13fbcc3742
msgid "The Chef Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# 8fa3c0feafb9414a8f0f49ba1b123bd8
msgid "A \"|chef| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# 34a3716409934f1f8111952bd4d89cab
msgid "During every |chef| run, the |chef client| does the following:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# df26e2abefe342598fc2f5db6a1de738
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# 07f88db7a5a94f83a669ce8fab0e6255
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# d03df84f85ac440db2c2815fce61eae0
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fully qualified domain name| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 6781cc51f94d4f5db904f0661e8ba9dd
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 633d7be3b6334030ba0a6072e241a842
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 8166bea7b46b485ab189e622b8598dd6
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 6f3628a30a95493f8ee4ea3749ef23ff
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef| run for the node, there will not be a node object to pull down from the |chef| server. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef| run, the rebuilt node object will also contain the run-list from the previous |chef| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# d2d642f4c3a047b18e8a539b0790a455
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 3dd3dc671bd7488182ab04728a05de3f
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 64cf4ec418364cf6a06774bad9ce73af
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 52aba2a90fa74148ad855dd0c90da8c3
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef| runs), and then pulls down a copy of every file that has changed since the previous |chef| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# d2dab9a44a774202a561e32b068bcbfe
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 0ea8c980169f414583d901b1470b24bc
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# fe3bda89099c487d84602c6d1c8cca59
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 1d8e53b16e21439abb6d33eb96fca0c0
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 823471cc00cd494799120239272c712b
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 1e41d7251f374df096470d036c3c5c5a
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# aa90674fb1c2425285e1ad969ab66a0f
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# cb0be0932d5e4b97ba73890ae0a7fb69
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef| run. (This node object will be pulled down by the |chef client| during the next |chef| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 9cd8e4c647254f369ec6ae84192464a6
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 0cf3c175cfa2493b9198b8d1f04af43a
msgid "When everything is configured and the |chef| run is complete, |chef| stops and waits until the next time it is asked to run."
msgstr ""


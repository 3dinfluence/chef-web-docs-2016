# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:8
# 60a45c3327a84dfe852c10ed4a9160e2
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 7a566820e1a04339bbc3bd268349e8fb
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:12
# 3fad3d0908c846ddbf21c2b17891fb92
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/chef_overview_nodes.rst:18
#: ../source/chef_overview_nodes.rst:37
# 734847100f8b4fd8a9c20e7fd40de9d1
# 7f96acacf3374dedac12747c33b7d14e
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:19
#: ../source/chef_overview_nodes.rst:38
#: ../../includes_chef_client/includes_chef_client_run.rst:17
# 069732b5496b41bc9abf3996c5aa2683
# 764bebd3fb18498da12400c1a123c479
# 8ce735b4e98c41cba0227eaebb5b5cdc
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 93cfea1091d3436dbf579f350fd9a896
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 06f0a09d68f54e8aad3cf2f0d11d1931
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# d71ddaaf7b62498cb53a4ef6bdc37900
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 95a1b2d4dea44c5c8d89826ae8238ad5
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 9c86d19692ca4c579d3f0ce32c4a2701
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:31
# 0b0e90e9a9884723b5a3263441d9093c
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 86b7dc1e5fb4412bb2a20e04d2f65041
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 4ec7aedf2d2c45f0855aa1aa63175f01
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 112eb3a2bb19472690ace250a7572166
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 15f9d23bdd5647998ab4684f6b45bebc
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# f8044e387059416ab96381befcfd6752
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# ed92482359014bf49374d7bc2580168e
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 222043a2756444bca48aafa1a9047b49
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# e67413f385bb4660a36d3c1e2ded1dc0
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# ee43c50d1d814c0b9778b56042f4ce66
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 0749f167b39a414394faf7620c389083
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# a0db795e657f49d4b3b18c9e26f369b1
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 7c0874cbd2c84d06b5103246d52e617f
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 7a90cd194c2b4a29bd34101f2d2cc923
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# a341379ea2014b2e88828f9ceca405df
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 3e2f764a29ba48eab9b1bf6408365f11
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# a1ff9a6730c942b3ae73ecc24e3670b9
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 51b4a47e1fa74f44a464c3d2e280d1db
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 6220d4541d504b40b7414ee2f299ea89
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:45
# 5016b8a453164d79bca6aaa9c57eeb1e
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# 16788dbe783f441cb370d6c8929b1592
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# 3d158ad3f1c342f2a976314730e0a0c0
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# e134678dc585462eacfc813c1ff82d47
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 8c6e7d9b9f304d1a8f9aeef5c824f13a
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 57e4cb22ba0848138e745f2499e7d220
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 98c96c7c3f0c4cb2b1caf82c04f056eb
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 2de92d71a881495290b14927f3dafb80
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 7278654e4f4f44c0b6d88bd8eacffcc1
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 27991446ddf249eb94959a6ab2bdf250
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 9d999fd22e1a44eba800c415f6e933bd
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 0ba2a22a658e4ee1a5cf17c0cb37c39f
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 9b5cac484cb14171b8524cf07474f946
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 6dccde2ca4ed484fa36aab296f13c8be
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 7964cce4fbac4b0a94774d5b126547dd
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# 2fad52f09d5643d2a5fa87df757e720d
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 7d2466614ee2498096d4345954ba1ad1
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 50bf8e41b3364e409f4022c318221ee2
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). And then all attributes are loaded. And then all lightweight resources are loaded. And then all definitions are loaded (to ensure that any pseudo-resources are available). Finally, all recipes are loaded in the order specified by the expanded run-list."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# ceb29206e7524ef79e87194ab70168b4
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 21956f77a36e4cc7ba9df35ea8d939a1
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# bec36066e1ef43fb90935550d8e8979d
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 58671f17d799487894aaa7fdb4fb6ae3
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# 1b7bc382cb65498e996465c962af299d
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# 4256ebdff8354c10b9360a8972f42abe
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# f73e6d881340403286c1b04b63adbcf5
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/chef_overview_nodes.rst:49
# 6d2475a837fb4eba9d957db171b49741
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 4e45274bfb1a43dcb701dacf2831be47
msgid "The name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 687df4b1fd464f44b5246aafdfe90392
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 2bd7248f64464eb781d693eeba49e4e4
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""


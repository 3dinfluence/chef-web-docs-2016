# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:34
# 6cb57bb74df341ab92a5aa91e506062f
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# a225de19dc7c4c43a527119e7febd300
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview_nodes.rst:38
# aabaedfd83f74940be668b4cab168d8c
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
# daa7809ff46d4f1db623dd2ba7d1a910
# 22439bc41d3c445296e794dba78a660b
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:45
#: ../source/chef_overview_nodes.rst:58
#: ../../includes_chef/includes_chef_client_run.rst:16
# 201dd53fa55645f2a61826fafbc45b2b
# 30d5ee707dd34e58b5739c603b8ae91f
# 9743b5e9a5d048bf8411da0d5414b087
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 4ecf8872328a440f8a99a5414a02e350
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 7b6482678ffe443dab8a5a02ba9df1c1
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:51
# c0563cc51f2c45578f3cc33192d65ff0
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# d588d9338ff64386a5b2484390c0f638
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 1a315e350cae420c8a5252f3962b53ca
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 15c6207a3b8244c3aa97b21fa7692fe2
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 3bfb821481aa4e7eaee6f6550d466882
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# de07f427fcef4492bb638b1d6a6c6604
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# db13cdb79a774df885aa50ce3aada01d
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# ea8f862f2234432188a872fea8674d46
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 4e8223506fb84d3da453ff42ce831f36
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 66a2db7a7ee945bfb9477a85e8d825f7
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# a624857ccc454cc985889a3a963320ae
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 7a5c5b412c5b4536847b0e3bdd1724e8
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 05801c68d11640c48cca4d8b695af573
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 6cbe452d2bde4492a0e93f59c0c400fc
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 3d052b22f1514c719bc90450f40fbe1e
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 490580a7016d4549b9811e8653111c24
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# c4f1a434ce164e65be6818f929d8615d
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 200542f75bdf48f2a93e45b60d7d5d18
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:65
# 066dae9f34f443299ce7782b82dcb31a
msgid "The Chef Run"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:5
# b9c4769fff0a401a9d6db5bf990d6e3e
msgid "A \"|chef| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:9
# 76692cec0d5b4396b7e62ddfe4e06c8a
msgid "During every |chef| run, the |chef client| does the following:"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:15
# c9eeb7eb605b448d9ff61ef3c5b71d0c
msgid "Stages"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:17
# f4faebec3db64514afcd4f783f9287ef
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:18
# 98c024a05d9a4d099e1be49bc87658a4
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fully qualified domain name| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:19
# f0d05c28da234644a51c27675fbb07ea
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:20
# d895818c9a2e472ebab1d63380d7f89a
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:21
# 5bcabe332876430082e288dadacf9379
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:22
# 3a9d45580d274bd692af9937521bf75e
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef| run for the node, there will not be a node object to pull down from the |chef| server. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef| run, the rebuilt node object will also contain the run-list from the previous |chef| run."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:23
# 2f0bf215885f405d8ad0f930af39101e
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:24
# 4661ed069889450ab95ede50cd04fbd5
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:25
# c340ffa1c61d4e9092bae1d47d641751
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:26
# 4e37609ea5914ec59b45847647b94c13
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef| runs), and then pulls down a copy of every file that has changed since the previous |chef| run, along with any new files."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:27
# 0a0d35e8343244d0bfc02cc6e1e622ea
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:28
# 7e918736719d454985665f80b7b00a5b
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:29
# 3796ce03faf444969ca34053658938a4
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:30
# 0c6478180f9448dfa9171b950bc3ddf7
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:31
# 04ab58d2326240e3aad0b9bb56adb0f1
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:32
# a02ec7560fcd4d1dbcf3274b4b1606c0
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:33
# 6c810c4f12ae4b6ea26a9e5988fb0106
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:34
# 8688745530d64e868701d0a34175779a
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef| run. (This node object will be pulled down by the |chef client| during the next |chef| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:35
# 90deae8940814d62b0866c4e4e25aab3
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:36
# 03677388c19b4f9aa87faa435edea55f
msgid "When everything is configured and the |chef| run is complete, |chef| stops and waits until the next time it is asked to run."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-09 15:33\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:8
# 945b0171b4314a648bc3d642d083d74b
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 230d801d8bee4eae8e737c2483cb0b7e
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:12
# 7c9924f96ec54306a6b838ede729264a
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:18
#: ../source/chef_overview_nodes.rst:35
# 1bc7fbe4570b4ed594f3988069850b62
# 7647660a04bb403d919b9c60aac38f7a
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:19
#: ../source/chef_overview_nodes.rst:36
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 540d1e1570604182b1df6ece0b6640e1
# 3c6ad6103e4849a69950f95a93f44ad6
# 784ae6747a7e443b83acbc3edc3ef4bd
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 0d2b4d2abd92484fb916844a0bbf2153
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# f6187da2a63a4670a279df33b5da4833
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 47a6ea04256c45dbbf241b217cba9e8c
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# c998ad2620fb458bb5275482411ea27d
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:29
# afe9da8cbfbd4ccb846a8d778fecf609
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# ae85c414528046119726d1e5f9a12360
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 6de6d47a150b4fe5a7bf020461ef1dbe
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 5b1767bd741b4a96bddda868de130476
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 20c7af7b38c443df9cb19632fa230a23
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 140077d0bd9045edb7bff6f23643e113
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 5997b24ace044125a80a180c7a7dd698
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 5c5cd6333d9f4f1e9fa81c1af2bba11f
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 90e98563342346c597e4ee8641a4298d
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 0bde7cbafb874075910ebcb88ae17921
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 742a4d33e96145c4ad49ea923f484873
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# de964a86b6ba4eb9932f654a9c90012c
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# b040863c12d14397a09d2ad4a94243c2
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 620d75a6005d4085ad4a1486f35fd299
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# d172fa574a594a86a2dc88e27eadd99d
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 75de748a99b24dc39699acf685f4525f
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 72c0c2ba998d471c9f25a8b2fde6a1f6
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# bdb5422a106643768d18abedf6c54309
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:43
# 6a6cae8a1c104b9bb53b5278c8c24a1c
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# 4f63579b1bce4313ada88a227899d60a
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# 1888cdb8fb2d431288025ea08b887cab
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# 7892a4ea14e84668abc7e6fcf3d86472
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# a79332e14bf24a2d97980b5b78e575eb
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 199149d989ad427eb97d10e541fdcbd2
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 083f96e2dd0745cc966470bcea20f337
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 11ff98d7df1a4783bc645ebe18f6b9e0
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 2dfea1653d3244779fd663ceb20a871d
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 1157e0e56a8e4459a9ab433fae460c8b
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 49db42203e714cda918c3c26d607ed88
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 4a20db8b0ca34e0a8052572b5ceed94a
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# d03ecaf905184b8ab311aa9e4187269d
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# e87f0a4e72dd473d830b165f1f0c4a1e
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 45111f9d9d7a4739b9aff0be8f45dde5
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 378f08efed4740649290d3b94972ee62
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# f656bc4369ec438e8312bd1037e89a19
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 486fc862c0104f389e056f8247f54ebd
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# ce878e8d876a43a7bb5686f7fac426de
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# c8abb6985c15486fb523447650a84545
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# e9946c94a19d404fbaf822a1ba2d660e
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# d0671f9a03b243b18b57602294050f8c
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# f5c5db589b0845428324670162e16069
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 090cbb083a2f4098bc3bf05e546613c2
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/chef_overview_nodes.rst:47
# caece25e59c64959bd776fd4aeae767e
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# b1aa296383ab40a49575a3fe21adb6a2
msgid "The the name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 804a1d97d9f04404bb4cd6d363911db9
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 6f0fd5d19d7344d6b7e9fe8a74d52b83
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""


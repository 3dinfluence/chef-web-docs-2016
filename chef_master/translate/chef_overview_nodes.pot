# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:34
# 21c0f64fe33d483da8b52167ff2b2fe2
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 2e9c2c085514405697a0b042b3584dc2
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview_nodes.rst:38
# 30d14c3665ff42e7ac3f6f9e34a34395
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
# ca63571caeff4314a68cc8d7f7dcc3ca
# c38743b3ca434ef5aa21a1ae8a9914b2
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:45
#: ../source/chef_overview_nodes.rst:58
#: ../../includes_chef/includes_chef_client_run.rst:16
# 572192eacb8b4d0b981b1822f3a2487e
# 8aba2041b0ba44e6bd84ea42ba482fcc
# fcd202f50ca442268ce983645835bfa7
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 5870b1a5e8d4497fb0243dca48c80ea8
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 4a184e447a7b438fa9e1110c0e092f07
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:51
# 575f5122ee21486892e65c2092fa58f2
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# ed31b77adf794dc4aa75a72e171a582c
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 53f61c827c9645039d397cdd064a8515
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 967023a377e44004aaecac958655529d
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 651d86690b6e4e9c9542c5b9b2649c16
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# cb90294557a941fca8ad5685593c2eee
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# a75f056388b949cd9fbabaca5c5b188f
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# f172cc42e91a4d388208e108ef851f55
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 2165b49692ea41569ef90a831940fd01
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 8a782970a5d04cacb91a498bc8433787
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 5225e825b9374a52ab38b01b49144240
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 007d9bc15f274fb38fb5a176586e86c5
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# da91d4ceeb834aa9bc3f257023098eac
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 1e3e07456c85494fb13875ba415f50fd
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 7101933e4f1844159b4e6d7bca09b884
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 8931fa021ed44f198ddeeff8eab3bf08
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 4b6dcdba5b6c486b970ce41d4c598b21
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# adc142abd8e34613a639bf7dbc2197c6
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:65
# de89ea4e0b614e93bc3b842b41e8aefe
msgid "The Chef Run"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:5
# ea0689484f644d11abbafe6ddec7a57e
msgid "A \"|chef| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:9
# 4d5078a3fd8a42108f2f0d6da4c9a434
msgid "During every |chef| run, the |chef client| does the following:"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:15
# 4399527a888545bba2251555cf9c2aa4
msgid "Stages"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:17
# 1f6588854bc24888b2747f97a17baa9b
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:18
# 3a8ae57ecf0242b48a0b12d1a2b88176
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fully qualified domain name| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:19
# 38570b7907c34d53ace247fa3914f76d
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:20
# 14a2f74bbdb647a38a6b7fadbce6d17a
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:21
# e573f5011e794d82986f88841a2f0011
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:22
# 3c1bd477dfb44c3089dcf2fe6e4dfec6
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef| run for the node, there will not be a node object to pull down from the |chef| server. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef| run, the rebuilt node object will also contain the run-list from the previous |chef| run."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:23
# 9b71e257d4804983853edebeae4bcf1c
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:24
# 9bc29df8f1bc4e18a48119e72939fcd2
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:25
# e20e2aa1bad840cd9b0a39ac83001d89
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:26
# ac20eb6e39bd451594315dbbdc04893e
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef| runs), and then pulls down a copy of every file that has changed since the previous |chef| run, along with any new files."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:27
# 9d1fab9c35d046b7aa196f8f35cc1122
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:28
# e6e6ebf20df846bc9db53a6af4714514
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:29
# 4cc4e1e8a80e4c58b81abdac15f5540b
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:30
# 2b95e644dcc84f4d9c9a16cbfb46844c
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:31
# 6180fa6c475844738763083ccc19ae10
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:32
# 62352f3392444434b1cb7ca75a5d4ac2
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:33
# 7cfd64ebaf2a4feea1871d93bf7f9ab5
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:34
# 9eaff507a46c4d2a810d7eee5a5d1fd1
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef| run. (This node object will be pulled down by the |chef client| during the next |chef| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:35
# 8b76abe32eee42e8af5d70da43c1030b
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:36
# 68b70ca1e7c9499491054a48c0847003
msgid "When everything is configured and the |chef| run is complete, |chef| stops and waits until the next time it is asked to run."
msgstr ""


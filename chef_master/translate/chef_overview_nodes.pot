# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-21 17:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:34
# b56ecaf3332746cd9ed0b4fc79add50c
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# d5c86d8e0c644df888da79671a357d8b
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview_nodes.rst:38
# 37a0843091914af5939418d9f98523da
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
# ef79bd384f8a4e9ea59a05e03e8fe75a
# 962f5d1183e34b8c922c4e476201cd28
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:45
#: ../source/chef_overview_nodes.rst:58
#: ../../includes_chef/includes_chef_client_run.rst:16
# e74af0f6921746bca21f323c1e07dd87
# 0adb7dc46f814c0aa124a35b60aec2ba
# babe3768c689435b97d3c350d175bf12
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# eda8d5d8e5984d329ace08c0f1c9cee9
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 36c1e8ba961a4756875b48e77b379958
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:51
# 1e157bc20ea5403fab3234a8a6023dbe
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 5a718996f83c4e7a9a0cb6d24398b7d2
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 04eb1a1f5dc949f180d08bf41e34a239
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# e11359dbcb43488d93df2e5ecf1e806e
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# a793e5725e904a6db336c23abaac75bb
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 3e6e3f9934b94ac99480e613f7a22d11
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# cb3f93d69eea4fa48d6417d33ee74f54
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 99d14adf84aa40bf844a721b4c2185d5
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# ad3331e2c9734a08a0f75e403fab374e
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 72cba30be26d46cf8dbf87aa780e9ff0
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# af8ca7a6a08a4b909b9ca15dc54d1fe4
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 62fc042cf55a42e1a20a1183cbb0120b
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 8e8547a880f14aa9b6bc04142a33836a
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 7862987325f74647941102299c644903
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# afbbd074d7bc4185a17b81dbbb9c88e4
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# d0aa70e9b9234778a8ab93d7e295f887
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 9178123288e94db9a4ce8d92f12dcf22
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 8e240890f0ca4fe3bb99ee531b07139b
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:65
# 94828a0056bb49e3a12fbb44d4dee58a
msgid "The Chef Run"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:5
# c5c80be565cc4ccda47f782d34c78ef9
msgid "A \"|chef| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:9
# 27a1842752d6452a9bd0c024ab4c0eda
msgid "During every |chef| run, the |chef client| does the following:"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:15
# 70ae208c97ed4be284335f7da2aad661
msgid "Stages"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:17
# cc4453fa466f465fa0013ca255be0b42
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:18
# 4e31fae664ee444fa6c0cf6b3e3ed308
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fully qualified domain name| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:19
# bc45b91c97b944618b0fe7347a37e598
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:20
# efe3f9d89c584a4e8cf566edbc70935d
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:21
# 15daa67f906841e2aea0b3a29d9f8d2e
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:22
# 4a7e0f20fb3c46e09feb0f84e03d3b7f
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef| run for the node, there will not be a node object to pull down from the |chef| server. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef| run, the rebuilt node object will also contain the run-list from the previous |chef| run."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:23
# b98e1e461ad3401d839ddb0ef93847d5
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:24
# c951569d77d94f71a0e5343ddf5221ef
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:25
# 8a2ab54341a34c93aa3253f6d894bd81
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:26
# 38dd7299af154a128a1a551c4af97c39
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef| runs), and then pulls down a copy of every file that has changed since the previous |chef| run, along with any new files."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:27
# eb69255c25834a018c946c2f0ff7d77b
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:28
# 9aebd228009e40b387931d8a993601d3
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:29
# 10109e4b7f544350ba63ca5fad868422
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:30
# 416e80751a2a45a680fce08d297dbd78
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:31
# 3a60f4d46a0e449cb68ea601517b738a
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:32
# 7d02c6020c3f40638722d33a6d62fbfd
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:33
# b32b70e841cc40c0b4b0ce5f32a78c0d
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:34
# e7b7d71ed4ee4aea995dedc6636738cd
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef| run. (This node object will be pulled down by the |chef client| during the next |chef| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:35
# b666eec0771f4fddbfa51673a1ea8c3f
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef/includes_chef_client_run.rst:36
# 647b328849f445a5a172faa1e62a6790
msgid "When everything is configured and the |chef| run is complete, |chef| stops and waits until the next time it is asked to run."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 14:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:8
# 1725951868444408bdbd6494adf3f618
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 8a1d8661681e4ec3a9ec603220cb0b7e
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:12
# fe6099f91b3c4af5b49f0566d121da41
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:18
#: ../source/chef_overview_nodes.rst:35
# f5ebed5f47c944b1827d574e7e313a92
# 62665e13bb09466d9070cc07ffdde84d
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:19
#: ../source/chef_overview_nodes.rst:36
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 4e68fba826e740ed898b5e2012536de9
# 3c6189108f0045f0958b291856ee34ad
# a8b7a0dc911548e09e55c0095a8a6a43
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# aef1904e12784510b5a179651abf4927
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# bcc75d62e2fa4f19a076494a996744eb
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 75e6f435b0d24f69a87a024c4bb5b643
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 6b08278a3c4641ac8ebcfc41356728b2
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:29
# 54ad7673b0c94c51a9f2db0dbeddeef0
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 8a1fa49822c1488c9a6e3d48a9144b6c
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 765389807e724d9a9b322bed7a55c05e
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# b5e58406c4504178a178ef0a843076d9
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# ca532c546cb8423c9900a0496ca420c7
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 3ee28d5b62d541e597b7098310fa6ef3
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 5898b1692d2643b79917ca5ad942739a
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 5971e0b9ecad4bfdbc16c508ea8d08a3
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 15de1e2126d74d0bb148b9cff0e81121
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 5dde5b2498084e2d8d411de892d549d8
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 71a1238915214fb2a426bfd459e90360
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# e624b7bb869145b983ca0860af8d9933
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 5aaa82e5b07c45869df16a57c3fe9f9b
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 7f98992fdffd40529cd030f7988ce3bd
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 78d6ab4f9f82494f8e232e5de06fbad7
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# a32a34300f4e4be0bbf94abbcc0c2be5
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 85e4fa43aba24089a978ea6a4872b584
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 3dabf8a21893432fae3755d2a33da8fd
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 8c38e6bc3f734b6da97a3989b54b5680
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:43
# 45d2427c3d7b42f9b60d648c7d1acf8b
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# ff84907013524f0b9cd432f12b073068
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# 239ec66a4873494aa529ed7804121690
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# 49fa111699044c829a636efa6e318ee7
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# 935928a541a447799ece103de3b65f78
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 0d138dd6d5e74e1fb43947481a912f17
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 1a26b362d8364a02b949707887461ebe
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# f774554e92cc4a64920179abf53f3df1
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 84bb6a6ce451472fb7d9199acec7d3c1
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 7f8e4ebbfc54452a8dd17aace57363fc
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 72def7fc392641bfaad3e672d27d2e33
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 5f2e243c3c9f4414b91f132b1476c6ee
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 0b6c340698f04ebdb308c9506c98b922
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 10e5a7caae9e4aef877407275d4bfed7
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 4a38ee254af242fc856f53c6380ff223
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 1dd6e5e7dab24fb597bbe6dadc199e8e
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# c7c2cfd8d86a45e3ae66a19a03b763b4
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# f6f40c6f76d34aa894c961fd737bd36c
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 5fa6f91307fb4ed2abec6ff22956f086
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 2cab5cb0c2c844dda595a313047156fa
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 89239532d2164ec38b38daa9c57d7e03
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# b77d0902f10b4daf89554572b1089ea6
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 4c24a9f0922a47b19ad78bb6e15b3bde
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# b15afaa255a24790b6073855a89d332f
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/chef_overview_nodes.rst:47
# a5d2420d89cf4114aec7f0e50718470c
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 564930d525194b9ab0b1601998bad289
msgid "The the name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# d13f37c6a8c04de08753f5838b97d51d
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 2fc77dec586c4e0ebbfbf212c9bd09d3
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 15:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:33
# 422862d1f14c40a3b4a95529f7ae972d
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 4c7e6b07836a406fa42d606fbd00572a
msgid "A node is any server or virtual server that is configured to be maintained by a |chef client|. A node can be any physical, virtual, or cloud machine that can run the |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:37
# acb7abade0244be8bb1da3364d1c13e0
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:43
#: ../source/chef_overview_nodes.rst:56
# 7dd144f0715a4e5f99284f934e4b4c3e
# 5e78d5588a164871a3bb425301d7c54e
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 68f94a43776c4306ba3b26e976d9c641
# 8594db7c8447418283664c5b9729e5b7
# 90d8a839a698471c97b85470ba05c640
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# 1dad430226b74a07bc5c824f37b2a646
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 656f7a1e016c4a0a9037bb6ac91c832a
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:50
# b2501121f4d345619c5e4a6e8ced53dd
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 9d7118876186415683e2f88bcbb44d04
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# a98c42a29b2b4b2b9d80f27cc966e906
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 9a52e3b269e6453f8fd2aa85aa0d2d77
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 661e89129a6f41b5afa6047f14dc82cb
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 9447ba2320ed46e99d85f394a060f0c1
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# ef9e7cabf755451eb61149fef08c4f8b
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# ef8422fc2e094edf9bf97fe5e88ca4a8
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 778260cf3c00406ea2332f77b5754b22
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# cc185cfeffac49cd9510311bf44c2eb6
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# d9b6e6c79206402a9ad505d45b82208d
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 33919841df8e412999ce9605181fd92e
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 961afe0b1dbb4f63bcd69783511de546
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 0bf7a00fe3794afb947068e7835b92db
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 08c508bd06e141afa11bf237ee641157
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 6b407e3a46a342c0a5febfed8a34ef86
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 4b794edc075b45d4adadc214521f8c02
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# c906b6a2e0d74ed9ba61cc25dc9faed7
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:64
# 48dcf9a0e75a4acda4a76a86890080c4
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# a4f91747e4b84ca0a5537efe5f516900
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# f62bcb1d4132464cb5337007d63bbc1d
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# f2299b79a15d42c289205f27381bf0e6
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# 704671fb4a88413fb0a634bdcf2966ae
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 4df121ce2d33405d98ed904c488b1269
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 8eec291035fc40aab8a7f43462e24b29
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# cf63972fc68949daaa0c3bdda51e1ccc
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# a52438018d8a4f3c9eb3239bceffca72
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 4618f0e6a35e40479d7ae0a998c911db
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 29b78d65c3f34cd9a0168fa72edc87a3
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# d64cd36786794c079c98a8492094c192
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 18f3b85406dc47d2bc04a36dd9a42391
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# f4f63465419244ef8dd512bfac2c4c26
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# fbf411f5dda24c9cba0320a74a33dadd
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 8cc46d3ca3b24950b25f513cc3e6de65
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# ba72a33c4a4e4bd98a8febde9604c694
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 0adfa429602e483c9ecd108bf37db895
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# ab89a630e37d4885ba127a46a87e6690
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 2262a248a9f04b4595f3860f0f743776
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 8044668627374a47921ebbdd5bd768c5
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 753c5319e79d4fa2b5e5653f01cd7b2a
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# dbbe7dbbf8e6471ea4e0b78f2ca37186
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 9fac41ad6eab424f9c07f2fcc2e972ac
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-31 13:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:8
# a9748430c2ce411dbc5910f9c9d35fc2
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 181fb52a13ea4c5cb1898dea5a3c031d
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:12
# ec9edf15a5584794a60479365f4f1e49
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:18
#: ../source/chef_overview_nodes.rst:35
# 7c51fdbd41ec4a9f943fc23edea53960
# 07b76e33cebd42c8a3cb5bf5b54af92e
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:19
#: ../source/chef_overview_nodes.rst:36
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 80588ff78a7f47d5ba31ee058759796a
# 18d648611dc24d7c866567a35c84d1f6
# d98c8382bbce429da9ce6d91c16eebab
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 079af52add3e4b8abe2069079aea0609
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 2fa5e75086bb4ec0bb693930b290a2c7
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 14562f84ebd34070b9b1ec5c00609fdc
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# a746f3bb2bef43418f0a6c0137343144
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:29
# 483cefab84aa43159f07499b935743ea
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# b7171bfcc046489dab7d50ed7fdaba0a
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 9e8a1d2768754f46a10205d5f2a79527
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# b12eeaf23a1a49149c015b7bd038481f
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# ba67a06010dc407a8c924b7e54c3b24c
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 8b4ec6a276574cd9bcc7fc6f7964d936
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 71b409cee4104510a5e9deb6caccf278
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 18ea1da72da44191b664cb63c34fb5fb
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 6cf483edc6144e2a80117cc01c2078cf
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 7bdc3350aabb45f4a22d68881e1800e3
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 184dce47f3a94659a4516d41ca913537
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 9d1eadf7dab942caa78216f16ec734cf
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 1f6c5d8395694f439bffd79fa739b085
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 3ccf86b7b04240658cd8028dd9beed57
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# fdb1c81e8b1948e486d9a8023f59be16
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 18fda5139fe648108d2451f63e613cef
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 1591c37377e64f1fabb7ac1c0da985e7
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 0e2514bbc6ca40809a8b1b90e9e10553
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# b8325558072443fda08b8f816dad472f
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:43
# 8af2c2b05ad84eff91c7eee20eb91366
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# a6d2de5a09664590b22fa446630eed58
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# d217065b8b6d4003b2b66dd6fb45f243
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# fd849d9064cf44c5bad29aa850fe5bda
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# f8b59798556544f1ad25a87976c8dd90
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# f580b91018fe4416a64d39dcbb864ba7
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# b248ce29b64240798a18100cbbf6e425
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# ad27c5ecb56241efb59efa4f1545f6e5
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 8883c0bd84b048edbe3234c828dbe913
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# e40047554c8a4ed1a8e1d9ba99767e90
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 9ec0c6829b2f4086a172b0ee442cd899
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 2ed2339a29a541bab30c4ad67cdb58f1
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# c6db8480270644fea54e3dcc177766bd
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# a6c58cb272d74814ae452d8438ece9c9
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 1fee6fe5f7af47f280fdfbd646735d46
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 2df5ea1862554b9d97283bca1ef8794b
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# d96e89ad5dd34e46bd3ca2520de90074
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# a4194f9e722346f38d420b75379a2b7b
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 76bdafc670b9495d86975843963f5a25
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# fb7ef2131fda46d1b20b8bf159a51393
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# cd6158166fe540b6a06468ca36f617c5
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 6de0c78eca5c41738e992aec4f82960d
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 4105e16302d046aabb5e6ede0276aae0
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 94533fac3ffb4627b34dbca2e234cb3d
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/chef_overview_nodes.rst:47
# ccba458aec114f73b38ec9448425af63
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# cb24c75af89a4467bc1268cc7ddaf82c
msgid "The the name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 648096429b5d4ae8aa38b697caac469d
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 1c717abea0024841937be321e61006aa
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""


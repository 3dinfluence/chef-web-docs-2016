# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 20:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:33
# 550e91bd489f454bbc85a469d0e5b95c
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# bba9bfdbb29b4c939c3f95b9543a3ceb
msgid "A node is any server or virtual server that is configured to be maintained by a |chef client|. A node can be any physical, virtual, or cloud machine that can run the |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:37
# a18504ebffd44a42a17b8e5fcdfdd6c0
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:43
#: ../source/chef_overview_nodes.rst:56
# 542e164c53af4774aee56672640b6534
# 49bfb9e9a3d74038a8ea288e8944ebaf
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:44
#: ../source/chef_overview_nodes.rst:57
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 17cacdab83f34d9a8dd0400dede22649
# b7d57c956f49433cb1b7eb01b34e9546
# a48a07d8ce6249cda865c4322f982455
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# d6edfcb5684345e796495c41c47d974c
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 7978ab57bb0d4d80990d9d17059149dd
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview_nodes.rst:50
# f21308af37394386a5d5ececa4ae6adc
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# c9ff215eb2514cfd8d87eb3d45ef1cef
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# fb84eebdeae847da82f80ad6d33ea317
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 16bdd880f3b5477aa4754b4d1a32dd0b
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 26de6dca9e6744b6bc02e0f2dc705970
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 54c586b63fc148159e8e749cffcb9646
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 6f382bcae3a4474ebab991debabeba7c
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# ed630fa1be6947d5a3723c951d7b7c3e
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# c606ac4a6fe141cf82ea8e82b39ee2d4
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 55ee50e871db47c9aee0555526c104f3
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# bda3057c264345c1b9a13f5140edeb63
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# a629bb578feb45f09f55daa00754929c
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# dd3590ae914b4c2fb84af18a9c36ce10
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# bac6616cfd4a4994bb587ae9b265a1eb
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# a2ba3d2d6c10499eae3075a705a666cd
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 7dedc5b2644e4e21add06aad6d9889d0
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 8fdd7e21ad5c439393ee332bed6a6f2c
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# ed5e7d966b5e401b9997c238cfad3ef1
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:64
# 2c9b7786dae547c4b69b3697922b1cce
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# 90407bd1c962455bbec91e5a92970fdf
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# 74bc42b6e64149af89f6076d7569e03b
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# e211b299bbe242d9813a872c49f6a674
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# c42ccfdb7a754905a6d36746aca12404
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# e740387f8c6a4472a47a0bea80ef0b1a
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# b2fdbded35fe4e6dba6964a26961f948
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 0e8c4a66bd7045b68287c29783e77508
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 5116e84a5d9e4c0e8b023f2326b05d56
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# c059379e2c5a4ab9b8d79ecdef2c704d
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 450e047a12104a73837d5e2b34ebef9e
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# fcff3f472126438d8ee4c26d5dc8fc55
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 6e0498a75b1a4936ac8bb173f4809d59
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 4ddd1083dfd5477888e4237635e0dcc7
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 783bed3d005e4575b6a9014bcc553ca3
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 8e42d88f99984c58ab66987bed11570e
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# b9bbad21ec894dd3a8f4716a4b9f5c65
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 9cf7c258eb494228952a336dea6f189c
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 906b6cdbc63e4f04afd22e44604a56d7
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 9c7b558d2611474a8d3f82321f6638ef
msgid "The |chef client| configures the system based on the information that has been collected. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 89866be10abb4905993df0bbc6b2c044
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 2b7017ad63aa4e9897d3068674272a88
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 8c83687921574afda2aded83666e64ac
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 2559aeb8fdb04c73bcc4e684c403fe8b
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""


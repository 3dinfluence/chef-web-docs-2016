# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-02 14:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_nodes.rst:8
# 7bad9f9158ce430589f31e98435908c5
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# c39d1720396d435089d90cbccfa95d0f
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:12
# f2bc5cbef8d948578aa73cd02fa73551
msgid "There are two types of nodes that be managed:"
msgstr ""

#: ../source/chef_overview_nodes.rst:18
#: ../source/chef_overview_nodes.rst:35
# 4ff6492681f048a9b0afda8b43ba5afc
# 10932159375c4621ace69a3db19513c1
msgid "Feature"
msgstr ""

#: ../source/chef_overview_nodes.rst:19
#: ../source/chef_overview_nodes.rst:36
#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 9bfc21a0205542b6987e1b4b1ec31104
# 4a2dcb4afd714dd089ed790cbfaafc5f
# 5cb09fbe36b4428bbcadb56e24856f95
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# dc81c5bc665b4b68be503fb274fea840
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 5070cb05757349b9a3088327cbb978e6
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 9f622ae9a5884b638727fc646c2b98bd
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# b659ac43c38e4c248cbdad56384c1662
msgid "A network node is a networking device---a switch, a router, a VLAN---that is being managed by a |chef client|."
msgstr ""

#: ../source/chef_overview_nodes.rst:29
# 2bd076663ffe4377ae2ec594c5d1a2d1
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 41c55a79b78a462da54ead674da2de1f
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# b93dd0de4aa4478ab93abae8dbff0d0e
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 020c9df5a4da45139eb313beedf1e816
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 10f2949687d346608392e344dcc6dd15
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 5c1e470417954ced9b3e5f5b102a50fc
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 254e6a4270094242873795206eb12f50
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# d6cce4db9494427ab42abcd415217ee6
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# fb7790d11f5d467ba19da86cacaee3e8
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. The types of attributes |ohai| collects include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# bc497a78151540159c290e83d5b73dd6
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 601f43b73d1e4e668aef5a69c78d5e79
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 7b320ba929fd4e8dbe6ff153d27d032d
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 3390b3073dad4033a84fc84a3f16e1df
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# f826e976c54844e2b999f761bf4db5db
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# a123652cf8fb4bccbe06ca1d7919e4d1
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# f6fe62df0e90447bb1c3912b0c203699
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# c189c196205249fc8279ba15dddffa7f
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 125946744f6c4d06ad67726e4c8d8f26
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview_nodes.rst:43
# 20d21ad479864761bb74a0ff9ff15a92
msgid "The |chef client| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:5
# 11b44e0e834448108217aee0e5799bc0
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:9
# c25d93df2f0e4b46ad74af4c94b1eff0
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:15
# d9f0948a2c8c4691abbed79f9f4cc281
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:17
# 211d052d55ce4e4fa00d5cc08f75098e
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# e3c32cf8925a402b802d909ef76ec9ad
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 3d8e9d6b13394964b06f8d902496d260
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 71ad1d15fdb84be09e50f313e16ff87a
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 058852aa87444c0790d2c9e762b139e6
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# c8296a28659b416c976571e02d2df1a3
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 49ecc31cd3c445859e7dd59a29e8e55e
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# b2aa67f72d3b494a94ed0eb2b2ccb1d1
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 205a73d637a141fa98ff7abdeea9e19b
msgid "**Get a list of cookbook files**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 5dceca3749e2467b908407d8e9c3d61e
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then pulls down a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 9940f79379594a8a95fd6a4760114dbb
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 2bd1fd9f5bcb41f18d7a094c606db233
msgid "All attributes in the rebuilt node object are reset. All attributes from recipes, roles, environments, |ohai| and attribute files are loaded. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# abaeb25f0e914a1b80a6a068614959b2
msgid "**Identify resources, build the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# d08d32be00f84649a7a2c91401a68bcc
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. All details about the node are put into a single collection. All definitions are loaded (to ensure that any pseudo-resources are available). All libraries are loaded (to ensure that all language extensions and |ruby| classes are available). All recipes are loaded and each action specified specified in recipes are identified and any |ruby| blocks within recipes are evaluated."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 57bc55a47d6441eaba9ca997fe9436ac
msgid "**Configure the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# d8d18be368c94d4ba134a488a403fe90
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# cf743288487a48d9b58d044e023811b7
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 34b855b43e7441959a2e5acc05bb8eaf
msgid "When all of the actions identified by resources in the resource collection have been done, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search. The |chef client| checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# cc780139508e4a54954e84c688701eca
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:36
# 270bb7e0cf3547859cf9668db91ffdb2
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/chef_overview_nodes.rst:47
# 3dc4cd85ec45458ab409f89e98796675
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 08f9842ad1644e408ce22aa69d9d936c
msgid "The the name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 4eb4de56d9da405a90d08df8fa531f60
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 8ef1ff6af56f4a39a615dfe540453810
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""


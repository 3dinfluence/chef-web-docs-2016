# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 16:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments_manage.rst:34
# 04a4ce6c4ce54c2697d5453220da9edc
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 75257ec0d90f4c818dcfe41d6137ac58
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# c587ed59c2d04b899488a255107fb6a1
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:7
# 52811269e0aa480d9a95c75b3288397b
msgid "Using the |chef manager| (in |chef hosted|, |chef private|, or open source)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 96e9e27625684797890233231c9754be
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# d23e40dcc91c42398b64066fd7b1dd00
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 8475df362c404974bae835ee40a3e3a0
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments_manage.rst:39
# 921f3d1cc824443b9257533ec7fef029
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 7c793387185641559d4dbaaaf0d849b0
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 0fdbc6c93cbd4923b6b291f3dc2d9c30
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 1a2c57adff674943b4b79b19fd0ca64f
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# b3a7d7691f0f42df8b7cfdb159da4166
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments_manage.rst:43
# 18fe23212d7e47799a350bd82f95e0f1
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# be04080b1bc54f75afdfbaf3f113b4ab
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments_manage.rst:47
# f5bedebf9a24468ebbc303db7ae51b3d
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 174dcecb4a594f02a01024fdae1831b1
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 33c73c58cde648ca9e06d114915429bf
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# 50d72a65f10c41cb82bd2d96a897b24a
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# cdaa0ed55a6749d7858eb164017b717d
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# 5c2efc32911548ec8d2566a3e44efb9b
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments_manage.rst:51
# 6f3ab380fb4b4e459226a59a7509675b
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 2d61c2ffdbcf4fd3808dbee9fbf2275c
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments_manage.rst:55
# 26f867c0469c47bcb3268145284f337c
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# 86f6389bc2ec4187b66dc2506c379d85
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments_manage.rst:59
# d40759ef0afc46e4a7762edd53900ce2
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 3da4fd813e0744fb90cac135627458d8
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 1f6b3a3f25824a51a90ee403000d69aa
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


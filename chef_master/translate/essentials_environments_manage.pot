# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-22 20:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments_manage.rst:34
# e8a7684539864d56a01217d465439eba
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 7e8d5fd6e8fa4e00a707bd906b3576cd
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 6c5ec2aac8834a1ba097895c6938aba7
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:7
# cbb488e8e9b549bb82caf4e0379cca8a
msgid "Using the |chef manager| (in |chef hosted|, |chef private|, or open source)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# cab989e8775746a5a9a8774e182e663b
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 21caff00666d4f67824137643133eaf0
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 7a60537361b9415d80a183cbfc7d8a7f
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments_manage.rst:39
# 39fba8f0d2774222a65167eab505ba12
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# df4de4ac17fa4d11bce7da01359158bc
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# bdc5890679604c34bb78ebae0db8fd37
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 6d34f4eb4c7c4bfaadda6ed8fe855d96
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# b920533c60a644169ed3f3f67c7ecfa0
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments_manage.rst:43
# 916f7b215d744298bb78ac00b0846c9c
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# cca91c88a353407b980886f1ffbc4530
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments_manage.rst:47
# b56306df6b1c4bae93f108dd766aee96
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# d22c42855ad341b580a21647c86ce10e
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 936befc2266d4096a51142335c9ce2f1
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# cfc688cd3e8e46159c18ad3eebbf1558
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# e541f9e771d44399a5c88812ebf68564
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# 74eac9adb71e41408a270e71797ff9bb
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments_manage.rst:51
# b67248606a45400a89f75d43c223cf03
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 845654e5fca34518b2fb129755a6bf8b
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments_manage.rst:55
# 2973743fbcd044aba4cb181e707567f1
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# d1bad7e825f84c55949be34c115dcd3c
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments_manage.rst:59
# 4f78fc243af5474e9d24842c2ab4348b
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 3c476a53a5b04ac49d2a5a5da27d9298
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 203b7110661a43b1a4d1272fe7628a6d
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


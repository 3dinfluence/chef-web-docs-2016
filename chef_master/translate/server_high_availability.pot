# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_high_availability.rst:7
# 9d4aa1397d2d4c2ca822feac0b2939ea
msgid "High Availability"
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:4
# 527187d7036b4e0baef7aa94f7345e4a
msgid "The |chef server| can operate in a high availability configuration that provides automated load balancing and failover for stateful components in the system architecture. This type of configuration typically splits the servers into two segments: front-end and back-end machines:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:8
# 426dc5c2c6264d3f9f01efcd5a34bbad
msgid "Front-end machines handle requests to the |api chef server| and access to the web user interface. Front-end machines should be load balanced and scaled horizontally by increasing the number of servers available to handle requests."
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:10
# 84ecb243ebac41728b0b107c2c712105
msgid "Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication."
msgstr ""

#: ../source/server_high_availability.rst:11
# 42a234009b9347ada2e6c717f926423a
msgid "For |chef server| 12, the following high availability configurations are supported:"
msgstr ""

#: ../source/server_high_availability.rst:13
#: ../source/server_high_availability.rst:17
# d775518a6c244f438dda0a6f8d50e10f
# ce1262c072bc4ac5a7526dfb11b42d6a
msgid "DRBD"
msgstr ""

#: ../source/server_high_availability.rst:14
#: ../source/server_high_availability.rst:57
# af228828986d4f519d508e2853ce9c02
# 030374cf27d54bf19cf5ac038540bd1e
msgid "AWS"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:4
# aa4050bd935e4084ab8b40fa71e6a9e9
msgid "|drbd| is a supported high availability configuration option for the |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:8
# 8083f775261b42879827c92178b15023
msgid "Front-end machines are scaled horizontally, and then load balanced using a hardware load balancer, |ssl| off-loading, and round-robin as the load balancing algorithm."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:10
# bc75e10cc63a4bd59013086c50516127
msgid "Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of |drbd| and the responsiveness of the |chef server|. Failover is achieved using:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:12
# 60b2acbcd41e49c8ac9dfa063203472a
msgid "Asynchronous block level replication of logical volume managers, positioned between the two back-end machines"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:13
# 7a8472b78fca4de0ba2ccd246f9eb433
msgid "A primary and backup cluster election using |vrrp| over unicast TCP/IP and |keepalived|"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:14
# 5f8616d51f954e5c9ec1980cb871e8a9
msgid "A virtual IP address to the primary |chef server| that is maintained based on the results of the election done by |keepalived|"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:16
# b539be5db499401a95a03389ccba77f3
msgid "When the primary |chef server| in the cluster fails, the |vrrp| heartbeat will stop. At this point, the backup server will begin transitioning to the primary state by:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:18
# 880cddf46b9a47bebea300e2fe8416e7
msgid "Assigning the virtual IP address and sending a ``proxy-arp``; this step transitions the virtual IP address, which means traffic will flow to the back-end |chef server| while it makes the transition to becoming the primary |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:19
# 95fcd75f09454d4ca7463dbbd7b0ef4a
msgid "Attempting to take over as the primary |chef server| for the |drbd| device."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:20
# 2da8c994f5704ccc8e558f8a8bc1ee8a
msgid "Starting all of the back-end services."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:22
# aea394d37ad94e2dbee15086f29b2314
msgid "For more information about |drbd|, see http://www.drbd.org."
msgstr ""

#: ../source/server_high_availability.rst:21
# 916e1e1cefa6417fa25d769ecc4888b2
msgid "Graceful Transitions"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:4
# 88ac22a1d1ab43abac48057d127a0880
msgid "The |keepalived| service manages the |vrrp| and cluster transitions. It should be running on both the primary and secondary servers. To transition from the primary to the secondary, simply run the following command on the primary |chef server|:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:10
# 4947e76fe3964117bfb9de4c5d496d0f
msgid "This will initiate a failover from the primary to the secondary |chef server| and will cause the current primary |chef server| to remove the virtual IP address, stop all services, unmount the |drbd| device, and then become the secondary |chef server| for the |drbd| device. Meanwhile, the secondary |chef server| will undergo a similar process, but become the primary |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:12
# 2b19e30c50954a28b9177c281538fddf
msgid "To view the progress of this transition, use the following command:"
msgstr ""

#: ../source/server_high_availability.rst:25
# c5fe23dc0d134da392758f6ca4676efd
msgid "Split Brains"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:4
# b25e27619c1941448a73de692f2f7ea3
msgid "A ``split-brain`` event is a concept of clustered computing systems in which the cluster loses its heartbeat communication channel and becomes two unconnected pieces. Recovery from a ``split-brain`` event can be a complex issue and different clustering software packages use different methods."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:6
# 174622dba2524b57bc8e10f5a058c36c
msgid "Failures happen, so completely preventing a ``split-brain`` event is not an absolute possibility. However, it is possible to alleviate some of the issues that crop up in any ``split-brain`` event scenarios by maxing out the heartbeat network bandwidth and optimizing transfer protocols."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:8
# f569f9bb84fe4eb8ad153085f216248c
msgid "|drbd| is a shared-nothing system. Data is replicated between hosts over a dedicated network link rather than stored on a central network-attached storage (NAS) or storage attached network (SAN) to which all hosts are connected. The most critical issue for storage in a |ha| topology is loss of or corruption of data. Maximizing the amount of data that can be passed over the wire while all systems are up and running correctly minimizes the chance that something will be lost or unrecoverable if a host goes down."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:10
# 669fe0f327a54e9889f7f499854e5df0
msgid "At any given time, only one |drbd| host has ``userland`` access to data, This host is referred to as the primary node. The other host runs the |drbd| daemon, but cannot mount the storage into the file system. The secondary node receives information from the primary node, and then replicates disk actions on its local storage copy (even if the partition looks like it doesn’t have a file system to which a ``mount`` command can be sent)."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:12
# b56a850e1239456c9cc2bec4063243a3
msgid "The approach that |drbd| takes to ``split-brain`` event situations is to degrade all partners still alive to secondary status, and then wait for manual intervention. This is called auto-fencing, with a goal of minimizing the potential for damage to your data. When you lose one of the partners in a |ha| topology, a bit of manual intervention is required to ensure that the disks aren’t in a bad state and can be brought back up. These scenarios are discussed below, including suggestions for diagnosing and recovering from each scenario."
msgstr ""

#: ../source/server_high_availability.rst:29
# bb2b7c649a5c43a595ecaf49e25f4d13
msgid "Custom Handlers"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:4
# ba9d19f6268f40cba689c7247fab03a3
msgid "|drbd| configuration allows for custom handlers when a ``split-brain`` event happens. The basic handler sends a notification email to a configurable email address so the issue can be investigated."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:6
# b3a2f4a3cf3d483aab34bfea2cd7624a
msgid "The ``drbd.conf`` file that is used with the |chef server| specifies other built-in actions that may be taken in certain fault scenarios:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:14
# e0dd228a8ca54da0b668dd413706103c
msgid "What this means:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:16
# e525496f1b014684b25c23eebf8d8537
msgid "after-sb-0pri: A ``split-brain`` event has been detected and neither node is the primary node. The ``discard-younger-primary`` action will roll back any changes made on the last host that was the primary node."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:17
# 6f492e84e4db4f1d92b2183bb4881708
msgid "after-sb-1pri: A ``split-brain`` event has been detected and only one node believes that it was the primary node when the event happened. The ``discard-secondary`` action will continue operations on the primary node and will assume that the secondary node was lost."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:18
# dff47eb4dd9f418bac25609981afd84a
msgid "after-sb-2pri: A ``split-brain`` event has been detected and both nodes believed they were primary nodes. The ``call-pri-lost-after-sb`` action will attempt to apply the ``discard-younger-primary`` from the ``0pri`` configuration to determine which host should be the primary node. Once determined, the other host takes action to become the secondary node."
msgstr ""

#: ../source/server_high_availability.rst:33
# 1da83a8d9ed84481b3aa3f6b4a7f86e5
msgid "Assumptions"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:4
# 64cb928a56694125ada496a6bd065dad
msgid "The following assumptions exist when the |chef server| is deployed in a |ha| topology:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:6
# a3ef0568675c43f1a0ee505a356d33d8
msgid "The back-end processes run on two hosts: ``BE1`` and ``BE2``. ``BE1`` is the |drbd| primary and the master |chef server|; ``BE2`` is the |drbd| secondary and the |chef server| backup"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:7
# ddf4e997ca2c4155974702ae2ab646ad
msgid "The back-end uses |keepalived| and a dedicated network interface for heartbeat"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:8
# f977a199065e415e951e94a3f1ffc5be
msgid "The back-end uses |drbd| for file redundancy"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:10
# 8badfc4041964bf7a8b6e493b0fd1893
msgid "On each host, its own status is reported first, and then the status of its remote partner."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:12
# c6b6ccf37beb4c249450d20fc0ad8678
msgid "When both the primary and secondary nodes are running and behaving as expected, the contents of ``/proc/drbd`` on the primary node will look similar to the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:21
# 43d1d8fcc0df43039ab819be4d942f68
msgid "On the secondary node, the status will look similar to the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:30
# a50016cd27db4330b0e1efb10131269e
msgid "For information about the settings in this file, see the |drbd| website: http://www.drbd.org/users-guide/ch-admin.html."
msgstr ""

#: ../source/server_high_availability.rst:37
# 67ab6db758a64bf7abf238fed1cdffaf
msgid "Failure Scenarios"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:4
# cb6df15f30bd43988702c01c3a3d6819
msgid "The following four common scenarios are discussed:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:6
# 1c0ca92f3cac42499df4140a8274f662
msgid "Back-end server #2 fails gracefully (all data is synced)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:7
# d0f40a81f49f4d109b028a20bf7f50bc
msgid "Back-end server #2 hard fails badly (unsynced data)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:8
# 08425d066259428d99a00828cbb440c1
msgid "Back-end server #1 fails gracefully (all data is synced)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:9
# 2f02ba570e454c3680cf714eaf12fad6
msgid "Back-end server #1 hard fails badly (unsynced data)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:10
# 856e29ba48bc438da0221aeb2b283fcc
msgid "Both hosts are up as secondary, and the |chef server| is unhappy"
msgstr ""

#: ../source/server_high_availability.rst:41
# 4d57e2cc08ae46b08b169a6aaad278d5
msgid "Scenarios 1 and 2"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:4
# bd622d50352842d0b3abd474affdb157
msgid "When the acting backup server fails, |drbd| on the master will continue to function in primary mode, whether the |drbd| on the secondary was shut down gracefully or became unavailable unexpectedly. Verify that |drbd| is functioning by running ``drbdadm role pc0`` on the primary:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:12
# c379bad487cc4e8588f3b3f16c34cec6
msgid "You can see the full status by running cat ``/proc/drbd``:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:21
# ff7933e8d4514c7098fb137cd13a1b97
msgid "The disk partition is still mounted into the file system and can be used as normal."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:23
# b90316352b0d4719a491859706908e51
msgid "When the secondary becomes available again, two things may happen:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:25
# 9dd6ba0d346e411bb58ec473e7905db6
msgid "If the status of the secondary reports ``Inconsistent`` or ``UpToDate`` without manual intervention, all is well."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:26
# 2635788c8d1f4c3db8d85c5089fa5247
msgid "If it remains ``DUnknown``, |drbd| on the secondary can be manually restarted and it will start to sync. The ``DUnknown`` status is the report which indicates that |drbd| sees no network connection to its partner."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:28
# d004222c81a54b999f091ea26253edc6
msgid "The last field in the ``/prod/drbd`` file (``oos``) reports how far the primary is out of sync with its partner. If the secondary is down and there are a lot of writes on the primary, this number will increase. For example:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:37
# cd836cba842c4d0697d55e2080dd41f5
msgid "When the disks return to a synced state, that field will return to ``0``. While the secondary is syncing, status about the syncing process will be shown for both hosts. For the secondary, something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:47
# 6cf602d38df74a76abf37f1d3515e632
msgid "and for the primary, something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:58
# 4e97c13df4c24178a6eb297ab9656468
msgid "Eventually the hosts will quiesce and report ``ds:UpToDate/UpToDate``. Depending on how long the secondary was down, how much data was written to the primary in the interim, and the speed of the shared network, this process could be nearly instantaneous, or could take several minutes. The processes used to manage the |chef server| should not require manipulation in any way during this recovery."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:60
# e369ed55dea14ad38e84b670ce755994
msgid "If the secondary host is lost completely, a new host can be installed in its place, the device built, and then |drbd| started. The new host will pair with the existing primary, sync data, and be ready to take over if necessary."
msgstr ""

#: ../source/server_high_availability.rst:45
# c5174adac2584a0097187540a5fa2792
msgid "Scenario 3"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:4
# f6ffd8a315994b29a6ac1bdb142c63e5
msgid "Trouble starts when the |drbd| primary is the host that becomes unavailable. The |drbd| process on the secondary makes no assumptions about whether or not it should automatically take over, based on the split-brain configurations in the ``drbd.conf`` file."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:6
# c950ab384f5442698be05b0e75b3298f
msgid "Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, ``split-brained`` host, and is the one unconnected and incorrect. It will take no automatic action."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:8
# e2bd29ff6ef440438660b9ba35a924ba
msgid "The status of the secondary will look something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:17
# b996db2cb0e94dc8bd3a8f9433fe88cf
msgid "The ``ds:UpToDate/Unknown`` is important; it indicates that the secondary has all the data that was on the primary and won’t lose anything if it is promoted."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:19
# c6fe1497c7134f99a602b50fcd4919a3
msgid "If it is verified that the primary host is going to be down for a while, the secondary can be promoted to primary:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:25
# 5b39bbe0f95048ee9d5497019053faa3
msgid "at that point the status will change to something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:34
# 0e27ac0c852b4c0dbf804a2dad180021
msgid "Notice that ``ro`` is now ``ro:Primary/Unknown``. The |chef server| can now be recovered by entering the following command:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:40
# 03d4f63a6106408eb59b3c6dcf4b6553
msgid "This will start up the configured services and the |chef server| will be master on this host."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:42
# c2e2a32ac507431b9effea064f70df6a
msgid "If the original primary can be brought back online, the cluster management script run by |keepalived| will try to do a |drbd| takeover, based on that host’s original primary |chef server| master status."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:44
# bff2bc0e158741ccb72bbf9b9de5b5e2
msgid "The first thing it will do is attempt to promote itself to |drbd| primary, which will fail if the disk has been written to at all while this host was down, and |keepalived| will be unable to transition back to the original master. This leaves the pair of servers in a good state, with the second back-end box as the |drbd| primary |chef server| master."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:46
# 4ca2d949989042a195b179a6a1cfe3bc
msgid "|drbd| on the first back-end server will sync to the second back-end server and will become the clean secondary |fqdn|."
msgstr ""

#: ../source/server_high_availability.rst:49
# d068b7598a0c4ac1bb7c65ab1b1519ee
msgid "Scenario 4"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:4
# 9072d81bafa04f288a22bf7fabb134b3
msgid "So far, the scenarios have not described any data loss. When the hosts in the high availability pair are synced, either can be lost and the data will be safe."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:6
# ae45ca59c04d4ed98f1b3186eaee78f1
msgid "If you get to a situation in which the primary host is lost and unrecoverable, but the last status of the |drbd| pair was reporting that the secondary node was in an ``Inconsistent`` state, it is very likely that some data will be lost. The |drbd| status on the remaining host will look something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:15
# b24fa18948c742fc834ce569ada36d98
msgid "As long as good source code management is practiced with cookbooks and other files in the |chef repo|, any missing bits can be re-uploaded after there is a working cluster. In some cases, newly-created users or organizations will need to be re-created. Other actions, such as |chef client| runs and uploads may fail while the cluster is in an ``Inconsistent`` state, but will be fine after there is a working cluster."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:17
# 9a9136b8033348c5bb1e16f3c90b18c2
msgid "When the primary back-end server has been lost while the secondary back-end server is in an ``Inconsistent`` state and it's not going to be back online quickly, the best thing to do is to provision another host to become the new |chef server| cluster partner for the secondary back-end server, and then build it out. If the new host has an IP address that is different from the primary back-end server, change the configuration on the secondary back-end server, and then reconfigure."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:19
# 54f09d93740041cebc8531fb4a1e0218
msgid "In this situation, the |chef server| may be freaking out a bit, so turn off the daemons using the ``chef-server-ctl stop`` command."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:21
# 117dffa8786240dba8206ff03936a72a
msgid "Once the new host is identified and the |drbd| devices on that host are ready, bring up |drbd| and get it talking to the secondary back-end server. This secondary server should not want to be the primary server; it should be waiting for the old primary server to return. Start up |drbd| on the new host and verify that it is listening on the correct port and that the status in ``/proc/drbd`` is reporting that the host is up, but in the ``WFConnect: waiting for connection`` state."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:23
# 3415597c9e924c4b8911bc87f045a4d0
msgid "By the time you get the new node is up, the secondary back-end server may have taken itself into ``standalone`` mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:29
#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:12
# 0214ea8bd48e4e24aa2b3b9bddaf3dc5
# 1dfc96a1fea5408ea32263cf4ceb2da6
msgid "and:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:35
# b9e5edf420554010ba1cdb8b441b3b1c
msgid "At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the |chef server| back online can begin."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:37
# 356ff7ff74c94d1b89d5f53b2b2df522
msgid "Running a fast network between the primary and secondary hosts, and keeping it full throttle for |drbd| transfers, will go a long way to mitigating the any damage that may be done in the event of a loss of the primary from an un-synced cluster."
msgstr ""

#: ../source/server_high_availability.rst:53
# 611139b73aa74147a6fe30080be61ba0
msgid "Scenario 5"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:4
# 408b3fff35b44198bf011524af4b8767
msgid "Sometimes |drbd| hedges its bets, and puts both nodes in a pair into secondary mode. When this happens, you can look at the contents of ``/proc/drbd`` on both hosts and see if either of them is showing out of sync. If they are both ``oos:0``, just pick one and promote it to primary using the ``drbdadm primary pc0`` command. If one or both of the hosts is out of sync, choose the one with the lower amount of ``oos`` and promote it to primary."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:6
# 528918ca0be04e8da5caf2942bc4dcd4
msgid "If the chosen node won’t promote, run the following commands on the other host to reset its disk state:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:18
# 12eb4f89e5584f8aaf6c80af48fa61cb
msgid "That will tell |drbd| to abandon what is on the node and start over, and should allow it to sync with the primary."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:4
# 5b58b60460214396a9aed127e32626bc
msgid "|amazon aws| is a supported high availability configuration option for the |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:8
# f5724503f7374fb691499b1488d7ebfb
msgid "Machines are stored as |amazon ebs| volumes. A passive node monitors the availabilty of the active node, and will take over if required."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:10
# 211ab038018142a992d1d6499562523a
msgid "For more information about |amazon ebs|, see http://aws.amazon.com/ebs/."
msgstr ""

#: ../source/server_high_availability.rst:60
# d87f16156cd04547b4ee358e309aa0ca
msgid "View the topic :doc:`High Availability: AWS </install_server_ha_aws>` for more information about how to set up the |chef server| for high availability in |amazon aws|."
msgstr ""

#: ../../includes_chef/includes_chef_subscriptions.rst:4
# 0df5e92bc6c84ecba7ff90404ca2c7c4
msgid "This is a premium feature of |chef|. Access to premium features is free (up to 25 nodes) when the |chef server| is installed on-premises. For higher node counts, access is `available via subscription <https://www.chef.io/chef/#plans-and-pricing>`_. Premium features are installed `from the command line <http://docs.chef.io/ctl_chef_server.html#install>`_."
msgstr ""

#: ../source/server_high_availability.rst:65
# b01a0c90c3ee4cf2b7fc05b83d58b13d
msgid "Check HA Status"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:4
# e549c8c4abb149c5b9a8304a97cc593d
msgid "The ``/_status`` endpoint can be used to check the status of communications between the front and back end servers. This endpoint is located at ``/_status`` on the front end servers."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:6
# 6ed31e2580b14219aa2243fc926069b1
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:12
# 9f5dfdb0a25848bebf2d246f53b19067
msgid "This method has no request body."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:14
# 39b9d5dccea741ada6f9f4faedb5bb21
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:16
# 80e0773fafff46de960e53283c955f78
msgid "The response will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:30
# ea9590a36b6e4c71b900b90c793698ba
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:36
# 79ad1ca06c724a14a9b9e9f69b13b3e6
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:37
# 0c954a5635404f0599bd3f0460b29151
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:38
# 2c6ff9cb66914d8e9f82782ed9af7b97
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:39
# 06dd2a4306c947fda86e5af136f6079e
msgid "All communications are OK."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:40
# e544ad6215134191b18383931d124f7f
msgid "``500``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:41
# 384edb1d688248298d80aaa23cbd7f9b
msgid "One (or more) services are down. For example:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-06 21:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_high_availability.rst:8
# 61c5e64b0cd44e9b9418bf64e0c5b9cd
msgid "High Availability"
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:4
# 95ce8a70122f4fd0902e752dcab8ada8
msgid "The |chef server| can operate in a high availability configuration that provides automated load balancing and failover for stateful components in the system architecture. This type of configuration typically splits the servers into two segments: front-end and back-end machines:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:8
# 8201dd70e4be40ed822443e5eb082aa0
msgid "Front-end machines handle requests to the |api chef server| and access to the web user interface. Front-end machines should be load balanced and scaled horizontally by increasing the number of servers available to handle requests."
msgstr ""

#: ../../includes_server_ha/includes_server_ha.rst:10
# 19f8c6c7ebd248edb3459ffe43d4399f
msgid "Back-end machines handle data storage and retrieval, messaging and routing, analytics processing, and search. Back-end machines should be configured for failover using block level replication."
msgstr ""

#: ../source/server_high_availability.rst:12
# 88e12db3792c4682a7cb971b54fe6c89
msgid "For |chef server| 12, the following high availability configurations are supported:"
msgstr ""

#: ../source/server_high_availability.rst:14
#: ../source/server_high_availability.rst:18
# 249faec943224b24875dc9d325171c89
# 4a0ce28dac5147849aee6d2622130d3f
msgid "DRBD"
msgstr ""

#: ../source/server_high_availability.rst:15
#: ../source/server_high_availability.rst:58
# afedc9a556354a378d2a70254d4a0005
# e4e78d450f9d4f669033f4920fa7df50
msgid "AWS"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:4
# fbba408eb9724ed3acfb2f22b81380ec
msgid "|drbd| is a supported high availability configuration option for the |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:8
# ece4735b803f4310a84f14f71ffccb65
msgid "Front-end machines are scaled horizontally, and then load balanced using a hardware load balancer, |ssl| off-loading, and round-robin as the load balancing algorithm."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:10
# a7576467ade44d0e9dbe4d887c60bb15
msgid "Back-end machines are scaled vertically by adding memory, processing power, and faster disks to increase throughput, by adding faster disks and dedicated network interface cards to increase the reliability of |drbd| and the responsiveness of the |chef server|. Failover is achieved using:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:12
# d04cfefb374d4b25a5693970880d267d
msgid "Asynchronous block level replication of logical volume managers, positioned between the two back-end machines"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:13
# 2974005dcc3e4989bd4f0ba747c54d8e
msgid "A primary and backup cluster election using |vrrp| over unicast TCP/IP and |keepalived|"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:14
# 680a0431e45d46639029ade5d1cf8dd3
msgid "A virtual IP address to the primary |chef server| that is maintained based on the results of the election done by |keepalived|"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:16
# 2104374bbef9424d9ec9b5ec09841e15
msgid "When the primary |chef server| in the cluster fails, the |vrrp| heartbeat will stop. At this point, the backup server will begin transitioning to the primary state by:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:18
# 75538d15cb5f449e9f38c80f0714796b
msgid "Assigning the virtual IP address and sending a ``proxy-arp``; this step transitions the virtual IP address, which means traffic will flow to the back-end |chef server| while it makes the transition to becoming the primary |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:19
# f9fb3c35649f4bebb4700e4c46a2f236
msgid "Attempting to take over as the primary |chef server| for the |drbd| device."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:20
# a6b3b120988044fc890516cca9aa8723
msgid "Starting all of the back-end services."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd.rst:22
# 648ba0f4d09c4089a0d9ee69fca40422
msgid "For more information about |drbd|, see http://www.drbd.org."
msgstr ""

#: ../source/server_high_availability.rst:22
# 137c8bdec29d4a249e0f74ef3e48ca21
msgid "Graceful Transitions"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:4
# c036385f4eb04ed0b4effd73abf40318
msgid "The |keepalived| service manages the |vrrp| and cluster transitions. It should be running on both the primary and secondary servers. To transition from the primary to the secondary, simply run the following command on the primary |chef server|:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:10
# 6807aeb94b5044b5b89a954a1b755ce0
msgid "This will initiate a failover from the primary to the secondary |chef server| and will cause the current primary |chef server| to remove the virtual IP address, stop all services, unmount the |drbd| device, and then become the secondary |chef server| for the |drbd| device. Meanwhile, the secondary |chef server| will undergo a similar process, but become the primary |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_graceful_transitions.rst:12
# 7abcce7f973d4df9b7edeb731446b5fa
msgid "To view the progress of this transition, use the following command:"
msgstr ""

#: ../source/server_high_availability.rst:26
# 2520393920904483a725e5df52f6d665
msgid "Split Brains"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:4
# b0ea9f18f1d04e00ab781321fbe1b57a
msgid "A ``split-brain`` event is a concept of clustered computing systems in which the cluster loses its heartbeat communication channel and becomes two unconnected pieces. Recovery from a ``split-brain`` event can be a complex issue and different clustering software packages use different methods."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:6
# 54302d5a711e432193dc3cc0e8486021
msgid "Failures happen, so completely preventing a ``split-brain`` event is not an absolute possibility. However, it is possible to alleviate some of the issues that crop up in any ``split-brain`` event scenarios by maxing out the heartbeat network bandwidth and optimizing transfer protocols."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:8
# fb998aea5fc74bc9ad8f88c73cf0effc
msgid "|drbd| is a shared-nothing system. Data is replicated between hosts over a dedicated network link rather than stored on a central network-attached storage (NAS) or storage attached network (SAN) to which all hosts are connected. The most critical issue for storage in a |ha| topology is loss of or corruption of data. Maximizing the amount of data that can be passed over the wire while all systems are up and running correctly minimizes the chance that something will be lost or unrecoverable if a host goes down."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:10
# 3f23e50cde2b41b49b8d74a9cbd005da
msgid "At any given time, only one |drbd| host has ``userland`` access to data, This host is referred to as the primary node. The other host runs the |drbd| daemon, but cannot mount the storage into the file system. The secondary node receives information from the primary node, and then replicates disk actions on its local storage copy (even if the partition looks like it doesn’t have a file system to which a ``mount`` command can be sent)."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_split_brain.rst:12
# 9b73428e0ef844acb7e51adafca69e97
msgid "The approach that |drbd| takes to ``split-brain`` event situations is to degrade all partners still alive to secondary status, and then wait for manual intervention. This is called auto-fencing, with a goal of minimizing the potential for damage to your data. When you lose one of the partners in a |ha| topology, a bit of manual intervention is required to ensure that the disks aren’t in a bad state and can be brought back up. These scenarios are discussed below, including suggestions for diagnosing and recovering from each scenario."
msgstr ""

#: ../source/server_high_availability.rst:30
# fe753e6a67b24949ad2f06eac1492705
msgid "Custom Handlers"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:4
# 6f55782b616b48568c9a3e06adbfc2ba
msgid "|drbd| configuration allows for custom handlers when a ``split-brain`` event happens. The basic handler sends a notification email to a configurable email address so the issue can be investigated."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:6
# 286a2d5af90841fcb32f0e4d42150531
msgid "The ``drbd.conf`` file that is used with the |chef server| specifies other built-in actions that may be taken in certain fault scenarios:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:14
# 448fde450de240a7b0fad5064c4e8b4c
msgid "What this means:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:16
# c12d0b60efd24db7a8ed7ff8018f0d77
msgid "after-sb-0pri: A ``split-brain`` event has been detected and neither node is the primary node. The ``discard-younger-primary`` action will roll back any changes made on the last host that was the primary node."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:17
# 195e672943fc4292becf939c473edf88
msgid "after-sb-1pri: A ``split-brain`` event has been detected and only one node believes that it was the primary node when the event happened. The ``discard-secondary`` action will continue operations on the primary node and will assume that the secondary node was lost."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_handlers.rst:18
# 29faf1cf4d464a87942784d872da9fd3
msgid "after-sb-2pri: A ``split-brain`` event has been detected and both nodes believed they were primary nodes. The ``call-pri-lost-after-sb`` action will attempt to apply the ``discard-younger-primary`` from the ``0pri`` configuration to determine which host should be the primary node. Once determined, the other host takes action to become the secondary node."
msgstr ""

#: ../source/server_high_availability.rst:34
# fdc402330ca84f2e9e61e39e681d6b0e
msgid "Assumptions"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:4
# 9aaa3a909acc4bb5938821b9846ac49e
msgid "The following assumptions exist when the |chef server| is deployed in a |ha| topology:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:6
# b00cb8fd1eb44d1bbf988e9c22102b83
msgid "The back-end processes run on two hosts: ``BE1`` and ``BE2``. ``BE1`` is the |drbd| primary and the master |chef server|; ``BE2`` is the |drbd| secondary and the |chef server| backup"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:7
# ceb364a09a4645f084388a60a1ff7c4c
msgid "The back-end uses |keepalived| and a dedicated network interface for heartbeat"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:8
# 4ff1c6a21b71414d97c2b0ec4676e8f8
msgid "The back-end uses |drbd| for file redundancy"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:10
# 48fa652ff42c4fb4a671118c5a04fa09
msgid "On each host, its own status is reported first, and then the status of its remote partner."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:12
# 6b70c19bdb9c4aeba20e2b94c1c68e96
msgid "When both the primary and secondary nodes are running and behaving as expected, the contents of ``/proc/drbd`` on the primary node will look similar to the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:21
# 21ff3387b3174c2f8f24e71c4d7a29c6
msgid "On the secondary node, the status will look similar to the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_assumptions.rst:30
# a03b170645b24127816602b5d7557ccd
msgid "For information about the settings in this file, see the |drbd| website: http://www.drbd.org/users-guide/ch-admin.html."
msgstr ""

#: ../source/server_high_availability.rst:38
# 451e4614fe834da6befb8232957da8e1
msgid "Failure Scenarios"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:4
# 802d1c12efb44b3980571edfdc853879
msgid "The following four common scenarios are discussed:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:6
# 969d9fbaefe842188a811dd9302aa58f
msgid "Back-end server #2 fails gracefully (all data is synced)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:7
# c0ebf7a9f8014071aea1e4822f595a1c
msgid "Back-end server #2 hard fails badly (unsynced data)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:8
# 11cf8171b2734a60959791e152cbc643
msgid "Back-end server #1 fails gracefully (all data is synced)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:9
# 1ec45454080b4802b5d6c941517c613c
msgid "Back-end server #1 hard fails badly (unsynced data)"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario.rst:10
# 41e695f9c9ea43a59422d8437f3b25cb
msgid "Both hosts are up as secondary, and the |chef server| is unhappy"
msgstr ""

#: ../source/server_high_availability.rst:42
# 503e9657076745ee9f79dfc847b3f859
msgid "Scenarios 1 and 2"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:4
# 2aefb469c21f40169a64602a74f52fe2
msgid "When the acting backup server fails, |drbd| on the master will continue to function in primary mode, whether the |drbd| on the secondary was shut down gracefully or became unavailable unexpectedly. Verify that |drbd| is functioning by running ``drbdadm role pc0`` on the primary:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:12
# 253cb34e05ec4bf38837c503052e185c
msgid "You can see the full status by running cat ``/proc/drbd``:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:21
# 3908164941a64d15aca38868c9e2ded9
msgid "The disk partition is still mounted into the file system and can be used as normal."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:23
# 8b9a4d5c1eb14a2f8852516455c70642
msgid "When the secondary becomes available again, two things may happen:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:25
# a017603cd6c04ba888cd7f7005e251ee
msgid "If the status of the secondary reports ``Inconsistent`` or ``UpToDate`` without manual intervention, all is well."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:26
# 73195f525f3a4669bb489c5be58d1d8e
msgid "If it remains ``DUnknown``, |drbd| on the secondary can be manually restarted and it will start to sync. The ``DUnknown`` status is the report which indicates that |drbd| sees no network connection to its partner."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:28
# f9201b338e9f4065b4bf9d18eb912365
msgid "The last field in the ``/prod/drbd`` file (``oos``) reports how far the primary is out of sync with its partner. If the secondary is down and there are a lot of writes on the primary, this number will increase. For example:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:37
# 1c9d9900113a4042b4781c6295526473
msgid "When the disks return to a synced state, that field will return to ``0``. While the secondary is syncing, status about the syncing process will be shown for both hosts. For the secondary, something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:47
# 8da88b7fa1b745b2b2c3bd818b58d015
msgid "and for the primary, something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:58
# ea1941816a9a4ec888bac4b6f249766a
msgid "Eventually the hosts will quiesce and report ``ds:UpToDate/UpToDate``. Depending on how long the secondary was down, how much data was written to the primary in the interim, and the speed of the shared network, this process could be nearly instantaneous, or could take several minutes. The processes used to manage the |chef server| should not require manipulation in any way during this recovery."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_1and2.rst:60
# 97ac4d80590444a4bdefb31da22573ac
msgid "If the secondary host is lost completely, a new host can be installed in its place, the device built, and then |drbd| started. The new host will pair with the existing primary, sync data, and be ready to take over if necessary."
msgstr ""

#: ../source/server_high_availability.rst:46
# 2f562a349a5a47c782b0eb815fc9e3d4
msgid "Scenario 3"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:4
# c50ae85e79f646d885c62cde4849f229
msgid "Trouble starts when the |drbd| primary is the host that becomes unavailable. The |drbd| process on the secondary makes no assumptions about whether or not it should automatically take over, based on the split-brain configurations in the ``drbd.conf`` file."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:6
# b23a3fc023724b4ba4eaa1da670c26f1
msgid "Basically, what this means is that when the primary becomes unavailable to the secondary without an explicit takeover being initiated, the secondary will assume that it itself is the wrong, ``split-brained`` host, and is the one unconnected and incorrect. It will take no automatic action."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:8
# 05d0b7e3b6314d87b88a3d740ea64893
msgid "The status of the secondary will look something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:17
# 61400c7f181e4c2c848c138e3b178703
msgid "The ``ds:UpToDate/Unknown`` is important; it indicates that the secondary has all the data that was on the primary and won’t lose anything if it is promoted."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:19
# dc713e57186741e7b508a5181e742513
msgid "If it is verified that the primary host is going to be down for a while, the secondary can be promoted to primary:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:25
# e084e5d8222a442db1d912c44b1075c3
msgid "at that point the status will change to something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:34
# 6e5be13e1ca14cad856167cb5ec1270d
msgid "Notice that ``ro`` is now ``ro:Primary/Unknown``. The |chef server| can now be recovered by entering the following command:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:40
# af1ff73be97a43d8b9696b767046bd14
msgid "This will start up the configured services and the |chef server| will be master on this host."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:42
# 0ab1d07c40ac43a890f9a1a64e029a7b
msgid "If the original primary can be brought back online, the cluster management script run by |keepalived| will try to do a |drbd| takeover, based on that host’s original primary |chef server| master status."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:44
# ca61338ccb8240e293dc09dee090e6f6
msgid "The first thing it will do is attempt to promote itself to |drbd| primary, which will fail if the disk has been written to at all while this host was down, and |keepalived| will be unable to transition back to the original master. This leaves the pair of servers in a good state, with the second back-end box as the |drbd| primary |chef server| master."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_3.rst:46
# 4e15542ddade4b0a87340e1f05e1dde8
msgid "|drbd| on the first back-end server will sync to the second back-end server and will become the clean secondary |fqdn|."
msgstr ""

#: ../source/server_high_availability.rst:50
# 6a2d7868ca264049b91252ce00850a98
msgid "Scenario 4"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:4
# de35b8a8ac55461e81a867bf492a2ad4
msgid "So far, the scenarios have not described any data loss. When the hosts in the high availability pair are synced, either can be lost and the data will be safe."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:6
# 10c9280b061b4882bfa3f552b1eb416b
msgid "If you get to a situation in which the primary host is lost and unrecoverable, but the last status of the |drbd| pair was reporting that the secondary node was in an ``Inconsistent`` state, it is very likely that some data will be lost. The |drbd| status on the remaining host will look something like the following:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:15
# e8053bdea0ca4778b6e62815e90acce7
msgid "As long as good source code management is practiced with cookbooks and other files in the |chef repo|, any missing bits can be re-uploaded after there is a working cluster. In some cases, newly-created users or organizations will need to be re-created. Other actions, such as |chef client| runs and uploads may fail while the cluster is in an ``Inconsistent`` state, but will be fine after there is a working cluster."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:17
# b0674358af6e44a5ab980ab6e2db2ee6
msgid "When the primary back-end server has been lost while the secondary back-end server is in an ``Inconsistent`` state and it's not going to be back online quickly, the best thing to do is to provision another host to become the new |chef server| cluster partner for the secondary back-end server, and then build it out. If the new host has an IP address that is different from the primary back-end server, change the configuration on the secondary back-end server, and then reconfigure."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:19
# b6f93dfd07bb4ac1aa2fe05034b51e85
msgid "In this situation, the |chef server| may be freaking out a bit, so turn off the daemons using the ``chef-server-ctl stop`` command."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:21
# d2ba54f35a954721ba12e26685a04ff9
msgid "Once the new host is identified and the |drbd| devices on that host are ready, bring up |drbd| and get it talking to the secondary back-end server. This secondary server should not want to be the primary server; it should be waiting for the old primary server to return. Start up |drbd| on the new host and verify that it is listening on the correct port and that the status in ``/proc/drbd`` is reporting that the host is up, but in the ``WFConnect: waiting for connection`` state."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:23
# 95bda90dd3ff4c818889ba6ebadae0bf
msgid "By the time you get the new node is up, the secondary back-end server may have taken itself into ``standalone`` mode, which means that it is no longer listening on the network port. In this situation, run the following commands to get the secondary back-end server to talk to the new node:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:29
#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:12
# e9aaf453e0734d97a933351856648129
# b808384a572440cca252e428794a233b
msgid "and:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:35
# 1cbd0c3d37c34722a454ac8d2ab81b24
msgid "At this point, the new host should be synchronizing with the secondary back-end server. The secondary back-end server will forget all about the data it was missing from the now-gone primary back-end server, and the process of bringing the |chef server| back online can begin."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_4.rst:37
# dcb84749829e4730804906352fa4029a
msgid "Running a fast network between the primary and secondary hosts, and keeping it full throttle for |drbd| transfers, will go a long way to mitigating the any damage that may be done in the event of a loss of the primary from an un-synced cluster."
msgstr ""

#: ../source/server_high_availability.rst:54
# 8653f5cc519044a3b9428efccda7bb62
msgid "Scenario 5"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:4
# cbc0ceae197344b2954c2bb112665298
msgid "Sometimes |drbd| hedges its bets, and puts both nodes in a pair into secondary mode. When this happens, you can look at the contents of ``/proc/drbd`` on both hosts and see if either of them is showing out of sync. If they are both ``oos:0``, just pick one and promote it to primary using the ``drbdadm primary pc0`` command. If one or both of the hosts is out of sync, choose the one with the lower amount of ``oos`` and promote it to primary."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:6
# 6000bed39b3f47219b530d879f680927
msgid "If the chosen node won’t promote, run the following commands on the other host to reset its disk state:"
msgstr ""

#: ../../includes_server_ha/includes_server_ha_drbd_scenario_5.rst:18
# d3c51ddc9df047748d6cbe7230c4431c
msgid "That will tell |drbd| to abandon what is on the node and start over, and should allow it to sync with the primary."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:4
# 5c4bfd6d7b5f4f14bfe7920e30e54ff6
msgid "|amazon aws| is a supported high availability configuration option for the |chef server|."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:8
# ae96586abcc047b9aabf0fc3ba1d08ee
msgid "Machines are stored as |amazon ebs| volumes. A passive node monitors the availabilty of the active node, and will take over if required."
msgstr ""

#: ../../includes_server_ha/includes_server_ha_aws.rst:10
# a73639ea1f3a4faba76916cb95938d33
msgid "For more information about |amazon ebs|, see http://aws.amazon.com/ebs/."
msgstr ""

#: ../source/server_high_availability.rst:61
# 6b4a05fc6b2a45acbf246542c3564aef
msgid "View the topic :doc:`High Availability: AWS </install_server_ha_aws>` for more information about how to set up the |chef server| for high availability in |amazon aws|."
msgstr ""

#: ../../includes_chef/includes_chef_subscriptions.rst:4
# b34f005070734d559e74697bcad0c5e5
msgid "This is a premium feature of |chef|. Access to premium features is free (up to 25 nodes) when the |chef server| is installed on-premises. For higher node counts, access is `available via subscription <https://www.chef.io/chef/#plans-and-pricing>`_. Premium features are installed `from the command line <http://docs.chef.io/ctl_chef_server.html#install>`_."
msgstr ""

#: ../source/server_high_availability.rst:66
# cc8ac0274a35465994871eee04856606
msgid "Check HA Status"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:4
# f66c65e1b2c84ae6b50883e7d9edea0c
msgid "The ``/_status`` endpoint can be used to check the status of communications between the front and back end servers. This endpoint is located at ``/_status`` on the front end servers."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:6
# 8eeef2c4a04f4ea8a8134aa940f50f18
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:12
# 0e4ff8a6e73b4ed8af91f39022680df3
msgid "This method has no request body."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:14
# 24a52bce490f4cf787d05f4d495fc4c5
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:16
# 332859afdd5348d8bb5da04276ff52cf
msgid "The response will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:30
# 457d1e4e7bd0440cbff6de289c93040c
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:36
# 5ff3442c47dc4712b7faafc377e874b6
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:37
# e035be9c10324bd092a50806bedf46af
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:38
# f7d7caeb6f41457ea9056eb60f3f903c
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:39
# f56cc7cfac734843903f5cd3681a8509
msgid "All communications are OK."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:40
# dfe186b1eee24c38a8c3a8a817437296
msgid "``500``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_status.rst:41
# 0c29b42fbb254288bb446da41f0489fd
msgid "One (or more) services are down. For example:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes.rst:34
# 24a8027bb04f46938e9488786bd41277
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# dbcd7ee4b14745a8872c47f1e53eebb8
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 76508360a593474eb39dcb97976d9a09
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# ba53599ee8ac492a8704898b8b864aa8
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# ef941c180be84467bec3d86d680adb96
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 15fd172bbbfa483ab7d0c62c7b9a6c8b
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# d44c926b8b0a41c3bd9ce8fc5540017f
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 9e58b48724ab4a84a7d6019c7a40b9c8
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# b38dc628e13f4c6c8501b628858b109f
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 3ebd570dc99d49faa59c65a9f70a0f0b
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# e138338828a4451aac7767533b174ee2
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 5b75d8ceb39f4144ae53b0580a43734f
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:39
# 9130f253782b475fb660c68a242b02bf
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 1baeabb8b7ce488e81fba10059ddf6dc
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:43
# fb681ab304d24c848f5db6972a7b7445
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# fa8cba9ffd00455489db0bb9e75637cb
msgid "The following types of attributes are available:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 581f45ebd57b4e31901ccaa22b42dec2
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# 9a523f0f81b14ffb9331681aa306396e
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 225c1c6f56e34699987ab30324c4a53b
# 4cea5ee6d7264f4fb12a380f9ae4eb11
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 5e45257903884cafa09d3e3460892d98
msgid "A ``default`` attribute has the lowest attribute precedence and is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``default`` attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# b948b07f48df4793b24f625370769e25
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 2a3b959c6e1f4514912dd5f7150ba094
msgid "A ``force_default`` attribute can be used to ensure that role or environment default attributes do not take precedence over a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# aebe288837454beba87237052d141d58
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 5d62d0f80973465195b4d3a8c50ec184
msgid "A ``force_override`` attribute can be used to ensure that role or environment override attributes do not take precedence over an ``override`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 01dd723cdd2246d0838bc646b71b626b
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 6cd342199c4d4f3ca1576d9d85a0de8c
msgid "A ``normal`` attribute is an attribute that persists on the target system and is never reset during a |chef| run. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# 2dabe74aa0ff45b8bfac8cf428b738dc
# 373614e7202e4eb6b505381e89583c60
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 9c540918e78c4779a462b7ad7b12cd32
msgid "An ``override`` attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An ``override`` attribute has a higher attribute precedence than ``default`` or ``normal`` attributes. An ``override`` attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``override`` attributes for role-specific or node-specific values only when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 1792cc37e89b42288aba25913140a38f
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 5cccab51dd8f4296bd623a14d6e23ffa
msgid "An ``automatic`` attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An ``automatic`` attribute cannot be modified and always has the highest attribute precedence."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:47
# 64ff1937ba7e4cacac80f97999b3c3cb
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 4e82dc6154874f8c9b343de04b17372c
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:51
# 7d139a47fb2d436fa3a6eef25f7db82d
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 7df14f148bb1488c9d23c7395f622b42
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. In general, use the default attributes as much as possible (or even all the time). The merge order for attribute precedence will do most of the work, yet leaving many levels of precedence available for the situations where they are truly necessary."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 5ad567792443409c81c317e25b9b4373
msgid "Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 77073b54cc9741879286963ba4fee2e7
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# a874239d096b4dd1a333a655b22f9a61
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# b66d97b7ba90428fab3707c92fc19ba2
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# d4f27c4abb9f447b8ab93eb5bcded76b
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 14a9856292284c80a283ac56f936cea4
msgid "Forced default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 91862bbcb9f94cc591c6a91ba114d511
msgid "Forced default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# fe4c892665884f3fa835aa2e3b7a3dd1
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 9b1e4f54b7dd4867bcf80fda19d7536d
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# c5ea1884ee584ea68e38103c8f9cfeee
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# aaabec725c6a4d2cb998c4092fa30ae8
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# b831463096694b5f9981365837c2beeb
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 51981ccf8d45498493a9ebfb790ee9e1
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 5bfed20b1c8049999be811f3d431e392
msgid "Forced override attributes applied in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:21
# 7de4a462a60d4ea8912d9b4fdf87b41a
msgid "Forced override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# d22b5096319c4fd3a18bac475e2e9844
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# c7cc7cc02ebd4b6790ee795f14b819a5
msgid "In other words: an automatic attribute takes precedence over a forced override attribute, a forced override attribute takes precedence over an override attribute, an override attribute takes precedence over a normal attribute and so on."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 3607c188bc5340c7a2c1359c44d9fdf5
msgid "The precedence order for role and environment attributes for ``override`` attributes is reversed from ``default`` attributes. This allows ``override`` attributes to be applied for environments after they have been applied for roles. This allows a role, such as a database server or a web server, to exist in multiple environments, rather than requiring a set of roles for each environment."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:28
# a27d955b85424fa08b1c92f10422fbd6
msgid "Another way to view attribute precedence is with the following table:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:55
# 7facf00294a74902a10538afcfaddb38
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# 3088614306ac4d2e84a89c82a4bb0399
msgid "An automatic attribute is data that must be understood, but not modified. Automatic attributes are detected by |ohai| before every |chef| run. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment in which a node is running. An automatic attribute always has the highest attribute precedence and are saved to the |chef server| at the conclusion of every |chef| run so they can be indexed for search."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:59
# 798562b5502b49389e3d77e2eb5f42de
msgid "Attribute Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 1afed158cf5442ffbd7d3cb2bd3d6c6d
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 4725cff45cd14aeaa80a076b25417ad4
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:63
# 8c3f6d4eb24e4c75bf4ee7c47e462e30
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 705483fbff6e4f6c9efb7c2aa3af12a8
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 48d5161affac40da8e7fd52082979fc8
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 34eaa5eb77e74e05b1da625d5c839e56
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 42e5c945a79440e38117ab5bb46516d2
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# 890ca319bfa94ec99b16799da3d36d64
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# c45b4d173f994176942d009613058d4d
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# fe1772928efb4340affed9fba2ed2d85
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# 31f2271e32ed47c488367f4a4d1e74ee
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# 38fd8d5637894dd18e666edf3d3fcc99
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# dc4d0200bd43421aa8681ddeca02d3a1
msgid "Using ``attribute?()`` in recipe"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:67
# 218394b3efec4b68adf5b4aead3fdde1
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# 0f0471704c9245dc9b08500fc1bfb275
msgid "In Unix, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how you can use Chef to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# f1d05ae7ab104a67a83cd2401e93b257
msgid "If you are starting a processes by using an execute or script resource, you can use the environment attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 8c7eab87123f4a87b0b5a8320f3cf9e4
msgid "Note that the only environment being altered is the environment being passed to the child process being started by the bash resource. This will not affect the environment of chef-client or subsequently started child processes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:74
# 6307438467484e7fb5c79d20900c5384
msgid "Work with Recipes"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:75
# 93dba275d1104f2c93897db54b778bbb
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:78
# 4383fddba7064de3b3ac4e6f9b7233dc
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 67a17037a8f447b79480726f206f403b
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 1d281c66c4ec4d31af10ea5b5128fb38
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 740366b61dc24eab944d479ee63cad16
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 57eb4cc95e1a4e41b9b19cb0d4b33049
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:84
# 29b6a6be3bc34956adb31f5097648f06
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# bcb95da8daf24c41ac469c84a7869eaa
msgid "An encrypted data bag requires a secret key. |open ssl| can be used to generate a secret key with the following syntax:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# 15feb059b48f4118820c3d2792e9a7df
msgid "where ``encrypted_data_bag_secret`` is the name of the file which contains the secret key. For example, to create a secret key named \"secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# ed33439ea8b14ecf978702e4d35bab7c
msgid "and then to use it to encrypt a data bag item named \"passwords\" located in a data bag named \"production\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:23
# cc75460cfdee4fe397709d27e7c4f4e5
msgid "This will open the |json| editor:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:33
# 1cb79b66d8e0454b9ef126c9615b3373
msgid "To view the data bag item without decryption, enter the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:39
#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:53
# 5af973d05fea4979906a4688585db419
# 1fd61dce6305495c86e0e0378f5946ee
msgid "to return something similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:47
# 15458d0e887e4cff8e4c48f5e6dc736d
msgid "and then to view the same data bag item, but with decryption:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:88
# 03a2af7c726142269689e6edab9c3081
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# 298fdca820284530af6204b381938ef1
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:92
# 7389142082834e97aea1e967e8c0cce9
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# 96f32e355d5640198169159f00084109
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# c64970101ec34414998aac2004b90ffa
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# 6376fc3a1d894265b7dcda5378d32462
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# 6cd31127e8ac4cec8f515f161534d707
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 5d8bb0bfd8724f8a97f9a334ce01775e
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# b0277d2066784128bfd2f51b71c0b8d2
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# 21e091c36d9b46ee94db0cdaa88c3348
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:96
# af423ad4774249a08312f4e2f241c20d
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 2cbea59c8db149fab86c3b9f6372e2df
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 756810f979dd40a2a2ffa01a35598a9c
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# 4038700ff8ec4271a40bf3efced5d820
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# d44c804196734267abb6c88c461a7489
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:100
# 34b9896600fd4cd088b0df08ff8e0fc8
msgid "Create Exceptions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_exceptions_and_logging.rst:4
# e01d52ea7607461bba0c9185b2049231
msgid "A recipe can write events to a |chef| log file and can cause exceptions using ``Chef::Log``. The levels include ``debug``, ``info``, ``warn``, ``error``, and ``fatal``. For example, to just capture information:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_exceptions_and_logging.rst:10
# df9c2970cea7421f8850a767e31ed8e2
msgid "Or to trigger a fatal exception:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:104
# eea29a232dce4395a243d4e69b7d4b6b
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 4cf73b902b6243f7bc6b360a184089b7
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# b995efed33b545209e60c80b3db63211
# 60f67061447e417aa1b59a27d4ae3b4c
# 65567dd706674c4e98f10c337c9fefc5
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# c66d0be7e8424fe89975c13a0f169060
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:108
# e2cfad9541cc4a8e99752c9863967dc1
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 07d93755a4d64a8fb2dec218b6732d9f
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:112
# 88e28b0235f144368e9c553257f02c50
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 4b6f2b740a0b44759c23a2f7c64cc2ba
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# d35b9a1b55b94deea3b53d04e245f22b
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:116
# ef6d24a0c3a343bc89036f2048b7b64f
msgid "Use Ruby"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 7ea497fc5fce40cda1ae30006ea3aeb1
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:120
# fb135e2b59b64cb4ba9c975a26dc013e
msgid "Assign a value"
msgstr ""

#: ../../steps/step_chef_recipe_assign_value_to_variable.rst:4
# 897a4ec521b54685a0cb6fae51fff513
msgid "A variable uses an equals sign (\"=\") to assign a value."
msgstr ""

#: ../../steps/step_chef_recipe_assign_value_to_variable.rst:6
# 9cb0d3bcdb4e4c929a638c884ea738a8
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:124
# 9c1b2fcf1fca4c5b8d3425b6d05b58fd
msgid "Use a case statement"
msgstr ""

#: ../../steps/step_chef_recipe_case_statement.rst:4
# 7c73cf5a316541baa704c48ebd76e4ea
msgid "A case statement can be used to compare an expression (specified by case) and then executing the code that matches the expression."
msgstr ""

#: ../../steps/step_chef_recipe_case_statement.rst:6
# b64ea73a4a8d41e9ba674b189e41dc96
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:128
# 896bf50751bb4b9fab3e9859766bfdf5
msgid "Check for a condition"
msgstr ""

#: ../../steps/step_chef_recipe_check_for_condition.rst:3
# dc16042806c94939a13a25c766e8054a
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../steps/step_chef_recipe_check_for_condition.rst:5
# 45614b1f771343859da216a8f6a8acd6
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:132
# 792399590d6a412aa296e39965c968c5
msgid "Execute a condition"
msgstr ""

#: ../../steps/step_chef_recipe_execute_expression_by_condition.rst:3
# 96a17038c8aa4b0a98b1ba7b19da5e6c
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../steps/step_chef_recipe_execute_expression_by_condition.rst:5
# 8ca5ae521d444818b59f8aa068cc65d6
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:136
# 959d86c2e0c1496eac583a78b62e9cca
msgid "Loop over an array"
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_array_of_package_names.rst:3
# dbaff3cda54e4ca884c79563b2fccc5a
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_array_of_package_names.rst:5
# a6999ac317a042d59904e64e0508c497
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:140
# ed52a8e315904b3e82ce72a8e0850505
msgid "Loop over a hash"
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_hash_of_package_names.rst:3
# 40e14c7c04504a58965437159d03bf2d
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_hash_of_package_names.rst:5
# 8d9072bdd27845fa999cc8daafdab7f7
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:144
# b4954d778dd6491fb08c7f5a7069bddf
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# fca04d507af04d83a61069be282d2f9b
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 57d538c4decb4c73ba07fe64475cb590
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named mod_ssl. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# e5afff7a33e448b0bb70f478775b6c11
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:148
# 2dfcbfbe5fa24a3ebe315bc81ce003fc
msgid "|chef server|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# 79db9769ba2d4c7e978698f44fad91d6
msgid "Use |knife| to add the recipe to the node's run-list. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# 908ff522a0dc402b8d12c49f560b42bc
msgid "More than one recipe can to be added:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:152
# 81cc23724faa45529158d64ac917729e
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# b1ad9a4477b6491d82ce88debb2cfd0e
msgid "Use a JSON file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a JSON file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# a00e9e1133c44434be8fa6ba6dc7d5f3
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:156
# a4940d3061bf4feca231ff83097ee072
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 6551f2eda052422aad0df68302b8d5cf
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 8b5f7360d09e4137a10dfb4454857e9d
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 04476e2fddec4761ad0046cd552e91c1
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:162
# 8d8c5910162f4ea38d3a7746ace0c781
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# e80e6b7e7e0d4d3fb73e2532d3d35b4e
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# ec7f07af86284cd9b18bf17f30d1f0dd
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 3bb5fc2b12f6409eaabcba5245b3a581
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 9e596baab1e5419881775f950f7c6e81
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 1f22ba5a417143eda7e8bb98c2d16793
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# da4def8edf8d47d8abd3a4967ee1c792
msgid "Will return something like this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:168
# 66147495082f462e97b340ed876e71ae
msgid "End a Chef Run"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:169
# 7abe979255ba4682a399797ff1f91c11
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:171
# 8def4eed0ee84cd6b94807ed17f350f8
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:172
# ab8da8165a3e429fa1dfa4794f6a565b
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:173
# 54bf8564b60d4acea3c0b756e547308c
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:174
# 33c521794d544285bf36e0b60fb3b5a6
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:175
# adb4b767cae649a794db81e01d609fd2
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:177
# a918361c5245441297463a925595ec61
msgid "The following sections show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:180
# b964c9ddb7ab4d41ae8e2fbf26a176e5
msgid "Use the raise keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 485f77fe45a34481bdbb49d911a152c1
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# d259d76627ab4e1f87406506804ef93e
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# 6460482f29104dcf808585ae25fe3d3f
msgid "Place the ``raise`` keyword in a |resource ruby_block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# 31c805051e6a4415bf24e0ab253853ae
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# 64f10ef174a44e5bb58a92dcb3945cf2
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:184
# 0a4a1ad46b9940b18b1f0a126a0bbe28
msgid "Use the return keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# d102fc5c880b41138bbde5f943e0b7bc
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# 6d0d7984af9c4dfbb0d1124d0c121fde
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:188
# dffc1c61f3cb4ab3af7e5e8f47bde920
msgid "Use a rescue block"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# dc0e8e51a2314b53b1bdc508f95bc9b0
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# 8316889b98a14050862eaa8d9beb9968
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:192
# 034e5bb501bc45668f66a5d49516570b
msgid "Send a message to a log file"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# 1b284b013cca42148c14d0b4f8aea899
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# b5d35759cfb24630b13883e7a130091e
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""


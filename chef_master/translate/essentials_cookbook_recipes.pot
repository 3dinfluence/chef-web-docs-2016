# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes.rst:8
# eaef4b57446d480b8e6363f81212d866
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 2b3ee893ead9431980bbe9ee750b31d5
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 7f086f38cc9c40f2b0607eb44070a72b
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 961b862764614d7f9400e30880f9b3c8
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# f93a6f497b0c49a1a47bc0bd23ae9151
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 7097f2bc3b3447daa53110ef8ea1ef9c
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 042c91de80be480dbd2cb9379d49a6ad
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# a8f1ad3d6e4144989ac05467203e08b1
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# f5f59d03cfcd43dcab76dea65865e68e
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 39551e507b694f8dac964e0e58fe38f4
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# d2f4e66f7ddd4c468f2700ccbac3a33b
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 50d8de8f191f40cd844b7bb5057e7667
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:13
# 17ac88456e28443e87a072294d869444
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 8a22537211e94f8cace46845480f84e6
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:16
# 5f04f04ebe2d45349e2306e97fbd85bd
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:19
# 2920fd7a33584e1aa7d6344ff287c55f
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 4c84cae424b446bd8191b3f66c067ba5
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 27b089051e71402d8ec37f747856b6b5
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 7dc77807066e4fb1afe6397a5cc26fbc
# 6bf2d709313f482f9310376c13ca8bff
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# fb75e9df175642e19cad8861910b4b7b
# 697280bda9464ea1b650cdcfb476fe1e
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# ce77df5e11bf4ef6a232391b529f850d
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 2edd0817ba60437ea288833bf45cb372
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# ac7a8b2feb4243d6a30debbdb6de16d7
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 34c64853b1964998a87e0144e535c9fd
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 8303aa11d24b4ecf802c04464c90cd58
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# bd15742ead6d4a65bd2497c18cd00c56
# 437b49dad95e455098938f442a79c638
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# eae2f1fbc5af456d9fb46900a198bb7d
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# 2e14d53fbac543e4b3be6ea4341dabe3
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# be5ef5d16ed14449ac363babfde156b7
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 3c556f7d0f114c5db40f50bde175bbda
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# c212a2043241425dbd05067f9633f18e
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:23
# b513799db45a44319a23a18f92abec78
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# f766eb035cf242cd8570097b53b1176b
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:27
# 62709450682b495fa6bd2d5e43e9c65d
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# fde92cc22396436abd574f74f0064959
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 0fe56e4102cc4e359c15c6150035c5c1
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# f461764bb04440138be1ac7629c33390
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 8934f612059e4557a327dc1b133b5668
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# fc903421dfaa4663aea13635097b48ea
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# cfeea5c51b10494b9d877277fbf495ec
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# b392131db1d5421994ec459b7d9a6065
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# e3ecd906488b41eca9f491deaa1536f6
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 0d0145be4c254c67a5fbc8aadf7ad3bc
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 5aec3c6ac51a458b9d2eb5fca8ba63d6
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 2a8f519ce0e24f8d9ad5e4cd103a867a
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 540d66cd29704be9b3f2afe38689e066
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 72c66b634bae40169a87d00a5f58874a
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 6382c3b4d7424b649c040cd93c80aea7
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 5c2940b8d4434f7cb3b378c60ed5642f
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 04510701e3bd4b0b9fd7b6483f9da1a0
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# a344ad2fbdfd44958678b1675811fa11
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# ce82c0e563754b539ea342bcbc97d244
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# a541d30f50c345f9a542f2ad04949067
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# efbc65958c8e4beb8a290c6f6a96a50b
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:31
# 95a6da10a2c44c45aafd38092af3d0a3
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 3db033ca5b894760bfc0725ba444510c
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 4065b9c1b36a44179e3c457eb02c1575
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 1e1b68a48c084b4c82f153e5fe2ab6d9
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# 1d4ae95e16c74acead8c78ab94c37132
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# c6f57f67649c473ca3c8ec9eefd42c9c
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# b96646f069e3486eb75726f31103244c
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# f6d0755f28c44eb180ea0ecbbf2330df
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 3fb870198c714b9c868a53c5abbe32f8
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 43cb39ce8d6b426da0b5b3539231946c
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# e2f82a96f3254f1c8ed91f3bea40e3dc
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# 2278d9b0536a46659f2d6c13f7090df6
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# ac985fbeddfc44359660219d4cc81ed5
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 4629027df01d4eb58e166fc1963ad6e9
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 2e2ec6c08ece48c19935ffddc82fff6b
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 16c5a4124e9044fc8b63aa55c1aaa977
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 9c72de6f1a9543b2a23dc5cd5c46588a
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 648e5deb86f14a33b1a3363d6363adbc
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# e55a9c710b1842bf90d9b954d3b22ed5
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:35
# 76bfc9ab0283497c8e1e8979b3f8ac79
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 99618d6c76e74cadb5567050278c93af
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 310e7c9d50ca4675896e3fa2a2590f99
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# b768f1b51ce54e608c6f7e222cd9ddf0
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# fe50d28ddd3a4387b90595310a13e7d4
msgid "``attribute?``"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:39
# c7538fc7d6814ee1acfafd50d6b84e59
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# d45566820feb4e61948436ef71daeda2
msgid "In |unix|, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# b3f04541280340d3ad3bc66916102df4
msgid "If processes is started by using the |resource execute| or |resource script| resources (or any of the resources based on those two resources, such as |resource script_bash|), use the ``environment`` attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 1cf02004763e433ba561a5227f02c2cb
msgid "The only environment being altered is the one being passed to the child process that is started by the |resource script_bash| resource. This will not affect the environment of the |chef client| or any child processes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:45
# 068b8de99dea4e91a98ad9248924c158
msgid "Work with Recipes"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:46
# 77ad7e0a7a7146c18965224c1b1800bf
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:49
# 7b552f638da94a4db349603e4af29683
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# bc3b75602dca4318ad00a93db11d6977
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# ed6d1a7794a94af687dc09ff14e06121
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# c18488f2a7204b788302853666f1e641
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 5a8add6ab41646b8a66cb132d2244d5f
msgid "The data bag item's keys and values can be accessed with a |ruby hash|:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:55
# f775a0437df74eecbca2beeb8a6fbb80
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# 40bf424c091649cb98afb1c2cff97001
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# 1c72ac73432f49679b6fd877a7950112
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# ec041dc9bc9046ef87c44d30b33b0c82
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:59
# e11089b7260440dfbb6504db507f1239
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# ca53b9dd59db4b7a90c4e3198bc8a8e2
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:63
# 469311294a7445eb96402099f50996bf
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 451371d214e84101872c51932b268e11
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 29a393cd5ea042958b180ed6c60d35ad
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# 738a3fff4acd49a5a15b8a573e4c2c15
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# 38f61492b8254002ac6c5b060bbbf47d
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:67
# d2026ee422324db48b391da2da0382c8
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# a9300145c865497ba1359bb88d2ceb38
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# de6f10f650fa482ca5feaf8f6583ab7f
# 682ba2ac9da44cceb49ddd3753b1744b
# fd76fe6384654f199a26eead6c670077
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 64ddc8b2315642c78a907fc0c54fc783
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:71
# dfadfcc0945c44b196996e91caa70a72
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 61a9a63e1f8440cd9f139a63f728b0c6
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:75
# 8d78a87b0b0543c888a91dedd7e1a8ec
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 3060f535b38b4b1bbeb9e55d5efb5958
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# dafbf3262ace4668846b682751e7e6d2
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:79
# 507b6827017f49929ebfc5483c632735
msgid "Use |ruby|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 9e18feda89db4fc99e1bd643810ef589
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:83
# 85021b78a00d43b2bea3dbfbeba5adee
msgid "Assign a value"
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:4
# 0218f8373512429f92dade5d8e8d9df8
msgid "A variable uses an equals sign (``=``) to assign a value."
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:6
# 24b70663fec3419ba394959b501e9ec4
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:87
# 242f700b4d85422abacba4f96c423acf
msgid "Use Case Statement"
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:4
# 7e11f7e4e6414ff3bfe5514776fdc633
msgid "A case statement can be used to compare an expression, and then execute the code that matches."
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:6
# 25fb57f3bb674931a21f77c6481beffb
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:91
# 1e5e4ae39d374b5bb812f39172f6f145
msgid "Check Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:3
# dbba6c0d9163434689ee9e02da7cb763
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:5
# 798e968597b747a5a8344d0716b172f9
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:95
# ab8b4c749a13459a8b650964fdf8232c
msgid "Execute Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:3
# b5161c89a1cc40829cfb0b73927ce977
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:5
# 7a08fdee591c42a8a0aae8dad4b2b64b
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:99
# 11a2ed2a1eed488592e3334e4df40339
msgid "Loop over Array"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:3
# 23e09c04acf74fdf845ca1593afdacb4
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:5
# 513069fedb664501b5200e8937cd5bb6
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:103
# 524b29195234423cac7a4ad47adcf374
msgid "Loop over Hash"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:3
# 9eac3870ed2e46ad814e2a6f263d8388
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:5
# e115b1b91643414cbc118c9aefebd541
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:107
# 96006ece7a324c778f1ccb9b1c88d7a9
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# aabca60f2c27439f8894384305307493
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 0460218f4021468db47470ea32594196
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named ``mod_ssl``. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# 55a8065c794d47b395a553eb388273fb
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:111
# 302b21c7a389476589f272e82765bba0
msgid "|chef server_title|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# 96d791827bb141c698b9150d1c85221c
msgid "Use |knife| to add a recipe to the run-list for a node. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# 193aabe710b445c0b59c78778106c56c
msgid "More than one recipe can be added:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:115
# 985a969399f5402497724fda63145c47
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# 9bb19f7f13ed44fcae90fb6d36b0f2f7
msgid "Use a |json| file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# a5555c49b52447fda5c400e2c72fff78
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:119
# dad33f8c3fab4e5dbfa1cd9b857aa436
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 151f5f35e5d04c47a850b02024feb33d
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# a459cd0d00aa469585225a0632af5396
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 59f1296ab8574ee197611fd5e2a9fa4c
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:125
# 22f69c96c5e647a291b22d7c9932c196
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 4b55638d1ff4480e984d58ff97b320e3
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# c7c3ccd4655d4aa39efdcb4eb2518a95
msgid "Tags can be added and removed. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 8565167c87a942789868eb42b8023667
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 7793c0350d8c402c92de505083bbfade
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 8d4294f68d344f10a68b1027222d3af0
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 894d1643b1ce4e12bea7f711ac43f0e9
msgid "Will return something like this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:131
# b6835227e0a0415d90ed07fab4687aaf
msgid "End |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:5
# 47bf85a7e0f94a7fb370be50c4b13730
msgid "Sometimes it may be necessary to stop processing a recipe and/or stop processing the entire |chef client| run. There are a few ways to do this:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:7
# 8f7b08d09ed54e14b804260cb48405e5
msgid "Use the ``return`` keyword to stop processing a recipe based on a condition, but continue processing the |chef client| run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:8
# 031b7adcffd846bf96813cea353f2ad0
msgid "Use the ``raise`` keyword to stop a |chef client| run by triggering an unhandled exception"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:9
# 808ebffa9d074fdcb1c9b9e9f12045d2
msgid "Use a ``rescue`` block in |ruby| code"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:10
# 130e2563ade044d1b188e3efde8b9521
msgid "Use an `exception handler <http://docs.opscode.com/handlers.html>`_"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:11
# 69f0efc2f60f4ca0860ac36423e66e7b
msgid "Use ``Chef::Application.fatal!`` to log a fatal message to the logger and ``STDERR``, and then stop the |chef client| run"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:134
# a12d661db02f427b9f03cf9601a615c4
msgid "The following sections show various approaches to ending a |chef client| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:137
# ccebd8db85f149c0a1771fe0a97fb6df
msgid "return Keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:4
# 8a5e54f0dcf84760975856af482a66ea
msgid "The ``return`` keyword can be used to stop processing a recipe based on a condition, but continue processing the |chef client| run. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:18
# e0c2931e87234bc59fa7ed3d44ada269
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it's OK for a recipe to stop processing."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:141
# 004903ebc2b64245a9c54f3681f8a524
msgid "fail/raise Keywords"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 9d56a92ce00c4583aab5ce1f78036350
msgid "In certain situations it may be useful to stop a |chef client| run entirely by using an unhandled exception. The ``raise`` and ``fail`` keywords can be used to stop a |chef client| run in both the compile and execute phases."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# f53ab0bda4154a1798c7e03dad0fa1d7
msgid "Both ``raise`` and ``fail`` behave the same way when triggering unhandled exceptions and may be used interchangeably."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:7
# 997445de99c24e8d86516870e1706036
msgid "Use these keywords in a recipe---but outside of any resource blocks---to trigger an unhandled exception during the compile phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:21
# 34ec83e6a07d43a7bf99d3181cffd7cc
msgid "where ``node['platform'] == 'windows'`` is the condition that will trigger the unhandled exception."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:23
# 6ca4fee2ee1b46f686be091673f20a76
msgid "Use these keywords in the |resource ruby_block| resource to trigger an unhandled exception during the execute phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:34
# f7711c5f032a483bbc9c5fcc65c6e087
msgid "Use these keywords in a class. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:40
# 64d212ee542548cfbca7b1e2292a0ed4
msgid "and then later on:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:48
# aea393b73ba4447b92be107ad3402e56
msgid "or:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:145
# afffc7ec067f4ad3a49c1ecfb74cde4f
msgid "Rescue Blocks"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 9290063b06144effb4c07f8a42a461e3
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# 52acf8869df145ba99bb1b184f11efd6
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:149
# 3fc5650420bc4565a150c6251d74be74
msgid "Fatal Messages"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:4
# 6d54cc4ce5a44d899c81837b98884ee8
msgid "A |chef client| run is stopped after a fatal message is sent to the logger and ``STDERR``. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:10
# 9ab2c996af31431ba5bd6e1bf1743b3d
msgid "where ``condition`` defines when a ``\"log_message\"`` and an ``error_code`` are sent to the logger and ``STDERR``, after which the |chef client| will exit. The ``error_code`` itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:12
# 1ba1e905956c453db4b94099230b02d8
msgid "This approach is used within the |chef client| itself to help ensure consistent messaging around certain behaviors. That said, this approach is not recommended for use within recipes and cookbooks and should only be used when the other approaches are not applicable."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:14
# 184e668f0b0e422f81604d2aab31d63a
msgid "This approach should be used carefully when the |chef client| is run as a daemonized service. Some services---such as a runit service---should restart, but others---such as an init.d services---likely will not."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:154
# 26a0488a536a4b34a7ef428626b459df
msgid "node.run_state"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:5
# 475559020d56409d815ea38f50cc4deb
msgid "Use ``node.run_state`` to stash transient data during a |chef client| run. This data may be passed between resources, and then evaluated during the execution phase. ``run_state`` is an empty |ruby hash| that is always discarded at the end of the |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:7
# 7d5344b40c4941c09e4d292e1ed336b5
msgid "For example, the following recipe will install the |apache| web server, randomly choose |php| or |perl| as the scripting language, and then install that scripting language:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:30
# 77167ab965cb4fbd8ce9241641e78f15
msgid "where:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:32
# 37bd14e5a5474c03a7f728f157a79887
msgid "The |resource ruby_block| resource declares a ``block`` of |ruby| code that is run during the execution phase of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:33
# f44216edbea74fab8e8454164782ebf1
msgid "The ``if`` statement randomly chooses |php| or |perl|, saving the choice to ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:34
# 3cee23b8e04840cb91d15a0b4d990e85
msgid "When the |resource package| resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:35
# ce1fbb969a6c4abea873b331b42edecc
msgid "``lazy {}`` ensures that the |resource package| resource evaluates this during the execution phase of the |chef client| run (as opposed to during the compile phase)"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:37
# 2b7ee713d3cd4008a2f19b57bbd6e614
msgid "When this recipe runs, the |chef client| will print something like the following:"
msgstr ""


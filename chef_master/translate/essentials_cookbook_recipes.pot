# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes.rst:8
# 2d2ef537d38b4d108053760a884350bf
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# d233fb6d894a442499af0496957d9448
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# dc91191a1a354d87be31b396841ded94
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 0316a3ee3ad943bb9af6dd79f4178f9c
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 7cd63c1084874451a691bf8c97635b38
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# e51e7206b068495f8f7547e6516821a7
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 59082e1c3a8246edb7a3b14a6372435b
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 677f6f4534064052bd82148c10f0c86a
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# a16badce37ba4fcb9868462a9868dcce
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# f7e19b52badf4f0f84bc1c112895d2c9
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# ef937f75f6cd40c78246667124a5a2ce
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 6c5f26f6c4ce4d1b8418bfdcfcd5e3b0
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:13
# 6644b9f8be8041798a63e0b94861e2ce
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 4c75576dd5534360a56617327b46caea
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:16
# 1bfc5294cde04c7f9f6a19719bd2d884
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:19
# 94f99500aa7e40a7b264eeb6e242ca64
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 2dbbb2f927ea4c83a7f35d519146fe84
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 11c7e2da2998406fb8939b3e0359ca54
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 2579469c2726489fa64e7dc306c83185
# b6897a90b8624971bf2c24fd3e43f53c
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# e46b90fee90a43939f85075618cdf2ca
# 3c7853f969664a268aacfbf71fd48e52
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 9133a3a06d17428981e4dd46e45022ff
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 29c919ef5c64461dab1bffc8546bef8e
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 85efc974cebb4a6fb4b0824666b847ce
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 99ab2c0e6fc24ee280b4ef1a438e0a2b
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# feba48a2330843868a5862f4283f5f33
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# 7a5f16e4fd9448bda67baaf439d0ca57
# 8634fa0540a343eabad232efccd026cc
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 0cdfb2ee42944fec85dc8df8ae0454ad
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# 29d988e209a74444b7c9732acf56185c
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 9285a56ead9543229ca6db60424ab50b
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 1f8c49e0ad5f4fde995f2fe0cf079dc4
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# c701fb558b1a4ce2aedea705e70cae20
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:23
# 5706196754e04bfdb9b67e9edc194ed0
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 3a3a9bace6564303b85a8e15bec03822
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:27
# 55a892136f714c6089cd26f2484d8254
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# eeb45f6582484da3a803be0d3329447c
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# e5cfeaed87644582bdae08e58df8b6dc
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 0eba3b45a92a4aaba15a59cf338e02f3
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 18286bca90344e8294c09ab836c82c3d
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 0f00559c596e4c98b5a1aa9d72513b85
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 7eb4aba06310463bb970f63a1ea9a8c9
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 9e9d436ecf05475d99210c0a8fa4938a
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 45322b2e2eea480b8153f364952bea34
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 5e8080c8c670447586859323671e7e7f
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 4241010d865e43ef8f6f10e98d556651
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# a3093147257d432a8c1d2eebb7260a48
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 28c9b797b91448efba0e1b36c08f23ff
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 9169986748e149a884aa9ea64cc4d21f
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 6a7ca1de8a0b44bfa98a8d94f55f4b43
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 673b7f10c411412ea2da1e69d7baefd1
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# f61a83ba7e254775b3efb24e217016ae
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# eb6ebac46c4e46e5a92d3871668d69e2
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# bf21f4e23c19418b854f093b44b5fcca
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# af6f88317fea4ff390f64cc82ff087c5
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# b508eddc9830413286589aa8fed2ad9f
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:31
# 9426b8a90d8e47e98a7a655708bf44eb
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 362c5ecd3f2742a6b48a78c4127d0afe
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# e9a900504ec744e3917bf9dc8c9f1512
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 333274250e8744689e2ce31c0820bfe3
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# 8f96a63541814fe892990615dab0868f
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# 214a22f844e94ce9a87428b09b64f7c4
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 9107fdf672904c6fa3b1ba43d1738af5
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 7dae60724aa5451b85f3aaac061cd1d4
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# d339e7f390e14c9d9aed77437351b88c
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# f691f53dfa0e4c00a42d87cd855d51b9
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 4f4aafe3eff143e1b9819d3350ffff0c
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# 3a4e033ac6cc49faaee598987d187c80
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# f7d1d9c5fb434886b9231885140713cf
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 22b742aca80441949e3216b3be244cb5
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 28d1ec7bee244cabae7b109d17ed2046
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# d7b6546f1c2347d2a2aa842aa354d22a
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# d5789a5e53bb410ea994202dbb7d561a
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 1af1235dd3a84782a3a69a23e4cb1275
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# d3656f2f7cbd420f8c0be47f501c1b59
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:35
# 6229622d362a47b6ab3ff6db1a754d97
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 7fd758aeb1894e94b1ec1bc9bf99e473
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 5e73289effb2476982aa9da0188dc8e7
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 7399e4ee5d4c4dffb15e7b1d3378d3f3
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# c488a7cba4e44e8f8c1eb11a741b961d
msgid "``attribute?``"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:39
# c80056fcb259425585fa10b0ea891961
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# ed878029192341099aef50e1538a2aff
msgid "In |unix|, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# 4629af70c30b4fe995dcaa86a5ed762b
msgid "If processes is started by using the |resource execute| or |resource script| resources (or any of the resources based on those two resources, such as |resource script_bash|), use the ``environment`` attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 5e85ea6b8eec4659990f381fdb264155
msgid "The only environment being altered is the one being passed to the child process that is started by the |resource script_bash| resource. This will not affect the environment of the |chef client| or any child processes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:45
# ed0cdaaea9c04082ac843a544b00e2c7
msgid "Work with Recipes"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:46
# 835c451c03af48f4ba52be2d903cba5b
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:49
# 28387ea821c5452eb8f641f2884d83d5
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# bc7fde5481664b4bb6c021281bc14c6b
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# b1a1f15ee9b941d7a96f8ff6102a14e1
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# a05be01bd92645e084be1e88651fbe6a
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# b2eb9e5d3fff49ff8b885a0f94b855cf
msgid "The data bag item's keys and values can be accessed with a |ruby hash|:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:55
# 8817ed3469df4668977d5df7c4d4c753
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# aa0707bb7b064739bdcdbf24d9bc9240
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# e8b31533e3e74403ac6a7ecf892430ca
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# 132c62e697d14067a034bceb6af3aa2e
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:59
# abfe51ba1e3b441f8dca63b00794b834
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 1f22d8cb2dd8435d9e0cd635da1e6c87
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:63
# 303025a7bccb4603ba02b4d858e65fa5
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 7707811e0e3040658da672e59621a440
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 43788834a05e492aa3dc2f8d9e9fc4cd
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# b60e77caba244cd88e4ed387c05f57cd
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# e8a9050f2c194921966598deedf089bd
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:67
# 9644789b261848149edab7a5e02a6e1b
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 559d0dac4aba4a6d8bf21c9147daa45c
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# aa72a7d71644438cadb4212fd351d2fc
# 205826ea9a184a5dbe1d208bdb78864e
# 5c47d1c49cab42e9ac9187e664647bfd
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# d7568a54ea844c889329622d1d1c099c
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:71
# 76e368b85d9b40e5990dd19c6e50cf8a
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 63697751e92d4816b79c41c215809962
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:75
# c9db4b15cbe845daac5720a21ab61547
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 844baacbdc934cfd842041515cc31c6b
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# a7f334e100b543e8a62cea5ddc92c20f
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:79
# 4746bd30a21f48f68d1d531406cc4c47
msgid "Use |ruby|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 25591dd060dc4fe0ab721d8795f210c2
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:83
# 711e9022e0d744b58d6ff4d84ae637cb
msgid "Assign a value"
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:4
# 38057171096c4055985f2a9a3f2bc09c
msgid "A variable uses an equals sign (``=``) to assign a value."
msgstr ""

#: ../../step_recipe/step_recipe_assign_value_to_variable.rst:6
# b49efcccdd8c4297a975ca611fe35b80
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:87
# 13e8e9873ef74dec9151cfb49bb20f90
msgid "Use Case Statement"
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:4
# 76b3b31afd704b5ebc916e14f5abedf7
msgid "A case statement can be used to compare an expression, and then execute the code that matches."
msgstr ""

#: ../../step_recipe/step_recipe_case_statement.rst:6
# d624643f656143fe800278970bc391fd
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:91
# 15ec457402d24501b3dc9431af2b83a4
msgid "Check Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:3
# ad7eab4d58c54d1986cc3fa91fd73722
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../step_recipe/step_recipe_check_for_condition.rst:5
# b88c10e66b184f65ac632d9514c5a3b5
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:95
# b4f9328ae7fc4c38b39216607ad7f771
msgid "Execute Conditions"
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:3
# 8f9908b39ddf4006b7db1b4935aba9c1
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../step_recipe/step_recipe_execute_expression_by_condition.rst:5
# 386904a28c6c44808ca88f428cb7bb35
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:99
# c7ec6b3ccc184d598f491065adf96c5a
msgid "Loop over Array"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:3
# 25fa0d63075c4b14a6778f8b552b2dfb
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_array_of_package_names.rst:5
# 6bfc37b92f8b4d5bb1dfc6c3fa9fdcf6
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:103
# 6b8035e091f74780b10467ac3721fc4b
msgid "Loop over Hash"
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:3
# dbcb88d5d17e4d298acd861e7ffe8a3e
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../step_recipe/step_recipe_loop_over_hash_of_package_names.rst:5
# 7b99ce13275c4f3bb1f0fb6d7af27502
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:107
# 5c546fbabc404aaf95926e70efbac4ba
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# 17216b12e4db4de3a01dd08de4c45539
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 54938162a77d42869b885c31aa54b0c0
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named ``mod_ssl``. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# a87778fc2bc041c89d0bc1ddcf50255e
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:111
# 697f699c11d342a5b284ee5ab961d69d
msgid "|chef server_title|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# 161d246084204234b66f571505dd3fb3
msgid "Use |knife| to add a recipe to the run-list for a node. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# a06ca92df077455cb21d5b727abf93f9
msgid "More than one recipe can be added:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:115
# 482dffeef83847f9b3ab12b80553c5eb
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# 65008417812746f8bcc8666d85aef31c
msgid "Use a |json| file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# a3d8a4e597b54c88a1d415ad3e377fb6
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:119
# 34d60afa64ae4c9284e129a3c27a19ee
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 3d5489bc62ed4dd3935e104c7d46d6c2
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 4b6e2357c0484ade9ead5b47900911ba
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# a3a03280c6074ce6abf5bbc0a14ac100
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:125
# de5f18d116ed4c72ba6d5dc9cb00b29c
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# bb4ab27e61c242ffad5553d87c818f36
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# e334760f2d1c465285c65d82118dc385
msgid "Tags can be added and removed. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# ad81200222864fc8bbe987219c072aa6
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 28622bc16f5a4ba5b7285ae454e5f254
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 86006b19151e48a59e8fc38ae052fe95
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 368af62d5da145608f37cdd888d580da
msgid "Will return something like this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:131
# e468b7afb66344dbae22b1d1c4ce5185
msgid "End |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:5
# 50c20ab56fc640699f460ccfea9c2007
msgid "Sometimes it may be necessary to stop processing a recipe and/or stop processing the entire |chef client| run. There are a few ways to do this:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:7
# cf95d33b699842829e5ad064f5bea5b9
msgid "Use the ``return`` keyword to stop processing a recipe based on a condition, but continue processing the |chef client| run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:8
# 9aa0b654e5904b109f591129f586c748
msgid "Use the ``raise`` keyword to stop a |chef client| run by triggering an unhandled exception"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:9
# b99e8b2c103e4797ae6ef9c208046336
msgid "Use a ``rescue`` block in |ruby| code"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:10
# 2581067c3e9e4329b89649ee22de6964
msgid "Use an `exception handler <http://docs.opscode.com/handlers.html>`_"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run_end.rst:11
# 69b01c328adc4b489d7fab9dfe6709a6
msgid "Use ``Chef::Application.fatal!`` to log a fatal message to the logger and ``STDERR``, and then stop the |chef client| run"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:134
# 964635959a7946d1b0f6e1a315654c5e
msgid "The following sections show various approaches to ending a |chef client| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:137
# 131f7f7e745248819c208e62eb4d73dd
msgid "return Keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:4
# 59888d5f99274d2498300ede92154bcf
msgid "The ``return`` keyword can be used to stop processing a recipe based on a condition, but continue processing the |chef client| run. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:18
# cdf010c3c44b4230a0bafcfa36c2cb45
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. When the condition is met, stop processing the recipe. This approach is useful when there is no need to continue processing, such as when a package cannot be installed. In this situation, it's OK for a recipe to stop processing."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:141
# 59183a07070747f883cd4c2a118cffe4
msgid "fail/raise Keywords"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 5a341df8964341f6b304a0d4b7c8ba91
msgid "In certain situations it may be useful to stop a |chef client| run entirely by using an unhandled exception. The ``raise`` and ``fail`` keywords can be used to stop a |chef client| run in both the compile and execute phases."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 26a1c1b384e3485c9a7245ddb3aa3fe3
msgid "Both ``raise`` and ``fail`` behave the same way when triggering unhandled exceptions and may be used interchangeably."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:7
# b3db4c50e2dc40cfa49cb883d877d4d8
msgid "Use these keywords in a recipe---but outside of any resource blocks---to trigger an unhandled exception during the compile phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:21
# 5a2a703a63b34f10acaad9da8d943fe2
msgid "where ``node['platform'] == 'windows'`` is the condition that will trigger the unhandled exception."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:23
# 195b08ddd3e24fa080ec3ecaf7d54c4e
msgid "Use these keywords in the |resource ruby_block| resource to trigger an unhandled exception during the execute phase. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:34
# 63bf50153b7c4ecda5e726b628b4548f
msgid "Use these keywords in a class. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:40
# 33619b39e45c45b6951b9a77f5f911a3
msgid "and then later on:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:48
# 491e3912b82943c98ffae20afb951321
msgid "or:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:145
# 28a3d1fe13b945e387184e894f8c6809
msgid "Rescue Blocks"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 55894af526a04196822a905685855b29
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# e0d649fbda9b406b893cf6d60b3d792a
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:149
# d7b5f29d386e45dd9891547e0077a417
msgid "Fatal Messages"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:4
# cc5b74c5006f42ca8bb33574a5fcee3e
msgid "A |chef client| run is stopped after a fatal message is sent to the logger and ``STDERR``. For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:10
# 6ed5f3c464b14bd19dcd62a4f1d7cfdf
msgid "where ``condition`` defines when a ``\"log_message\"`` and an ``error_code`` are sent to the logger and ``STDERR``, after which the |chef client| will exit. The ``error_code`` itself is arbitrary and is assigned by the individual who writes the code that triggers the fatal message. Assigning an error code is optional, but they can be useful during log file analysis."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:12
# f7ef05e0cf8c436ca468e56ceaca1669
msgid "This approach is used within the |chef client| itself to help ensure consistent messaging around certain behaviors. That said, this approach is not recommended for use within recipes and cookbooks and should only be used when the other approaches are not applicable."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_application_fatal.rst:14
# adeeb30b9f27401598d5841f7daffb95
msgid "This approach should be used carefully when the |chef client| is run as a daemonized service. Some services---such as a runit service---should restart, but others---such as an init.d services---likely will not."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:154
# 9becb0a03a7d45d9b87e2cef80aaeb04
msgid "node.run_state"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:5
# 0ef0415ade2b4422b667312cb9191a28
msgid "Use ``node.run_state`` to stash transient data during a |chef client| run. This data may be passed between resources, and then evaluated during the execution phase. ``run_state`` is an empty |ruby hash| that is always discarded at the end of the |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:7
# 2251b00de0f24d9e939cd75719e5113f
msgid "For example, the following recipe will install the |apache| web server, randomly choose |php| or |perl| as the scripting language, and then install that scripting language:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:30
# 63f7ac07d8c748a496e79370bd276886
msgid "where:"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:32
# 4c62ccdc79fe49d0a36ed0348804b060
msgid "The |resource ruby_block| resource declares a ``block`` of |ruby| code that is run during the execution phase of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:33
# 13b6708f4a5f48d0a3c11e2fe0d9190d
msgid "The ``if`` statement randomly chooses |php| or |perl|, saving the choice to ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:34
# a66e8f156b904ad0b627d60ccc2e0e47
msgid "When the |resource package| resource has to install the package for the scripting language, it looks up the scripting language and uses the one defined in ``node.run_state['scripting_language']``"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:35
# 24c0566daf3642a095c9710fbb3f9cd6
msgid "``lazy {}`` ensures that the |resource package| resource evaluates this during the execution phase of the |chef client| run (as opposed to during the compile phase)"
msgstr ""

#: ../../includes_node/includes_node_run_context_node_run_state.rst:37
# 17c9d9ab9d33496d84bdc9099f38c8b9
msgid "When this recipe runs, the |chef client| will print something like the following:"
msgstr ""


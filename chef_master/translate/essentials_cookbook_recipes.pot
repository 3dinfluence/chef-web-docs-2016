# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes.rst:34
# db2a00b74c3840598561446efb08778a
msgid "About Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 7c8bdb4d4b2c4473a02c05754221ccf0
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 416546e29a124e259a3b95beb8729bc2
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 376e64f05396410db4540557734470d6
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# f10de7356999452f8587c910acf4962e
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 71a0177e7f1d4e9899d11b47b45507c8
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# c36abd6f863b46278cfcb8bb3f53d2a6
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 5da5f3693b0c4bb4bf82f79974873b92
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 92997591953044ddad15f9de8ccbbbdf
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 3060c75289ea4595a3966e018bb09afd
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# ccbca868139a42d9b1779f2f0786b7f8
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 839af2d6705e47978cf8a7b5524cc87e
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:39
# 4ca0992d03b74e319b11026846382f67
msgid "Recipe Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# c6f2f35665264fca9ba46fa96648c951
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:43
# 78d10404c5a244ab9b24dace6510bcbf
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 81fb4ac10bd7407c9a8da5ed75c2712a
msgid "The following types of attributes are available:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 3bb4a271377946d8a6c95c6d2c2e35fb
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# 7a4a2bfd9b63424b8bfd77d9eb55a6e5
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
# 78795eb894094b3794aec3e20d2311d6
# 129dd06210984a52a0a9e821c9f0a976
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 3279a9f3bbbb4d20b8106d29704008e8
msgid "A ``default`` attribute has the lowest attribute precedence and is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``default`` attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 53b05aaf1dd548c7b7c7f75b06861377
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 3c0903c42c6a4892b2bf7ec0c3bdd6ac
msgid "A ``force_default`` attribute can be used to ensure that role or environment default attributes do not take precedence over a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 3d4dfe056e2f4010976444af49866288
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 665a47e0b157440caae8650b42f23ea6
msgid "A ``force_override`` attribute can be used to ensure that role or environment override attributes do not take precedence over an ``override`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 71ec17dcf3a14750a03047d7b79d7f8f
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# dc114069a8a549ea9c64d4a5b94a7362
msgid "A ``normal`` attribute is an attribute that persists on the target system and is never reset during a |chef| run. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
# ad04fedd4d6e4fa492e6c2d236f49eba
# 8600c421343545c7af4a2123d0b6a6a4
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# e5513835bfbf47818c6bdaa22d802e48
msgid "An ``override`` attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An ``override`` attribute has a higher attribute precedence than ``default`` or ``normal`` attributes. An ``override`` attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses ``override`` attributes for role-specific or node-specific values only when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 6cdaca57b8534dd8b96781f7c9460384
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 5e63685fa9e441549341aefb719d7d44
msgid "An ``automatic`` attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An ``automatic`` attribute cannot be modified and always has the highest attribute precedence."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:47
# 685c3c9f8a0f4d6aa452e56d547527d8
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 5a89d41df4e9413db8d20b7d94ab3d7c
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:51
# 3b3bde534046451c9527002c8addfeab
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 8125d5127f33446dae93f08b6df161f1
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. In general, use the default attributes as much as possible (or even all the time). The merge order for attribute precedence will do most of the work, yet leaving many levels of precedence available for the situations where they are truly necessary."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 9e450a323add4408ac8594b623fb5a58
msgid "Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 133e70c644ab4ff8a8c21e74a30bf0b7
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# ba920d9c85e4463ea00b90ca98fa20d1
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# b1f6aa55725e4275a80afc849c54b481
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 3248404049dc43a8b95aa00fe3aacc24
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# e22215a9e9d94c8396a06fe3bcf58d29
msgid "Forced default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 95a81c94a77345398b1cab669d4d2132
msgid "Forced default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 4e585467c258487aab3f5d86ef07027d
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 78effb93355941a3b243a80cb224d2ce
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# d4db764989ae45978bffc7895e3a870d
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# fbff9b3a08be4074be77001bf313c893
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# ea2ff2197b3a434893b12df247f5b4be
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 37213d37e8cb4ea6811c8526a401e608
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# ed930836d73544aa8373c8139b3302cd
msgid "Forced override attributes applied in an attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:21
# 25fc4bcaf0b6469eab12e3b332bd2ad7
msgid "Forced override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 96630840d4a74a1585e77bb550113d94
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 0824820a514d45ea9a64d9ef8ad65379
msgid "In other words: an automatic attribute takes precedence over a forced override attribute, a forced override attribute takes precedence over an override attribute, an override attribute takes precedence over a normal attribute and so on."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 33095fa654a247acbfaaf37ea665bf2b
msgid "The precedence order for role and environment attributes for ``override`` attributes is reversed from ``default`` attributes. This allows ``override`` attributes to be applied for environments after they have been applied for roles. This allows a role, such as a database server or a web server, to exist in multiple environments, rather than requiring a set of roles for each environment."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:28
# 618d035ee3b74073a1fbc65ddd8bd1f3
msgid "Another way to view attribute precedence is with the following table:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:55
# e315a103053a450cbbd07cb3f396af38
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# a45bd2a34d43464890de3588a27a0b17
msgid "An automatic attribute is data that must be understood, but not modified. Automatic attributes are detected by |ohai| before every |chef| run. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment in which a node is running. An automatic attribute always has the highest attribute precedence and are saved to the |chef server| at the conclusion of every |chef| run so they can be indexed for search."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:59
# 156c520ee12f4b9388e95f47a43c6bdc
msgid "Attribute Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 4a1346b032ca4c7d880843a605554dec
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# f71a7a6d7a0a47d08def522799f9367d
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:63
# 5e8f414861dc4170bd01d2914bcf3f75
msgid "File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# dc41f272197342e08572d844719e0a08
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# dfc99e8d828342ffa6c953b62136c1e2
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 25a5f7b5f12c456e92de86b1b13b5cac
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 6b344dac5ae54cd5a5d21e243cb5ab53
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# baaca42ea01645e5bf1c1e97830fb123
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# a521c26660d346069a9a01543bd8f7bd
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# 8d1c6ea52cf541a1bc17e189120a5efa
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# 3813c63a30e44b8eaac58e7cf871f20c
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# 8c34484d42ba416cac154dcf62dfd09e
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# 4c77b42f0e71417595467da2672b1fd1
msgid "Using ``attribute?()`` in recipe"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:67
# 9e40f1b155764cb48dbe3d094665da81
msgid "Environment Variables"
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables.rst:4
# 13375a428c074d25a0fde51568794213
msgid "In Unix, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how you can use Chef to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:4
# 9ac4c41f2ecf47e7a3cc7ed06217157a
msgid "If you are starting a processes by using an execute or script resource, you can use the environment attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../../includes_environment_variables/includes_environment_variables_access_resource_attributes.rst:15
# 3d0bf7c0538c41e394c34903220913d1
msgid "Note that the only environment being altered is the environment being passed to the child process being started by the bash resource. This will not affect the environment of chef-client or subsequently started child processes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:74
# 66d038fb1d8247b8b15ecf5f9d99b7ab
msgid "Work with Recipes"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:75
# 2d18ce1b4e294b07b7ce93258148c6ee
msgid "The following sections show approaches to working with recipes."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:78
# 45a94e79216b48f686b83a96f42ebfb4
msgid "Use Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 988f064b089b43419a1068f8572c3b24
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 88fccacf49494180875ac4b49b9de559
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 980e5afe9d4b42d99449e49f5c40be76
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 50fa917d31f146b4b4e3b51ca8796298
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:84
# ec0393bbc1d84672855796850a69dbe5
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# ea9473633b5b4b00a1a1a1170d85143c
msgid "An encrypted data bag requires a secret key. |open ssl| can be used to generate a secret key with the following syntax:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# fd29c520f32d4ad989aa0b9ea1539db9
msgid "where ``encrypted_data_bag_secret`` is the name of the file which contains the secret key. For example, to create a secret key named \"secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# 5fb9fabd7a1646e587abe43a31d1231c
msgid "and then to use it to encrypt a data bag item named \"passwords\" located in a data bag named \"production\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:23
# 158336f823f345499c6a057ff9cc8bc8
msgid "This will open the |json| editor:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:33
# 5b4a278ffc744aeeb06cf7c858cb6dac
msgid "To view the data bag item without decryption, enter the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:39
#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:53
# 2f8cbb6e31f84f9c9d83a975daa49320
# 2673ef39c6b345f3a2307503416322ea
msgid "to return something similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:47
# c88e641414d2451c8818713369ef89be
msgid "and then to view the same data bag item, but with decryption:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:88
# 36153c8cf7444926b3add7c312b55036
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# 6fce5080dd654c0d9cfe4d6cc8e982da
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:92
# 84c91fbd35324d6b9d3bf5bd281898aa
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# b557fd6ea9174f51afeacb7cf1e2d93b
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# fdbdf8c694dd43539fbcee4e7f4c77b2
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# 20f6e3ec0d7f44c0a61355debb8e07c1
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# 1e6225830646438db80c85c1c9449d8d
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 201812260a084105b327e654c680cf31
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# ddbdb1962f6a4c1d84f1702c5be1197b
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# 23b19fd2712a4b31877a0287b0adf2d9
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:96
# 5ea4bf95e3334117bb80eed9072cb800
msgid "Assign Dependencies"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:4
# 67469a97cc294a7e98e87d99758697db
msgid "If a cookbook has a dependency on a recipe that is located in another cookbook, that dependency must be declared in the |metadata rb| file for that cookbook using the ``depends`` keyword."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:6
# 89cf9bf4875b4006a0b13e2411d1d995
msgid "Declaring cookbook dependencies is not required with |chef solo|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:8
# 32bbaeaef9a949079ced8f5a598f5053
msgid "For example, if the following recipe is included in a cookbook named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_cookbook_dependencies.rst:14
# 04e439d73b6240778667ddbd22c41af8
msgid "Then the |metadata rb| file for that cookbook would have:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:100
# fbbc6faee11a430d8b742f55725b476e
msgid "Create Exceptions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_exceptions_and_logging.rst:4
# 06748307e5214186b38e9bd3a67500b0
msgid "A recipe can write events to a |chef| log file and can cause exceptions using ``Chef::Log``. The levels include ``debug``, ``info``, ``warn``, ``error``, and ``fatal``. For example, to just capture information:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_exceptions_and_logging.rst:10
# 6b85bdad76bb49679da35ba8ff79d14c
msgid "Or to trigger a fatal exception:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:104
# 0a2b5b5dcd6b47c5b05ded2c49af29c8
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# df6d775b11644635acf7c7a33a300e8c
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# a44aed4c67c64acf908767e65629ebc7
# fe158ff68719450097ba560e57f9e2b3
# 17f9bb6e75c840bb84486345bcc8fd5d
msgid "For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# ae2040f96d5f4d4bb2ded92931a542ee
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:108
# 457bd0a74975476587d4dc015f52b791
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 961588a34fcd439eb86d60e670d837db
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:112
# 6388a03edd7544a88d1488fc25aca1d9
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 7a70c226fcef4c8d8faa17d300e43694
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# c33efb75de7d4bc3a0ac725ecf23cc82
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:116
# 8d47989bf6354bdea275b6acc856750a
msgid "Use Ruby"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_use_ruby.rst:5
# 418307d621eb45e4bd90387a4939fd6a
msgid "Anything that can be done with |ruby| can be used within a recipe, such as expressions (if, unless, etc.), case statements, loop statements, arrays, hashes, and variables. In |ruby|, the conditionals ``nil`` and ``false`` are false; every other conditional is ``true``."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:120
# 4441a25ed13943feb85e2c2f484c76d8
msgid "Assign a value"
msgstr ""

#: ../../steps/step_chef_recipe_assign_value_to_variable.rst:4
# 33b4a06786b04f12ba66d636c138b31a
msgid "A variable uses an equals sign (\"=\") to assign a value."
msgstr ""

#: ../../steps/step_chef_recipe_assign_value_to_variable.rst:6
# 1eac1afd6d9943399e95eaffc2a691ef
msgid "To assign a value to a variable:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:124
# c7fe6d7a516a4dc08dd3d471c04dda12
msgid "Use a case statement"
msgstr ""

#: ../../steps/step_chef_recipe_case_statement.rst:4
# 603a8daac9e04b3082dfb74b528f3b0d
msgid "A case statement can be used to compare an expression (specified by case) and then executing the code that matches the expression."
msgstr ""

#: ../../steps/step_chef_recipe_case_statement.rst:6
# 815d58ab29044ea0ac3ea7483c97c78c
msgid "To select a package name based on platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:128
# f373e25b19d54cb8a0b6bdc5b23ca3e2
msgid "Check for a condition"
msgstr ""

#: ../../steps/step_chef_recipe_check_for_condition.rst:3
# 153cad2ae9bf41e7a3c210c48c9e279a
msgid "An if expression can be used to check for conditions (true or false)."
msgstr ""

#: ../../steps/step_chef_recipe_check_for_condition.rst:5
# db32f0da693b40b29713496620cbd16a
msgid "To check for condition only for |debian| and |ubuntu| platforms:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:132
# 7da6186ef728426bb22e4cb80f2363a5
msgid "Execute a condition"
msgstr ""

#: ../../steps/step_chef_recipe_execute_expression_by_condition.rst:3
# c3dd4240b66d44b3a3f9d377475015ab
msgid "An unless expression can be used to execute code when a condition returns a false value (effectively, an unless expression is the opposite of an if statement)."
msgstr ""

#: ../../steps/step_chef_recipe_execute_expression_by_condition.rst:5
# e965fca042f1455a9da04239a44e1d8b
msgid "To use an expression to execute when a condition returns a false value:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:136
# cafbfb16a8484b24a59a640861673a6c
msgid "Loop over an array"
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_array_of_package_names.rst:3
# cfb8ece6133a42918ebc375cf0a7282b
msgid "A loop statement is used to execute a block of code one (or more) times. A loop statement is created when ``.each`` is added to an expression that defines an array or a hash. An array is an integer-indexed collection of objects. Each element in an array can be associated with and referred to by an index."
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_array_of_package_names.rst:5
# 7dea435cd9ca4eb1be88db5902cd2f13
msgid "To loop over an array of package names by platform:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:140
# b46a768edfdd4f00b608fe3c871cb20a
msgid "Loop over a hash"
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_hash_of_package_names.rst:3
# 3f41479635cf47ba8e47e1952bf22d97
msgid "A hash is a collection of key-value pairs. Indexing for a hash is done using arbitrary keys of any object (as opposed to the indexing done by an array). The syntax for a hash is: ``key => \"value\"``."
msgstr ""

#: ../../steps/step_chef_recipe_loop_over_hash_of_package_names.rst:5
# 47564a0a98214088bec4d116f2c61b50
msgid "To loop over a hash of gem package names:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:144
# 45de821b53954c4cbc6bfea7efbcbf16
msgid "Apply to Run-lists"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:4
# c92073378f58459e93bb8b3826a8feb1
msgid "A recipe must be assigned to a run-list using the appropriate name, as defined by the cookbook directory and namespace. For example, a cookbook directory has the following structure::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:12
# 0346fbb9c87b4cd39de4fe5adb668370
msgid "There are two recipes: a default recipe (that has the same name as the cookbook) and a recipe named mod_ssl. The syntax that applies a recipe to a run-list is similar to:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists.rst:23
# c2b0572d812049fd8debf71c73665477
msgid "where ``::default_recipe`` is implied (and does not need to be specified). On a node, these recipes can be assigned to a node's run-list similar to:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:148
# 8a028448c50c4a9b9cec8e43db98615d
msgid "|chef server|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:4
# f3539f7518b14a0c9cf95b06a3c76f9e
msgid "Use |knife| to add the recipe to the node's run-list. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_server.rst:10
# fa0ca2dc09224d5c92ad1f5b78720536
msgid "More than one recipe can to be added:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:152
# 9a07ed7c497545eaae15fef05b1bb857
msgid "|chef solo|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:4
# e02d88c123a54fa287b3fce95acf7fcf
msgid "Use a JSON file to pass run-list details to |chef solo| as long as the cookbook in which the recipe is located is available to the system on which |chef solo| is running. For example, a JSON file named \"dna.json\" contains the following details:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_apply_to_run_lists_chef_solo.rst:12
# 7855a5da03ed4789af0729f430f3fe53
msgid "To add the run-list to the node, enter the following:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:156
# e9a3b37d2e1e4df3ad457455a0f33140
msgid "Use Search Results"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# c6740dba587c403081256321b7797406
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 1bf48cf57f51456eb66aaa8aac8a1580
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 8074a8051fd545b4b910e66d6906493c
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:162
# 7ffd7f0f243f40679b1732df4d79bd75
msgid "Use Tags"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 6e4c98655ea8433b87795f114a3e7921
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 7f6073de8981498cbe0e4bab662a6ed2
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# d736bc7069e347309bd374a48e54297d
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 7836be6804ec4ae69afed465f3173337
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 8fddc19962a84c4ca4bb5968322368f6
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# a4f35e25e9ec427aaf370c557a24b8c9
msgid "Will return something like this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:168
# 2531a11b7b6f4c6e9548556823514812
msgid "End a Chef Run"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:169
# 1d173c06516c4f98a2e220bc7d888bc3
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:171
# 9e6da00d854a4e9ca51115241c41aa89
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:172
# d0df599b5cf245c287f3ce329b7b4486
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:173
# db6b2efb9e2c43c885d03ff1466a55a7
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:174
# 9e3f289488f7435cb194a6b8606221e2
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:175
# 9c2426d30d2f41dda959b04e1cf1697d
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:177
# b6b398ef0a5d4f7c95f92a72a790a098
msgid "The following sections show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:180
# 00df7d87b4ff4a6daf75ac9753b62da0
msgid "Use the raise keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# bd47fdfebce64f5bb81246cfcd193453
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 513c522895a646d3a8927877450d0153
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# c09de2d1ad4946b39cda82fbaca9d945
msgid "Place the ``raise`` keyword in a |resource ruby_block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# 419eb814d1694081ab8e3eec30b24cdb
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# 04b45871a0304b3db28758659b7073bd
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:184
# fcd0811020224cd2966646f74294dd2c
msgid "Use the return keyword"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# 10be961d3ca349f3b320d079cfcc04ed
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# b85aee21019b42ee99afcbfc37af2538
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:188
# 12cde0243fd8410791ae89d23fd5c7ac
msgid "Use a rescue block"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# eab7a455e39647d8a5ee483bd40e7c62
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# d2dc48ecf95d4653abf77f6c67feda02
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes.rst:192
# e825e45c6da241498a0145c951b0c50b
msgid "Send a message to a log file"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# 32f29559399d4629888116f94da93412
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# d1e3f3b43bb74f9f9c100c71cffa7611
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""


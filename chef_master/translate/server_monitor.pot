# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-07 14:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_monitor.rst:8
# b58cf486aaff42ca99d81d6f3bd3c4ab
msgid "Monitor"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor.rst:4
# 1d9311192dc84163abcbba74d352defb
msgid "Monitoring the |chef server oec| server involves two types of checks: application and system."
msgstr ""

#: ../source/server_monitor.rst:14
# 786f4650012f42d1a08dc0d55cb63f5c
msgid "Application Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application.rst:4
# 6f3cae60cbd440ccb50c22c12094c121
msgid "Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating."
msgstr ""

#: ../source/server_monitor.rst:18
# 5c93f273ebc54790a3c5ccf9c3f114ce
msgid "|couch db|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:5
# 2a86dafb6a7a46578ef76480c68f44f8
msgid "|couch db| can be polled directly using HTTP. If |couch db| is running it should respond on port 5984. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:11
#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:26
#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:11
# 15e81f0e1daf49f3a9ca522c8a90d8e8
# 082e0b8a69734fb8b1195fe5b31aa8d0
# 4b61750d6d3e4fad961006d5f87bbd25
msgid "which will return something similar to:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:20
# 698236aefdf544bc8ac043371c3cd378
msgid "or:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:37
# f2efb1aba60d40d49fe73ab78a8fe142
msgid "|couch db| can also be accessed using a web interface. For example, using an |ssh| tunnel:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:43
# 0d328689bccd49eca72ca29b5f0d5cae
msgid "and then use a local web browser and navigate to the following address::"
msgstr ""

#: ../source/server_monitor.rst:22
# b735e4e75e04404a8d540798e04f8857
msgid "|drbd|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:5
# 52bb1951fa7044ffb5846c34d6b42442
msgid "|drbdadm| is the management tool for |drbd|. It can be used to obtain status information and to alter the state of the |drbd| cluster. For more information about |drbdadm|, see http://www.drbd.org/users-guide/re-drbdadm.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:7
# c1ef86e2e48e480b9c2724a59c5afb54
msgid "``/proc/drbd`` is a virtual file that displays real-time status information about all currently-configured |drbd| resources. Use the following command to view the contents of this virtual file:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:13
# eb5ce540dbbb4b1a9a9f0186f4249da3
msgid "Use ``private-chef-ctl ha-status`` along with ``/proc/drbd`` to help evaluate the current state of the cluster. Follow the split-brain recovery procedures for |drbd| if the cluster becomes two unconnected pieces."
msgstr ""

#: ../source/server_monitor.rst:26
# 5d10ff38c1484e32a889dc63d9f41561
msgid "|erlang|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:5
# e002addb3a1a41c1baf09f6d676f157e
msgid "Many components of |chef server oec| are written using |erlang| and run on the |beam| virtual machine. One feature of |erlang| and |beam| is the ability to interact with the running service using a command shell. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:13
# 714b2773631b4f209a48dede5b01e3eb
msgid "where ``service_name`` is ``authz``, ``erchef``, or ``org_app``. This command will then open a shell that is connected to the |erchef| processes:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:19
# c0ebe7c19214454fbdf1b619309a32dd
msgid "Connecting to the |erlang| processes should only be done when directed by |company_name| support services."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:21
# d046b1d8a7c04e58beca8f6b9e9c5f8c
msgid "To connect to the |service authz| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:27
# 0268a212b14d4162977098c98a573784
msgid "To connect to the |service erchef| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:33
# d1f3cfa2f0334b27bfaafafe30e8b0c7
msgid "To connect to the |service orgcreator| service, use the following command:"
msgstr ""

#: ../source/server_monitor.rst:30
# f570f85fad184c77b3ae8a603a23e7d4
msgid "|nginx|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:5
# 71c74514b7bb461bafc697ceefe38b17
msgid "Use |nginx| to monitor for services that may be returning 504 errors. Use the following command on a front-end machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:11
# 597e260bae7741c7b87dfc44a284dba6
msgid "and then extract the URLs and sort them by ``uniq`` count:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:17
# 534471a3c3144e1d9c47ff1f32f82ca6
msgid "In a large installation, restricting these results to a subset of results may be necessary:"
msgstr ""

#: ../source/server_monitor.rst:34
# 7f6926eb89c14c6392b6639cabcd390f
msgid "|postgresql|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:5
# 884dec66826e411d90cc1588656421cc
msgid "|postgresql ctl| is the management tool for |postgresql|. It can be used to obtain information about data stored in |postgresql|. For more information about |postgresql ctl|, see http://www.postgresql.org/docs/manuals/, and then the doc set appropriate for the version of |postgresql| being used."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:7
# 1f4b0ce192fa4a72968101893a873132
msgid "To connect to the |postgresql| database, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:15
# 73bb09b5173340cc8fa02b9decb4566f
msgid "Connecting to the |postgresql| database should only be done when directed by |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:38
# 5b58bf8144b0400f947b161833a794a1
msgid "|rabbitmq|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:5
# 60058818c9f0409090503ba6c1198dcd
msgid "|rabbitmq ctl| is the management tool for |rabbitmq|. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about |rabbitmq ctl|, see https://www.rabbitmq.com/man/rabbitmqctl.1.man.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:7
# bad03ca0e9eb4de89ba97c654f18a908
msgid "To obtain status information for message queues, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:15
#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:13
# 6e4028fd15e44c94ae9cb10b9bd79d75
# af1b15473e744c66b19f158387bc41e9
msgid "to return something similar to:"
msgstr ""

#: ../source/server_monitor.rst:42
# 7a8fba41ee014adb9faef3cea5a33e7c
msgid "|redis|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:5
# 59145250fed04509a87decf4ac0e777b
msgid "|redis cli| is the management tool for |redis|. It can be used to obtain information about keys that are being used with |chef server oec|. For more information about |redis cli|, see http://redis.io/commands."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:7
# ff70028979f243159537efecb139e7f2
msgid "To verify that the connection to |redis| is alive, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:15
# dc7c40fd573d419db3a431b8f7aa9ad4
msgid "to return:"
msgstr ""

#: ../source/server_monitor.rst:46
# 50063a3afa0643f292a80311b8862fcb
msgid "Node and/or Workstation"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_client.rst:5
# 243f64098f4d41c9a122c23e730c2e18
msgid "If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the |service chef|, |service account|, or |service erchef| service. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:50
# 00e5885a608e4ac9909299b8334f512b
msgid "Disks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:5
# 9b9232e3d6d1449e8346f7c10361ef90
msgid "Over time, and with enough data, disks will fill up or exceed the per-disk quotas that may have been set for them and they will not be able to write data. A disk that is not able to write data will not be able to support certain components of |chef server oec|, such as |postgresql|, |rabbitmq|, service log files, and deleted file handles. Monitoring disk usage is the best way to ensure that disks don't fill up or exceed their quota."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:7
# 4974801aea4444cabfbdbe3cbf5f3630
msgid "The following components should be monitored for signs that disks may be rapidly filling up:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:9
# 7cc21b3c63e64e83a296f7f6c19639c3
msgid "**PostgreSQL** |postgresql| is the data store for |chef server oec|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:10
# 94d49f3bb7904da1a5edc069c2c4c635
msgid "**RabbitMQ** The |rabbitmq| data folder can fill up if the |service expander| service is not able to keep up with the data being moved into the search database by |rabbitmq|. When the |service expander| service falls behind, |rabbitmq| will start storing the individual messages on-disk while it waits for the |service expander| service to catch up. If the |rabbitmq| disk fills up completely, |rabbitmq| will need to be restarted to free up the disk space and any data that was stored on-disk will be lost."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:11
# 6ad4cf98ebd8458e92731023168b4a3a
msgid "**Log files** If ``/var/log/opscode`` is taking up a lot of disk space, ensure that the |chef server oec| log rotation cron job is running without errors. These errors can be found in ``/var/log/messages``, ``/var/log/syslog`` and/or the root user's local mail."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:12
# 47b53df8b28940938a4ab41e42172591
msgid "**Deleted file handles** Running processes with file handles associated with one (or more) deleted files will prevent the disk space being used by the deleted files from being reclaimed. Use the ``sudo lsof | grep '(deleted)'`` command to find all deleted file handles."
msgstr ""

#: ../source/server_monitor.rst:54
# ec8769e971964a6eb314b4f2761b15ef
msgid "Ports"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_ports.rst:5
# 0ef8cd80b9e24a67889f7c62e5102274
msgid "All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool |telnet| can also be used to initiate a |tcpip| connection:"
msgstr ""

#: ../source/server_monitor.rst:58
# 26e6f92f29904c71ac4dcb75ee961557
msgid "System Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system.rst:4
# 347140e2808542ddb1490624f109e642
msgid "System-level checks should be done for the following components: ports, services (|service erchef| and |service expander|), and high availability status."
msgstr ""

#: ../source/server_monitor.rst:62
# 800966f4d6544ecba8efbbc9b9a19fc9
msgid "ha-status"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:6
# a2a1e721bb0d4f818de3c9652e2bc0cc
msgid "The ``ha-status`` subcommand is used to to check the status for services running in a |ha| topology. This command will verify the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:8
# e59943755ee048a3ac7b998ef961edad
msgid "The |keepalived| daemon is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:9
# ee6080c4a0fe40f699cbb58baa26f9af
msgid "The |drbd| process is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:10
# b21583b4a0dc42768b2465c695f2ed52
msgid "The underlying block device or logical volume for |drbd| has been created and configured"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:11
# 5ea423a8cf58401c8bb7e2370765af2c
msgid "The |drbd| device exists"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:12
# a71b1b22562a4ea28d1e9c31c02d40ea
msgid "The current state of the server is ``master`` or ``backup``; any migration processes have completed"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:13
# f359d8ddf5dc407bb8d8f7b79bae9214
msgid "The failover virtual IP address is correctly attached to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:14
# 7401cc77f82c4540947080ffcbe6a021
msgid "The |drbd| state is correct based on the state of the server being ``master`` or ``backup``"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:15
# 5c2ec386571046698b91e85cc2eb2a3a
msgid "The |drbd| mount point is correctly mounted to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:16
# 98f2878d8cb64b87a5d3bc10bc8bbb80
msgid "The |drbd| replication IP addresses are pingable"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:17
# 5fbb85a5dc2f4cd98c35b89fc0b75695
msgid "The ``runit`` status of the services are correct (up or down) based on the ``master`` or ``backup`` state of the server"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:19
# 890cb64a20154191842da3770b864c83
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:25
# a0116c725a7d41ab947fe2a9430f2027
msgid "If this command runs successfully, it will return the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:31
# 252c0f8ff0d94c79abb64fa94a8ec90b
msgid "Otherwise it will print out a list of errors, similar to the following:"
msgstr ""

#: ../source/server_monitor.rst:66
# 257d54c318fa4affb535f4f72583073b
msgid "opscode-authz"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:5
# e9672734ff484061905353f2175c2069
msgid "The authz API provides a high-level view of the health of the |service authz| service with a simple endpoint: ``_ping``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:11
# db359da483154aa88f82af4c19cac5bf
msgid "This command typically prints a lot of information. Use |python| to use pretty-print output:"
msgstr ""

#: ../source/server_monitor.rst:70
# 0ce07d07ae9441b18344110e7bbcfc61
msgid "opscode-erchef"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:5
# 97bc25e2dfe64865a19812d382bfe62a
msgid "The status API provides a high-level view of the health of the system with a simple endpoint: ``_status``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:20
# 576ff3273f77406a9cf05d97184df928
msgid "For each of the upstream services, ``pong`` or ``fail`` is returned. The possible upstream names are:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:22
# ac697ad0a2c649efa0ca543989a3ac7a
msgid "``chef_solr`` (for the |service solr| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:23
# ad8a5150102847e8afcbd8d1c589e646
msgid "``chef_sql`` (for the |service postgresql| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:24
# 5a671c94ef534fe7a94045e7b45dcf0c
msgid "``chef_otto`` (for the |service couchdb| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:25
# d580bfb0260942a2929a421c402a4077
msgid "``oc_chef_authz`` (for the |service authz| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:27
# b5c8f401b0f04ea0ada543ba1a01d592
msgid "If any of the status values return ``fail``, this typically means the |chef server| is unavailable for that service."
msgstr ""

#: ../source/server_monitor.rst:74
# 7fe80c5625544128b28f99af429acb05
msgid "opscode-expander"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander.rst:4
# 940b93910815430b9d9855a705818d6e
msgid "As the queue depth increases it may take longer for updates posted to the |chef server| by each |chef client| to be added to the search indexes on the |chef server|. The depth of this queue should be monitored using the following command:"
msgstr ""

#: ../source/server_monitor.rst:78
# 9c13f2bd8b6d46eba1f076de03c5e887
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# b5cb0a98e4384b36ae8b4bbe7290cceb
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:5
# 942d308388524a3592fca141e1e26ea7
msgid "If the search indexes are not being updated properly, first ensure that the |service expander| service is running on the backend machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:11
# 9631bc7629b942e990e3262034664f59
msgid "and then (if it is not running), start the service:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:17
# f40af458b1114166bc53fcba9b5147dd
msgid "If the |service expander| does not start correctly, then take a look at the ``/var/log/opscode/opscode-expander/current`` log file for error messages."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:19
# f8acdf0f92ab411497d563fa8748cb82
msgid "If the |service expander| is running, check the queue length:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:25
# bd7fd815358349de956f2a22bf331ea8
msgid "If the number of total messages continues to increase, increase the number of workers available to the |service expander| service."
msgstr ""

#: ../source/server_monitor.rst:84
# bb0f5dbea639496d8e887225c59e287a
msgid "opscode-expanderctl"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander.rst:4
# 27ff8f23f1b843d5a181eb2f8687a3b3
msgid "The |opscode expander ctl| executable can be used to generate status information for the |service expander| service. The |opscode expander ctl| executable is run as a command-line tool from the master backend machine."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:6
# ca60d818bdd0489d8ade1c1ab49960e4
msgid "This tool has the following syntax::"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:10
# 9f39a25ee00648a699d23a7d187669a6
msgid "This tool has the following options:"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:13
# 2af40ccd78004d4480d25493f665ad20
msgid "Use to show the log level for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:16
# 5181ab99e9f84a5dba35f4199b9ab665
msgid "Use to show the status for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:19
# 195dd7eb3b42499887f387863b38d839
msgid "Use to display the aggregate queue backlog."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:22
# 0afd2e9467e24aeba13024614b87c1b6
msgid "Use to show the backlog and consumer counts for each vnode queue."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:5
# d9be974349e9404f9444b0a41a69eb87
msgid "For example, to view the aggregate queue backlog, enter the following:"
msgstr ""


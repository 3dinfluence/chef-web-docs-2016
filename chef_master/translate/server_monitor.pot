# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-14 12:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_monitor.rst:33
# 5e25d72d3db54dc4802a68754c8dafda
msgid "Monitor"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor.rst:4
# 728353a692a54a0697e23acbd3de60ce
msgid "Monitoring the |chef server oec| server involves two types of checks: application and system."
msgstr ""

#: ../source/server_monitor.rst:39
# 16751778bcf74b979731b0c264250797
msgid "Application Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application.rst:4
# 8d8b04d975314cf18c8e46b7f3b57231
msgid "Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating."
msgstr ""

#: ../source/server_monitor.rst:43
# 0c5990cdf69f467f8cb0ef8251657a96
msgid "|couch db|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:5
# 3a0d5f2081f6446fb12ea6708bb65731
msgid "|couch db| can be polled directly using HTTP. If |couch db| is running it should respond on port 5984. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:11
#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:26
#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:11
# edfc3ae4a7594b8785b85064205ae38c
# e7cd838c306c455e9c07cc3ecb8d95d2
# 1ae39fb0d40840b4914aabf720c2080b
msgid "which will return something similar to:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:20
# 72133b63e209468ca74cc6ae7cb72072
msgid "or:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:37
# e426af44fa3a4a568519ab58bdb7dcb0
msgid "|couch db| can also be accessed using a web interface. For example, using an |ssh| tunnel:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:43
# fd6f44918a864b5187a2a4d942b19faa
msgid "and then use a local web browser and navigate to the following address::"
msgstr ""

#: ../source/server_monitor.rst:47
# eddb1c6e521b414691b0fc5becb6671e
msgid "|drbd|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:5
# 5e143933115041bd9701f8d1ff86f858
msgid "|drbdadm| is the management tool for |drbd|. It can be used to obtain status information and to alter the state of the |drbd| cluster. For more information about |drbdadm|, see http://www.drbd.org/users-guide/re-drbdadm.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:7
# ca8513bd63c042e2837960d3d0ef6bed
msgid "``/proc/drbd`` is a virtual file that displays real-time status information about all currently-configured |drbd| resources. Use the following command to view the contents of this virtual file:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:13
# c1a14c6f9b8b4d4a957b21c9b90ed44c
msgid "Use ``private-chef-ctl ha-status`` along with ``/proc/drbd`` to help evaluate the current state of the cluster. Follow the split-brain recovery procedures for |drbd| if the cluster becomes two unconnected pieces."
msgstr ""

#: ../source/server_monitor.rst:51
# 9e5fadbfb12e433d8c5db9e62dd89526
msgid "|erlang|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:5
# c5f3636d1c3546168e4a90956fc6fd83
msgid "Many components of |chef server oec| are written using |erlang| and run on the |beam| virtual machine. One feature of |erlang| and |beam| is the ability to interact with the running service using a command shell. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:13
# 31c82749e19d4c539b2e3e58a6d6d9ee
msgid "where ``service_name`` is ``authz``, ``erchef``, or ``org_app``. This command will then open a shell that is connected to the |erchef| processes:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:19
# 7b6739da0fac48e5812939589bc7add9
msgid "Connecting to the |erlang| processes should only be done when directed by |opscode| support services."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:21
# ab48a1bbbf3642f0b19a97eef03422f6
msgid "To connect to the |service authz| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:27
# 5752a558383f40c1a7e6867a7b1f2163
msgid "To connect to the |service erchef| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:33
# 4e702899d7354e57befad3ca26fa223b
msgid "To connect to the |service orgcreator| service, use the following command:"
msgstr ""

#: ../source/server_monitor.rst:55
# 1dfc15ae60a042af91fc16a8d5c2a533
msgid "|nginx|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:5
# 3633bcbe351e42109f1c1745c1c4c115
msgid "Use |nginx| to monitor for services that may be returning 504 errors. Use the following command on a front-end machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:11
# ddff7fec9cfa4cd8bcff7b12b606239d
msgid "and then extract the URLs and sort them by ``uniq`` count:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:17
# e7c37c4e38874cc8bc4a2aed2b8fe9a1
msgid "In a large installation, restricting these results to a subset of results may be necessary:"
msgstr ""

#: ../source/server_monitor.rst:59
# aa4b751796a74c8cb099d51c8fdae470
msgid "|postgresql|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:5
# e46ba93102ec4befaa2031cfba76b63e
msgid "|postgresql ctl| is the management tool for |postgresql|. It can be used to obtain information about data stored in |postgresql|. For more information about |postgresql ctl|, see http://www.postgresql.org/docs/manuals/, and then the doc set appropriate for the version of |postgresql| being used."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:7
# 838f31883ceb410fa65813880fe063b5
msgid "To connect to the |postgresql| database, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:15
# 9763dd27251049b982fc86c9948eb3e6
msgid "Connecting to the |postgresql| database should only be done when directed by |opscode| support services."
msgstr ""

#: ../source/server_monitor.rst:63
# 3e26c5e575a3409aad3bcbeb5ac702a2
msgid "|rabbitmq|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:5
# d6ec7cdef517419dbc117074d2fa2148
msgid "|rabbitmq ctl| is the management tool for |rabbitmq|. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about |rabbitmq ctl|, see https://www.rabbitmq.com/man/rabbitmqctl.1.man.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:7
# 394f38bddb3f46c786997345b594393c
msgid "To obtain status information for message queues, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:15
#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:13
# bc0a28ab752044a88343ae33e77f350c
# 7814efa8c2254e909d81d0160d5cf481
msgid "to return something similar to:"
msgstr ""

#: ../source/server_monitor.rst:67
# be7aac5934a748abb3123d73483f1a8d
msgid "|redis|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:5
# 82eee39715574114a0f1639ecbfd0901
msgid "|redis cli| is the management tool for |redis|. It can be used to obtain information about keys that are being used with |chef server oec|. For more information about |redis cli|, see http://redis.io/commands."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:7
# 2a2c9b3b63b340c6a228aa9f2fc9d264
msgid "To verify that the connection to |redis| is alive, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:15
# 7b4a474b301f4f75afd9ce8c5565762a
msgid "to return:"
msgstr ""

#: ../source/server_monitor.rst:71
# a06d3b58bfaf4778968d30839296d60a
msgid "Node and/or Workstation"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_client.rst:5
# b7d7020138a345d7b82bc9c925060689
msgid "If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the |service chef|, |service account|, or |service erchef| service. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact |opscode| support services."
msgstr ""

#: ../source/server_monitor.rst:75
# 4c7a279361724c9097a87bde03dc61bb
msgid "Disks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:5
# 71df1b71718e46a49bad2d0cd441cbbc
msgid "Over time, and with enough data, disks will fill up or exceed the per-disk quotas that may have been set for them and they will not be able to write data. A disk that is not able to write data will not be able to support certain components of |chef server oec|, such as |postgresql|, |rabbitmq|, service log files, and deleted file handles. Monitoring disk usage is the best way to ensure that disks don't fill up or exceed their quota."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:7
# f1a2b477c5c54eed87e2fa8021613cde
msgid "The following components should be monitored for signs that disks may be rapidly filling up:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:9
# b15af17f98d94143941e2083f4eb4734
msgid "**PostgreSQL** |postgresql| is the data store for |chef server oec|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:10
# 005a158668eb48f0a43029c9d2c5be92
msgid "**RabbitMQ** The |rabbitmq| data folder can fill up if the |service expander| service is not able to keep up with the data being moved into the search database by |rabbitmq|. When the |service expander| service falls behind, |rabbitmq| will start storing the individual messages on-disk while it waits for the |service expander| service to catch up. If the |rabbitmq| disk fills up completely, |rabbitmq| will need to be restarted to free up the disk space and any data that was stored on-disk will be lost."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:11
# 6cec16d2e61a498db4ee76624b1b495f
msgid "**Log files** If ``/var/log/opscode`` is taking up a lot of disk space, ensure that the |chef server oec| log rotation cron job is running without errors. These errors can be found in ``/var/log/messages``, ``/var/log/syslog`` and/or the root user's local mail."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:12
# e1604470caf14f1297787c78d2051040
msgid "**Deleted file handles** Running processes with file handles associated with one (or more) deleted files will prevent the disk space being used by the deleted files from being reclaimed. Use the ``sudo lsof | grep '(deleted)'`` command to find all deleted file handles."
msgstr ""

#: ../source/server_monitor.rst:79
# 37cf32034303495db4dfbe182e507b91
msgid "Ports"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_ports.rst:5
# e9aca0f64c474847b6b986f82d72b186
msgid "All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool |telnet| can also be used to initiate a |tcpip| connection:"
msgstr ""

#: ../source/server_monitor.rst:83
# b51933c21dc84460887f01154e2baa4a
msgid "System Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system.rst:4
# a6acb30558794cd19da69f02ed65a213
msgid "System-level checks should be done for the following components: ports, services (|service erchef| and |service expander|), and high availability status."
msgstr ""

#: ../source/server_monitor.rst:87
# 31cbcf4c7cde403c99f0535e6f142924
msgid "ha-status"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:6
# 8f8ee6e9b8bf40a299670513b0324b50
msgid "The ``ha-status`` subcommand is used to to check the status for services running in a |ha| topology. This command will verify the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:8
# 0b717921493845eaa578c9e6c6f9ab1a
msgid "The |keepalived| daemon is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:9
# 19896426026d4651a0accc234bc5f1d8
msgid "The |drbd| process is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:10
# e52e46be62f449c9b5a8692b056ff7b8
msgid "The underlying block device or logical volume for |drbd| has been created and configured"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:11
# cc0ad3918f944729b3c5767975e51938
msgid "The |drbd| device exists"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:12
# c4dd3f2a33fc417986b6cb319d3f380a
msgid "The current state of the server is ``master`` or ``backup``; any migration processes have completed"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:13
# 053ea24237e94ad4abf2ab168e8ae56f
msgid "The failover virtual IP address is correctly attached to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:14
# e34356ff6ef34c959e1063a3ca9fce65
msgid "The |drbd| state is correct based on the state of the server being ``master`` or ``backup``"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:15
# 53eb8796b8a24215bc64e3d8816c6c0c
msgid "The |drbd| mount point is correctly mounted to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:16
# e43b96dce4f949a29adc0723501475d8
msgid "The |drbd| replication IP addresses are pingable"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:17
# 78c833e940754234b91fa50744fbd76f
msgid "The ``runit`` status of the services are correct (up or down) based on the ``master`` or ``backup`` state of the server"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:19
# d39e5b4704e4472cbf4d272fc0897c75
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:25
# 6f938e229a954f50aa2278ecf8d38f96
msgid "If this command runs successfully, it will return the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:31
# 42bdb2649bc349ff8fc141e54c93a329
msgid "Otherwise it will print out a list of errors, similar to the following:"
msgstr ""

#: ../source/server_monitor.rst:91
# 302d031b76874881a00c668fff48b0b3
msgid "opscode-authz"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:5
# 7a03d8475add487da92fcf8e255b7f9e
msgid "The authz API provides a high-level view of the health of the |service authz| service with a simple endpoint: ``_ping``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:11
# 35f632d5509f4e4db662cf9ce36c7322
msgid "This command typically prints a lot of information. Use |python| to use pretty-print output:"
msgstr ""

#: ../source/server_monitor.rst:95
# adadd690e2994a9a8b882975012df8bb
msgid "opscode-erchef"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:5
# 544a892bda0b4e10a3db352031f1a1fd
msgid "The status API provides a high-level view of the health of the system with a simple endpoint: ``_status``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:20
# 08ca86d8cec9472182269b4059616916
msgid "For each of the upstream services, ``pong`` or ``fail`` is returned. The possible upstream names are:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:22
# bf287080bd59448daf7a9bbe9f93c898
msgid "``chef_solr`` (for the |service solr| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:23
# af30d2e709e24f53ab8aa7bf024360cc
msgid "``chef_sql`` (for the |service postgresql| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:24
# 4cd192efb8d74f4d8201def1cce43b89
msgid "``chef_otto`` (for the |service couchdb| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:25
# cfacbc066a40424baa4dd5b0b0896853
msgid "``oc_chef_authz`` (for the |service authz| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:27
# 9d3555fbd4a64bbb90bafb149b5edd47
msgid "If any of the status values return ``fail``, this typically means the |chef server| is unavailable for that service."
msgstr ""

#: ../source/server_monitor.rst:99
# 43f0ee1883c642efbb308ce604a762a8
msgid "opscode-expander"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander.rst:4
# 5087afb2ca584b7a9d3fa89a8400953c
msgid "As the queue depth increases it may take longer for updates posted to the |chef server| by each |chef client| to be added to the search indexes on the |chef server|. The depth of this queue should be monitored using the following command:"
msgstr ""

#: ../source/server_monitor.rst:103
# 5f510802bcfc4bc1ba5658507bd4c4b7
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 4f8096cbf99d46329dbea8e1dc5d9842
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:5
# 1d929b9871e84820a59e8629b79d31d3
msgid "If the search indexes are not being updated properly, first ensure that the |service expander| service is running on the backend machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:11
# 75b4dbeaa3304677af3cfc5aaa4e16bb
msgid "and then (if it is not running), start the service:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:17
# 33700f71b3c8455786fff0a1155d3406
msgid "If the |service expander| does not start correctly, then take a look at the ``/var/log/opscode/opscode-expander/current`` log file for error messages."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:19
# 026ef57e781f41ac923dcb6cab91332e
msgid "If the |service expander| is running, check the queue length:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:25
# 0600a1fa05074f64a3c4584df8ecd6a1
msgid "If the number of total messages continues to increase, increase the number of workers available to the |service expander| service."
msgstr ""

#: ../source/server_monitor.rst:109
# b1e3df3d9478420f8c133fbc474d4169
msgid "opscode-expanderctl"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander.rst:4
# 5af8123dbb194882aba7bd23c53b0159
msgid "The |opscode expander ctl| executable can be used to generate status information for the |service expander| service. The |opscode expander ctl| executable is run as a command-line tool from the master backend machine."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:6
# f2432057f25c4f06854b9abd25f07647
msgid "This tool has the following syntax::"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:10
# 06c357f848b747968007bfb0e9a621a5
msgid "This tool has the following options:"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:13
# 8d36f01215244ad8a4026c80e5b14478
msgid "Use to show the log level for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:16
# 2024145f3ff04af1a9a67f469658d46f
msgid "Use to show the status for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:19
# 1f8acde0ea28402096d6d810c8338b0a
msgid "Use to display the aggregate queue backlog."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:22
# 5319fa807710407e91a9b24bebf24a40
msgid "Use to show the backlog and consumer counts for each vnode queue."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:5
# 71f1b7a8e25a4b8a9c7c4e6380f19c0e
msgid "For example, to view the aggregate queue backlog, enter the following:"
msgstr ""


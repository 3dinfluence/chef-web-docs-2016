# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 23:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_monitor.rst:8
# 420a113897814d1a8dfe27cb0ed0aa88
msgid "Monitor"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor.rst:4
# 0408ff1fda5d404e8d91c7b1af605cd4
msgid "Monitoring the |chef server oec| server involves two types of checks: application and system."
msgstr ""

#: ../source/server_monitor.rst:14
# 9225fd23486a48bdaf2674f46dbc45a7
msgid "Application Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application.rst:4
# bad221e9aaeb46d0a8e1bf60502cd5f9
msgid "Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating."
msgstr ""

#: ../source/server_monitor.rst:18
# dbd3843e36544439a934bd9a644f72a8
msgid "|couch db|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:5
# 7e15014a571842f6af14a36232dd3de7
msgid "|couch db| can be polled directly using HTTP. If |couch db| is running it should respond on port 5984. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:11
#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:26
#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:11
# 86c61be834184379a8d359da289bdd3d
# b84cc1bee79a4147a3660797587e9268
# 99d7016246794a8898bd21ac00456a4a
msgid "which will return something similar to:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:20
# 5611c263c3de4b0ebadd9471a0af00dd
msgid "or:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:37
# f789fe9995444e69890c3d7a09586295
msgid "|couch db| can also be accessed using a web interface. For example, using an |ssh| tunnel:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:43
# 028b9c13710845d3a2d4288afaba90fa
msgid "and then use a local web browser and navigate to the following address::"
msgstr ""

#: ../source/server_monitor.rst:22
# d03a50464d0744a19280ac86d666ec0a
msgid "|drbd|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:5
# eb9ef59cdd52491bb37c7bd473016504
msgid "|drbdadm| is the management tool for |drbd|. It can be used to obtain status information and to alter the state of the |drbd| cluster. For more information about |drbdadm|, see http://www.drbd.org/users-guide/re-drbdadm.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:7
# 333b6f79a60245e280901cd86ec0e5be
msgid "``/proc/drbd`` is a virtual file that displays real-time status information about all currently-configured |drbd| resources. Use the following command to view the contents of this virtual file:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:13
# 9f5ba4dff7e24354b1d641b6dec8b485
msgid "Use ``private-chef-ctl ha-status`` along with ``/proc/drbd`` to help evaluate the current state of the cluster. Follow the split-brain recovery procedures for |drbd| if the cluster becomes two unconnected pieces."
msgstr ""

#: ../source/server_monitor.rst:26
# fe725d46e7b14a45a09169ee2dec78c9
msgid "|erlang|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:5
# 340a11ba784b42a4800156865eff3d3f
msgid "Many components of |chef server oec| are written using |erlang| and run on the |beam| virtual machine. One feature of |erlang| and |beam| is the ability to interact with the running service using a command shell. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:13
# df207a35d27e4e4f839e6c63b8bd9137
msgid "where ``service_name`` is ``authz``, ``erchef``, or ``org_app``. This command will then open a shell that is connected to the |erchef| processes:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:19
# 6054d3d50078413baefd89e2650a9183
msgid "Connecting to the |erlang| processes should only be done when directed by |company_name| support services."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:21
# e833bcb9672b47cf878d3556f183162b
msgid "To connect to the |service authz| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:27
# 30573ae6d6884f20825df616aef056f5
msgid "To connect to the |service erchef| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:33
# 1d7cd2adf17a4dfbb14e71722d290144
msgid "To connect to the |service orgcreator| service, use the following command:"
msgstr ""

#: ../source/server_monitor.rst:30
# e23d83436331460c8b9690fd92fe2eb4
msgid "|nginx|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:5
# 09729421793647528ca59fa10c10d0a7
msgid "Use |nginx| to monitor for services that may be returning 504 errors. Use the following command on a front-end machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:11
# 3ffb664f47f24db997b33b74a3f7eb31
msgid "and then extract the URLs and sort them by ``uniq`` count:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:17
# 640dca72ee3c433fac8d37c8d04acb1a
msgid "In a large installation, restricting these results to a subset of results may be necessary:"
msgstr ""

#: ../source/server_monitor.rst:34
# c9a17c9c7b36424e95f175f46e22314c
msgid "|postgresql|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:5
# b96517818ee341eea76eb1e1da8af3a3
msgid "|postgresql ctl| is the management tool for |postgresql|. It can be used to obtain information about data stored in |postgresql|. For more information about |postgresql ctl|, see http://www.postgresql.org/docs/manuals/, and then the doc set appropriate for the version of |postgresql| being used."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:7
# 9b0c7ca02d0b4b60833bf8e492e8c2f3
msgid "To connect to the |postgresql| database, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:15
# abe56646db3b4d22a463d2b7ee27ec5c
msgid "Connecting to the |postgresql| database should only be done when directed by |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:38
# b7063a839ab24ef281df299529ed95bf
msgid "|rabbitmq|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:5
# 1e2a8887c0a3414f841de2072bbca515
msgid "|rabbitmq ctl| is the management tool for |rabbitmq|. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about |rabbitmq ctl|, see https://www.rabbitmq.com/man/rabbitmqctl.1.man.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:7
# bc298b7c9127455cb2dab736dc6db9a0
msgid "To obtain status information for message queues, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:15
#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:13
# 2a1d0166e06b4efab404e402f637a39e
# 8b1116fe98084602b326c3844c5980ab
msgid "to return something similar to:"
msgstr ""

#: ../source/server_monitor.rst:42
# c3a46958acc543b29f8b23bc9b3ef330
msgid "|redis|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:5
# aa9bff642c444a6787bcd43c49421b09
msgid "|redis cli| is the management tool for |redis|. It can be used to obtain information about keys that are being used with |chef server oec|. For more information about |redis cli|, see http://redis.io/commands."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:7
# 200bedcde79d4b2398c26468b72de995
msgid "To verify that the connection to |redis| is alive, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:15
# 1e2f4d93665f440cbbd970e6c4bef4a7
msgid "to return:"
msgstr ""

#: ../source/server_monitor.rst:46
# 7f3af82564804eedac349ab6d761e13c
msgid "Node and/or Workstation"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_client.rst:5
# 121dbd73ccdc4da5b0e7eca4e2921ecf
msgid "If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the |service chef|, |service account|, or |service erchef| service. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:50
# 0b0c82f82fbc4fd588f7074fdf0b7218
msgid "Disks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:5
# b50638babd37447faa5c7eeeca6a18ea
msgid "Over time, and with enough data, disks will fill up or exceed the per-disk quotas that may have been set for them and they will not be able to write data. A disk that is not able to write data will not be able to support certain components of |chef server oec|, such as |postgresql|, |rabbitmq|, service log files, and deleted file handles. Monitoring disk usage is the best way to ensure that disks don't fill up or exceed their quota."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:7
# f928897f156a4865a726d298f5733100
msgid "The following components should be monitored for signs that disks may be rapidly filling up:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:9
# 8a9d502910564da8b38d0d9e73fcc254
msgid "**PostgreSQL** |postgresql| is the data store for |chef server oec|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:10
# 27c3d6bba1254719973723f6c257bdaf
msgid "**RabbitMQ** The |rabbitmq| data folder can fill up if the |service expander| service is not able to keep up with the data being moved into the search database by |rabbitmq|. When the |service expander| service falls behind, |rabbitmq| will start storing the individual messages on-disk while it waits for the |service expander| service to catch up. If the |rabbitmq| disk fills up completely, |rabbitmq| will need to be restarted to free up the disk space and any data that was stored on-disk will be lost."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:11
# d685c51192f94e7a88ecf119792a6de6
msgid "**Log files** If ``/var/log/opscode`` is taking up a lot of disk space, ensure that the |chef server oec| log rotation cron job is running without errors. These errors can be found in ``/var/log/messages``, ``/var/log/syslog`` and/or the root user's local mail."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:12
# 6cf18d008fc4403c81a8cc8c6eb0ce7b
msgid "**Deleted file handles** Running processes with file handles associated with one (or more) deleted files will prevent the disk space being used by the deleted files from being reclaimed. Use the ``sudo lsof | grep '(deleted)'`` command to find all deleted file handles."
msgstr ""

#: ../source/server_monitor.rst:54
# 5e5daf231b8c4087b5f3ae2c8e04b5b9
msgid "Ports"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_ports.rst:5
# fa11a2769f934c0bbe2893b2435ec3c0
msgid "All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool |telnet| can also be used to initiate a |tcpip| connection:"
msgstr ""

#: ../source/server_monitor.rst:58
# 051d1444c53f43de97ae266c9b028b43
msgid "System Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system.rst:4
# ed58df4d85d04b3c9e3a34d595ed5e47
msgid "System-level checks should be done for the following components: ports, services (|service erchef| and |service expander|), and high availability status."
msgstr ""

#: ../source/server_monitor.rst:62
# 5bab55f6c2bd49b594cf5e2b65755776
msgid "ha-status"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:6
# ca20acea98ac4fea846b2898e67c57ee
msgid "The ``ha-status`` subcommand is used to to check the status for services running in a |ha| topology. This command will verify the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:8
# 7362a89e05cf45bd9a679d5b52c70aed
msgid "The |keepalived| daemon is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:9
# 6a67fd5deffa4470bfee7474b22ce41e
msgid "The |drbd| process is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:10
# a42a75fe4b444856a695a9397e544a72
msgid "The underlying block device or logical volume for |drbd| has been created and configured"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:11
# 52f4f96f518c4013977653c2c128aed0
msgid "The |drbd| device exists"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:12
# 391b440fae384eb39aa043ba10f6b635
msgid "The current state of the server is ``master`` or ``backup``; any migration processes have completed"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:13
# 312a3ed4b2c64563a027b4a0679822f7
msgid "The failover virtual IP address is correctly attached to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:14
# 056311d79c65460d8f0c5be256435118
msgid "The |drbd| state is correct based on the state of the server being ``master`` or ``backup``"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:15
# 3e514bcecd9b4384b30cc209c6402afa
msgid "The |drbd| mount point is correctly mounted to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:16
# 7d589448adb7418bb76389cecd88b4ee
msgid "The |drbd| replication IP addresses are pingable"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:17
# 46957c2d006949a8bd26137e90e9b92c
msgid "The ``runit`` status of the services are correct (up or down) based on the ``master`` or ``backup`` state of the server"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:19
# 2a925a1c8c734ca7ba003cdd682287c5
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:25
# 7b8820368e104500b7ab4a39bf989ce8
msgid "If this command runs successfully, it will return the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:31
# d125759658094c639c6eaaf1de258cfe
msgid "Otherwise it will print out a list of errors, similar to the following:"
msgstr ""

#: ../source/server_monitor.rst:66
# a1e37384cbe24b3da1199e22019ece59
msgid "opscode-authz"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:5
# 149464bca1504f508dfec9dc069b1b47
msgid "The authz API provides a high-level view of the health of the |service authz| service with a simple endpoint: ``_ping``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:11
# 9bc931bc56c44f569106778bacf430e4
msgid "This command typically prints a lot of information. Use |python| to use pretty-print output:"
msgstr ""

#: ../source/server_monitor.rst:70
# 2934a9d6b17d44d2a844383a503eebc1
msgid "opscode-erchef"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:5
# d4e4609d123d4bba91a013ab790b090b
msgid "The status API provides a high-level view of the health of the system with a simple endpoint: ``_status``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:20
# 5657d28e0b9f46b09220a3dda9c010c3
msgid "For each of the upstream services, ``pong`` or ``fail`` is returned. The possible upstream names are:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:22
# a1126a4fe7ed4d4fb53067ff8575b566
msgid "``chef_solr`` (for the |service solr| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:23
# ba8cf4515e23463b889cc6478603fd5b
msgid "``chef_sql`` (for the |service postgresql| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:24
# 11cd42b7d6844f64a34459e39e48a138
msgid "``chef_otto`` (for the |service couchdb| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:25
# 55a64e8296c4484e94daea9439c2abb2
msgid "``oc_chef_authz`` (for the |service authz| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:27
# 3a488b69a09e4fd2a2a542ce79df48a8
msgid "If any of the status values return ``fail``, this typically means the |chef server| is unavailable for that service."
msgstr ""

#: ../source/server_monitor.rst:74
# 88ec0011793a443cb8db81b7da4a6115
msgid "opscode-expander"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander.rst:4
# c01c9b65c1a0488eb16ac3a4000aac78
msgid "As the queue depth increases it may take longer for updates posted to the |chef server| by each |chef client| to be added to the search indexes on the |chef server|. The depth of this queue should be monitored using the following command:"
msgstr ""

#: ../source/server_monitor.rst:78
# 815a589a96ca42a38a2f753e93c21fe4
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 165352194dd34b29a66b4073acef3e79
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:5
# 77aada9a3e814c608dee421a50c98066
msgid "If the search indexes are not being updated properly, first ensure that the |service expander| service is running on the backend machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:11
# 5581eef5e9d547b1b8e39e4b50ce57fa
msgid "and then (if it is not running), start the service:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:17
# 9d08527a71054b1c98be3312919492dd
msgid "If the |service expander| does not start correctly, then take a look at the ``/var/log/opscode/opscode-expander/current`` log file for error messages."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:19
# f1b4f1bfb9314c75aeda51214ec8b923
msgid "If the |service expander| is running, check the queue length:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:25
# 0665df7cb1e04fd98d712e9de205fdf1
msgid "If the number of total messages continues to increase, increase the number of workers available to the |service expander| service."
msgstr ""

#: ../source/server_monitor.rst:84
# 14d64dc5c1f6426abedd08aef9d905de
msgid "opscode-expanderctl"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander.rst:4
# 3b04180b06cc467fbfc30c64ac18cdb7
msgid "The |opscode expander ctl| executable can be used to generate status information for the |service expander| service. The |opscode expander ctl| executable is run as a command-line tool from the master backend machine."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:6
# 7cb5f2108f2b42a99dc063b7c5d2c251
msgid "This tool has the following syntax::"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:10
# 4ea2d33fdff74714bbf9a1c72c0369f1
msgid "This tool has the following options:"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:13
# f07fa013f4d040e89016e081eb8ddcfe
msgid "Use to show the log level for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:16
# bf2f69e6d9ed42cabd82cd9e8faa21c1
msgid "Use to show the status for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:19
# 8ec764c4ac7e40798a956943485872e1
msgid "Use to display the aggregate queue backlog."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:22
# a2ae38fa3d44457e86ec69db26377052
msgid "Use to show the backlog and consumer counts for each vnode queue."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:5
# 483566333bd842bea3e71c90737992f6
msgid "For example, to view the aggregate queue backlog, enter the following:"
msgstr ""


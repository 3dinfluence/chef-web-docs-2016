# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-25 09:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_monitor.rst:33
# 92d63fa93975450e82459575cbb334a4
msgid "Monitor"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor.rst:4
# 9e98b16351ab48ea9d8ca5dd64ffdca6
msgid "Monitoring the |chef server oec| server involves two types of checks: application and system."
msgstr ""

#: ../source/server_monitor.rst:39
# 94b506b6f4c34103b945d892eb463a32
msgid "Application Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application.rst:4
# 6e5901fd429d405e96b73a1e5e872aba
msgid "Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating."
msgstr ""

#: ../source/server_monitor.rst:43
# 186b6ea3f00648b9a641ac744540da5c
msgid "|couch db|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:5
# f0d473375df6400db7e5e9da651479ec
msgid "|couch db| can be polled directly using HTTP. If |couch db| is running it should respond on port 5984. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:11
#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:26
#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:11
# 3d6048ccb06f42db8dad75f0df0444a0
# a6e97b4b3ab94c16b9f5b724dff84efe
# d55cd947a9fb4a2d8f1fa80b16818247
msgid "which will return something similar to:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:20
# a025d9c68e3b4b4a9dcac4a3d741c0a4
msgid "or:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:37
# bd4401f3c42b4296b8070c0d4378047d
msgid "|couch db| can also be accessed using a web interface. For example, using an |ssh| tunnel:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:43
# 27115a9e22b14a579160af5bee328d80
msgid "and then use a local web browser and navigate to the following address::"
msgstr ""

#: ../source/server_monitor.rst:47
# 160d125ef994425a88571001b81904a9
msgid "|drbd|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:5
# 538f64ae4fc8455098e960bbff1e09cb
msgid "|drbdadm| is the management tool for |drbd|. It can be used to obtain status information and to alter the state of the |drbd| cluster. For more information about |drbdadm|, see http://www.drbd.org/users-guide/re-drbdadm.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:7
# 6374082f34ad40ee8a553d8b7adcfbd5
msgid "``/proc/drbd`` is a virtual file that displays real-time status information about all currently-configured |drbd| resources. Use the following command to view the contents of this virtual file:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:13
# dcca7f3ece3d4e91a0115c341b29cd24
msgid "Use ``private-chef-ctl ha-status`` along with ``/proc/drbd`` to help evaluate the current state of the cluster. Follow the split-brain recovery procedures for |drbd| if the cluster becomes two unconnected pieces."
msgstr ""

#: ../source/server_monitor.rst:51
# 7f837c9286334bf495bf39ba3470febf
msgid "|erlang|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:5
# 07b4db0517be4543a54b4bdb724d3231
msgid "Many components of |chef server oec| are written using |erlang| and run on the |beam| virtual machine. One feature of |erlang| and |beam| is the ability to interact with the running service using a command shell. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:13
# fbd11b571a684235be0483e5450875a0
msgid "where ``service_name`` is ``authz``, ``erchef``, or ``org_app``. This command will then open a shell that is connected to the |erchef| processes:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:19
# 4bb9ccb6398f4844a724fe27ae07105e
msgid "Connecting to the |erlang| processes should only be done when directed by |opscode| support services."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:21
# 33cc1bbd88124b7599051c7fbe070558
msgid "To connect to the |service authz| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:27
# e6f5577e9642473288d50d142b675c6b
msgid "To connect to the |service erchef| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:33
# 8a3adb1f9e6d484b9eca43a998b9302c
msgid "To connect to the |service orgcreator| service, use the following command:"
msgstr ""

#: ../source/server_monitor.rst:55
# 4ea58e18c7e4438c85186cbc4e3651b8
msgid "|nginx|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:5
# 821686d943e84440b43141a48a6fd1d5
msgid "Use |nginx| to monitor for services that may be returning 504 errors. Use the following command on a front-end machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:11
# 3ad50c48bfb54783ace347127015aabe
msgid "and then extract the URLs and sort them by ``uniq`` count:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:17
# e8228bdd653d45ed95597825c7c409a6
msgid "In a large installation, restricting these results to a subset of results may be necessary:"
msgstr ""

#: ../source/server_monitor.rst:59
# c1bb1b41f91649f49d762d5bfe82c549
msgid "|postgresql|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:5
# 21e623a9ad57475cbfc76970ee71a0c2
msgid "|postgresql ctl| is the management tool for |postgresql|. It can be used to obtain information about data stored in |postgresql|. For more information about |postgresql ctl|, see http://www.postgresql.org/docs/manuals/, and then the doc set appropriate for the version of |postgresql| being used."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:7
# d3935ff092b34444b122fe72397e0141
msgid "To connect to the |postgresql| database, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:15
# 97f8c1609c83470b804ab678096929d0
msgid "Connecting to the |postgresql| database should only be done when directed by |opscode| support services."
msgstr ""

#: ../source/server_monitor.rst:63
# 1f3616a9509241768d10c5241be86198
msgid "|rabbitmq|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:5
# c08a318d8e8e4c0d9b8219ae46e66b1a
msgid "|rabbitmq ctl| is the management tool for |rabbitmq|. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about |rabbitmq ctl|, see https://www.rabbitmq.com/man/rabbitmqctl.1.man.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:7
# 01d21d7532a04ed68da03649f41dd52c
msgid "To obtain status information for message queues, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:15
#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:13
# b197a52e681f4999a301991f521e81e6
# 43f4f87ba6954ee1af407602d3ee1aa0
msgid "to return something similar to:"
msgstr ""

#: ../source/server_monitor.rst:67
# a28d4256977444c58a9c0e2128fcbfaf
msgid "|redis|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:5
# 66391ca42d9243f88480ed221885303f
msgid "|redis cli| is the management tool for |redis|. It can be used to obtain information about keys that are being used with |chef server oec|. For more information about |redis cli|, see http://redis.io/commands."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:7
# 0dfa20a5f2444663b96115ff933f5b42
msgid "To verify that the connection to |redis| is alive, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:15
# 5553cdb64b2d490a936a747e50e8b06a
msgid "to return:"
msgstr ""

#: ../source/server_monitor.rst:71
# e441b18438c2401fbf46d25f96ebd5df
msgid "Node and/or Workstation"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_client.rst:5
# c767962990134082837a57673926982a
msgid "If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the |service chef|, |service account|, or |service erchef| service. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact |opscode| support services."
msgstr ""

#: ../source/server_monitor.rst:75
# f066e83a5ccd4809b2211369ef8426f4
msgid "Disks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:5
# 5c5b541db0fb45a683797130e7ffa1bf
msgid "Over time, and with enough data, disks will fill up or exceed the per-disk quotas that may have been set for them and they will not be able to write data. A disk that is not able to write data will not be able to support certain components of |chef server oec|, such as |postgresql|, |rabbitmq|, service log files, and deleted file handles. Monitoring disk usage is the best way to ensure that disks don't fill up or exceed their quota."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:7
# 01e5eedb7862493792e89f3bc025ca1d
msgid "The following components should be monitored for signs that disks may be rapidly filling up:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:9
# d71dfe49498c4ca59905859d2e51c61f
msgid "**PostgreSQL** |postgresql| is the data store for |chef server oec|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:10
# 3a771ed49eb14e31b841c41d16eeb6d4
msgid "**RabbitMQ** The |rabbitmq| data folder can fill up if the |service expander| service is not able to keep up with the data being moved into the search database by |rabbitmq|. When the |service expander| service falls behind, |rabbitmq| will start storing the individual messages on-disk while it waits for the |service expander| service to catch up. If the |rabbitmq| disk fills up completely, |rabbitmq| will need to be restarted to free up the disk space and any data that was stored on-disk will be lost."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:11
# bc8860adb8504b29bebb89edd20b894f
msgid "**Log files** If ``/var/log/opscode`` is taking up a lot of disk space, ensure that the |chef server oec| log rotation cron job is running without errors. These errors can be found in ``/var/log/messages``, ``/var/log/syslog`` and/or the root user's local mail."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:12
# 76038e5510a14ccf91b6f44de2c18a91
msgid "**Deleted file handles** Running processes with file handles associated with one (or more) deleted files will prevent the disk space being used by the deleted files from being reclaimed. Use the ``sudo lsof | grep '(deleted)'`` command to find all deleted file handles."
msgstr ""

#: ../source/server_monitor.rst:79
# dd7dd409904446cb8ff0e3cb1b7410d9
msgid "Ports"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_ports.rst:5
# 44544d75b1a74701a50a2ae71c08b5b5
msgid "All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool |telnet| can also be used to initiate a |tcpip| connection:"
msgstr ""

#: ../source/server_monitor.rst:83
# 889b367dafca41ce85b05719f7cd8039
msgid "System Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system.rst:4
# 4591adc6a3ba46729863b434c22b8cb8
msgid "System-level checks should be done for the following components: ports, services (|service erchef| and |service expander|), and high availability status."
msgstr ""

#: ../source/server_monitor.rst:87
# 5c837f5ccd744eb78aacb25663ea9c02
msgid "ha-status"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:6
# 6741b0898e6a448b98aab24e01bbf849
msgid "The ``ha-status`` subcommand is used to to check the status for services running in a |ha| topology. This command will verify the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:8
# 8f8bdbdbbd944fefb43186174a7b0be1
msgid "The |keepalived| daemon is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:9
# 3c33247622ab4926ba5c4efd44dcb6ac
msgid "The |drbd| process is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:10
# 3b4f51f9f2474aeebf0dfcb1c7746671
msgid "The underlying block device or logical volume for |drbd| has been created and configured"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:11
# 49cafea3d9eb4eb2897cfa5973f8c858
msgid "The |drbd| device exists"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:12
# b2483b1134a9457ebad5c3bda921b52a
msgid "The current state of the server is ``master`` or ``backup``; any migration processes have completed"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:13
# 8bd07457738343bdabb349ee18ab841c
msgid "The failover virtual IP address is correctly attached to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:14
# ffc5cd63b66c404f994008f6640cd595
msgid "The |drbd| state is correct based on the state of the server being ``master`` or ``backup``"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:15
# e2cca67b3f174d3bbe91fc7d7812974d
msgid "The |drbd| mount point is correctly mounted to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:16
# 3b38b520d7554d1ca0ca0d1bdb868657
msgid "The |drbd| replication IP addresses are pingable"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:17
# 36bcaaa79ec549daa2df572361b7fde0
msgid "The ``runit`` status of the services are correct (up or down) based on the ``master`` or ``backup`` state of the server"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:19
# f4e80cec15684515966fc925ad0caa19
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:25
# 4d424358b181481b8df3074adf5b658d
msgid "If this command runs successfully, it will return the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:31
# 5dbbff387a584198abd7a5c31903c27f
msgid "Otherwise it will print out a list of errors, similar to the following:"
msgstr ""

#: ../source/server_monitor.rst:91
# 1764eb8f54884f5da6216cc1e729e817
msgid "opscode-authz"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:5
# c799f11036cf4a5793ac9d9443a54778
msgid "The authz API provides a high-level view of the health of the |service authz| service with a simple endpoint: ``_ping``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:11
# 4950e6f322d84d309a36af9fcc6d5bd3
msgid "This command typically prints a lot of information. Use |python| to use pretty-print output:"
msgstr ""

#: ../source/server_monitor.rst:95
# b2cac1f1b43340d7ada7d77842689e7c
msgid "opscode-erchef"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:5
# eda84c61c0cc4cd2a2673c3751a967a9
msgid "The status API provides a high-level view of the health of the system with a simple endpoint: ``_status``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:20
# 9cbdbe13802c436f8df6166bb01779ed
msgid "For each of the upstream services, ``pong`` or ``fail`` is returned. The possible upstream names are:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:22
# 6065d4e1bfcc474984ce1be23b44c028
msgid "``chef_solr`` (for the |service solr| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:23
# 8753e6b552284ef5b9eaff8a0004da9b
msgid "``chef_sql`` (for the |service postgresql| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:24
# 1310d8a6121545f0b3d24553f6b3d52c
msgid "``chef_otto`` (for the |service couchdb| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:25
# b9ed98cb368f4e9da1264592545f0c51
msgid "``oc_chef_authz`` (for the |service authz| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:27
# 98ea684f4b7f41bf96d867850fb0fc53
msgid "If any of the status values return ``fail``, this typically means the |chef server| is unavailable for that service."
msgstr ""

#: ../source/server_monitor.rst:99
# c8d53d30c26d4a51a147cb01abc03b66
msgid "opscode-expander"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander.rst:4
# c0b387bd26bd4a3c8046c72533bee14e
msgid "As the queue depth increases it may take longer for updates posted to the |chef server| by each |chef client| to be added to the search indexes on the |chef server|. The depth of this queue should be monitored using the following command:"
msgstr ""

#: ../source/server_monitor.rst:103
# cd764b7d11b44b41963ce1eb37029ad2
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 3650a5145e074e0983b68ceec5aab172
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:5
# 5bb95f99f53d4cc5b1a91758ecdb9074
msgid "If the search indexes are not being updated properly, first ensure that the |service expander| service is running on the backend machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:11
# 8ae51d4c9e6549f292fae57f74a51c4b
msgid "and then (if it is not running), start the service:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:17
# 04c41a3eb91645e9ae00643ceb0ac64f
msgid "If the |service expander| does not start correctly, then take a look at the ``/var/log/opscode/opscode-expander/current`` log file for error messages."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:19
# ab278c14f04547f790bb3d8958dfc522
msgid "If the |service expander| is running, check the queue length:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:25
# 7564d9b91cf04c0b93f91c504182c578
msgid "If the number of total messages continues to increase, increase the number of workers available to the |service expander| service."
msgstr ""

#: ../source/server_monitor.rst:109
# a63ff222baec4d1e9d0fa41070d47769
msgid "opscode-expanderctl"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander.rst:4
# be685f36abdf4b819f508a3ea090dffc
msgid "The |opscode expander ctl| executable can be used to generate status information for the |service expander| service. The |opscode expander ctl| executable is run as a command-line tool from the master backend machine."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:6
# c175d3c4a99c41dab8bf2f6ee71498c1
msgid "This tool has the following syntax::"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:10
# 590e68b917d144a2a31030d79eb0a00a
msgid "This tool has the following options:"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:13
# 0a03745a78ee43ff929af93f968e5288
msgid "Use to show the log level for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:16
# 6d1ce52e4feb4d0f9fed937faa346e9b
msgid "Use to show the status for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:19
# 749f20a69c3247d7b0fb037200e31174
msgid "Use to display the aggregate queue backlog."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:22
# ded96ad871eb4e209df0aa9abcac7a43
msgid "Use to show the backlog and consumer counts for each vnode queue."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:5
# 3b901d6ee65542239b3cda1849aac54c
msgid "For example, to view the aggregate queue backlog, enter the following:"
msgstr ""


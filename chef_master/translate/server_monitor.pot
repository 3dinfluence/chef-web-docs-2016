# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-12 15:43\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_monitor.rst:8
# b29812e7102a42c6974268ec9ba070dd
msgid "Monitor"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor.rst:4
# 6ea89b44bcb04cafb43a04ad4f75396b
msgid "Monitoring the |chef server oec| server involves two types of checks: application and system."
msgstr ""

#: ../source/server_monitor.rst:14
# c08f950a72ee47fcad7ae023576f69e5
msgid "Application Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application.rst:4
# 53272d1b463e493ea28ce04db981244f
msgid "Application-level checks should be done periodically to ensure that there is enough disk space, enough memory, and that the front-end and back-end services are communicating."
msgstr ""

#: ../source/server_monitor.rst:18
# af7b24910fd243f0aeab3ae3378cfada
msgid "|couch db|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:5
# e41cd8e1e17b4d42a79b3c4623542427
msgid "|couch db| can be polled directly using HTTP. If |couch db| is running it should respond on port 5984. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:11
#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:26
#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:11
# b796e25e9b7a49e0b18ae91687e1de3e
# 7614ceb1fe7e414b9a2bb26f5b78b0ce
# de63a40777e045a6ae3778b6d1be939b
msgid "which will return something similar to:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:20
# a604903705fe4db49f448c0c0f0d0f7a
msgid "or:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:37
# 7e086129e6734d479d984621b7f05c97
msgid "|couch db| can also be accessed using a web interface. For example, using an |ssh| tunnel:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_couchdb.rst:43
# d81fe64e38bd4b10ad7ce0d4b626a8de
msgid "and then use a local web browser and navigate to the following address::"
msgstr ""

#: ../source/server_monitor.rst:22
# 570b21cf70144e72afd6cb7bf060089e
msgid "|drbd|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:5
# 886fe564fb264145b78f9697062253db
msgid "|drbdadm| is the management tool for |drbd|. It can be used to obtain status information and to alter the state of the |drbd| cluster. For more information about |drbdadm|, see http://www.drbd.org/users-guide/re-drbdadm.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:7
# 0b15877486de485f864b53ffff8ad020
msgid "``/proc/drbd`` is a virtual file that displays real-time status information about all currently-configured |drbd| resources. Use the following command to view the contents of this virtual file:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_drbd.rst:13
# 2b6afe2800be4ba78857d3ca265e6e17
msgid "Use ``private-chef-ctl ha-status`` along with ``/proc/drbd`` to help evaluate the current state of the cluster. Follow the split-brain recovery procedures for |drbd| if the cluster becomes two unconnected pieces."
msgstr ""

#: ../source/server_monitor.rst:26
# 1833eeefd7fa4cf0841e6ba99c24479b
msgid "|erlang|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:5
# b0177983c410449ab0fed4508e681bc4
msgid "Many components of |chef server oec| are written using |erlang| and run on the |beam| virtual machine. One feature of |erlang| and |beam| is the ability to interact with the running service using a command shell. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:13
# 49c9f0b3e07e418aa20cb7b38314aa7b
msgid "where ``service_name`` is ``authz``, ``erchef``, or ``org_app``. This command will then open a shell that is connected to the |erchef| processes:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:19
# b0826013804c471d9e5836269a2ee6b8
msgid "Connecting to the |erlang| processes should only be done when directed by |company_name| support services."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:21
# 75a990d143ef4ecdae2b93fb88f78399
msgid "To connect to the |service authz| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:27
# 7f3b4a4d61e847aeb4f47dc3e4e82646
msgid "To connect to the |service erchef| service, use the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_erlang.rst:33
# 306606f20ab440cbac08c45df5b182f8
msgid "To connect to the |service orgcreator| service, use the following command:"
msgstr ""

#: ../source/server_monitor.rst:30
# 77f8d9c138f241edaaec69b62237b4b9
msgid "|nginx|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:5
# d540303d12b34257b4b97f3c1216c7b5
msgid "Use |nginx| to monitor for services that may be returning 504 errors. Use the following command on a front-end machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:11
# 0797ffc8685d457c886c9f07a0bda074
msgid "and then extract the URLs and sort them by ``uniq`` count:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_nginx.rst:17
# dcfc4f918b2e41c28403c825aad1d405
msgid "In a large installation, restricting these results to a subset of results may be necessary:"
msgstr ""

#: ../source/server_monitor.rst:34
# b3b67364f7884ce0bbf44f9406f88d44
msgid "|postgresql|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:5
# 6ce6c19825a142c493fff0e38ddcc54b
msgid "|postgresql ctl| is the management tool for |postgresql|. It can be used to obtain information about data stored in |postgresql|. For more information about |postgresql ctl|, see http://www.postgresql.org/docs/manuals/, and then the doc set appropriate for the version of |postgresql| being used."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:7
# 8664b4ac16fb4bf698378fbf6e091644
msgid "To connect to the |postgresql| database, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_postgresql.rst:15
# 5945c88637814672af1a4fdb58b032e4
msgid "Connecting to the |postgresql| database should only be done when directed by |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:38
# 60deaea105064565ba6835174f2889bb
msgid "|rabbitmq|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:5
# 2a46dbdca5784d7a9d113fba37d075c8
msgid "|rabbitmq ctl| is the management tool for |rabbitmq|. It can be used to obtain status information and to ensure that message queuing is running properly. For more information about |rabbitmq ctl|, see https://www.rabbitmq.com/man/rabbitmqctl.1.man.html."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:7
# e8498cc1385c4ee1b4b9d04deff25437
msgid "To obtain status information for message queues, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_rabbitmq.rst:15
#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:13
# 27d3ec4d7a5d4be094f86816c44739a5
# e704042da7c1418fa380f993f4b27611
msgid "to return something similar to:"
msgstr ""

#: ../source/server_monitor.rst:42
# ca874fab197749d5bc35ef34682ab8f2
msgid "|redis|"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:5
# 168c0f372a6343d692015ef77d0f60ef
msgid "|redis cli| is the management tool for |redis|. It can be used to obtain information about keys that are being used with |chef server oec|. For more information about |redis cli|, see http://redis.io/commands."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:7
# 76d984275a07409ca41e6ad9ed069756
msgid "To verify that the connection to |redis| is alive, run the following command:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_application_redis.rst:15
# f4b4cc3f7fe3473f850c640dcd6546aa
msgid "to return:"
msgstr ""

#: ../source/server_monitor.rst:46
# 40a53b117aeb44bdb2f36e0bdec7da02
msgid "Node and/or Workstation"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_client.rst:5
# c77fe21f829f411e8047a0da428eefe1
msgid "If a client makes an HTTP request to the server that returns a non-specific error message, this is typically an issue with the |service chef|, |service account|, or |service erchef| service. View the full error message for these services in their respective log files. The error is most often a stacktrace from the application error. In some cases, the error message will clearly indicate a problem with another service, which can then be investigated further. For non-obvious errors, please contact |company_name| support services."
msgstr ""

#: ../source/server_monitor.rst:50
# 8d47c2f316684fe29be4d790601de5b5
msgid "Disks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:5
# c7f728578015428e8acda1c77fcb312f
msgid "Over time, and with enough data, disks will fill up or exceed the per-disk quotas that may have been set for them and they will not be able to write data. A disk that is not able to write data will not be able to support certain components of |chef server oec|, such as |postgresql|, |rabbitmq|, service log files, and deleted file handles. Monitoring disk usage is the best way to ensure that disks don't fill up or exceed their quota."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:7
# 2c4f9b9bdfd049bb97c9ac66f18dd67f
msgid "The following components should be monitored for signs that disks may be rapidly filling up:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:9
# 4e42c66c26a94514b7be35f4998641fb
msgid "**PostgreSQL** |postgresql| is the data store for |chef server oec|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:10
# ad0f2631c5d34f3b826f45cd85e4128f
msgid "**RabbitMQ** The |rabbitmq| data folder can fill up if the |service expander| service is not able to keep up with the data being moved into the search database by |rabbitmq|. When the |service expander| service falls behind, |rabbitmq| will start storing the individual messages on-disk while it waits for the |service expander| service to catch up. If the |rabbitmq| disk fills up completely, |rabbitmq| will need to be restarted to free up the disk space and any data that was stored on-disk will be lost."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:11
# 85a0ffe75fb14b03bbbd8be1b847bd2e
msgid "**Log files** If ``/var/log/opscode`` is taking up a lot of disk space, ensure that the |chef server oec| log rotation cron job is running without errors. These errors can be found in ``/var/log/messages``, ``/var/log/syslog`` and/or the root user's local mail."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_disk.rst:12
# 5dd492a1f5864146ae98207126b3d801
msgid "**Deleted file handles** Running processes with file handles associated with one (or more) deleted files will prevent the disk space being used by the deleted files from being reclaimed. Use the ``sudo lsof | grep '(deleted)'`` command to find all deleted file handles."
msgstr ""

#: ../source/server_monitor.rst:54
# 25825eda14cc47ffab16332df0cbb3dd
msgid "Ports"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_ports.rst:5
# f18941b79b54459f853b0e1777627e8f
msgid "All services must be listening on the appropriate ports. Most monitoring systems provide a means of testing whether a given port is accepting connections and service-specific tools may also be available. In addition, the generic system tool |telnet| can also be used to initiate a |tcpip| connection:"
msgstr ""

#: ../source/server_monitor.rst:58
# ed63a8f5f6884225829352ed9e3fde2f
msgid "System Checks"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system.rst:4
# fdcb6eeadca04e34bf79d0b8607a49fd
msgid "System-level checks should be done for the following components: ports, services (|service erchef| and |service expander|), and high availability status."
msgstr ""

#: ../source/server_monitor.rst:62
# da67874aff194df6beb208450e267b79
msgid "ha-status"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:6
# b6bf643de3d9489398ce848ba6438b65
msgid "The ``ha-status`` subcommand is used to to check the status for services running in a |ha| topology. This command will verify the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:8
# f2624ae43e48499c89d07b2722f9a05c
msgid "The |keepalived| daemon is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:9
# ee6da241ae4e449392c9de768edc85f5
msgid "The |drbd| process is enabled in the config"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:10
# 09f33d2c406249e7af8ec33f4c67a075
msgid "The underlying block device or logical volume for |drbd| has been created and configured"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:11
# 90b6e86d88594f04ac080213413e1938
msgid "The |drbd| device exists"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:12
# f553826ff2be4fadada7be2cf464700b
msgid "The current state of the server is ``master`` or ``backup``; any migration processes have completed"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:13
# 82a76e479f584e1f8a8c06523953ddf8
msgid "The failover virtual IP address is correctly attached to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:14
# 422370f38a284f799dc5ae7162f377ee
msgid "The |drbd| state is correct based on the state of the server being ``master`` or ``backup``"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:15
# f513e6f5a9974d80a2f9f03f91ed2f47
msgid "The |drbd| mount point is correctly mounted to only the ``master`` node"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:16
# 1bf90706a64b43cdb9e5059b40581cb0
msgid "The |drbd| replication IP addresses are pingable"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:17
# a41035cec6334b999611652247f14fdf
msgid "The ``runit`` status of the services are correct (up or down) based on the ``master`` or ``backup`` state of the server"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:19
# f7d9ad1738f340a98215d3c92f235f0f
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:25
# c9294770c2e140b985367144f8eddd96
msgid "If this command runs successfully, it will return the following:"
msgstr ""

#: ../../includes_ctl_private_chef/includes_ctl_private_chef_ha_status.rst:31
# 1833111afc864302ae6575d70b1a9a91
msgid "Otherwise it will print out a list of errors, similar to the following:"
msgstr ""

#: ../source/server_monitor.rst:66
# 69319b6e93c64516892df2d57f317979
msgid "opscode-authz"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:5
# eace1a8ce4574ccd9da29fa2fc0ac551
msgid "The authz API provides a high-level view of the health of the |service authz| service with a simple endpoint: ``_ping``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_authz.rst:11
# 55e9058ab78343f1b00c43107776fb1b
msgid "This command typically prints a lot of information. Use |python| to use pretty-print output:"
msgstr ""

#: ../source/server_monitor.rst:70
# c53c6e561e6e4f07b6bed1ae58f49903
msgid "opscode-erchef"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:5
# 47fe0a761ad04ff680fb6aec731b2ac0
msgid "The status API provides a high-level view of the health of the system with a simple endpoint: ``_status``. This endpoint can be accessed using |curl| and |gnu wget|. For example:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:20
# abf2dd9c47ff4f1cae511ae772351b55
msgid "For each of the upstream services, ``pong`` or ``fail`` is returned. The possible upstream names are:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:22
# e939c0253cf84f75a23513d6b0d5088a
msgid "``chef_solr`` (for the |service solr| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:23
# db7a7d0ae3f24c49afdaf07c4bbb708b
msgid "``chef_sql`` (for the |service postgresql| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:24
# 07f25a7f07584a7aa50629ab7c93cc59
msgid "``chef_otto`` (for the |service couchdb| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:25
# d7c78d7d913243b992a366aa44c9b814
msgid "``oc_chef_authz`` (for the |service authz| service)"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_erchef.rst:27
# d5749fedb94845d6afe4594190391fe7
msgid "If any of the status values return ``fail``, this typically means the |chef server| is unavailable for that service."
msgstr ""

#: ../source/server_monitor.rst:74
# dd5d9875d0f543d088278bee30b9dc11
msgid "opscode-expander"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander.rst:4
# 5bb0ade6bcea40fcb867673a81339a4a
msgid "As the queue depth increases it may take longer for updates posted to the |chef server| by each |chef client| to be added to the search indexes on the |chef server|. The depth of this queue should be monitored using the following command:"
msgstr ""

#: ../source/server_monitor.rst:78
# bb9d21b9c11744ad8a1b3b3a04a9edd9
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 02dba8a14d3345ce8aa33b0ac179ddc9
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:5
# 48befd370b3c478baf889cb7b50be683
msgid "If the search indexes are not being updated properly, first ensure that the |service expander| service is running on the backend machine:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:11
# 0ff372b6e2aa4484bb2786d9125993a4
msgid "and then (if it is not running), start the service:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:17
# cfeefe0fde014c878ebb3bf20dd88479
msgid "If the |service expander| does not start correctly, then take a look at the ``/var/log/opscode/opscode-expander/current`` log file for error messages."
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:19
# e9121b15354c4e4d967576224b27a459
msgid "If the |service expander| is running, check the queue length:"
msgstr ""

#: ../../includes_server_monitor/includes_server_monitor_system_expander_search.rst:25
# edad98c899394454be001655883ccb7f
msgid "If the number of total messages continues to increase, increase the number of workers available to the |service expander| service."
msgstr ""

#: ../source/server_monitor.rst:84
# f2d5ceae803147c18e899fcc84fbc561
msgid "opscode-expanderctl"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander.rst:4
# 88734b93feb84d99b0be3adbf074c842
msgid "The |opscode expander ctl| executable can be used to generate status information for the |service expander| service. The |opscode expander ctl| executable is run as a command-line tool from the master backend machine."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:6
# b0e3ba5d4a074904a1c246d2fba63008
msgid "This tool has the following syntax::"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:10
# f749e669de3c4339948246ba650a20d8
msgid "This tool has the following options:"
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:13
# 3bb238a9e3ce4b5aa35979e166aa8de6
msgid "Use to show the log level for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:16
# 153b852e70f948f5a9a567a81f1c2816
msgid "Use to show the status for all nodes in the cluster."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:19
# 220af0d31bd0488ea1cb98c69647c7a7
msgid "Use to display the aggregate queue backlog."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_options.rst:22
# 3a31cd98b15b433c88a13279fbfa4d28
msgid "Use to show the backlog and consumer counts for each vnode queue."
msgstr ""

#: ../../includes_ctl_opscode_expander/includes_ctl_opscode_expander_example.rst:5
# c58d6b1f36fa476db69f4b194f8c7893
msgid "For example, to view the aggregate queue backlog, enter the following:"
msgstr ""


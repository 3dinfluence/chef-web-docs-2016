# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_components.rst:8
# 15bb81e50da440e6a5c78e891cb33bf3
msgid "|chef server_title| Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 914bd73c94e64949b4673943eb3f6e95
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# b26b6bf97d034fa98d4dfc05f301bf8c
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/server_components.rst:14
# 354d11596cb94180824ebaee47bfb960
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/server_components.rst:22
# 45266be9bd7b4e1aaf9350e3e57c80c8
msgid "Component"
msgstr ""

#: ../source/server_components.rst:23
# bb04d698183044c388a0c3134e428289
msgid "Description"
msgstr ""

#: ../source/server_components.rst:24
# e622ad32c0b849bf9960fe07363a8651
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# e54d2c64b2a6492ca871bcb966779088
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/server_components.rst:27
# d00c12c80ab643d39d443151cbc16a40
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/server_components.rst:28
# 54dab7110b004f27a6f0be807eeb7b74
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# ecd687b1a7884e7a86d59dc24ea8da48
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/server_components.rst:30
# e04f21ccfe0a4eafb2ef6da6ce027d20
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 7a263c526d5a4e34a724faba5adca570
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 5facd80fee9c47bb9bf945f2d3741952
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/server_components.rst:32
# 8cb70346f55d4a1f9a73059f277909d8
msgid "Message Queues"
msgstr ""

#: ../source/server_components.rst:33
# 1c5ada7d0a194c379ea21e7af3548b53
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 0a3ce403fffb485d8600dda390f0e194
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# c4316a557c254bbe91c7b87c85c780a5
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# cefb8470b14a446bb3acec052e1288d9
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/server_components.rst:39
# c89b2966b0bd4eb2bcf6de8b59bd0d38
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/server_components.rst:40
# f2fed9a6babb46dd8006bf0564b5e279
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 046afd4e5654489a935386cd6e6a29a9
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/server_components.rst:42
# 0adc083304f0408d86484d4ab77df549
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 5ecc25229f924e9296c070d8e6a5b64b
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""


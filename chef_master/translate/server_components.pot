# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 10:22-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_components.rst:8
# b4a26cb0a0d04c31945044e8c97922aa
msgid "|chef server_title| Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 267977a2570d4a518ed9f84e1302ea0a
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# af0a1a64499d43088c77f19fc8102cfb
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/server_components.rst:14
# 6f30ceecf426423d8405958a1c7d01d2
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/server_components.rst:22
# b76b4b9366034dfbba2f6352e94f01df
msgid "Component"
msgstr ""

#: ../source/server_components.rst:23
# d3df7fc904a7482796f49ed1d9fedba0
msgid "Description"
msgstr ""

#: ../source/server_components.rst:24
# ed693a57cf6f48c2bc4f79544c4ce203
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 0cf1513093f142599814afa21b45e77b
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/server_components.rst:27
# 729010b50ce64d5e9ef015d4df32814e
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/server_components.rst:28
# 5ea31e1d057e41b7955f758674d1b57d
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# e0d32d3ae19b469c978bbe03802c04b4
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/server_components.rst:30
# f5477052a71949b0b7ae742c7a34e701
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 9f6e1072e14a491f836708203b31fbe0
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# da513b91684648cba5d074e8895c273d
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/server_components.rst:32
# 4a48230fcbaf48fb80c798a768fdb158
msgid "Message Queues"
msgstr ""

#: ../source/server_components.rst:33
# dcbe85ccb94e44d18f7385ee3955ce6d
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 43a15196d45343f59a41c218c01bcc96
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# efa8dae6a27c47b6afcf234d01b9d8cb
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# bccbb4cc36df49e8b5cd03638bb2dda4
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/server_components.rst:39
# a45895cded2e40c097db008323fde12a
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/server_components.rst:40
# 645ef407c78c4ad68fd03f00d2388710
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 5e4abcaec4d04aee9a6fbcaab69a3ee0
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/server_components.rst:42
# c8b5dd6d65da492fb6276b6720f12c72
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# cfae2425a7ea44f2afc35407a9a1b2e0
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-04 22:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_components.rst:8
# 50d0a0ecf55940419d0df940cdc1e192
msgid "Chef Server Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 66fe380559a942039a95cff6c7752d1b
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# f00274c39482431c88da1a1e5b6a26fd
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. |chef 11| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/server_components.rst:14
# c6b6d37f31104d408593f38ccf85466e
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/server_components.rst:22
# 4302d165f3d143e89a2646f9040526a8
msgid "Component"
msgstr ""

#: ../source/server_components.rst:23
# 6c43cca5b21d4616b5bc1b91d06a35aa
msgid "Description"
msgstr ""

#: ../source/server_components.rst:24
# 42c8b491a03f4b59956c83a81942b2f4
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 4c0a04745ee34cb2be814f04a56489e7
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/server_components.rst:27
# de2d718b0b0045869caacf3439d8ec19
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/server_components.rst:28
# 88160475167a43e89b51b6bd14d125eb
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 3e97bbf21bbe4c6e914aa2804828f918
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/server_components.rst:30
# 77f50f104ceb49afa738c86c5334ac18
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# eb4af5e9823b464098529ce7fb3b5d8d
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# e7cbc8ea95274e8f9602356de23f2266
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/server_components.rst:32
# e85e5910acc4460ca730ed4303526a81
msgid "Message Queues"
msgstr ""

#: ../source/server_components.rst:33
# 5d24dab6555447178e781242fe76313c
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 0a6d4c8da6e743c6906b5d1eb897c474
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 252bb17d63d74a8e9ee2ab15de518bd2
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 6ae460bc61db43d78da54ebf3344c0d1
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/server_components.rst:39
# 1358fad9d6314bbfa9ac6fde9658bd31
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/server_components.rst:40
# 64bb71c6200f4d89932f1ae6665bfad6
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 9485323714334520af52efa97b13c821
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/server_components.rst:42
# d35da8c2fe494fa1aaa18c1db003e278
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 75e10485654f4d709f01b0867931d7ff
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 17:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/server_components.rst:8
# e806277f5f2a4b37b3e7fa93c2d4c41b
msgid "|chef server_title| Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 5f18bd5ba5e3449ebb501e27e01beac7
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# a278ddf4ae584a5a8c75e89e60c6d8a0
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/server_components.rst:14
# c20c4436cce64ea9b8b00970e09b779f
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/server_components.rst:22
# ce0607f83fee4f8e9cf19b0b4a330a7f
msgid "Component"
msgstr ""

#: ../source/server_components.rst:23
# ede72b45ecfa4c35a9141781381d7c06
msgid "Description"
msgstr ""

#: ../source/server_components.rst:24
# 3fb89d6560984bf3978ac7ec77698338
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 9f735d0c6b944668bae876ccb95d5f45
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/server_components.rst:27
# 5afad0d596454f3e91739816162548fc
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/server_components.rst:28
# 04a4d19450b64ee19e5e271421ed5c10
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 8fc8d11a6311480789c6c26f3ccc264a
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/server_components.rst:30
# e21f5185838d49058a91c7a45e571631
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 4544050749b24e9c8b7dc67d90851f06
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 509f5091a78746b5a31107cab74d1af6
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/server_components.rst:32
# aaf65066fa744b86ae12d636f00151ca
msgid "Message Queues"
msgstr ""

#: ../source/server_components.rst:33
# fa38c145e842475ea393c061177f5bc6
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 99de3157e5cf4598b35b03de59a65f55
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# fc1a02ef2e4d45a0b9d57edb9dd65bfd
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# e427cafc64fe4d8580b4eff3a988846d
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/server_components.rst:39
# 890cff5d73ad40d7b160f1dce2e66376
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/server_components.rst:40
# b10c3d90a06d438f8a4d7d22a1ed6787
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 146b8b1eff564f64945dd406a1348237
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/server_components.rst:42
# 2030d5c80e354b68a04b212c3f00973f
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 8b28a26a66244ea7be72d0a17507872a
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-07 08:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:34
# 40f9bc3874ee4b8187c3bbad72d28ce2
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 6d7f29072355459185b0a99a3c1c3ffa
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:38
# ab6cf35df5b444c1b79f1635cfc7b2ea
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:41
# 0eb4a648dc424ed2af4a6c8afbed9138
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# f842cd48678e4c6bb069420748d83a93
msgid "|search index| |chef| builds the following search indexes:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 157534e2a6764458beee79933708eca8
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:21
# 053b658000794ce995a797321b50a3c3
# f0e692a18aa942e18c40d12bcc2c9e8e
# 2210a73659154bd88253ba29a17a235c
# 37643c010c134e878f981310a16bd9ef
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# 011bcbe9061a4208a683d85431e8618e
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 6c7c0872bb0b4716a2bb27f876b09580
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 47ec7f9f99be4e518c8774fddc19cb36
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 9bbf8f6cc46341159fc34edff334508f
msgid "|data bag description| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# cff4f2bd97a246ffa66e3f8d4721f4f0
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# ec3d00991b7743ada27a3a6dfb15a958
msgid "|environment description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# ef6c629c5bc64bbaa98e34208608ee87
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# bf7b2f5078804749bb962aa74adaec19
msgid "|node description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 5a80c12d04f649d8bf397f697aba0540
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 6769e3322a014f6cb6bc7a5a535605d1
msgid "|role description|"
msgstr ""

#: ../source/essentials_search.rst:45
# f1f7bcae505346eaa5be2b7959f26c77
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 9767bdecdefb4d60821806bd04b43843
msgid "|knife search|"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:6
# 71744df1bfcc44679bf0935bd185393e
msgid "For example, to search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:12
#: ../../includes_knife/includes_knife_search_examples.rst:32
#: ../../steps/step_search_boolean_and.rst:9
#: ../../steps/step_search_boolean_and.rst:31
#: ../../steps/step_search_boolean_not.rst:9
#: ../../steps/step_search_boolean_or.rst:9
# ef949249367d467db3f3094ae7992bbb
# 0c1a49d8c258460e921e6b674d1aec0c
# 159c9a9137524a7d84511d92de8acf38
# 69b222d5c3ee44a88ae1bbeed4e55394
# 0b419220e6fc47f3a2f5eb26fe23b030
# 778edc158ca34d3faa8360842f6abb64
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:26
# 223ee41d602e4ef18def718d6e635910
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:50
# 039530529a744afe8b80522afce30857
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:56
# a2fd6dbc04964532842806eaf4a63914
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:62
# 1531cc30a0374a3fb41ffc4fad63ee2e
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:68
# aae9247f932a4c169fbe52c323678244
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:74
# 104b8217b86343d3b2e7dc8a1fbf796e
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:80
# 4a8caaf1bc6946cebcce5427069c1741
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/essentials_search.rst:51
# 72fc269b305342059be2747fe5a8062b
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# ed59480ead3b4604b4fe1a9f82dc06a1
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 2261867040e14630ad82dc2a4c153003
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:55
# 00221e6eca45432caf5c3df85c5a1d2e
msgid "Partial Search"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# f1b46e64c39440f09a514a1725f8791d
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 53d2ecbd1ab94f68b4d9c2194c5361c9
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# 7b4589431aea4eb5bb354596a5acec65
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# f44cf725efe5473da8db329bfce9f2c5
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../source/essentials_search.rst:59
#: ../source/essentials_search.rst:71
# d094441bc05e4a62bd7ad3304ea7ef91
# 598d0c90f9de4e67bee7ef1f2d0f4221
msgid "Examples"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:4
# 43547805b253495e8959679913d87741
msgid "The following examples show how partial search can be used in a recipe. First, a recipe without partial search:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:25
# f06f21b59c0b4c3ea6a07b84b42e234f
msgid "and then the same recipe that uses the ``partial_search`` method to provide better and more targeted search results:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:64
# 1a133cae8c574822a4ac1403b739bc8e
msgid "And a different example from a different recipe. First, without partial search:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:76
# dc09b9638e174a1b9d30b70f5deadb92
msgid "and then the same recipe using a partial search:"
msgstr ""

#: ../source/essentials_search.rst:63
# 22f403c14768483e9966a85ea4cf8e1e
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 4359910f770e41a088dcaa9c616a233e
msgid "|search key| Any key that exists in any JSON description for any role, node, |chef client|, environment, or data bag can be searched for. To search for the available keys for a particular object, use the ``show`` sub-commands for any of the following |knife| sub-commands: ``client``, ``data bag``, ``environment``, ``node``, or ``role``."
msgstr ""

#: ../source/essentials_search.rst:67
# 39db9c49b02543eaa0d254d8ba581fee
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# f280b9e627d34d18ba43442219ad198f
msgid "A nested key is a key that appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a JSON structure, |chef| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 4fa38770ce494506a0757c4bc80694d1
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 4cef358b581e4f20aa2cb5335fce7c7f
msgid "Consider the following snippet of JSON data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 2c2386e234584919b55897ead0ad617b
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# dbae78b51d3d47e8aafbac8086be6741
# c08b28372302472bb0007866dc61e0b9
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# b51db0ff902e4593b0f271b1ac9273c5
# 96cf9e79f4244000867c317b8d465807
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 22a00c0e11a548119c32a5094207c8d0
msgid "This data is also flattened into various compound keys, which follow the same pattern as the JSON hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 6d8fd0a8fc2d4818afa642c7b63d1b5b
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the JSON data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# e615582a4d454d389775ca368223bc27
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to::"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:122
# 42efb9e7a3e64c519179614df275834e
msgid "This query will search within the ``flags`` node, within the JSON structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../steps/step_search_key_name.rst:3
# b46c79e50c444147b6e044ea6133950a
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../steps/step_search_key_name.rst:9
# d0ec96f3540c443999889693e0b936e2
msgid "to return a full JSON description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../steps/step_search_key_wildcard_question_mark.rst:3
# d4a8c898f2e147319b6ff0e8ea80967c
msgid "To use a question mark(\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_wildcard_asterisk.rst:3
# 4805b005e6ab49698d17c32228507f88
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:3
# c304b8cd00fd4eb099f72d64deee09c9
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:9
# e4ccbd51378e4e5c876825865fa13997
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:3
# 812082b02903456fa70b1833f89e110c
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:9
# 303e4f6e14754c06a7bf3cccf9c9731f
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:83
# b1cb2aa400de44d7b0ddff2b1567bb02
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# f8f04566a2294c80990ee6bb41eab9ca
msgid "|search pattern| There are four types of search patterns that can be used when searching the |chef| search indexes: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:87
# b438cb8a4fa04fbd860b8e0804f513d6
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 38b792df85df462fb65398734662c82b
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:3
# 857901377303450381af3fad4da5340a
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:9
# 7de62fb9da8845faadbe23e3fdaf9a29
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:3
# 9de89666d8a64cc085a766dc283ed4e5
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:9
# 67cc4f7681f74571b22388b908baeb74
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:95
# ca594689183744b685659c9a3d56cf6c
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# ce0c832181d7452aa09b4d58b0a24973
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# a72a66fc2c004fcdb27e6b902569b289
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# e986c18622144ad39d82f9dbdd1e14d2
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:3
# 9272b3abe75b4c638ca30cc3ae28cd79
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:9
# ca844ab2a130452e959ea2d79fe657ed
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:3
# f5a5e188ab5a4dfa98a174c7ac1c9a28
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:9
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:15
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:21
# 56821698c6114afdaf92bc7954c29760
# 2ab9144853814f4794205126b2838b22
# 18e4cec87c4241f6b8370515c469adc8
msgid "or:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:27
# 618633a19d1b43639eceee300fc63b6a
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:103
# 212bb6b36bb14916bec5879f6a0f317a
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# d82b26251a0b4ea2b92c6f9769ca9d42
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 0d578d2d0e49423ab4b5a7fab2d4301a
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:3
# 9fb4945285aa4236ab20bcdcb0e05979
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:5
# 91781e765d3e42e0913365aa08cc311b
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:11
# 2cbc827d367d4b59bab71ce4c322f5cb
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:3
# 79ee2720829a406a9e6e07b3cf5f23f5
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:5
# 2b8d0780818e4e75842b8675aba91360
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:11
# dda64aa9a957483f83b7a501ee5e48b5
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:111
# d12db5a735c44515a89dc18b9b16d503
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 41d11a97cb8f450d9053a0f49d19c420
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# f14cd139ba7e4a8680c50048be4bd8a4
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:3
# 087766f544a44e7cac77204f2e5bad93
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:9
# b6916e2a739e4af593614248eda39758
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:117
# 6daa14ff524846e18beffda2649b9494
msgid "Boolean Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# 6412543e67fb43099250c1ecd027aa43
msgid "|search operator| |chef| searches can use the following Boolean operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# e658ba75a7f945e88ca033f49e2e5f26
msgid "Boolean Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 8a8fd172e0354e44b088724e20f09472
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# b457002f573e4aebadf789942a3d5f45
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 427b1a2b8b0d474c9860f1d58c125d70
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# fa0980e9a1154acaa26c37d9036ddc3d
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# c63d03a8a5d14972981b5269e8b7e70e
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# 81299f895aa54cc58204ee857fbc4e5a
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# 773af67e681a4163b8d33f613f051fff
msgid "Boolean operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../source/essentials_search.rst:121
# 6dd1a3ead0d3437ba4296894e0b5ed1f
msgid "AND"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:3
# 92e846fc23c541d596895cd588b34efd
msgid "To join queries using the AND boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:25
# 5d41e3d39eee48e68a40118167c78dac
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:125
# 5d46318738fd40abaef627caacd16b04
msgid "NOT"
msgstr ""

#: ../../steps/step_search_boolean_not.rst:3
# 5c36f7f105304f619626004c23d3c892
msgid "To negate search results using the NOT boolean operator, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:129
# 364b4f966f164aaf8294e5beb050cd77
msgid "OR"
msgstr ""

#: ../../steps/step_search_boolean_or.rst:3
# bce4d29ed47d49e795e84cec31f48275
msgid "To join queries using the OR boolean operator, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:133
# d59a2e26bcd540b2a272f53d57fb8b06
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 9ee714ba0db544beb83376bf0b269cc6
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (\\)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# ef8f1a1b344c44d0aedf4a9fc6cf5c24
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:137
# c9af6a7382be4339bbbaf9207eed4d40
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 94d72a069b8c4567a0e6bad252ebd254
msgid "|search target|"
msgstr ""

#: ../source/essentials_search.rst:141
# 1d1f313bd19046118157a20ae175bed6
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# bf471b37a77c449c83949ff43673c3d6
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 10fd5db633f94ee7bc9dc215059b894a
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# c07a8cdf4ea544ab8068c072c6fa3891
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# ace8af30b26d4a83b3cbda5f75ff325d
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 6034d19fb960453092bce54a9e1788e4
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 1dc6d0f01aab4c2f99e19116f3d7ac2d
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# e098858c2b5949bca8c2d5306f6f5169
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 325584ec74414f9d951a7603be2b2081
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# dcd6f926242f4749bdd4d5408646fc52
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:3
# dae9df56c4f3462f881369f93993fe9e
msgid "To search a top-level run list for a role named \"load_balancer\", enter the following (from |knife|):"
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:9
#: ../../steps/step_search_target_role_expanded.rst:9
# f7f1295429a84512ae138c56fd4936f4
# 338fc85514f44145a8b74722355fcbed
msgid "or add the following (to a recipe):"
msgstr ""

#: ../../steps/step_search_target_role_expanded.rst:3
# eab89146f4fc4ce6b0819660d0d797f6
msgid "To search an expanded run list for all nodes with the role \"load_balancer\", enter the following (using |knife|):"
msgstr ""

#: ../source/essentials_search.rst:149
# 53fc5d714c0f404f89759526ef6bab2d
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:6
# 4b6a82fe43e9421e8e5e5b080e6fc6fa
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:10
# 6992f652dc3847ceba54b27f4a386676
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:12
# 2353f7dc87f54d0780e1328581dc4d24
msgid "|chef| saves expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:14
# a49116028fa0421faebe9748d748f99e
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:20
# 8919fe984912477fa66e96c29bc786fb
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# e722e108ed544920aaeb668f6ccef5bf
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 59d65efc047442c98df4c8b04d93ad86
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:27
# 47ff852cb2f148a9bfab2d8ef46c21b3
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# dc66e34d93d0490c942a7dae6f95ffa8
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:31
# e9096cd4384248328135534b92dc6995
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:35
# b289079f42d74252a339aaca9a0d4f4f
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# cfeb762331854c9e9cbfcdf7c2392833
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:153
# 983beb190f754f60896931d7372df910
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 0933751b1f194bdb9c899e5cdf090d6e
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 17d9d3e58abb4f1694684e66932de27c
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following simplified settings file is for a web server named \"mysqlchef\" and a database server named mysqlchefutil:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 2b5c173e78a94092843c7a4978e5ed7f
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 21873e64a5ba4e32bf2c2d29df8b8d89
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 38c7b62e5706425cb1e6de08a84bdb35
msgid "where the \"[0]\" is the 0 (zero) index for the db_server identifier. This is because a single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:159
# 7ba233fa6dc94c598576b1d3f7d1c0de
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# b0b6b363d5cd41af9445637133d9ddc2
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# d7b00bff8fbf4491a1eaabb5a59bea11
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# b4639d07a4f042b68a6247ea7833477d
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:165
# b89d42ae712548418227bf80d12c2151
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 90d1c09d8bc447c1a6e0345fbf46629f
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# a7bbb848959948fbb8c09817607be66f
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 224a1debad4d4cbda6d44e5fa8cc6c5e
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# aced63f9e9954d4f853ab697a0787e2b
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# c6396edd89d244b68782201b84b26d43
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# dba14f5733a242c8abca314da17c20c3
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# 9accc3ce83474e86a60a413b70c200d2
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 1bf6f2e99b5243d492467d4e96cab7ce
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 094dc34101f6450495f88da2569c7382
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# d9a871309297485492c0f0b082513592
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:8
# 88a7326a6dfd424aab4bc73973c7c616
msgid "About Search"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search.rst:4
# 03a613aaea3b459da92ce592cc8cad50
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:12
# 7ca1234cd81c45e1a6d84ea6f0eb991d
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:15
# b1a0f51abe8c4806bdc40654c27f45f6
msgid "Search Indexes"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:5
# 1d47aa2b85d744c48fc724095808d0ce
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:11
# 3eb6f6db17ca45a2b38f55c34179bf3e
msgid "Search Index Name"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:12
#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:12
#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:14
#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:20
# 3f6f3ebdb81944aca546e446b2ff62ef
# 1c0af582046d4452813ddab44cfc58f9
# f81c96701cee4ac093ab16b17e5cb284
# bb58da75e2a74b6faaad5fa73b21a83e
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:13
# 6f7756c45e05416f8e589a5bf1459e43
msgid "``client``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:14
# 8a3fef1b012f49b49e0b3574199263c3
msgid "|chef api client|"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:15
# 81a5f78405b34720b065cc01a9a85e79
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:16
# f284dcdcb0be4451ad8433d29f2bd149
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:17
# 38d3833f17fd4006a2167521f0f1a933
msgid "``environment``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:18
# f133495330424117b1f82d2eb8303e6c
msgid "|search index_environment|"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:19
# c32ff751fe7e4fe29cbecb8bf1cfa8f0
msgid "``node``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:20
# be5de7e59ddb4452b26ed58405fba0c1
msgid "|search index_node|"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:21
# 3bbecb4da34341ddbcbbf0177badc4c0
msgid "``role``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_index.rst:22
# cf6dc0fca9e3480a8afce7eef7c40a35
msgid "|search index_role|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:19
# cb0ae6f74bcb4ad29b74264bf86beb35
msgid "Using Knife"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_search.rst:6
# 4a280ea2b8614133bdc1bfb1a2666d53
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:22
# 42a5030866564bf7abc2d8a0fae92f01
msgid "**Search by platform ID**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_platform_ids.rst:4
# 5b7a81a227c94a8da67b02d6841e4e7a
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../../desktop/chef-docs/step_search/step_search_boolean_and.rst:9
#: ../../../desktop/chef-docs/step_search/step_search_boolean_and.rst:31
#: ../../../desktop/chef-docs/step_search/step_search_boolean_not.rst:9
#: ../../../desktop/chef-docs/step_search/step_search_boolean_or.rst:9
# 68cac3704bef45dd9bc61175d08ef753
# 390b205c0640456faba44b30293600d1
# b0edfcd0492f4cd091708a73d2cc6cb8
# c537794c90ab41aca6e0993313aff35d
# 40a0550029f54a52978342ff67d2faf7
# 9993591f1e104fa08405aa564d1c5d01
msgid "to return something like:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:26
# 0eaee8d2c43b42c9a834564fc8fd5a8d
msgid "**Search by instance type**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_platform_instance_type.rst:4
# ad5135587b454349a76402912aabf5d4
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:30
# 08ed9f32bf5a49e1815beeedf19d413a
msgid "**Search by recipe**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_recipe.rst:3
# 765175066e4949778073137971c1a6fa
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names. Enter something like:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_recipe.rst:9
#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_node_contains.rst:21
# c62346f538a24b9dae6bc1fa4fa5450a
# fc5176ecda5b47c1b5f72e33af693cf7
# ebaf9034bcf74aae8946efd1655141b1
# 6a5a388dd8b54527956789cff2039488
msgid "or:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:34
# e63c1d4234c846f98adec764d02a0893
msgid "**Search by node**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_node.rst:4
# 36c67315a968494ebf20065c41e9aee3
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:38
# aa62fa270e5b4320878be59cb21186eb
msgid "**Search by node and environment**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_node_and_environment.rst:4
# db1f54b9daf74f95ae63349b5349711f
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:42
# 6c45d5af91bb4011b04f5f9217f83aea
msgid "**Search for nested attributes**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_nested_attribute.rst:4
# 955bbd2da5604894b1e8042ba63337c2
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:46
# 23d5fb9ee62e46e18de69aff97319d24
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 854c6d93d1c945f9a892643129cc5d4b
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:50
# be4d6fdd08794e9abfbcbab4da9f43b5
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 1a07f571f3e44c7ba1a24b1dca48c441
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:54
# 87200af556f241f290ecc6c83b6db8ad
msgid "**Use a test query**"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_test_query_for_ssh.rst:4
# 8874628e11404398a81af992fd324c4f
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_search_test_query_for_ssh.rst:10
# b2e9be3f3d9e4e59ae088cd945b1aec3
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:59
# f7dc73a1b93d43109ac9da098e86b5b1
msgid "Query Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_query_syntax.rst:5
# 2e96bd0790ec41f2bb025733678833cd
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_query_syntax.rst:9
# 1c8484f85db1450cb97ab221634ff512
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:63
# d726af1aaaf14b049b80aa6637aa4478
msgid "Partial Search"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial.rst:4
# 08ec951f217e4dbbb21a02fe3a8daeab
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial.rst:6
# f9f090f5f44a4951b54211813c1abd40
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial.rst:8
# 72e0ce97d9aa4d5ca5c07839e3f547c8
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial.rst:23
# 44868945624e46dea5312ab98f77eb9a
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:67
#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:79
# c004e7eaf7824bc3b4a08a7829dd5d0f
# 013cdff7631c4836baaf543f0a1282fa
msgid "Examples"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial_example.rst:5
# 9306a066b06b4bb1a0788be259af0b26
msgid "The following examples show how partial search can be used in a recipe. First, a recipe without partial search:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial_example.rst:26
# cdb8fd48d96e4fd58e1ee3bddadea602
msgid "and then the same recipe that uses the ``partial_search`` method to provide better and more targeted search results:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial_example.rst:65
# 0ecf423866404a33a2b7558235c6892d
msgid "And a different example from a different recipe. First, without partial search:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_partial_example.rst:77
# 0df81e01ce9a4157a813634bcc447327
msgid "and then the same recipe using a partial search:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:71
# 330f8119084444ad8cd9a5efc7782734
msgid "Keys"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key.rst:5
# 4735accd2f0c4d20829e13da72e45a02
msgid "|search key| Any key that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched. To search for the available keys for a particular object, use the ``show`` argument with any of the following |knife| sub-commands: |subcommand knife client|, |subcommand knife data bag|, |subcommand knife environment|, |subcommand knife node|, or |subcommand knife role|. For example: ``knife data bag show``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:75
# b817764626cb41799779dc90b668847c
msgid "Nested Fields"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:5
# c3754c5337d0475c88a8fc96cc1c666b
msgid "A nested key is a key that appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:7
# 78fe14ec43f442e688ecaaa52ab19e5e
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:9
# 187f17dfcd62477c8264497a48786cf6
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:65
# 4d4294371fbf4b44aa69689243758bd7
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:73
#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:101
# 8722924bd7ee4899af27e32b9cd14ce4
# 41b6838f68d74b5a97bd72d110847b63
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:79
#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:85
# 94b175b9325744d380ae0e9b4feb1bac
# ad09eafacf1f4b4b911643742dff6217
msgid "Or:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:91
# bc309f7e9f784b6184f54e29b8ae9d9e
msgid "This data is also flattened into various compound keys, which follow the same pattern as the |json| hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:107
# 534c2fa6fad04446bef0c322c4f35abb
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:118
# b05369d4c7a64ff7921974f3ff736e3f
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_key_nested.rst:124
# f3bf3287faac42bba1cb18a6c10fb2bd
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_name.rst:3
# b403e13df1dc4e3e821df84159ed0cdf
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_name.rst:9
# 35701f2d99d940e59669910f64e60845
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_wildcard_question_mark.rst:3
# 3f76d9d3f3e44b378e6e1ae956f4d7ea
msgid "To use a question mark (\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_wildcard_asterisk.rst:3
# 9b4af80673a04b8d82e78b6c920736c0
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_nested_starting_with.rst:3
# 6d4ba82eec0f477f893bdb21c02ea335
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_nested_starting_with.rst:9
# bc21d21a51b84316b1cad86b5d3fc208
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_nested_range.rst:3
# fc0c13c38b3b449eab3ecba5d581f314
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_key_nested_range.rst:9
# 9a21971d42ec4af1b3afd8237e00cda5
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:91
# 8167666cd56745a3bf40653724acce63
msgid "Patterns"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern.rst:5
# 00a6d042cf1c44e098c8e01df3a3b522
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:95
# 6d893452d697489faa4e0f99202dfd80
msgid "Exact Matching"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_exact.rst:5
# 2b99fd00b8a4454d91a17122a45a296f
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_exact_key_and_item.rst:3
# 5c613a979ae94d9eb5bbdcfafda0a937
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_exact_key_and_item.rst:9
# 00cbf35767734cfdbdbb43626b46c92d
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 24b7d582372d46fcbb5d29979728566b
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_exact_key_and_item_string.rst:9
# d6aecdd2fff2446088026b5708f827f9
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:103
# 25c6b38876b04d30b1610dbdcdc71403
msgid "Wildcard Matching"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_wildcard.rst:5
# c9c6f6ff6639497a8c873bd95cf1526d
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_wildcard.rst:7
# cd249992c5d1457fa088ec324ff668c8
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_wildcard.rst:8
# 555113ee4e144a14ae2289b2bf2d7e6b
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_any_node.rst:3
# 630e290023d34922bd5e467eb0f8781b
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_any_node.rst:9
# f1bd01516fa44b04a628590b18773c39
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_node_contains.rst:3
# 92aeeb6b273340a48fd0bf26d0e5a8c5
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_wildcard_node_contains.rst:27
# 926f9f8a29ee4830b556dba21da7427a
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:111
# 92d63a9137944a5db9e227de50913da8
msgid "Range Matching"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_range.rst:5
# c36ec26c92184efdb67d44643e1a08d2
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_range.rst:9
# addf98544c0f4a4b90d60a8ed5a2ce98
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_in_between.rst:3
# 61eff7c474cb444c9f2bd5de583a1516
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_in_between.rst:5
# f42a8b4302c6409fb1e769e13f418836
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_in_between.rst:11
# 381530f6d0694032bb8aa5b91b7cf537
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_exclusive.rst:3
# 60bb9ea169224915a2392d8b442bf48c
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_exclusive.rst:5
# 2d0b2fc6d14b4e0ba7ca61b1714c8ee4
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_range_exclusive.rst:11
# 12f313466c3948f483a79dee99362a83
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:119
# 23ee5740ee6545e3969ac35193895106
msgid "Fuzzy Matching"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_fuzzy.rst:5
# f24dedd254154d4c8b959685ca83bab6
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_pattern_fuzzy.rst:9
# fda88ac061974932b6651eb4fe9a57aa
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_fuzzy.rst:3
# 21c4938824e2412cb8346ee8fd15add6
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_pattern_fuzzy.rst:9
# 56ccddeb1ccf4f79bff7b2bbeaa778fe
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:125
# 28d93a35fdb14613bc3229561e727093
msgid "Operators"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:5
# 61bedbf42d08481e8ae81f676f9c75a9
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:11
# 8b4de1e9fd914f539cc7af4da3efb7eb
msgid "Operator"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:13
# 6e98b59013f54e7698abef30737c44d3
msgid "``AND``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:14
# 93be059bc4eb497588ac0b719c829b62
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:15
# b93cc13a31aa4ebe9ecc0b65d0c9ef80
msgid "``OR``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:16
# 57930f41468c4674b568633d34b67dfb
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:17
# 04a4436fe2a744d087bbe8d0da358bb0
msgid "``NOT``"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:18
# 3feae40fdc7b48929f378f861506a282
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:20
# 528d8ca26b444134901dd5be27e24aae
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:22
# 209e3cc3d4ab4f9ba1be5975be25508f
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_boolean_operators.rst:30
# 2b2836253d8f4afbbe086d39776c9d0f
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:129
# a437af0a17314ac0be61ae58d6fba538
msgid "AND"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_boolean_and.rst:3
# 8e1ac9abe5df439eaa33d8d1734b26f8
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_boolean_and.rst:25
# d5055927c15945a69326d346fc494863
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:137
# 2320c36f1408429f839b826512ec23a6
msgid "NOT"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_boolean_not.rst:3
# 319ab5f0c22f42c6b86434903db532a2
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:141
# 5fb4f4201e6944439932ce1e0c84c550
msgid "OR"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_boolean_or.rst:3
# 154e90880ae846148f20fecf636ab5d3
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:145
# a75010f52bae4fa6b8bb417b86f73826
msgid "Special Characters"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_special_characters.rst:5
# 37d2e42105104f6091c0be25e36580b0
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``)::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_special_characters.rst:9
# 4ae491568f234a47b0feb116cce4991f
msgid "For example::"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:149
# ee9bbd008f894afbab181b06cd5c6d13
msgid "Targets"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_targets.rst:5
# ab1b0ca47eeb43309386b8611f1c548b
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:153
# d4f4967b2bd5447bb441a4288f137a6e
msgid "Roles in Run-lists"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:5
# fae8f3d52bd24e5581bc23d192d1bfa0
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:7
# 60684ab1f52443f1b657676b0cfa7fd4
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:13
# 99472eaaaedd4b1f80f2cf763b63b3ce
msgid "Role Location"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:15
# b844de03c433402db724e3c3194a2cb7
msgid "Top-level"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:16
# c8a9c45355254a81b09360ad9e27e55c
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:20
# 2d3d4d8cd2cb4def83b518ebef5b88bb
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:21
# c0a30636eda947eeb8afd57e96e5718b
msgid "Expanded"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:22
# 3f7ad88512504841a1471f8c368affb8
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_role.rst:26
# 606a55901ba64d3b9ae41a7b70dd1a66
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_target_role_top_level.rst:3
# 9a72b8c0f4ff4562b3941e5814f7a97d
msgid "To search a top-level run list for a role named \"load_balancer\" use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_target_role_top_level.rst:9
#: ../../../desktop/chef-docs/step_search/step_search_target_role_expanded.rst:9
# d80976c93e4042c1a8b364f9bde0a840
# e51034d2b74e4541889668aa9a0a0220
msgid "and from within a recipe:"
msgstr ""

#: ../../../desktop/chef-docs/step_search/step_search_target_role_expanded.rst:3
# 0ff73b68a4f84ceb945d3e9696f3ac53
msgid "To search an expanded run list for all nodes with the role \"load_balancer\" use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:161
# 4b7fd7007bc140599de94ff999d13766
msgid "Nodes"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:5
# d2295d20b8524cf38e38852cd9071dfb
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:9
# c8fe7982366147738c1fc0db0a4e988f
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:11
# 847acfd81ac7484aaa203be92186498a
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:13
# 6bb28550753e472f897e4a3c522f7290
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:19
# 604606b7a2a94ac28c3744f0c7f8e19b
msgid "Node Location"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:21
# a767980a232e4787a565ffa77c2b5468
msgid "In a specified recipe"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:22
# 90ede70f17b64d999b2f2c01cbd6ddd0
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:26
# eaace112e404486d8f5c096de2900693
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:29
# b1332ccb24a34ecd9a5d98747f4d633e
msgid "In an expanded run-list"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:30
# c5f16e8dfdf3444fa8665ca21512b2e6
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:34
# 646c2f884aa64416babbf113fdea5b33
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_node.rst:36
# 1d3de8db53ef44ed897c2ace5aebe898
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:165
# b551363a64a84eb4aa762440978eb370
msgid "API Clients"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef_api_client.rst:5
# ccfd2cfa1ba94a988a54dceaf4275954
msgid "|api client description|"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_client.rst:4
# 6497710ec75e4456a2ac2530f70fb9ad
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_client.rst:13
# 05c75987bae44bcf927d57ad163cc7c9
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_client.rst:19
# 77444bc6fbb04272aa7a42617836c8b9
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_client.rst:27
# 89511faaf16349698e4cb1d336cb0c6c
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:171
# 9aa58be6e8d949ff8f6fb96422447eec
msgid "Environments"
msgstr ""

#: ../../../desktop/chef-docs/includes_environment/includes_environment.rst:4
# f18ed3c656ba44be920b6486cfd19491
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_environment.rst:4
# ce56a85e02a34ea6b13df9c737f48238
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_environment.rst:10
# abb2e059c3af4e7fbfa9b14e91a2520b
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/essentials_search.rst:177
# 0c687a0d96c04f04ba4e47f109bc4444
msgid "Data Bags"
msgstr ""

#: ../../../desktop/chef-docs/includes_data_bag/includes_data_bag.rst:5
# 9ba7dcaa180e426b8b8ff96d76b0ef5b
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:4
# 68b9499026e34ddcaa4bef91f78b744e
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:10
# b645e540395345e283e742bcec2aff1d
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:16
# 8043187ccf1f48e787730c9b4ca81147
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:22
# e363e808460f4a9bb7a1ae34f3914592
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:28
# 074c12d6018a49d78ddd98da4dd4c98d
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:34
# ad92ddd42c274aba88fd34866c4d58e8
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:40
# d1ff452ff9c644e29dbdbe36847a1975
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:51
# ca5833691af54b56bd841450a808a7f1
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../../desktop/chef-docs/includes_search/includes_search_data_bag.rst:72
# a8e2698e8ba84ad9a78900d49ec7928c
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-28 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:8
# ed6e8203dc6940a888f32313584f23af
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 635944da3d2842f183caa2bcc71dd228
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:12
# 53264073f5894703adbc221c76e4c35c
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:15
# 1da1f6d57ef8431db0775ce5fa486c91
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 33691d6925be4407b771cf491792b906
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 7406b585e60a4ba981439838bb33383e
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:20
# b2ef8c53b62c4fd09a57350cc1ae0c85
# eef62ebd55eb469193770c3fa9e91e7d
# 3c7b0961f4cc4054a068c45ae712e476
# 424287276a6c42a5b92b430f2c1d93fd
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# 8be4a56554e646859697725e4ed3f819
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 0798afcf56584bdab599f12f1bd69370
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 307448cb8a4647f9b455f9c688817c97
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# c7cc486e157f4417a53b31051cc92391
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# a0ce3baaaef444379e22fc742f057192
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 59088f68f97149948fc864dd470b2990
msgid "|search index_environment|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 39b756490e074e7586e121f656dd513d
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# a730beb0b76e43518a325d0505c1941e
msgid "|search index_node|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# d9ad63015a544ca8ba905e4dec21f4bf
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 80a30a50fa7149cfb6f0fb8747c74581
msgid "|search index_role|"
msgstr ""

#: ../source/essentials_search.rst:19
# 9fd6a8e0e95d4d04b96ba0dd872df16d
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# eb9ea9d7d893457080822257b8d065f8
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/essentials_search.rst:22
# 98cb9c0bdf5a47e4b7c05ed7903522f6
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# e666f81666f145bc81627a35eb56a35a
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
# 2142c6ae3e96464eb7f40b490fcff807
# 687558fe093245f386c59085c14e82a8
# bae62d97986b4ac6ad36777717bde73d
# 2d498e095540465582d6c9c5a6c90ad7
# 7c03425b07bd4a83a708a174e04d6cea
# b9030c1accd54686b18682deb6ee8c91
msgid "to return something like:"
msgstr ""

#: ../source/essentials_search.rst:26
# 4b3935e6b8094b108f3dfd09ec8e046d
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# b7e9ca24e1b649ff9d11028718b1a3ef
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/essentials_search.rst:30
# 7cd534d8b673447384c2797f9a49cee7
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# eda445fa7f74473080b8a9f33b1f622e
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/essentials_search.rst:34
# a015abe35b6a4cb8889d900b3897761c
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 23164852b2dd4ad78c1c25683a71d818
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/essentials_search.rst:38
# 258552dd96364800b221ff0e20a5974a
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 4f55b50ea0dd4544ad3e2864e7f173cb
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/essentials_search.rst:42
# 6a4c8362cf9347f0a914766eb4f7eb8a
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 730262797f4e4be5bd1cf468795b78b6
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/essentials_search.rst:46
# 023c188424814a33a9b22b974811f8a8
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 0b3d6dfe8c0e45e5823d6e432ff07623
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/essentials_search.rst:50
# cd1b144d3a324801bb77e358b64e147f
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 20f1d9dfcf3c4ba99f54ed5cfab45cc9
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 4cf4887f87e14372a0356a48126dabcc
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/essentials_search.rst:55
# 2b18922b9868408ebeaa1c965ffafd9c
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 1b9f505248264fdc88f1a982d6280c73
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# b5c8983b22834bc3b140fa26d5a4aef3
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:59
# 7e5cc19b38b84cf6889544dca7693596
msgid "Partial Search"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# b13d01aec898424fa900e071a806cfb8
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# f0609ac2396a4cc3a956c783571ac573
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# 7a258f4aa91e49e7a9e5e2cf3d9e510a
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# 09e9cb5e10dc4dc2b61c3ae10db54c37
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../source/essentials_search.rst:63
#: ../source/essentials_search.rst:75
# 485889cabd7d4e9e8c33387d21200aae
# 450e5a12679d4d8790c77c9a1b92611f
msgid "Examples"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:5
# cd3f5799532e45119775a7d846350e2e
msgid "The following examples show how partial search can be used in a recipe. First, a recipe without partial search:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:26
# c64df0a0ee5b464b99ec4e1e793c7ce0
msgid "and then the same recipe that uses the ``partial_search`` method to provide better and more targeted search results:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:65
# 2891d65eb6a34b68909285644a1cf39a
msgid "And a different example from a different recipe. First, without partial search:"
msgstr ""

#: ../../includes_search/includes_search_partial_example.rst:77
# 75c810e687a744df8a15b767e3bb7b96
msgid "and then the same recipe using a partial search:"
msgstr ""

#: ../source/essentials_search.rst:67
# 94acce5659f641738fc37885de843199
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 4d6d830f97624ba2872572e6fc0e010e
msgid "|search key| Any key that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched. To search for the available keys for a particular object, use the ``show`` argument with any of the following |knife| sub-commands: |subcommand knife client|, |subcommand knife data bag|, |subcommand knife environment|, |subcommand knife node|, or |subcommand knife role|. For example: ``knife data bag show``."
msgstr ""

#: ../source/essentials_search.rst:71
# 8190b9d2a5544f158c2b17f75a0be244
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 0c8b15a1dc4545d1aa95302113e45c35
msgid "A nested key is a key that appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 1e763ff8331d4b2481617a8b2d14ee91
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 7d03b431c9954e749bff50d9396e5ecd
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 16eabb46ba3e442fa1270acedba417c7
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 85d36a6a60b94d36b7ae65b488b71a87
# 012ad0e29f164c9496e1ae31fffa42ee
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# f44229ede2fe46c88e246ffc063203cb
# 7b0b6584c9ac4908bf56c7d598cee6ce
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 7e5d0e14147749cba8b64a2b3b49dae5
msgid "This data is also flattened into various compound keys, which follow the same pattern as the |json| hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# aeca3278316642be9261f15e1c015671
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 48cb0af1a35c44e9b75fb55e6e03c8a1
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 4529355235a341f8910710fb016165d1
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# 55b6bf4f2b9643de972354482bbb32db
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# 4170116d094149fa990afe9c0e87eb38
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# 5282626959e24920a340e9497ef93b52
msgid "To use a question mark (\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# cf41e085ee71478491e4460ce95f7458
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 4d4f08e1ee4941d7ae49d662579d78b5
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# 304283e8b3294f34b12072d38d93d792
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 363fb4255f9b4655ac706aa96faa4902
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# 196b5cfdd0574a46afd7e164024ece04
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:87
# ecb6d1f4a9844580a264a566d0cf0463
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 1323dcb2865e40c6b76846a00c94af3e
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:91
# 8562b7535ae644a7b50d12f6cca68d14
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# f8800d909e36450bbea5b4ecc613c0a2
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# 6dd678bb358444299933dbfc630d92b6
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# f2a6f69b5581416f826afb15c89f6f76
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 008e9e68b2504ecd8226b41fea9f10d7
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# 89ade1c94bad47db88d1ae1c6db73f60
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:99
# c20a070aa1aa48aaad0facd3b1404b5b
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# c1aeb95621a241b187a1979efe0d3a6d
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 383832c8e31c4a65b9045cbe666332e7
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 92a8a41baf864b1bae9a798ba2972a8a
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# 169f3f83bf20487eb8d095346309ed26
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# 5d12cbc9ce8346d1bc0eb7d9bb29e2b2
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 17510ee2ff5a4675b5b03f32abc1d4c8
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
# 25f3dff39f344de5b0064f5daa04a942
# 312824a0c56b47a2a823a0a9a3bac65a
# 8d121c2e58a44587a09944bd63d49cf2
msgid "or:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 3fa2bb70a7cf4e75b3dd0aa4a6072d21
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:107
# f4a15e33f46c4e0d95c606030c091de1
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 538bcb3f7c9f41f5be8c7fdde4223928
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 493756c2638e4fe791fdb1793d0abc08
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# a8ceb1e9d9f34ca2be6e18f639fe3ceb
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# c89d1e25807f4a52a402169ff2b64415
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# d23b5dc36d7a475eb0ff91eef522ed75
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# 5c8eabd02a994d999778f70467a4189d
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 8ae6fe5113dd4e54824f2feee2e7ce62
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 9c5f223bcfc94ffbbdf00fe1ea359a13
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:115
# 90f596b79a7249d9b93ccbe53b6b9545
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 6a1b9225c4ed40579bf4303e37dc75cc
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# 3991e972c818448e9d96872a2ef2c187
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# 1d72ba6f64e94de99c46a8f75545552c
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# 95a155ab2f4d45c2aec8627d7f7e5154
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:121
# 0a9c7acdc89e4fa4b68926f1af863c89
msgid "Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# df3f6bc974074bbf85681eb6d7e4ad3c
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 26e4abb514604bc5afdaa472613326ad
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 147822f8d0654f30b345a2ed1f5813a0
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# be70eed6d581422294f77e6149c8b71d
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# a9132d0295e5425d86e998708242363b
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 30fe4856eb174a4381942f805b7f6709
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# dc51ac11235644378d4a2f40dbce0fa5
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# a0b7dcf5c6f24b20bec23100cdeceafd
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# a89ced9941e34719a130bb64ba4a2998
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:22
# 66b5468b66d542c5bac505f81d367163
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:30
# 58752fe42ae94af2835863c052748ae5
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/essentials_search.rst:125
# 25e167eccb484b819eb01f20722a5a35
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# e40e8acf650443e891dab69662d0c325
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# 2d580f129759466aa3ab057f70a2910b
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:133
# f5ee5d8262e24ab1bbf441d3b2af6be5
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# aaf3fb85d4d04e40829f99dda8454640
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:137
# afe74be98273456db71e5121db48fc25
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# a6552ed2a231448aa8f049c508a3790d
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:141
# 31f347f43af1425799aa12796076ee2e
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 9d022deb3c314eab92a6699d00310187
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# 3d29c6ab87e244ad96d3ef41601bed82
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:145
# 76bf44651a0943e8959b9dd423d4108d
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# e29fe9174e0d42b4ab1e74c3ee274fda
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../source/essentials_search.rst:149
# 4ccd1da19d3846d1bcf8491b4fd2b206
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# 6e3115814e264c559a5850cab3ec31d2
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 7a4b052c305c448e89f7eb677f7150aa
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 4977d25f181b488da9f87801021ffdb8
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 15069f1a85564c7384f255f355eaff17
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# c3f312d0e9b440498ca2000f2516d79d
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# e758f6fa23c244ecad77b1e294bfad75
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 1b2fd9e84e50436589c7d7375f979f1a
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# b4aba9472f66455f88cc0c1d8ba56173
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 86d02c37ea4a4743b3f8ad33c7b01134
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:3
# c21c155f9dcc41b7be924749e95619de
msgid "To search a top-level run list for a role named \"load_balancer\" use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:9
#: ../../step_search/step_search_target_role_expanded.rst:9
# b99058f5332d45299ea1c19b9f60e1b1
# e6cc8123432544cbb005c9765b14c9da
msgid "and from within a recipe:"
msgstr ""

#: ../../step_search/step_search_target_role_expanded.rst:3
# 70435db2ce9940d6a37324e9e9416ede
msgid "To search an expanded run list for all nodes with the role \"load_balancer\" use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../source/essentials_search.rst:157
# f911d20149144b5eb355763db352d9d7
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:5
# 2a1e4c9940de4b809a7fba0fa2eac43d
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:9
# 611f5eb4d68543c18a5807e2dcded5a5
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:11
# f0c26edd42b74db6bf47c031050da4a9
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:13
# 419d18169de8421c97fb5c09d2bcf084
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:19
# 54c882aa109444f1903e7d92538582f7
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:21
# 2e09b9d6940c4a79b83de8877e54cd2b
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# 58bcfa0054b44f4ba9c19f86af67caa7
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:26
# ee76d1eed7044397840aae0fe1497730
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:29
# 107e3d9d85174ce2b96a429e5633d5b2
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# 43b3bbcc2dce45ed8f4bf476c00379ca
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:34
# 09a4670385a14a61b5015ca227b1225f
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:36
# 51271c4d1306432092a80b674c27c695
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:161
# f06dfbfdcbec4d78bb92923738fa5082
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 09dfd426fe4e4834b83772c286349386
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 485d60285e68421098d920020fb17daa
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# a77a1dc0ee034c6aa7772f7b99acc0bb
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 401f292c6a514302a90eb72ce3bea71c
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 2665179daca5407bbc6e5e68e7385ee9
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:167
# 0e1091bab5ac4689bb0a4c56bb94085f
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 6b31bd6955ae459f89086ee6438d3a91
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# ba60d04716ce42128af453001092dad6
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 23e3effd7eeb40858a82507d978b143d
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:173
# b87f6bd640f6476b9e1c5d98a0fb2487
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 71cdbbab685d4337a64892ef91c3e028
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 488af512e11e43499d166832e7d935f0
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# ad9488fb82cb4235bc2558f720b05435
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 7c8d8b9abf1c478ea01e39006af1e782
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# f6e076a19cc5404fa28ef5185fce80bc
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 2a76ccfa2aaf46f8b895346010ff89b1
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# bf83cda35ac84f9ebce8da9f3c0c85ae
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# e2f225040df5427f826f0e726451d72a
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# a3972f7dae0e4e5bb1acfd93ed1782f0
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# cf3f12b7f9234f95954ce086d58abc2d
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


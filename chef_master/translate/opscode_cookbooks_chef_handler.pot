# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-14 12:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/opscode_cookbooks_chef_handler.rst:33
# 874b479b8ce84512b167814e9853d374
msgid "chef_handler Cookbook"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 1b6d0de86223435aa02a1ba1367a5370
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:37
# df44392e9fa14388bd824f771387b816
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:40
#: ../source/opscode_cookbooks_chef_handler.rst:54
# 0f65d5b7fd3b4f7cb6ebd5cabc0ceadc
# d80c8c0bc80c417892b4642be62c0e62
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 63ebb98390fe4113901754102883c610
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
# 6ec2d71d775c4b0993321a41ecb5a143
# a0d12fec43d24d7cb4e2d096b543a845
msgid "Attribute"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
# 59215d4d4563424082c6082a626094e3
# 61ea9ec74edc4309bbd3f7df6ec204fc
# b9364940f06a409a8f9b0d4b05adff95
msgid "Description"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# c4d86b0e360b4a1c884e056d7651924d
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# c90417d0b4264c1483e93b35702c0612
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:44
# b3ca9201cee8416b82e9b6ff56ba96d2
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# 2d14995b0f3e4cd7a9d1de54f72cf876
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# f286eebe4bb5450787670b5bb6eaeb68
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:50
# aab665f3380642efa08e267ad6a0a5ce
msgid "Actions"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# c77ff0a22cb844d2a23cfe6d89cf0009
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
# b2a5368da9e4430f80e0725d7a25bff2
msgid "Action"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# dcadceb27ade41b08a2e60c1dca75155
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 90bcce433a2142d5a900ff0d963f0c9b
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# 5ed995d263134d67b1587ae1c9842d51
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 37fd03ac3585468fa107e4b8ad98735a
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 06e92d44662a4b418c25ac2eb5fd6f77
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# a9be1e6ebf5542afb90a33ec1dd5f313
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# 012a99782549481e803efd9158632af9
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# af5302fdd0d44506a800a68cd25917e8
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# be8db00248f24d35bb315b2d2391b73a
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# b679e6aac9b64435aef3393bf68402ce
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# b40c79b6c0c24d5fb8a8c8f061fe0dc9
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# a5823cc238ce40a4ac6efd5fea729043
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# 7b75302dc0ad4e1c9e4a2877affa88e5
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:58
# 181f9d0a3afe4dbe9c92222c8de0fe0f
msgid "Usage"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:59
# 1fd1d94094564ef68a5362af87bf14ce
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:62
# 9aeae2702d634ecbb797fb1ef2f89f5d
msgid "default"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 0339351389e94cee89e8c4c3a68a1b9b
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:66
# befe44ded2df4b86a4a5a6f7315899f9
msgid "json_file"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# ef0ffbba575f48219170bcc8d6212a5b
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:70
# 2857492e1ed049409baf0a532e0fbef6
msgid "Examples"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:73
# 75da2ce954544341ab10709e9873c7aa
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 5d8be15dbea1483f82508dd0d313750a
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:77
# c7a6fb99ce2e42b1afd7d4be12a15326
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# c0ef4009fda24499bbe53be8c33bc159
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:81
# e6a15da0a9504bf58ccb3f4e90f66df1
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# 4bfca2210bb94c33bc2823c493f96a36
msgid "To handle exceptions only:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:85
# 3e85f6baa0f146fea6dfa1615cd0751b
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 910b4eb076974058a3853125ea0334ce
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""


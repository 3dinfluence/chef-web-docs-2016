# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-11 18:51\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/opscode_cookbooks_chef_handler.rst:33
# 34f7abc6ac69493d936d5c81963431ec
msgid "chef_handler Cookbook"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler.rst:4
# 56938f01485a4e7abc97a8830e3cf5fd
msgid "|cookbook name chef_handler| This cookbook also exposes the |lwrp chef handler| lightweight resource, which allows exception and report handlers to be exposed from within recipes, as opposed to having them hard-coded within the |client rb| file."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:37
# 32459662b3da4029ac58e7fbdb1aa674
msgid "This cookbook is available from |github|: https://github.com/opscode-cookbooks/chef_handler."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:40
#: ../source/opscode_cookbooks_chef_handler.rst:54
# 6653de98cb074a469cf13109d0c4ef03
# 642f31893f214110951a161e5bd53b62
msgid "Attributes"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:4
# 8e4934c838164bf1b4b58b10972e976e
msgid "This cookbook includes the following attributes:"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:10
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:10
# ecdebf8e7f554bf7ab966618e2c0e8a3
# 74b06a23b89d44c79ded09602b22ef1d
msgid "Attribute"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:11
#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:11
# 789f2616b5464d15b2317029fceb4309
# 8c8ddbd2e0a1475a9718b94a63376010
# a8ab651f300a4034bbfa04fc5f5b2bc1
msgid "Description"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:12
# 9b54dbe7990947b085bc355fe11a850a
msgid "``node[\"chef_handler\"][\"handler_path\"]``"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_attributes.rst:13
# db1c65fb36c44e6da67c6fc877a3135e
msgid "|path chef_handler_directory| Default value: ``/var/chef/handlers``."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:44
# bc45f213a806453fb0740e64dc7ac59d
msgid "chef_handler LWRP"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_lightweight_resource.rst:4
# c7408dac06ee42abbc110fb0e215f753
msgid "A lightweight resource is a custom resource that creates an abstract approach for defining a set of actions and (for each action) a set of attributes and validation parameters. A lightweight resource relies on a lightweight provider to take the necessary steps to bring a piece of the system to a desired state."
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler.rst:4
# adc8a39ad0c347d388cbf5e8163bd488
msgid "The |lwrp chef handler| lightweight resource is used to allow cookbook authors to ship a product-specific handler. This lightweight resource requires, configures, and enables handlers on a node for the current |chef client| run and can pass arguments to the initializer, which allows initialization data to be pulled from a node's attribute data. This lightweight resource should be declared early in the compile phase so it may trigger exceptions during the |chef client| run. For a base role, recipes that register handlers should come first in the run_list."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:50
# a848517601b44ce49e22357035aa6019
msgid "Actions"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:4
# 170056399b97407b84de10606db2648b
msgid "This lightweight resource provider has the following actions:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:10
# 78656175bfa945e18c24390bd24d2987
msgid "Action"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:12
# 4df4835d0ed948e2af979c814c7e7777
msgid "``:enable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:13
# 6f3dbaf0252a422daa823c0427be491b
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:14
# ce634c0c980748189af6c38ff3abba5e
msgid "``:disable``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_actions.rst:15
# 0386b30686074b42a963e2820bc4a04c
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:4
# 2dd0c33af9d244fb9b1e65bcd3258fd6
msgid "This lightweight resource provider has the following attributes:"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:12
# 0271df6b1ac64a1f904c76df4db84139
msgid "``class_name``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:13
# ce91d3d5393a4cb698d30ed404569821
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:14
# 8c9781b4433a4ef090ca706512272e46
msgid "``source``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:15
# 1655b02bd43640cc91eeec3dea29165e
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:16
# 636480130dde46f6864f262a7c6e16cf
msgid "``arguments``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:17
# 3effd015c4274c17afae503402e3610f
msgid "|arguments chef_handler|"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:18
# 9c4af81e150646939b681436c5c90f94
msgid "``supports``"
msgstr ""

#: ../../includes_lwrp/includes_lwrp_chef_handler_attributes.rst:19
# b19c6294d7c6452893d3fb46a0995917
msgid "|supports chef_handler| Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:58
# 9e165c2ac19d44f8b89b893b7374892d
msgid "Usage"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:59
# 5f42caa0d22a4973a767bcc7e04c99f2
msgid "The following sections describe the usage options that are available in this cookbook."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:62
# bd456c5942ff4d469e4ab57d6a3f9bb8
msgid "default"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_default.rst:4
# 61a3bfcad8bb4e81a52923d29a3b6a82
msgid "Use the ``default`` option to ensure that custom handlers are dropped off early in the |chef client| run so that they are available to all other recipes that need them during the same run."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:66
# 47ad3d79736e45e8a23b2b4696c3b57a
msgid "json_file"
msgstr ""

#: ../../includes_cookbooks_opscode/includes_cookbooks_opscode_chef_handler_usage_json_file.rst:4
# a6b6f86684514f6cb10012013562e128
msgid "Use the ``json_file`` option to serialize run status data to a |json| file located at ``/var/chef/reports``. This usage option automatically registers the ``Chef::Handler::JsonFile`` handler."
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:70
# 1afb7c70789446de9bbbb9413cbc5dfd
msgid "Examples"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:73
# 78513918894b4afeb74dd54c0e724b53
msgid "**Register the Chef::Handler::JsonFile handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_register.rst:3
# 0d08bcb29f0f45c3b732c13d2fb0c028
msgid "To register the ``Chef::Handler::JsonFile`` handler:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:77
# 909e0e2db6fb4916a17373b7943e8ae9
msgid "**Register the Chef::Handler::JsonFile handler during the compile phase**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_during_compile.rst:3
# 2f72b310ecae4ac0934fe4ff1c8e67ab
msgid "To enable a handler during the compile phase:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:81
# 926a148c54a94d7598a4b40ce304bcb3
msgid "**Handle exceptions only**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_exceptions_only.rst:3
# a8027592926e4f1a8c77cfa5fe1da482
msgid "To handle exceptions only:"
msgstr ""

#: ../source/opscode_cookbooks_chef_handler.rst:85
# eaa0ae856ad7403ead167a6cbdc7a6e9
msgid "**Enable the CloudkickHandler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 916111381afa44bba06b1da3b926410c
msgid "To enable the ``CloudkickHandler``, which was added to the default handler path. This example also passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""


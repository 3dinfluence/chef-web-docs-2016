# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 17:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:3
# 2b286958901a4b54a356cfb37340d902
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:5
# 64082c83906e47018c2b90ca3e9c95f2
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 8f03dfe70bb14aa1b455bf1b55cf3483
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 994be6da53fc402c986239d52cfea132
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 2098865130a142c99177f29bafc2befd
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_overview.rst:10
# a4801eb4e6cf4e29abd136a2c1711757
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:11
# 55a9eb72ed5b4102bf3ef4896d6a96b7
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# d8b3adf868ba45bea6973f9440714ff4
msgid "|chef| is comprised of the following:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:31
#: ../source/chef_overview.rst:50
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:96
#: ../source/chef_overview.rst:115
#: ../source/chef_overview.rst:132
#: ../source/chef_overview.rst:151
#: ../source/chef_overview.rst:170
# 18121d9dc29e4be1b67899fed6bb11f4
# 9cbd1afe23bd495cbcf72e042a7d1fe3
# 17bfcf4aa3aa4b75815fddb6533076ff
# 0ed6eac5fb1949c69374561786312a5f
# f1b50e6f6966420eb9321b07296d56b5
# 5cb488fad71a4ceeba4838d3fb9bfc01
# 369357d2970940ba871d3bd89275901c
# 1f73fba099a14d968e25b860aa5057b4
# 02ebcf92355547a4be1f180b0dde3b41
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:32
#: ../source/chef_overview.rst:51
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:97
#: ../source/chef_overview.rst:116
#: ../source/chef_overview.rst:133
#: ../source/chef_overview.rst:152
#: ../source/chef_overview.rst:171
# 4c1b1365a33a446c986b84bc62b5383e
# f4a0b7f8a88c4cc3bf2f6ff1f2b795a3
# d7d2a43abdb648c594842018fb9b4bcb
# 55d4892b9f654f4a9f221f5dde36fdc1
# 4134e78f33d2469b91d6af589e88c09e
# 23ee3ad9c1e74055936b7ac0725daeb4
# fa1249f379144449992a75b8c3014b77
# a4eb99d1725c4513980f3ad1c12d2052
# 4ac0fe94cab9438ea5cdc7bcdb7de45c
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 6691d4bb27ef4e86bf60a0c2925ac9e2
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 7bfa29770d7c4bf4be4c3fd8c482a6b9
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|. The |chef dk| is packaged by |chef| and provides an optional (but recommended) set of tooling, including the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# ca5bf6d703cf4b5aac6ce56697f19fde
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.) The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pulls down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated |chef client| run data to the node object and generates reporting data about that |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 55cd206111c64486be6c2646750b4e6c
msgid "The |chef manage| is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# ec9646a28f0c4c67b60a5193640220bd
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# e9adaad276a94268b19741b34bb793d2
msgid "Availability supports out-of-the-box and custom high availability scenarios, plus server replication from a |chef server| master to any number of replica instances of the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 80d1ebef9228451cbfc81d4d63606f38
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:17
# e903261f3eed442cbe48220c907e3ee2
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:19
# 0f25fc9b8ae749e9ae9dac8d8f9f41f5
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:22
#: ../../includes_chef/includes_chef_manager.rst:6
# 734728a66e0d4e15897b1722f0ef97f3
# 2254862a8cb04a3794f45a93a88c403a
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 2987a3c520be4135a1585d493d4ef463
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:25
# 806fb80985f04605b2bdb0b2eeff67f0
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 0ac516f506a64fc5bc2db5f0dd809c88
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# ae5d87d87ea748b5831d3c3abcb15622
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# fb7adfc0c19a4733b060292d8c53883c
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 91d6e2f80c0c41569d7c06ebd2e40059
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# e1be0bc417954c80b0c050c5552d77dc
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:44
# e20ee18b1daa43b18de2e0e974753770
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# a28fd50fc01940d389f61d030a5a8441
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 53116234061945f286af42d19d66b951
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# b7765e7b4bd840b1a6863695a9e3a1d7
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 4f49b3295391447f928477db1fcc0405
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# ea2009a58ace403aa34e849645f73c50
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 837e18e50f28451f80542004a5184e68
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 0e16d4c057cd49458401c5f3add38554
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# ffd755e4db624846849f9ecff7010abe
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 2260422e856b4893a4cecc0e5fb79b3b
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# c1d2d1f9d6f24a9ea4093f0afaddda29
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 894ad67531854e37985f4b485ddca92c
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# d44483c2b61c45b288f98a8f0091198c
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# f7b4997be5fe4a9cb27ddbf475ad6f0d
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 14b8ac4696174ed7bb271ff5e3c7ccbb
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# b472f1a39bae4a7aa42a565bb361f109
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 369ed3e0d51e497b8cdfd28ca6d14e04
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 77e5f593160a4b4a97b8aea470a178d0
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 45ae95271bc64536b74ca9563af2cf70
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# cb149f40ddeb4c2abcdd33256f303766
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:60
# 62dbac4c842741e886e8597bddaa478a
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# e3d2f69635614a718e1cf4760eef5fb4
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 073b2d33b62b468bbf1193ace8ee6473
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 0db8210dd6594564a622b920ecb9b4fe
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 9e5fa9507b164b96bd5f75de90e0fa61
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 3e0c74f38b5449369add4a186d77edf7
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 3867876db3354bc09f137518123ed49b
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:63
# 0d2e5d1059d34bfe8c568a9f0f0cd996
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:72
# 7785ba9a42a5490f9604ef1b19b0d074
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:74
# 9d7f777345014ddd8933cbcd3ba026d6
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 23b5074f37a14599a821f758e8efd864
msgid "|kitchen| is an integration framework that is used to automatically test cookbook data across any combination of platforms and test suites, as defined by a |kitchen yml| file. |kitchen| uses a driver plugin architecture that allows it to support cookbook testing across many cloud providers and virtualization technologies. |kitchen| supports all of the common testing frameworks used by the |ruby| community."
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# 961c9d58fc784e3ebce035b14291e96e
msgid "|chef spec| is a unit testing framework that runs |chef zero| (or |chef solo|) on your local machine for the purpose of simulating the convergence of resources on a node. |chef spec| is `an extension of Rspec <https://relishapp.com/rspec/rspec-core/docs/command-line>`_, which is a behavior-driven development (BDD) framework for |ruby|."
msgstr ""

#: ../source/chef_overview.rst:80
# f5f4ff59fa824a1faabeed7a8752021b
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 831b82ada0704d5b98babdc581ffb12f
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes---the most fundamental configuration element within |chef|!---attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 75184a17ffda4c1d99b98e83d36e2690
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:84
# dfed91b850434426b7f96680a5579189
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:87
# 3490dee189d04c59b9c64e59423b1457
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# d496995b7c614cb9a60c4a7ef87754af
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:90
# de2bef05783846659ec0e6c1911683ef
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# f2f60131418542279fcb4a082bcb1830
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 4dab523bc1a7405daa7088b6ec523d26
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# ebe5b571ccec4a9e95c8c7b12450b73e
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# abcbadb6a4204a76a08b8995b5166ebd
# 063a44469529434d94ec76ca33ff4c16
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# cbe4457559464629b735727bcae1c655
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# 1f6c7484ca25457c8b831c3f89ff338d
# bfa461b67df0423187f0de27d9062b53
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# dcb81f2d5a0b487f840ce2c73c43ae6d
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 34ed253ebcb44d6dad22591afc0708e3
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# bd38b0533d964b4791bb553b6d1c83ff
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:106
# 6f8c6d62c1594a3ab43d6272e39b8190
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 292bb2ea53a14fa289505545b3c74bf3
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:109
# 0081999744db4630bc75311c58026494
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 4a2b1334d99642108ab8524c937a1608
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 8c617ea8cac544068c05ce30be68a7ba
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 89fd5b6260284cecb346d690fc1bd45c
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 3526620b05ee43bcb541f5690d292d13
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# f2a0b0c1e1d149fb9dc69ae9568ed3a9
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 30493799e8cd413281d30d0a4e1a5dd7
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# d2929c58cb794d20a33bba8b977248e4
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 8a65155f0e6a4671a2410ae8381b855f
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# cbffb6d9c54c40b09f72c65a7896b502
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 69ee46b6943e4756911b49dc05c10b5a
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 611020ace8704c67881597679a61d768
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 2254a377b987455db932e2fa4b5369be
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 1bd300f98e7445a2a7f48d4718dd6aae
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# f2973a39b9104a66acb3eb453ef4a915
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# e236739d279d4b4cb7d783da23b538e4
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 8ea44ad693194f52851c4b197d7d24e5
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# fb150eadb8dd4d76912d821ac579dc71
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:123
# 7e209cff399942c486c5e4645e974782
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# db79ba30550949d093c29fa8592e6e90
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 635820e078c2412cb9d88326e789f671
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 4dc0cd88d0824456895163daf7e3de85
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 2749a3bf769c4fbcab7af5bf04214b58
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 644e124098b048d0a7a1a1add61be9c4
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:126
# 2886d250adee47a2877fd75c2ac1d5a2
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# a6e35f6622ea4ebcb883de8936eb36e9
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# da3a50f838b94b0586541ba687a94090
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# d510c306b8144e739a84d0cfa52689d1
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# ce75872536f74fb1aa4a4bcf2d3cdef9
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:142
# e85c5926e4ea41e287c87e567c7276c4
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 3e039065c5e640a399f5722096d7bc06
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:7
# 391015569b904a499179cedcb85aa8ea
msgid "|chef analytics| runs on separate hardware from the |chef server| and consists of the following components:"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:9
# 48f4830aa55c4b65ab8ad091814a6237
msgid "|chef actions|. Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:145
# 4383e51e797c42c99832ebd233c8b7dc
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:154
# d39ef52f023243b7bab8f1650eebae22
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:156
# 7a45596ca6cf46f89e5cb673f80471a1
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:159
# fa0bea6602114b31afb090002f8f54a8
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 6581325dd3a649c8a4ed9cdcbec18bc4
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 53882721b36c4e539fcd2ca3b59ec0f1
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 20b8c9d397454e799ac39bdbdbd73511
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 1b18e737f9794cc5b810579fe0417f76
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 1e73a568a2454a858a8635ab8e5bcb40
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 85538aa3642b40a881745e70b42bcd9b
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 753c0065a1694a99be40684a821426b2
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 8baf68ecf6404662afb09d38e6f0028a
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 05f19534a649471b9fae217778146ff1
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 779fd9916a3648618f311881bc65d6ef
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:162
# 3b57ad69709f4f32a08ab6f4a4eeb555
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:164
# 0c45062b7d9e472ead4e6b77992ba1fd
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 753d23652267404aa16ba65554472bd6
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 5e5575b3b39a4e37bbbad100ef3b4599
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 33ac369dc1c5477290b62b0b0240ec74
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 4dbfd459c5ed41d7bec147a7bd30a2fe
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# cd39630647f64616bd22df40f54f5e8e
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 7a83bbd3cb6946848caef184fd87cd97
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 9e5482fc27094954b24b40b2413f872d
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# a42fa566a554470c9fe9873c37405ab8
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# d9e61556b3f4453986b07a36fd23419f
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# ad8c65e2cb8c45cb8ccd9b0e4c58fa61
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 766eac4757924364ae7b2631b6c0384c
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 1d4a94f1c23646a3ad6c73ec687bd8e6
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:177
# 9b1fb58218a14cf08e0f3adb3915ac2e
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:179
# b289f98288174554bb2cf65c27534a82
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:181
# 7eff829fcea4480aaf7c9c49a88d9146
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:182
# fbc5ee0f3f78442ead78daf7dd67157a
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:183
# 6ae268214994411f923d7f6cf8535c17
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:184
# dc50a802ea6844d195347ce87a879c54
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:188
# aeffe3cc954345f4b2cd9447703db89e
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 5ac55dbedd924482b5b2380863e0e595
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 91472a26a8ab4fa68a259baa0de17655
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:3
# a65945ccdb334134bf9104da939ce74f
msgid "An Overview of |chef|"
msgstr ""

#: ../source/chef_overview.rst:5
# 4e5189663fdf433aabc97da6f43430eb
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 58b9ba32424048ca8f740c67dc132fef
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 6ed8c19070034386b39dfb2178b664d8
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 8ed3af08ef284b1f9c088133c06e7bfe
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_overview.rst:10
# 684cf6a0c32648f98e91a4619fdae642
msgid "|chef| Components"
msgstr ""

#: ../source/chef_overview.rst:11
# 6c7f53ec7fd04a1b8a827d8d24fc4e85
msgid "The following diagram shows the relationships between the various elements of |chef|, including the nodes, the server, premium features of the server, and the workstation. These elements work together to provide the |chef client| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this topic, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# e35c100942c54f0f84eda2c0ca5053e8
msgid "|chef| is comprised of the following:"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
#: ../source/chef_overview.rst:31
#: ../source/chef_overview.rst:50
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:96
#: ../source/chef_overview.rst:115
#: ../source/chef_overview.rst:132
#: ../source/chef_overview.rst:151
#: ../source/chef_overview.rst:170
# fa576d792fed4ebe99b00f136a1c9842
# 9a5160995a2f4c8cbf89f0e7374e2a2a
# 2597da8565c9484a8f6e517199052fec
# 106adc2c18f041479ed03925401d8fd0
# 0d228f271eb84413ab2e8ab00f629336
# 84e26f6003b14f91932092d08a798c5b
# 224459e053de4daabfce9f25bbbd8fc4
# fbadc27076254c33b0d3e5892b111a38
# b1aefaf5a564470aa4d7308f94fe9c1b
msgid "Feature"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:12
#: ../source/chef_overview.rst:32
#: ../source/chef_overview.rst:51
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:97
#: ../source/chef_overview.rst:116
#: ../source/chef_overview.rst:133
#: ../source/chef_overview.rst:152
#: ../source/chef_overview.rst:171
# dccac93ce16f4808b3fc6c17fa000414
# 6fd93afe42874fffaa1c9fb881e38095
# 2264fea68e1049a9bc9917d7fb70d585
# 909154f5d0f1461b9cfb3f50e757a2ec
# c363d26527484c769d960cf82de7f890
# aee63e3d285b4a71a420dd8b7daaeb29
# f8b4f2ec2f9d4d86b431c6518a9b67f8
# 5be1c11d7f07410e834a8268946fcb53
# 3972bb959de6454cb0b1294c5f1d375e
msgid "Description"
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:14
# 1dcbba5d9bb242c8848f2e2387f7157a
msgid "A |chef client| is installed on every node that is under management by |chef|. The |chef client| performs all of the configuration tasks that are specified by the run-list and will pull down any required configuration data from the |chef server| as it is needed during the |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:16
# 5ee312c8731b4b12ba0f0141d7499cff
msgid "One (or more) workstations are configured to allow users to author, test, and maintain cookbooks. Cookbooks are uploaded to the |chef server| from the workstation. Some cookbooks are custom to the organization and others are based on community cookbooks available from the |supermarket|. The |chef dk| is packaged by |chef| and provides an optional (but recommended) set of tooling, including the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:18
# aa1edbdaba2644ebbf30956ce83b91b6
msgid "The |chef server| acts as a hub of information. Cookbooks and policy settings are uploaded to the |chef server| by users from workstations. (Policy settings may also be maintained from the |chef server| itself, via the |chef manage| web user interface.) The |chef client| accesses the |chef server| from the node on which it's installed to get configuration data, perform searches of historical |chef client| run data, and then pulls down the necessary configuration data. After the |chef client| run is finished, the |chef client| uploads updated |chef client| run data to the node object and generates reporting data about that |chef client| run."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:20
# 20e9a45debbe48a7b9b607a20105125b
msgid "The |chef manage| is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:22
# 60b9277272224e2a947e316d1e4dd76b
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:24
# d097e13433704c6eb07715c45372af8a
msgid "Availability supports out-of-the-box and custom high availability scenarios, plus server replication from a |chef server| master to any number of replica instances of the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:26
# 5853be1898a8452697309a2324b3efb0
msgid "|supermarket| is the location in which community cookbooks are authored and maintained. Cookbooks that are part of the |supermarket| may be used by any |chef| user. How community cookbooks are used varies from organization to organization."
msgstr ""

#: ../source/chef_overview.rst:17
# 9cf271dcc16349bea9fc33c04092de75
msgid "The premium features of the |chef server|---|chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, and |chef server| replication---may all be installed and configured for use with the |chef server|. Each of these premium features are easily enabled and can be run as part of any |chef server| deployment!"
msgstr ""

#: ../source/chef_overview.rst:19
# 0fc09b855f88440b91f470d99b4cf5f1
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:22
#: ../../includes_chef/includes_chef_manager.rst:6
# 95acc128d2474608ba30fd48f9418ced
# b7339d4ba3654f18b639c746cb14462a
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 79b172cdbc2b465fbd759888b5e52c2a
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_overview.rst:25
# 47ca7c4e5f54447bb894bb9fa625abbe
msgid "The following types of nodes can be managed:"
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# a3afac04ae6b4e0c84a335c81b26c9dc
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# f31ffd67bf374b8f9d4ecae5372961c8
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 3e24a22c691f4b87b5d3cfaa4ede91c7
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 0378915cfbeb401d88aaec194480a7ce
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 84821f13af894e6d81defe61f099c776
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_overview.rst:44
# c6a3e0c5be364cfcba311597ef83ea65
msgid "The key components |chef| that are installed on nodes are:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 7358ecf8dd4546029552d80e88a91c14
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# f01a181ce8d643b29fa2ede9d8462262
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 491a3039bee84e7294f288ad06672fc6
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 95b87f1a646e41a3819ae522fb50e8a3
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 5eee8f1419e240bab9781b0d88afff78
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 6bfd02fff27d49dcb79eefcbd3a2f581
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# d9da828511c94559b5b8f71535830a82
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 128bc0822e964b4e8852871ef852503d
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 5173c4629a3c4848aa84972b8d59f439
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 674449c8f0064c22846fc09ef74edc0b
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# d242867955664ecf9585e0542c55a2ff
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# e85d2a973d1f4b4a88896853e98cc8af
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 75192ec361c84a8dbfb81f5ec387fb14
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 4bd454cc519c42a3bd1ead1ddfb17f8d
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 872a21ed342141419fb20dff158d003a
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# a07b1d85410a436da051544abd6118be
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 348857919f5344da87d17af30cce325c
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 1d4a95aa6c4646439d220ca7689811e8
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 1a09b9db163a4832b2fff6941400c9ed
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_overview.rst:60
# b31cd61916134521831d10eead21dfa3
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# a95313ce2a5d48348b5044fee977e83e
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 781b7e955cdb45269e1c801e906d2ba1
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# dd8e0692c26344179e90199bf7482f90
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# a61a61977add427f9187d174b00f4351
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# f3d58e7ad124427f9f2c75ef2ea08f7f
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 6fd44b42e1b548d8b6f43be8cfa9fda4
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:63
# 838e7817033f4987a69423534d5fdb47
msgid "Some important components of workstations include:"
msgstr ""

#: ../source/chef_overview.rst:72
# b2b4296fa2b94f4299c322c1e3e99f2a
msgid "|chef| incudes two important command-line tools. Use the |knife| command-line tool when interacting with nodes or when working with objects on the |chef server|. Use the |chef ctl| command line tool when working with the |chef repo|, which is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../source/chef_overview.rst:74
# 629f29c24d55463892a86ade3814c40a
msgid "The |chef dk| is a set of tooling that is packaged by |chef|. It includes the |chef ctl| command line tool, |kitchen|, |chef spec|, |berkshelf|, and more."
msgstr ""

#: ../../includes_test_kitchen/includes_test_kitchen.rst:5
# 63e18cd3a3ed4fd9b13dc77f6faf3ea5
msgid "|kitchen| is an integration framework that is used to automatically test cookbook data across any combination of platforms and test suites, as defined by a |kitchen yml| file. |kitchen| uses a driver plugin architecture that allows it to support cookbook testing across many cloud providers and virtualization technologies. |kitchen| supports all of the common testing frameworks used by the |ruby| community."
msgstr ""

#: ../../includes_chefspec/includes_chefspec.rst:5
# ae0a8c76b2e049e6a50aa9420993116b
msgid "|chef spec| is a unit testing framework that runs |chef zero| (or |chef solo|) on your local machine for the purpose of simulating the convergence of resources on a node. |chef spec| is `an extension of Rspec <https://relishapp.com/rspec/rspec-core/docs/command-line>`_, which is a behavior-driven development (BDD) framework for |ruby|."
msgstr ""

#: ../source/chef_overview.rst:80
# fd10d08cc77a48039672522326d81db6
msgid "Policy defines how business and operational requirements, processes, and production workflows map to objects that are stored on the |chef server|. Policy objects on the |chef server| include roles, environments, and cookbook versions."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# bd1ffcdbcd204eb0b91e973d61d4287e
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes---the most fundamental configuration element within |chef|!---attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 0e94d107998e4b989bd8930cdf53a25e
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_overview.rst:84
# 3ff08422104840a885faeda980a6d656
msgid "While |chef| includes tooling like the |chef dk|, encourages integration and unit testing, and defines workflow around cookbook authoring and policy, it's important to note that you know best about how your infrastructure should be put together. Therefore, |chef| makes as few decisions on its own as possible. When a decision must be made, the |chef client| uses a reasonable default setting that can be easily changed. While |chef| encourages the use of the tooling packaged in the |chef dk|, none of these tools should be seen as a requirement or pre-requisite for being successful using |chef|."
msgstr ""

#: ../source/chef_overview.rst:87
# c7d38a68676e43f185f38da3f7fd2ddd
msgid "The |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 28038dea1a6440899b44ae90a2c4242b
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:90
# d773b5339118419ea5964557dafcb893
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# a2f27d4aff1b4826a864243d23caa8b5
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 8ee2252e0b334e0b8a128215706effb3
msgid "|chef manage| is a web-based interface for the |chef server| that provides users a way to manage the following objects:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:7
# 20e0c508f237434d8680d7dab8fff299
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:8
#: ../../includes_node/includes_node_attribute.rst:14
# 7af7dd40a9284c8da6e39db2a11701c7
# 7bcbb12049c046d08276842c0d166528
msgid "Roles"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 5b215f6cf41e4b8b88b2b639b5e4a28b
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:10
#: ../../includes_node/includes_node_attribute.rst:15
# af4e597ab9bb4bbf866d860aad94240f
# d210e7b3a87a42f8a293faf2fbc417db
msgid "Environments"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:11
# cb207ff4875944dca0648960f7a1b7d2
msgid "Searching of indexed data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 29fab9050737440b9dc368bbdb404db6
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 7ae39e3fd85043879ddf6e736343494c
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/chef_overview.rst:106
# 69a2e2be49f74132a887ed2014192651
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# aedf3f4690e342099991d33743f81648
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_overview.rst:109
# 47e00473da234c77981c643d65527615
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 1d96fdc93818413797b36eada2eaf134
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 1c7401a9a49942b2855ac05bb469ce0f
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 316dbf2589af4d90bf087a37a8ece081
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 97c53879bb8d49efb87c4cbda869eeed
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# f488b5c3d47e482783b226a0f3560bec
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 8dd0c85401fa4e3a971e42f2e948d0e3
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 6c2072e067ee43cda9960fa727cf5fab
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 3494706a2d2048b7b166590901f67ac4
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 247be1961ba14dc4a0539d1f3362394b
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 3ad2506e3a85459a83555f02e3dfb6c6
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 658bd56e08434c65bc320eb33bc2007f
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 3d9c04d5c21f411aae43a161432db1df
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 83d9502e63ce4b6585afbe823c18fa45
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 1cd53e4ede0f41d5b5879c0601a402c9
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# bfabcc23a9b7485b829561834d3270ea
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 39f793331f134d838b823b39804d2ce7
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# b54dac24b284428f9352fc8b7b609499
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../source/chef_overview.rst:123
# f67d2b2dfea145c29728716ae9689bb2
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 0ee5df31648144308a272850c115748f
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# debe6b20114e4854933c50104c944fd9
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 1402a0658f004776b6dfe1eb9d9f0a11
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# b79ffe857411415caa0d7c69c447a3b2
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# ecf8eaa2cc5e42959adf1a9f8a13fc34
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/chef_overview.rst:126
# 464cd8fda1bf49ac9649d0d149d8a8ca
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 7b35a0aba6414b2abc0ce461ad7c35e8
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 8ade3dac992449a9ab5a334fa05a22a1
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# 4d066465481a4ca48ef90e9aa0bdb505
msgid "A cookbook version represents a set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring the correct use of a third-party component, updating a bug fix, or adding an improvement. A cookbook version is defined using syntax and operators, may be associated with environments, cookbook metadata, and/or run-lists, and may be frozen (to prevent unwanted updates from being made)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:6
# 43027fe9eef04bbd9aafa3b334dd2501
msgid "A cookbook version is maintained just like a cookbook, with regard to source control, uploading it to the |chef server|, and how the |chef client| applies that cookbook when configuring nodes."
msgstr ""

#: ../source/chef_overview.rst:142
# 744130378576483c9976776a06f463b8
msgid "Analytics"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:5
# 17e759b38afe4e89ae50dcaf541ff85e
msgid "The |chef analytics| platform is a feature of |chef| that provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Individuals may be notified of these changes in real-time. Use this visibility to verify compliance against internal controls."
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:7
# aef1a2955e4a49b0924ec78fa7afb835
msgid "|chef analytics| runs on separate hardware from the |chef server| and consists of the following components:"
msgstr ""

#: ../../includes_analytics/includes_analytics.rst:9
# 4651c093f4f247f9a7983dd42900d69a
msgid "|chef actions|. Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:145
# dcedd0a0da9e4f0da88d5bf8467488af
msgid "|chef analytics| includes:"
msgstr ""

#: ../source/chef_overview.rst:154
# 2878ef6d38f8458b8112a3f5d32e02a6
msgid "Actions are policy and administrative changes made to the |chef server|. The |chef server| gathers a lot of dataâ€”--each node object, the node run history for all nodes, the history of every cookbook and cookbook version, how policy settings, such as roles, environments, and data bags, are applied and to what they are applied, individual user data, and so on."
msgstr ""

#: ../source/chef_overview.rst:156
# 382c6f90b914498b9bd78104bf74607b
msgid "Reporting is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure that is being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../source/chef_overview.rst:159
# dca8dd5c74b84aeb99771c847fb87e38
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# c17ebcd4cb94478cbc0e41c8c1ce150b
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 2c424900495545d194835d4e61aa83af
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 8b79d360ab5f4c988007917fd8324d42
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# c9a1db7fef4647e5b6d808e3440a4eb6
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# fbb88b6bd7cc4898b800ab6ac9c16160
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# dea36fe9275449238ac9f39896971d31
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 44c77f53b0cc463da8466d1eb2adccf9
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 34cdaf202dca4c30a42edcfe394f0001
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 399300fa6f6d44af9d2b25e82288608f
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# 9c7cd37bc8514f59b88fb451cd350432
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:162
# 4aa90b95ea93427aa667867f3d7ba1a8
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. A reasonable set of resources are available to the |chef client|, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:164
# 67d6454623274b3588b72f5687ef8af2
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 848a66cbcca14b029aae092084eaf842
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef client| run, these attributes are compared to the attributes that are already present on the node. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. When the cookbook attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# e4a7ee0c228444c89166822d9b3e24b4
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 8c33df56d5404d4081e04e2e4d9eb2d8
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 972193dbb961477098b5b8de04bbf919
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# ee1789e6842944e489ceced20c644e98
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# ea2bf7028bce4f13bc15ba22baf26106
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# b61339550f364630ba9633f31bfb0564
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# c950c0d69b934760a72c78c2e1d4cfb7
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 79606e4eb4884177b9353dc6bb4717d5
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 541118f1e183407c877df581a709b86c
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 80be4c66b22249b3a5d044db1847af10
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 2fe5a7e4180d4683af486841dbc0ff85
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../source/chef_overview.rst:177
# 29f5fad733b74042ab98967506fcb0f1
msgid "The |chef client| will run a recipe only when asked. When the |chef client| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, the |chef client| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:179
# 3a48d0c4649f4c21899fb1efdd88fa23
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:181
# fe2425930bda4995b798b73a45823876
msgid "Files and templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios. Files can be transferred from cookbooks to nodes."
msgstr ""

#: ../source/chef_overview.rst:182
# 18ecda1cc3a445358bcf4e482588c5f3
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells the |chef client| which provider to use during a |chef client| run for various tasks, such as installing packages, running |ruby| code, or accessing directories and file systems. A resource is generic: \"install program A\" while a provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. Default providers exist that cover the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:183
# 396cce6b0fa4418eb4151dbd479e0521
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef client| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:184
# ea6f4d42b2c5430f88e266765aaf6d33
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:188
# 305319fc354f43219dc75cafd9528914
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 00006691a5e74bd2a899551a90aadcbd
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# fdae6e2d5e724898908fbdd91d042751
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


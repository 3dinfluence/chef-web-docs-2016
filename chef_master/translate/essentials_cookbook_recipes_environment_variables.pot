# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-08 13:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes_environment_variables.rst:34
# 492c409fb8f1498a84ec7f281b2a81cf
msgid "Unix Environment Variables"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:36
# 18e2b688ffb847ddab9016af7817afda
msgid "In Unix, a process' environment is a set of key-value pairs made available to the process. Often, programs expect their environment to contain information required for the program to run. The details of how these key-value pairs are accessed depends on the API of the language being used. This article explains how environments of child processes interact with their parent process and how you can use Chef to ensure that services and applications are started with the proper environment."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:39
# c5ea2004924943ed968c317f109801be
msgid "Child Processes and Inheritance"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:40
# b80796b1660c496ea4751619645df471
msgid "Child processes inherit a copy of their parent's environment. In Bash (and other shells) the environment is accessible via shell variables. Shell variables can be added to the environment that is inherited by children processes using the export keyword."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:42
# bfda1479b5d141faae893bce83923f05
msgid "Consider the following example:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:60
# 5d5240e07d154223b75fcf35fbf3e1ab
msgid "As mentioned, the child process gets a copy of its parent's environment. This means that any changes made to that environment do not affect the parent process. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:75
# 946add1c9b6441618d1555fc78a49507
msgid "The principles mentioned above (a child process receives a copy of its parent's environment and cannot affect their parent's environment) apply in Ruby and Chef just as they do in Bash."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:77
# f10adc0c5be44fbd85e49835a8b541b7
msgid "In Ruby (and thus Chef), the current environment can be altered via the ENV variable. Any changes made to the environment will also be available to child process started by Chef. For example, consider the following recipe:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:88
# ea6c51dba3874852b58748b531cec8f7
msgid "When run, the bash resource will correctly echo \"bar\" to its standard output."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:90
# 82c3e2efb353492fa448dd456e7d3c16
msgid "However, just as in Bash, changes made in child processes have no affect on the parent, and thus no affect on subsequent child processes:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:106
# 035798cc6b704427823d2c9b2b95944c
msgid "When run, the second bash resource will not cause anything to be echoed to standard out as BAZ is not part of its environment."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:109
# 39e4429ee56c49aa96317255b57374c5
msgid "Managing Environments when Using Chef"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:110
# dbcf03af64ec4a808c4c86344c0bd466
msgid "Services and other processes often look to environment variables for important information needed at run time. There are a number of ways to ensure that processes have access to the environment variables they need to run properly."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:113
# aaa221c1be254bd3a8e4046787e4aff4
msgid "Using the Service's Init Script"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:114
# 241ea6b495e2467db74fb39713de4e4b
msgid "Ideally, a service's init script would contain everything needed to properly start that service, including the necessary environment. Ensuring that the init script itself contains the necessary environment changes ensures that the service will start properly whenever it is being started using its init script, whether that be from Chef's service resource or directly from the shell. In classic System V init scripts, the environment can be altered just as it can be altered in any other shell script, by using a shell variable marked with the export keyword:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:121
# 73a2de3a28f9434086a489f094d899b7
msgid "Upstart Services"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:122
# 13d2995619aa412caa6c525807c1e4c8
msgid "For services started using Upstart (the System V-compatible init system used by recent versions of Ubuntu and other distributions), their environment can be altered using env:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:130
# b3732edf01cb41b8868d1fd683c685ca
msgid "Systemd Services"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:131
# d49ed084c1624e0b8b127d1b5b1cd21c
msgid "For services started using systemd (the System V-compatible init system by the recent versions of Fedora and other distributions), their environment can be altered using the ``Environment`` or ``EnvironmentFile`` options:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:137
# 4d0af9ffc0c641af8d2778ddc433cff4
msgid "If the init script provided by the package does not include the necessary environment variables, you can manage your altered init script using the |chef| |resource template| resource."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:140
# 2f255d8e38394ee783552ceef3844a7a
msgid "Using ENV"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:141
# 90a08f16422e45cba36426229495ba2a
msgid "Another method is to use Ruby's predefined ENV variable to set the environment variable. This ensures that any child processes (including the service that a resource may be starting) have this value in their environment. While not technically a Hash, ENV can be manipulated as if it were a Hash. For example:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:152
# fb50a7465ce7496ca68d9d92028cc726
msgid "Note, however, that changes made to ENV only effect the environment of the chef-client process and its children processes. Altering the environment in this way will often ensure that Chef can start the service properly, but will not ensure that the service will start properly when started using other methods."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:155
# 77842499db7b47b5b2dd5631f8c9b282
msgid "Using Resource Attributes"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:156
# deabca3f5d1a4d668f540f7034713ecb
msgid "If you are starting a processes by using an execute or script resource, you can use the environment attribute to alter the environment that will be passed to the process."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:167
# cf0ef0895ac549cc80eab46244afc4f8
msgid "Note that the only environment being altered is the environment being passed to the child process being started by the bash resource. This will not affect the environment of chef-client or subsequently started child processes."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:170
# 276a82c0dcb748d1aabc51cc491a6298
msgid "Other Issues"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:171
# da81fa5a934943d7bed8a0f90b556f6a
msgid "**My init script works fine when I'm logged in but not over ssh or when launched from chef-client running as daemon!**"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:173
# 0d6a653e427145719d3dfa1b45fcee12
msgid "Shells commonly alter their environment at startup by loading various initialization scripts. The files used for initialization vary based on whether the shell is started as an interactive or non-interactive shell and whether it is is started as a login or non-login shell. When you log in, you are likely starting an interactive, login shell. When you run a command via ssh, it is possible that you are starting a non-interactive shell. This can mean that the process in question is receiving different environments. Ensure that your service or process is being started in a way that ensures its environment has the necessary key-value pairs."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:175
# e4cbf0acd6bc4396b4006ff80f6f5f70
msgid "**I want to change the environment for every process!**"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:177
# 008bbe518cae4374b7fada8cb3353412
msgid "To change the environment for new processes, you will need to alter the initialization scripts for your system's shell. You can manage these scripts using a Chef template resource; however, there are a few caveats you should be aware of:"
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:179
# 03053ee6814d4c71b26036b1af9f0d0d
msgid "The environments of existing processes will be unaffected."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:180
# 052445a1fbaa4d26a2778ad4a59162a8
msgid "Shells look to different startup files when started with different options. See your shell's documentation for the definitive list of files that need to be altered and whether it is possible to alter the environment for every possible invocation of the shell."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:181
# 9d9ee05b18ab4d9d8ff8a404c1bb35be
msgid "When you first change a shell's initialization file, it will have no affect on your current shell or process since its environment has already been initialized."
msgstr ""

#: ../source/essentials_cookbook_recipes_environment_variables.rst:182
# c467b670752140d9a0b0ad7c9211c6fa
msgid "From a shell, you can use the source command to reload the given initialization file; however, since child processes do not affect their parent's environment, using a script or execute resource to run source from inside a Chef recipe will have no effect on chef-client's environment."
msgstr ""


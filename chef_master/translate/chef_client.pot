# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-17 09:47-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_client.rst:8
# 79e2886ab2794314b73ade0e0c8d0d3f
msgid "|chef client_title|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
#: ../../includes_chef_client/includes_chef_client.rst:5
# 48f63616582146a1a5a4e4e4e619bea6
# 48c3af2d9e3944b890b17afc77df9eaa
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
#: ../../includes_chef_client/includes_chef_client.rst:7
# 1d453bbf39de4188b8e6196743442808
# a0557b7ed4954f2ebd8120f5e1285700
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
#: ../../includes_chef_client/includes_chef_client.rst:8
# 7fffadc0dbe44ea48f6a6d9cbfc7c5da
# 4f4e825b290b4063aeaad20bc6605bd7
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
#: ../../includes_chef_client/includes_chef_client.rst:9
# 085ec50945c24aafa228a5314178862e
# 0727bccdb38f414b85d872da3e580aa0
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
#: ../../includes_chef_client/includes_chef_client.rst:10
# 19158369a1e74e2abd034358506eb0e1
# afd3888dbc6c480fb827d9deadbcc6d9
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
#: ../../includes_chef_client/includes_chef_client.rst:11
# e2c104540d724adf90e3d1302c29b498
# 444ae59f8ddc4e7d8462c149252060db
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
#: ../../includes_chef_client/includes_chef_client.rst:12
# cc2ab8a3fb4c4df8af725ca5cfe3aea3
# b3804c8fd4d2497182288202183218b2
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../source/chef_client.rst:12
# 2b9e8df268dd42a0959de1131213e478
msgid "|daemonize chef_client|"
msgstr ""

#: ../source/chef_client.rst:15
# e35e251ec3c54c72a1b9858048a8b475
msgid "Node Types"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# cf8f83bcd57d4a37bf6c90a29347191e
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_client.rst:19
# fb11e642636a4d3d92757fd3978db23c
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/chef_client.rst:25
#: ../source/chef_client.rst:42
# f1c38069d8004a698605009af5e457bc
# 18e8cce5492848efba0dc0252c3cb3f9
msgid "Feature"
msgstr ""

#: ../source/chef_client.rst:26
#: ../source/chef_client.rst:43
#: ../../includes_chef_client/includes_chef_client_run.rst:17
# bf23a281a5a6463888f0a53b5979ba23
# 69ca3f6e31a54f349e076d4fb3377eab
# d271e18a5a004304a625f1e40f705021
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 5ec6621299c340259b8a02a2d5d0034f
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 669fe4d1a34843dc8e6ea141fcef8a3e
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 7737c1060079423d8e3a422f03aba54c
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# b195dadf98f94dbba0b30762483e897a
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/chef_client.rst:36
# 874ba634ceae4e4084fb402bf8805bea
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# b5b422922ee047708d354f6ece92af46
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 00200ee8da7f44b2accb496a4b365426
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# ddf1b091b7c34461afbfdfc2d5ec97ff
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# ba8deaf7038f420a9354d30d13b88f20
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# c318b8d66c5d46eda349094f87cbf99a
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# da32fcc5c1944c77b4cf9a1fe4152243
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 5b812fa8669448868653af076eb8539a
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# ad1f8289b47d4618b0fd19901fa6abd9
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 313325c2402f4617a2bf1bde833c89d1
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 63e3de5a87c5409abd8a650796336c14
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# c4b6240d119445c28b66b68a1658c624
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/chef_client.rst:50
# d8168c48c9804432b64b9677e734e562
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# 60fe7a80ae5640e6b5b732e088e1246a
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# 148b5830015042f29a5e34159b1aba6e
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 85ed872fef0449b1901f952c8bd5e7ad
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# a017a9cd900e45a08692bb29c4434fa6
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# c632980d843c4526a4815fb437b1837f
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# cf1d6f98a19b4d879bfd30621e929470
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 1dc059477b4d4e09b6ea7a20cabda18f
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 3c6bb1f4208f4352b71e2dcadf6a887f
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# f6381239b9cb455784eb7e99b69f40a5
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# fc7492a61d7a4f2091a18393ea152361
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# a633e17ba3cb4af9a42343abeb2ff2dc
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 94ec1de975fc4d998f44fb45d5d3f2dc
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 71919d571ec8454198a86d649d507ea9
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 48717140e1724e76a5195a92229b6817
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# 5126f7bba7ae416397e901716d253044
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# addf2a9b241e4c4988663406d0187175
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 0605220fca004c74bb16a20d1ecf50f1
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and |ruby| classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 624104873fe44825b724e8ccf66cdb9f
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 0dfc5821d56f4b53b122314da7de30cd
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 13c392c956a94b7a81005d45f6df1dcf
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 60f3bc7ba0df4975b1f8c2e6e7a52ccb
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# ffd9efcde61c4f8e85e7f2e790cac5e7
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# bd6ece61157541d1b87d064362176c7e
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# b2ba5104b24d473997fb2207a52f569d
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/manage.rst:8
# ef143f536cc94585b080405a5d67b470
msgid "|chef manage_title|"
msgstr ""

#: ../../includes_manage/includes_manage.rst:4
# 2faf018b04dc40c3b34592ec880cdf08
msgid "The |chef manage| enables the management of nodes, data bags, roles, environments, and cookbooks by using a web user interface. In addition, access to nodes, data bags, roles, environments, and cookbooks is configurable using role-based access control (RBAC)."
msgstr ""

#: ../../includes_chef/includes_chef_subscriptions.rst:4
# 6eadb60302394693886c9baad5f534b5
msgid "This is a premium feature of |chef|. Access to premium features is free (up to 25 nodes) when the |chef server| is installed on-premises. For higher node counts, access is `available via subscription <https://www.chef.io/chef/#plans-and-pricing>`_. Premium features are installed `from the command line <http://docs.chef.io/ctl_chef_server.html#install>`_."
msgstr ""

#: ../source/manage.rst:15
# 1638b069d3c54cc09e12826a93ce16fa
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 0040de6dc82a4cf0a1b186728b180d47
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/manage.rst:18
# 892c02130e6045b6b00518c5cba4de7e
msgid "The |chef manage| provides ways for users to `delete nodes and reset their private keys <http://docs.chef.io/server_manage_nodes.html#manage>`_, `edit node attributes <http://docs.chef.io/server_manage_nodes.html#node-attributes>`_, `manage the run-lists <http://docs.chef.io/server_manage_nodes.html#run-lists>`_, `configure user and group permissions <http://docs.chef.io/server_manage_nodes.html#permissions>`_, and `manage tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:23
# 2000f9333632430e8193059eb0adb603
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 6bb6df9152a249b9b47c26766c7bfd06
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/manage.rst:26
# f76f693d2e0b4484839ce4a1066b5369
msgid "The syntax for search queries in the |chef manage| is identical to the syntax for search queries used with |knife|, the command line tool used to manage objects on the |chef server|."
msgstr ""

#: ../source/manage.rst:29
# e1961f863cca4fb8a2d7e7c75502ad60
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# cebd318e780644159c4e19ae5d38f469
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# a00b4f24533040d38064ecd6bc0f15da
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/manage.rst:33
# 7b8eb0bcb67e4ca7b53859c8b1822003
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# ae6b05c6800944f380d4ebb14f009250
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/manage.rst:37
# a2f8b016b5d14b90af4a0db8b8ee2dcc
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 7747926be8524cf0ba7e92f60dd87db4
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 59601b687cfa4d49aeab398c79cf4027
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 1b02f008cd2d4475a74bf7fcbf9f4f3a
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 6be0425147c04fff848697f7bf3b92d8
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# f290cd331754484cb13d171c741be042
# 5ec0c787b973441cb82626a2ae02c1c1
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# ad8be5ed7a37409dbe8862c32d20b830
# 73136c18f28f498eab900d50a087bab1
msgid "or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 65128f31c150440bb2a458283a349ef5
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# aba4823b2ea84b0e85e955bf51767ff6
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 89c9f8dbf18d48c9979e78027a67f967
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# da870d46a23c42eab3a025803746eba8
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/manage.rst:41
# 67b3e6f1b3414ec493867e986f8a8b16
msgid "About Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 5bc95ee52195486daf75ce6c903f6d8b
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/manage.rst:45
# f9d7e0a238d949419b5d69fdb58dd24a
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 6c7ac0d13150469da7b783ef801be3fe
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../source/manage.rst:49
# 7064dffe983448ac9c595a8b1dcb8e1d
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 1cc4a38e8b1f44d39a050afb5bd1dd9e
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# e1c04a375ce04d4bb38a589eefe33079
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 4b8449d11e7945d0a3f64ca547d9c797
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../source/manage.rst:53
# fe9aaa8f52e141ac84ec30fad0a61f14
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# c528fdfc179b411bb18223087c471009
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 6d442035b148429187b4b86b90cd9601
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../source/manage.rst:57
# a94ed9f19a2542918c1c16a7076e9ad1
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 7f01653530b549de9702fc9ecba0d7c3
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 2c08840051444607847bdd2ab9009077
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../source/manage.rst:61
# 3d96f024edc44755ad72dad16815ac31
msgid "About Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 0e28b72c041743698dad1e90313117e8
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 825d9c58754442f0ac8098f30bfffc80
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 8527472d3d274edca890cfb7a211abb2
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# e5dbe1a349424ff08f8d0fbd45c3b03c
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# f39ac7e0d3e045568bdf04b2b6894bf8
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 737cbde6fad64010b55158280d54c329
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 93fc3444eb5c4913bc9b33b761205472
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 7b5cc6f6ccab4adcb4f1c476e00621f4
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 56764e9ce7474f349035f7ddfef181dd
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# 3cc0184d76614c20b593eda9b773ba65
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# 867bf47227e244df98fdc5d699427af1
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 158fad8ec2dc43fe818192b3d458e725
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/manage.rst:67
# 2bc7321bccf44e8c8ef45d8108713c2e
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# db7403dec65e4908bd570e457b6291e1
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:11
# 1a5dde64f08c44cd889819d4317148a4
msgid "For example:"
msgstr ""

#: ../source/manage.rst:73
# ab3e706a1dfb48e1a86d70eb0a39170d
msgid "Reports"
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:4
# 2f86d013f97948afb028633b93c8f42c
msgid "Use |reporting| to keep track of what happens during the execution of |chef client| runs across all of the machines that are management by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:6
# e1abf59156644ceabcda677c2ef5210b
msgid "|reporting| data is collected during the |chef client| run and the results are posted to the |chef server| at the end of the |chef client| run at the same time the node object is uploaded to the |chef server|."
msgstr ""

#: ../source/manage.rst:76
# 82f03185e2e24c88880a4115a554dbd6
msgid "The |chef manage| provides ways for users to `configure the timeframe <http://docs.chef.io/server_manage_reports.html#configure-reports>`_ around which a report is built, and then to `review the reports <http://docs.chef.io/server_manage_reports.html#view-reports>`_ that are available for that timeframe."
msgstr ""

#: ../source/manage.rst:81
# 24de4d150783432c8d00ce9e7ecee781
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 184e17c432564b018fa1c9881662ad68
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 054ab8ab480148d58adaca18d6a10e0a
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# df80b99c5ad74b9f978bc76155763250
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 4a39cdd3ec2f417c89f40bd26f051331
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 9858ff2b7f614481ba961d0dd1540a25
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/manage.rst:84
# 2299ad53dfd64e6f80cc786d0769a66c
msgid "The |chef manage| provides ways for users to manage `data bags <http://docs.chef.io/server_manage_data_bags.html>`_, `environments <http://docs.chef.io/server_manage_environments.html>`_, `roles <http://docs.chef.io/server_manage_roles.html>`_, `cookbooks <http://docs.chef.io/server_manage_cookbooks.html>`_, and `clients <http://docs.chef.io/server_manage_clients.html>`_,"
msgstr ""

#: ../source/manage.rst:86
# e5978a9f797e486081d20bc9f176755e
msgid "`managing tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:91
# 2aa579fa663646f48ad140911f6ccf22
msgid "Admin"
msgstr ""

#: ../../includes_manage/includes_manage_admin.rst:4
# ccbc9fd7d4d44b0bba08bd3ebe797ebc
msgid "Organizations, users, and groups can be managed from the |chef manage|, including role-based access control for any user and group to any of the objects saved to the |chef server|."
msgstr ""

#: ../../includes_server_rbac/includes_server_rbac.rst:4
# 08abc4f69b4c4ebeb9cbe1382abf32a6
msgid "The |chef server| uses role-based access control (RBAC) to restrict access to objects---nodes, environments, roles, data bags, cookbooks, and so on. This ensures that only authorized user and/or |chef client| requests to the |chef server| are allowed. Access to objects on the |chef server| is fine-grained, allowing access to be defined by object type, object, group, user, and organization. The |chef server| uses permissions to define how a user may interact with an object, after they have been authorized to do so."
msgstr ""


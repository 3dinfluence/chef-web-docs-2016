# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/manage.rst:7
# e6633b5c558b4dabb69179237b2fcc0f
msgid "|chef manage_title|"
msgstr ""

#: ../../includes_manage/includes_manage.rst:4
# 601af376efcc4f64bcce1a1285d08c34
msgid "The |chef manage| enables the management of nodes, data bags, roles, environments, and cookbooks by using a web user interface. In addition, access to nodes, data bags, roles, environments, and cookbooks is configurable using role-based access control (RBAC)."
msgstr ""

#: ../../includes_chef/includes_chef_subscriptions.rst:4
# 77d7800c672d453688ea07f603068c39
msgid "This is a premium feature of |chef|. Access to premium features is free (up to 25 nodes) when the |chef server| is installed on-premises. For higher node counts, access is `available via subscription <https://www.chef.io/chef/#plans-and-pricing>`_. Premium features are installed `from the command line <http://docs.chef.io/ctl_chef_server.html#install>`_."
msgstr ""

#: ../source/manage.rst:14
# a1137b53aac441dba23cdd60b9233a0a
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# b7ee1fcc974e4c97beb410694d4e0a59
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/manage.rst:17
# 5882e49f59904177b46f6b4b0aadc410
msgid "The |chef manage| provides ways for users to `delete nodes and reset their private keys <http://docs.chef.io/server_manage_nodes.html#manage>`_, `edit node attributes <http://docs.chef.io/server_manage_nodes.html#node-attributes>`_, `manage the run-lists <http://docs.chef.io/server_manage_nodes.html#run-lists>`_, `configure user and group permissions <http://docs.chef.io/server_manage_nodes.html#permissions>`_, and `manage tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:22
# 8f4e6874e9cf4301af51dba97ae61552
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 30356070799548059c371eee66cd09be
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/manage.rst:25
# 6d73ddef3e334698b7ca1b7c6755f65d
msgid "The syntax for search queries in the |chef manage| is identical to the syntax for search queries used with |knife|, the command line tool used to manage objects on the |chef server|."
msgstr ""

#: ../source/manage.rst:28
# 564c0143a58d45379133020deffbbded
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 6941d8924f2e4e9891ab3db2f3b718cd
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 1cc5421db61a43dc9807e99862e62775
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/manage.rst:32
# 18ec98b9e2274661981b5d839ccd5624
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 88780bb29fce43acb3a82f177547dff8
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/manage.rst:36
# 858a6749bd084dfdb49a6f3ae3b76ccd
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 09e40709ad924af9a28898f9f073a08c
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# ee80464aa27e4fa0becf4f6ee09e8be7
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 8e7471bb29f64dd09773d03e448a6b2c
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 92b9bec4d12a4b039a8429131b2e84e1
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 1e0b670a171e4e8fab01ce50113f01fe
# 9b75bf11dcea43f79506187ce85242e2
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# e468b36d60d94559a9febca401eb72b1
# 26b4c87d0b85461aab4a0dc6360cce2e
msgid "or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 4816dcec341f486ba0ae42471c80c2e1
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# a8c7baed55a44a958cd8ac6b857f4899
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# ed941d374d8249e991e93d5da31206f7
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 52f45a80aa324f57b4e19f1861613850
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/manage.rst:40
# 7354c04450b44f848112712acdf02401
msgid "About Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# d0fc729f9c514841b06a3fbebcf417cb
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/manage.rst:44
# 072ef91890c04211b9b33db075575c44
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 54be0cb37c474bf1b33c9f81308710a9
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../source/manage.rst:48
# 88cb25f9dee84a9094aa5077283302fd
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 1c8355dde3334a6a8041edadf8867e49
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 4e200649ffac4f8892bb064abcb7bb82
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 00ac062cf38a4fa385a1e3c1ed6ad8ea
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../source/manage.rst:52
# 83e1b2e78f3b45659f25b773c24b6d56
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 865d9f90e02b40d9941d146f6cc52e04
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# d97f8e6f4ff94fa09b71a1b16be4f73d
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../source/manage.rst:56
# 6f662ad8a28e4deca1733b82038c1eb6
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# ea71fa1050194623bbb802740f1bd7c2
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 0474eccfcea847a381b0ae7c6e745981
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../source/manage.rst:60
# d76cfd5ca8ee4146ad548fd4b9e8ca72
msgid "About Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 78ba6fbe987e4cf595ab7c14c7cd01d1
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 0f31f940ccef40b5a4a1f7d6286e580b
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 3fb6f0e98a0640cc8f9650d9491f0e06
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# ec2904b6813842b096e857b6709dbfa1
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# a702f1ecee2b406b9a2b97d029ffa67e
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# ec4a5061707e43c38c11275aae2fe1d1
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# df5723818ff14a549f54dcb87b588eec
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 6fcd104f7b9c46918482c535c1fac73e
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 7e44648bd6364ff6a09348b41b29dfc9
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# ab1401e0377c4c3dae138f51eba2175f
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# 2a1aafd9eb824f008a43e14551055475
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 75492e997aa040d0a5e394ad0a8b8157
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/manage.rst:66
# c577f03ffd6742988c6e69a95b2d507a
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 149f54a57c144046be69d3e60e265401
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:11
# a83316795a2a45f7abbcca3cea07a072
msgid "For example:"
msgstr ""

#: ../source/manage.rst:72
# f9d0ba38c8c54020b518f9c8319249ed
msgid "Reports"
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:4
# 0eefbd1478374eb39b00ded92e40ae24
msgid "Use |reporting| to keep track of what happens during the execution of |chef client| runs across all of the machines that are management by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:6
# 24c9dd2e5ac04668852ffe2bbfd02f38
msgid "|reporting| data is collected during the |chef client| run and the results are posted to the |chef server| at the end of the |chef client| run at the same time the node object is uploaded to the |chef server|."
msgstr ""

#: ../source/manage.rst:75
# 058099a06c16435a8f17c1c552344616
msgid "The |chef manage| provides ways for users to `configure the timeframe <http://docs.chef.io/server_manage_reports.html#configure-reports>`_ around which a report is built, and then to `review the reports <http://docs.chef.io/server_manage_reports.html#view-reports>`_ that are available for that timeframe."
msgstr ""

#: ../source/manage.rst:80
# 6e432fb72add4c15a54bdf685998046b
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 7c3789f3694043528740ad5444cc5cec
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 20fc2cb71a92470eb754827df4f1a29a
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# 0a1637eafe5c4bcda44d972a123322fd
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 0f6da6cad0d9403ab3fa79677a2f90ae
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 37e98929250f4954908a892f144748d3
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/manage.rst:83
# 986b640a18104c1f819bd5ac71976e27
msgid "The |chef manage| provides ways for users to manage `data bags <http://docs.chef.io/server_manage_data_bags.html>`_, `environments <http://docs.chef.io/server_manage_environments.html>`_, `roles <http://docs.chef.io/server_manage_roles.html>`_, `cookbooks <http://docs.chef.io/server_manage_cookbooks.html>`_, and `clients <http://docs.chef.io/server_manage_clients.html>`_,"
msgstr ""

#: ../source/manage.rst:85
# e6f23043ec0c4ef691c9199f903f780f
msgid "`managing tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:90
# 1fd1c2e5131d41f69c6a993bfab1d86d
msgid "Admin"
msgstr ""

#: ../../includes_manage/includes_manage_admin.rst:4
# bfbe8b6de36e41b6be2ccf6d53279e37
msgid "Organizations, users, and groups can be managed from the |chef manage|, including role-based access control for any user and group to any of the objects saved to the |chef server|."
msgstr ""

#: ../../includes_server_rbac/includes_server_rbac.rst:4
# 20c3086e83be447a88c132c4d8d3fbb6
msgid "The |chef server| uses role-based access control (RBAC) to restrict access to objects---nodes, environments, roles, data bags, cookbooks, and so on. This ensures that only authorized user and/or |chef client| requests to the |chef server| are allowed. Access to objects on the |chef server| is fine-grained, allowing access to be defined by object type, object, group, user, and organization. The |chef server| uses permissions to define how a user may interact with an object, after they have been authorized to do so."
msgstr ""


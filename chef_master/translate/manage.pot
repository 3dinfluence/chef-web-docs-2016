# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-06 21:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/manage.rst:8
# 6e2b0f551a624e37b2779c2d7956ae95
msgid "|chef manage_title|"
msgstr ""

#: ../../includes_manage/includes_manage.rst:4
# 293b8cbe67104c7dbf4ed468057954b8
msgid "The |chef manage| enables the management of nodes, data bags, roles, environments, and cookbooks by using a web user interface. In addition, access to nodes, data bags, roles, environments, and cookbooks is configurable using role-based access control (RBAC)."
msgstr ""

#: ../../includes_chef/includes_chef_subscriptions.rst:4
# 8db873a4dd2149848ec6847fd819b63a
msgid "This is a premium feature of |chef|. Access to premium features is free (up to 25 nodes) when the |chef server| is installed on-premises. For higher node counts, access is `available via subscription <https://www.chef.io/chef/#plans-and-pricing>`_. Premium features are installed `from the command line <http://docs.chef.io/ctl_chef_server.html#install>`_."
msgstr ""

#: ../source/manage.rst:15
# b78f2e716fe94319a7921851e8de5037
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 06cc6949b6e144bca8f8d5a4eb2d2d6d
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/manage.rst:18
# e82a497a83e2478899df7b3a422ca3d6
msgid "The |chef manage| provides ways for users to `delete nodes and reset their private keys <http://docs.chef.io/server_manage_nodes.html#manage>`_, `edit node attributes <http://docs.chef.io/server_manage_nodes.html#node-attributes>`_, `manage the run-lists <http://docs.chef.io/server_manage_nodes.html#run-lists>`_, `configure user and group permissions <http://docs.chef.io/server_manage_nodes.html#permissions>`_, and `manage tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:23
# 4295a7f4baca43bb8b14e3466d008d4f
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 83fdc9542e9448d8bf19ab28b248d7f9
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/manage.rst:26
# 9cabd6f3be464a71b6c3542b3a737ba3
msgid "The syntax for search queries in the |chef manage| is identical to the syntax for search queries used with |knife|, the command line tool used to manage objects on the |chef server|."
msgstr ""

#: ../source/manage.rst:29
# 51b91d5f7f4e466295a6d3fd7d3ce8e0
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# dab304a90c614487a28951f817dfe224
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# f31669f28e8646efbd11ae20842f3c9d
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/manage.rst:33
# 232009a2e80847c7aae2799260bb79cb
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 460a7efe6a014a2ea5649271c273234f
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/manage.rst:37
# c2e4695dc25245b8b0cb41abee691802
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 0be5c533b6a442488a28dcd7e88a273b
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# cbddfa849c6244ed9983a9a3069387f3
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 1a069a2f43354583854d814b98097476
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# e1b420c627c749acb55c0592e569a52d
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# f04a774ecdb64bbcba79118339fe9fa5
# 7dd8b01522fc49e0aed72da911e0fb76
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# 8bed10654ef34fefa44e34d2a4a7442e
# 5504bd3d0313402e9d412d5fbc768b11
msgid "or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 62a094572c0f44b8b0d2f6e34f374609
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# fb458fd00bee470085c7b09632a1a800
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 0d77d3ba95ba436bbe7a7f4ec5c09d9e
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# ed61f432c49f4f08b2206e69254cef83
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/manage.rst:41
# 64f55e741dab44a6b9997eb1009ec5ef
msgid "About Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 4116ab7c3e41414b8ffff65ec7228bbe
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/manage.rst:45
# 3886602da8074306a9eb8b15a8bc13ba
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 44b2b39c10434424b21b815872287ddf
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../source/manage.rst:49
# 5e6483e73cb74e5b94b73466f4371668
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# b82ab2fc917d491eb7b1696fb8ade369
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 84606a9b1d31412bac4b35edc0b68083
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 9a34d02a73b340cea50ba7a4ec02078f
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../source/manage.rst:53
# 0308969b7c204c78ae8f7256c53b9a19
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# b3dd18fd2c6c4e3da72ac0bef5b21e1a
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 3eaa4e70fa0b45c9a82589d094b6ad05
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../source/manage.rst:57
# a39c35d7acd244ad9347ad00536febb4
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# c702f43ed33b4c15bc88c7a7dda7f994
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 8f1cc783b2c849f19502d71581a52504
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../source/manage.rst:61
# e3ab2ffd27324b66bd4fab912cc7efae
msgid "About Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 8e8727d519fd4a36a848f08a4fd64bf3
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 378f7e0404b2496c93d2f71924295f2a
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 1fe20df6c3484f69850e6c9bd6c3f719
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# 90188051a5e94fae85ade4eef2aafe9c
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# ee9d713d9006452eb98797ed7825b888
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 2f5d28b43a2647efae931685979889eb
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# b1814b894c2d4f0994a841ecb92e89c6
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 23e2f57826fd4b42a79cd26c3762ebcb
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 9c8fe911bcc5435ebeac5cd94ccdf36e
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# e1fd86774e9943379abeb2f391637ab6
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# dcbb09b2b7d0435db48818a01b065aa5
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# fd65149a72c84b0aa42ff8ee19ac881a
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/manage.rst:67
# ecdabc3aab944a01bf62d0dc7a285c56
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 30a7788657fb4629ab2c57af3803bef1
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:11
# a199442db0994df8b0972d9603298af0
msgid "For example:"
msgstr ""

#: ../source/manage.rst:73
# a8d6f61f4c5b4720873a921a93a7cd93
msgid "Reports"
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:4
# c592b3a59d574762b706cf8eb240be65
msgid "Use |reporting| to keep track of what happens during the execution of |chef client| runs across all of the machines that are management by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_reporting/includes_reporting.rst:6
# be71d16124624e60bbac56a6859ee5ee
msgid "|reporting| data is collected during the |chef client| run and the results are posted to the |chef server| at the end of the |chef client| run at the same time the node object is uploaded to the |chef server|."
msgstr ""

#: ../source/manage.rst:76
# ef02c26686cb452d80f48176a68cc08c
msgid "The |chef manage| provides ways for users to `configure the timeframe <http://docs.chef.io/server_manage_reports.html#configure-reports>`_ around which a report is built, and then to `review the reports <http://docs.chef.io/server_manage_reports.html#view-reports>`_ that are available for that timeframe."
msgstr ""

#: ../source/manage.rst:81
# f5799bdba8b84b01b25f047f406d82b1
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# 9cbe26a40e75401d8d1767a37d6c47d8
msgid "Policy settings can be used to map business and operational requirements, such as process and workflow, to settings and objects stored on the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:6
# 9ee961168ae349a5b81e2d75e4edcf87
msgid "Roles define server types, such as \"web server\" or \"database server\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:7
# f2ab6b4ea70e448492658df46da2cca7
msgid "Environments define process, such as \"dev\", \"staging\", or \"production\""
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:8
# 27adefb67f204152a37b2c53e238e80e
msgid "Certain types of data---passwords, user account data, and other sensitive items---can be placed in data bags, which are located in a secure sub-area on the |chef server| that can only be accessed by nodes that authenticate to the |chef server| with the correct |ssl| certificates"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:9
# 4c838b013a0941c78a551acee3ac3a6f
msgid "The cookbooks (and cookbook versions) in which organization-specific configuration policies are maintained"
msgstr ""

#: ../source/manage.rst:84
# aa05df16448b44bb915a798e1474979c
msgid "The |chef manage| provides ways for users to manage `data bags <http://docs.chef.io/server_manage_data_bags.html>`_, `environments <http://docs.chef.io/server_manage_environments.html>`_, `roles <http://docs.chef.io/server_manage_roles.html>`_, `cookbooks <http://docs.chef.io/server_manage_cookbooks.html>`_, and `clients <http://docs.chef.io/server_manage_clients.html>`_,"
msgstr ""

#: ../source/manage.rst:86
# 90ea044d91ea44229f4143d2cf6f22a4
msgid "`managing tags <http://docs.chef.io/server_manage_nodes.html#manage-tags>`_."
msgstr ""

#: ../source/manage.rst:91
# 20c4cd89d14140ab983f17fcf1f99860
msgid "Admin"
msgstr ""

#: ../../includes_manage/includes_manage_admin.rst:4
# 0b5c6b3427f048e897079d547e78dabd
msgid "Organizations, users, and groups can be managed from the |chef manage|, including role-based access control for any user and group to any of the objects saved to the |chef server|."
msgstr ""

#: ../../includes_server_rbac/includes_server_rbac.rst:4
# a542adea9bb34d2794fd23c4b18ba5a1
msgid "The |chef server| uses role-based access control (RBAC) to restrict access to objects---nodes, environments, roles, data bags, cookbooks, and so on. This ensures that only authorized user and/or |chef client| requests to the |chef server| are allowed. Access to objects on the |chef server| is fine-grained, allowing access to be defined by object type, object, group, user, and organization. The |chef server| uses permissions to define how a user may interact with an object, after they have been authorized to do so."
msgstr ""


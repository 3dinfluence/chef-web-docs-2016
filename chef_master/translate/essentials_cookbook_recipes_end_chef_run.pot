# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-28 16:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:34
# 025804baa84a4c268501d3c103deb9f1
msgid "Ending a |chef| Run"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:36
# 4dc57e3535104fa19dfe8e245bc7b1f1
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:38
# 2a1b7e402ebc4af583b89bef2fd7302a
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:39
# 6f12f3dd21c545198aeba734f0a9eed7
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:40
# 6cb4c2c0979240eb9dd1f5ebad76c4d2
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:41
# 5eaab937c40d43aa81a466a902cc3859
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:42
# 139aec234a8a476fb96454185791ede8
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:45
# 609493ba277a4ae6b240a1cc6b376ff1
msgid "Examples"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:46
# 19dc9c23b9634dfe81db727beeaad460
msgid "The following examples show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:48
# 2452031d01c54e8a83ed278668ba20d8
msgid "**Using the raise keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 9de2993f867a4056b0da52f05d5a3e02
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 630650ed1e944922983521055a8799a9
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# 9a65f41cc9c049b890fe331e3ae83870
msgid "Place the ``raise`` keyword in a |resource ruby block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# 8f2e4ea4d6b94c9d970d4dfe28ac60cd
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# 50a00e4003394ad0a4cc1e40b6ee3d89
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:52
# aef99f38ddd14a62821cc0e6994605d3
msgid "**Using the return keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# 8dd801aa81b441a6907e3c3f58459784
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# 057c9a469a7e48fb922cc21fb2a280a8
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:56
# d1181ae62ad44871a3f9cb4b45f53d21
msgid "**Using a rescue block**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# e02cabd716624df499618fc76fe69db2
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# 3c5f5cbd85e24cd7865a7a198d7a9ebe
msgid "For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# 69faf21a28b34ce78459fb34b348ec4e
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:60
# fb4e66b41f8f477488c60a246279070d
msgid "**Sending a fatal message to a log file**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# bbd337baf5884b8f9a8a5aa080da88be
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# 067006219e3e4ce7b541c3debe4baf4c
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-27 17:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:34
# 64b43b707e3b4093930a38a2c9a5cacb
msgid "Ending a |chef| Run"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:36
# 0f4a4bce58c9404eb46a751d3d52546a
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:38
# e2f8a580f73145a882b476fbf28e3e6e
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:39
# 1764aa84b7bb49eb937adc4c7cd22010
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:40
# 51ba2dade56b42429b597a0b9877d4ef
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:41
# a85796c2c5d948c5b66cb2f55698baf1
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:42
# a332628719c64485a6c1bf9f7f62ae99
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:45
# 0cf51062876e489c813a0fae96532caa
msgid "Examples"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:46
# 3af48255599e448b9afd167c9970b25f
msgid "The following examples show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:48
# b5319d3a7d954c19aae789f84aa6a71c
msgid "**Using the raise keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# f227f3b0bd114101825a89ed62a9a034
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 5e25dd822f59418f85238150cef3375b
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# e732cb2c38c24e4bb3576d6dc9ff3262
msgid "Place the ``raise`` keyword in a |resource ruby block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# fa08bf97b2fe45759121f4f38bd260dd
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# 88fcfddba1804f17b772c9666876cd25
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:52
# 05a529c2893d46f08bab8b07c2c1fd94
msgid "**Using the return keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# 903525eacd5a494786f3733c407d35dc
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# 1017decb1bbf41b4932ee2f632306cdc
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:56
# f2d351fe409849bda46a4b7e667aa542
msgid "**Using a rescue block**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 0d79e661fdf74129bc4f16b724a9040b
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# 331ffad9cdaf4f3097e1de55b5836c74
msgid "For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# ea2186e3751a4e868c15145be78593a3
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:60
# cac68ba1089349c18502cb297b0335ab
msgid "**Sending a fatal message to a log file**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# 70513da350fa43bd82cf8b54edd39da8
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# 740a67f2a66d419dadc5a88fd6ef010d
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""


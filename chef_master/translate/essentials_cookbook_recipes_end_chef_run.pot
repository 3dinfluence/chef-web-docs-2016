# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-21 17:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:34
# 03e5d5ca9088441cb95f22b80d4dd050
msgid "Ending a |chef| Run"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:36
# 2a9a3179926847e286df14ad709d3df4
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:38
# 1d45dc98bb1846659d5ab41f4f12bcf3
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:39
# 1b6cc207a03345e4a2912425db679113
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:40
# 957690f379394e98ad25556f0fe7e746
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:41
# ef01580cb22c407dad27173da8052fce
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:42
# 6a9895df1bcc4f28a8b618261f74afff
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:45
# 20ec779ce89f4f60b5a3a71c66ef056e
msgid "Examples"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:46
# 32772d92452740338e80d5fb1f6c1b70
msgid "The following examples show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:48
# 23d2daa0f4914dc18d7d30b97d123f91
msgid "**Using the raise keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 1376e568ffb4463991ecc6d82c745851
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 951eb21d87ae4450b35afb7982629b85
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# e92cb89835fe42e080dfe5fe1532472f
msgid "Place the ``raise`` keyword in a |resource ruby block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# 64a1b012b5dd4859b445694dc12a6b07
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# 6f77b1454b874ef69fb0f0f2c981f896
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:52
# 05745864ce6c4c57b6d0743f341ade1e
msgid "**Using the return keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# ec1ed8f11ef643b6975e9c83a466b73a
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# e90c82534c1542ddbeca2a31a20de403
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:56
# 7f5962e46db74acda290351f66254aa3
msgid "**Using a rescue block**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 169cdf6b4e4a4a37821c0746f8d863f6
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# 397417004ddd46b4a37f45649adf3261
msgid "For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# d3be8e7689b5406f88c0dac2c3f4ee65
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:60
# 5f097b35a49a4a798e27471f619ee0e3
msgid "**Sending a fatal message to a log file**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# 1c071caf402e4ce39dadd6d01bfcfad2
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# aa1d2b05d9d5444d8966a5955f626f99
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""


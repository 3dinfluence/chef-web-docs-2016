# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 21:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_search.rst:8
# ba2df9cb331549c48974a465d05c9a63
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# e2d394122f5c4d5ea43407a32832c03c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/chef_search.rst:12
# 93a4834b845e4f6d83c5d1815b868e79
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/chef_search.rst:15
# 1ad99f9911f64011bccd95859b47e72a
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 3e3d5d1440664687a7ba3b9038cf6e65
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# b58acbd175444fce83aa21c68f2bbcee
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:11
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:22
# 1761e8b16b6a41eca4da776c552de824
# 97a461184e014449b61863108cb5bd89
# deb309c9e26b44eeb5698273c55f3a80
# ccdee2a674c94307ba9e27fbe28db142
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# a0731fde3a57444cbea34dfe96e149c4
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# d26af952ac0147cc986e303dbb9132f2
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# e174569edfaa4da59a46d90539e685f2
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 8cb4685c53114b99b7770bc9e044430a
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 6d8cdcd5ab10483b9ac2f2b320560183
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 3db38d808d874798b70d9ffc5d2809f8
msgid "|search index_environment|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# ae18851286734ebaa4a16fa460d686d0
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# afd3ffd2c4d149d4967c5915e74928fd
msgid "|search index_node|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 11af82d937f04da6bd69ae5a0493d927
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# c075b5d927d5421e980e38920076c418
msgid "|search index_role|"
msgstr ""

#: ../source/chef_search.rst:19
# 2a8de4f224e848218101f8b00fb6eb70
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 63dbddf008ad4e3dbeb1be377f02bdd1
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/chef_search.rst:22
# 22c6b4696d6542caa1c22f65a17f6a1c
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# adf27f1e14aa4dd7b200d20dbc0eb5d6
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
# 7da141ca84f645a88c58fc3ee17b420b
# 6b3a8c426bbb4ff08330135783397fa5
# abc0877b90134629b7a49d6c25574b20
# 0dd4c6233d164211aaf7cbf4f57d925b
# c337182e563142a5a27076672abe9ce3
# 8292eefe55af4bbe863a6951dda68277
msgid "to return something like:"
msgstr ""

#: ../source/chef_search.rst:26
# 2d61fa0d414644deaef3af5bc15f6343
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# f632b173a1154edc835d437bb43167b1
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/chef_search.rst:30
# a40957efc258412ca4fd482690764442
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# 625fa8a37165416aaf42d1577c38c24b
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:9
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
# 21534529e52e4b3f86033c84cd107d3a
# b30797916db2443ea4395bebf9949f5e
# 4fb7afaf0ab142229e97d333103b5b17
# 5b2137289c8f4b42bb1abe282bab5fd4
# 0de17a45f04842948a96b5528f58c024
# 2c40d41f482e4c6699eb63f03f51fcc2
msgid "or:"
msgstr ""

#: ../source/chef_search.rst:34
# 9f7c9dd4ec774d17b03deb039455bf0d
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# 06da84217fd64380872d328c32c5e594
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/chef_search.rst:38
# 8721224443c54076ba0baef7ead6f81e
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 765e216a0d834b5fb2055d8fec6aa2e7
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/chef_search.rst:42
# d7940513bb9f4f46b5f1fcdaa194570a
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# e9ec1a47f74546ccaf0131a8a943c78f
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/chef_search.rst:46
# 24b8e5104d924088932b1ec3fc3cdd5c
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 6eed01077f2c4e40a7ea07d933108109
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/chef_search.rst:50
# 6017f7e5e373459082af9d03ec1df95a
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 276f95e431e846da848488b3b87d3c45
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/chef_search.rst:54
# a17271d5074946dcb26f8d8b699fcbec
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 276ba80b2dd2473ca638a99c00fabbe2
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/chef_search.rst:58
# 0cbe6cfba694437b963c80a6d5774e04
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 1c05177573b446069797d8c0fcad5638
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 2d8527921ea540bda93bc32a9653a66f
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/chef_search.rst:63
# 9ba6033d74ed4a7f90c1c00e6c3779f2
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# bb57e640426246abb1b4b1a07563952b
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 6ee2bf4576e64e4bb07fd1581d15b1b3
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/chef_search.rst:66
# f506a5ea153943e5bfc1b60871eb6097
msgid "Search queries may not contain newlines."
msgstr ""

#: ../source/chef_search.rst:69
# 511a9d73116b4a6caa2eb76c5a3545b5
msgid "Filter Search Results"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:4
# 687c2b9ffc164499b60d5aefff7574f2
msgid "Use ``:filter_result`` as part of a search query against the |chef server| to return data in the form of the specified |ruby hash|."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:6
# 237370f3f5d048889f985251a3adf4c4
msgid "The syntax for the ``search`` method that uses ``:filter_result`` is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:21
# b5c335839d7b42348c54220be61139ad
msgid "where:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:23
# d5360f9fcd0b4be8b13c58568232c783
msgid "``:index`` is of name of the index on the |chef server| against which the search query will run: ``:client``, ``:data_bag_name``, ``:environment``, ``:node``, and ``:role``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:24
# c1782933864544b087dd1746a7a2bedc
msgid "``\"query\"`` is a valid search query against an object on the |chef server|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:25
# 2ca7fd7bd8074f219880dda2979db9b3
msgid "``:filter_result`` defines a |ruby hash| of values to be returned"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:27
#: ../../includes_search/includes_search_special_characters.rst:11
# 13f083c7bd5b41c59d51dac383d97c71
# 6c34d2c3f31048659cd8fafb85a2e7c3
msgid "For example:"
msgstr ""

#: ../source/chef_search.rst:73
# 993d0457e0a24702b0c182f73f952664
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 90b2cb2c93684aedb39140d99cef770c
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/chef_search.rst:77
# e910905cf7424734a97e7c78d5cd303e
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 972328b88040444b907d3621a3f51db9
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# ddf78f5c9eb445fdb1c0a9e1679810ea
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# ea9f3cacdc1b4690a0d02ec9ae32990c
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# a1e6c397619844a68161abc8d979d1ac
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 4a9fa5e3967a405686174dc24bd05738
# e5057902b6f54ff9b31ee40da8b63279
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 9f08bdbaf7df4c709cfac6f4c8171ff0
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 6bd77d24e34c47f094e577d4d58061eb
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# a5359f9ff5e344249c2304e4228d42f6
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# e3de090768e94f99981d5ef284fa5954
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/chef_search.rst:81
# 091abb101a9d4659a1b548347a97f81e
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# 88f52f0207394c8fbc06b7a37061e1ec
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# 18e3a4ad604240868eae684b93d31625
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# 8f4c57a34c2d47c380bb5ad7944abb50
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# 3240e4813f754d7daf9bf2447b8ba3c5
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 4bf6be1673214db5ae16d559e2bdc957
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# 956ddf57b97949278a41f328fbf4f1cb
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 2db9590a8f304f70aac5f3379bbf11e2
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# c3c4c0145fce4473ab59dcbe827fb767
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/chef_search.rst:93
# 6795d37aa0214fe6a241eec009d722e3
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 7c69067633f14941ac14064fa7276c63
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/chef_search.rst:97
# e3c588a9118846c89187b8b577e92b50
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 112d6c3d26df48abba0d0de6021017ba
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# 54c27cb503764cbba0b907744b423320
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# 7fe37ed46ff44c9b9da42fb93f9debe0
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# fdd0b36a35af4749962adbcc6399841e
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# 7ebeb8738da84145bc9eb14e99a0fb05
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/chef_search.rst:105
# f676ce967be647cda23740bc031a4c34
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 929235ae2196446189b91842d8bae430
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# bbf84d4c3dcf4f7caacfc9cbfcf4b670
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# e5e0fed93e454174a5945a6d5e939a75
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# e5047493a273445b8cd94125dc02a1cb
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# d246d2d32a48443eb26cf4796b8ff55c
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 38c35a708ac7421e84f764f7ad6b57ff
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 296b51456ce940efbd58fac67477f2fa
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/chef_search.rst:113
# 23b20d666e5743cc834fdbe753d3400c
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 1866231be6ec43e69c31b34a8b2d3f07
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 45f0754628434a15a0e9df538f3ebbf0
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# 1d647b4ab01244a6acd23efcc8043e0f
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# 1698dd79ddf0464d8c42c4ce48518e14
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# 6bdca0727d6c4f96b86fdccd9f930d02
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# 9443dd9be9244ba5980c0eb9c7f8544b
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 5ae6645fae0540ae88e8cf5d41ce75b1
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 72d364323cd64ae89f367051e1f0298f
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/chef_search.rst:121
# bcfb41d1f36f433c98a0610a1b2a5308
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 0b6a176cab5b41c4a3b80fa88ea2cdf4
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 79c0fc5974f54b63826b601473196962
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# 9ee6eeb913864e768d9522d614b8b539
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# a950815cfa9448aaa4fa6d00fec66b7d
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/chef_search.rst:127
# eae604605f4749ba8a4ab6cece31015a
msgid "Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 4f7e57173164459ca8c2170a225000a6
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 0bf187a3956e49d68852882629cd06e0
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# d8810545ade14305b9cab055c7034230
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 33261979dba64af382461048fd8b4655
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# df2f59352366413588cb027ab0b8ee45
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# ade6ad1c94f2465e8fb484d381b668f1
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# f12aeecff8fc499c96a57cfb6275731b
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 2a842050335149ce95c52910964bef7e
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# 87fd7896d46540dfb9a093babf695583
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# a3ec0aa9c23f4142a97a804fccc8fc88
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# e7a09c85fe2b49d4b153a810e158fca2
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/chef_search.rst:133
# 5382a4e4b02a45c98639f2f631a87950
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# 0756a8405e7441de8088f454d36bf7fb
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# c11131156f06476094cdf45fd06c8dff
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/chef_search.rst:141
# 47f8522c6efc4400ad2b879581b00ce3
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# 5ce4357be75442c392b86c914c4eecb0
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:145
# 22ef6de956df41e2b7ccf265210ab129
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# a731cd7a636140299050f5c8bca5b1c7
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:149
# 4e1e030edac148f49bca44fded19f198
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 011b791a8ed443c3a4c2038d86712616
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../source/chef_search.rst:153
# bd9be473fe1e424f9f126a209993c8b2
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# c136ec2bba494569a7df61780eb93712
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../source/chef_search.rst:157
# fb4114eb4de34abbb30fd064ac071b41
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# 96f561685ee04ccaab073c88452358ca
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 90570a5586524c83b5491277bbf21d08
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 99070435efa649dca8c2a0f52223f538
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 5a6e0e5765c94ef08877f5d26e1075b3
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 1267b50d5a134110be215a12b5080f93
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 69b23346081448798efbea234dc27cfe
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 83d473b4efed4c729ea9537a53488286
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# ab3b5a27b83e4041bfd17690e0e8180e
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# deeeaebf92ef439ea9e09973402a789d
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:3
# 6f618f53d9974de484726940e2e91aa7
msgid "To search a top-level run list for a role named ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:9
#: ../../step_search/step_search_target_role_expanded.rst:9
# 041272a1fa12450297c6dae9750aa66c
# 18a29f495a4542beb8887e40215d22f9
msgid "and from within a recipe:"
msgstr ""

#: ../../step_search/step_search_target_role_expanded.rst:3
# 45f97b5a06664a4286035827218ee85b
msgid "To search an expanded run list for all nodes with the role ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../source/chef_search.rst:165
# afd59d0df16e4b509c85c0396ad726e5
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:5
# 5e595d66bca944b48c2ba35399a532da
msgid "A node can be searched from a recipe by using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:11
# ed609b4df3ac412f8958e1e47bcc61df
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:13
# 262f0e938d0c4450934d73a140e9b8dd
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:15
# 4a1d6550c93f49a69a026572d26970d6
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:21
# 2b94f21866ca4021a8fc43b70e846104
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 6ac592d9da4f41dc8f6ee09b4da3a3d9
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:24
# e1b3cd25708f4c7f87576ba339c4797b
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# ad63e6c3512c4c2c8215da99e7bb9649
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:36
# 98cf3369ead04a0a84aac8dab35e15f8
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 0a681f1958f94f20b53fd9c5774e852f
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:43
# 3d271e0b67054a8e9d7b3249e8611e30
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:45
# 99e9c57ce4ed4aed93386ab8c03b21d2
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:"
msgstr ""

#: ../source/chef_search.rst:169
# ee680c942425449b802414d56df0d5d7
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# d0e44ecfc06e4a6fbf974df05d2c22d1
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 36e7d44d6dcf4073b86d60426169c52c
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# ba5d4a81d7f1469595283af755c45203
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 4d099003d0274e98a240b5496bd73cc5
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# bf34061558d84027be88c9f0c37450e1
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/chef_search.rst:175
# 036e9ab98a0849e19edfa12501a557c7
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 2297af3954d74395a685c48d17e95f43
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 8bb892ee65604a979dcd9a5413e20904
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# f97e34d06fc3414db63855a16f1d5db8
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/chef_search.rst:181
# aace8d1bf4ee4fb99d3574abe312eb4b
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# d43c03fad5384bbca2a32cec6ddbcc78
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 17494d3383c44b27be8aef50821472a6
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 2d561d13ddc645fc934b2684c1d3bdad
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 6a15d606594c4f718495af27f9f0538c
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# ca2c245df81946a79171a31d8128f764
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 609953a3effa480d8d2afd6bb9bb2e44
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# cd52a3080cfe47eab3ad824355554a0a
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 3e3c593916934c1980ac21a6d8b5230d
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 512d7e38a63b422b921ab8a10f265080
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 593bbbab01d346388c3e86b62d6e2aae
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


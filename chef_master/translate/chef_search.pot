# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-06 21:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_search.rst:8
# 6f119cd7ed0c49288d8b6eb81f80070d
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 8be0677c59d143b19cd8756b189345b7
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/chef_search.rst:12
# 0fb905a5388746f7ae3c11403619cb70
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/chef_search.rst:15
# 2db52a5a884a488ba031dcd055639d0a
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# ba266913cf484f10bb506395fb7d10d9
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 4db6caef8c824ba1b74bf4fdaa9855f0
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:11
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:22
# 602b12622f3940e7a5c85893faabcd97
# a72f5de3fc0640ccb0ddb786e25f6b5b
# 3f466a4ca14b4381aff5ceb0d842dad4
# 23ef8be48fdd4d0585265ae270f6b5c9
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# f005c67d9c9f4d399ee296524f77d032
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# bdd61ceb7917440abe01dae8f52dfd63
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# c2e9ba986e974c61b2d3ea9b2600a6f2
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 0eeb75695c0946a399cdba953aebf7b4
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 6253027a67fc4c37b4ceb5c3d878f66d
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 028c8d7c3f2a4d85bfc702c63cd7fcfc
msgid "|search index_environment|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 748cba186ac84ac0a533f0fe2d06c030
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# f2659b88692d46a08433964edc471c63
msgid "|search index_node|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 8686fe76c6064d76b37c65615d77638b
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# bfd83af948fe42448bb6de59e7f55976
msgid "|search index_role|"
msgstr ""

#: ../source/chef_search.rst:19
# cf1f6db4d8044f69b3b78dd70d52855a
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# ad0fa2fc302b49c6bfbc6283a35a8025
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/chef_search.rst:22
# 068f520f12e148cbb257601637496df9
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 8f2b67c744454ca9998d1c8d832a35a2
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
# 5a7db9319e2f4175b46450943dc2f84b
# 6ea12514437645c2b501e5339a92fdce
# 1322b3e2e9474efb901f533207d438fe
# b59161032f65427483739a14744fec96
# e08230e68f344265b35c7bf5a0784801
# 38ba9d786d884fbba255b6b6d76eb47c
msgid "to return something like:"
msgstr ""

#: ../source/chef_search.rst:26
# fd64f48d94bf4fe498844f0d05e0edcb
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 4a54efdf71f34195ae09e3e691d7388b
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/chef_search.rst:30
# 6eb398b1f4664da5b14da1d4fae0584a
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# b43f5a19a851487b97326bc91c045214
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:9
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
# 30de42c571e04896ad0dec085dfbba86
# 15839137f32d4adbb6ef35d7c39bfce8
# 7a4a51d211e64522944a678c07fb4e21
# 5449432d1fa742f2b298fcb3cbd9940d
# 6a75a449a7ed4413a6c14cae4c31d21b
# a07c7f552d2b4448a9c752f8d5ba6935
msgid "or:"
msgstr ""

#: ../source/chef_search.rst:34
# 6ccbbdca7f1546ad815be70e66e264ac
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# e6ce4760a3a344719b7f1335d4e5841e
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/chef_search.rst:38
# a17f08d9457249d8b62f0d516d2b770b
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 730ce257a8484b8bbd6bf1af946f32fb
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/chef_search.rst:42
# 6fb9a9f5d0df4d8da69055ef0601701c
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 2abeb483a7ed4a1eb50513c24a581243
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/chef_search.rst:46
# ca2d87a8ea4549ac8028a1e34ef8606b
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 47ed8cb4ff20483c98c0f490e56bb45a
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/chef_search.rst:50
# a04dd34f9e924456acee04bd9a4f3353
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 1e769f64b9c24b088fc6cfd5abe0769e
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/chef_search.rst:54
# 3fee4b8d794e4ff49318858163077c69
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# d4287da38bf846eebea1f4446a72e563
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/chef_search.rst:58
# d8708dd49a2547b3852ec898b42aece9
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# fff47fc21ef54ba480f50f5be8ed88ad
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 6fe18da160754886a9c8f7ea5e867377
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/chef_search.rst:63
# 1fe0609670b84ea09c3f1ad10a289a7d
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# f465204d55de4cdebbcd8ca0dd91d68c
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 0b7d7ea267fd4f48836ac4420a20cc5f
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/chef_search.rst:66
# da0bd47db3a2488faeea6007d02b98bd
msgid "Search queries may not contain newlines."
msgstr ""

#: ../source/chef_search.rst:69
# 9300ed029a6247dc9554c750194044d0
msgid "Filter Search Results"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:4
# 1acca396be1b466e8da9495124edddb6
msgid "Use ``:filter_result`` as part of a search query against the |chef server| to return data in the form of the specified |ruby hash|."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:6
# 4b46e7e0e265444abae21ddcc53e0546
msgid "The syntax for the ``search`` method that uses ``:filter_result`` is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:21
# dafc39d2cd2c432abca0dbfeab47f140
msgid "where:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:23
# 2a9fa9ae9dd846b58386ac612be48ae7
msgid "``:index`` is of name of the index on the |chef server| against which the search query will run: ``:client``, ``:data_bag_name``, ``:environment``, ``:node``, and ``:role``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:24
# 56e86d70a4c44884915680ce467119d8
msgid "``\"query\"`` is a valid search query against an object on the |chef server|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:25
# 328225ac9d68477db9b34a90b4238b34
msgid "``:filter_result`` defines a |ruby hash| of values to be returned"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:27
#: ../../includes_search/includes_search_special_characters.rst:11
# 29b53ecde34044b3a02b61dc5bc76684
# 07df4edaa82043578368e6201b59aa31
msgid "For example:"
msgstr ""

#: ../source/chef_search.rst:73
# 246985d7042d437db5b50f82314ea4b9
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# a445e244ebbe475ba27f00681a262fef
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/chef_search.rst:77
# 6035878b08f24025b3b945b456bf185e
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 2b54bd20e5864b07aa97b981ebab1d0d
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 19c612c0d4cb4500a09c2722e203d376
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# e7c2974c6ef944b882b4287a2905eac5
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# d4f5fd916073489a8b8a95d9b5458bac
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 168320146f764d89a4c4db3371e94d18
# a41bf292a1e2414fbccb245949f8e4e5
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 744c4aa289e44ac9b1f5f805ac9a7d82
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# d97d7a6a523b481ca0ab91a921b52c21
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 7a4e50e693434c71aaa1b3357fa1522a
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 1e2231222e8c43efbba5dfe788fccd70
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/chef_search.rst:81
# be28a8d67c9142c0aba3f9891ee8a5b0
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# f87d4039f3214da884eea54a2a2da43a
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# ba5ba532b86d4f1aa38a27e6cde4dc29
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# 73688bbbd5a8461abb523baff5cd0846
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# 4b1b6459ebbe4bf7bb9204871ea02c89
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 80c6a8803aa54f319bd693baece45acf
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# 5486dadc493c4af786d554e3bbceea32
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 8949a4ba5a714a05b8aba7f221337575
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# 793e30ff2c4a46758f16433c41be09e3
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/chef_search.rst:93
# 433f2a04442f43d5aaade4c11eb9d237
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 3dd665f5d1f94434a80b6e30765c3d00
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/chef_search.rst:97
# e7a38d65e8c24e3f8cb483f455451b9f
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 11abb18687ac4d1aba1ea8dc9418d260
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# cd5c7fb72e844d918b8fea8ea41e4443
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# a515eca36549458188997cea00c6072d
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 5fef71801f40470e8b93ff4766fbd023
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# 308c4e1f05ce48e3ba1203f501970e22
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/chef_search.rst:105
# 971759c6babd49a0be3f977a569f1381
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 4c61feb30fc048f690ac79e8f1e5bfcd
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# b5cae5baa6cb457ebce89a736b7de6c0
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# c2c3208dbfe64bfc85845db8b8f6d281
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# e2cf25382384420399bef12e77798d63
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# bbdbb681f9584586aa5f74b36bb5f46b
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# db5da3dce6504facbdddbd034ed57aff
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# ec3178bb6bae4557823fbe595e079757
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/chef_search.rst:113
# 60788775a5db4a74805c1f1153d08466
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 4f8152c77ed341ae9d0206a455e214f7
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 69dd3599352948baa0bfaa31b1925427
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# 4b59978d0e2e4b5e8b24df02079664d3
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# caee379c75924d309ef5f31a441e7c43
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# 72e38a657ea14f459c9cc366ed42f9cd
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# cb4952657fa948a1856c4cc2b1eb9f16
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 5ff99588f4e44746bcb82afa0e800a86
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 0371faf75d104c7086c89a2a1d3fc094
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/chef_search.rst:121
# 783d07ead35a41d5afb70b3b69e9dd5b
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 059917b0be4b4990979721cf30da1b35
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 6a30c2fac0c14585a6bac325482f8c69
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# 4c606c2742ba4d87b270f832e2b1815a
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# 3ce21fe0a3194b3b953910e2ab229653
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/chef_search.rst:127
# 1ee453bb3bd543a3ad9279d2d5962e47
msgid "Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 53c9b51cb02e447a8b96b38b0271842f
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# c912f5afadf8466da9cc908d71ccd8e5
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# 9cd1b2ac81144c09bad0ffc5cff72873
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# ed4793319281426aab73d812984d512e
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# eca2c2230a5a45fb84b97f2233da0cc3
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 90f8f916b986408ea361fc2912de9372
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 8a8dfe01966e4ed988478234b94fbc53
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# fb07fc19ba404a879b6006c4b636f99e
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# e815eafdf30349328494eb473769de16
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# 85964b7c698c4b37b2ad3f2b94226276
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 8da0e1f4c0f446b6aed01bd283c37a4f
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/chef_search.rst:133
# 6a39ecf9233a4cbea8a766ff6bf35b84
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# e2d9648f0a8941808b58b4de506563af
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# ff71b83452914fe4aec999a6eed5d4b4
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/chef_search.rst:141
# 950672dd86ff406bb7bb89018a3c2c7e
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# 71153e363f994aae9c22fb4ba66ebf46
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:145
# a773ad030b7448b399b32365f65770e6
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# 5aa084c7e1c941df89e45331a6ec2456
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:149
# 13090795046a474586c21ef83b15fb88
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 029b1b74a32048138aa17a5109c2a438
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../source/chef_search.rst:153
# 170a7fa4838e4bbea9e94d14fc733401
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 3617e8d04c924fb3b38acf34e152a6cd
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../source/chef_search.rst:157
# ec61654152e94dcaafd79cd629da795b
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# 68458bc86f9e418abe289440fdea04d4
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# f37b0214b76441408fa8dda78d00cfbf
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 478c29c3a3ae41f5a078d78440fd6eda
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 6dac4d60eb634ea9b1c22e15a424b476
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 55b951130f214bf09da431fa4266565e
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 8b3793dda2da472eb41058d8c67fc977
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 73e0e7bbd901461d8a2b2ac830d2ae46
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# d841cf1cee7540479ea47b076b6275e4
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 5ac3caa127bf4bd792c9bf27ba154202
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:3
# 51da30514b704d63b001647b52453b42
msgid "To search a top-level run list for a role named ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:9
#: ../../step_search/step_search_target_role_expanded.rst:9
# bd73b8fe75ae4893ad3589ec39693d31
# 21642577d22d4253b40c784e73f7b825
msgid "and from within a recipe:"
msgstr ""

#: ../../step_search/step_search_target_role_expanded.rst:3
# a6e4eaf04c264b5592df81d3e879b04a
msgid "To search an expanded run list for all nodes with the role ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../source/chef_search.rst:165
# ef86d5636bb74cd38eee7ccd022d1b58
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:5
# 96179be797d547549abf38c26d6f4e00
msgid "A node can be searched from a recipe by using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:11
# 7e8871bc6fc24d6f89ce1d486365aa6a
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:13
# eefd4985713f4dcaa88bb75976156bcc
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:15
# 6cc25b77c1964abd8e327a13b2875e84
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:21
# 6640b765a6974b41a035bf4cc5ee7ecf
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 7062b9bbe3ed4c40a9dc0ee792eaf532
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:24
# cf144e5399d049e587926abdad978aaa
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# eb0d01fd0bbd425789ca2c5e98beef68
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:36
# 194aae81907647499a133390a99d35ca
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 7eb9f079849d4b0f9d5787724c43d0c9
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:43
# 30c6de2d13fa4dbab0b5cd1f36bb11a2
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:45
# 0218f4c78a0f410bbb75b2879ee1e208
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:"
msgstr ""

#: ../source/chef_search.rst:169
# f3650ba8d6a048a4a1f7e48f0f7a06ae
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 864d1b5ec32744da84374723c810dc0b
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 345d5384db224f79a57c499cf1a7572b
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 2c9c10aedf1a4ab389f998e6061cc5dd
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# ed1c1436782940c0bace0f4b1d4db0f9
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# e4010c7078d44414be57cc35f501da12
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/chef_search.rst:175
# baa6ca8273334d71ab1eb153f7a4c323
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 8a5b7eef1ffc46f28a9f652edcc27c04
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# ecb5f06f3c2c43eda3fc32c7aeaac256
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 6b6b2885ce3143a4ad14f1ff09bf1468
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/chef_search.rst:181
# aa553ab8edb44058877d55b84951b04b
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 72ce5bebc89c41eb8bd57c14a55faa65
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# c5940961f59f48cf844d9cbe3beeb2f3
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# f067c7ec27ff4e31ad5e7884ec4bc3b7
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 01913b9d43cc4cceb0d17862fa9202b8
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 98c1e3c09f62466f9d1c016d54962102
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 1909e004d0654180ad8220a871c0d00a
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# ba11b475867d4b51ae0976b33af951b4
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# d83592784b254f08894f1985f36391e1
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 8c07dd3edbda4c0194f26ba3e50db86a
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 6dbc38cd26a244e2b5f586fb027f886f
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


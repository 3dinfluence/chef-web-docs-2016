# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_search.rst:8
# 0925005fe6f04d4ab9f7ba648244d0ba
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# db804cad465442ce98f2563209715dcb
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/chef_search.rst:12
# b383da7e5a034b3dabee3118b15c6344
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/chef_search.rst:15
# fa65ff9789604b4bb408de7f9a278d6a
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 16306d40fa39428597fbf00c5938545c
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 75a55d6b8b5f4db4be4bb9e7c46ca665
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:11
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:22
# 933603ecf952442f8f85c3ad8a12e870
# bfacf3f9f6f34d02a8c362e35534fb60
# 1d731c4e007c467ca5a7399184fc5d47
# b17a8cd83bc04fd8b0d8956c9e96ed91
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# c14d6629fb6f4711be15850f019b67c4
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 9db617473e424634af2312f9da7b4c6f
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 39843fecdbe54ab19fc85deb96bb5f34
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# df245d5dc93b40b0adf8b699300e9394
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 5d3b9f26afe24f629da44aa9e709562b
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# a71a21bb5628444094a849957acd10df
msgid "|search index_environment|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# df0069b949ae4ac8a5cf3a7e3995a9b4
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# d0f4070245944453a684bfe471476645
msgid "|search index_node|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 585207600fb046f6872ca83476c9c845
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 811df139ff1d4fc687737a8e9e1b03b9
msgid "|search index_role|"
msgstr ""

#: ../source/chef_search.rst:19
# a9e08cda778c45bd84a8e139e269cbab
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# eedd5f7b3741462d8a70f32449041142
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/chef_search.rst:22
# 299cc43ef4be4b90ac48f0840628a3d8
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 4daadc29138f467d9d0fc93b17af9d06
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
# 0902cc1fe0614879be4e1ce07b80db80
# 378af68a5ce345fe8b082a1a76ffd1e6
# dab1893cf8884146b5e9176f4f90b2d6
# 3db9b9232aec405e9d028ad89e4ba748
# b242a2cff171471db139e1f2e0665f3e
# 1fe1a50d20924595b15b4f6d2dbd2002
msgid "to return something like:"
msgstr ""

#: ../source/chef_search.rst:26
# 73015250652f42ea9eefa68e034ba67a
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 03b5dbd9a1254fcab398d4aac4df2ab5
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/chef_search.rst:30
# ac293f6535874d6393508a8dac2916bc
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# 2cab51ee3bf84c509903bc3288201970
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:9
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
# 05d95584e3af4c9ba1e47b4093100eab
# 0172a94d812143469bfc715030ee89d6
# 85eff7f270914307a1b6d29c0bfcfcd6
# 2bbabbefe3704c94b306732cde023bcb
# 587203a130894fab8e6eeb4000a7df23
# 2dd610d3fb4542cca1de72ad983b3427
msgid "or:"
msgstr ""

#: ../source/chef_search.rst:34
# 895af7799d0f4fa5b91f6e408c91251e
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# 51dbf16f5ef24f639d6e373bf10e9563
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/chef_search.rst:38
# 834bfae551ec47a69c9cde9b35799bb4
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 3e0d0d5a00a542bcaa219ae4b5d79a26
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/chef_search.rst:42
# bef24901f73b4d438c821743c6f5cdfc
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 4fcfb99a493a4602a4ce322c030013b2
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/chef_search.rst:46
# ba22e5a88839420aa16fb3367e25b68c
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 47c14f3bc0114e7eadbe58d3b99dd91a
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/chef_search.rst:50
# 37a7c9b21a7a4074b2a5f7df9bcf64a9
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 19890253bce54e5b82bf859631d497e4
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/chef_search.rst:54
# 21484efba88b494f964780927ef2cc73
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 7f0ee3cf20b54428b128966a64c5be93
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/chef_search.rst:58
# d8ed9925c1ed4b4f87f7f1e75c16339b
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 4aff3c22707341cd9a190b17cd22eccb
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 5d7d3032421142a7b0211b5c8352fd96
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/chef_search.rst:63
# b16b24f2bd7a4224a9d38804a89c10d3
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 249f0ffb78ff4ee6be1986ee9bc34464
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 174092e2a02c45e2ae1b41fa21b97073
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/chef_search.rst:66
# 7d7d99ee0fba438084444c90eb81c758
msgid "Search queries may not contain newlines."
msgstr ""

#: ../source/chef_search.rst:69
# 72f00a2437704150a43752b9024a486c
msgid "Filter Search Results"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:4
# b306948b373647ac972cf96d22439743
msgid "Use ``:filter_result`` as part of a search query against the |chef server| to return data in the form of the specified |ruby hash|."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:6
# b531c0bd52da49b68244c19c8b47c467
msgid "The syntax for the ``search`` method that uses ``:filter_result`` is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:21
# d10ecbd8b1b34b75ae9e380e8c446127
msgid "where:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:23
# 707483b59bdc4209b4c9758f609d57f2
msgid "``:index`` is of name of the index on the |chef server| against which the search query will run: ``:client``, ``:data_bag_name``, ``:environment``, ``:node``, and ``:role``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:24
# 65366b73fc4d4a45a480c4700e4ab022
msgid "``\"query\"`` is a valid search query against an object on the |chef server|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:25
# 27121a7fe33e44db9f955b0f30287fd0
msgid "``:filter_result`` defines a |ruby hash| of values to be returned"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:27
#: ../../includes_search/includes_search_special_characters.rst:11
# 3f4f96b87b854f16aea2eeee2bc37fa9
# 2a376758dc264a97a80d7b24b1c3c75e
msgid "For example:"
msgstr ""

#: ../source/chef_search.rst:73
# afb729402a684a21a688f22414777dcf
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# af66172d11114ae3b0cfee7c02232c8b
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/chef_search.rst:77
# 15f9361e8a7946fc895dbb82957c315f
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 366c74befe4843d39718491b4d72c49e
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# a5363647ad8e4db29559ebddd0f6d85b
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 4f59d5e108704752987fdbaf19dee306
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# e5d5838a097f486fac0e009a084ecf99
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 5887edd3b06647f8aacd9fa10a490657
# d2dcc0d787474aadac66e4e25ffa9c93
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# b9f132c3813d4d928fbc484f2f8da8d2
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# eeb4861a474745348b52d0cf93917a64
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 250f472056da4f2f8ee0006dadef40ac
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 43b3c01ed79643bca77af35d84475e57
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/chef_search.rst:81
# c9f30a915c41469a8c99983b5ab25276
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# b4e59c601e8a4e08957d21002e72965c
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# 8a2e6fb0f8d24337ac29491147e9ab7e
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# 5cda5ee1b1a74488ba0a7b1c8d7c2f36
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# a8041cdd68674715869546502f23846f
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# b66b1052da724d90aa0c3804bad309bd
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# 4c7b84c111ff4affba033566560fc862
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 0e85676243f1475d9d9c5b4a64ddef7a
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# d9b22ffdc84441ebb948f5d9537f5004
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/chef_search.rst:93
# 70c251953b0e4639b984011be82f5c3b
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# b53654400ec34743ba3994f7d2035bcc
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/chef_search.rst:97
# 87efae065e9148d190fd007976a2b8cf
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 7623d2a4aecc4317b077225a382465fa
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# 39fdedc2b1a34063836768ea56b3f2c8
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# af656102b8a246aa93ab2fb6822af595
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 89a1056e066a4d049127369818c469b0
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# a24e3bbd35fc407a9d68fba2c457504e
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/chef_search.rst:105
# b9eba35eb63e4bf89553e4368c13d751
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 42f46b86e77640e69d9c78203c4dcc13
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 6a73ac7f7ccd4c9cbc61ea0f4e93fa6e
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 679f420923954e1ea9cdace089070ada
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# 28bc6688f13f4e7390908196e8799041
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# 3a5134a6eac444e581d07b7e28f8df8e
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 2da0eabff0e24300b9ef92a7651f4161
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 00f84dc9a4894477969f15b9196fd972
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/chef_search.rst:113
# 045edd38dfea4625a65f80ba41f98105
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 9849755c0c2d44289fdea652a180718d
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 8747ad518f874e778e737e9f039de94e
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# 1ace099542394356a88c8c6b2515f2b2
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# 0471eb040296416294bbef5e06e287ec
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# f37c73892d5c465e980157596edb19bf
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# 7869b939310946c98cc3c43e2e9eb7ff
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 6350ad1081d841efb5474d1d924972ae
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 6451c30d0ae842c1920caa817b4b3ae4
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/chef_search.rst:121
# c9d20477ce1b4f9583ac5f686894f765
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 04d36d9fc8ce4f1f90ba8d13091d9756
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# b915bacfd7cc4a64a71858e7863eaf88
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# eb21979c95344fddab3c7cb420af5c75
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# 885e6a80d9d54c08bf008318e8455793
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/chef_search.rst:127
# de6b42e31a48478fa215a71249d1585d
msgid "Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# ec1a485ec96d499eba196c4bce2042a8
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 4541721bf79f42b3a74f220556842bb3
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# a441eabebf2f4fc784f5ee7f42f62d6f
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 09f2f0c537f8414eb2c9c0b0f7e3181e
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# aa9f379eb4ce42e18fef43ca02b5ab73
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 685b9436ad7e416095ba230b90778af7
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 525028bae4e4441ebdeb58f9ad608115
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 13b9b07d973e4accb852f4a280de917d
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# 7be7249ba3ad4a24aa9036961f6b3014
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# a8876aad83af4ee6a9ba541c3ee8e2a8
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# db3663e734d74585b8283c587c43db56
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/chef_search.rst:133
# 7ad5c948c3464a3ba7613a4d03c4c826
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# c472ed0c89af4f70a5bfd9421835721f
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# f302d2892c07472e96e77a2c0acb3dd7
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/chef_search.rst:141
# c1566e6c87e643cba77aa83921533b66
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# 33c675ee866d4388b1db62e788caaa56
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:145
# 0d8ef2a17ff244a097fbd7d2b24d3d63
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# 2e844dcae2304dc5bed493730309664e
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:149
# c8a4783f950c449f9f94008ec79a12a4
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 7b1fdaf810174c37ae1c111ccd5641e9
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../source/chef_search.rst:153
# cb5e7c9b61694f96bbdeaf3db7c53773
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# b4522e4b057b45a48f7555e8d02d890c
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../source/chef_search.rst:157
# aafa09f431234eb3bb11190f18405155
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# 6dd88abdab2f4d479722ad69ca80541e
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# faad883168924ad7819890daf80006b8
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 43b519277b6b44d9b449444c02ef7a3f
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 65f4f6c088744ae6b9084853be575237
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# aec3f4f284ec4724a8db57805e6a9d15
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# a852128f754f486f801b821092683f62
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# f81fa199418f47c6b77ff5cd99297c37
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 0779b9fe507c4f21bc31727e19717963
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# d934f14c74284eed8e56727764f42766
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:3
# b21ab9898dfb4f549c7beaa7480ff0d3
msgid "To search a top-level run list for a role named ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:9
#: ../../step_search/step_search_target_role_expanded.rst:9
# da610a978b8749ae84cf9f9908bf2a23
# a55af7897cb44ea191dade9b371e9944
msgid "and from within a recipe:"
msgstr ""

#: ../../step_search/step_search_target_role_expanded.rst:3
# 2113569fcbe54e5b9346c70c26e0fb33
msgid "To search an expanded run list for all nodes with the role ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../source/chef_search.rst:165
# e7290756298644c78f6770916114b1e1
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:5
# 93ab976139ce4462aad3004ce2aa9107
msgid "A node can be searched from a recipe by using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:11
# eb97f5360b62435587cbbf558c776380
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:13
# 64034257c5eb4f51a45974eb7ddf4d85
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:15
# 5d3388c3262e4f188fb65f5ea7c3281f
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:21
# 8fd10074b6a646bd82367c9d3e7b2c5c
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 04290993181e4beba04dd4e3cc98cc85
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:24
# 3b657aeb4acc466cb7998fc213261cfd
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# d797bd4d8b794563adb951d3d4ebe907
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:36
# b4d29daea11941b691f9394366d8b929
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 5cd3312b46754a6fa6aac8354b6f321d
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:43
# 05c2032f9eaf41eb8722d1afe0fc97f3
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:45
# d0175a7b1331497ca67aaeed5f400f47
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:"
msgstr ""

#: ../source/chef_search.rst:169
# 915b0b6ce101425fa3ff2cbdae5e5b3a
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# fc4d14d4ffff43a396e939bded6664e1
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 839139a1bd2d44899b1051169d550fd1
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 2472a306fccc40adb403057604a0ac28
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 788ca40a0f1841eb939c1c4c33648ada
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# c07e5dfc50b6428299932c493d58fb13
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/chef_search.rst:175
# 040d1d530c60422cba022ae4c9f23d4d
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 29ef1311585d4d8eb31d766724dc6126
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 89aa5f54ca5548abb2786b82500f78f5
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 888a8a8b0c554e9580b264fc5e847062
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/chef_search.rst:181
# b466e02fbba54046888b663c98889eea
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# a38dfbb90729426ba3135020c12d023a
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 99a8739544bb425593520bbf87955439
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 944641fd04ba4faa9de7d7ce646f1f90
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# c62cdad0981c4b4aa17f862595fd6d5c
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 57016ea214254929a8d0b3ed61d7b045
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 794faacc6f4d4e2fadba0358c9df545c
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# 43641c0039564b739c089134cc082e18
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 9fa927d9e52f47a98835465d3027fdde
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 47083770467846bcbba489d3456c9706
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# c16e9da3468147ceb9500a17971dc583
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_search.rst:7
# a01a7c1567844f84aaa20a92704e85c3
msgid "About Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 854a76c9e871457094d61d1471d61862
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/chef_search.rst:11
# 2e36853c06cb43c78796157a5247c7d9
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/chef_search.rst:14
# 630633700e274886a4144123bee54aaa
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 39a52a22d0734deb86cd8753925401ef
msgid "|search index| The following search indexes are built:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 4c9b26c71eac4373a002125375d7884f
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:11
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:22
# 53bec7f6144d4ff0865aea9eb8d7786b
# 978520fd55304d17a1e4004aea9d5d68
# 79dd80647d0e4372a555ecabd2622747
# 8c1900eed0814b209c92b9b23e1e25d5
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# e9d5da7e1614471aa84279c8c2d24585
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# c0bbd068ebd94deb8edc1e44a02d6231
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 449db474b3ce4706b39aab80d9535d23
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 650de9680dde4cdfb1ff6d7c15e4d1ab
msgid "|search index_data_bag| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# d8729e71449549478baef0b3a294d020
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 4af291cfb7fd4a49898ddcc8a2a17553
msgid "|search index_environment|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 7a5f6e7e7f1a4072806275b7a257285f
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# 431c7932ade64b5aa8284b00631e915f
msgid "|search index_node|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 38548160236f4f97ac2c8ca463731738
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# fbe6fbc3b756498a8016d69c8e745d05
msgid "|search index_role|"
msgstr ""

#: ../source/chef_search.rst:18
# ebd76e69b1714da29fd706d9b1221436
msgid "Using Knife"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# e06c65baea544db19e3a32ea15339aae
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/chef_search.rst:21
# 517dfd9f68d648cea1ea00270fc11efc
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# f4cbcb9c51384750be33249479b67741
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
# 0e5ca63014b947b4accb93f6c9e34082
# e5dcd420a10447cea444b7c9ed31d47d
# f18303a52c4f4fb3985f7af03f6645b3
# 8c151d4faacb4947a32412046e33302e
# b171373117ab45a7bd4a93f82e0a4808
# 9eccfde95df049b3b914c4f39bc322b8
msgid "to return something like:"
msgstr ""

#: ../source/chef_search.rst:25
# 73608ed18fdc40448371e76cf6182516
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# ecb4cd465e4140a58ff982131e3df231
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/chef_search.rst:29
# d06509e7bf454e5fb239ae0dbe046fae
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# 8931d35c36dc45ecbc3b8de151fc3005
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:9
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
# 826ca59aedb54fe4b2b073d9abc157d9
# 5bdfed0b264545138719260de8f7b85d
# a6cd593b963f4de89ac4fdd055f5fc62
# 75f224472cd24ef0979740da0ff6a9fa
# 7e0799bf96d14d22893902cc44d47a7e
# 91b964d8bbe34d2ab407e9578e25aac6
msgid "or:"
msgstr ""

#: ../source/chef_search.rst:33
# 8e24a4641fab42139cd2f46867bdab28
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# 4a8159c7085e487db8897de86c9bdb03
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/chef_search.rst:37
# f6fa5a6749564772961040737cc4597e
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 9c5f9582cc024469a6e755c01c2e0d58
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/chef_search.rst:41
# b4d0b82cd7584edf8df38d483391ac22
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 238220ee9b754ebfa7ce0a4be093c0b3
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/chef_search.rst:45
# ee7565725dce48279f952b8b28e5e05c
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 52e8fb2d83c74194bfd4c7c33c27e1a0
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/chef_search.rst:49
# 2e7a68c88b84490dbedd8880b0f08365
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 3a5463643f4e4a1fbc276158949f72fb
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/chef_search.rst:53
# da46c8d3163748d7aed0eb32b34dff42
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 2e6403e847b04c3997a22224490be4a4
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/chef_search.rst:57
# dabfbef5d55c4e6b909a5d4dcaa34584
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 2b7a1461ceeb47c5b1b476f7fc38fb2a
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 89234c5755ad408ab69a91c3bfb82ad4
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""

#: ../source/chef_search.rst:62
# 4ffb8bc121c04de897f5ea179c13062f
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 213f24e7a0a04e7bb88ad590885f0bc8
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 8d685a5c421347388225252a01e80e14
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/chef_search.rst:65
# e8a4530a2cc64200aea22a458c213017
msgid "Search queries may not contain newlines."
msgstr ""

#: ../source/chef_search.rst:68
# b134d12fdec94aaf90b9206f1e0e90e4
msgid "Filter Search Results"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:4
# 8fe3d5a3be6746c2a16b54e1ba768aea
msgid "Use ``:filter_result`` as part of a search query against the |chef server| to return data in the form of the specified |ruby hash|."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:6
# 12ce50f1de2946ef8c46dd975defc3e2
msgid "The syntax for the ``search`` method that uses ``:filter_result`` is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:21
# c61de4a0e3c849fe9eb24c1f9b243536
msgid "where:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:23
# 95ecac6e19bb4a4983fedac1516bb2f0
msgid "``:index`` is of name of the index on the |chef server| against which the search query will run: ``:client``, ``:data_bag_name``, ``:environment``, ``:node``, and ``:role``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:24
# 84acaf611e624a2dac2a21d6be893565
msgid "``'query'`` is a valid search query against an object on the |chef server|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:25
# 6b92f16e61894df18511fbe8ff43f6bd
msgid "``:filter_result`` defines a |ruby hash| of values to be returned"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_search_filter_result.rst:27
#: ../../includes_search/includes_search_special_characters.rst:11
# db22b9ce9c1849cbb28a0d0b216c43bb
# b8f16ac29dbd444abb2479a7a62a9096
msgid "For example:"
msgstr ""

#: ../source/chef_search.rst:72
# 22b224704cbc4c03bc5b4b0571f418a8
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 8c3dfb655c7944949f8c41f7029c9533
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../source/chef_search.rst:76
# f955a720a5f948778557d635284d0671
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 21948b30709a4e5ba5c04ae64ef811ba
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 7f4275c24234465d94c2033d948092f7
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# a893ae8c09e347f3babe8bfc02656360
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# f8566d01a7a244d79f506a8048849b1b
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 210235ce41764b06883b2480f50f00dc
# 5cedbc29499044649d30e40cd806ea1c
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# b3195d6694304c0ea1e63a1c124264c7
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# e0cab29603004e9e962cdc00df9c62fe
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# a4391286bb06448fb474898427b8168f
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 46527b11b64b44f98fd920b5e0c135b3
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/chef_search.rst:80
# d544711e09b946088cf74f833f2e9811
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# d2d2542ab16148eba79a312b752470fe
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# ef78c449bcfb43a488570b4db67f3061
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# f487b15ac77946009268dfb180c402a3
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# 68c1b36d522d47139805cfe4a6d697e7
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 069cf02325634178bbf0754f00fc9d60
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# 674c1571c5df41e5882270078a4e498a
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# bb489dc672124b219efcd34aafe3c786
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# c2d2f3046bba4d1e8629ae8669266970
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/chef_search.rst:92
# 40172fbfef864250a853a6ae13bb8fe0
msgid "Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 2ca88a07b7e8437f8beffdfab7a9a2c2
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/chef_search.rst:96
# 6deb9d5065b549188ee53dcf3d413e69
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# a94fb7185a8a44e0a067ab9740432d0f
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# 4aae299eef9d459eba4ce1f3ab40db63
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# ec5beebea49e4d5ea87512a237f4988c
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# bbca6f0860b54964ae6a60bc14ddfff4
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# 714f3c87de0040d39589d03fa85951fa
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/chef_search.rst:104
# 2873d60b7b464fc9b2e86de16dc3442a
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 10fa498549324216a7c634e382573224
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 3df2eaec526046349e7174d3b5b684d8
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 3bcab78375a84ca099a61fee438c10dc
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# 78fc472c73fb48f082ebafd169e5efbc
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# b0b860f1d9a84480ba0b10189bc536a1
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 38dd1021e28b4d7695126efc7ed11ad3
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 2c02c40d29c24c348281299dca08396a
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/chef_search.rst:112
# 2435d46e407142ec8765454940af9328
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 0d01c4bc6fcc46b5a7f39e65479fa1af
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 1735b680d4da422a9bdddec26df1e1ec
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# bc1bafc1f3094388a9a208651c334307
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# f5eda31d849f46988fcec4361e87c0e8
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# cef7b181200e49e3a9ed9dc85184ca78
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# a06632711fc44581a3f0a78adf06d3e7
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# b5c157dc50924de494648f5e92433b18
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 0ebbcb2e32d74e9ea310731e67cb92b2
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/chef_search.rst:120
# 178b058845eb48f3b857c0c4d7c76b48
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 6fafb28d3b824f358665062331c42f4e
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 523d367699324317ad12c42bd95c0835
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# a22c9a9f9de941e89f6c2c522d0fb634
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# 2148f9ff02994badb565ba5853a92441
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/chef_search.rst:126
# 51f53e77767141e0a52974ba0790a790
msgid "Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# f476eef9bbef4cf49c94d77f39665cf7
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# e3589720218a4fa6a65f050fb14b70b0
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# a04030c6c5f34924ae92fa1495180423
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 05e1818146fd4dd1a647f700ed791fb8
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 9cd4258bdf114789a492fe0d71a238b7
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 642959a340ad41dbafe4b1025692f027
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 3eafd1d208584a2588d25c35cfe56e5a
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# a2c23b45420d405fafac5435850c73ed
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# b61910c67b7d4e2f90ceb07c37219cef
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# 107e8bfd2843453db80e2e810c4cd1da
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 389b49762d6847cdabce09c80f7d4d41
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/chef_search.rst:132
# 0ca1c95be5ff47dbb980c48bc7a2bd37
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# 1ef7370cea754f6689d8927e2b19c572
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# f83c1c431e8a4a92aaf583c806705c25
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/chef_search.rst:140
# 110b2acb76514e0eaeacb901f530af50
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# bbd4ed18dd3f42eeb3a5139efaa893c5
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:144
# e75eb72a0af14234bdf816197519a976
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# 0b489ed4d5624a319707d24d0aa1ea84
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/chef_search.rst:148
# 7da4606132c842668e17f3078d09b0de
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 083a56dcff714ebd94d700d7156b6de6
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../source/chef_search.rst:152
# d823532d57b14e4997bcdef47c3e8f44
msgid "Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 1a73b1eac37845c4a150c2a190cad408
msgid "A search target is any object that has been indexed on the |chef server|, including roles (and run-lists), nodes, environments, data bags, and any |chef api client|."
msgstr ""

#: ../source/chef_search.rst:156
# dea0f4681da143dd975dffcbcb3f8475
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# d72c2fcbd63f4dbb9c6dce541375cfdc
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 2fcdbaef917b41e6890b74fbb27e0e29
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# aad166a9cc6541cfadbb11bbe37a1e69
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# b79e6c3abe7d46218633e73a11ca938a
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 6655c34c82bb47fd807f56ee776ef7c0
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 8237b6e14fa94bd19c8b200dd62f0a12
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# f445ab75a3bd4d189e78200feceb5716
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# a00669d135df4b99ba7dd1ec2f8c4ca2
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 647b2409418d4808bb572c8c023b00f0
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:3
# 87224c5d84de460d9ca136177cff4781
msgid "To search a top-level run list for a role named ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../../step_search/step_search_target_role_top_level.rst:9
#: ../../step_search/step_search_target_role_expanded.rst:9
# a8d60154156a480198019d5c822ee6f3
# d77dfe087f0b4a3dac0bbafe92c386fe
msgid "and from within a recipe:"
msgstr ""

#: ../../step_search/step_search_target_role_expanded.rst:3
# 08a878c6fb0d4d29ba555474e172cd1c
msgid "To search an expanded run list for all nodes with the role ``load_balancer`` use the |subcommand knife search| subcommand from the command line or the ``search`` method in a recipe. For example:"
msgstr ""

#: ../source/chef_search.rst:164
# 18d03b8c876542e28d8af1a0f35de794
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:5
# 1948cda32c78442aa76faad2a7ccfb1b
msgid "A node can be searched from a recipe by using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:11
# 23eaa32a86c24084962cd9e2d835484e
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:13
# ed4212be607e4a9791da0a6203aa5bf3
msgid "Expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node are saved on the |chef server|. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:15
# 561a6fd65ff54c6e8dfd22e9da11a2a1
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:21
# 2a24198a72684c81af92b0afcf6cf4e5
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 509eeeefe3d34eeea69933c4320fe7e6
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:24
# fdbce1b35d8a435c91e752b8e5d0f3f8
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# 1df08be3cd7f46c7befe7f4898c8aa65
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:36
# 32cdd7137a1f4485a01712585413b694
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 8158a72eaced477e93d29456e40b7184
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_node.rst:43
# 8d72a4bb5ad448d39b51551b4636c072
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:45
# 13ba49389c35474b9b27a444fabac69a
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block:"
msgstr ""

#: ../source/chef_search.rst:168
# fdc09f70044349a6845c557265d480e9
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 19bdd222e03e4f989072779a0bb530e8
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 7ad18c77561642b68590aad7d740710c
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following example shows a simplified settings file:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 7a04e7da108d4e97ac9ac812591eaf5d
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 9ef6bc6a47ff4e80878f7add2b7b5a3c
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# fd8b5a67572449108836aeb2b72cf36a
msgid "where the \"[0]\" is the 0 (zero) index for the ``db_server`` identifier. A single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can then be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/chef_search.rst:174
# 9f1a314641d54604a76f7be8d680d887
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# eef19cbc54bf449e83026a534e65137a
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# d36f3946050d44b6bac246889e75ab97
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 366b8fbee5464f24a32300af1aa2f4c5
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/chef_search.rst:180
# 791487866dcb4d24b9d809dce6967098
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
# 309e2ca410f549d28fdd1d36536c7a46
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 69235b2d8ff147b197d01fb22ea1a540
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 3aa8e172dae54264b1c109cb4c03a417
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# bd89e07a0f1a415887a4d48fe76d354e
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# a3174933f8cf4f1b9b573b9588e3ddb9
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# ec6aefd5464948b8a2b8653319b18d75
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# e97f161c64fb4b4db6e333c0970b39e3
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 26dccec5f3614784b0e9fadfd96c57e7
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# d6f9aff1cae346d9ad2f855e02646a4e
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 1464bb5443224fa0a9999819f6063362
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


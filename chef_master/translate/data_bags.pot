# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/data_bags.rst:8
# a5602430efa34419964fac9aa655c200
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# 5db106b3dbd64b579616644de77f86bd
# 20ebfbc4f94647bf9bf97321e1d33f59
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/data_bags.rst:13
# 8b2177fa37454196b6c6c9b0b3cacd16
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 8be2e68655fe4aa5b4d5cfb50e7b6ada
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/data_bags.rst:17
# cee173a99fee484cb125d4570f5803bc
msgid "Using |knife_title|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 3096bea893454df79bab7a5abc5e24ac
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# a4f292f90a354abf847c08420590564a
msgid "|knife| can be used to update data bag items using the ``from file`` argument:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 39118ac5172e439b99b5aedaec14418a
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 167ffcc63e66420294ffda6ebcddae89
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 4fd5b124093b47f1b9a7ad73d41888af
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:34
# a8ab4df9d63940d3b77a0aaa982766cd
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/data_bags.rst:21
# df6482485b3c4aa9bd4ed94c7a5d13de
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# f42e162154d44f3a8216358a88df1429
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# 90503c06842c45a3b9fb0ba8c1d9a05a
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 7f69b628b5954fd48ff8262c00260d1f
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# 71e9d39e3f834f289bd729a047ab0955
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/data_bags.rst:25
# 66fa5dfe01b148948a57f302b0ac0ddf
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 0a05ac63dab14cbc98dfe7fb8461fbf2
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# f9e4f18ccac3424b919bd86c92c419a1
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 1206bf3a7f5a4a83a59c25978b48a71b
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 8ec4e561e3834c2aafa1ce8f97bd60dc
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# d017723d04014734bea5855d2f30319d
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 1ac45db1131a462bbfdb1c9cb9496eb9
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 0679b5462c1f47f9a693bbe738b4304c
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/data_bags.rst:29
# 0510dcacb84c4f5e9dcc717d3cb3b0ad
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# be502226b222440c8907f721e5f82abf
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:20
# 4b128b1155f743daaaba99fefa3fd3dd
msgid "where ``admins``, ``db_users``, and ``db_config`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/data_bags.rst:33
# c6fb084e1252499aac80119df31b4d7c
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 5dd6a122ef9e451d93650fc05ec64509
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:15
# 60beeaefe98149728254ebadb6d74ca7
msgid "where"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:17
# 4356dd4bc3dd43ea97e02043c92f8e3f
msgid "``key`` and ``value`` are the ``key:value`` pair for each additional attribute within the data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:18
# 84d9ff565e204e47b8d29a2cf1dd0efe
msgid "``/* ... */`` and ``// ...`` show two ways to add comments to the data bag item"
msgstr ""

#: ../source/data_bags.rst:37
# d6e9dab069064f809871d0ee60ecded1
msgid "Encrypt a Data Bag Item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 313f3b6c371b46d39dc8f9055f2b6f6f
msgid "A data bag item may be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows each data bag item to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history). Each data bag item may be encrypted individually; if a data bag contains multiple encrypted data bag items, these data bag items are not required to share the same encryption keys."
msgstr ""

#: ../source/data_bags.rst:41
# c2da0df1735d4911b5549b84ee8a4a02
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# 8b62f90191cc48618f131c2b1d3616b2
msgid "The manner by which a data bag item is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# 2924f82711bf447aa450b19ae857ef8e
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# 65e8d2e8d51f4573ba1d8896be05a032
msgid "For version 0 (default, through |chef client| version 10-18):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# 2dee48ed5463499db297cd9248ed8d50
msgid "An encrypted data bag item is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# f17539b909424495abdcc39631602719
# 8ad5e6b266c740e5bf616c0f866b669f
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# 51078638a914469bb81eb0c993e76cee
# 33b6d06cece3403d871fc86a97b3cfcb
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# 753cf91f63dc470fb0b2a8650d1978ab
# 958e45504305461993902a7d2fad7d81
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# 96a41f4a15704bd18ec3c3674d447467
# ec21c73c3e44484a9eee43095dd8ab4a
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# 44e424ee221e44818308bfe627568a46
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# 12d71f9d018c4646a450e3c902f4574e
msgid "For version 1 (default, starting with |chef client| version 11-0):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# 296a31426be743c7b0ab71c83f206985
msgid "An encrypted data bag item is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# 1f3b541fcb3e4cc5afbaf4e2c04c3c23
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# 29cadaad8fb944a9882855a4663c9069
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# bd024487d7c04efc8a43d4a88b546c5b
msgid "For version 2 (available, starting with |chef client| version 11-6):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# 9a91bcc5337b4df3a469e0028daaf040
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# a0c44c6d9a0b4505ad8c232f996246a1
msgid "Can disable version 0 and version 1 data bag item encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# 7f731de254694b268303c9361edb0b2f
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/data_bags.rst:45
# 211bba92a11048e9af458e4af1d1ac13
msgid "|knife_title| Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# f04ae86cd3264ea6a4b2f11da8397ade
msgid "|knife| can encrypt and decrypt data bag items when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# b087f2ea7c59450e87ca6a7a254ff534
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# 6f4e4b48af0247ba8cd59884837a0340
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 98f3e5ecb6fe4fbca0f4947b8163cbfc
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 130abcf3b17c4e86bbc50d061bc7e8dd
msgid "|secret| |secret_config|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 61733782b0a6470c902643e14a0f9687
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# a09da4fab4304c20b56b8429b52d0d03
msgid "|secret_file|"
msgstr ""

#: ../source/data_bags.rst:49
# 347ccbf4d13e4e858a3b4f6c0c4ecaf1
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# b3fe716c692e4e98bfc51373c2e397c2
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# e05b937d3e9848d38a2797fee57dc3d6
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# 34698e741c18479787a9e63a0e27d2d1
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/data_bags.rst:53
# bc8a8a538b6c48bb87fa9f9624494a43
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# d8678e68633843788b2db0ae43fda8dd
msgid "A data bag item is encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 3cac0f5e724a43239da10c778e71d70f
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/data_bags.rst:57
# 8621fc7e192c4e919a3e56a9e47f87d1
msgid "Verify Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 59fe13e520834825b20d38b185571ec7
msgid "When the contents of a data bag item are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# e39a703b2c424a1a8183ada101a1ffc4
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/data_bags.rst:61
# 81069b3ea5974a558531eb2174454f10
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 106a4cb3026340cb99c86a8ff216f0b5
msgid "An encrypted data bag item is decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 24f13d0c54e648339b6bab728213cf52
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/data_bags.rst:65
# 242a82c7afc9460fa04b1549af5c0192
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 044fb4ee64c2416b9f1909dd01f0bba0
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/data_bags.rst:69
# f98eca2eef9644f69870e249b8a7ede2
msgid "Use Data Bags"
msgstr ""

#: ../source/data_bags.rst:70
# 855ef54166d4437888146d546a864864
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/data_bags.rst:73
# 8734efd4c1954584a7cbc28315a10e06
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# e95f886415ce4242a0f74f0a514b19a4
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# ed8d8817117641d7996d11c04ab3b90c
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 549c750ee5a743a7891b205de6a4466e
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 3c313e3826cf4aa2bbea21b88be8cc1c
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 083fc027355944e58b53832edd2ba8a3
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# e40065357ba44d9b9e6cca2eb28322c9
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 84baa452c980486f93c9989b72a82729
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 627c46c793224cadaf4f8f73c6c193e2
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 933e4be0966a4835b5a85c4940b6dddf
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/data_bags.rst:77
# dabd3a6a7dd34cd2b74aa4b734661b9b
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 741512dd986f494c84e27ebdd746b301
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 6e48b4753a024b1495c2bc9c32f45047
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 53c270a712d5486caa145e8ce793b4ff
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# fc0b44c34b054ae7aab741b2f44120a7
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/data_bags.rst:81
# d70b2aac8ea740ac8a58e95b9d0c396e
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# cf63e824f1d149deb7f52725fa1e5bcb
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# aac7dbd7d62a4143a6630f270ff74c89
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# 09bcfa8ab89e457091676f48053903f2
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/data_bags.rst:85
# c8c21cdb5e2541749200e01989728439
msgid "Load with |dsl recipe|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 663b32f10a43424a8b980d2ea42467bc
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# df328ef8d1a64c14900f0d81ed7d0d41
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# bb09e3165eb7474fa6d1d8c81dacc9e3
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# dfde934d87c247d188f677e9acd7ce84
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 8aff8746577145079db9f9cfd9a1e7ef
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# d58a5bcfb6804777acf7920578b2bb75
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 1092b86c4c154647bb0df1a614a49751
msgid "to return something like this:"
msgstr ""

#: ../source/data_bags.rst:89
# 4359c5eaabee40f79f09a98f397eb99b
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# b968aabaa8d54eb7852c73499e7afc94
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 3eb614c3e19b46269e9ab40dc492ac8e
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# bf934894648f492eb83067bec8e1eede
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 308c544ba43d409fa61ee339b8383cf8
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 77296212dc4542b4a14c589248a641e0
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 00b9d984ae3c4f66b17fb69e4ec29a19
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 1e9601111ae940458745d71f7bbaea35
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/data_bags.rst:93
# 7919afd1334a4f90bfc739eee7a657f7
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# e620326116ed4851929194bf911d5cdc
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# efd561fb30124dcbb9ad7a2ec150a58e
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/data_bags.rst:97
# 9dc031b8f7ef41fc81248d2dc3727020
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# 0a68c8b3fa474b41828b511f3e4a88bd
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/data_bags.rst:101
# cac2d72e063744ff922d8d20cda43790
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 678ccfe516244f519f3beef822df2ea5
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 943fa4ec67e04a4491261acc1615db39
msgid "Use the ``chef-solo-search`` cookbook library (developed by |company_name| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


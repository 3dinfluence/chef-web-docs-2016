# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-28 12:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/data_bags.rst:8
# 93fcfc85e8e84645a1775ae2bd9b8b92
msgid "About Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:5
#: ../../includes_data_bag/includes_data_bag.rst:5
# 724d8ee6e85345319df643691fbd7967
# 3519b7f10bf14f878adfb8aa8dc6825a
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|. A data bag is indexed for searching and can be loaded by a recipe or accessed during a search."
msgstr ""

#: ../source/data_bags.rst:13
# b41c5ad8ccde4cfca505ec493eae661d
msgid "Create a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 476090c52beb43e4b05f82603552df7a
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item |json| files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/data_bags.rst:17
# 217b809b347945cca4081bf15325128d
msgid "Using |knife_title|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 2182538085764050ae81fbb89807a08e
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# fd8037bfdc334fceaf4a53be390886b0
msgid "|knife| can be used to update data bag items using the ``from file`` argument:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# ad8dbed5128e4e84b16498cd2255e39e
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# cb26f8df969a4a81a78189188a2985a9
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# b0adbb935a7b4ecdada0d26bbd462be4
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:34
# 839750a8d56b44f18166e7ab57a6fde9
msgid "In some cases, such as when |knife| is not being run from the root directory for the |chef repo|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/data_bags.rst:21
# d1c1ab27ccde48fe80925620421fd2e7
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# b19fbdd00e93447fae60dcdafa817d61
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef repo|. Any method can be used to create the data bag folders and data bag item |json| files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# a4e879fda8354ae58b93971f81f501c4
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 2a05a2f29cd04195a880bc055a0f213c
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using |unix vi|, a visual editor for |unix|):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# f7b462e8740c43af8d14aa4b04a46b55
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef repo|. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/data_bags.rst:25
# be9999f09419416a924ebfc4ebbc2cc8
msgid "Store Data in a Data Bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 7f00e4220cec48e58a690adbc4db9422
msgid "When the |chef repo| is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 093152e09e1e4a139999a91a85c8a0df
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 223c768fd4e04a1ab016d79599fdb46a
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# e9e2f88e64854347962a90e356505cae
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 4ac01fbcc2b64a76b77fd96ed59321e7
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 378b85e710fb40d396723dd49bf6f74c
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# f5fdb1aff31b40d49ae8416dbeb49b6c
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/data_bags.rst:29
# 11fa3ae351bc4cb298bbea98ceef4b0e
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# e4392b45923e4ae3a90b3da5797b35bd
msgid "All data bags are stored in the ``data_bags`` directory of the |chef repo|. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:20
# 71544d61e2484746806ab6b392b804e5
msgid "where ``admins``, ``db_users``, and ``db_config`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/data_bags.rst:33
# e1eb4b55850f42599d1a9e01d894e0ec
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 0808df60d96d45828a06866e74c15fc2
msgid "A data bag is a container of related data bag items, where each individual data bag item is a |json| file. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:15
# fda57bb299a14500bc3062630985dd6f
msgid "where"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:17
# 42d58070123a48d2bbecccf779285597
msgid "``key`` and ``value`` are the ``key:value`` pair for each additional attribute within the data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:18
# e22a3765d5f2495b83e6b433187b82dd
msgid "``/* ... */`` and ``// ...`` show two ways to add comments to the data bag item"
msgstr ""

#: ../source/data_bags.rst:37
# 0422dbcc6d8d4cfe988d3c449c70d29f
msgid "Encrypt a Data Bag Item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# d180abfc26ba4afebe3f1c40dea756d0
msgid "A data bag item may be encrypted using `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_. This allows each data bag item to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history). Each data bag item may be encrypted individually; if a data bag contains multiple encrypted data bag items, these data bag items are not required to share the same encryption keys."
msgstr ""

#: ../source/data_bags.rst:41
# e89dfd25c84b441b872e34aa6fbf9523
msgid "Encryption Versions"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:4
# 3c9a17aa65b8446ab8a6081e492ac21c
msgid "The manner by which a data bag item is encrypted depends on the version of the |chef client|. See the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:8
# 3845324f94cb4cf48458cfdc65448b3b
msgid "where R is read, W is write, and D is disable. (Disabling support for older encryption version formats will be in the next version and, if desired, will require a configuration change.)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:10
# 41881ff8e72a40c491f66acd02d55714
msgid "For version 0 (default, through |chef client| version 10-18):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:12
# a205c65c1f3a4852bb21acb0237a8385
msgid "An encrypted data bag item is written using |yaml| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:13
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:22
# 9c3adf74ca6e45839da7c278b5d314f2
# 52220e5a3be64d4695982d82813a039f
msgid "|base64| encoding is used to preserve special characters in encrypted contents"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:14
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:23
# 2e86302cb37f4e12b7c88cfc0089c6e1
# d7410617d197403fa529cae525b531ef
msgid "Data is encrypted using |aes 256 cbc| (as defined by the |open ssl| package in the |ruby standard library|)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:15
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:25
# bc016650598640508357c01bc45d04e3
# 274b81de1916425a9cc88623511f00cb
msgid "The |chef client| uses `shared secret encryption <https://en.wikipedia.org/wiki/Symmetric-key_algorithm>`_; an encrypted file can only be decrypted by a node or a user with the same shared secret"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:16
#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:26
# b6136964975044deb1cf8d51aea58fe3
# 8e0602897d5d4097841b6e4212243849
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:17
# 26b930bd1edc4a01a3dfd804513a7c84
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:19
# 817b22995ccb4491b38b5c47bb343637
msgid "For version 1 (default, starting with |chef client| version 11-0):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:21
# e5074173039c475584779f5a01752011
msgid "An encrypted data bag item is written using |json| as the serialization format"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:24
# bd6a791568dc4f52bb313fc8249ab093
msgid "A data bag item is encrypted using a random initialization vector each time a value is encrypted, which helps protect against some forms of cryptanalysis"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:27
# f2315bdc5f89499d97a7c7c4cdb8a085
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by the |chef client| when tracking the data bag item)"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:29
# 0ac3bce709f2459bb2aea16f05b97e22
msgid "For version 2 (available, starting with |chef client| version 11-6):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:31
# b62a019cfcfa4fb3bae9cc95edf4a880
msgid "Same as version 1"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:32
# 9b29353165074479b7746531d7893545
msgid "Can disable version 0 and version 1 data bag item encryption formats"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_versions.rst:33
# 6ceb6dd4704c4d119edea274f863e26e
msgid "Adds |encrypt_then_mac| protection"
msgstr ""

#: ../source/data_bags.rst:45
# 9bda41844f7f430497bf316ef31dd066
msgid "|knife_title| Options"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# f1c0b2beae384c0cbb8e989f96f402f2
msgid "|knife| can encrypt and decrypt data bag items when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# d6512c7f65114b93844f18ed89c38de5
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# 115f95a7a28b4dabad4cb19e2e60afe3
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 8bbb8bf03a7d499b9fb9aa73e8b9d202
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 1215965a08f9482e99d88734d6c45d91
msgid "|secret| |secret_config|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 9e1151b116d046c897ac583dd683b4e9
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 6e9f5a4561e540e3bf9002cd5a6fe117
msgid "|secret_file|"
msgstr ""

#: ../source/data_bags.rst:49
# 0338f5deebd44254b644bc45f6129463
msgid "Secret Keys"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:5
# eba5001ad9ef441e8f110633ef062faf
msgid "Encrypting a data bag item requires a secret key. A secret key can be created in any number of ways. For example, |open ssl| can be used to generate a random number, which can then be used as the secret key:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:11
# d28a3594c48f43a282aeefe3abedd432
msgid "where ``encrypted_data_bag_secret`` is the name of the file which will contain the secret key. For example, to create a secret key named \"my_secret_key\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_secret_key.rst:17
# 50569d55b7b846e9872cd86cdd57293f
msgid "The ``tr`` command eliminates any trailing line feeds. Doing so avoids key corruption when transferring the file between platforms with different line endings."
msgstr ""

#: ../source/data_bags.rst:53
# c80c25b461ec4e5ea9a8ac997bbb75e5
msgid "Encrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# b4863d1aa15244348725a4c1addc4530
msgid "A data bag item is encrypted using a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 0e1e73c480ca4ea890368ba158e4a71a
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/data_bags.rst:57
# 23282e9628234055b825d69c41f4dcde
msgid "Verify Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# b3f5322dcab84fc38e3c652eafb1a054
msgid "When the contents of a data bag item are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# c05911653b984c73a21d65448342a104
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/data_bags.rst:61
# aabeb1d9cd6242e68a7d95c94f3d94ce
msgid "Decrypt"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 70d103b834334c9191990e53b3c9b623
msgid "An encrypted data bag item is decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 69a674aa181d471d84007cab12ba2d0d
msgid "that will return |json| output similar to:"
msgstr ""

#: ../source/data_bags.rst:65
# f75d53a05fa346389516394c49120b34
msgid "Store Keys on Nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:5
# 4cb3bd8f14c14352af6da1a20d2affb6
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/data_bags.rst:69
# 1783479d09224449889384e5e056aac8
msgid "Use Data Bags"
msgstr ""

#: ../source/data_bags.rst:70
# 860d162e926744008283d361ab49af09
msgid "Data bags can be accessed in the following ways:"
msgstr ""

#: ../source/data_bags.rst:73
# 3ce5accd7df048b2896af598adb25bd4
msgid "with Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 689f4f7ab98645a1b5218b30f39778c4
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 69dc10756fd047d287fb19fbcba0597d
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 295b3d1b0a9742f28d2a935f2a8c3285
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 4be2254f5def4bb5a86a8d42eb387727
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 90d29c8cc05d47bfb5713dd4419b2c0e
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# f212af2df5b042d1a32619e0823c9864
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# b79c1fd9dca94fb8bedb69182091433e
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# a8a5af6c194b4c88b76fd9143a4f520b
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 41342aaddc3e44ca976b4e43684582a6
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/data_bags.rst:77
# 91b7db731c0d44c184274a8c42878c0d
msgid "with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# a985bcb3c3cf4a49a97f8640bbdfba81
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 9d473ebd1162443eb953d804160440f0
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 35b63506e989486e895c17c09815f796
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# 015aa073a11540af9a980f04f9d620ad
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/data_bags.rst:81
# 7475fbe2bac2442aa895e7a822114647
msgid "with Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# d177804a636e4e80a4c8d5fd094c0efa
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 5616857980e34deba9ef5a3a3dc9d092
msgid "Loaded by name when using the |dsl recipe|. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# ea9ae85c1552404eb2360fc2625446b4
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/data_bags.rst:85
# f77985713d06443795fd68fe5abf15b7
msgid "Load with |dsl recipe|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 193318742a9243d790be44d029f3f67f
msgid "The |dsl recipe| provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 9133a58260b948a9a0bda14b54206078
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 2be492a1ee694c0fbe2dcfc667d71f3a
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# b50d067c68184fc6bfa4833d1159553a
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"justin\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# cfb747fdc2274677a168a2ed184f289f
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 39c07e271fb1403385f7b8319100e6c6
msgid "To load the contents of the data bag item named \"justin\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 0ef59a70f0ca4c35b15ee90ca266c88d
msgid "to return something like this:"
msgstr ""

#: ../source/data_bags.rst:89
# ee4c62f7a9b240668c334962016f9b1c
msgid "Create and edit"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# 21ff085c596443608eaa2d5e10a33286
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the |subcommand knife data bag| sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# fd61f1f12005437d9d4e25b7f4637f81
msgid "If two operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# ac08dbef0e9648c69eaf34628b59d277
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# b81120c49dd2475e98d52edad309e236
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 27372ac541e34202acce537967e06ed8
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# c86581dce758428b8f0d065d19d7c6dd
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 42750ab28de945c3ab20d866dfbcbd4b
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/data_bags.rst:93
# 6c0ba96279734bc9888249369520bf4b
msgid "Access from recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 6101eb174e5543ae9a5617305ae99fc7
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 99e11417621e47d78cab0a9be528f734
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that the |chef client| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/data_bags.rst:97
# 6945e19dbb02420cbbef5034cdb68234
msgid "Create users"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# 011b136cbac1464ab6f38f13bdbe8396
msgid "The |chef client| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that each |chef client| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/data_bags.rst:101
# 39becc17131e4d1bb7ff0c493cb031f7
msgid "with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 98e3ffc1193a4b67bbf0cb46f12e2870
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each |json| file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 06dc07c9e3ec4b5f9b67eda54ec55f67
msgid "Use the ``chef-solo-search`` cookbook library (developed by |company_name| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


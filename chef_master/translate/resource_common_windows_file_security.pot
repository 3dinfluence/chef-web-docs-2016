# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common_windows_file_security.rst:34
# 9269b46a2999498891b6f8b92fc47cd1
msgid "Windows File Security"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security.rst:4
# e8b06a541349463c899ec7362b1b8da8
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:39
# 34d6d6ae05f043f0addca266aacf3acb
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:4
# 02ca4c3d36b04038a0d629ce90da9054
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:10
# 4bef2d7b43d146409e43005eac8f506f
msgid "where"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:12
# 7fd07aa878264f1e935f732988372d27
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:13
# aafa6968519741edb29b3c7b4cadfcf2
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. |chef| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:14
# 7ca420f7bbfd4b59a49b154eb5b6dc04
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:20
# 0fae68e2d4e74d62aed5aa92ddaba53a
msgid "Option Type"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:21
# 7fa1b6382dcd40b2ae61b8e17d5b7d00
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:22
# d856116c7a0e475b87c348d4ea17b91b
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:23
# bf1cd09fe929441abac5670bf02b252f
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:24
# b6971cf004884bf58ec1e7a0c7519eb0
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:25
# 9d6f93d34ac84fa5895a2732fac27739
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:26
# abe0785edcd5456d854cf0ccb1ebdbb3
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:27
# 37e942530dd04c92a16e017e918c50f0
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:29
# b6377bc69203448791ab88e2e3207b93
msgid "The ``rights`` attribute can be used as many times as necessary; |chef| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:40
# fc7437cec0044cf19b5bbaf38205893e
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:42
# b0af2b8687834119b7035111c0308123
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:43
# 90fc6ccc0a0541ee9d7179f4972aa0cb
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:44
# cded4a5f0336467fa82843327bf8a826
msgid "If rights are not specified, nothing will be changed. |chef| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:45
# f86520d140df49a0a4a328a24a8afb37
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:43
# 2a7283424fea4f749b6be626a2b3919c
msgid "Inheritance"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:4
# aa4e1aed0182440298823bd388c864f3
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell |chef| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:6
# d94300890bc84a80b9d08228856862c0
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:15
# a9248d539a724ad6ad1376e1c69a7787
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:24
# 8617b45c23e4407da696eb4e17d13c72
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:26
# 6c524f0978844378821963ae19a61a18
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:36
# b3431d9e9a7a48b791746b6f29f7df0d
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:44
# 2582591e5f6e4ababa3d1af5c2efc271
msgid "Because the ``inherits`` attribute is not specified, |chef| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


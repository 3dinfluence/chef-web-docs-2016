# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-20 12:06\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common_windows_file_security.rst:34
# a558b5fc4e3c41ce957f5ca04192063c
msgid "Windows File Security"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security.rst:4
# 9fb287fbe1ea4a7aa8f0f27a9a19a58e
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:39
# 7a61e4767c6e49d297b2c91a46c41a02
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:4
# c7b77c1b6dbb411288733c11dc26421e
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:10
# d0dd14f8ee7f480c94f45f5d59216efc
msgid "where"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:12
# 6d6cffe3f436422580d721899a859700
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:13
# 462c155096b745499f5b1a280b661077
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. |chef| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:14
# 927c820835864ea887fbc5fb1d795fcd
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:20
# e81c67b1925f40789ea180b94d04104e
msgid "Option Type"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:21
# 3625741f234f4e22a70aab01f3bff71a
msgid "Description"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:22
# fc29c5fc06414830bab2ba2cb9a41da4
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:23
# 05757ffc83c54ffbb9d22a82f32c81ec
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:24
# 81e8118909c44faeae71e7b22ef55cda
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:25
# b06966a235934aa9b32bf37b3582f9ef
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:26
# fc5dece9ea3a46619f0e6f0d394fc4a8
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:27
# a38c4ca55e4c49d9a743feb580a015a2
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:29
# c8f047dc690c4933a64778835ca392af
msgid "The ``rights`` attribute can be used as many times as necessary; |chef| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:40
# 81a207f595bc423dac0859f564676b3f
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:42
# 7170c2764d4940388fc5e44a9066e52c
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:43
# e34b8ff27678432f83784cba576cec3f
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:44
# 944854d1ede7437aba8e3bbc9dfbbefe
msgid "If rights are not specified, nothing will be changed. |chef| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_acl.rst:45
# 761ede26b6dd4a7fa120d0ab0c0136b5
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:43
# 2317eebaa304436aa1d0047747286612
msgid "Inheritance"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:4
# e92730ed651c4292ae190120241ef1b3
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell |chef| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:6
# 6e45bf7e3e4b4cbf9ae23449eda094d9
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:15
# 13482f8d31ca462ea09bff19041010e1
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:24
# e630b8f5a64249c097d1e70f35f35acb
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:26
# 49ba0d9102f840beb13472be040eb717
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:36
# fc056ee69f5d4aa78e3ca552efe569e9
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_resource_common_windows_security_inherits.rst:44
# b8b4da8d3e6548a7a5b624340f94df0d
msgid "Because the ``inherits`` attribute is not specified, |chef| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


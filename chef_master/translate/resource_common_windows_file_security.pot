# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-05 17:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_common_windows_file_security.rst:34
# 517b6bf5b72248958c835957178bbe7f
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security.rst:4
# 37cf3018405543d3a3126b88b14fa488
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:39
# 569e50b24d274547a5c57bacb5fec8ac
msgid "Access Control Lists (ACLs)"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:4
# 7d5d685f14e5462f84d1f2ef5e7adeae
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:10
# cdeeb2ef62214d4994849e479479e9fd
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:12
# 778d8ed1c39d459ea38b36895ba09437
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``:full_control``, and ``:deny``. These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object. (For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:write`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, and ``GENERIC_EXECUTE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:13
# 58138a091a634bc599e9230c88234aae
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. |chef| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:14
# 1f92a1dfc4c241058bc8bd2e42eeaf5f
msgid "``option`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to its children might look something like: ``rights :write, \"domain\\group_name\", :option_type => value`` where ``option_type`` is one of the following:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:20
# 3c4980176fe74f3b8e3b0da826aab61a
msgid "Option Type"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:21
# 85aa077e932a4dd8b48b2337a47c0f41
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:22
# 9f7790693d67475a8726bbd8330b3ef1
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:23
# 3257bb5cbed04503a5a4ce25ec542ed0
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:24
# f9f0141ab7eb45bda5ca9cf66854c7c3
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:25
# f6acf0b615564399934f00c3f008386f
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:26
# c2ba2dd82977426fb65648ce97804a91
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:27
# 56f758efef51479e89efe6b28666e875
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:29
# b17c129eb9234deb8aba91c4864168b4
msgid "The ``rights`` attribute can be used as many times as necessary; |chef| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:40
# 8d599b231fc042ae916087bc944701ef
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:42
# 60bbe84d5d6949b28432e4e8e7a895d9
msgid "Order independence. It doesn't matter if ``rights :deny, \"Sally\"`` is placed before or after ``rights :read, \"Sally\"``, Sally will be unable to read the document."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:43
# b3cbf3932fe847c1968b2beee9faccbc
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:44
# b6c6237557c94be1b815772405e662c8
msgid "If rights are not specified, nothing will be changed. |chef| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_acl.rst:45
# 2fc3d403061644e8822988c7331366ba
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_common_windows_file_security.rst:43
# 4a180f49264b4ee2b5b71c329c3ceca8
msgid "Inheritance"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:4
# d5460bd4e0594bec8de955cdd8caeb1d
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell |chef| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:6
# dede88745af54c14a778fd175529b66a
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:15
# d3a6494d882e4a7bb6e8daea680357c6
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:24
# 6be4113fc17c4aeca1eb129326ba51f3
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:26
# e17cb6f91ee04746b2edf8d905a27b03
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:36
# a4691669728540328c81219b1e2a899b
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources/includes_resource_general_windows_security_inherits.rst:44
# 50dd5baf5b1a4a2ea69f8499cb5c3700
msgid "Because the ``inherits`` attribute is not specified, |chef| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-09 15:33\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:8
# 84f0882a800542508fe2a460f72a4c4f
msgid "About the Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# db02ab1cab764d8f91850ba75313d3ac
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell the |chef client| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:12
# 41766fbf19144d18b725b60d7dfe0af1
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:14
# 6bab2ede85a44d0cb1cda75184d00735
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic."
msgstr ""

#: ../source/dsl_recipe.rst:17
# a53a122c275e400b889763f548a01d78
msgid "Use Ruby"
msgstr ""

#: ../source/dsl_recipe.rst:18
# 776041e1ac2a4978969b128f3805c55a
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:21
# c27e2435271c417c899845485d57a650
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 59796381abcc42e7ad0eb77b360fcf72
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# b9161cbae0514d999b211ffb68813320
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:25
# bb58fa5c10774d0586d419cc2f848404
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# a69d71df585048bba30d33a9c4a5620b
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# bc8666f4b1334af9b3d888d5839cf08f
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 0d6f163da6ac4dbba8a5eb5a66ed6630
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:29
# b81450d9a5874659be280d33f2edba62
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# a7bdec9d9a6b4cff97030f308cea7c39
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
# d812e9f1b69b45cc9c917c40a7bfc939
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:33
# f2680ca46fb94e9ca99f540c4269c8e7
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 47a0f24a2ad44ec8812393c6f6720aac
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
# 8ebdc04ebb6744c2ab4b735d85cbd52b
# fa48c9b55723493bbb52544e7c890b85
msgid "For example:"
msgstr ""

#: ../source/dsl_recipe.rst:39
# 94b468a7444c45a3b7b2765bee6fb3ca
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# ef4500886e284dbab5c41a9635510d02
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 37737085d0d941aba2676c57a4c81ea0
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 1b49daaf6d524a328bb1017108acfc20
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# aed848ddb25640849ceaf00b9a6d6712
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:47
# 6245c89a454042eea64cf3210a34f222
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 376754912c1c4cd59959063ec89f761d
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 17df111e67cd487aa54762d2ebe2914e
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:51
# 8f81dc15aab34b269a21f34dc263c963
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 751ad87efb5f4eaeadb9a6337753ade3
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
# ff0b486c3ba04d86b583cffd6ae1d519
msgid "``platform?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
# 74be96f2d02d4993b2dc2ced396fd409
msgid "``platform_family?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
# 2a6a8e2e93a84c6b9e5055e372d4ef0e
msgid "``value_for_platform``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
# 9ad0959013884ae683ec30946993cc93
msgid "``value_for_platform_family``"
msgstr ""

#: ../source/dsl_recipe.rst:54
# a217ea1b7f0a43eda122e23553093b2a
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic. The topics in the tables below provide links to individual pages for each method."
msgstr ""

#: ../source/dsl_recipe.rst:60
#: ../source/dsl_recipe.rst:91
# 3a2c07b1a46a430da3b75c9f6a2810e0
# 7e97b3a9b6ae41fb887768e5e21e9fa1
msgid "Methods"
msgstr ""

#: ../source/dsl_recipe.rst:61
#: ../source/dsl_recipe.rst:92
# bacc3fb82f844c3e92c9a3d591697211
# ed8b07a105514a358ab44094a0279189
msgid "Description"
msgstr ""

#: ../source/dsl_recipe.rst:62
# 7728c2b46a1846638273f5f19b0a1a1d
msgid ":doc:`attribute? </dsl_recipe_method_attribute>`"
msgstr ""

#: ../source/dsl_recipe.rst:63
# 5d9dc7694f09471180dca5990127c234
msgid "Use in a recipe to include an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:64
# c2ec99faa70f4b99a5450f061bf80e30
msgid ":doc:`cookbook_name </dsl_recipe_method_cookbook_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:65
# f03656c8ab2f45dc85ec6d632ce0e7c6
msgid "Use in a recipe to get the name of the cookbook in which a recipe is located."
msgstr ""

#: ../source/dsl_recipe.rst:66
# 18607b69b49b471ca9fe75da789e4da5
msgid ":doc:`data_bag, data_bag_item </dsl_recipe_method_data_bag>`"
msgstr ""

#: ../source/dsl_recipe.rst:67
# 64ba4a24772c448ea1af8b66c1dec515
msgid "Use in a recipe to include a data bag or data bag item."
msgstr ""

#: ../source/dsl_recipe.rst:68
# f34a8e6f8f414bee8e18262f519013fd
msgid ":doc:`platform? </dsl_recipe_method_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:69
# 423801d3b96440c495235bb1af92910a
msgid "Use in a recipe to check for the platform."
msgstr ""

#: ../source/dsl_recipe.rst:70
# 63f492c6086d4f51ad3461d1e8dca6fb
msgid ":doc:`platform_family? </dsl_recipe_method_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:71
# a8998f4157c74696b0b32e44b29440db
msgid "Use in a recipe to check for the platform family."
msgstr ""

#: ../source/dsl_recipe.rst:72
# 12f741778f8f4347ac307409b1d5810e
msgid ":doc:`recipe_name </dsl_recipe_method_recipe_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:73
# 5fbe982b31084b4a95f22cbab0178026
msgid "Use in a recipe to get the name of a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:74
# 05212323e5544d529e52057d4613505d
msgid ":doc:`resources </dsl_recipe_method_resources>`"
msgstr ""

#: ../source/dsl_recipe.rst:75
# 243a6b7b0e6e44259698d4420bd5f7b3
msgid "Use in a recipe to include a resource."
msgstr ""

#: ../source/dsl_recipe.rst:76
# 6e6baad9856844e18a39dae57b04e1f6
msgid ":doc:`search </dsl_recipe_method_search>`"
msgstr ""

#: ../source/dsl_recipe.rst:77
# 346f2099e91b4f95a3a7f5218d66ffc5
msgid "Use in a recipe to include search results."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 338df9ca350443c59647ce8c5c042a8b
msgid ":doc:`tag, tagged?, untag </dsl_recipe_method_tag>`"
msgstr ""

#: ../source/dsl_recipe.rst:79
# 4f06c369048b41858d2e79be2a8368e2
msgid "Use in a recipe to use and apply tags."
msgstr ""

#: ../source/dsl_recipe.rst:80
# 8c91d05f4df54d478f78b02ebcae336f
msgid ":doc:`value_for_platform </dsl_recipe_method_value_for_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:81
# ac09caa3c92543ea9c011b2aa3228196
msgid "Use in a recipe to check for a value for a platform."
msgstr ""

#: ../source/dsl_recipe.rst:82
# 30cebadb04204b109024a5bde97ca51a
msgid ":doc:`value_for_platform_family </dsl_recipe_method_value_for_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:83
# fece264106ef4b9fb862784dfe7e0cc7
msgid "Use in a recipe to check for a value for a platform family."
msgstr ""

#: ../source/dsl_recipe.rst:85
# f95eb855602d4d3e88d5e431abf6b4a6
msgid "The following recipe DSL methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/dsl_recipe.rst:93
# fe709f6ea72b4a319f674112376f592b
msgid ":doc:`registry_data_exists? </dsl_recipe_method_registry_data_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:94
# 54a788feb9cc4803b48fb07e6b04afe9
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/dsl_recipe.rst:95
# b207c505523e4fa695b9eeb500261309
msgid ":doc:`registry_get_subkeys </dsl_recipe_method_registry_get_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:96
# 02e56e19c52a4c0fad6bb5a63eea2f5d
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/dsl_recipe.rst:97
# 7ef9420ae5cb48329f55fa13638ad60e
msgid ":doc:`registry_get_values </dsl_recipe_method_registry_get_values>`"
msgstr ""

#: ../source/dsl_recipe.rst:98
# 9e755beb8fd04a0899f0fb14e5e444ac
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 9632f004bd274fcc9576d3cb269c329c
msgid ":doc:`registry_has_subkeys? </dsl_recipe_method_registry_has_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:100
# 2a04d934c21c47628c60eaf340db77d1
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:101
# 7178440caeb54f96ba217dde82359167
msgid ":doc:`registry_key_exists? </dsl_recipe_method_registry_key_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:102
# ab67305a37ed4a708f3bd90c38b5a5bd
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/dsl_recipe.rst:103
# 05f2ca6037974bd1bf67e1c98bccea4e
msgid ":doc:`registry_value_exists? </dsl_recipe_method_registry_value_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:104
# b255ef3e0f3b41e3a9a93c6d6d36916c
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/dsl_recipe.rst:106
# 6c8a6e4181f546768618d81af347c02f
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""


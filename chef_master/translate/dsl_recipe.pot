# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-22 15:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:8
# a9c70aa763c94efc8f87b29de55d1690
msgid "About the Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 9103f45c244844919b50aba2eca44632
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell the |chef client| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:12
# 529afbaf8b284a3088b48b23168ae5f5
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:14
# 59d108837d564d6fb3307df62a3013bb
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic."
msgstr ""

#: ../source/dsl_recipe.rst:17
# 6d0c2c997ace40e6bd088c07c948401e
msgid "Use Ruby"
msgstr ""

#: ../source/dsl_recipe.rst:18
# 505a2513fbf0446898c472372a15285e
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:21
# fad9313092234675b6e3d1bb869a0f0e
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 2b7fe3c8f019418792ceb68bf2b80d81
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 92fae43e1fa94ac7b3dc9ad48a30454a
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:25
# 0a1a69c7bac6438999ba9c51418a3fe1
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 2ed836f3dcb74a3c9d3466da894fd38e
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 9bf8523141b04aacb66caa02d8a69f76
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# beeb5e48fe00406cb189552e488e6ad2
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:29
# 20bb928bad0f4ce99158be22ecca4be3
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 487ffde774e748b085e968234c125de2
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
# 709e9e4296214aa291f992c633444c18
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:33
# 8f5bdac1a9ff41d98a9adeabf7e9ba45
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 36b19e9d07f341b298a1559921c0fe5e
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
# e10e3aed6d9d495e8eea60c3257af241
# ca25e067692a477bb807f83e1e24fe34
msgid "For example:"
msgstr ""

#: ../source/dsl_recipe.rst:39
# fd36c7ff9311478093bd1ee9d39bb6b6
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# f97a0e0c4cf9406398e15aa4abca3fb0
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 9cb11a358b234299a48f53f25140c857
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 6db8a0333bfa4477adf86fea9b3321d6
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 461a9d051b4a404eb7c6c8c2b2bf2f13
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:47
# aea5e9ff73a3480e99786559d3d1fa4a
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# e1dc1941fae24fcba2dcb642d75de32a
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 30604048e7ab46b783fe2a5315040c63
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:51
# c39a2525b4d74c5a8e06268c1516e3af
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 30a7fb955fb44c29b01c1a8c637fad60
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
# 5a7c772cd4384dff94e49a68541fe9a5
msgid "``platform?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
# 58ace4c3571b46219133c88f35e1449b
msgid "``platform_family?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
# c4e8931e547e443596bba98d5050c20a
msgid "``value_for_platform``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
# d07c1cefef914ca2937b87b25e74c261
msgid "``value_for_platform_family``"
msgstr ""

#: ../source/dsl_recipe.rst:54
# 4d1a537087cc4201b72c589ee05aeae1
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic. The topics in the tables below provide links to individual pages for each method."
msgstr ""

#: ../source/dsl_recipe.rst:60
#: ../source/dsl_recipe.rst:91
# 1bb25a4ea91b4bfca14214e0b02b75a0
# 93ce95de15aa4048b4b1ca06ca74d031
msgid "Methods"
msgstr ""

#: ../source/dsl_recipe.rst:61
#: ../source/dsl_recipe.rst:92
# 21893324e3ce4bd9a012d19c01523af0
# ca4b3c48ba8c4dccb872b4a8a2949a53
msgid "Description"
msgstr ""

#: ../source/dsl_recipe.rst:62
# f3b3dd739d954603a2f74130f4a41089
msgid ":doc:`attribute? </dsl_recipe_method_attribute>`"
msgstr ""

#: ../source/dsl_recipe.rst:63
# 154972784d53461ea543c0743e66bc0d
msgid "Use in a recipe to include an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:64
# c34c19d40f1a4ed59710dd23a4b4e237
msgid ":doc:`cookbook_name </dsl_recipe_method_cookbook_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 4c713bc4cee842f2b4c203d66215b20b
msgid "Use in a recipe to get the name of the cookbook in which a recipe is located."
msgstr ""

#: ../source/dsl_recipe.rst:66
# 49b2fedbbbdf4a01bbb847eb758db52e
msgid ":doc:`data_bag, data_bag_item </dsl_recipe_method_data_bag>`"
msgstr ""

#: ../source/dsl_recipe.rst:67
# fbd1788d5a5540a3a70f5dc466563347
msgid "Use in a recipe to include a data bag or data bag item."
msgstr ""

#: ../source/dsl_recipe.rst:68
# 1b2c80b0218a4f74b6107b71fb068f3f
msgid ":doc:`platform? </dsl_recipe_method_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:69
# 051ed5ca1a7d49fbac9253339a100a68
msgid "Use in a recipe to check for the platform."
msgstr ""

#: ../source/dsl_recipe.rst:70
# b175759e9a944e31a7ffc0d3c28876ad
msgid ":doc:`platform_family? </dsl_recipe_method_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:71
# 5fdff9e3f5e6465ca36c0d23d9d5e05d
msgid "Use in a recipe to check for the platform family."
msgstr ""

#: ../source/dsl_recipe.rst:72
# ab01c4aa9e5546ab8e41ede6c538506f
msgid ":doc:`recipe_name </dsl_recipe_method_recipe_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:73
# ef245eb6391c4e9cb4295afcaa9e35fa
msgid "Use in a recipe to get the name of a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:74
# 31a98432ec8c4283b8457a35374d62ed
msgid ":doc:`resources </dsl_recipe_method_resources>`"
msgstr ""

#: ../source/dsl_recipe.rst:75
# b0c186d4c0c84ec08c8f8b8a3835ae3b
msgid "Use in a recipe to include a resource."
msgstr ""

#: ../source/dsl_recipe.rst:76
# 5f01a18f8f194ce7934594679d040e8f
msgid ":doc:`search </dsl_recipe_method_search>`"
msgstr ""

#: ../source/dsl_recipe.rst:77
# b88578ecdcf14f68b65fa9a8084a46fc
msgid "Use in a recipe to include search results."
msgstr ""

#: ../source/dsl_recipe.rst:78
# a4ef204e5ace4ecb9af9565e74af1e27
msgid ":doc:`tag, tagged?, untag </dsl_recipe_method_tag>`"
msgstr ""

#: ../source/dsl_recipe.rst:79
# d380bd4c2bdf42bb9ce9f92bba90027b
msgid "Use in a recipe to use and apply tags."
msgstr ""

#: ../source/dsl_recipe.rst:80
# ff75881d7ee548c5ba484e569b7adf90
msgid ":doc:`value_for_platform </dsl_recipe_method_value_for_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:81
# f0ab7f2da6fd42db96a7cdb63fbd3081
msgid "Use in a recipe to check for a value for a platform."
msgstr ""

#: ../source/dsl_recipe.rst:82
# f5543f0ef7f44e4a900a38ecfab2d724
msgid ":doc:`value_for_platform_family </dsl_recipe_method_value_for_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:83
# ee0663f0a40f47c0b21bc1b86f29cce2
msgid "Use in a recipe to check for a value for a platform family."
msgstr ""

#: ../source/dsl_recipe.rst:85
# 03a95658ed4f4115b3129b52cd41d1f4
msgid "The following recipe DSL methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/dsl_recipe.rst:93
# 07ea4306cfc34cddbadff3bb70d5dff4
msgid ":doc:`registry_data_exists? </dsl_recipe_method_registry_data_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:94
# 18da5372b42c4668a013fe172ada8f58
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/dsl_recipe.rst:95
# dd3b47d8aaa14106b673300dce3e06b0
msgid ":doc:`registry_get_subkeys </dsl_recipe_method_registry_get_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:96
# fe42c06487084c31a7c27c4c3e6b0292
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/dsl_recipe.rst:97
# 2e015ab9facc49ad9742ab70b60e866e
msgid ":doc:`registry_get_values </dsl_recipe_method_registry_get_values>`"
msgstr ""

#: ../source/dsl_recipe.rst:98
# d2d7aa4ee7494bf495fe6ceb01339ce0
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 51787897e85648d59f00a73e59514503
msgid ":doc:`registry_has_subkeys? </dsl_recipe_method_registry_has_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:100
# 06f83d464bdf4b36aca96eff1ee10ac3
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:101
# 985cd0a585294617846c442a690bfa97
msgid ":doc:`registry_key_exists? </dsl_recipe_method_registry_key_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:102
# 2369edca2c114351a696a1efba5781a1
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/dsl_recipe.rst:103
# 2753cf76535a4d12a3323bebf72d0287
msgid ":doc:`registry_value_exists? </dsl_recipe_method_registry_value_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:104
# ae648455935e479499dbcf0c0ccbaa07
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/dsl_recipe.rst:106
# 0508f2402a6a4dbb810b7fcc29385db0
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""


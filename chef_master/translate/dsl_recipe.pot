# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-21 10:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:8
# d8589e3e0a944b4abfb98114bc621550
msgid "About the Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# df37feb54980438799abf3f9f2e6e376
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell the |chef client| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:12
# 38205aa3cb4241c4b76174a5ac312a2b
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:14
# 2b41e1090c874ad29edab58a530cd9f3
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic."
msgstr ""

#: ../source/dsl_recipe.rst:17
# fcc579d4426f45bc81d5b6b8fa3839c2
msgid "Use Ruby"
msgstr ""

#: ../source/dsl_recipe.rst:18
# 8a42ffd0f63040e199749e2abc922b4d
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:21
# 65e1e106610e4498ae4e4aa311d4f4fa
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 09661367eb2e4bd483354aa81c1e00ab
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# cb0f3968fad64e78a9090a23e217bddd
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:25
# 0be42ff26bb24e99a520aa4f543ef4ff
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 049cb8a584154c5384c6abaf2953f4e6
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 8ff33a8cb01342f0a4f5f4a84c80a132
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 918ee05bb1bc422a9b8c753e49f374bf
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:29
# 5c28c4d776224912a200659f644eebb2
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 191d17a397ac4f18ab73c23b39975733
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
# 4cfe7f115d4e48a1a274f752b83bf4cc
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:33
# 4ed5324639b644d5a68d423ce1ee51a1
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 76f7b82f51714f648c4d33389eb6ac68
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:10
# 942ee4b02a1b4287b1dee7d476856d92
# c3b8cdc72ea44313834cec2e4ac53968
msgid "For example:"
msgstr ""

#: ../source/dsl_recipe.rst:39
# ff426b931ea141018244455fdafd576f
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 023abb7d26aa48deaea581f7112071c9
msgid "A recipe can include one (or more) recipes located in external cookbooks by using the ``include_recipe`` method. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:16
# 38bcfbaaa2f04acfa3667c2013f1f6c7
msgid "If the ``include_recipe`` method is used more than once to include a recipe, only the first inclusion is processed and any subsequent inclusions are ignored."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 437b8d7c74504e579a3877d45c2a97f7
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 1898513f0d2a46ada1572ed2975e5e37
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:47
# 59ae599c0cd14ad699ffd458bbdd00df
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 0b394138b7354afeb7f8678309ec04eb
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 9908dd560c064e6ca4920c5dd58dad22
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when retrieving the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:51
# a54c42e9dadc465699fb190a16a98e2e
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 16decab9beb3415ca2d87a3a0868e8d8
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
# 323ec7954de84648802d67854ffcd749
msgid "``platform?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
# 36b2966328e84271a9937acd79fb9515
msgid "``platform_family?``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
# 5e9f5b39205c4c60ae11529010ddfe9d
msgid "``value_for_platform``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
# 5068d0f99245496bae2ec5bdf4a8a348
msgid "``value_for_platform_family``"
msgstr ""

#: ../source/dsl_recipe.rst:54
# ffdc34f22d4447b293a6c6d35ceddba0
msgid "Read all about the `Recipe DSL <http://docs.opscode.com/chef/dsl_recipe.html>`_ in a single topic. The topics in the tables below provide links to individual pages for each method."
msgstr ""

#: ../source/dsl_recipe.rst:60
#: ../source/dsl_recipe.rst:91
# 601a2d9443ff405f8fbc11081882bb88
# 4ed3d3a50c89485dbc2a41bd967171ee
msgid "Methods"
msgstr ""

#: ../source/dsl_recipe.rst:61
#: ../source/dsl_recipe.rst:92
# 5bcbe9e4e064465c8d10896ef8e37d0a
# dfba79cf73464f369ddc1802f2322672
msgid "Description"
msgstr ""

#: ../source/dsl_recipe.rst:62
# ac8e29e1dc06431e82e21c57126058f8
msgid ":doc:`attribute? </dsl_recipe_method_attribute>`"
msgstr ""

#: ../source/dsl_recipe.rst:63
# 752440100f9f4ea6aa6e3a13617b95e3
msgid "Use in a recipe to include an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:64
# ba26983d97f745e2a199f9dce2ee8a25
msgid ":doc:`cookbook_name </dsl_recipe_method_cookbook_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 7b09d4aaf8234e45b665420ea42ab91c
msgid "Use in a recipe to get the name of the cookbook in which a recipe is located."
msgstr ""

#: ../source/dsl_recipe.rst:66
# 0b7eb93541264ed6a0c3dddb96f1e659
msgid ":doc:`data_bag, data_bag_item </dsl_recipe_method_data_bag>`"
msgstr ""

#: ../source/dsl_recipe.rst:67
# 21483e9e4dce4b938391ea78ec87c2a7
msgid "Use in a recipe to include a data bag or data bag item."
msgstr ""

#: ../source/dsl_recipe.rst:68
# 1c8e6ed5a7104affb9e9d1c7a607643e
msgid ":doc:`platform? </dsl_recipe_method_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:69
# 4ed41c38e16a480c9ff3d7471740c679
msgid "Use in a recipe to check for the platform."
msgstr ""

#: ../source/dsl_recipe.rst:70
# 04a501390b8847668e0c778e01698ef4
msgid ":doc:`platform_family? </dsl_recipe_method_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:71
# 6a577d4d309c4901a89fe70decd3a81c
msgid "Use in a recipe to check for the platform family."
msgstr ""

#: ../source/dsl_recipe.rst:72
# 5f88e1b9e0e74caebf41c099cb9f8650
msgid ":doc:`recipe_name </dsl_recipe_method_recipe_name>`"
msgstr ""

#: ../source/dsl_recipe.rst:73
# d9880ce8ae7d4f13a0266f75bad1b24f
msgid "Use in a recipe to get the name of a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:74
# e4dd65ad6674452893ba26824ef5e045
msgid ":doc:`resources </dsl_recipe_method_resources>`"
msgstr ""

#: ../source/dsl_recipe.rst:75
# fff371239f2842c88585f0d91282d1bb
msgid "Use in a recipe to include a resource."
msgstr ""

#: ../source/dsl_recipe.rst:76
# 444e8ad204664aa9bfc4da840b8a1bd5
msgid ":doc:`search </dsl_recipe_method_search>`"
msgstr ""

#: ../source/dsl_recipe.rst:77
# 6b979473d0e2477190ae07682832a290
msgid "Use in a recipe to include search results."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 3f5e4ea6ef7b47a3890c2d9ffd90a180
msgid ":doc:`tag, tagged?, untag </dsl_recipe_method_tag>`"
msgstr ""

#: ../source/dsl_recipe.rst:79
# 9786b67f026443a190c52da9d18ffef5
msgid "Use in a recipe to use and apply tags."
msgstr ""

#: ../source/dsl_recipe.rst:80
# 011c484e0fdd4c8d8955ef1a3cede3e2
msgid ":doc:`value_for_platform </dsl_recipe_method_value_for_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:81
# 99af5bb3e87543d9a9920790a89fd57b
msgid "Use in a recipe to check for a value for a platform."
msgstr ""

#: ../source/dsl_recipe.rst:82
# 6326f9f0ed3f4841a3be4dd9fc22a412
msgid ":doc:`value_for_platform_family </dsl_recipe_method_value_for_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:83
# 15d76da3090c44d79a5b74e89f16e40f
msgid "Use in a recipe to check for a value for a platform family."
msgstr ""

#: ../source/dsl_recipe.rst:85
# 26e2166408394e29ae412a34856a1d6b
msgid "The following recipe DSL methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/dsl_recipe.rst:93
# d3111106e4934cf0940770be25167d80
msgid ":doc:`registry_data_exists? </dsl_recipe_method_registry_data_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:94
# 4f434de6b6614498a8cc84237df6c6c1
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/dsl_recipe.rst:95
# 79d6995a0c904a2f8a3fd36404f22fc7
msgid ":doc:`registry_get_subkeys </dsl_recipe_method_registry_get_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:96
# c2f7347c9bb2474ea723756f0b136fed
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/dsl_recipe.rst:97
# 1af528b40d184e519baea57a8b460948
msgid ":doc:`registry_get_values </dsl_recipe_method_registry_get_values>`"
msgstr ""

#: ../source/dsl_recipe.rst:98
# 515e73c2a82b4e15a715fe8b420c1d2e
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 56562593cbc34d5893000dbb7c08273c
msgid ":doc:`registry_has_subkeys? </dsl_recipe_method_registry_has_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:100
# 671e6dea4543446ba5da254ffb88a321
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:101
# b05fd451c7ca4323b58e1975be04be78
msgid ":doc:`registry_key_exists? </dsl_recipe_method_registry_key_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:102
# 8cfad5c8f5e04971af7110ff793d446b
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/dsl_recipe.rst:103
# edd78b1774e24828ba7da80150069bca
msgid ":doc:`registry_value_exists? </dsl_recipe_method_registry_value_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:104
# 6707f6841ea148528b297c7ace1c45c9
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/dsl_recipe.rst:106
# 776896e54a4f4a6a930d0916bb56953e
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""


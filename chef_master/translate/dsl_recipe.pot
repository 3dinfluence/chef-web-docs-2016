# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-06 17:52\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# 3bab0b3131354ad6a264dd360c2d75a9
msgid "About the Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# dd25be79552d49dfae16960e7c241207
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:38
# d06015759ca44be597d2cf9db05bfd10
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:44
# bd667fd73d2943ffa087995ee54dcdfc
msgid "Approach"
msgstr ""

#: ../source/dsl_recipe.rst:45
#: ../source/dsl_recipe.rst:58
#: ../source/dsl_recipe.rst:85
# 8905582a970e40b5a64fc1e41b1fc2a8
# 3291ff8751b746098cb26e069f26d35f
# 8465d5c92f854b8f96671deae171c9bc
msgid "Description"
msgstr ""

#: ../source/dsl_recipe.rst:46
# 0c78e387df0843fea68b39a8cce612d4
msgid ":doc:`Use Ruby </dsl_recipe_use_ruby>`"
msgstr ""

#: ../source/dsl_recipe.rst:47
# 6337b054b78b437784451a6a02a7483b
msgid "Common Ruby techniques can be used with the Recipe DSL methods, including ``if`` and ``case`` statements."
msgstr ""

#: ../source/dsl_recipe.rst:48
# 85e08338ca0549168fc53e6dd89abd4e
msgid ":doc:`dsl_recipe_include_recipes`"
msgstr ""

#: ../source/dsl_recipe.rst:49
# 52454790f6474f26ba3dd2f41f9704bf
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# b365b70ee5ea41208cf74b836be604a4
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
# c3af22548baa46c9a674e63a3bb57cd1
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
# c09ded9d1f9b4c538063340b081d11ff
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
# fef82b72e9104576a17b204d0a3ef6c9
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
# 67318cebcf684518b0ce66e38128faf0
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:57
#: ../source/dsl_recipe.rst:84
# 9ea0fd31ef0245a0bd5e2ecd719e5f6f
# 0c89ed9a4d6d4ad4a60df2fa9f83ed85
msgid "Methods"
msgstr ""

#: ../source/dsl_recipe.rst:59
# db8aad5165ad4740ba564ff9630d7199
msgid ":doc:`attribute? </dsl_recipe_method_attribute>`"
msgstr ""

#: ../source/dsl_recipe.rst:60
# e858346b2d15449587c088d513af4fd7
msgid "Use in a recipe to include an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:61
# 587d46986fdb42acb55436a87a3db56b
msgid ":doc:`data_bag, data_bag_item </dsl_recipe_method_data_bag>`"
msgstr ""

#: ../source/dsl_recipe.rst:62
# e18c739a34a243f2adb712ffdb15a75f
msgid "Use in a recipe to include a data bag or data bag item."
msgstr ""

#: ../source/dsl_recipe.rst:63
# bd7cb171e1834a5b950f242509429b09
msgid ":doc:`platform? </dsl_recipe_method_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:64
# 8d00e93e20af4d6b9c8e7e3ba218b80b
msgid "Use in a recipe to check for the platform."
msgstr ""

#: ../source/dsl_recipe.rst:65
# 13212eed16e340e394e9cb6334856fe1
msgid ":doc:`platform_family? </dsl_recipe_method_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:66
# 720017dc2fd74e8b870418d4edc85308
msgid "Use in a recipe to check for the platform family."
msgstr ""

#: ../source/dsl_recipe.rst:67
# 68a83e1b47944e609c0536dd08ad487c
msgid ":doc:`resources </dsl_recipe_method_resources>`"
msgstr ""

#: ../source/dsl_recipe.rst:68
# 8603c3b61acb4e419352f2df00624dde
msgid "Use in a recipe to include a resource."
msgstr ""

#: ../source/dsl_recipe.rst:69
# e690ab4d3ba7403f8cbc8be89ffeaf81
msgid ":doc:`search </dsl_recipe_method_search>`"
msgstr ""

#: ../source/dsl_recipe.rst:70
# f7140b4282f44c9195b18d6c884fdd22
msgid "Use in a recipe to include search results."
msgstr ""

#: ../source/dsl_recipe.rst:71
# 1621a17b7b7f45b699dc95701d2c3de0
msgid ":doc:`tag, tagged?, untag </dsl_recipe_method_tag>`"
msgstr ""

#: ../source/dsl_recipe.rst:72
# 7e7d1ddc00f54757a6d25578a99e6202
msgid "Use in a recipe to use and apply tags."
msgstr ""

#: ../source/dsl_recipe.rst:73
# 9fe2075e24064faf9093a67905d69ffa
msgid ":doc:`value_for_platform </dsl_recipe_method_value_for_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:74
# 16230aa83af6479f831d4c5f8d345638
msgid "Use in a recipe to check for a value for a platform."
msgstr ""

#: ../source/dsl_recipe.rst:75
# 93da35aec9224c209dec9295d6517eb5
msgid ":doc:`value_for_platform_family </dsl_recipe_method_value_for_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:76
# f50ec35185b643ca9568c6294312b644
msgid "Use in a recipe to check for a value for a platform family."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 5c927e3bcfa64e1a81842c233a51e9b4
msgid "The following recipe DSL methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/dsl_recipe.rst:86
# 01570e2cbac54e638d77c0f5a85cbc0d
msgid ":doc:`registry_data_exists? </dsl_recipe_method_registry_data_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:87
# 4689432e5c6f4642a47d0721129019cd
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/dsl_recipe.rst:88
# b60581332fef429f9a3d8da02f9a6a5e
msgid ":doc:`registry_get_subkeys </dsl_recipe_method_registry_get_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:89
# 2e0daa3b5bd941d99a338e43a783af13
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/dsl_recipe.rst:90
# 9ec9c6471b824e4dbb7ce836efa5be13
msgid ":doc:`registry_get_values </dsl_recipe_method_registry_get_values>`"
msgstr ""

#: ../source/dsl_recipe.rst:91
# ebd785461e244eab9e659233218a87b2
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/dsl_recipe.rst:92
# 433b0230f4774712879dbbcdab3bb67c
msgid ":doc:`registry_has_subkeys? </dsl_recipe_method_registry_has_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:93
# 1d2ecbc2462040648f22e9f2908a9ce2
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:94
# 3a7d13eeb62b485bb2b308dd2a8216f0
msgid ":doc:`registry_key_exists? </dsl_recipe_method_registry_key_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:95
# 3edb52cb2736462c9eb8a65f471e4f65
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/dsl_recipe.rst:96
# 6236885c257048ed9a5a7e0b27831fa6
msgid ":doc:`registry_value_exists? </dsl_recipe_method_registry_value_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:97
# a722a8a42eac4e49ba4bf77a41cb40e7
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/dsl_recipe.rst:99
# e18e60af1bf345a296f927c435452979
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-10 09:56\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# dcb7102017cb4b26a7089a6c57611bf4
msgid "About the Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 34ddfb55340d418baf39e6d68b585c0f
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:38
# f83087e42a7a47a39f216e23023c257d
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:44
# fed491a0d4544e5da6badb7cc41e8852
msgid "Approach"
msgstr ""

#: ../source/dsl_recipe.rst:45
#: ../source/dsl_recipe.rst:58
#: ../source/dsl_recipe.rst:85
# cb3329beffcd46318ed6eca072e3ab35
# ade6393f640c41038cc5073b02a0ff0c
# 70ba349d2a614c5999db056cc95b4878
msgid "Description"
msgstr ""

#: ../source/dsl_recipe.rst:46
# a64b106a73334c8aa571b5c94e7295e8
msgid ":doc:`Use Ruby </dsl_recipe_use_ruby>`"
msgstr ""

#: ../source/dsl_recipe.rst:47
# 380ff4a7e31d423fbd9a489a71712fc6
msgid "Common Ruby techniques can be used with the Recipe DSL methods, including ``if`` and ``case`` statements."
msgstr ""

#: ../source/dsl_recipe.rst:48
# 207ff9e871db4e21a9270daa2a6958b0
msgid ":doc:`dsl_recipe_include_recipes`"
msgstr ""

#: ../source/dsl_recipe.rst:49
# d54e6a55322c48be87f6b05761f8dcc9
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 20efbd5f34db43019e9b5244c53bf255
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
# 1c37ed89671b4604af9c8741d9c77bf8
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
# 344a68a19f444889bdccaa0ca77cc6c5
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
# 938c4244463c4fea86eadc32e90ba7ed
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
# d9faa26c2d324b3886a8be35f7131ad7
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:57
#: ../source/dsl_recipe.rst:84
# 019ffe3cec6a4df4befed7e28e9cf2b5
# 34f36def13f84aabb32d26e6d91b5dbb
msgid "Methods"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 2a3c9a24d07a4d1ca8c7290e4b636d2b
msgid ":doc:`attribute? </dsl_recipe_method_attribute>`"
msgstr ""

#: ../source/dsl_recipe.rst:60
# cf2e7a36b2854fe588fda95f6dac410d
msgid "Use in a recipe to include an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:61
# 16300bc7d79944718ae384401b9c07e8
msgid ":doc:`data_bag, data_bag_item </dsl_recipe_method_data_bag>`"
msgstr ""

#: ../source/dsl_recipe.rst:62
# 4eaa2fa472b14de7ab7d13077c30617c
msgid "Use in a recipe to include a data bag or data bag item."
msgstr ""

#: ../source/dsl_recipe.rst:63
# f8551fbea17a496db08d73e912ef806d
msgid ":doc:`platform? </dsl_recipe_method_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:64
# 5ce1cd9535f0476c9949f2400dffddd9
msgid "Use in a recipe to check for the platform."
msgstr ""

#: ../source/dsl_recipe.rst:65
# bfcccf61de6a4fa0b27063f701cae450
msgid ":doc:`platform_family? </dsl_recipe_method_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:66
# 6df6bee9fdc04bec99db5bc81819c4e6
msgid "Use in a recipe to check for the platform family."
msgstr ""

#: ../source/dsl_recipe.rst:67
# 818c601392f24b7b92b1eddbb620340c
msgid ":doc:`resources </dsl_recipe_method_resources>`"
msgstr ""

#: ../source/dsl_recipe.rst:68
# e6dbef182f6e42aa9f0169e1fd76231e
msgid "Use in a recipe to include a resource."
msgstr ""

#: ../source/dsl_recipe.rst:69
# aa5265dee3044b65bba3ca355938e522
msgid ":doc:`search </dsl_recipe_method_search>`"
msgstr ""

#: ../source/dsl_recipe.rst:70
# 61a58fdfd6994e1e839eae19e14c394f
msgid "Use in a recipe to include search results."
msgstr ""

#: ../source/dsl_recipe.rst:71
# 15fa0ba48abb444db929bea768bfdbd7
msgid ":doc:`tag, tagged?, untag </dsl_recipe_method_tag>`"
msgstr ""

#: ../source/dsl_recipe.rst:72
# aafac7bf8c4049d597e0f7974cfe4789
msgid "Use in a recipe to use and apply tags."
msgstr ""

#: ../source/dsl_recipe.rst:73
# 607869d8cd894021b44cb611ddd57277
msgid ":doc:`value_for_platform </dsl_recipe_method_value_for_platform>`"
msgstr ""

#: ../source/dsl_recipe.rst:74
# df974eb649db4b1fac0a6b1df883bbe2
msgid "Use in a recipe to check for a value for a platform."
msgstr ""

#: ../source/dsl_recipe.rst:75
# 30ecec88f6cf4bffa10f3259c1ea7e1b
msgid ":doc:`value_for_platform_family </dsl_recipe_method_value_for_platform_family>`"
msgstr ""

#: ../source/dsl_recipe.rst:76
# da1e560d656e479784666fd7ccf9631b
msgid "Use in a recipe to check for a value for a platform family."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 91bc6941a5cd4399a39412bc5b8d7142
msgid "The following recipe DSL methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/dsl_recipe.rst:86
# 5ee6de3efb044ddfb602e3dfd22e085b
msgid ":doc:`registry_data_exists? </dsl_recipe_method_registry_data_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:87
# 231d34c019dc49babd0401148bcc7656
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/dsl_recipe.rst:88
# 86f0f8eb0bf74fb1b0dd19a01b95afc4
msgid ":doc:`registry_get_subkeys </dsl_recipe_method_registry_get_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:89
# 9977c4449f8e40309e9c55e4eaf914b7
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/dsl_recipe.rst:90
# 44f17efde87b478b9eff7c1521e5bf33
msgid ":doc:`registry_get_values </dsl_recipe_method_registry_get_values>`"
msgstr ""

#: ../source/dsl_recipe.rst:91
# 939ceb92f312404b8491c514fbcea79b
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/dsl_recipe.rst:92
# bee1cd7c902443408b17c9f3c8c23c2a
msgid ":doc:`registry_has_subkeys? </dsl_recipe_method_registry_has_subkeys>`"
msgstr ""

#: ../source/dsl_recipe.rst:93
# d6fe39f88bc64cd6907d687052ec6b71
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:94
# abd29e6625bc4914bb80d8c9669715af
msgid ":doc:`registry_key_exists? </dsl_recipe_method_registry_key_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:95
# eeec8f6d26ec47deaea3b81320b9d224
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/dsl_recipe.rst:96
# c6a484572e28491c93c07e83dd533fff
msgid ":doc:`registry_value_exists? </dsl_recipe_method_registry_value_exists>`"
msgstr ""

#: ../source/dsl_recipe.rst:97
# 33ab360216bb495c9d35865b0f3ebac2
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/dsl_recipe.rst:99
# b9314fbbca9f43bc8314b0d2ef21b428
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""


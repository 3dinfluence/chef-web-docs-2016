# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-27 22:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_private_keys.rst:33
# 2bc02c94fa2d4bf8a72fa9a699fce5ba
msgid "Public and Private Keys"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 4c61731b68ee40c9bf55754144533ddc
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_private_keys.rst:38
# 5afd2940e961464f9933b8dc403ef83c
msgid "How Keys are Used?"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:4
# f2fe809eefe843d1859fc5f7d2492d96
msgid "The authentication process ensures the |chef server| responds only to requests made by trusted users. A public key encryption is used for all server types: |chef server oec| (hosted and non-hosted), and |chef server osc|. When a node and/or a workstation is configured to run the |chef client|, both public and private keys are created. The public key is stored on the |chef server|, while the private key is returned to the user for safe keeping. (The private key is a .pem file located in the ``.chef`` directory or in ``/etc/chef``.) The following executables use the |api chef server| when communicating with the |chef server|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:6
#: ../source/chef_private_keys.rst:42
# 41f8ba1d54da439e840c6f140726bdd7
# 3d750e8418ca418da197519495218b84
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:7
# 468d92641f7e42ffa6bd7ed24a33a8f4
msgid "|knife|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:8
# ed85d269cc4540c5b632e280f1fe78e8
msgid "|chef validator| (only during the first |chef client| run on a node)"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:10
# 8eb38d2efc53433c875ce6734c4025d1
msgid "Each request to the |chef server| from those executables encrypts a special group of HTTP headers along with the private key. The |chef server| then uses the public key to decrypt the headers and verify the contents."
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 39209d2136f947e5a37982b4a69913b2
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../source/chef_private_keys.rst:46
# 097f7d5e8c884ef3b6d7a51234bc8aaa
msgid "Knife"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# fadf95ad1c914d0f9f9f12c9da0eb42c
msgid "RSA public key-pairs are used to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../source/chef_private_keys.rst:49
# a8809f9a5cd141a993128b10ded762c0
msgid "|knife| can also use the |subcommand knife exec| subcommand to make specific, authenticated requests to the |chef server|. |knife| plugins can also make authenticated requests to the |chef server| by leveraging the |subcommand knife exec| subcommand."
msgstr ""

#: ../source/chef_private_keys.rst:52
# 7fc9ea94f13b4ef7b5a43e3d5ec58e41
msgid "|chef validator|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_chef_validator.rst:5
# 0d5025f906db4a0ab0ec9af8ecb93c44
msgid "Every request from the |chef client| to the |chef server| must be an authenticated request using the |api chef server|. When the |chef client| starts a |chef client| run, a check is done to see if the client key exists on the node at ``/etc/chef/client.pem``. If the key exists, it is used as part of the authentication request to the |chef server|. If the key does not exist, the |chef client| will use the key assigned to the |chef validator| (``/etc/chef/validation.pem``) to ensure that each node can make an authenticated request to the |chef server| during its first |chef client| run. The key pair used by the |chef validator| is created when the |chef client| is installed on a node, either manually or using a |knife| bootstrap operation. If the |chef validator| is unable to make an authentication request to the |chef server|, the |chef client| run fails."
msgstr ""

#: ../source/chef_private_keys.rst:57
# 7c0d548d3ff64e8faf2517c6e56d1072
msgid "Where are Keys Stored?"
msgstr ""

#: ../source/chef_private_keys.rst:58
# 37f6c263ea05435594dc327aa963a403
msgid "Keys are stored in different locations, depending on if the location is a node or a workstation."
msgstr ""

#: ../source/chef_private_keys.rst:61
# ae98f8f09fc9443491c165a0aa6521ee
msgid "Nodes"
msgstr ""

#: ../source/chef_private_keys.rst:62
# b0311cf80b1642d58b0e3e05f9f63009
msgid "Each node stores its private key locally. This private key is generated as part of the bootstrap process that initially installs the |chef client| on the node. The first time |chef client| runs on that node, it uses the |chef validator| to authenticate, but then on each subsequent run it uses the private key generated for that client by the |chef server|."
msgstr ""

#: ../source/chef_private_keys.rst:65
# b872a0e8c5944096bc44001d4a1d7c56
msgid "Workstations"
msgstr ""

#: ../source/chef_private_keys.rst:66
# d6744d0183f4490aabbb4a42bcad6d06
msgid "Each workstation stores its private key in the |chef repo|. This private key is generated by the |chef server| and must be download from the server and copied to the ``.chef`` directory in the |chef repo|. If a new private key is required, simply regenerate it from the |chef server| and re-copy it to the |chef repo|."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# b3948c476f7c44a3adb9e1512cfd4469
msgid "The |chef repo| is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 12845a34aee9472e83daa8e8abef7b68
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:8
# 2ded559acb004ce5934a423e5c34b584
msgid "Roles"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 9d2bf33dce5943ceac4b771f7351b28b
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:10
# c6058f6519f54098b62c84aa007529ba
msgid "Environments"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# bd5480207183410f9a7db32a00667eeb
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 45bac4b443454c87b1aa2b4083dbd38f
msgid "The |chef repo| is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef repo| should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# deffb363a3e4421b89441cfa017aaca2
msgid "|knife| is used to upload data to the |chef server| from the |chef repo|. Once uploaded, that data is used by the |chef client| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../../includes_repository/includes_repository_directory_chef.rst:5
# 067bbfc973fd46b9b2a13dc870919571
msgid "The ``.chef/`` directory is a hidden directory that is used to store .pem validation that are provided by the |chef server| and a |knife rb| file. These files are required for interaction with a |chef server|."
msgstr ""

#: ../source/chef_private_keys.rst:74
# 9e7059ebda76442ca358b439dd265036
msgid "Generating Keys"
msgstr ""

#: ../source/chef_private_keys.rst:75
# 2888c5c4fb9746eea370d5c0b5872249
msgid "The |chef server| generates two types of private keys: one for nodes and workstations (typically referred to as a \"client key\") and the other for the organization. If (for any reason) a new key is required, the |chef server| can re-generate these keys."
msgstr ""


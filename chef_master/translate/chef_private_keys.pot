# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-07 08:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_private_keys.rst:34
# 42b8103508ea451e91ec4145981a634a
msgid "Public and Private Keys"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# c559bf211ca9473dba23e7f2b760f626
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_private_keys.rst:39
# f283de4f827544769a18d3b5f321b694
msgid "How Keys are Used?"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:4
# 0892e78c34cf400996757f9a64d97b10
msgid "The authentication process ensures the |chef server| responds only to requests made by trusted users. |chef| uses public key encryption for all server types: |chef hosted|, |chef private|, and the open source |chef server|. When a node and/or a workstation is configured to run |chef|, both public and private keys are created. The public key is stored on the |chef server|, while the private key is returned to the user for safe keeping. (The private key is a .pem file located in the .chef directory or in /etc/chef.) The following executables use the |api chef server| when communicating with the |chef server|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:6
# 34951a451b0a42189d2532bdd350677d
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:7
# e7cbaf1c77fc4f84895ef5e35b43cc09
msgid "|knife|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:8
# 1e47e8516c10492b91fe83cfa0b770eb
msgid "|chef validator| (only during the first |chef| run on a node)"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:10
# 32a6b31c42a44e91adaa0f8cd688507b
msgid "Each request to the |chef server| from those executables encrypts a special group of HTTP headers along with the private key. The |chef server| then uses the public key to decrypt the headers and verify the contents."
msgstr ""

#: ../source/chef_private_keys.rst:43
# 4897f660db984f5088556d1d5413fbeb
msgid "chef-client"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_chef_client.rst:5
# 0e9238c545024ec99ccd4aeabf94934d
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_private_keys.rst:47
# d151cff561d64ca7af5291b6f03d1cf9
msgid "Knife"
msgstr ""

#: ../../includes_security/includes_security_key_pairs_knife.rst:5
# 577d201b4fe142a389ea59935e12690e
msgid "|chef| uses RSA public key-pairs to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../source/chef_private_keys.rst:50
# 11041eedc7bb43b38f36d55cc84dccb8
msgid "|knife| can also use the ``knife exec`` subcommand to make specific, authenticated requests to the |chef server|. |knife| plugins can also make authenticated requests to the |chef server| by leveraging the ``knife exec`` subcommand."
msgstr ""

#: ../source/chef_private_keys.rst:53
# 5ebde97af94247339b12fe5c5dc8f5a4
msgid "chef-validator"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_chef_validator.rst:5
# 9c7f511f984142608fbe0e3118ea14ee
msgid "Every request from the |chef client| to the |chef server| must be an authenticated request using the |api chef server|. When the |chef client| starts a |chef| run, a check is done to see if the client key exists on the node at ``/etc/chef/client.pem``. If the key exists, it is used as part of the authentication request to the |chef server|. If the key does not exist, |chef| will use the key assigned to the |chef validator| (``/etc/chef/validation.pem``) to ensure that each node can make an authenticated request to the |chef server| during its first |chef| run. The key pair used by the |chef validator| is created when |chef| is installed on a node, either manually or using a |knife| bootstrap operation. If the |chef validator| is unable to make an authentication request to the |chef server|, the |chef| run fails."
msgstr ""

#: ../source/chef_private_keys.rst:58
# c59172c6b5024135a97a99a0c354681c
msgid "Where are Keys Stored?"
msgstr ""

#: ../source/chef_private_keys.rst:59
# bd894fb3f08240a1a87beed290c62e71
msgid "Keys are stored in different locations, depending on if the location is a node or a workstation."
msgstr ""

#: ../source/chef_private_keys.rst:62
# fe0402c0a13d41de83c231ff2cfba2c6
msgid "Nodes"
msgstr ""

#: ../source/chef_private_keys.rst:63
# 7f32f19889ad4186acb52352c2833e79
msgid "Each node stores its private key locally. This private key is generated as part of the bootstrap process that initially installs the |chef client| on the node. The first time |chef| runs on that node, it uses the |chef validator| to authenticate, but then on each subsequent run it uses the private key generated for that client by the |chef server|."
msgstr ""

#: ../source/chef_private_keys.rst:66
# 6c1625cbb14b41e6b10bf8a2f7c9b127
msgid "Workstations"
msgstr ""

#: ../source/chef_private_keys.rst:67
# ee5efcc346814c02b2b55c315811bc9c
msgid "Each workstation stores its private key in the |chef| repository. This private key is generated by the |chef server| and must be download from the server and copied to the ``.chef`` directory in the |chef| repository. If a new private key is required, simply regenerate it from the |chef server| and re-copy it to the |chef| repository."
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 838d0e8d5b1c4f44b0b5bd83ff0b3476
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 311ab5bc413544cabbe1532284f8cfa0
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:8
# 6b3b3dc3abf54646a5cd49dea71a8460
msgid "Roles"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 360c02ab30bf40c0b57c6ec1be0813b4
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:10
# c1746fa9947f4fce88038f9860024628
msgid "Environments"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# f1bb58c1f20649058ea111f31ab15789
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# f6daf0686e1348f0829918bcb0396f59
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# e51bda3f1aea470ba4b3279f58042004
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../../includes_repository/includes_repository_directory_chef.rst:5
# 78f6a6a918ae4f1db0d093d93f56dee1
msgid "The ``.chef/`` directory is a hidden directory that is used to store .pem validation that are provided by the |chef server| and a |knife rb| file. These files are required for interaction with a |chef server|."
msgstr ""

#: ../source/chef_private_keys.rst:75
# 4a1e1f6c5f014af7a10c21e2e8fb8f24
msgid "Generating Keys"
msgstr ""

#: ../source/chef_private_keys.rst:76
# 6a5a8bf5eb764b79ac8701e1e8ceba9f
msgid "The |chef server| generates two types of private keys: one for nodes and workstations (typically referred to as a \"client key\") and the other for the organization. If (for any reason) a new key is required, the |chef server| can re-generate these keys."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:8
# 7a78fd5c740b4fe484842a144b998f59
msgid "Public and Private Keys"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef.rst:5
# 68c05a90a00a47c0a0a82e737121c843
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:13
# 6008b320dcfd411ba4a1651db50b9951
msgid "How Keys are Used?"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_auth/includes_chef_auth_authentication.rst:4
# 28da4e3bb95048978fb908387e61276f
msgid "The authentication process ensures the |chef server| responds only to requests made by trusted users. A public key encryption is used for all server types: |chef server oec| (hosted and non-hosted), and |chef server osc|. When a node and/or a workstation is configured to run the |chef client|, both public and private keys are created. The public key is stored on the |chef server|, while the private key is returned to the user for safe keeping. (The private key is a .pem file located in the ``.chef`` directory or in ``/etc/chef``.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_auth/includes_chef_auth_authentication.rst:6
# 4ba37d0c3da046e4ba4634fd2ad2397f
msgid "The |chef client| and |knife ctl| executables use the |api chef server| when communicating with the |chef server|. The |chef validator| uses the |api chef server|, but only during the first |chef client| run on a node."
msgstr ""

#: ../../../desktop/chef-docs/includes_chef_auth/includes_chef_auth_authentication.rst:8
# 7bfe81b4c10d4f10a719eec0adb28bbf
msgid "Each request to the |chef server| from those executables sign a special group of HTTP headers with the private key. The |chef server| then uses the public key to verify the headers and verify the contents."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:17
# 7d4adbdc5d274582a7dea15c9cd150ea
msgid "|chef client|"
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_key_pairs_chef_client.rst:5
# 74f2073f6b75488bbd75bf1abf30aed1
msgid "RSA public key-pairs are used to authenticate the |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and it ensures that only nodes that are properly registered with the |chef server| can be managed."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:21
# 68f0d721a3ef4454af490eb2da5d336b
msgid "|knife|"
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_key_pairs_knife.rst:5
# e96aa8c325c54b58a6bf84952ee7ef1f
msgid "RSA public key-pairs are used to authenticate |knife| with the |chef server| every time |knife| attempts to access the |chef server|. This ensures that each instance of |knife| is properly registered with the |chef server| and that only trusted users can make changes to the data."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:24
# 0e3e7b5a23314ddfa14fbae2e5dae182
msgid "|knife| can also use the |subcommand knife exec| subcommand to make specific, authenticated requests to the |chef server|. |knife| plugins can also make authenticated requests to the |chef server| by leveraging the |subcommand knife exec| subcommand."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:27
# 67eaa060a791423b9fd29be839f1d186
msgid "|chef validator|"
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_chef_validator.rst:5
# 88607ae15f5743dda479d8c0214e1241
msgid "Every request made by the |chef client| to the |chef server| must be an authenticated request using the |api chef server| and a private key. When the |chef client| makes a request to the |chef server|, the |chef client| authenticates each request using a private key located in ``/etc/chef/client.pem``."
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_chef_validator.rst:7
# 5c53121a3a4242fdb5b2a6533db6b5d2
msgid "However, during the first |chef client| run, this private key does not exist. Instead, the |chef client| will attempt to use the private key assigned to the |chef validator|, located in ``/etc/chef/validation.pem``. (If, for any reason, the |chef validator| is unable to make an authenticated request to the |chef server|, the initial |chef client| run will fail.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_chef_validator.rst:9
# dcf2febe9dfd494b82a18837a3c875b2
msgid "During the initial |chef client| run, the |chef client| will register with the |chef server| using the private key assigned to the |chef validator|, after which the |chef client| will obtain a ``client.pem`` private key for all future authentication requests to the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/includes_security/includes_security_chef_validator.rst:11
# a257cc773004457981f7a7d11cab66d0
msgid "After the initial |chef client| run has completed successfully, the |chef validator| is no longer required and may be deleted from the node. Use the ``delete_validation`` recipe found in the ``chef-client`` cookbook (https://github.com/opscode-cookbooks/chef-client) to remove the |chef validator|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:32
# 3a51249133444f4ba6d328c971c641b8
msgid "Where are Keys Stored?"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:33
# 474f11be517a4c62b428fa78ef44e46c
msgid "Keys are stored in different locations, depending on if the location is a node or a workstation."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:36
# 3a8893123b8d43ca8d7d07003439b123
msgid "Nodes"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:37
# 0f7815cf0e01480b9d33c77810ccaaea
msgid "Each node stores its private key locally. This private key is generated as part of the bootstrap process that initially installs the |chef client| on the node. The first time |chef client| runs on that node, it uses the |chef validator| to authenticate, but then on each subsequent run it uses the private key generated for that client by the |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:40
# a6fdad3e405544eca79d3effb2698f14
msgid "Workstations"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:41
# 1d071c4dbcda4fb0991475cdf597219f
msgid "Each workstation stores its private key in the |chef repo|. This private key is generated by the |chef server| and must be download from the server and copied to the ``.chef`` directory in the |chef repo|. If a new private key is required, simply regenerate it from the |chef server| and re-copy it to the |chef repo|."
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:5
# 4ded0fd00fc24b8d97fe1946709da7a8
msgid "The |chef repo| is the location in which the following data objects are stored:"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:7
# 5e24f2277fdd420bbc61245d536a7811
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:8
# d603e6e9b19941b880472c014f4df7b0
msgid "Roles"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:9
# 178d00be76c54215a085b4b3b968e637
msgid "Data bags"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:10
# 28d094182d314d1dacc8849350ec6f0e
msgid "Environments"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:11
# 8e57327a4ca542229714439cde731305
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:13
# 44a8f1340b2a4a63bade44dffe0a1866
msgid "The |chef repo| is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef repo| should be treated like source code."
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository.rst:15
# 1e952abe78184101b3019dc7051557b2
msgid "|knife| is used to upload data to the |chef server| from the |chef repo|. Once uploaded, that data is used by the |chef client| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository_directory_chef.rst:5
# 80e826376f8a47edaac5c60d112b09d2
msgid "The ``.chef/`` directory is a hidden directory that is used to store .pem validation that are provided by the |chef server| and a |knife rb| file. These files are required for interaction with a |chef server|."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:49
# eccf1fba16194d56b14844249f8ccba8
msgid "Generating Keys"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/chef_private_keys.rst:50
# de28485de7bf4e9aa21e7531c64622f7
msgid "The |chef server| generates two types of private keys: one for nodes and workstations (typically referred to as a \"client key\") and the other for the organization. If (for any reason) a new key is required, the |chef server| can re-generate these keys."
msgstr ""


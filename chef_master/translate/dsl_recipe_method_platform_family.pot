# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 09:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:8
# 5f9817d31ce9429383ddb15b54c2651a
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# ecbedc672b8a40de801d38433f4ac5f4
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef client| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 01334b0100944fa4940276502598a53d
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |redhat enterprise linux|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:41
# 770e185ca40a427aacdc7492604e3958
# 2beb337154034a4099a20222b0f7049b
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:13
# a6018b454a404070996e94d0e149d565
msgid "Parameters"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:4
# 1100af469207410e842840660d323eb2
msgid "The following parameters can be used with the ``platform_family?`` method:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:10
# e93d54e541b9430880189e74baf7f444
msgid "Parameter"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:11
# 768478e6263e47d5ac34773dde0127f2
msgid "Platforms"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:12
# 73fd94f5e29849618c7d43d14ce18a74
msgid "``arch``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:13
# 64e4e252ab674883a74b78499c3af87d
msgid "|archlinux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:14
# bf84d07cdb87474f9c40dfbcdcafe4fb
msgid "``debian``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:15
# 68b3178d8e564bc8b90a870b72dd1b9a
msgid "|debian|, |mint|, |ubuntu|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:16
# f0e3581f732e4f519b88573d3c63d46d
msgid "``fedora``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:17
# f61ae93ac02848aeb5d36724f415d4fa
msgid "|fedora|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:18
# ed48fd6374db4e9c94dbb7cbb9eaa1be
msgid "``gentoo``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:19
# 8644d15a086c49ae901ecc734ff099e6
msgid "|gentoo|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:20
# 23c4289ccf374cf0b2ac01c84c619447
msgid "``mac_os_x``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:21
# e9fb18593f1e4744b709632ebcf19d90
msgid "|mac os x|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:22
# d139ddad41ca4006b7e9eb92213398fa
msgid "``openbsd``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:23
# 377e459da09241eda655f068948023ba
msgid "|open bsd|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:24
# 0c9d7f227a1b446dadfbecf3b552102d
msgid "``rhel``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:25
# f632130655634798ae3c23d4e4ddfef8
msgid "|amazon linux|, |centos|, |oracle linux|, |scientific linux|, |redhat enterprise linux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:26
# e2ba9daa60084d2fa6390867b661b4d5
msgid "``slackware``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:27
# 3cfb6b9953eb491aa7a4c5863f0bd2f5
msgid "|slackware|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:28
# 45ecd20dceb44076a4c1c9e1f31a94a9
msgid "``suse``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:29
# bf919261a5e540bc92ba56281f23f03d
msgid "|suse|, |suse els|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:30
# 9ac508d1af9f4479a0a39e34ad18c762
msgid "``windows``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:31
# eccadbe5b95c47538837377c829bd138
msgid "|windows|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:33
# d6df3b3f500f46df924517821f7f6892
msgid "For |solaris|-related platforms, the ``platform_family`` method does not support the |solaris| platform family and will default back to ``platform_family = platform``. For example, if the platform is |omnios|, the ``platform_family`` is ``omnios``, if the platform is |smartos|, the ``platform_family`` is ``smartos``, and so on."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:35
# ef871616a44e44878f311a5e483759ef
msgid "For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:47
# bb635f69c42b4b818c1ba75cb4115aa9
msgid "``platform_family?`` will default to ``platform?`` when ``platform_family?`` is not explicitly defined."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:17
# 13bb758093d1474db0324a0712da714a
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:18
# 130864faac8d4dc1b4b266808a81f319
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:20
# d31b167f7ddb4b2aae955104b4e01c58
msgid "**Use a specific binary for a specific platform**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# f0f106ddec114ae5b3bbaeb117b34128
msgid "The following is an example of using the ``platform_family?`` method in the |dsl recipe| to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location, and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# f9a42fea8b6746ff92491d90e6f0a41c
msgid "where a command for installing |python| might look something like:"
msgstr ""


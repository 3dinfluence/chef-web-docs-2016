# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 22:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:33
# b1a9206363f348aa8abab045ad7daace
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 50eec3a108694905978e30ac7aa432e6
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef client| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 61b83fe146074da386f84092e5873731
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |redhat enterprise linux|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:41
# 5647757cf93145fbab070c4e0e585c00
# 083028a346294ebeb4ef19d514b3ead0
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:38
# e50a61987ad64bce81767f87a12a77a3
msgid "Parameters"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:4
# f3106e470beb44c6a6273bfa1986ab45
msgid "The following parameters can be used with the ``platform_family?`` method:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:10
# d61b277a7d514438af9e4a84ac5f4090
msgid "Parameter"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:11
# 8a024f783f504dbb98799b39ee12e0a7
msgid "Platforms"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:12
# 4056d08d55ea4bf0bd50d63575e91b79
msgid "``arch``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:13
# 4694a48c81204cd7a4df639f1bc44db7
msgid "|archlinux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:14
# f2e94adb0a154eac83260abeebb17bb4
msgid "``debian``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:15
# 7bfe9a1294934b80b6b35209cb470b60
msgid "|debian|, |mint|, |ubuntu|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:16
# cefe2268f2f241a1ad3ea7907238b698
msgid "``fedora``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:17
# 01220b4f2504403eb7c173ab05b789a1
msgid "|fedora|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:18
# f0be6f2ef55d45ab96e7f08514094a45
msgid "``gentoo``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:19
# 0af42e1c3cf4427ea41452aff2785db0
msgid "|gentoo|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:20
# 2bb376d2f41c4000b76e020bbf9d07e6
msgid "``mac_os_x``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:21
# 593d636798f5416bae12220d312022d9
msgid "|mac os x|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:22
# d158b7b80066417db94c2b5b3e226aee
msgid "``openbsd``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:23
# 831c5caac4a2446ea6a25ecdc8ca944b
msgid "|open bsd|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:24
# 8d5762583f9548ae8d3451bdb8b6d6ad
msgid "``rhel``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:25
# 72b85b6708834e4d9a0358095119b703
msgid "|amazon linux|, |centos|, |oracle linux|, |scientific linux|, |redhat enterprise linux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:26
# 9d5ea9ac27384228b47da4c489841d3b
msgid "``slackware``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:27
# bdd4950024f343299b906b594cb79416
msgid "|slackware|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:28
# c67d42baff924700b671d7d19c22f2e5
msgid "``suse``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:29
# 4cee9c4a62ce4c62b2955e97d3164259
msgid "|suse|, |suse els|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:30
# 1ec0aeb704af4a918fb5b72098ca52f1
msgid "``windows``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:31
# 2c2a86250a8f4a95ab466131bff59417
msgid "|windows|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:33
# a55bc6dcf64c4f1e88e4a0fa970609f1
msgid "For |solaris|-related platforms, the ``platform_family`` method does not support the |solaris| platform family and will default back to ``platform_family = platform``. For example, if the platform is |omnios|, the ``platform_family`` is ``omnios``, if the platform is |smartos|, the ``platform_family`` is ``smartos``, and so on."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:35
# b292059038a34835a69f472471fc8f07
msgid "For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:47
# 17ac7f7bc87f4256a2d4ef173b40af84
msgid "``platform_family?`` will default to ``platform?`` when ``platform_family?`` is not explicitly defined."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:42
# e53c0d2b665d40b88d2af0f52badeade
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:43
# e7f39bb6fade4bca90570b961a9d9795
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:45
# 52b1088260bf44c7918c3a40307776fa
msgid "**Use a specific binary for a specific platform**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 69e78f8c7cf34f47b75f78f77d863c36
msgid "The following is an example of using the ``platform_family?`` method in the |dsl recipe| to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location, and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 669ebe48f8f7488e895e8767598b2665
msgid "where a command for installing |python| might look something like:"
msgstr ""


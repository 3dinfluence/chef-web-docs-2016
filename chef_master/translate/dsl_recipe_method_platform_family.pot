# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-04 13:03\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:8
# 9621dde3ece342379f61642a710fc331
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 798d29f3d98b4759b80863b1055dc807
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef client| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 932c4fce654b44c7b9e5047bf46b4b6b
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |redhat enterprise linux|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:41
# ba82f2dce3d84bdcb3b117fcd6d76b7a
# bc7b7d00cc6b4221bcd41a21689814d4
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:13
# 4ac31ded894a4133854d7402e0da4ead
msgid "Parameters"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:4
# 5900a9cf736a446181034688a7e9971a
msgid "The following parameters can be used with the ``platform_family?`` method:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:10
# 13150ab019734fd883ea9658d84dbe3d
msgid "Parameter"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:11
# a27ca1a47d36467894785c457f8234ba
msgid "Platforms"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:12
# 14c2a2d5347043a995243470f7b1926c
msgid "``arch``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:13
# db06f47062f54f41a9ccca9a18de6331
msgid "|archlinux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:14
# 2eb9f599a5254806accbae11cb280283
msgid "``debian``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:15
# c66479139a6c4002b09913c9edbc11f0
msgid "|debian|, |mint|, |ubuntu|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:16
# c6d2a28a2f124a9db25d100c9a8e19a9
msgid "``fedora``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:17
# 37eae124c2784c2297e85386251c5927
msgid "|fedora|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:18
# 5c5cd147679d4a7eabbcc6768208d2a9
msgid "``gentoo``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:19
# 16877eea44884010a3b978fb1b335891
msgid "|gentoo|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:20
# f79372e243164cdb88a16a6d2217a180
msgid "``mac_os_x``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:21
# e245639211a64ac585ab4aaf725a5934
msgid "|mac os x|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:22
# 104f5a2153db474994fa6e6e1762020c
msgid "``openbsd``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:23
# 34c9f3fa6e0043c99974c9a2da2a1543
msgid "|open bsd|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:24
# 0c9851ec2fd64c75bfeac822fbd72628
msgid "``rhel``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:25
# 25e03a86df28446791059aa4c32f04c1
msgid "|amazon linux|, |centos|, |oracle linux|, |scientific linux|, |redhat enterprise linux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:26
# f427681661e546ed873f43e8ffe385f0
msgid "``slackware``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:27
# 1754769879e94e53a35f459dcf59e6a1
msgid "|slackware|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:28
# 067ab6d8ab62467ab57b80c26010957b
msgid "``suse``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:29
# 1c265c8cfdb04fa097bfe311098a873e
msgid "|suse|, |suse els|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:30
# 733b4c6165874c0c9e0887e36321d331
msgid "``windows``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:31
# 42fdafd73bcc4423a9d453fc5220ce80
msgid "|windows|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:33
# 12cd0a0a2737403bb43fe7e531d831f4
msgid "For |solaris|-related platforms, the ``platform_family`` method does not support the |solaris| platform family and will default back to ``platform_family = platform``. For example, if the platform is |omnios|, the ``platform_family`` is ``omnios``, if the platform is |smartos|, the ``platform_family`` is ``smartos``, and so on."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:35
# fb7273e8802149ccb891cc1f4eca58f6
msgid "For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:47
# ae8e96883b9649d9b6a9522a95f3f9da
msgid "``platform_family?`` will default to ``platform?`` when ``platform_family?`` is not explicitly defined."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:17
# fade1ae8d1934294bb3b830549db4870
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:18
# 8ff9cfc370704a9a8f01c2a6c0f4b86f
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:20
# 795b923310ab443696302c1a3e49408b
msgid "**Use a specific binary for a specific platform**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 8765dae433f04891827f25695a864113
msgid "The following is an example of using the ``platform_family?`` method in the |dsl recipe| to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location, and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# b131e90c89a44cc1a5ba9e01482fa984
msgid "where a command for installing |python| might look something like:"
msgstr ""


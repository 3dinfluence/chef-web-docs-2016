# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-12 15:43\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:8
# 11273d42036640499fc900e9eea54dda
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# e4b4b246752642b5be328d5f95ff7aed
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef client| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 8e5b058dd54d45e5a47b29c4f5a80f3c
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |redhat enterprise linux|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:41
# 4483d41465c24953b61630a811a9bca1
# a6b52e72cf864689a9c30798f0dc5a8d
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:13
# a9abb0bff9be4fdf8613eccdf0370a2a
msgid "Parameters"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:4
# e6cc21bb05484586bde6b537f73158d0
msgid "The following parameters can be used with the ``platform_family?`` method:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:10
# 491f7766cb0f421cb5d8d9b4ee3fd618
msgid "Parameter"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:11
# eb1b7923b203434b800928b48a0bb584
msgid "Platforms"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:12
# 9f1f1b4d624345df89e7acdf76e530d6
msgid "``arch``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:13
# 1289134103b74c90bf3071cedb3255f2
msgid "|archlinux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:14
# c2b1720336cd40ef9cd68cc31a7bb6ad
msgid "``debian``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:15
# 2aa53b90f2be43e3aff98aad66abe930
msgid "|debian|, |mint|, |ubuntu|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:16
# 71a722d2af49428fb118e03313d45571
msgid "``fedora``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:17
# d390ea4fead64892a786e0cc2cdfc96e
msgid "|fedora|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:18
# c56dde2fce2b4590b1f9c10b47518156
msgid "``gentoo``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:19
# eb38b7659c214d0a931918b87c260439
msgid "|gentoo|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:20
# 3cb1cfb0c4a649708f1f6dab4f8ff597
msgid "``mac_os_x``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:21
# e09aceb03910423d9b2d2e873b348f0f
msgid "|mac os x|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:22
# 31370f52cbec464ab8578a7f66c8d2a8
msgid "``openbsd``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:23
# 0fc4788d71f54af4b4eea88b0ed43ced
msgid "|open bsd|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:24
# 8f1f39fc9b9045aba83cd4239211be80
msgid "``rhel``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:25
# 2a2dc93861d84c4ebad8544bb256a47d
msgid "|amazon linux|, |centos|, |oracle linux|, |scientific linux|, |redhat enterprise linux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:26
# 23c87fecddcf4345a6ae937b57288d42
msgid "``slackware``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:27
# 365e6e3109434ec9b23d74c85743aa69
msgid "|slackware|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:28
# 985bdeaa6e8246dda8da3d7a8af11877
msgid "``suse``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:29
# 0403ac1133e64e8a9a2056c94d9ce134
msgid "|suse|, |suse els|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:30
# 7e3234e403334190b286706485aace9b
msgid "``windows``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:31
# d87d2bbfc0444259b91fed04987cbfee
msgid "|windows|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:33
# 4dc180e8010f420f90678d509d0fa6ad
msgid "For |solaris|-related platforms, the ``platform_family`` method does not support the |solaris| platform family and will default back to ``platform_family = platform``. For example, if the platform is |omnios|, the ``platform_family`` is ``omnios``, if the platform is |smartos|, the ``platform_family`` is ``smartos``, and so on."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:35
# 9c8eda6e1f7f410db245dfa271504594
msgid "For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:47
# 7574209c9a9c4bb5bfe7839afd020374
msgid "``platform_family?`` will default to ``platform?`` when ``platform_family?`` is not explicitly defined."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:17
# 0ffb99b9d45e4f968c301d36ffd30450
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:18
# 934c9e78b0bc44a9858ea73839d4e697
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:20
# 21723029d0074d58b21db9a9b9f447db
msgid "**Use a specific binary for a specific platform**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 601ff18839854ba4a067e6f21ae161f8
msgid "The following is an example of using the ``platform_family?`` method in the |dsl recipe| to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location, and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 3160f749476644db96bfa66708984771
msgid "where a command for installing |python| might look something like:"
msgstr ""


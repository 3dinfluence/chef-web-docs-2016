# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:33
# ef6658dee14f4131861b882e7a8d2dd4
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# efb41055baad49aaa23e7db8d1943df2
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef client| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 18a83c8343a64261a7ed93bdbccd1cf3
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |redhat enterprise linux|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:41
# ff1238b763bd429f948960dec39b1370
# a1b8f9d044e2483ea8e9431dca702a92
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:38
# 45981a1a15b8408099df547ad694ed7d
msgid "Parameters"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:4
# 6b8030aa95de4a71b2026d71a9d36f03
msgid "The following parameters can be used with the ``platform_family?`` method:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:10
# d3d6fdf604084ff6a1c91ad1dbb8cf71
msgid "Parameter"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:11
# 73f9ce064cdd46ec9231fb6a8c73a1c7
msgid "Platforms"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:12
# db7f593b5af94bcb8e429f2d99cd4885
msgid "``arch``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:13
# 40b4a2ab32424224922bf23934eb437e
msgid "|archlinux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:14
# 5b632ffca97847fb932ed2046604785f
msgid "``debian``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:15
# 5066f9402c2d4bfd9f9bddf662ee06cb
msgid "|debian|, |mint|, |ubuntu|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:16
# 49b553bc99ba4fc2ad6a1d8769c05da1
msgid "``fedora``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:17
# 862349b671c64e57ad4d1429a1305a63
msgid "|fedora|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:18
# 006ef82f15b34d6084512d6e52be9909
msgid "``gentoo``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:19
# 66e956424a034dd1ac895d1ecc108575
msgid "|gentoo|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:20
# c45fd61eec8c46afb8e6a550df18f7fb
msgid "``mac_os_x``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:21
# 1313a6998fae4b319738b9597e6f01e8
msgid "|mac os x|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:22
# 8be450477dbe44f58f503df17d467148
msgid "``openbsd``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:23
# 23e4eba033a34fee8ded328a01dd1b79
msgid "|open bsd|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:24
# 98997a87fda641ccb202b16b61fefc5b
msgid "``rhel``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:25
# 57a8ff8f69904d2095496a6d6905ba4e
msgid "|amazon linux|, |centos|, |oracle linux|, |scientific linux|, |redhat enterprise linux|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:26
# 9e6f199e79a14934a33b0e23d65dda46
msgid "``slackware``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:27
# bb0ded091070464cac9c4ba17623b403
msgid "|slackware|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:28
# e64b143af8d9414a90aadea420f31c48
msgid "``suse``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:29
# 2730ccb88a554fb7b6fe6f14feab136e
msgid "|suse|, |suse els|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:30
# 4010d4b95463436b92f6a7d26c043b70
msgid "``windows``"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:31
# 25c48157bb294132baeee4c73a5024a6
msgid "|windows|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:33
# 22aed040168a4f208166906b902b070e
msgid "For |solaris|-related platforms, the ``platform_family`` method does not support the |solaris| platform family and will default back to ``platform_family = platform``. For example, if the platform is |omnios|, the ``platform_family`` is ``omnios``, if the platform is |smartos|, the ``platform_family`` is ``smartos``, and so on."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:35
# 19f00dbde29f482c92d165100d1ae835
msgid "For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family_parameters.rst:47
# eef7b0ec91b441c7a808953bd5b4da8a
msgid "``platform_family?`` will default to ``platform?`` when ``platform_family?`` is not explicitly defined."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:42
# 30d0711032024d0cbf0bb50b79a9e869
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:43
# 79a46ec21e0547bba15296637328e94b
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:45
# 80406f938eb24b2c85ba8bc9c36cca8b
msgid "**Use a specific binary for a specific platform**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# ec31cee59f0740359254ffe605975be3
msgid "The following is an example of using the ``platform_family?`` method in the |dsl recipe| to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location, and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# f24e9444a03d4704954fcc13b3cc0c8d
msgid "where a command for installing |python| might look something like:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-23 12:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe_method_platform_family.rst:34
# b69e49b9427848eea925dc5b80431948
msgid "platform_family? Method"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# e41f830f71c64da7b864728bd2c72282
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 5d302f66d5f9426fb88b6c66cdad4654
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# b0cbeb96f3244986a0edc222ae943324
msgid "or:"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:39
# ab6db6320c96429db776720350de6225
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:40
# 3eb4ed9eec8a42d2b8c6d785acb65679
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe_method_platform_family.rst:42
# 7f27d78a45e045efa26fe4c68219b761
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 2e4adb24b5e6443fae3ed2364c58344c
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 366f4c84513647a69597b908438fe8c1
msgid "where a command for installing |python| might look something like:"
msgstr ""


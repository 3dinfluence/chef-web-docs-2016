# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 00:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:8
# 6eabeae6fa5c48178a896088de710026
msgid "About the chef-client"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 4a8b46b77b9d4c559fa41394b8b6c30e
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# d7708443824d4f21814cead67c4bbf29
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# fe0cdaad6fed4b1f9e7fb7c69303e6ae
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 292643053e9c4e5cb85e6b0181d4bca5
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 648f4592f7ed45339c98711b19ffb208
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# c961057d3e704e4194eee4aa45be17bd
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 2eac2404d7374af6b564912005b9de5d
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../source/essentials_chef_client.rst:13
# ff2ce3d668ac40618576b5b12c5ec86c
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# b52a3ad92e5944d7954a7d43dbc7587b
msgid "When a node runs the |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client---known as the |chef validator|---comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the identity of the |chef validator| to register itself with the |chef server|. In order to register with the |chef server|, the private key for the |chef validator| needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 9c74773d5894423282bd57144f7e5351
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the private key for the |chef validator| from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (https://github.com/opscode-cookbooks/chef-client)."
msgstr ""

#: ../source/essentials_chef_client.rst:17
# b1eaf43c03aa46cbbe404fb89c49b737
msgid "SSL Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# cff60860aa944288960457ce1c588cfc
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:21
# e5697ae2943f468ab09e914d70ec6c2d
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# 78e5b7bb15ee422496edd924fde6c9ba
msgid "Signed header authentication is used to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""


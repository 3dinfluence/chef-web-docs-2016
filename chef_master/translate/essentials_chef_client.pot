# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-31 13:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:8
# 9332de654cf74a6cb8c1a8aa1d01cccd
msgid "About the chef-client"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 565fccb3ef8d45fe95e0284f3fcf1c9a
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# e90d42ed94c54438994fbe72f31fa01f
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# ba43253e217f4a3d8054f965264f8304
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 7ffde94a32f4442b98885392ee13de3a
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 0b60fe4e13f54b8b8d894e00918fc648
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 3699c238466340babc722603ccadb99b
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 7d4f4c3e20944105b0679c2e0568a217
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../source/essentials_chef_client.rst:13
# 2775dcebc22943459660160bf7572d77
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 1276a1c1aed64bc8afbcc3408549166a
msgid "When a node runs the |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client---known as the |chef validator|---comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the identity of the |chef validator| to register itself with the |chef server|. In order to register with the |chef server|, the private key for the |chef validator| needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# eba6e6920bd342acb064c69e712b187e
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the private key for the |chef validator| from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (https://github.com/opscode-cookbooks/chef-client)."
msgstr ""

#: ../source/essentials_chef_client.rst:17
# e86cc41dc0a543b882ddfd97cd31f86d
msgid "SSL Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# 65dfd5698fb2418da8d6d93392220013
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:21
# 6b146542cc3841139b1f1e87eeac0410
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# bc9ebe821b234c41a93892389fd1d808
msgid "Signed header authentication is used to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""


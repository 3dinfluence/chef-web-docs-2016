# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:34
# c788c9b05c6d4b0aa5bec5bd65f3076c
msgid "|chef client|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 9d6cc314f349413a82d553756cb8da48
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# c621751b322f4e289a864dfe11bed4d3
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 8a9ece0f5f78433fb193e0856838884e
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 23b245162795464cb1a850ee7426b46c
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 7d979c4d2f694ef6b5b4e23f02b35a2e
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 903cb08d3f2f480786f8e69e06cd5879
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 0e4436c48e9c48d1a89231d87f00eea4
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../source/essentials_chef_client.rst:39
# 4adc10e2729e428e8b1114cb571866e0
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 8b3279a873fc4e95830476113f97a56b
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# fc29f51019c14fb083c39ce536c9f50d
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../source/essentials_chef_client.rst:43
# 20a58b5f81c64adaa4252b15b120dc58
msgid "SSL Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# 34fa9a7753ea4c16972026f690d192b3
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:47
# 87ae01af7e874418a4fafb4bafdfc198
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# 5431ab8f8a654bef960272a5b8be6583
msgid "|chef| uses signed header authentication to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-02 10:51-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:8
# 2c1ec84b92bc4c148b34572f87123318
msgid "About the chef-client"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 4cde0046ace84710ab26c394f42725f4
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 0e74589e86b046ddadeeda2f34c5ad0e
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 3100a822823d489daa5fc94ba59f9d8c
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# e1fb0ae987694d17ab2e33c15cc34d3a
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# aac992257e314c4fb03554327f3b41b6
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 79089f1ebd3f4aa0b4e35365b60e7d46
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# b7719e1648fc418c819b9a097fdcc043
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:14
# 8ed8be1e32ad4af5a963f63e662b73e4
msgid "The |chef client| executable can be run as a daemon."
msgstr ""

#: ../source/essentials_chef_client.rst:13
# ef51427504f24684b97ae34d88ad9921
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# fd8cb2d664c94deca420155123b596ce
msgid "Every request made by the |chef client| to the |chef server| must be an authenticated request using the |api chef server| and a private key. When the |chef client| makes a request to the |chef server|, the |chef client| authenticates each request using a private key located in ``/etc/chef/client.pem``."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 1fe9a0bfb77f43fb82afc3cdf7aa4111
msgid "However, during the first |chef client| run, this private key does not exist. Instead, the |chef client| will attempt to use the private key assigned to the |chef validator|, located in ``/etc/chef/validation.pem``. (If, for any reason, the |chef validator| is unable to make an authenticated request to the |chef server|, the initial |chef client| run will fail.)"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:9
# b4516998418c46149227c12d3d42321b
msgid "During the initial |chef client| run, the |chef client| will register with the |chef server| using the private key assigned to the |chef validator|, after which the |chef client| will obtain a ``client.pem`` private key for all future authentication requests to the |chef server|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:11
# 5baebd99f1a041e38fbe8d15df351ee9
msgid "After the initial |chef client| run has completed successfully, the |chef validator| is no longer required and may be deleted from the node. Use the ``delete_validation`` recipe found in the ``chef-client`` cookbook (https://github.com/opscode-cookbooks/chef-client) to remove the |chef validator|."
msgstr ""

#: ../source/essentials_chef_client.rst:17
# 0153eb856f6444a0b8a685454dc83616
msgid "SSL Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# a83238455aa342c08dfa4718db1b1a99
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:21
# 9a55ec9bd694488d97587ccaf0cd5a18
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# 80b673215a634f5b919af0a2c88b29e8
msgid "Signed header authentication is used to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""


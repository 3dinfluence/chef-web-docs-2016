# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-14 13:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:8
# 7781bec79f884f90ba55c42b7ff19f02
msgid "About the chef-client"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 5b8d2b1df5574df7a4c62f3fe2dae077
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# b96c78770e3d4b05883742a047824810
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# d05b9fe57054470f92b7adfa98a29bb6
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 19f8ef6e8bfc48e6a00ad08929d353c1
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 943e74e9d03848d9ab76436176179e52
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 42f226dd4f5b4eb3b39006e577e49ee9
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# d709f0a00c804d26a9bb6be7bdf43258
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:14
# 70805be62e5a426bbf3d8948f01a160c
msgid "The |chef client| executable can be run as a daemon."
msgstr ""

#: ../source/essentials_chef_client.rst:13
# 05a586ffd59f4276852c4c6ca1d298f6
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 4af0798272f24d388b823b3189a4b436
msgid "Every request made by the |chef client| to the |chef server| must be an authenticated request using the |api chef server| and a private key. When the |chef client| makes a request to the |chef server|, the |chef client| authenticates each request using a private key located in ``/etc/chef/client.pem``."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 567a6ccd1f0e4e679a12ca5a8c0c7996
msgid "However, during the first |chef client| run, this private key does not exist. Instead, the |chef client| will attempt to use the private key assigned to the |chef validator|, located in ``/etc/chef/validation.pem``. (If, for any reason, the |chef validator| is unable to make an authenticated request to the |chef server|, the initial |chef client| run will fail.)"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:9
# af732f1a84fb4974a88feb1df0343893
msgid "During the initial |chef client| run, the |chef client| will register with the |chef server| using the private key assigned to the |chef validator|, after which the |chef client| will obtain a ``client.pem`` private key for all future authentication requests to the |chef server|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:11
# fca9580c7acc42a084af2edc89010e9e
msgid "After the initial |chef client| run has completed successfully, the |chef validator| is no longer required and may be deleted from the node. Use the ``delete_validation`` recipe found in the ``chef-client`` cookbook (https://github.com/opscode-cookbooks/chef-client) to remove the |chef validator|."
msgstr ""

#: ../source/essentials_chef_client.rst:17
# 6465561bc0cd4d2a8ee7aeccd0a6d15f
msgid "SSL Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# c9db7e093e8b41178befdcaea467e3f2
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:21
# 8b7fa4c461db40349937cac8c7db032b
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# cfbb32283b604398b64181f1ab57ae4a
msgid "Signed header authentication is used to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""


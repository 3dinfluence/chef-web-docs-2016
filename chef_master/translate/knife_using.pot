# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:8
# b84a36d571314004818f41b37363af65
msgid "Working with Knife"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using.rst:4
# 3e86ccc090b24d8d8623e5df159b7557
msgid "|knife| runs from a management workstation and sits in-between a |chef server| and an organization's infrastructure. |knife| interacts with a |chef server| by using the same REST API that is used by a |chef client|. Role-based authentication controls (RBAC) can be used to authorize changes when |knife| is run with |chef server oec|. |knife| is configured during workstation setup, but subsequent modifications can be made using the |knife rb| configuration file."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:13
# 85f7c44db75d4397840e72d1f5e8c36a
msgid "JSON Data Format"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_json.rst:4
# 3b85f52b7dca43ee8a532c371b254600
msgid "Most data is entered using a text editor in |json| format, unless the ``--disable-editing`` option is entered as part of a command. (Encrypted data bags use |yaml|, which is a superset of |json|.) |json| is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about |json|, see http://www.json.org/ or http://en.wikipedia.org/wiki/JSON."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:17
# 21c7bfd19cde4a7bac29c1224e8f1306
msgid "Set the Text Editor"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:4
# 0134120f6b534eacbab7123ba56d8b17
msgid "Some |knife| commands, such as ``knife data bag edit``, require that information be edited as |json| data using a text editor. For example, the following command:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:10
# ef35614e37da4b4c8e15dc85553e80fd
msgid "will open up the text editor with data similar to:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:18
# 7ffa8f1d726a4ea88abd74c2a476d297
msgid "Changes to that file can then be made:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:27
# 38708c06537b41c5a709b42df0304230
msgid "The type of text editor that is used by |knife| can be configured by adding an entry to the |knife rb| file or by setting an ``EDITOR`` environment variable. For example, to configure the text editor to always open with |vim|, add the following to the |knife rb| file:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:33
# be9a5987cafb43e0a6ab824fb3ce2ce1
msgid "When a |windows| file path is enclosed in a double-quoted string (\" \"), the same backslash character (``\\``) that is used to define the file path separator is also used in |ruby| to define an escape character. The |knife rb| file is a |ruby| file; therefore, file path separators must be escaped. In addition, spaces in the file path must be replaced with ``~1`` so that the length of each section within the file path is not more than 8 characters. For example, if EditPad Pro is the text editor of choice and is located at the following path::"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:37
# 1f06624ea46c4261bafcfbaa7cfb9a80
msgid "the setting in the |knife rb| file would be similar to:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:43
# b2c58a4521f94ea18f5be4b3bdef6802
msgid "One approach to working around the double- vs. single-quote issue is to put the single-quotes outside of the double-quotes. For example, for |notepad plusplus|:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:49
# 924fc202a5764d5494a73290b5399feb
msgid "for |sublime|:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:55
# 25686a15982b48a68de95c1040627de8
msgid "for |textpad|:"
msgstr ""

#: ../../../desktop/chef-docs/step_knife/step_knife_common_set_editor.rst:61
# fc95cea57e9b4dc89f35ea204ec0bf27
msgid "and for |vim|:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:21
# 698fdf07e0c644ccb1029a4f9cc6c5ca
msgid "Using Quotes"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_quotes.rst:4
# 3dce388262d3438a9029efdbc964de39
msgid "Values can be entered with double quotes (\" \") or single quotes (' '), but this should be done consistently."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:25
# 8571c9c6ab744bf2857749d9204c8110
msgid "Sub-commands"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_subcommands.rst:4
# 1529594328d948b9bf2ceb0e528941ac
msgid "|knife| comes with a collection of built in subcommands that work together to provide all of the functionality required to take specific actions against any object in an organization, including cookbooks, nodes, roles, data bags, environments, and users. A |knife| plugin extends the functionality beyond built-in subcommands."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_subcommands.rst:6
# aeefbf43f898455e816b381b7f7f7f52
msgid "|knife| has the following subcommands: ``bootstrap``, ``client``, ``configure``, ``cookbook``, ``cookbook site``, ``data bag``, ``delete``, ``deps``, ``diff``, ``download``, ``edit``, ``environment``, ``exec``, ``index rebuild``, ``list``, ``node``, ``recipe list``, ``role``, ``search``, ``show``, ``ssh``, ``status``, ``tag``, ``upload``, ``user``, and ``xargs``."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_subcommands.rst:8
# b3d54f53b0954d4e86c360bd6977ed88
msgid "The following subcommands run only against the open source |chef server|: ``index rebuild`` and ``user``."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:29
# a89f30ee9a0a452b8253e1d8e744886b
msgid "Verb Sub-commands"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:6
# 5c3e5321c2dc4e1cb490176527fa91b9
msgid "|knife| includes a set of subcommands that are built around common verbs: ``delete``, ``deps``, ``diff``, ``download``, ``edit``, ``list``, ``show``, ``upload``, ``xargs``. These subcommands allow |knife| to issue commands that interact with any object stored in the |chef repo| or stored on the |chef server|. Some important principles behind this group of subcommands includes:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:8
# a23d952a66ae416ab31921c31d6c0392
msgid "A command that works with each object in the |chef repo|. The subcommands specify the desired action (the \"verb\"), and then directory in which that object resides (``clients``, ``cookbooks/``, ``data_bags/``, ``environments/``, ``nodes``, ``roles/``, and ``users``). For example: ``download cookbooks/``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:9
# ad44cf6b996f4173ac66a1c8d761e003
msgid "A command that works with certain objects in |chef server oec|, including ``acls``, ``groups``, and ``containers``"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:10
# 96205ceb8c5842cea44f031e80fbd41a
msgid "Uses the |chef server| as if it were a file system, allowing the |chef repo| on the |chef server| to behave like a mirror of the |chef repo| on the workstation. The |chef server| will have the same objects as the local |chef repo|. To make changes to the files on the |chef server|, just download files from the |chef server| or upload files from the |chef repo|"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:11
# 5e75e90f69bb417a994e10b5493cdd15
msgid "The context from which a command is run matters. For example, when working in the ``roles/`` directory, |knife| will know what is being worked with. Enter ``knife show base.json`` and |knife| will return the base role from the |chef server|. From the |chef repo| root, enter ``knife show roles/base.json`` to get the same result"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs.rst:12
# 9de744b15337459db91619d31d60e87a
msgid "Parallel requests can be made to the |chef server| and are configurable on a per-command basis"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:33
# c116b89df9274a468e390e84eab010e8
msgid "Wildcard Search"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:6
# 087c8de014b144b6abfa8ef0a162663a
msgid "A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:8
# c36491a74c314e76af1a622b2e8b6af5
msgid "A question mark (”?”) can be used to replace exactly one character (as long as that character is not the first character)"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:9
# f482041810b34c0e99620ab3dd403b33
msgid "An asterisk (“*”) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:11
# 64ec4e82e24e465fa03009b13a8784dd
msgid "Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the |chef server|. If they are not escaped, the wildcard is expanded into the actual filenames and |knife| will not know the wildcard was intended to be used. For example, if the |chef server| has data bags named ``aardvarks``, ``anagrams``, and ``arp_tables``, but the local file system only has ``aardvarks`` and ``anagrams``, escaping vs. not escaping the wildcard pattern will yield different results:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:17
# 9cd68c33098848d1ad93556552aea7d6
msgid "asks the |chef server| for everything starting with the letter \"a\" and will return:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:23
# 231ba8af29a245b6947268ebd8fd547f
msgid "But, the following:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:29
# 02f7de84b68d44c88092e33e8dc253ca
msgid "will return:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:35
# daffa691cb474ea3b70a4d25f9297a3c
msgid "Which is the same as entering:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_verbs_wildcard.rst:41
# 8695dfa55ec14c0798f3e9d9f1f5d30c
msgid "to return:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:37
# 4f158ca3638141b497d573e3ea78ee01
msgid "Plug-ins"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_plugins.rst:4
# 7fcbbbd1ac7e4dc69ebf2f63f31cdb2e
msgid "|company_name| provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using |rubygems|): |subcommand knife azure|, |subcommand knife bluebox|, |subcommand knife ec2|, |subcommand knife eucalyptus|, |subcommand knife google|, |subcommand knife hp|, |subcommand knife linode|, |subcommand knife openstack|, |subcommand knife rackspace|, |subcommand knife terremark|, |subcommand knife vcloud|, and |subcommand knife windows|."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_plugins.rst:6
# e254b9f823874f81a682befc4f0c6b8e
msgid "The community provides many other plugins for |knife|: http://community.opscode.com/."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:41
# 2edd42b02490457a8d8efb0a8bbb4fc2
msgid "Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_syntax.rst:4
# db7eabcbfbd243719b20ddf6049d96d2
msgid "All |knife| subcommands have the following syntax:"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_syntax.rst:6
# 68ab58e8af454b8da39b2128557c5835
msgid "knife subcommand [ARGUMENT] (options)"
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_syntax.rst:8
# d28e79c2d8b445998dee0be0a90d2930
msgid "Each subcommand has its own set of arguments and options."
msgstr ""

#: ../../../desktop/chef-docs/includes_knife/includes_knife_using_syntax.rst:10
# cc8447c5158f4b6ca34427bb40d239cb
msgid "All syntax examples in this document show variables in ALL_CAPS. For example ``-u PORT_LIST`` (where PORT_LIST is a comma-separated list of local and public UDP ports) or ``-F FORMAT`` (where FORMAT determines the output format, either ``summary``, ``text``, ``json``, ``yaml``, or ``pp``). These variables often require specific values that are unique to each organization."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/knife_using.rst:45
# 9cd6f3c7f4d44fddbb0662ed96af7bf3
msgid "Many Users, Same Repo"
msgstr ""

#: ../../../desktop/chef-docs/includes_repository/includes_repository_many_users_same_repo.rst:5
# 6a8770735d654125a4ab5258dfa5f05c
msgid "It is possible for multiple users to access the |chef server| using the same |knife rb| file. (A user can even access multiple organizations if, for example, each instance of the |chef repo| contained the same copy of the |knife rb| file.) This can be done by adding the |knife rb| file to the |chef repo|, and then using environment variables to handle the user-specific credential details and/or sensitive values. For example:"
msgstr ""


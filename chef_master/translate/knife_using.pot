# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-03 15:53\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_using.rst:34
# 4ad50443c4394ac5a65cb978c6e5de7b
msgid "Working with Knife"
msgstr ""

#: ../../includes_knife/includes_knife_using.rst:4
# d86ec906320c4da7bffe025b076b3290
msgid "|knife| runs from a management workstation and sits in-between a |chef server| and an organization's infrastructure. |knife| interacts with a |chef server| by using the same REST API that is used by a |chef client|. Role-based authentication controls (RBAC) can be used to authorize changes when |knife| is run with |chef hosted| or |chef private|. |knife| is configured during workstation setup, but subsequent modifications can be made using the |knife rb| configuration file."
msgstr ""

#: ../source/knife_using.rst:39
# 00325b0df0fc40cc82ce5b1ada5c25e4
msgid "JSON Data Format"
msgstr ""

#: ../../includes_knife/includes_knife_using_json.rst:4
# e2a7f90082c2422997370c46e2d1e91f
msgid "Most data is entered using a text editor in |json| format, unless the ``--disable-editing`` option is entered as part of a command. (Encrypted data bags use |yaml|, which is a superset of |json|.) |json| is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see http://www.json.org/ or http://en.wikipedia.org/wiki/JSON."
msgstr ""

#: ../source/knife_using.rst:43
# 2a42add377244c4aae16a8d63c6ccc46
msgid "Using Quotes"
msgstr ""

#: ../../includes_knife/includes_knife_using_quotes.rst:4
# 9b704f28511943a4b936a8b5468cc121
msgid "Values can be entered with double quotes (\" \") or single quotes (' '), but this should be done consistently."
msgstr ""

#: ../source/knife_using.rst:47
# a3807453caa64f3692922badc186f3b7
msgid "Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:4
# 56ebd273315f46a3b69beb0b0ff6d750
msgid "|knife| comes with a collection of built in subcommands that work together to provide all of the functionality required to take specific actions against any object in a |chef| environment, including cookbooks, nodes, roles, data bags, environments, and users. A |knife| plugin extends the functionality beyond built-in subcommands."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:6
# 03b4529a95fd4950b8ef1087a18faf4e
msgid "|knife| has the following subcommands: ``bootstrap``, ``client``, ``configure``, ``cookbook``, ``cookbook site``, ``data bag``, ``environment``, ``exec``, ``index rebuild``, ``node``, ``recipe list``, ``role``, ``search``, ``ssh``, ``status``, ``tag``, and ``user``."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:8
# 46e9f6f76b8b44288201e0b7a799b33f
msgid "The following subcommand runs only against the open source |chef server|: ``index rebuild``."
msgstr ""

#: ../source/knife_using.rst:51
# b3f60a4b6a84433da114c1abca28da0a
msgid "Verb Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:6
# 03217ed6ed7b476399883e09559bb9c2
msgid "|knife| includes a series of subcommands that are built around a common set of verbs: ``create``, ``delete``, ``download``, ``list``, ``show``, and ``upload``. These subcommands allow a user of |knife| to build commands that interact with any object stored in the |chef| repository or stored on the |chef server|. Some important principles behind these sub-commands include:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:8
# 34124ee289f64bafa8ab7963051ab5f9
msgid "A single command that works with objects in the |chef| repository. The subcommands specify the desired action with the verb, and then the object by specifying the directory in which that object resides: ``cookbooks/``, ``data_bags/``, ``environments/``, and ``roles/``. These subcommands allow simply the syntax required for tasks because most |chef| objects can uploaded, downloaded, viewed as a list, printed to |json|, and so on."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:9
# ff1a427ed75a477f93daf5fcdaab8cec
msgid "Using the |chef server| as if it were a file system, allowing the repository on the |chef server| to behave like a mirror of the |chef| repository on the workstation. The |chef server| will have the same objects as the local |chef| repository. To make changes to the files on the |chef| server, just download files from the |chef server| or upload files from the |chef| repository."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:10
# be6a813ab3484187bae77293d5a6b7d8
msgid "The context from which a command is run matters. For example, when working in the ``roles/`` directory, |knife| will know what is being worked with. Enter ``knife show base.json`` and |knife| will return the base role from the |chef server|. From the repository root, enter ``knife show roles/base.json`` to get the same result."
msgstr ""

#: ../source/knife_using.rst:55
# 65200138b7ac4d77951e10393501125d
msgid "Wildcard Search"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:6
# 4207b0e6a7a248cbacbb44e304355edd
msgid "A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:8
# 5c5e67d291c14214af9a882056379cbc
msgid "A question mark (”?”) can be used to replace exactly one character (as long as that character is not the first character)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:9
# 6ac62affcc5840d69894e79823c30a27
msgid "An asterisk (“*”) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:11
# 68b24e9587b248fd9d2d51dad7d4db71
msgid "Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the |chef server|. If they are not escaped, the wildcard is expanded into the actual filenames and |knife| will not know the wildcard was intended to be used. For example, if the |chef server| has data bags named ``aardvarks``, ``anagrams``, and ``arp_tables``, but the local file system only has ``aardvarks`` and ``anagrams``, escaping vs. not escaping the wildcard pattern will yield different results:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:17
# 61e4ca4aabc64ef5b7fda2c6e2c87d75
msgid "asks the |chef server| for everything starting with the letter \"a\" and will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:23
# 5b5f69b8e0d04dfa9c6186a8667a0a75
msgid "But, the following:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:29
# e08d6153993d4aaab3670f76419924a2
msgid "will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:35
# 1fa39945dea84011841aab30e51ee8c7
msgid "Which is the same as entering:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:41
# 9ddc93da080044d083dc72eb8e6ed69c
msgid "to return:"
msgstr ""

#: ../source/knife_using.rst:59
# 2d5ef352721a4b80ad6972e00e23ff9c
msgid "Plug-ins"
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:4
# 4b07d6bfab894662a6665381793aa3c3
msgid "|opscode| provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using |rubygems|): ``azure``, ``bluebox``, ``ec2``, ``eucalyptus``, ``google``, ``hp``, ``linode``, ``openstack``, ``rackspace``, ``slicehost``, ``terremark``, and ``windows``."
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:6
# 4455137fbf254be5bfc5e14a2b464cde
msgid "The |chef| community provides many other plugins for |knife|: http://community.opscode.com/."
msgstr ""

#: ../source/knife_using.rst:63
# 3274c069dc154744b3865a47be9ded08
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:4
# aa54651ecfe2409f8d74b528072bb176
msgid "All |knife| subcommands have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:6
# 3a5700fe2c8d4b71aa8c9374c48c4f58
msgid "knife subcommand [ARGUMENT] (options)"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:8
# 1a6218b09d9e4da492bf46fa2273505d
msgid "Each subcommand has its own set of arguments and options."
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:10
# 5ad3bdb11a9443bd9df11032c0dc1273
msgid "All syntax examples in this document show variables in ALL_CAPS. For example ``-u PORT_LIST`` (where PORT_LIST is a comma-separated list of local and public UDP ports) or ``-F FORMAT`` (where FORMAT determines the output format, either ``summary``, ``text``, ``json``, ``yaml``, or ``pp``). These variables often require specific values that are unique to your organization's |chef| environment."
msgstr ""

#: ../source/knife_using.rst:67
# 8ab006aa70254ea782d9ebc20cfb0f1f
msgid "Many Users, Same Repo"
msgstr ""

#: ../../includes_repository/includes_repository_many_users_same_repo.rst:5
# 39837f5c269a4bfba7edeaa7d963b4cc
msgid "It is possible for multiple users to access the |chef server| using the same |knife rb| file. (A user can even access multiple organizations if, for example, each |chef| repository contained the same copy of the |knife rb| file.) This can be done by adding the |knife rb| file to the |chef| repository, and then using environment variables to handle the user-specific credential details and/or sensitive values. For example:"
msgstr ""


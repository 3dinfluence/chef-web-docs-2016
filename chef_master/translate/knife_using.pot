# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_using.rst:34
# 50902e64cfae48b98d6d174bba324e0f
msgid "Working with Knife"
msgstr ""

#: ../../includes_knife/includes_knife_using.rst:4
# eebc56a66807413cbac6c8789438786e
msgid "|knife| runs from a management workstation and sits in-between a |chef server| and an organization's infrastructure. |knife| interacts with a |chef server| by using the same REST API that is used by a |chef client|. Role-based authentication controls (RBAC) can be used to authorize changes when |knife| is run with |chef hosted| or |chef private|. |knife| is configured during workstation setup, but subsequent modifications can be made using the |knife rb| configuration file."
msgstr ""

#: ../source/knife_using.rst:39
# ab60113019fa4693aee25312d67508a7
msgid "JSON Data Format"
msgstr ""

#: ../../includes_knife/includes_knife_using_json.rst:4
# c95c348beac649259384ea999d76ec11
msgid "Most data is entered using a text editor in |json| format, unless the ``--disable-editing`` option is entered as part of a command. (Encrypted data bags use |yaml|, which is a superset of |json|.) |json| is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see http://www.json.org/ or http://en.wikipedia.org/wiki/JSON."
msgstr ""

#: ../source/knife_using.rst:43
# f5ee626742794c63aae3af58f3d6faf3
msgid "Using Quotes"
msgstr ""

#: ../../includes_knife/includes_knife_using_quotes.rst:4
# 78dcf174c5464c8da755534c56f3e517
msgid "Values can be entered with double quotes (\" \") or single quotes (' '), but this should be done consistently."
msgstr ""

#: ../source/knife_using.rst:47
# b18038f0767d47dfbb89454bafcf68a3
msgid "Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:4
# d857582bb91a44ab8d543fd53d9dddbd
msgid "|knife| comes with a collection of built in subcommands that work together to provide all of the functionality required to take specific actions against any object in a |chef| environment, including cookbooks, nodes, roles, data bags, environments, and users. A |knife| plugin extends the functionality beyond built-in subcommands."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:6
# 77238ab90ac24a1c9963bc6b95caf866
msgid "|knife| has the following subcommands: ``bootstrap``, ``client``, ``configure``, ``cookbook``, ``cookbook site``, ``data bag``, ``environment``, ``exec``, ``index rebuild``, ``node``, ``recipe list``, ``role``, ``search``, ``ssh``, ``status``, ``tag``, and ``user``."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:8
# 6ba1d26ba70c4300b6ee19eaf02f57dc
msgid "The following subcommand runs only against the open source |chef server|: ``index rebuild``."
msgstr ""

#: ../source/knife_using.rst:51
# 4e65d0f5008f47ec82f3e93e08355f52
msgid "Verb Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:6
# 3e9e05b87e974a04a73e836b933ecdc3
msgid "|knife| includes a series of subcommands that are built around a common set of verbs: ``create``, ``delete``, ``download``, ``list``, ``show``, and ``upload``. These subcommands allow a user of |knife| to build commands that interact with any object stored in the |chef| repository or stored on the |chef server|. Some important principles behind these sub-commands include:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:8
# 17af3abc194647aeb5a8851d21ac7736
msgid "A single command that works with objects in the |chef| repository. The subcommands specify the desired action with the verb, and then the object by specifying the directory in which that object resides: ``cookbooks/``, ``data_bags/``, ``environments/``, and ``roles/``. These subcommands allow simply the syntax required for tasks because most |chef| objects can uploaded, downloaded, viewed as a list, printed to |json|, and so on."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:9
# 008e7c565e114cb598b5d8bc2d588d01
msgid "Using the |chef server| as if it were a file system, allowing the repository on the |chef server| to behave like a mirror of the |chef| repository on the workstation. The |chef server| will have the same objects as the local |chef| repository. To make changes to the files on the |chef| server, just download files from the |chef server| or upload files from the |chef| repository."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:10
# 556e50e6c1fa4a51951c5ff160136e71
msgid "The context from which a command is run matters. For example, when working in the ``roles/`` directory, |knife| will know what is being worked with. Enter ``knife show base.json`` and |knife| will return the base role from the |chef server|. From the repository root, enter ``knife show roles/base.json`` to get the same result."
msgstr ""

#: ../source/knife_using.rst:55
# 560f35f254a04d46a2b659eb85281190
msgid "Wildcard Search"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:6
# 5b069df132934c868585c981c765f738
msgid "A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:8
# b1e88586fa5049739423a95d98a270a3
msgid "A question mark (”?”) can be used to replace exactly one character (as long as that character is not the first character)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:9
# 5d4ff64f7b654b6f8dcafde021a992e7
msgid "An asterisk (“*”) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:11
# 4267868b0c354d8abfd8b4cca1edbe2d
msgid "Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the |chef server|. If they are not escaped, the wildcard is expanded into the actual filenames and |knife| will not know the wildcard was intended to be used. For example, if the |chef server| has data bags named ``aardvarks``, ``anagrams``, and ``arp_tables``, but the local file system only has ``aardvarks`` and ``anagrams``, escaping vs. not escaping the wildcard pattern will yield different results:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:17
# e9fd359e54c5430ba18bf63dc89fc7e0
msgid "asks the |chef server| for everything starting with the letter \"a\" and will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:23
# 27b90ae1453648eca59c40abad9927f1
msgid "But, the following:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:29
# d2b8d50b33124a36a4d0b97f5c0db6c7
msgid "will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:35
# ebf5737247f148d1b73ca4b3213555e0
msgid "Which is the same as entering:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:41
# a0280c6e68724d228684c786713f1192
msgid "to return:"
msgstr ""

#: ../source/knife_using.rst:59
# a5eb756e261d4905b88f7b09e93f9573
msgid "Plug-ins"
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:4
# 3e58cfc9107d49d887d69a74a037d5ab
msgid "|opscode| provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using |rubygems|): ``azure``, ``bluebox``, ``ec2``, ``eucalyptus``, ``google``, ``hp``, ``linode``, ``openstack``, ``rackspace``, ``slicehost``, ``terremark``, and ``windows``."
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:6
# aa6f67d2f01d45f6ac260e254aa0ce7f
msgid "The |chef| community provides many other plugins for |knife|: http://community.opscode.com/."
msgstr ""

#: ../source/knife_using.rst:63
# eea6858aeef043b4b3f73587aadea884
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:4
# 4f66b6236b4c4901ab974f41210b6240
msgid "All |knife| subcommands have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:6
# e617c91e42444493966336a7785a38da
msgid "knife subcommand [ARGUMENT] (options)"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:8
# 80fdcc9946d04cd6ac8b5e116fe34d70
msgid "Each subcommand has its own set of arguments and options."
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:10
# 9c54ca19d7f54753a255f19528a7da3e
msgid "All syntax examples in this document show variables in ALL_CAPS. For example ``-u PORT_LIST`` (where PORT_LIST is a comma-separated list of local and public UDP ports) or ``-F FORMAT`` (where FORMAT determines the output format, either ``summary``, ``text``, ``json``, ``yaml``, or ``pp``). These variables often require specific values that are unique to your organization's |chef| environment."
msgstr ""

#: ../source/knife_using.rst:67
# 0f3893de596a4d45a0346bbf9b25bf77
msgid "Many Users, Same Repo"
msgstr ""

#: ../../includes_repository/includes_repository_many_users_same_repo.rst:5
# 1f0b43d379da4fb3a4bc6a625c74691e
msgid "It is possible for multiple users to access the |chef server| using the same |knife rb| file. (A user can even access multiple organizations if, for example, each |chef| repository contained the same copy of the |knife rb| file.) This can be done by adding the |knife rb| file to the |chef| repository, and then using environment variables to handle the user-specific credential details and/or sensitive values. For example:"
msgstr ""


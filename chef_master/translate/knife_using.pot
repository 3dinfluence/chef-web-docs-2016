# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-08 13:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_using.rst:34
# 8b225b425ca64934911dd89bdf3a6a36
msgid "Working with Knife"
msgstr ""

#: ../../includes_knife/includes_knife_using.rst:4
# 6d800d7a533b460d8c8f81e3037c5eff
msgid "|knife| runs from a management workstation and sits in-between a |chef server| and an organization's infrastructure. |knife| interacts with a |chef server| by using the same REST API that is used by a |chef client|. Role-based authentication controls (RBAC) can be used to authorize changes when |knife| is run with |chef hosted| or |chef private|. |knife| is configured during workstation setup, but subsequent modifications can be made using the |knife rb| configuration file."
msgstr ""

#: ../source/knife_using.rst:39
# 0bbd01f4c9214972aa6043e0e70721c0
msgid "JSON Data Format"
msgstr ""

#: ../../includes_knife/includes_knife_using_json.rst:4
# 443bd5ed97ac476c90bf3bbf38b1f21a
msgid "Most data is entered using a text editor in |json| format, unless the ``--disable-editing`` option is entered as part of a command. (Encrypted data bags use |yaml|, which is a superset of |json|.) |json| is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see http://www.json.org/ or http://en.wikipedia.org/wiki/JSON."
msgstr ""

#: ../source/knife_using.rst:43
# 80997a6df19448389db01d9668c53e9b
msgid "Using Quotes"
msgstr ""

#: ../../includes_knife/includes_knife_using_quotes.rst:4
# f054ae0434f84d878fdb130043687e50
msgid "Values can be entered with double quotes (\" \") or single quotes (' '), but this should be done consistently."
msgstr ""

#: ../source/knife_using.rst:47
# cf1d9435a4624814b6f5c9d0e28f0550
msgid "Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:4
# 7a7fbc201db647718da58c1a325ade9b
msgid "|knife| comes with a collection of built in subcommands that work together to provide all of the functionality required to take specific actions against any object in a |chef| environment, including cookbooks, nodes, roles, data bags, and environments. A |knife| plugin extends the functionality beyond built-in subcommands."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:6
# 92e2b665ab1f4c8f8f3185915f3a1ce6
msgid "|knife| has the following subcommands: ``bootstrap``, ``client``, ``configure``, ``cookbook``, ``cookbook site``, ``data bag``, ``environment``, ``exec``, ``index rebuild``, ``node``, ``recipe list``, ``role``, ``search``, ``ssh``, ``status``, and ``tag``."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:8
# a7cab0aabb84402fb8235f76a142c66e
msgid "The following subcommand runs only against the open source |chef server|: ``index rebuild``."
msgstr ""

#: ../source/knife_using.rst:51
# c58a9fc5d8204798891ff73d0aa9479e
msgid "Verb Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:6
# 3335453596bb49fa9315d80022913b26
msgid "|knife| includes a series of subcommands that are built around a common set of verbs: ``create``, ``delete``, ``download``, ``list``, ``show``, and ``upload``. These subcommands allow a user of |knife| to build commands that interact with any object stored in the |chef| repository or stored on the |chef server|. Some important principles behind these sub-commands include:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:8
# c02f9ff8e3534aa081b1cbbf1a9b4c9b
msgid "A single command that works with objects in the |chef| repository. The subcommands specify the desired action with the verb, and then the object by specifying the directory in which that object resides: ``cookbooks/``, ``data_bags/``, ``environments/``, and ``roles/``. These subcommands allow simply the syntax required for tasks because most |chef| objects can uploaded, downloaded, viewed as a list, printed to |json|, and so on."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:9
# aa141c5a61254bcd82bbf3c467f7bff2
msgid "Using the |chef server| as if it were a file system, allowing the repository on the |chef server| to behave like a mirror of the |chef| repository on the workstation. The |chef server| will have the same objects as the local |chef| repository. To make changes to the files on the |chef| server, just download files from the |chef server| or upload files from the |chef| repository."
msgstr ""

#: ../../includes_knife/includes_knife_verbs.rst:10
# 45b8c940fdf14259a2a0794baf513b48
msgid "The context from which a command is run matters. For example, when working in the ``roles/`` directory, |knife| will know what is being worked with. Enter ``knife show base.json`` and |knife| will return the base role from the |chef server|. From the repository root, enter ``knife show roles/base.json`` to get the same result."
msgstr ""

#: ../source/knife_using.rst:55
# 4db336c1cf0345c786b0a205ab9ca358
msgid "Wildcard Search"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:6
# 048d29e779c6479ab3115fee7e641242
msgid "A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:8
# 1ba2fa38738848ef81eb9a03719145ea
msgid "A question mark (”?”) can be used to replace exactly one character (as long as that character is not the first character)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:9
# 97ad1aa3748b43a18b7d23b8f3b45fe8
msgid "An asterisk (“*”) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:11
# 945c563b78fd4c4496e7b6aaa37e19bd
msgid "Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the |chef server|. If they are not escaped, the wildcard is expanded into the actual filenames and |knife| will not know the wildcard was intended to be used. For example, if the |chef server| has data bags named ``aardvarks``, ``anagrams``, and ``arp_tables``, but the local file system only has ``aardvarks`` and ``anagrams``, escaping vs. not escaping the wildcard pattern will yield different results:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:17
# a7ab4ac31a3d4c9396bc230cef20adc4
msgid "asks the |chef server| for everything starting with the letter \"a\" and will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:23
# 2dca164fe2254a43aa4c5ebbea9017e2
msgid "But, the following:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:29
# 1f4362104d684f1cad8a35b732fc23a5
msgid "will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:35
# 9abdab84849a446cb722bd6f4bd8d142
msgid "Which is the same as entering:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:41
# 2b67365e06904cef9cbc21a4250fba06
msgid "to return:"
msgstr ""

#: ../source/knife_using.rst:59
# 5272e1b8ed92413294be7dc7b3301687
msgid "Plug-ins"
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:4
# 02731ed101f44493af5a83004334ea34
msgid "|opscode| provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using |rubygems|): ``azure``, ``bluebox``, ``ec2``, ``eucalyptus``, ``google``, ``hp``, ``linode``, ``openstack``, ``rackspace``, ``slicehost``, ``terremark``, and ``windows``."
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:6
# 7ff3ac3dfd4a4f0bb966275bccb9f38e
msgid "The |chef| community provides many other plugins for |knife|: http://community.opscode.com/."
msgstr ""

#: ../source/knife_using.rst:63
# e55012d37398434f91b7009dded1b847
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:4
# 9f9671a15e49461eba6e40cd5555502a
msgid "All |knife| subcommands have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:6
# c76b375b60fc47d6b1db4fc6cd224e51
msgid "knife subcommand [ARGUMENT] (options)"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:8
# 48f2dcf0cf9b4808b531a78200635183
msgid "Each subcommand has its own set of arguments and options."
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:10
# 37cec7324e1843289162c287eadfd9cf
msgid "All syntax examples in this document show variables in ALL_CAPS. For example ``-u PORT_LIST`` (where PORT_LIST is a comma-separated list of local and public UDP ports) or ``-F FORMAT`` (where FORMAT determines the output format, either ``summary``, ``text``, ``json``, ``yaml``, or ``pp``). These variables often require specific values that are unique to your organization's |chef| environment."
msgstr ""

#: ../source/knife_using.rst:67
# 7dfc75739b0249df9649ef69ea5e9a04
msgid "Many Users, Same Repo"
msgstr ""

#: ../../includes_repository/includes_repository_many_users_same_repo.rst:5
# 8c1a8b44b9e3422aa2c3520a62984628
msgid "It is possible for multiple users to access the |chef server| using the same |knife rb| file. (A user can even access multiple organizations if, for example, each |chef| repository contained the same copy of the |knife rb| file.) This can be done by adding the |knife rb| file to the |chef| repository, and then using environment variables to handle the user-specific credential details and/or sensitive values. For example:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-20 12:06\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_using.rst:34
# a005d0eb10cf458d9e66f5ff935c77b6
msgid "Working with Knife"
msgstr ""

#: ../../includes_knife/includes_knife_using.rst:4
# 6bae82fe6b07407598f384e1909f0be2
msgid "|knife| runs from a management workstation and sits in-between a |chef server| and an organization's infrastructure. |knife| interacts with a |chef server| by using the same REST API that is used by a |chef client|. Role-based authentication controls (RBAC) can be used to authorize changes when |knife| is run with |chef hosted| or |chef private|. |knife| is configured during workstation setup, but subsequent modifications can be made using the |knife rb| configuration file."
msgstr ""

#: ../source/knife_using.rst:39
# d6a542d8f9074f029a1dcdc7f7f73d9e
msgid "JSON Data Format"
msgstr ""

#: ../../includes_knife/includes_knife_using_json.rst:4
# 4d11e9978f0c4ae98dec6799644e759c
msgid "Most data is entered using a text editor in |json| format, unless the ``--disable-editing`` option is entered as part of a command. (Encrypted data bags use |yaml|, which is a superset of |json|.) |json| is a common, language-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see http://www.json.org/ or http://en.wikipedia.org/wiki/JSON."
msgstr ""

#: ../source/knife_using.rst:43
# 81be0bc3143d423086f3ea1cdb7182a3
msgid "Using Quotes"
msgstr ""

#: ../../includes_knife/includes_knife_using_quotes.rst:4
# 2246b0d2e50b413ba6b5a7b37cde2d5f
msgid "Values can be entered with double quotes (\" \") or single quotes (' '), but this should be done consistently."
msgstr ""

#: ../source/knife_using.rst:47
# b41596410e79404eb87cf894ffbd17bb
msgid "Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:4
# 7076053272a5434fbf3a3734b5eedb00
msgid "|knife| comes with a collection of built in subcommands that work together to provide all of the functionality required to take specific actions against any object in a |chef| environment, including cookbooks, nodes, roles, data bags, environments, and users. A |knife| plugin extends the functionality beyond built-in subcommands."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:6
# f64fec7c40084f07b5e94101eb3a2de5
msgid "|knife| has the following subcommands: ``bootstrap``, ``client``, ``configure``, ``cookbook``, ``cookbook site``, ``data bag``, ``environment``, ``exec``, ``index rebuild``, ``node``, ``recipe list``, ``role``, ``search``, ``ssh``, ``status``, ``tag``, and ``user``."
msgstr ""

#: ../../includes_knife/includes_knife_using_subcommands.rst:8
# 9df7961bf21f4a5c9665ae0de29c6b6f
msgid "The following subcommand runs only against the open source |chef server|: ``index rebuild``."
msgstr ""

#: ../source/knife_using.rst:51
# e6a3039731c64c5999297a9584d72cf0
msgid "Verb Sub-commands"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_chef_11-4.rst:6
# 49b08cf255b54e678a079f50d66ac319
msgid "|knife| includes a set of subcommands that are built around common verbs: ``create``, ``delete``, ``download``, ``list``, ``show``, and ``upload``. These subcommands allow |knife| to issue commands that interact with any object stored in the |chef| repository or stored on the |chef server|. Some important principles behind this group of subcommands includes:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_chef_11-4.rst:8
# cbf7bdf2c57140059c8a545090b3402d
msgid "A command that works with each object in the |chef| repository. The subcommands specify the desired action (the \"verb\"), and then directory in which that object resides (``cookbooks/``, ``data_bags/``, ``environments/``, and ``roles/``). For example: ``download cookbooks/``"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_chef_11-4.rst:9
# c4799d14f1d84fb2adf24e9b961cf0c7
msgid "Uses the |chef server| as if it were a file system, allowing the repository on the to behave like a mirror of the |chef| repository on the workstation. The |chef server| will have the same objects as the local |chef| repository. To make changes to the files on the |chef| server, just download files from the |chef server| or upload files from the |chef| repository"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_chef_11-4.rst:10
# 9e3aad2f9a994811ba32114378ef88c1
msgid "The context from which a command is run matters. For example, when working in the ``roles/`` directory, |knife| will know what is being worked with. Enter ``knife show base.json`` and |knife| will return the base role from the |chef server|. From the repository root, enter ``knife show roles/base.json`` to get the same result"
msgstr ""

#: ../source/knife_using.rst:55
# 1b44f8d4a361407c8a01e2706e5f2029
msgid "Wildcard Search"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:6
# de719978b0ff4be3b512748290a027b0
msgid "A wildcard matching pattern can be used for substring matches that replace zero (or more) characters. There are two types of wildcard patterns:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:8
# 21edeccb75e14cf9a2685ea18df25a47
msgid "A question mark (”?”) can be used to replace exactly one character (as long as that character is not the first character)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:9
# 1088e788499c496c9180f089722c3728
msgid "An asterisk (“*”) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:11
# bb55a9a5710d48d4a81c4bd4a7a1d0d6
msgid "Wildcard patterns must be escaped (using a backslash) so that the wildcard itself can reach the |chef server|. If they are not escaped, the wildcard is expanded into the actual filenames and |knife| will not know the wildcard was intended to be used. For example, if the |chef server| has data bags named ``aardvarks``, ``anagrams``, and ``arp_tables``, but the local file system only has ``aardvarks`` and ``anagrams``, escaping vs. not escaping the wildcard pattern will yield different results:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:17
# 7f6fe1f484ab4f5190dd9d32365a8f64
msgid "asks the |chef server| for everything starting with the letter \"a\" and will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:23
# 1686da621cfe4e15bb7645752d13fe27
msgid "But, the following:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:29
# a8da3f16940942bea4fd44627c112e39
msgid "will return:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:35
# b4e4c64968a041abb9ba08e9deacb277
msgid "Which is the same as entering:"
msgstr ""

#: ../../includes_knife/includes_knife_verbs_wildcard.rst:41
# ae9694567e4b43eeab4ec26392a6a61c
msgid "to return:"
msgstr ""

#: ../source/knife_using.rst:59
# 86dbb525eebc41f1a60e97efccd533e2
msgid "Plug-ins"
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:4
# 6bcebfda4d994b0da5c4e30a7d7f3833
msgid "|opscode| provides the following plugins, which work the same as built-in subcommands (including common options), but must be installed separately (using |rubygems|): ``azure``, ``bluebox``, ``ec2``, ``eucalyptus``, ``google``, ``hp``, ``linode``, ``openstack``, ``rackspace``, ``slicehost``, ``terremark``, and ``windows``."
msgstr ""

#: ../../includes_knife/includes_knife_using_plugins.rst:6
# 6d35838c68684a79bf639fc6405476f1
msgid "The |chef| community provides many other plugins for |knife|: http://community.opscode.com/."
msgstr ""

#: ../source/knife_using.rst:63
# 328cf48909434579a570e3478a3a7b28
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:4
# 343ef45c4a404489abf14ccecca7b853
msgid "All |knife| subcommands have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:6
# 3e42d44946804705b15c38166ce3e697
msgid "knife subcommand [ARGUMENT] (options)"
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:8
# eea364b3054b468e9538eb692f123e55
msgid "Each subcommand has its own set of arguments and options."
msgstr ""

#: ../../includes_knife/includes_knife_using_syntax.rst:10
# d24123bac1124c07970e8dff1bb9259b
msgid "All syntax examples in this document show variables in ALL_CAPS. For example ``-u PORT_LIST`` (where PORT_LIST is a comma-separated list of local and public UDP ports) or ``-F FORMAT`` (where FORMAT determines the output format, either ``summary``, ``text``, ``json``, ``yaml``, or ``pp``). These variables often require specific values that are unique to your organization's |chef| environment."
msgstr ""

#: ../source/knife_using.rst:67
# d219082ec4b243b39cf7ff1475140376
msgid "Many Users, Same Repo"
msgstr ""

#: ../../includes_repository/includes_repository_many_users_same_repo.rst:5
# 75264d2bbfe24e3d9b4fa35b570bbe36
msgid "It is possible for multiple users to access the |chef server| using the same |knife rb| file. (A user can even access multiple organizations if, for example, each |chef| repository contained the same copy of the |knife rb| file.) This can be done by adding the |knife rb| file to the |chef| repository, and then using environment variables to handle the user-specific credential details and/or sensitive values. For example:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 18:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# bf5c9ea5fc004045836b1cf9731da7d2
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 1139f3408ea149b9aed1ed5f81dced21
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# c2a4fbd314cb4c6f93d629295e2dff2f
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# 72581bc9c7a14730ae387d1c50a8e852
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# bfb65704f5e645aa9fc2eee1ba63732f
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 782329a3c15040e7a45097321de66200
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 788a8101068d4d22909dbb5ec0b6b617
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 25aca1e08b6c4baf90cbc78315d0c807
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 4a3f2a08cce04efe8082da82078fa158
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# a755e1bea8e14a3e82b59b8261ab152e
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# f6a02b18fcaf49dd8fb1209194c6948c
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# be39b9f5cbf44a2ebf451cbe885890f5
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# e54ebf86907442e39df13b181e47d6d3
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 73bf8ed7c49d42ba9095f023b94292d7
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 116417af4da3468cb6ddba58e0bfbf0a
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 264ce91990514468aa19320f0470e9f8
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# b5f18fd45e61475bbdfef44b64b6d5f2
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# ddef442ab4aa4189b32fe13b7e4665db
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 0541c2e6050e44179d628f811f5bce48
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 4af2c590bc6b4c6aaff23ed683adf395
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 7e4b354f6b7c4ef5a1df259313c51948
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# a9fd06fad113491ab3711a66957f87a3
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 25f3f060f78c4dd28c722e90c2967e04
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 872742e4c683433482bce12264120a91
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# bb0ba4b54d3c429d841fa04726ecf28c
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# ca7966c941b4463aa9cad5be726cc48f
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 992ff9800df248debe9d310551f3aeb3
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 98cb6cc6f3184bba88bd56830f811e4b
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 7eff2160d2ee47f1aeb0ecf1a53d8b88
# aefd63b06c7d44b9a6e88996108f5402
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# c54fc29783e545338f91278796e1702b
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# b7d5f9afd6ef473487201b6dc0fefabb
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 98cfbd314eaa40b1854a4b0749beae4a
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# be7c100e41da4cec907fa24ed5119f56
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 95181710bf434653a321e3ad4178fdff
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 79e2103898274b17a25bc0663884b4b7
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# c899faca1b684ba7ae4dbfe7a516f6b1
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 07962abbb04740449ac3691b36828af4
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 33e5c69b3fd749208dc4db8e355529fa
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 0c242706bdaf4528b362efda219fbb1a
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# 4c4639807ee84e9bbd377fa10fb7f6a7
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 3d6279762a8b4e96bc0fa479f97c4593
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# c5fc879b2b0b4629a76de92380d8c9dc
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 1351b2f9253d4aa08277c561865578b6
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 8fe7faf215c649c5830b7514c8cb6594
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


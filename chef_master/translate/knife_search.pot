# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 12:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# 3b30261e5dfb456492bfd829e2ed2167
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 8d63ee0c826f439d8ee149174aa501bf
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 7c03fe38f74c4e1b8559f7528f700dd4
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 3ca7594536b84d2faf40e7393552620e
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# e3db027617714d3ea71ac6b89f073d12
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 64bd5746765a48c68aaa0e8b4cbf2653
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 73af8434a2b240faa8311fd00b3dfa8d
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 06ae69abcb9246a2a81fc4d24a399177
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 2ebebf954eb5421186a52172542ed156
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# e0095959cae146f8b99db40116aaf778
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# e3cba87e3ebd49ecae1824179aff5aa9
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 87437413f541432c9b91b8a1ae7deb28
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 84b8839d07a843e49a5935a968b0a9f0
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# ba45c7ed218e4340a195687259f41264
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 9f58f582d24e48fcb349ec2877f21327
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 1d701cc55d9042eaba6436852ef79b69
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# df6b3df7d7804f1e92a375d5166f7c75
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 4d7cb12ae82346afa44228c4121b17fa
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 7b2f1298fb9741db9331c460f46668e1
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# b8d0516dbb7a440293226c14d543a39f
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# d83f974313614b298d8941fc487eb50d
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# d5321175b6294ce780bb32b525d08622
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# a64c4a5e430541c4ae28fcb58207049c
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 096bd4b286cb47b48ed5f25136d2a105
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# e1e6b27241274747a06849cec9052a59
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 4ec9ed23776845b68b79d73ab03dd868
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 647a6064ce9d4518ad352bc0452cea5a
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 93ba44a285534b68802cf46b41988a9d
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 71327afa30f54b258a6cac4b9f1d3949
# 6f4134005b32401d92e9d0c47d07f14f
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 6975c255070440e49815f0400983ca7b
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# b04b0c232a9a4aaea7e0a9e77b20dd3a
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# 976b39a7e8f145a5bca4c06ec896aae8
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 999d5a188a254cbabbd0adad203535a8
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 387197f0c4e14fdbb2d45f9a15d9382d
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# f6a4446b01c946e397b3d81c62dd18bc
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# b3a17bbdc5d3467784bb73182b7378f3
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# cc47685871354dee922cf93fe75d9f89
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# c9eca4e0a190491f8a6d9a4fc5448464
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# f98517e0b35445ea97f4dbf1aa386497
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 20dd0301fe634bd6bbb807cd759c03f2
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# afbbd4b4127b4ff3ac81abf62d22254f
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 750ad113036a494b85a9f2707732d0aa
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 700c9a5666b340a0abec5b13cb303f9b
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# a22fd8c17b9a467bb855d7856305068a
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


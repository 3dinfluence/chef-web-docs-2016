# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-25 09:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# e10ae65e981045c7b7b7f7897e5236e8
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# b85f8fcfe4944b68b9f39634261c6080
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 930b4dfa154a487f80547e6bc1758116
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# b6cb76f1d3e744f6b3d9bce15c9c0d23
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 94f77a986e734396a96e1dcfe4062bf1
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 5c772e2524d142ab8182747920ce905e
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 8120373ff4e24bc7afd6774f1449f4c2
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 32c5d95b928e49768d738c561a752ad6
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 33d92bc871d3428bbb48fbaf5965dbaa
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 8babceecb55045a698db08772e972412
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 7444c3c992784330b4201927a4c9b53f
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 872831acbf244b7c82820597a04642fc
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 9852edc2f231433b81a58d8fdd63f4d0
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 2a326e6c933a476894f594e522ddc5e7
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 7127391f1f0849ffbf6b3de5f1a48fcb
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 0db03b14c73c4fbfa8e4c2071e1287e4
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 17c068e8d7f448feafddce7a124b815a
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 19a8a2a0e9e8400b86ac81eaadcad501
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# b6882f96fe81429688ec9b09b460537c
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 0b31b4360dcf410da8f6f41b04cc1d35
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 7c9056d6a0b6432caa71fc0ebec57d0b
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 640f23ad0b7a46e18d2fc10324b28904
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 9c7a9e5fab6e4e3791265bf01da0e67e
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# eb495ffbf3114900bf0d59efaa437d44
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 432fd39ed3b44f13a8f51d9beff175d7
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 9c622ac39fd94e93ada85cb07aec5a54
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 40d7812deb254ac299f479f23e03a2fd
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 80e94b11204447739e584411dae011b5
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 261d26bfdd7745f1811c0674a75978a6
# d9285c6146fb47d28f9d2251cee4322f
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 01c9191632894581ba169222c768689c
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 97b910ab21034477b23df400744237de
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# f7247883bb284da79df5f623ca21cf29
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 2b0f1292b7b94716874ef7acbbdf4260
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 43030c886a574c5ebf18b1e90f56f4bf
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 6bbb53f335c44a7a8744d04fe9dcb812
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# 2ca45db6a7b040cf95ce98c252753234
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 8d25d67d0da44d929ce3392c32998176
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 31ade92fd8734a6e8c80454858d5f8f4
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# d656d8bb707d4abeb4a950dbe8e0af3a
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 081636bef2b9402bb2fd034805927d90
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# a3de4e94969d4e7cbba168e50c445dd2
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 01cb0d4f8a87489f8d544dc285611c48
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 9f2473ba80f942928cc193eb6132631f
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# a7b94e42ab8a44148ababfaf57eec8f4
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


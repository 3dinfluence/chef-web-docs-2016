# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-12 15:43\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 7e4d0c0a6eb44958a0510cd3df3df51a
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 4aab2279b31d4502a52835581ef10d1a
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 3416f1653ebc41c6a1c47c292625d332
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# cbc69785df1b4671af09573da7c0fc47
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 8e0b8e5e3640459eaaf363b7a7f37554
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# b5b80da630904436a8d8baeb91964b51
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# e4f4fb1ccf034474a6db772a52b355b7
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# f435989bc34e4be9864c6b80ccff5566
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 747581b2780443cdbf44215d84a0f183
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 405a1375193748309e6d416107845aa8
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# ab8291bce5dd46e89fdf817a7d4bc26a
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# e43ef01f09aa4fc1ba1cde8e32c43f31
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# b1d48ec3950842749ef263d50e8ecad3
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 77b4b8263521408da61258368dddb28d
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# e1931856e95c417e92457ade5dacfb45
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 5255808cd20f4e00be23556cff910d41
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# c2738a22d87f43df9662ca73a294efcf
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 3c152520b3ce497f945471dfab45c929
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# e8b5ddb5cfb245968567961784664f03
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 8ddf08e9d32b463e8a25c0d7b6397e42
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 6507c54d7e5c4fff800d575252faba21
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 5bd434cbeb0743f2872da1953d2f9afa
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# ca0721d2a7f54861a5caa81414a86cbb
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# fdd7e914d58349be9f449dfa731a56e0
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 6e91678e91444517b3122f38a903d9ba
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 982d227625054c9a81cb42b9a49323a3
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# f05eb7b4bbb54998bc5ca4872689d93a
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# edb5fcd857e042afa2d5995dd6edf26e
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 8dbb9e12d6fc4e00a0efeb04ca3536a3
# 8362847519c1404390fce108522f27b4
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 21772726d1c54875b7e864c5731f0aab
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 0cd80d3c921546c28af19e3a83e99609
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 05077ff49fbe47d39570b45bffa3c157
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 9ad65153ac68403ab8721e09dcc52c8c
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 0581f5c706fb4ea7a17fc5a61b85025e
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# e6a8860f547b47c7bbb40ac8c9ab0bb3
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 9cbfb0194ea14f1980656fcd732e5eb9
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 144fa1e7cef84facb9275063027933b4
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 0f1c3ff136eb4c04b33d2770b6bebb67
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 42e06cdba2e64ca0b847b4ddc038a88f
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# d6efb4ec7a484fb88dcf20e76aee7e24
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# fb3b4175337f49ff941d8f99114a3f2a
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# 552c7115cc1f4b4989c99cd56d72091c
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 31c583a1b68b4a569332866b398c2489
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 6165f6086dab4ca3a1542ebbd51dff99
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-27 22:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# 36adefd5b5884029913ee668d9aa34d1
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 3bc2ba9088584e47a581479e1c15a3e5
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 569808321dee48ae967fc84598ad00ad
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 48dbd649dd98413bb2ad325bb5829670
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 3001c2807478462db337453caa30e1c6
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 18343f24d77d4794b219695f8798dab4
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 36ca3a082e254c3cbc7ae71f7d43bd64
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 988c05190259447783ed86ee52ef7c7a
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# d29a7dbec26b4054adc7e850580e58c3
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# acad24ae0c8e40188b4a0ce2382650dc
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 909e4ca1249744daa9984944ea1e8be4
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 6430594f1f72459fb1950f591072fadd
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 8b665c0ab38c48658d96dea84c597da2
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# ea68bfecda994cafb708d5e21fcfa9d7
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 8c5f3920099d446194ee6ba538439f64
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e99902f54029435597e748dcea1fda06
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 4c1e10772b584377b33408302b98f596
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# badcf71ffa774eee9f03a405f00d94e1
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 69f8dd4511724db28b423494ea93665e
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 3267c880d0f54ebfbde03b41dbcb06a9
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# a1850113688e44ccbc921c803f8272af
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 6c22c89bfe824e5da5f961051e22a2f4
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 8a2cb5adbd534939b7dcbe81fe9f37fc
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# fcc2bbadf73340fcae4f96a3c8292d2f
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 7bd44154c1a547b98b80123cfc0de20d
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 0d0c37683e1b42459a848296078b44e2
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# e16ff25aaf0240b2b614d7798b4c8fe0
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# e50fce1238fd4473b37f180aa7eab923
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 5fdf122ffe904e2596714a5345340ab1
# 1156d9f39bde4f78b6002cc85a7acbeb
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 2b5f9993297e4be4b11dbb4ddc156c9b
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# e330def92cbd4398a03de70cea9e856d
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# 16803cacb880427ea3fa1b39b1871c2c
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# b271676537904a2c92d2c66ce18b3d5b
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# b07d2fe2ce6842f693acb274d3ad9e74
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# c26e6a5f664d49d3b77a9c887c174b61
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# a963ad07465c4b0291f50b958ce31fe9
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 2e06cc4401be4cba8a5f18712cda8df4
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 74846970bfaa46c9b585c9acff159786
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 5e539e57ae704936bf96a3ee98501245
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 6b6946d98e21405cb004937efd315c6c
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 3263d6d267e64f269d20e590b9d9093e
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 78a7fafd4748437693953d1c2bc22c6f
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# f193f744f5224a78ad60f5a5626a1021
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 16790055346a44eeb7a1ed64ba34f55c
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-02 12:37\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# 47483cf226c440edb6715149c5f50ffa
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 43e4020ccc2a4262be0978bf4a9b0427
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 298e8164fb2147a89412d98eccb6ff0e
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 7e981acfe8234979b0aa5c6c6283e33e
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 713c1cef2b394ad18bc7c4798bd37ddb
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 8a3d3d4882b341c8a6b981e7b0071769
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 30345a6afe6b4ca1874f01aab052cdd7
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 047e973c3bdf4a52a1b617085101026f
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 853ef99bc69e41dabd40346908d869cc
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 0f36a32520d34ef7aa56a3eddffaccdd
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# ae9a3b3bd85b4d6681d22ab5ad99a2a9
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 20d6ede4e24b4968812945fa119c313f
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 73b191c364094dcb81df0667d69ab608
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# c773b915677245d3affb8d9cb9004201
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 70e56141adb7453abeab40f7e383e107
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e5d01aa7039c4dc1aded4bb545804827
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# ed5cb70ddd084b8c854f0e5241008661
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# b97cd03afe7145afb853d8f55b945c8e
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 0ee570a0c5204feab8bbef57fde94816
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 47221b967003437eb1a3001b38ea7624
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 9344b8cb4d1d43e8bc42f99a09c25030
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 7ad4d7727caa4cfeb48c3217b4375357
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# dd661e58b774426fb7e8d71813a6b297
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# c6a654b20a954db29a6b02b8b4a1488d
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 15203cd78ccf4975b6e0f27e1d334740
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 6dc8cdb513ee4019827b630304ecacb0
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# b1fa55592fb74adeaa18a12c9c58f7c7
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# a528e0724ffa4d9a8eeb8d1f3e3560b4
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 2aafed6ca72446c3926e177d7dbdc374
# d7df42a5db1d49efb72fe8252077e390
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 7c10c31d17c348b399d0ffadfe4e122c
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# e9ea42b9be9e45f6a390be0b19000f4e
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# d84e4a94f2384bc1b72bb8cf57351a66
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 909a5368d25d40c189e4586342307148
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 53531fdff8fd4248bcebb399e84d5237
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 55989ba702b84640b9b33cea7f189620
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# 749a50cfda444c54b9af03e59b5970f0
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 59b01c99680b4b749069663113aed30e
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 30311b1dc53e41328bc1c577b053c656
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# da4dba18f56f4081b25e92c96f315966
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 3b4d7c349dc24dd2924dc95380dd39ab
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# b0eaf385bea94a7c82ab0593c0250876
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# a8649cc1c1b34905a4375c0695e01bc8
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 3515bf07326c4327ab420f818050c27d
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 4f93eba3e239469bb6cfb07e979e4667
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


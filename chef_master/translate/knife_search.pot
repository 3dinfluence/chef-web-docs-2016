# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-06 21:31-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# f211369c90504b8ea7951eb9ba16b05c
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 2480c85185864bb7bc98e615f5ad633c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 0c00a983ba09422fa444e6b69509259a
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# 48395b3b900f40d3b15ba61d40bbab4c
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 14030aba041a4055a25a5cc3981236b7
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 5ba0a8940bd1400c9b0e9a6fd28249c8
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 2010a5b884754fdd93612a551d14d979
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 2a84bd06bc394e94b897a6a96bcfc900
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 447a13bc7c6643a2b4a6479c94dedfb3
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 6c4caf86395c4a278de6ccf4e9ce36fb
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
#: ../../step_knife/step_knife_search_by_recipe.rst:9
# 01c1677748ee4c53be6b2d784b7e44cf
# f75a80ab6f324f21b2e600121c9c1eab
# 062ef86a38c14ec595279c2a015b86cd
# 8691bd357c6b4121a74a8439f5229026
# 63acfc7d439d4a3a8fc138d52786e53c
# 54c7feae59ad47219da57b7af6d9a412
# bd84098f2f5a40d6a45cc4c7744e70e2
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 4362863c8c9a4d4bb28dca0856a4a546
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# ee8234a8e002424b826ff848d62deaeb
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 0c2f38db0532450487eaf4aa8c12dc97
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/knife_search.rst:23
# 494c22128b7045e4ba744dcf48711739
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# e9a919fd5c914f5ba04772631ae0d157
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../../includes_search/includes_search_key_knife.rst:5
# 3a62bd71cff84dafab088b0288bd71d7
msgid "To search for the available fields for a particular object, use the ``show`` argument with any of the following |knife| sub-commands: |subcommand knife client|, |subcommand knife data bag|, |subcommand knife environment|, |subcommand knife node|, or |subcommand knife role|. For example: ``knife data bag show``."
msgstr ""

#: ../source/knife_search.rst:29
# 8295a5ce0a694d43a9d2e0f0fa324f03
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# e91603e2b42543df8cae71a4597d0ccc
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# a9d0156b28e84a94aae70c986a309d44
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# db5fa0635a044c3eb0283b367ee413c7
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 21c12d2f1fac4635945b58c4e4b31bdd
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 67bb1afa8a384b2389b98f5eba03ddad
# 8886e7f8dce34f9d8b3f325892f7a9f3
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# b6471e7bdefd4e668181dce49c4c373c
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 289ab23ac1c443a29bf27e54f6fb2f07
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 23b6380be1a74c3ba554257e43142e7d
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# c4ba115953f342d1ae8ea92cbcbe10f5
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/knife_search.rst:33
#: ../source/knife_search.rst:107
# d39ab0e92b6346638ece7adbb0c5574e
# 7ccdf1541f1248a19d5f714b696720af
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# 7c29ad0c4e814339a73f82c31196fad6
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# beef77f608d44dc58045e0b39fcb46e7
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# d9c7a508291047738c2b82aa8a276f8c
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# a415921f98c3471fb4caf63b798b10c6
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 50a82daf38cc49beba0f8d390b683c32
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# c2b4d8f685df42d08a511644fe5e3378
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 0eb6a44649ee452688bdd026b54df491
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# 68f344f0d342413c8043e104dc4776d1
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/knife_search.rst:45
# ba3299851560473699a56b2fd38087ce
msgid "About Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 4760ea9cda9b484180e78f75bdfa0b82
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/knife_search.rst:49
# d3c17d33c30a4572b14d26bc0277ec4d
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# e37b6a5140e44d96ab923ce68c815b7b
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# e0dccce97a764aac85e8fd2aefe03f0a
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# 8d12a65c96b74c25b9dfa0d8c54690c3
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 89e8fd3c720e45afabde316a3a12ba15
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# 35a255c27640420f97eb45e1d3291e1e
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/knife_search.rst:57
# 030660be86b246debad8252c06bd80c5
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# f608cb3b226b4be699c9185c10f13c2f
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 8039d5a78fe84fe2801fba4fd80f4eaf
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# b780c613fceb458992888212c6905714
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# 5de4ddd4c16e4831a676320db7373444
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# fc6db188b13a4bd7a64315c46908142f
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 026a76d7cf1845c8975259f6b77192c3
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 6d74274538584fe19e5d40ac10424970
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/knife_search.rst:65
# 233abb3d99f2421ea6f76347fe7c45b8
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# 460bed9415f14144b440c501c9878b10
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 92816fc4afbd4251b9e38f81e933c92f
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# ffa3ad05158d48fd8721beb61d52984a
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# cd8e2c35fe52440ab023718f1605ea50
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# d8c8b124a31c403e806756eedbe09e52
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# ef1612dc4ab34833a8542a428c2f55ad
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 058809b50d754ba78b43fa5dd77a2a6d
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# 5817256f7a884a3b948026cc5fcd22d7
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/knife_search.rst:73
# 96f221bf804142ba847a5e2a5a111d1f
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 5f3bd1ef18f6494fb468074d1d65acea
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# 3d1abdf543ad45a197abe0a50dc603a8
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# eddee1d5d8c3476c92af7215390fb5d3
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# 7d68473e817547c3b0709b58624a8ca7
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/knife_search.rst:79
# 9347ce5fb9de4ac3b82f064447a51407
msgid "About Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 994a9ddc8fe742d8bbdf98d4230d7224
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# 38d1be6bb9a34f2486d22d3c5d598546
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 5ce3f79af397442d8007c45b389281c8
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# b78d7d6a954f41f5ba74c79f015f80df
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 7e0a5199b1354497ac73cf0e76458dc0
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# bd90c4bfb4f5493b853ab066cadb0778
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 7e935715d5204f8899e8c632e7979def
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 600ea2fabc7e47d998327bda02f1c474
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# e87fb6f2032d4e038f29632158bab876
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# e9777fd4f5b1446b9492d524cdcdcbab
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# ae925ca457a0473281f616e11061fca7
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 558ff445e5294029bf6e96ffb777a5aa
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/knife_search.rst:85
# 06fdbca0d81d4ce0869f602f8a7881a5
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# f417ccf08d8b45f689cf3952d7989f82
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 6af6b8f8e96848408a87ba3547b5f491
# 4023aa8feb714f74801f191efb35defb
# 79f5eb173ab541a49cb69e0a61301957
# b32054c010de49418290f7109b1b7b42
# b3e7af6481354ef688b922dce6e5765e
# 0e14c34c2ff246668436b21af3013d3a
msgid "to return something like:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# 2063e357d03a42319e39698577abcbd4
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/knife_search.rst:89
# 8ca78da19973482ab9bceb241655f434
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# 2a05b0a7d9444cbc9f73c4b1bb1bca9d
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/knife_search.rst:93
# 319e4df253f143a88dec2d6a68273ad2
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# ead5a37c80cd4b5d98ed6d9bbf50a1cd
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/knife_search.rst:97
# 2c8cbb2998254f30af54c1305880b825
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# c5eb6da18e284474845c05f5d015fdc6
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:11
# 5d74f5ebb5284f8f87c897d61f60d7a5
msgid "For example:"
msgstr ""

#: ../source/knife_search.rst:101
# 3cb726323b104e5a82518cd5c6c1290e
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:102
# edd7fb0b502949819edc1104ef5d2827
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 0b616918fa9547f9bfcacec94fd69541
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 4a44aacb6718455aa1cd5e610a6f3255
msgid "``-a ATTR``, ``--attribute ATTR``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 31b1be7256ef447fa0df5973c05e6287
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# ac112ca426e2423cbade80bc605c3eb7
msgid "``-b ROW``, ``--start ROW``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 55afb495d6814b1fac11c18b2257af50
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 40554fed2bbb4fde8880ba269741894a
msgid "``-f FILTER``, ``--filter-result FILTER``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 14b1e11dabfe4e7d8ee9f5a998f41fed
msgid "Use to return only attributes that match the specified ``FILTER``. For example: ``\\\"ServerName=name, Kernel=kernel.version\\``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 08934515bf0f4e6cb675474c28dffb28
msgid "``-i``, ``--id-only``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 15b001efaa4f4f0db49d3136ccb02232
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# d7bfa781297647a6a256ce7a0e91f286
msgid "``INDEX``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 7d550dc9e9c0491d89179cb32c3f46f3
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# beb60264047a48f1a076958db663291e
msgid "``-l``, ``--long``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 6181f3600b9f40579d5aba1c8cc971d8
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# ba95498c037b4408833877584debc5fb
msgid "``-m``, ``--medium``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# c12838d6897741ceab17de354d56e31b
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# b25ca50a5b234de890f1d6612a194968
msgid "``-o SORT``, ``--sort SORT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 62c76be80aae49088b2acf843176329e
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# e5f481e6592a4db9b24c7fe25f2cb988
msgid "``-q SEARCH_QUERY``, ``--query SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# f018ecb0e2574c0ebde18f3be140088c
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# d65d9f6bba694163822a86694cd98e73
msgid "``-r``, ``--run-list``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 325bbacd729c41109c039a074d3d9271
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# dc5ca71ebb514fa49ad2d15d98601716
msgid "``-R INT``, ``--rows INT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# cd25d8588e5e4f1596fedb67294eac49
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:42
# af91c338e7c14f9f84e1e54defcab1ec
msgid "``SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:42
# f8199c642973422f9193a25ee39d94df
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:108
# 7a3e6878c39041c1b46eef7e2c77d96b
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:110
# 8a64019d8310495ba95307c7303c5097
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# a0715ed550314c90a5ee5906cecf5088
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:114
# 8e4e2769a9f2452dbe7091c1971b5297
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 8b5e2d2a74154292bde0cf290807de95
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:118
# 085abc006b594bdc94b023d8acdd6eda
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# 5917c51083dc4f818d6c1ad1e05367dc
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../source/knife_search.rst:122
# 48955f9ab8b44141b2e4c9cbc8f77ccf
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# 6343eb4461fb45e395444eca2c632bbe
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/knife_search.rst:126
# 1a0c36492f194cdbbc03bfe634b72750
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 693d9605fcd046c295b71a83954e40ad
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:130
# 3679a3b9c9a1427f94459c147c6a6c32
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 96f2173826bb4376b1671fa7de6e576a
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:134
# b468bef3bd01432197dc9238f55a558d
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 30e46d0b030648b1818b436a354a9278
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:138
# 7417e350bbc5462685f5c5679f969658
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# ef40b8e9c48c4bb68f086e03741c95f4
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:142
# 69ed3361238347b5b63ec0329be31b2d
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# f00f6707766447018626ba56d5106776
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:146
# 840904ae372d4c909cf7277a7ed108e4
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 594548b448454ba59dcb38479cc10e0d
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# de5b9d9927f24923a33a7b838c8bab23
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:7
# d25342b09c644332bf33f15f78edc012
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 448c032f4800417b9c079ef6362d9efa
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, the ``search`` method in the |dsl recipe|, the search box in the |chef manage|, and by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 2cae1bb70d1e4817b3ea099df93013dd
msgid "Use the |subcommand knife search| subcommand run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:14
# 9d0a0c93e3574259b10c5e453c9d1978
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# a396851aed5845c4b763b2a37413c06a
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 4725c24d10d64013aa03a16defe70950
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 293feb4838154185a32749ab648f9db7
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 27abfe0dead24c4e9923c02d0a45d116
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 095b27625e2d41289691aa64fa03b8e8
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 924923ddf7d54c8db5536a4de672ba8a
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:9
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:15
#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:21
#: ../../step_knife/step_knife_search_by_recipe.rst:9
# 2ae11ac7cd7d41109d080cd412e4a7fe
# f890b738d063469aac02092d134b87a9
# d2185a0d9a494f5fb925acba4dff9e22
# 76012752b50c4dffa2913cfd5e14a4fa
# 9ab2492a6ba74852adb8b79cda9b72aa
# 48e566d6b7bc4b17b0b6e8c32abee907
# 45c83436f0cf4c13a920b2d927bf0e38
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:18
# 2da6019b82eb4feb8266a64617748f9a
msgid "Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 299a2b3604a646a481caec2997e2431e
msgid "|search query syntax| A search query has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:11
# 33027a601e5d49e8b8a9f834af75b044
msgid "where ``key`` is a field name that is found in the |json| description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (\"*\") (and as long as it is not the first character)."
msgstr ""

#: ../source/knife_search.rst:22
# 83e1a079a3354c2f97519321c12c2d45
msgid "Keys"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 857fab9501ac43c093cd6d52368ebf51
msgid "|search key| Any field that exists in any |json| description for any role, node, |chef client|, environment, or data bag can be searched."
msgstr ""

#: ../../includes_search/includes_search_key_knife.rst:5
# 4f6fc7d991484f328859118e319e172e
msgid "To search for the available fields for a particular object, use the ``show`` argument with any of the following |knife| sub-commands: |subcommand knife client|, |subcommand knife data bag|, |subcommand knife environment|, |subcommand knife node|, or |subcommand knife role|. For example: ``knife data bag show``."
msgstr ""

#: ../source/knife_search.rst:28
# 626bbac63d5048509d9d45a5b103a11d
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 23420db7f2874c8ca9daefd7058502a8
msgid "A nested field appears deeper in the |json| data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested fields are present in a |json| structure, the |chef client| will extract those nested fields to the top-level, flattening them into compound fields that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# e2325476892148568e8413cc3b7614c7
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# c4c09ee861404a2b8efa58f359f1867b
msgid "Consider the following snippet of |json| data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# e5e254a20d404dcb96dae28c4268a986
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 04cdfda7b9314b669f3a221058483ce8
# 6da1aa02d3264016bd9c923d3a07ab93
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# bfb4bb0c0f684c40a3aacbe2da71a204
msgid "This data is also flattened into various compound fields, which follow the same pattern as the |json| hierarchy and use underscores (``_``) to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# bffa38f2f73042e39c5bc2cde71afd59
msgid "This flattened data structure also supports using wildcard compound fields, which allow searches to omit levels within the |json| data structure that are not important to the search query. In the following example, an asterisk (``*``) is used to show where the wildcard can exist when searching for a nested field:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 7aabf43192454ee3881a6a5aa0e58a69
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:124
# 975578a47af8444e87bd0eb4eca22318
msgid "This query will search within the ``flags`` node, within the |json| structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../source/knife_search.rst:32
#: ../source/knife_search.rst:106
# bc0408ed90de4ccaba5e5705d8111250
# e7f360b2df554f5f9fe303387801c09b
msgid "Examples"
msgstr ""

#: ../../step_search/step_search_key_name.rst:3
# fdfb6cb6f11b420a8c0a5aeb540c4da0
msgid "To see the available keys for a node, enter the following (for a node named ``staging``):"
msgstr ""

#: ../../step_search/step_search_key_name.rst:9
# f1653a54e5f046e683a12810e3c8d350
msgid "to return a full |json| description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../step_search/step_search_key_wildcard_question_mark.rst:3
# 585a19d22f854d63813d877b679772e2
msgid "To use a question mark (``?``) to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_wildcard_asterisk.rst:3
# 15c691779d4d42d28f9b3df3d93d8e23
msgid "To use an asterisk (``*``) to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:3
# 64214e83ac324830a2450a445f43c61a
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_starting_with.rst:9
# a619030d962247bbbea998d151900c7d
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:3
# 945ac545b9994e8b9185944d75715295
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../step_search/step_search_key_nested_range.rst:9
# 0da95c060d4f4acaa1a801bf78b54f1c
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/knife_search.rst:44
# 990da19e4b454291ab1a2d6a8c9359f2
msgid "About Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# b42fe80dd0ad43019604e43d69f51d8d
msgid "|search pattern| There are four types of search patterns that can be used when searching the search indexes on the |chef server|: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/knife_search.rst:48
# c8cb9df69e2048b38c29e0b0c31718c7
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# cf7c04f2388e4ea99be9ce4817bc6766
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:3
# bb1ff2fe822e42eea8b2218a8bd549b6
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item.rst:9
# b38d47bc00ba4e789cca1b86e10c7a23
msgid "where ``admins`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:3
# 7b3db036563f41369936f24c9eba3f35
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_exact_key_and_item_string.rst:9
# c0a4eb4afeb544bd9a62cad0217fdc54
msgid "where ``admins`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/knife_search.rst:56
# 8beda6cf272e4b93a41bfbced456ff50
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 7fa5cea21fbf4c5b9606fd44449dde98
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# c3cfcc94db6e477fabdf63715d801223
msgid "A question mark (``?``) can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 094ce8bec2a3466db6ece3ff92b03d97
msgid "An asterisk (``*``) can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:3
# faaf53234dfc4504ba8466e84fc75d49
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_any_node.rst:9
# 909412e9b172411da57ad068fa60f549
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:3
# 6741ab2f5efd450d858d767cb0e0c5a5
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../step_search/step_search_pattern_wildcard_node_contains.rst:27
# 76c0574de16e4101b087771a209e5fe1
msgid "to return ``app1.example.com`` (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/knife_search.rst:64
# 658d0533a008411ea1fa6186a4fc69ab
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# dacf06dd4f67435696ad15ee9122b447
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:11
# 77f41f437a4c49f9a6054dbcbc0174d8
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:3
# e19954b339984a618fc21139e83f4159
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items in-between ``bar`` and ``foo``, inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:5
# 6b8ad3cf5b0042d08afacfb312ddec90
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_in_between.rst:11
# 82480a6b82484f0d86372f38ae080da0
msgid "where square brackets (``[ ]``) are used to define the range."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:3
# 2f8dee1ef9114cf8942c139339554212
msgid "A data bag named ``sample`` contains four data bag items: ``abc``, ``bar``, ``baz``, and ``quz``. All of the items that are exclusive to ``bar`` and ``foo`` can be searched for using an exclusive search pattern."
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:5
# 2d496cc38ad246e693592a4cb8269d70
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../step_search/step_search_pattern_range_exclusive.rst:11
# f3214f49f5db419880448c082ad9839a
msgid "where curly braces (``{ }``) are used to define the range."
msgstr ""

#: ../source/knife_search.rst:72
# 314d3851cf6c4012b489da6fbcab98ed
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# f10bca3a2d2b4dddba4df13dbf3295ef
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax:"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:11
# d51234937d8f4fd9b69f8352c545c42f
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:3
# 8126eeed3541449ca6c700d99ca31fa6
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../step_search/step_search_pattern_fuzzy.rst:9
# aaa53010081c45e787a7defc417f74fb
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/knife_search.rst:78
# 6cdd4c444cb34186b1f3f07ac5d8fc10
msgid "About Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:4
# 63d7082233f340bf94e01792c6c1e5ad
msgid "|search operator| Searches can use the following operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:10
# ebf78adfe0bf477b8f128fe65515556b
msgid "Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# c79488c9a02e4d9e9f592c779dd43f43
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:12
# 30b86a5418a24f3b9b23d1069e6e874a
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 2454ce57a55f435a96dbbf4fca735156
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 950fbe86b74f4cbfa73b844d366e6f37
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 73e2f397b73d4ae6a3936815d4caf2c2
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# dce368ddbe4e46a7ac85b9355fb8c46f
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# e1363a75d9684e6786ba825ff419784a
msgid "Use to exclude the term after ``NOT`` from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:5
# f6d1eb08063244b0baaa576b954f79a2
msgid "Operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:7
# f18f1ea63b9044ebbad76d14b1ebabd9
msgid "Using ``AND NOT`` together may trigger an error. For example:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators_andnot.rst:15
# 2a328c74835641548a08f0bff74164ef
msgid "Use ``-`` instead of ``NOT``. For example:"
msgstr ""

#: ../source/knife_search.rst:84
# a4cd00b13cb646b28e352ef71d989a3a
msgid "AND"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:3
# e0d6b863319546b7b04e599d4d8abe72
msgid "To join queries using the ``AND`` boolean operator, enter the following:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:9
#: ../../step_search/step_search_boolean_and.rst:31
#: ../../step_search/step_search_boolean_not.rst:9
#: ../../step_search/step_search_boolean_or.rst:9
#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 0a8633cac1cd4867a57476d174c54cd7
# 2a199b55a7a540959cc095ad93fd4a7b
# 698a3010fe4e4ba19e47f8e30f122a63
# 038e8b59a3e844de84f7d7618aa00875
# 4bf2d00dacbe408f99d6580f4eb1c83f
# 79688510890c425285a5a939f0d01c9a
msgid "to return something like:"
msgstr ""

#: ../../step_search/step_search_boolean_and.rst:25
# c504791f0ee34aa1b1b3d0c8159debee
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named ``jenkins``, enter:"
msgstr ""

#: ../source/knife_search.rst:88
# ace598ed341c4f6dbd53b767d46038dc
msgid "NOT"
msgstr ""

#: ../../step_search/step_search_boolean_not.rst:3
# 3d0ce55811a34a37bade816f426f4b99
msgid "To negate search results using the ``NOT`` boolean operator, enter the following:"
msgstr ""

#: ../source/knife_search.rst:92
# 1f82cd8125574e95ae05798625e4df45
msgid "OR"
msgstr ""

#: ../../step_search/step_search_boolean_or.rst:3
# c7e67e6a8fc344508b9141eb2d7cfc9b
msgid "To join queries using the ``OR`` boolean operator, enter the following:"
msgstr ""

#: ../source/knife_search.rst:96
# c3ca1eb3a241410aa6c5ae180313df62
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# e466f6f8f9da483e98558fe4950e90e6
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (``\\``):"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:11
# 8eb3755576764879b60618a939640eb9
msgid "For example:"
msgstr ""

#: ../source/knife_search.rst:100
# 415d87cab34d4a488911c16e4f8ee733
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:101
# 3724fd16c0fa4bec9c8438f0f755a97f
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 5401bf36ca1247928c21ac6c43a84559
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# fc9d4d4dec4f4dce978c814042d576ce
msgid "``-a ATTR``, ``--attribute ATTR``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# c4c3be7e43ee40bd81869916083ef49c
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# bc0fdb7de2f940378d88a9f16a9f6241
msgid "``-b ROW``, ``--start ROW``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 01dcba6d7e554faf86a39274720b81d2
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# eef8c3a5f69a4ac5b8c8b359e92ef0b6
msgid "``-f FILTER``, ``--filter-result FILTER``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# c4b3d0d4cb694ea096299386aa64f649
msgid "Use to return only attributes that match the specified ``FILTER``. For example: ``\\\"ServerName=name, Kernel=kernel.version\\``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 0e37e212936a4e0d93d3df954237e73d
msgid "``-i``, ``--id-only``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 0dc7f3a9c9c7407aae389ead2e7d9e33
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# ee8d7b99a11044eab272f93ccb3c62f8
msgid "``INDEX``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 436f63813406469291f8133424d6edf8
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 74656250ead94b71b8b745a9d75ad32b
msgid "``-l``, ``--long``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 6d2fb572753a4570954e523640558e79
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 3825e08eb25f40379a5a658b4bcc4f20
msgid "``-m``, ``--medium``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 1273f14366af4ceabacb0de4203e6e10
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# e367bc276a1b4a36828eb0f8d019315e
msgid "``-o SORT``, ``--sort SORT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 5c85f6b3bf1a48b7875f7e8d066c67b0
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 8ab87e287b2a4c98bc2c477890a32b6b
msgid "``-q SEARCH_QUERY``, ``--query SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# d008567e0f164c7db53fb46b52c512a9
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# fa91849ab419438e8e5c84dd5ce839bd
msgid "``-r``, ``--run-list``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 02fbd11e52c34f08b3e48439476daa03
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 0af71650a59c42a8ae89bb1e3bdcb32d
msgid "``-R INT``, ``--rows INT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 7560defad3094e98bb14c57a7a70a90d
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:42
# 4cdd633da9cc40b488da2a04e0056b78
msgid "``SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:42
# b8fae606d0e045ce83155ccdd375082c
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:107
# edfe05d14d5542b6b09df314cb224943
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:109
# afe23d9b2b1c4cc7aa03143589607bda
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 9e4d3971a50d4981ac2d60889d0e90d7
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:113
# 1ac28c43b35b4576b12adeddc35fc174
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 11e6728ab04b44ef98ae6c6342adcc1f
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:117
# 15ecc794bb4e48b6bdb1c339a586d01f
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# dfc4c2f4d7cd448587f21e1d4c6a21a5
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names, enter something like:"
msgstr ""

#: ../source/knife_search.rst:121
# ecc326e75bd44f71b30994c7fcd4764c
msgid "**Search by cookbook, then recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_cookbook.rst:3
# 8d9b32f16422478d838ed9b09a3db216
msgid "To search for cookbooks on a node, use the ``recipes`` attribute followed by the ``cookbook::recipe`` pattern, escaping both of the ``:`` characters. For example:"
msgstr ""

#: ../source/knife_search.rst:125
# 3c4640dcaaae40dbab22b93925123720
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 9a7d5fecbbf5436694a7d7bc339ff5cd
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:129
# f3a981eca9234a0fac58f7816e4974a0
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 9886983afbbe474da3867386355decf2
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:133
# b1123c31a84c4c50abe0f35100361707
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# abb6e95c75fa4e5eae0aad7820e4bd44
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:137
# a3fbb8ded1c14897a994e94fb794df24
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# f1a7559d084740a7b4ce8ec77767fd1e
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:141
# b0625b36be2e40de96503ed616b62637
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# c65e68e626de47359e4e3d73d06ffa19
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:145
# 4acfac9dd63245229ee1a234896c17da
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 9a828b9c49d242e8bc26db65d46c0bd2
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 5a4c4c7d742d427396a6b0e53e11a159
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


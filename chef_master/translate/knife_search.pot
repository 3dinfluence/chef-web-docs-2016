# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 00:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# eea3f08f1170479995a726f0ecf58b1b
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 814618f1db654f7885d0e224b44fd50a
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# e8ce98f314d2437ca2feece2dc724ce5
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# 8c97017143d64282ae543b11ab33e3f4
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 562c0e8b81bc4ceb9c6f6e25bf6dd5ab
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# a1e493e2d5414778b5b61ca038262c93
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 3376cf70014e40a38d586deb346972e0
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 8785bb09c9324f2b88c04649c484d630
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 570ed4fbe16343ab9a433aae71f7b443
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# fbea7698feb94e07a6591da0e9faf7ad
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 6c3e4523fd2041a3b814a10aa75a0180
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# c4f6f12e04c649af9801a42461f3de2f
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 1eae77b3e30a4a488f0bc622c7a3b164
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 54d49bb3cb9d4339a1ab542e5293cd92
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 2ea3f0a17b3c47dea027aa7120878859
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# ee08acabffe84e24aa944a270626276d
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# d5d915a7546c41558c2e5007a989b672
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# ca49b1f726e54a45a7806f28cf6a5364
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# cfe45c0234f24437b472e632627ead5d
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 0aed5bcb751d4ce685a4e2b2cc4ea135
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 85750067670248dd836435e278bfcde1
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 3016e1f2c0c440dab149733d6d6f2639
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 3a5ac7044bf54f0c9b86224e7bb1e50c
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 483baec8298843daa0da05afbfc15fc9
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# cd7621b53ef74149a37f1ffc21461d3a
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 2b1d8bcaa03348359910ff115c46eaf2
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 0676c1a19e6a488bb8ebe641b99fb2f1
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 8619bf9818004adb9f50c6cd223f75c8
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# c6388c4eee9d48d49cb4dbe3cfc26e0a
# b5b77b6e3c8047d2a513bf9b1f757090
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# bf6d1467cfdf49d5856a8f49d1852683
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 107a91f689944fec9cd82a76648d1f70
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# e8cd09f32ba14097881f8d813452c173
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# ee9e2b0e200745a6b50a859ff3e785ab
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 083d4f05341f4232a448a5842a3855dc
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# e74392eb2a444617b1085d5a3bbeb4c8
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 604c328ba59a4d9fa69f006af639164c
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 4480bfba544f4c34aaf513e4cf9c96a1
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 237672209a564b88af658feb1cca268f
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 3bc8c9f4aa0346e0b3b419630f6d0a9f
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# f6f465e7986e4684a1b9071e006f7cd3
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# bdf15894ddaf477db15316ca1cfec044
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# be7a788b5d0140b88bb6c0204a4bae19
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# ba3a1b656e4b413ea2fe893f7f16f30c
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 6296075741a745e09adee398fb67c5e4
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-21 10:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# ec6de3477cf04c0e8e70f80d74e483c7
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# b4f84bcb2cfb45c6bc4db351ff26ed58
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 1d654dd374c2460b8d4c3bf63997a30d
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# 16c0d53d6d654fffa71455db3bf3599c
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 074c15aeb00243b18b5b3835c917a608
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 58a016f195544c1385413147a7ff1ca3
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 3824f2f2d0a84f0dac509eb6b98b1ac4
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# fefe3c5c6d56471ca8582d177a1bf89c
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 1e242b80c88c412fb4a920be1323e0b4
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 48fd54d9a3fd4d4d8eeeec844233c01d
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# f7502acc795a44cc985b02fd73926c17
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# d8efb100c15644b1beec4e07b61f502d
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 8d8d5b96909c4324b2b99d5491ac7900
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# f9e6547c85bd4483857b15df258b5765
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# c1d373f4dd5044deb4c2aa49f67c4438
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 1ff532a1a07c49eca45360f70e23aac0
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 565182b642c14f1882e1edac587fe9a3
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# aee4d1ed08b84d1c85ca5485fed7c434
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# fba37aca820343928236bebde23610d9
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# b98937166f074d7c8a0c45bced5bd56d
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# e6576f55156c40b681caea0300ebaeda
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# f294794677184b8fb12abc620980c1ba
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# f1d88352d6f041af82b38c5d873d1ede
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 3a976afbd0ac4c6ab0259444b592f437
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 469741006e91456fabbbee82df8f7449
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 6c59e4a767aa4167a3f63cf5253a9ec4
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 67c47f91082f40b3b746e7987dd202bf
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# cca2d725e2634801a5c5de43f8eb3d55
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 38b2efdbc495414c86dc733c94a1b981
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 841f629ffe4a4b51a29fc99f2178182d
# 3a0fb01104a14d46898fcd2930938aee
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# 2f87f08b058b49adbe52bb88c1f0a4e9
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# f88e6dcdcad7459b9101fe7b5f0fc9c0
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# 67dcaf342c4e48e3bcff982c7f6d015b
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# a02d0293679c4bc99021787812e331a6
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:40
# 1ea9ed6e3e3b451a90ab04b844110b72
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# b9a20ed04f0b401b85c8c2b98f09cc73
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# a7ce0c84720b4281b0f7de56eb937c8a
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 8c98c18a61664409a3130a23b3ef4d47
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:48
# f976924f49d1428383cd1226490ad013
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 0897c1786cd64a27bced18f9bf0f3f08
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:52
# 98d642cee8c745c2aee73dd1ad4d547e
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 5f4fe7cf01f246d483c8d3ebccb0ef33
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:56
# 95eb51d95a3446b196c3523550d1e507
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 678e87d5a4734bd39dc595a20723df7b
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 90483178837143b480c4f18bfbe3f6ef
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


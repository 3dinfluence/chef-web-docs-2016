# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-27 12:28\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# a899b5f058f94785b20b24abab23975f
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# d91f734f064f41a08613c2e70bda6a9e
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# b2517ed75d72494b8ffd08df2010df9b
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 86441988be4941ab9c4edebe3b500536
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 0e939f2149e54b2a872d361138e39408
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 0679c8e8b60c4f90af173cda4f4955a1
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 3f188a188837465385c4b01da04a8251
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 9b9eaf5771ab4fd8936555a5ba24e9d9
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 4b91531412224100be29fe39baa8aeb1
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# b72df3a180bc495087c5cf894c285ecf
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# eaa6042d5643462cb7b92e72da4592f8
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# d5a96c5f6c374ca9811bb661ccb0c31c
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# f50befd9431c43c383d9ea09ca74e897
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 31d755894f4143f88a968a4ab4af83e9
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 148d9b1b5c9a4ebd9bbd1acc84e47be4
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 9b22c1ea68d944b6a95ccf6967537ea1
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# bc1a9bb3ea7c4a3086bcdf6b54509e69
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 77d5ac20c1eb4e18b582b10b520db951
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# b58c18df3baf4c7ba033ee70c4f09e6a
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 5a0e6e27c6a340e185bbb64c9f62fdbe
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 190055e7953d472e82169d177c45197c
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 7f3292768ace4b2a8f11927b232dda94
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 929cab6b2bdf4609b1d282560b0e85d7
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 22db8a4c9b05494f850a3dcf40657462
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 1197206a8e1f4511be2b6a48eedfe51e
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 3fcf1ffdb3b14c25a31586d247b100e6
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 91b0ea7476ec43e69b06f508e7d71eaa
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 346b3e5e809d4af69ec603ec7dfa2a46
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 6e13cc6012a14e44914cdd3f757c8536
# 15902fa60f454dcc823437b0b0a51aab
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# d71df4aa8b834aa0af7653f6606d2923
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 3102db974faf4902881d9a94c6ec2eb8
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# 9fe5ce47741f4edc982e9d09e3d920db
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 69009d0ad63b45c6b7e54c011f504d7e
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 7d40b6a2e703418fb053c23cd093a796
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# fcc60a01826344acba8d49df416c24b4
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# 27059d57814d416990d97c7bfc3f5891
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 6cd0cea80b17443883d4cbe1af3d6ac8
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 93070b0cf71a490f86343e4eb623c273
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# a41b0954125a4e3a87636000f878ffc8
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 9887672c21c043098dadab8c5a4d9e43
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# c484933bc7464044b17ae7ebbb278522
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 19319ce569d5491eb917171e74054150
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 8d1653567cbd47de9fa71b8b219d8c8c
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# b8544e625d9749aaaa7fcd2c8fdda599
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-25 13:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# 764154e6644e4d48a64d7e81b6689141
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 0f1b6d5989d7451c85bdc6161ba39001
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 3091c959459f40968ae80f785e7b564d
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# c5bc5a8354054a478e8678184f296dd6
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# a212d23888ab42f6991518569a8a8759
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# cc855996e51d4368ade8e38e730985d9
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 2c826cc920ec4416b9ca8b6ca42ce055
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 9b01a09504e943fab2b322e57e77ad1e
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 77bf7495d98a4280b54e765806b2f2c9
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# c494a222eb854cda84e4e38432be03c6
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# f3ade9ddad8240778f9f9a8863a669d1
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 4bdc45547df94e7897e042282ff6e705
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 174b4fb1f8c24eaca3d728069b5b82f6
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 741fea4076344c1ba34d6d97b1baa924
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# ab2e0eef88f14fc8995f357b425c147e
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 919431263d96411299d15c0394a81c3f
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# c319a2f141914a21b50acdefdd8b823b
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 023debcc530e48d3ab3c7ceecd542d89
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# d3ea41a62bd94e39be6323b5b2fda97f
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# b93bd2db2ed34a4987d9357970368eee
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# ebaa5815c535480a8a4e3c89db734b85
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# d2ef9dec460c484b9d62e880c2dc55d4
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 8e9fbfaef7734035b8d713afcdb0da8f
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 790a66b185e6434fb224dfc874bd476a
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 913335ef05924bc5ae08b9b6bb970733
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 9372647d93214b47b280ee89960b11a2
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 8b6e7e0bf3ce4ac6a53e097bc0abd644
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# f175a8e89a154d71bc4b7f6eb4e8b42a
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# fef907a8f0d747e283f423cc81c4079a
# 7f2a9f4185ec42e4955c15eb6d14cecd
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 0630d17ea1034b679cd7a5fffd518061
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# fb89f42b9f304b7b9315a5ecb88afa8a
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# 75270160756447c8bd89231b6c2fdc4a
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 193b79bb9b8942bb97b4b9e6d10190e5
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 219d3358a2814924beb6428ca7edeaee
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 4982c1dc183d4005bafb215a937486b6
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# c0ea104060584131a57c2871badefc5e
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 240e75b6db0a4a58959e91afa003abde
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 1f8816d413ee43819fada5de952ec749
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 74bd43c3abe742318177ae64ecd15f03
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 13fbda1492c64b2b9f39a18682f5c1a0
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# a945c6105f184d7b97de9bb6f1921bb4
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 81592f06fa01471e8882cd81ef49740f
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# af02daa8e69d40fcae7cc596193d8077
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 577c05474b3e4a419c8128f12e61da60
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


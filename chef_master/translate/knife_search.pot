# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 14:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# e3926d94216a48cfb666e846e2785abd
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# dc567fceaa8f40429edeaaa0def182ba
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# c95b6ed87d3746ad882f803e4935e265
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# 7132acccf1864a4684be12c158b4de6d
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 6eacec2c61624b9488ba86d080061a0b
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 4e93cf5f08eb4bcbba080c9b99f1e974
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 369fe4cc7215425d85ae0ff370d543fa
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 6567c7c61bb94715aa69a93878469740
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 36c3636a6f78478fbb398ccde3a43156
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 4ba2f386c1e1411d83fbb133db824051
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 19e9abceb7c645939d0334dcd01c4b6e
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# af3d1064a7d3443395528359bf712969
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# bcf365e1d7024ed0b809cb43f80a5081
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# b76c071ddbab4598b53cf37d263287e0
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# bcd356f567534ce0be0b8e68be481381
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e9936435ad0d4eaf8973792d0e65e600
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 90209e42ac714900b24a2b8704fc2120
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 359e36c5f7e64d35bcd41d42e93b98df
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 22cd8a3a52e14cdeba8d9e9406b0cf3b
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 0809a4fe401d41f2afa60acae07ee894
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 9393f0541261430f956a1ffe12386439
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# c89d38eab63740abbc4476d391d5a095
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# e40b2955607040f6879fffbba4d5cdf7
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 1bf33e5b16a0406ab1a37732bff28b38
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# e0d6b6307c1a4ff68d7b49133967ad5c
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# c2c467563b4d4b50821a2283bbd594d2
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 947d87a67a6f46859229f766f24ceb04
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# 3b5c04fa80d04696a8485ca7f05c65ea
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# f30667d343084304ba37a6c51ca5481d
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 141a78ebd216414bac64827de31bd709
# 01d123f9e126434e922b8aa3d46a9816
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# 186dc739dec64387a3610b3a2d71f6f9
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 5019db4b7b2a4d79834fdd36ee04bd6a
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# 6233e734c78e47ac9acf86b74f20a53f
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 9fb7ac6884be41f5a5b6e6bd9ab897b2
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:40
# 3423bd5bc66d422898d1a0d4d54e0b16
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 23fd38a0341e42a59604e1e70e9b30d6
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# 38f805a4cb65436eb96b11ac4554f6f7
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 0f1a57290c2c4ad3933a7f91e6476e9c
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:48
# 986858041d1a4b97a545095ffb704677
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 27c51433a350453b8d6d69f3cf2306a0
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:52
# 08be425d79a14f72a68437ae87e5f6c1
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 0514f503828346eca6ffb0e765123b81
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:56
# 4e140b1da33d4d788551f249f3580a67
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# e20cd2d4d6cf4fa2b6ba8b4227d6ebae
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# b6cc5533fe644834ac6a3f22987fb6f9
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


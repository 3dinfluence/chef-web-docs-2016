# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 23:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# eace448b80e84e738df6f36477f9c74e
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 9ab3650865a448ad9a8d9ceeadd0edf9
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 1f8dc4dcb004490cbfe94bfd5198db3b
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# a857b59270c440e0ad65ae923fbdee02
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 51af38c525ac4fc895bfb5831bc295fa
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 231935cbc16d42b6b59726cc913438f0
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 804e1ef6d7814dddbe16e11bf9e26254
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 59b5d49daf104d8081b457f88f0b8c1f
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 262ee3e3e450447698c5bd47877d4b42
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 978415966eae44b5999731f958ad0822
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# d3d56aca958c4698bacedea19a0741c5
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 466239bfc1b54c9eb3f774af913b61b7
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 4a4d9417c8ec4f13b9257ae618d03e46
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 540e641ca5e046bf9aea46abf1be99e6
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 19aaf339258c4235846dce5c1171ab06
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 41a65e8e7c73437fbdf73a94f1a8c4de
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 676d76e6d80048aaa857cc857b064239
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# bd9d99669cf24785ac7f02054e731f33
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 91e8d7287cb54da0b6a3a5280c39a928
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 7a15ba1fb59e45459a53f55b463ae94d
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 98915df2c55e458f9012101d0cdbdf6a
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# a6da666a6b54467b97f7168becc00541
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 455fe93dfddc49d3a591d9b8bf147f99
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# ebb37e28b38b43c2b0f15657b97abae8
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 4eef8d12a93542908e11bd3fcbb25a77
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 840e2c8518c546e0b779700e3522415e
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# fec5eac29ea24946a24f7c0d4da73a21
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 97ee9fbaba8f4380b77cfe091a7aee89
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 4a132652aebf4ea38699d822d5c25093
# dd02821bf7cc45beb58c54323e5f1c86
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 39259fbb1f254685ab420d52a4dbc76c
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# a1fb6797a4da45e19cf4884a485d3807
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 449d1218ea434a45996e22103f132cc1
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 327c446878904eac9a992770a3376e65
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 805620e2442a4b98849cd777bc4892f3
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 9b3aee25f8fa42c288779ecbfb0f9ffc
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# a76b58f9eef64ca5bd8e191884555c2b
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# d68ac33770d04fc8879c42da7c2e73c8
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# c5223688df574a9598c743410d3a6d1c
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 31a2d3c39ea54831847a51b404455d4b
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# a0a5ae995d574cae94fd22cfe264db91
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 4341355cff524642b68cf1a4b6237119
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# 7a90dae5c179463faf6f49962c19612c
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 0b81873d1110498e8a3a9035c204b69d
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 85c21a70392f46b48bba8b3c83caeef6
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


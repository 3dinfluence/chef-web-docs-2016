# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-02 15:47-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 658960646f4443e6b3b57e57919f880f
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 92deeb8136944bd3909e87d90447e015
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 815d35918a4a43cca3244691078f1412
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# 3d063246da284fefb21f8ab394fea4ef
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 42011098ca084668b4adac14ed0ec17f
msgid "This subcommand has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 184f16b448f84238ba14a51a31cc1663
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# a142cec63a9a460c913d8c31a6e0aa45
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 49c377f0d65040ab9467775caefdb6d6
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# b450e70f1c564577bc745c433bddc6fb
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# e314d8e27f9140e59dfb233af20d41c6
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
#: ../../step_knife/step_knife_search_by_recipe.rst:9
# 8fb2c080662c483298ed9ecdbb02933c
# bcf41f60167d4580a07b27dbecbcccb0
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# e6938c008acf495dbd7709bd5166aa0e
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 40eb7fc2f81c4795a76124d81801e47d
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 1f281e7c505e4145a0a2b36dafe48b77
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# d75153c7206642149c08c18b0f77aa77
msgid "``-a ATTR``, ``--attribute ATTR``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 79645797ae78478c889c6041c440da91
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# ada09b77b76748219484f46b1b02170a
msgid "``-b ROW``, ``--start ROW``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 7e87548915754824889cd696358a4281
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 02f91825e1764d149c86e324c4884122
msgid "``-i``, ``--id-only``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 7186c8a691d746118dbdc74490aa8064
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# d57961481df24552bb869c689d650867
msgid "``INDEX``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 7afb4dc6952a45aca159cccfe910fe8b
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 9328bcf9d28b4a5da2b6fef266db1394
msgid "``-l``, ``--long``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 58a6451fbff6452196a285326c6efe54
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 694442a3363e46559cc57df0642f1523
msgid "``-m``, ``--medium``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# ff99abe8ef0b47d199eb4e3af049406d
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# e81929a76244470abe710665b5913032
msgid "``-o SORT``, ``--sort SORT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 786b558fb0e146189d84dc33aff7bbff
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 450a1eddec0c410dbd93491652ca374d
msgid "``-q SEARCH_QUERY``, ``--query SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# ebe518e1b81b4052a8182000e7f6d4f3
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 8b7338b5c1d34899841bfe3bcd0ab4d4
msgid "``-r``, ``--run-list``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# fcffda05f23c429e8d9e0eb075db1fee
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 79b065657eef4556859955c7e1fcd681
msgid "``-R INT``, ``--rows INT``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 4a0f734b3f4d48fbb4b5f548f0b14480
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 993dbe77c0ac4e258e82193a34168c06
msgid "``SEARCH_QUERY``"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 64d87103b213408dbfbb973048121901
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# ac8769ba5e6f414492d6d7e093d09c0c
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 7e64cbd4d9904194a9033e035bfb3850
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# d71e02222494495986cf8d34d8fe0eaf
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# f3c173abf5554332ac7fc2f62abf8495
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# b9d50f2b76ee44f2aae9ab3f8d55d176
# 6b5bd7667de946d2a3605b909871f365
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# 9ceb8b0343814cb5ace694b4f95df795
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# bcd3651de387468480247da10e4df5ce
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# a8c27a0dfbb640849d83db6572403403
msgid "**Search by recipe**"
msgstr ""

#: ../../step_knife/step_knife_search_by_recipe.rst:3
# fa934324b7a24d07807915b8104f906c
msgid "To search for recipes that are used by a node, use the ``recipes`` attribute to search for the recipe names. Enter something like:"
msgstr ""

#: ../source/knife_search.rst:40
# 1e4e3e8ef649488f8da192e6f2bb33d6
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 22e52ff513134805a37c7e139f9636be
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# 4f86b944cfda4866b35c6794628be5d3
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# 4ec879b89c7d4916b334f2c00076274a
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:48
# 075e9b66c7f541a68b9e1ecabb038f74
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# 83679b27d3744e6b9c66294566a59845
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:52
# cf83d910e3844fa086881652bcaa3ecb
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 71fb1dda33ed43e2a2b7cfdc9b8ca36c
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:56
# 2aa004b5cab347529cd2fa1a58fe936b
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# b290ff15858f4d489251e1dbccb7855d
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:60
# e857911ed2dd4a4ba2e94bda1db70c28
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 6383920399654180aee19b99edbe3606
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 9c7dba60c6ec4ef8839a0d81397993f0
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-02 11:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# da749941d742434597fbd02101376875
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 7db64d265296446596ad83f51c31078a
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 4d93c92211bb4e17a0a3d61225ad35fc
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# e7797e0060854a55a855af75a479d912
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# b61ead8067e249c8a10021825e5411a3
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 25c89aa8b2c44c43a28381837a2fc32e
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# d8c6e4342d1444dba3686400640794a4
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 3a252717b9f3400d94381caf919195b3
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# c1b38ce1870646ac8b54bc3305f4c25b
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 3c8ab5e8d25744f8bfbb309f4130164c
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# ef7895999d68402787b7d35c9a08ab3f
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 91f97702e4d34ac4b0a869c2fe36965e
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 8506ecfb63ac458c891b7f7199dfca66
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 344cfdde20564a3bab570a8176db44ae
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 06d82ca4a27a4742883ce0705dd2d788
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# de51b7acb33a4082aff031625b47dcf4
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 10ea448b866d4de8a5b26938af6f8d83
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# da7e4615efa5499f919931c1e38fa732
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 506ff02c08c648338b3253fa405934ff
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 4fbb8f5f98334d1db57de969aba15905
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 016a23cbef3942d3bd1352de1945aa1c
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# fcdc996bfc9c41afa1cc0f8939de86b8
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 2890fe96516249c1a6821d2407dccd8f
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 9c12559cedb2463d8e7faa867969f83c
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# fd6d5abfe8da4a148a841043bd9f2841
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 92b1293398684e3d9d4743b458daf411
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 64f07c6bdf4d415487e02979d277b192
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# dee5f572d36142bda2a6e6fef8fc5d07
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 8fb82b2741064d93ad780490a2de87b8
# f91d0ba6c82e4d5da775b1b0658f854a
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# 5dc5c575c7e04b96b1d928cdf013013f
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 87c4ebf1149443468459b43fa1c18cf4
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# dbe803e5269a4a63b10213452fa3765d
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# cfd5b2959ece48ae8a1d359ec5dda264
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 8f5987c08431410dab713bfb5b7ea4aa
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 472719d4ce194d5aafd69e6c080142e0
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# 1202f5b7942c4007b9cbae8102d43709
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 438e0b0f8f5d4e2dbe7fae9f84ab2327
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# fb0c34bb07174d199efd1a1f28ad29d1
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# b35d516eaf824f42b3f6bfbc4cfd689f
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# b2d1816838764c9baf8f588a782f541c
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# a2fe4ed3b34640688bfb6462b79a756b
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 55b9ed4d1a684f50ae0b5b5b8ff05126
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 99fc5a3291a244ae8881538c85054b56
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# e30dd8c08b5d4000a50f98959053fb2a
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


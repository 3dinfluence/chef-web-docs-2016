# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# d0d58814c12c4f64b8aa488e3fc31505
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 4bc2b10ad5f14306a06de3bae539f14d
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 81ec5d7115b74427bb8583b9d7cfab4c
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 5ecb2e6bb38743148a710b17192c0d48
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 1357bb96afee4ffea376f402f76dbf62
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 2ae57ef1a265434a83919c7cde01cc1a
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 35a436488ad74f708b0947dfae9ec1b8
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 217880d733e043cebdf139e05a071b24
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 8bca54ea973e4c9c98c1e015d7ff3e2f
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 7bd45e097e484513beaae61f1ae0f508
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 321a94e0d70044c5958ae5d2ed6ef866
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 8fcfc536b08a4cb0acb5537e751e2479
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 2897a1bb54b8495ebc0f50ebc9b6fa7d
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# b6af3c89da484e668c8e6718b87b4397
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 35be2d67f19b4881bae9eae7532dfd72
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# be2c3605b50a4921b15fc22e927f8da1
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 580f9c6707c347afa4c7b108a47b2538
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# e9ccbbc89815493e80958bd343f89264
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# fde962596a0443ae9e9997402e34122d
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 3218cfa9da84484db6a30843dabc02a1
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 9d259c106b9e4bf4bcbd642563b1cded
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 7c31ef8f07fc4c8dbdc60941bd95235a
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# de63244fbaac4eadaac50c1ebc3280c7
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 7aaa25d03fd84da0a160c61f6b91fab3
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 9e17a7eb22734786bdcc3c4c2ca3c889
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 37ff8a6111e043278e860351b8ad0403
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# 40287e0ce99e4fe59652311769fc8e87
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 0079d37835c44991a624dd3ac7f9dd02
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# ae54c75ebbd84ec9bab6cdecc8164521
# a5f4759efdc64d098b84fd2763050f9b
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# a5c0e80ac68f41ef9ed90a9a2ebf2707
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 6caaed71b94a4fbfa24361fc9777423f
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# db71538e179b4503affcd88eab337c0a
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# de355f3fa2c24ea6b6f2df5cff223de4
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 7e7c606496de4e38af24d83b703b6c02
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# ea921bb414f94f2bb6b22d0255307baf
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# f266cfee08984c7c9bca8f7efa3a439e
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# ecdbf6868e954633b7ad6cf9ba90ee42
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 035182adeda742c39d991fb5f3c3b399
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 6b1b7380d33341e899457ba53584d375
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 14a447411f414bbd8975139c0ac63fb0
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 8193337378604e8d97edaaa4f9980302
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# 088c8237756f4e678229775ec36d1b88
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 43a289c7d55c4dbfbe7435519a6cbc9e
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 6f5034f380ee4821938bd0df29e3d0d5
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


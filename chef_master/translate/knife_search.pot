# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-04 22:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# ec378263633a46b0b24b890a7993eec8
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 26197b1ba46f4a61941f9c5cc516185e
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 121b111ee1da4a27914571f4e7e68d33
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# a7b4f221c7eb4ce1b8026e1f99ea8ceb
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 46d529f627af4207bfc90a9cd98845b8
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 846aa37da6844394b61ed1c536351dc0
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 6b8571b92a4f42ba9b4ba05f4c79f366
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 83db8a7bcc7e4538847e2188b0aa516a
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 7f7d04859b8f4a06ae0eef703c3643d3
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# d925a816ad6e4eee9c8adcd7db53c9ae
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 95fd0fa4750f45e8a11d828c804a4f3f
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 5f4d0ca7e27743f08850fc0444fa6d12
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 8b3585a4d6234b7d8c4272c39820aa19
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 55b6da03326d497baf84c35b41b48f2a
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 9b54b1bfd9ea41ff8a9c554db48deb09
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 57279b06397548b187d8bac561e36624
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# c7fe9a0835504ba38bd6486dd17147b6
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# ed4c5143cc834f94a30c8c4e9467ef9d
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# e4fa5e262843494ba24d03f6ba45ad9c
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 8e1165de748d430d91868c3856e01069
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 4d54dcbe97db41508f7e51c72c04c23b
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 213e848016ce4d1996ff5bf38b45aa56
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# a9f002421b6840d585aaccba04d96344
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# fe924767abdc4bdaacfc9176a0f8ae6c
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 4731a6e579764fe498e0f358cc4012ce
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# acac5d862a37425383236497f1f0eb05
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 08f592a378dd4512a061dc4853e9f397
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 1ae6345f81194c248446ec08e2860c98
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 4791500a1e8d4d3c87d11d518425f7bc
# 390b968c53ee4f9b8274e5b68f42a790
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 60a275d438774f1e8192145612adcf48
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# e9e8fd65e77b4b48bbf82f2711349a2e
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 787f19433ec442408bec4fe2806c99b9
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 95398505a73b4f11aafabcc8663f24b9
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 3bf2cbb15d704e28abee3a15ddabb61d
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 4898b93028fa4bd8b0b8bea1439e7c30
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 621a53a771ea455b81147c2f99695901
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 185e5054e1d6463ba9a5298fddf761e0
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# e88a913ff9294c1e8cdccdc2259eaac9
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# bf9b88fdf889439592c88e9e641f1687
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# 855edd01218848c1a1f7b47c380d7125
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# fad79e3bc4e944b0b0820b067f8d0210
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# d373c5f2a75d4fefb00130fabd804ee8
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# ceadc5e4cc034157b11c7be2c38e12d2
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 1a557b8fba4949d2b0fcfe1f9078568c
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 22:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 340792bea2704963afcd9c882190f1ec
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 85a1b59fa58947a7b9509bd9fe452c28
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 96bce265531c429b96e4054b15817bcd
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# fb183075f6ac477789dff8e7009f4c26
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 58d9075247e747dcba08359d1e391ca6
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# a2e69d1aa9bf40d1afdd05e7fd0b7084
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# fcdddca7f6a043c48d1557406c8c7d72
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 6aea5c5fcd8142658c5b7bd469d85088
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 49c24ec0141f4abea1ee4cc7c84d680b
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 8a262c9420a149459828566bd347d111
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 6ab81eb832ec49c8b355dea558579709
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# d351bbe595134a19a9fbd44a255d6288
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 38ddc00d68c94d49a248d3ccf315ef8e
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 58698dca8c7f4e029a2e92bc19a67ffb
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# fad65252a641418192a81852b5dc537e
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 057f81aec1304c0ea2aba18398950550
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# b3e30a3b2cc8447890d95abf9c03290f
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 9a7d17abccc84c6c8dd21e17c1efbb2a
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 947faa6fcf17485fa26a20b1e48a9200
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# cc5b63b9cec340a0893411478a18adff
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# f73234508c4a4c1d8f032d09f05923ad
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 0098ebb177c7409a9cd86e022674169e
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 07d4133f091146c2b98575c812f4e17c
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 9796f8abc5ba4db3974f665e438b09cf
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# a0ad9180fa144bfe8e90d38680492b4e
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 04f99cd1d069489fbf75acaae591390c
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 5726daa5a551408db636490cbd2e67fb
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 83e3312a225e4e2a939649dc5b10ea54
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# de0eee5f8611497d97fed428c643414c
# 2383e0640a6b4bd8be4bd06f1693d606
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 7ca9f09d41d94b3a9a956b3086003243
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 99819deb517c4919b8119b3772960492
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 6130748fecfa4c0ca51400cb603494c6
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 60d9122083e240fc9fa41098005286a6
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 8e829baaf70142349566170e81656e9e
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 5beca211c44c4062a6aeeeaee39fb667
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# acfee4ecf7e5487299efa89b2af4192b
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# ae51a9a3ac474ecabacb00436cd2376a
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 8705330f04d24dc096fc7b8f61ebfbf1
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 8e8306958afc4aeea2428d9aa8d4fa1d
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# 31467dc5dd444709848765bc6d85223b
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 9bb317c905324f01bb7b44c077e84ea7
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# 78cee5cc4fc94bc4a851992d2040cc8a
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 83ab462b0008498ea668766723b19980
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 09da0d5d2086401495244b2f110828cf
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-22 15:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 6075baaaf6534abc88b55b93e8216fdc
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 9c4b501a522a4341ab4d6a39d7f96def
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# a75ca0e3e70b43518129492dcd79640f
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# eb24f39695ae41299fbaad721cc77192
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 3e719c508d5f4c5e9f3a8a513cd4ebbf
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 24c6a320a68a4cc3a10ae5c316c8276e
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# d11203b332714b38b74419e520c0d615
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 9de50b52ac8144779d120a0dd4fe63a9
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 3a854f008df54aa7bd06b43a2fc707c2
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 913868158cca4eef8c3659e6d6716a43
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 0a61499508a644beb84a6e6515a7e68d
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 8bf716941db3494c954ff7a1dcb81481
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 4a2bcc99ba744647aad4698792eb872e
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 79b26db54bb04594afca0e799da1e809
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# ba61a99116f0450b91a3d3b3bb91cfac
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 4a2253b809804485879e810d7947b8cd
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 9670b8eaa94644feb1187a46e7198c78
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# eb93ebb0e755489098c62e1bed7fac1f
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 7e5d503209584412be5138849ed15536
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 5c4c6c05c62d4d11a1b9ccd997eef2c0
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# a0895a0eec4f438da293a48267d8ea76
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 2cce06cfd1654454a14d5b0c63356dfc
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 5f81a9794bca43728e83a110593b88c5
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# b2d8d47c9b964ee3b03a13b6513f1487
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# b0f81a1b440645378aad494208ab22ec
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# b8e5f37256b84894b6938c3c66c21330
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 58af76666f8746c880e0a16a0c1c761b
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# d707a894ea28451cb78e5146c64730ac
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 27c503b377a74812b60885bfffd654f9
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 64bae94c730f4e06bb810bc6c1147005
# b94a80bede064d2aa65ad31e7251bd9e
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# cfbf5525e4624c1f9983c651cbd7220f
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 104b9b5003c84c5e84395100b87e74e5
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# 46684cf519fd42f98fa1afc9548506bc
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 557ca75c02fd45a49153339ac2f2b5a2
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:40
# 5131dd2c27e9421a9fdaadd0f61b521c
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# d79a06f158a949d08ec507d77f485612
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# fc9b2d1840534bc7b11f577c5148e1eb
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# a23915b55f734b4ab79d3e4446740f5d
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:48
# bf480d5f375c4bd7846f05abbbe68667
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 7806b8fe79f849ad8dfe11d32a0c889d
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:52
# 4e79bc897f63484d804b2f15e5770b91
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 0a3cf86f4876486c8db19f8a9ed0f143
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:56
# e928c5f103e14ea79abce4a0968a3e45
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 5a3f4967ffe842b29c6e077ffc108189
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 54cdc9990f344d96871dda0dec6da8aa
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


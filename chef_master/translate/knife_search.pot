# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-06 22:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 0aab2f4ca61f40a98882303ddbd5bbb2
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 6e01f879030f4e20ae81d0ea7e8c5aad
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 96a302beb1da40068b8495a164a3bf2d
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# c2fe7154215e402b8daa3223ab1456e5
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# aa69c5513fbb4eea911d349b1d048532
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# fcfec7cc63da4979a827332f8a8fb00b
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 8379f96ab4074ff29dff79f6092f254c
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# a6338918a953433f9303d864c9d4f62a
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 9046eef99c8442e389625060d4d55807
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 60e6d1d41cdb4e7e8e93466c71bb05d1
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 6e9f071395bc45f088d43f74a276bf6c
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 668d7868952f4872857a23ae0b1c2968
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 617ed028b0f144fbb660614c6239c839
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# d28d0966e5d741789ae74fb5a996f68b
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# f8eddba88c0f42558df49112e7346c5f
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e449c3c36f4c45ef9811d4b4c55fa5dc
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# f13a7bb29275474db43d2ce4fcaf2bb4
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 412966f3046d43dcb6a54ff6ddd63f2c
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# c4e69ff005fd40cebb568dcfa024922c
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# da285ed56867420db3084694e2191754
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# e0be9d6c490b4b81a2771904346f065a
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 6963e4201bd348dda68152dd4105804f
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# a13b5766e7e94f24b46e77e9575910ea
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# bc12b85558624a33b8901551f54f6a15
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 29cd3322c115406c96c156f9e2ff5682
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 58b67c5a0cd6406fa2459c098f21bb00
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 3c1ce1aecef44ee2a284c979b9ed0d8e
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# f015c936f914455a972f7d255ca89c3c
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 0b5e3dca62ba4698b38544c1f40448a2
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# dbf542e7db7d44febd95fea98266e7e4
# dbb9eb4576004ab6aa2280eafac618c0
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# a5eaf7e3bcb84ec5b1fdaf35b702014d
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 549d6a6a3dc94857951620d372ab4cd0
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# ad4298448daa4383881609c0898ef6b7
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 9fc364163d0f4608a226752cd2ff7405
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:40
# e735c0e734dd468b8410cd116518e05c
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:4
# d664d363e88f473e866b1a71646c053d
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# 617531328bb241d79c9f1fc7e0da294a
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:4
# f65ae0d3208148f2879cd2eb919d4421
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:48
# a61a3dfeee114a5db2a189e7a5eb84d0
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 237b871e0b0841f695b69b9fcb0511b6
msgid "To build a search query to use more than one attribute, use an underscore (``_``) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:52
# 80a9c29a963145da98a60c5cb6bb3f24
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# ae066ab5f6dc42dcbac8e7cb3c61ce5c
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:56
# 7465fc740d9949c6894d92c903f3bd41
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# f72ed47887d74336a31875e182040c90
msgid "To test a search query that will be used in a |subcommand knife ssh| command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 3175eabee0584419a5a3a7786a189754
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


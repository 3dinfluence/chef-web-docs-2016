# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-02 14:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# a73e7e7b6ac744b5aace5b8fae9c40b1
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 46a28f4ef57f462a85e5a1337243c25f
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# b80f2f10442549148af928c01a288539
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# fb19a474195f48029a9cbd06a9760bdd
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 3262f33458a84a16afbe30c74174792a
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# e8fca0adb7f3484483878f8a86d46bb0
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# f6bd5d47b99e434f94b0322170c11dc7
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 6e218c6d9d524e2c84b1e77dd0c4f102
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# b266ac20646c436bbd93a95a2765676b
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# d16aba62aa8d47459066e060c59417b5
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 4216435d5cdc48f2aa9740f8131c7635
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# a6b56035885340e29ca4a8c7b4576413
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 01e4b861b0e742e4b803c774ebb05f37
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# a594ba96f0f647478d45991c097ad240
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 7d6ebc9c5d2b4dc896f29a5b42aedf61
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 8008b9e968054cc198d2146c485381b6
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# f1d824feb35f4e2ba5079eca471cb7c6
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# d7535cf9f5284304ad3f7d0b4c792b03
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 62a8c21bda6c4bfe877b09af2f718b0d
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# b94a4dbd837743e582d66e449e8ae03d
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 7a3daaeee4314724a8b160fa40643808
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 01a7478f01d14b8f973695d4610ca69d
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 965138abbc5c4a17a5771577b027bebb
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 2152d10586cb4e0b9ab695de869cb46a
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 177ef98fc8e9440ab0fef52ba5fc0c0f
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 0d8ad4fcef214bcd8ebc4509eb7bcee9
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 2ad39d1beb7240838ec88c5535783fc4
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 8034d2ec44cc41219a3d1b860daa896c
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 5637e5c5176b4d17b87b8c1bf717ce4b
# 9d3f33996c1d42d68e52790e86cf6f9e
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 2d7d1056c98f43518fca5d8e3b565082
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 77ac325f6b154ead88317dfc6a6a16d3
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 9f796f01c18d4a8aa791b21edfdba5be
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 3f905f65dfe14134978f06d6c019087f
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 7406fe6db98a4a6eaa8043ea1e3cd855
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 3c0971cad82546759948297ecbdcf7b7
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 3cd02286237d4f3caab497240f61b53c
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 462c8f2d6e1a4f2ca230628bb913f850
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# cca9f271078d4078b144be4b6d6b7135
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 1dd184c3c7594f5689b0eaaca6e33890
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# 5be83d7cbcb14e49872cc59508cec101
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# ab8f73c6bcfa4f4f8123a4d74cf60abc
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# 651e05e605db431fbe20dd1517f5fadd
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 3883a0ffdd704ccf96b0e12751340865
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# d136aa40a52d4bb8b3f4696bb8ccb7b3
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-23 17:56\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 93e94157c53f4f6e96b11229d2ecb2bb
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 9b0850bf514849d29bbca2c3bdf87fe3
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 5229c56f46064befad40b05e343a4c59
msgid "The |subcommand knife search| subcommand is used run a search query for information that is indexed on a |chef server|."
msgstr ""

#: ../source/knife_search.rst:15
# 62e19d59d56b4cc69294ab24deb63630
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# d6609d762b12492d9591280b9f65d167
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# bc04ff4d5f0041088536d4b05c4974ba
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 357a4bebd24f4afa81993d4e92262145
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# baa7031455ee45d3a1e6cdcf6201f43a
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# b0999717d2bd491eab9929b4d7264f1f
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 791690987ad74cfbb18dbe975b2f8aa5
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# ba717aec3c874cea8a784ea694d71350
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 7ec13bb6a47540328214acbe6dcde4a0
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 7e013f0533334ea4af841c3b265143a3
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 1e1ce732a8a845fdbe2067fc8400f228
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# b1557ce1be9b4bb8a2f9a580d2346f4d
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# d68ee1d611d94c48bf14a48c8db2fe74
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# ddd4027d562643f5be2440a2d320eca6
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 678ec93b681149e69fad0e0490c05bb0
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# b352112c32f646b5a8ece43108e6c1a8
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 878be1520f2e48cab306b1ee5fef5ff8
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# ace61c4ed2cd42c8b188f1f00f3940ad
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 5cff40e5686e4c479a810962960e0441
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 61c585439c624ab79b3416aab88c29eb
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 1b8b18bd789d4190a594e665b5b998da
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 1b5252f9c6a74a8d8bba164148c8216a
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 39ef7a4861c94acd8bccc09535930ef1
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# d17c23f7f4e84f8586c1138e14542687
msgid "The following examples show how to use this |knife| subcommand:"
msgstr ""

#: ../source/knife_search.rst:28
# eb6d5f25ac134584b6591b05a82e4de4
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 1c83ffe13704495dbbf6da40270aee9a
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 3329d6269ac546feb6ee025f1c097da4
# abc98c8d4325400d8d8df7b1feb512e8
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:32
# 06db6493f6354e6fb5338a74837594ab
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 982d4743b6db44c4b221d27dea80a1a8
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:36
# dda57605c4e3476c982ec556a86fb8d1
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 09323a804a39426d9d51d40c8bd6c5f9
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:40
# 5d71a97c6656492294fb4899b5bd5214
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# c5a1836b88c941d5831cc0c1da8ef120
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:44
# 84e1c5c46b994feaae6b74467b8057c2
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 087dd5f2d9cf4268a8884bfdae929e90
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:48
# d7740ff685654ee98ad2274580d34406
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 9585675872e6472494c1b3cc147a8a90
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:52
# 0a3fea08cdc9425ea10b4a615f25e490
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 579db3e1edb8432d8fe78a0073837fa1
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:56
# 79a8080667474987af346e9f9414d267
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# a23cd4b4900a40c6bdf7ad8e40a78fba
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 40d22d3d72d04cfc9a49c13914c196c0
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-07 14:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# b32f211e7ff447b0b7a58643eb6d1ca2
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 346d4042e0f647f5b9c643800e3ad5c6
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 0fd136431a624c6a9d61d3ede4434cd6
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# 18ccbf61d72543c39d40f544acdd90d6
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# ec0ce1ba81c3464492daadb067f00d51
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 36c2af1168f443c99d81ac7003bc6a9c
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# be4333c593034e22bd0ffe615eebe7eb
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 839b864e52164f48b4780ac67f95b6f0
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 25820677cc4f49e682389031946ebdf0
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 5373f8c806174d119c719033c705c9df
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# a3066d19cc394e96bc8d6f3331e1f8d4
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 1b012487362445b8a496f177c2be4a8e
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 5c84384891cf4ee1a148b2693c6ddfbf
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# acc0cb3667a7447f9c96ce5e054b2078
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 1f3d76537e2549459b00cd9a336bc30c
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 0c2d99ac992b464385f76f217ee15297
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# ec4169f27081439ca92e8e5556d4f149
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 975f3af362354abfa6bc35832c169c81
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# f455e330fa5a49f2adc453b655f8379e
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 34637eda5b7e4874b167fb5200fd5fcd
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# b0c6eed3be2f4d0f8a246f0c34e91794
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# dee06d44fc8349e8a31f24ad58a12f38
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 38a98b387a22484a946d965511099cba
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 3e833a37429f48ac9b1dbec83957edcf
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 50d93d37098548edb9ff9e6bdb3675bb
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 65151ac7d41a402dab04a0a1a60525d9
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 5c3dfba5e19a48659aa416f44a5daa4c
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 427311d05f4942e083ef4d46af292ccf
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# e516a677847b405e83c0d57a155c4923
# 2d2192bde8fb4834a03720a6f7601b91
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# 0eda2aa39675417d9ace7935b0819d45
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 1c953c9f58bd4b5fb1ac1f50dd3c5fdd
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 20b05d6f350d4e44bb81b9c6d358ecbd
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 30dc078c1dc7495d9d07b9bba296eb92
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 3b2dba7989e64d0190ae2806803e999a
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# a4a6b0a6b9e249fe87271317098bde0e
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 21e3bf24a19a40d889725482beb6b2ae
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# a884815a15ac4095844aeb56cb183745
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 0d8558d49d394687a3b6cbe65a854522
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 7a84f56b809449f684c344f993141be7
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# 6398b2e8e4754cbcbfca6e364e314fa0
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# ecfb0f905c1e4517ab6272aaf7bcadeb
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# f27388c2705149e7b7161cd89b1294d3
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# bcd008a75b9d45039a20e4954a6c3dab
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 9c85837f9b7c43f1b7defac1f334ef7c
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


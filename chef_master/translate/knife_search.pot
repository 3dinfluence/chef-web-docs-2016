# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-11-12 00:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:33
# 151584845bdd46ebb52a8441b0a41468
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# bfbf27190e6f4f7580bdbdad59952bb8
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 661e996dc9874372a1032f6d03bb1597
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:40
# 8aabfd35bf4c4f41a92fe65b7f67b270
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 01f7ecee863d41f28eb54635ee403b2b
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# c8d224ff1fe84db3903f65d7e416d308
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# ce3ba58a4bab4816b4c0b6b8461aa627
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 04d859ab31514fcab53c2d7142f0cfe9
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# b01c3236444c4ccd88c0bdc40058dfd5
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# c64f27d765264df28f20e64a43736100
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 2840f37d18724ce9b649c9bda88a3fb6
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:44
# 5d204d8d90154a48b1ae3eca24d0cce7
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:45
# 8ebb7f501175431ca30b75c80ebb85b9
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 03127b97198c473f92fc79faceac481c
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 1bc8a540f1a442108bb4aa6bdd815e91
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e5e3073f5d734dc6865e5784f5f8867a
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 4a2c0a812203459fb7d4a4a0229e1a9c
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# ebcfe00145df4715a6618d4de9d10413
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# d868cb89d1ce4dde853a5842583782c1
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 9289d9bcf72e440494c8bb1042492afb
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# c32834311d134f1aa71049303b607ec1
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 6826b08420f24e389c64b898aa2f3f91
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# f90eb2922196401284090b1a3d4a832f
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# 483be3df488f4d899ff43239aedf7fb2
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 5a178733a7194356b472fb628f6a3691
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:50
# 6a295d16116d44bf845b8a62f26fdb96
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:51
# c650e066d51f419b8375e0ba5b4f2836
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# e9b3345479ed4cb7a60b5b2376095ce8
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 935675e44e444e309fac268df5afd1e8
# 2fc8e1f9d34c4d8e86c38cf209d08e4d
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:55
# b8d13aed0d65457c98326b6a11c59ee0
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 2fae8d321f264567bbfbd358bfec18de
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:59
# 636e1b5ec6b447e4b2f9bd3a2bb332fa
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 5886ba01123c4795b25961c396f9a958
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:63
# 9c48fffee89946e9a340d5088943df83
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 05ff7a78baac4064ba7e6c0f9fe81771
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:67
# 3c4292898037483489d1b2714da8d83e
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 1a4a0c62df8d4d2caf69b6183d7b3ee1
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:71
# 9f5411b7b4a74d368a3d9370dc5e7608
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# e2f7e187738d4df6a46c591f3b2bf9a5
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:75
# 89c55259ef12482993396409bf08d8fb
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 00131cc7ba4747bb8318a79d6291c84a
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:79
# f61d44f148d84eb1a01bf2c36a17262b
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# db38ab268c164f79ae773fd4280fa594
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 079f8f2032a74122aee19740e1153d54
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


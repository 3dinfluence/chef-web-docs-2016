# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-03 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# f7de50ab85f444408468004c865d75a9
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# c85f1efd450e41e481b7cfa0edc2857c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# a9c88577ebb74c289e50d9844bccea29
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# fe169cb5720b4f18bba1c01bc49c6cc2
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 80a39236d9484bf99add9497b773342d
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# e54a34d14a7448c9894bf0512041a1b0
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# a3d99c96a2be4038b1200230ca747962
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# 6aa001c99235404d8c9f6035070fa42f
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 2c11f9a798264d2daea95482236fe5bb
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# 39fb854c73c347d48fa2935ea9e60deb
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 6f0eb2cb43fb4251b273f84ae3ec8553
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# f7c8102def544ea49cc551f20ad4effd
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# e21e4d10b4e747d2a0964dea38ddd24a
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# d2780df911c44952b4ba3958341d7638
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 89f99f363bff4ab785f42da37d79ea34
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# 667c2dc9f7954570a24d9cbb9f837130
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# fad80b4f4b5f4d1494d6b1e026801c70
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# ccf3aa0da5bc4c0aa33cd0a562647da3
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# c109b3acafa14189806872425efc31ef
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# 9e71a55d83e54185bd9a425182b884a6
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# 35ae8484a9a9421c81f4171366fb0516
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# e39339f1256646338792263acdccc3d6
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 06d68b3d5f2d492abf5dfd31b47c5d9e
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# dda7dd7b19404fadb70c87345980059e
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# 4070989df14c40d3a30cb4e0cb0216d9
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 7d6e314f4f7949ef98b4c6773ace5162
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# ad58d12ba4c14ada9b2b840004c55430
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# 72140d31ece84e809305a6d076f3df0d
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 7e5468123b614dbb9d780c5b1198318d
# 941a61bf27eb485c8495576af8f6c333
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# f89b22f38792466085a0d640934bc2ec
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# b5015d618392468cbc89a9aa5d37f223
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 9a9ff1cc391c4c35ab85802ffddb0f83
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# d774cf23fba14e899ca933665eefb225
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 89d5dd84a4fe463e9719919b5e91af8c
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# 200d6759801c4f168a5e51255a8b3b03
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 6d8247125dcf4bf39a978fd66e04a633
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# dbdd5419446d4fb3a90363bcc9c8d197
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 31c78166c5974e26bd428002be2c310d
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 1d7df77f89f4420fb9702effdcb51926
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# a2d1812a07204949841a3f3c0f54426a
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# a6c75f5f91894d0cb8f90c7781babec5
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# f7f4b82f2f804476a7f40c8875568cad
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# 8e3f3ed89ae64d0389bef110858de8ba
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 03f45f4b52e54d39afcd48bcca6b87e8
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


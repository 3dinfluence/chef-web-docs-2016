# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-09 00:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_search.rst:8
# 01f7855adc6d46dba94a85d84222bea9
msgid "knife search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 3c6204c059e445cabca2335ad8bcb1f6
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. A defined query syntax is used to support search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` subcommand in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 11b812558bfe4dd383be71f19e25d8aa
msgid "|knife search|"
msgstr ""

#: ../source/knife_search.rst:15
# d886dde901e44a15879116b37c9dc6e6
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:6
# 191e81cc2dde498aaccdb410346fa869
msgid "This argument has the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:12
# 7a8d2684e3be4eafa97ee7ff987eb1c3
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and ``SEARCH_QUERY`` is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:14
# 937ad4d9ea5d4000bf73f6a919afcbca
msgid "``INDEX`` is implied if omitted, and will default to ``node``. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:20
# f0b0d74c1f734f63aa4d53c6b3cbcb8a
msgid "will return something similar to:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:35
# 33b9bfd82c884fcdbd410708640a8357
msgid "and is the same search as:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:41
# a703c6cbe0b74685bbea9db7d640f9ad
msgid "If the ``SEARCH_QUERY`` does not contain a colon character (``:``), then the default query pattern is ``tags:*#{@query}* OR roles:*#{@query}* OR fqdn:*#{@query}* OR addresses:*#{@query}*``, which means the following two search queries are effectively the same:"
msgstr ""

#: ../../includes_knife/includes_knife_search_syntax.rst:47
# 3ed5391f0c6b442bb791e5f1ddbfda7d
msgid "or:"
msgstr ""

#: ../source/knife_search.rst:19
# 0a8edc20820b4f1b95b83c9a3f74128b
msgid "Options"
msgstr ""

#: ../source/knife_search.rst:20
# 739fdbe357c94f428b9f6259a73f9171
msgid "Review the list of :doc:`common options </knife_common_options>` available to this (and all) |knife| subcommands and plugins."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:6
# 74cad16f59ab4b7abe62a911ed6dd572
msgid "This sub-command has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:9
# 47c508d266c6414587dc4990193f6c53
msgid "|attribute_show|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:12
# e7fcbd26613f45029b69db58491d6c1f
msgid "|start|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:15
# 27890f8d0f434745bf5afd4fef3ce4ba
msgid "|id-only|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:18
# 48d347ced83c4c31b69d50302f044df8
msgid "|search_index| Default index: ``node``."
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:21
# 28bdcc87ed9a479bb3be26e889aef466
msgid "|long|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:24
# abd5ec922bc646b889cc946645ba4b6b
msgid "|medium|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:27
# ae2596ddd8314450be96480964f3974b
msgid "|sort|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:30
# 9772c40e9e654679b27b91a1e87d9dbc
msgid "|query|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:33
# 289059ab0f7449f6951017bc38ccb661
msgid "|run-list indicator|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:36
# b48896c3e5be48a1b2ebc287222d2c3b
msgid "|rows|"
msgstr ""

#: ../../includes_knife/includes_knife_search_options.rst:39
# a6eaa1f5d12c4a85a8d3c691a14015bd
msgid "|search_query|"
msgstr ""

#: ../source/knife_search.rst:25
# 60864097011145eca6e87ce2d16b9f86
msgid "Examples"
msgstr ""

#: ../source/knife_search.rst:26
# 4dc0dfd03fc94666a33ca38da491715a
msgid "**Search by platform ID**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:4
# a0058cd132334616b2ae9b9d5b08e3c4
msgid "To search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_ids.rst:10
#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:10
# 954b182bc78f430dbb3556572345ba4f
# 87dc94154f434f848a6d1bac92c4c1e7
msgid "to return something like:"
msgstr ""

#: ../source/knife_search.rst:30
# fafad38f547940058247028ed8099a98
msgid "**Search by instance type**"
msgstr ""

#: ../../step_knife/step_knife_search_by_platform_instance_type.rst:4
# 62abb538741345febba1d9a9e87029f7
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../source/knife_search.rst:34
# 528bd12c773a4096837bf20bfef49a05
msgid "**Search by node**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node.rst:4
# 92d49bb186b14ee1b185a442ef65b4c7
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../source/knife_search.rst:38
# 7a92678c14d7474d840d23e62772ae33
msgid "**Search by node and environment**"
msgstr ""

#: ../../step_knife/step_knife_search_by_node_and_environment.rst:5
# e0b3a33b91ad464d8c6e7b23f74d1ea3
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/knife_search.rst:42
# 9a9fceba23f04f4da03ea0aeba0ebd68
msgid "**Search for nested attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_nested_attribute.rst:5
# 223547f56e6a41ea88678bd5f108caf6
msgid "To find a nested attribute, use a pattern similar to the following:"
msgstr ""

#: ../source/knife_search.rst:46
# 71e03cee1bcc471e88f355b3320f66b1
msgid "**Search for multiple attributes**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_many_attributes.rst:4
# 7fc03dfc1b534279a4407ce445cecb26
msgid "To build a search query to use more than one attribute, use an underscore ( _ ) to separate each attribute. For example, the following query will search for all nodes running a specific version of |ruby|:"
msgstr ""

#: ../source/knife_search.rst:50
# a2ca116a8b7243a0834138c0dc5f9fbf
msgid "**Search for nested attributes using a search query**"
msgstr ""

#: ../../step_knife/step_knife_search_by_query_for_nested_attribute.rst:4
# 2e02fcb85c604f3dbfc15de50688e9f5
msgid "To build a search query that can find a nested attribute:"
msgstr ""

#: ../source/knife_search.rst:54
# 8075bf199d18478b8c531f52fe445321
msgid "**Use a test query**"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:4
# f545463d3cd44ca3a9333bf5e17e3b45
msgid "To test a search query that will be used in a ``knife ssh`` command:"
msgstr ""

#: ../../step_knife/step_knife_search_test_query_for_ssh.rst:10
# 5eae3909ce854b1591cb3dc88226801d
msgid "where the query in the previous example will search all servers that have the ``web`` role, but not on the server named ``web03``."
msgstr ""


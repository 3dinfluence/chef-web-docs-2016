# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-21 17:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/plugin_knife_custom.rst:34
# fa092edd1cd342f49583f9b0699d4641
msgid "Custom Knife Plugins"
msgstr ""

#: ../../includes_knife/includes_knife_plugin.rst:5
# 01e52c404c324e6a9b933c7807598966
msgid "A |knife| plugin is a set of one (or more) subcommands that can be added to |knife| to support additional functionality that is not built-in to the base set of |knife| subcommands. Many of the |knife| plugins are built by members of the |opscode| community and several of them are built and maintained by |opscode|. A |knife| plugin is installed to the |path knife plugins| directory, from where it can be run just like any other |knife| subcommand."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom.rst:5
# ba600e21da984f7c92e6acee11abd0cf
msgid "|chef| will load |knife| and |knife| plugin commands from the following locations:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom.rst:7
# f24993111b88489dac182635007c0d90
msgid "The home directory: ``~/.chef/plugins/knife/``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom.rst:8
# dee8768dcc5142aea388634ac0d04170
msgid "A ``.chef/plugins/knife`` directory in the cookbook repository"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom.rst:9
# df8a6842434b4d3ca1796311acc6ed1e
msgid "A plugin installed from |rubygems|. (For more information about releasing a plugin on |rubygems|, see: http://guides.rubygems.org/make-your-own-gem/.)"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom.rst:11
# f79e38d597304427a08a9096c5b723ef
msgid "This approach allows |knife| plugins to be reused across projects in the home directory, kept in a repository that is accessible to other team members, and distributable to the |chef| community using |rubygems|."
msgstr ""

#: ../source/plugin_knife_custom.rst:41
# d23362af1cc147ca870aecdbdc28997c
msgid "Syntax"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:5
# 514656a6ec2043dcac2f97c7fad28648
msgid "There are many ways to structure a |knife| plugin. The best way to determine if a different structure is needed is to look at the other |knife| plugins. The following syntax shows how a typical |knife| plugin is structured:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:35
# f3f36d454a39430dbb83801720d6ab4a
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:37
# a348498971544585a1a854493d04806f
msgid "``require`` identifies any other |knife| subcommands and/or |knife| plugins required by this plugin"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:38
# 62cd4355f7724de893e03753762dbbdb
msgid "``module ModuleName`` declares the |knife| plugin as its own namespace"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:39
# 76bed22c11624a6c86d1d25bed85d091
msgid "``class SubclassName < Chef::Knife`` declares the plugin as a subclass of |knife|, which is in the |chef| namespace. The capitalization of this name is important. For example, ``SubclassName`` would have a |knife| command of ``knife subclass name``, whereas ``Subclassname`` would have a |knife| command of ``knife subclassname``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:40
# 97ffe5bcf7ad4488a0b349fc2e52f4f6
msgid "``deps do`` is a list of dependencies"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:41
# 65cb5fd6fdfc42818dc50544fa614872
msgid "``banner \"knife subcommand argument VALUE (options)\"`` is displayed when a user enters ``knife subclassName --help``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:42
# 3524aa7a2e0441249e499b6da5cd55c1
msgid "``option :name_of_option`` defines each of the command-line options that are available for this plugin. For example, ``knife subclass -l VALUE`` or ``knife subclass --long-option-name VALUE``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:43
# c3689f58b4d94f7bb3ae4855e272a5d9
msgid "``def run`` is the |ruby| code that is executed when the command is run"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:45
# d7a75a205c4d4b23aca004e68424129e
msgid "and where for each command-line option:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:47
# d22163fa28b04740871b630d618754e4
msgid "``:short`` defines the short option name"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:48
# 97a6eb865bbc456b949383788f079477
msgid "``:long`` defines the long option name"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:49
# 3a3f2512da2b4bd1b2fb4b8cf88f7201
msgid "``:description`` defines a description that is displayed when a user enters ``knife subclassName --help``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:50
# c1250d5ce77647bca1f38b64055ce14c
msgid "``:boolean`` defines whether the option is ``true`` or ``false``; if the ``:short`` and ``:long`` names define a ``VALUE``, then this attribute must not be used"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:51
# ef2182ae00514e108c77345180380eb3
msgid "``:proc`` defines code that determines the value for this option"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:52
# 6663fa538c424dc7be93d7c713d70678
msgid "``:default`` defines a default value"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:54
# 318fd730d8d443269deab2db5f74fd1d
msgid "The following example shows part of a |knife| plugin named ``knife windows``:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax.rst:111
# 518cf23df8164c12b1f25b5be53a6066
msgid "Take a look at all of the code for this plugin on |github|: https://github.com/opscode/knife-windows/blob/master/lib/chef/knife/winrm.rb."
msgstr ""

#: ../source/plugin_knife_custom.rst:45
# 6a2a581bfc0344f7b365e1b9332b641e
msgid "Namespace"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_namespace.rst:4
# 72311cbd984246dbaa3b1bf593de1a7a
msgid "A |knife| plugin should have its own namespace (even though |knife| will load a command regardless of its namespace). The namespace is declared using the ``module`` method, for example:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_namespace.rst:14
# 62725d4ce9684e51915a1821516f8485
msgid "where ``module MyNamespace`` declares that the |knife| plugin has its own namespace, with a namespace of ``MyNamespace``."
msgstr ""

#: ../source/plugin_knife_custom.rst:49
# e437db47d1c34f6393fa303c9c2ad9a6
msgid "Class Name"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_class_name.rst:5
# 12038a71555e4ed5ad749d94f4668a45
msgid "The class name declares a plugin as a subclass of both |knife| and |chef|. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_class_name.rst:11
# 3bc13a35b5ef40e8865898fbcfe2efd9
msgid "where ``SubclassName`` is the class name used by this plugin. The capitalization of this name is important. For example, ``OMG`` would have a |knife| command of ``knife o m g``, whereas ``Omg`` would have a |knife| command of ``knife omg``. Use the capitalization pattern to define the word grouping that best makes sense for the plugin."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_class_name.rst:13
# c8366ef9a97d4b37a6e9e697480bfa49
msgid "A plugin can override an existing |knife| subcommand by using the same class name as the existing subcommand. For example, to override the current functionality of ``knife cookbook upload``, use the following class name:"
msgstr ""

#: ../source/plugin_knife_custom.rst:53
# 5023fff245724363a8f999c7ecf385d5
msgid "Banner"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_banner.rst:5
# 63d633590b994ea8a24086624a1e6094
msgid "A banner displays the syntax for the plugin to users when they enter the ``--help`` option. Use the ``banner`` method in the class body similar to the following:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_banner.rst:17
# debb70d7febb447f91350c2dea8a3cbb
msgid "and the when a user enters ``knife --help``, the following will be displayed:"
msgstr ""

#: ../source/plugin_knife_custom.rst:57
# eb262d6411a4483d88c9c331fc69e91c
msgid "Dependencies"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_dependencies.rst:5
# 123b1020c1e74fd9816d088ffcbd8ae2
msgid "The functionality of other |knife| plugins can be accessed from a plugin by using the ``deps`` method to ensure the necessary files are available. The ``deps`` method acts as a lazy loader, ensuring that dependencies are only loaded into |knife| when the plugin which requires them is run. Use the following syntax just below the class declaration:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_dependencies.rst:17
#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:13
# 401cbfcc42df4c35be621c14487d49ca
# 019a8c5e282a497abf3f9782d510632c
msgid "where the actual path may vary from plugin to plugin, but is typically located in the ``chef/knife/`` directory."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_dependencies.rst:19
#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:15
# c6add35bc1ed443d9f370d4bfe82b219
# 1a9907abc1b145ceabfc26f380c9d8d0
msgid "Using the ``deps`` method instead of ``require`` is recommended, especially if the environment in which |knife| is being run contains a lot of plugins and/or any of those plugins have a lot of dependencies and/or requirements on other plugins and |chef| search functionality."
msgstr ""

#: ../source/plugin_knife_custom.rst:61
# d23001af5ac244bfa056ec82c5154f67
msgid "Requirements"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:5
# d1c7edf6ab2744549f1ae2961cae4fcd
msgid "The functionality of other |knife| plugins can be accessed from a plugin by using the ``require`` method to ensure the necessary files are available, and then within the code for the plugin, to create a new object of the class of the plugin to be used."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:7
# 02cbb02115424b69bf4d5f711eed46b3
msgid "First, ensure that the correct files are available using the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:17
# 3322cdd877964353a53c52e51dd5afc6
msgid "For example, use the following to require a plugin named ``bootstrap``:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:23
# ea515ce141644162b13e9df097e11c8d
msgid "Next, for the required plugin, create an object of that plugin, like this:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:29
# 7120e15fdcae441798b1ce66fbd1c961
msgid "and then pass arguments or options to that object. This is done by altering that object's ``config`` and ``name_arg`` variables. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:39
# 0650455f1a294bbb8a03983eaa3b993f
msgid "where the available configuration objects vary from plugin to plugin. Make sure those configuration objects are correct by verifying them in the source files for each plugin."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_require.rst:41
# 6525c20091d34f8bb985a266c0750f99
msgid "And then call the object's ``run`` method, like this:"
msgstr ""

#: ../source/plugin_knife_custom.rst:65
# 7dc3a5a83950468c8966da558b60fe73
msgid "Options"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:5
# 5f3b3d0dacac4efa8595869b7f717801
msgid "Command-line options can be added to a |knife| plugin using the ``option`` method. An option can have a true/false value:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:16
# 53636dcb8ea04499a922f49b4c8720c0
msgid "and it can have a string value:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:26
# dd58db104f9a4b1f80101fe4ebbb5f24
msgid "and can specify code that is run to determine the option's value:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:36
# e2d479b8ea514a14ad81b5e75d5be01f
msgid "where the |knife| command allows a comma-separated list of values and the ``:proc`` attribute converts that list of values into an array."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:38
# 38573d5b54b94aa294b8b6b486a48b69
msgid "When a user enters ``knife --help``, the description attributes are displayed as part of the help. Using the previous examples, something like the following will be displayed:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:48
# f1edb6cdb59a4210b1ffc6f90c48ef21
msgid "When |knife| runs the command, the options are parsed from the command-line and make the settings available as a hash that can be used to access the ``config`` method. For example, the following option:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:58
# c626c71912404ee8935d39329cb29ed9
msgid "can be used to update the ``run`` method of a class to change its behavior based on the ``config`` flag, similar to the following:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:72
# b5ce39f562a24c928f6c3f883a49b4e6
msgid "For a |knife| plugin with the ``--omg`` option, run ``knife example --omg`` to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_options.rst:78
# 4180605d8f024e648ae587df5cb9b489
msgid "or just ``knife example`` to return:"
msgstr ""

#: ../source/plugin_knife_custom.rst:69
# ecaaf05e22a34da8ae57c4b9ecf2d6df
msgid "Arguments"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:5
# eefd9f780c334fec837b3ab0f4229fcf
msgid "A |knife| plugin can also take command-line arguments that are not specified using the ``option`` flag, for example: ``knife node show NODE``. These arguments are added using the ``name_args`` method. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:27
#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:53
# 257d5f4b0ae340e191b439050508bb7e
# ee90aa9e3cf54bff94f2922b76cba87e
msgid "where"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:29
# a902e676899e4a68b7613ecf2b4175c6
msgid "``unless name_args.size == 1`` is used to check the number of arguments given; the command should fail if the input does not make sense"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:30
# a326c4c816914968bcac64c1553ad25f
msgid "``who = name_args.first`` is used to access arguments using ``name_args``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:31
# d50f2ba13b95448a89292d39cbbcabf1
msgid "``show_usage`` is used to display the correct usage before exiting (if the command fails)"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:33
# 2b79bd297acb46e08cea90d8efc93166
msgid "For example, the following command:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:39
#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:52
#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:64
# 8c1bf6b051b347929f3a00fb0011ece3
# 7bc9bf559a7a401d83e116bd8d0492c0
# d0a7b74b259a4bceb857417cf5883095
msgid "will return:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:46
# 1891e57aa1034d1490c0f8210d1a68b7
msgid "the following command:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_arguments.rst:58
# dc1a3c14e91d456eb2ee0c135bc9abe3
msgid "and the following command:"
msgstr ""

#: ../source/plugin_knife_custom.rst:73
# 3a9a03fb1fa747b6916172f6977091dd
msgid "|knife rb| Settings"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:5
# 894f1870f1c44b5b8563bdd3203f7a2b
msgid "Certain settings defined by a |knife| plugin can be configured so that they can be set using the |knife rb| file. This can be done in two ways:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:7
# 09054d8679c541a48dfcb31d90262c00
msgid "By using the ``:proc`` attribute of the ``option`` method and code that references ``Chef::Config[:knife][:setting_name]``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:8
# a119141351f848f7a4fd0a6d50dd3a98
msgid "By specifying the configuration setting directly within the ``def`` |ruby| blocks using either ``Chef::Config[:knife][:setting_name]`` or ``config[:setting_name]``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:10
# 1e85117fbf064b63b2fabd7344c98f5f
msgid "An option that is defined in this manner may be configured using the |knife rb| file with the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:16
# fca4766c098e45abb83f1be44c65a4fc
msgid "This approach can be useful when a particular setting is used a lot. The order of precedence for a |knife| option is:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:18
# 937d3665a9dd4872a3560d218af50ea2
msgid "A value passed via the command line"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:19
# 210fa2ccceda4121a2d87c71b4977277
msgid "A value saved in the |knife rb| file"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:20
# 7c8cc422216149e98477bbdc9ed0eb29
msgid "A default value"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:22
# e3c842112f60418680bc3a135100bc28
msgid "The following example shows how the ``knife bootstrap`` subcommand checks for a value in the |knife rb| file by using the ``:proc`` attribute:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:32
# fc2539bd0e9540efb8ec228b0a5987b9
msgid "where ``Chef::Config[:knife][:ssh_port]`` tells |knife| to check the |knife rb| file for a setting named ``knife[:ssh_port]``."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:34
# b689c81380f540f5b1ad4c0a5aa84c92
msgid "And the following example shows the ``knife bootstrap`` subcommand calling the ``knife ssh`` subcommand for the actual |ssh| part of running a bootstrap operation:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:55
# 3ae764723fa24d2da210300702b6e0ba
msgid "``ssh = Chef::Knife::Ssh.new`` creates a new instance of the ``Ssh`` subclass named ``ssh``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:56
# 4b6123ce7b0a4178a32ae55d066bade2
msgid "A series of settings in ``knife ssh`` are associated with ``knife bootstrap`` using the  ``ssh.config[:setting_name]`` syntax"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:57
# 9de60c5898dd40878d107683a553a930
msgid "``Chef::Config[:knife][:setting_name]`` tells |knife| to check the |knife rb| file for various settings"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_settings.rst:58
# 70456eac323c44729e18a19a3d876a45
msgid "Raises an exception if any aspect of the |ssh| operation fails"
msgstr ""

#: ../source/plugin_knife_custom.rst:77
# 7876287733e64d1e9399f8e7851a8319
msgid "Search"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:5
# 70b531b3160c4712acf6430e0c58c5d6
msgid "Use the |chef| search functionality within a plugin to return information about the infrastructure to that plugin. Use the ``require`` method to ensure that search functionality is available with the following:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:11
# e60842567be2462c85b8589495578696
msgid "Create a search query object and assign it to a variable:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:17
# 7e6665ceb27f42289986130a45f49929
msgid "After the search object is created it can be used by the plugin to execute search queries for objects on the |chef server|. For example, using a variable named ``query_nodes`` a plugin could search for nodes with the ``webserver`` role and then return the name of each node found:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:27
# aa7d16598576439480dc146753183f4a
msgid "This result can then be used to edit nodes. For example, searching for nodes with the ``webserver`` role, and then changing the run_list for those nodes to a role named ``apache2``:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:40
# 838fd5ebbd3042179710c812b362d212
msgid "It's also possible to specify multiple items to add to the run_list:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_search.rst:46
# d740f49f0f874e21b3968973cfd50b78
msgid "And arguments sent with a plugin command can also be used to search. For example, if the command ``knife envchange \"web*\"`` is sent, then the command will search for any nodes in roles beginning with \"web\" and then change their environment to \"web\":"
msgstr ""

#: ../source/plugin_knife_custom.rst:81
# 25632091a035491784e3b95f2a77f6e4
msgid "User Interaction"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:5
# cdddeaabb86f4dd69ca6565c04de0e9e
msgid "The ``ui`` object provides a set of methods that can be used to define user interactions and to help ensure a consistent user experience across |knife| plugins. The following methods should be used in favor of manually handling user interactions:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:11
# 64a2918a737c473d8220afec18330406
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:12
# 6777e242857b40aa9c24b166bf893adb
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:13
# 9783400b27ef4cf8abc9af1c43c44bae
msgid "``ui.ask(*args, &block)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:15
# d4758d842a354e32ad4c34f9db9a44e8
msgid "``ui.ask_question(question, opts={})``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:16
# 67deb20df357480facdc972c5a51a36c
msgid "Use to ask a user the question contained in ``question``. If ``:default => default_value`` is passed as the second argument, ``default_value`` will be used if the user does not provide an answer. This method will respect the ``--default`` command-line option."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:17
# de98ae0a556c42df8e0647b500c78f29
msgid "``ui.color(string, *colors)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:18
# 22710250323145d98f24ea4cf64ca08f
msgid "Use to specify a color."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:19
# d038381ff03c4e6bacb55e23c034bab2
msgid "``ui.color?()``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:20
# 9948ab487774438f9665cdea3a53cf17
msgid "Indicates that colored output should be used. When output is not to a terminal, colored output is never used."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:21
# bdadb1dca65a4b83bc234522ba3aa739
msgid "``ui.confirm(question, append_instructions=true)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:22
# 98302142873c4eb8b66b324d557ce671
msgid "Use to as a Y/N question. If the user responds with ``N``, immediately exit with status code 3."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:23
# 245a07332ea54dd3bf3a85b0613cb30a
msgid "``ui.edit_data(data, parse_output=true)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:24
# 89e475a17e9f4450b3eafc4247a30486
msgid "Use to edit data. This opens the |chef editor|."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:25
# 0e8fcfe6548c4706b5241a81f4258bee
msgid "``ui.edit_object(klass, name)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:27
# 9b7c6e244172499bbfe1787bfd708746
msgid "``ui.error``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:28
# 140fd9be6dc94df19c6a12e7c54a7448
msgid "Use to present an error to the user."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:29
# 26f8b304418443fab865652c2a1c5a20
msgid "``ui.fatal``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:30
# e637629847e44ca1a10e0f790e8fc978
msgid "Use to present a fatal error to the user."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:31
# e39ca7133f444e0d969b398fa2cd0cd2
msgid "``ui.highline``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:32
# 112dc0bf3a3449c2b57d77ed272a7779
msgid "Use to provide direct access to the `Highline object <http://highline.rubyforge.org/doc/>`_ used by many ``ui`` methods."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:33
# bd4de1cc95834e4a8a5a861f1500a407
msgid "``ui.info``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:34
# cd963c0a04a7404591a2ffb66fad7b7e
msgid "Use to present a message to a user."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:35
# 66b293a9265149c3a185d8389cfb0696
msgid "``ui.interchange``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:36
# 84cb5f0a038c45f4ba7df8f28fdcdaa9
msgid "Use to determine if the output is a data interchange format such as |json| or |yaml|."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:37
# d24531fa378d48288b3436e9ae916135
msgid "``ui.list(*args)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:39
# 337ae257db6844c9bd9c56eaf188718f
msgid "``ui.msg(message)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:40
# eed6ce1abd214a878867619f0b1b5544
msgid "Use to present a message to the user."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:41
# 590f72dd8a9e456bafd02f8282761324
msgid "``ui.output(data)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:42
# 7c29a752c08a44b39c8557f1ec39ad69
msgid "Use to present a data structure to the user. This method will respect the output requested when the ``-F`` command-line option is used. The output will use the generic default presenter."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:43
# 0aa44578594243e6b63fb06fa3a4545e
msgid "``ui.pretty_print(data)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:44
# 05f2e8524e3b48e5bfaafc2703660262
msgid "Use to enable pretty-print output for |json| data."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:45
# 506214e658e24ec681275359727613de
msgid "``ui.use_presenter(presenter_class)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:46
# fe2d58545ea74cee8acee2902425e62a
msgid "Use to specify a custom output presenter."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:47
# 5525f9a5c4ac49e6ad13713ae5a675c6
msgid "``ui.warn(message)``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:48
# fd8d6f198e634957a2737663e519ee9e
msgid "Use to present a warning to the user."
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_syntax_user_interaction.rst:50
# 918dd5f4d7b044c892ad3d15aa1eb4d4
msgid "For example, to show a fatal error in a plugin in the same way that it would be shown in |knife| do something similar to the following:"
msgstr ""

#: ../source/plugin_knife_custom.rst:85
# 609bafcb69364ababfc700ba59a70dd4
msgid "Create a Plugin"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_create.rst:5
# 0ea1e863cfda4a2096cdf939b4bdfd08
msgid "A |knife| command is a |ruby| class that inherits from the ``Chef::Knife`` class.  A |knife| command is run by calling the ``run`` method on an instance of the command class. For example:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_create.rst:18
# e822054ed6574b7e9d2820d3ce28a498
msgid "and is run from the command line using:"
msgstr ""

#: ../source/plugin_knife_custom.rst:89
# f9f66a2c8e22454cbea37dc04529a0bc
msgid "Exceptions"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_exceptions.rst:5
# 1254592b3afe4cd4b722ecb2655cd367
msgid "In most cases, the exception handling available within |knife| is enough to ensure that exception handling for a plugin is consistent with how |knife| ordinarily behaves. That said, exceptions can also be handled within a |knife| plugin in the same way they are handled in any |ruby| program."
msgstr ""

#: ../source/plugin_knife_custom.rst:93
# 009eb0f644464af7851adba8a41a53c1
msgid "Install a Plugin"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_install.rst:5
# 227903785139432fa1f224b20055e58d
msgid "To install a |knife| plugin from a file, do one of the following:"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_install.rst:7
# f5cbf6b45132468ab3dcc0fb56b9fdab
msgid "Copy the file to the ``~/.chef/plugins/knife`` directory; the file's extension must be ``.rb``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_install.rst:8
# adf2de7753804e678447c43f63544b78
msgid "Add the file to the |chef| repository at the ``CHEF_REPO/.chef/plugins/knife``; the file's extension must be ``.rb``"
msgstr ""

#: ../../includes_knife/includes_knife_plugin_custom_install.rst:9
# f3999e035db04e19a16008af44095b72
msgid "Install the plugin from |rubygems|"
msgstr ""


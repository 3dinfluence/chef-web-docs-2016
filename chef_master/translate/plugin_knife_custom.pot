# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-04-08 13:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/plugin_knife_custom.rst:34
# c63f8ed73233433f9c86771560db7781
msgid "Custom Knife Plugins"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife.rst:5
# 9637acdc669b4db88cba2e952d33daef
msgid "A |knife| plugin is a set of one (or more) subcommands that can be added to |knife| to support additional functionality that is not built-in to the base set of |knife| subcommands. Many of the |knife| plugins are built by members of the |opscode| community and several of them are built and maintained by |opscode|. A |knife| plugin is installed to the |path knife plugins| directory, from where it can be run just like any other |knife| subcommand."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom.rst:5
# 579e8bdae6f3437c8bfb54b060d25ede
msgid "|chef| will load |knife| and |knife| plugin commands from the following locations:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom.rst:7
# 02d9449c1f5c4096983ebac4d37b7929
msgid "The home directory: ``~/.chef/plugins/knife/``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom.rst:8
# 1a80cb554bc04b4aa756ded388654c84
msgid "A ``.chef/plugins/knife`` directory in the cookbook repository"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom.rst:9
# be99a79fc77c47a5ad2244f32b2c074b
msgid "A plugin installed from |rubygems|. (For more information about releasing a plugin on |rubygems|, see: http://guides.rubygems.org/make-your-own-gem/.)"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom.rst:11
# 3874f0a01ca845b1bc10f549db33053f
msgid "This approach allows |knife| plugins to be reused across projects in the home directory, kept in a repository that is accessible to other team members, and distributable to the |chef| community using |rubygems|."
msgstr ""

#: ../source/plugin_knife_custom.rst:41
# 2c8d8540759e4ff5b7a8605f41b0f557
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:5
# c3b0587634ae4cb1a4ec10eede6541de
msgid "There are many ways to structure a |knife| plugin. The best way to determine if a different structure is needed is to look at the other |knife| plugins. The following syntax shows how a typical |knife| plugin is structured:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:35
# e91c4df12ea1472fa903d752fa25288e
msgid "where:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:37
# 2200bbe612304782a1fbe55de359a8cd
msgid "``require`` identifies any other |knife| subcommands and/or |knife| plugins required by this plugin"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:38
# fd4de3879d694ceb89c2daf1da1982f2
msgid "``module ModuleName`` declares the |knife| plugin as its own namespace"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:39
# 21e9134022ea485c972a4c7ec4c75d77
msgid "``class SubclassName < Chef::Knife`` declares the plugin as a subclass of |knife|, which is in the |chef| namespace. The capitalization of this name is important. For example, ``SubclassName`` would have a |knife| command of ``knife subclass name``, whereas ``Subclassname`` would have a |knife| command of ``knife subclassname``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:40
# 62ae2331e5cb40608e8dc26b4303f134
msgid "``deps do`` is a list of dependencies"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:41
# 0821723a86e143c885995aaf00c1f252
msgid "``banner \"knife subcommand argument VALUE (options)\"`` is displayed when a user enters ``knife subclassName --help``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:42
# b3c48d879fb247dc9327c8ba1e4a276f
msgid "``option :name_of_option`` defines each of the command-line options that are available for this plugin. For example, ``knife subclass -l VALUE`` or ``knife subclass --long-option-name VALUE``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:43
# 3cb9183ae14a4205bc0eedf464ac2a97
msgid "``def run`` is the |ruby| code that is executed when the command is run"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:45
# 77639595965b491a8771121eba4e9f18
msgid "and where for each command-line option:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:47
# 6f8962d37ecb42c79d98e24a8569c23d
msgid "``:short`` defines the short option name"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:48
# afc16b8cf80a4e2b999eadf112d4d0ff
msgid "``:long`` defines the long option name"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:49
# b83967d070364ede8d883f2e31a65d1e
msgid "``:description`` defines a description that is displayed when a user enters ``knife subclassName --help``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:50
# e2731be5443d40848889550ca1f01e55
msgid "``:boolean`` defines whether the option is ``true`` or ``false``; if the ``:short`` and ``:long`` names define a ``VALUE``, then this attribute must not be used"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:51
# 2ab8442ee2ea47628e6798c27d8ce633
msgid "``:proc`` defines code that determines the value for this option"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:52
# 9efffd2f87f24ceb89a04d64e3d59b44
msgid "``:default`` defines a default value"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:54
# d581c4d348ed4c409b79864815d8479d
msgid "The following example shows part of a |knife| plugin named ``knife windows``:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax.rst:111
# d505f0cc5e9c4f8aa986cda8a0495544
msgid "Take a look at all of the code for this plugin on |github|: https://github.com/opscode/knife-windows/blob/master/lib/chef/knife/winrm.rb."
msgstr ""

#: ../source/plugin_knife_custom.rst:45
# 7c1895a39e3c4d10bb5ed0a2c3097272
msgid "Namespace"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_namespace.rst:4
# 38248047ef76472ca512cd0082cbb8ba
msgid "A |knife| plugin should have its own namespace (even though |knife| will load a command regardless of its namespace). The namespace is declared using the ``module`` method, for example:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_namespace.rst:14
# 52b4c776dd5940f2b0b64977578ebaab
msgid "where ``module MyNamespace`` declares that the |knife| plugin has its own namespace, with a namespace of ``MyNamespace``."
msgstr ""

#: ../source/plugin_knife_custom.rst:49
# 65c962865faa44a2915de00834078a64
msgid "Class Name"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_class_name.rst:5
# 26db46567b6146db901fc854882e10a1
msgid "The class name declares a plugin as a subclass of both |knife| and |chef|. For example:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_class_name.rst:11
# 5b81093b2adc40ce87923ae33d316dec
msgid "where ``SubclassName`` is the class name used by this plugin. The capitalization of this name is important. For example, ``OMG`` would have a |knife| command of ``knife o m g``, whereas ``Omg`` would have a |knife| command of ``knife omg``. Use the capitalization pattern to define the word grouping that best makes sense for the plugin."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_class_name.rst:13
# 5606c04a5e9e4901a46ee479a861bdd2
msgid "A plugin can override an existing |knife| subcommand by using the same class name as the existing subcommand. For example, to override the current functionality of ``knife cookbook upload``, use the following class name:"
msgstr ""

#: ../source/plugin_knife_custom.rst:53
# 79327668b2a04200ace7d1aa231a4219
msgid "Banner"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_banner.rst:5
# aa4492f4cc334b63b7652298b6d8e9f0
msgid "A banner displays the syntax for the plugin to users when they enter the ``--help`` option. Use the ``banner`` method in the class body similar to the following:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_banner.rst:17
# d28419b3c67d458993b9e66a7b901b7e
msgid "and the when a user enters ``knife --help``, the following will be displayed:"
msgstr ""

#: ../source/plugin_knife_custom.rst:57
# d9f87c5f3d694a2dbe873a5b77d7cc2c
msgid "Dependencies"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_dependencies.rst:5
# e6433a197bc543df96e033253c36dcf8
msgid "The functionality of other |knife| plugins can be accessed from a plugin by using the ``deps`` method to ensure the necessary files are available. The ``deps`` method acts as a lazy loader, ensuring that dependencies are only loaded into |knife| when the plugin which requires them is run. Use the following syntax just below the class declaration:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_dependencies.rst:17
#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:13
# 80ea482d12cd45ab85216f1c13294d95
# 71e3ae97c58440348657c922368da031
msgid "where the actual path may vary from plugin to plugin, but is typically located in the ``chef/knife/`` directory."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_dependencies.rst:19
#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:15
# d498de881ec24f699090bbaf2a22e607
# 22abcdb614cf47b8aa7a92d8b9599a9d
msgid "Using the ``deps`` method instead of ``require`` is recommended, especially if the environment in which |knife| is being run contains a lot of plugins and/or any of those plugins have a lot of dependencies and/or requirements on other plugins and |chef| search functionality."
msgstr ""

#: ../source/plugin_knife_custom.rst:61
# 7bd3976416064c0e83a31533c96b79bf
msgid "Requirements"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:5
# a12f1950d57e4cf79c51749957c11f9e
msgid "The functionality of other |knife| plugins can be accessed from a plugin by using the ``require`` method to ensure the necessary files are available, and then within the code for the plugin, to create a new object of the class of the plugin to be used."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:7
# 3a8515053c554c8cb5b8bfd1b2db5a0f
msgid "First, ensure that the correct files are available using the following syntax:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:17
# c8ddc8e48bd14edd82b1eb562d526a45
msgid "For example, use the following to require a plugin named ``bootstrap``:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:23
# ecedf091cdb0449399e8c2a238f7165d
msgid "Next, for the required plugin, create an object of that plugin, like this:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:29
# eead6fb156774e999656cf61217ffc7e
msgid "and then pass arguments or options to that object. This is done by altering that object's ``config`` and ``name_arg`` variables. For example:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:39
# 4e38761cc0e543dc89cac83fc604ad32
msgid "where the available configuration objects vary from plugin to plugin. Make sure those configuration objects are correct by verifying them in the source files for each plugin."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_require.rst:41
# b4a1607db40c4f9cb2e1a4fc3464926c
msgid "And then call the object's ``run`` method, like this:"
msgstr ""

#: ../source/plugin_knife_custom.rst:65
# 8abf937c18d84ab5ae02de5a41068bf9
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:5
# f6c64236a8ee438299987f2c7b954e5c
msgid "Command-line options can be added to a |knife| plugin using the ``option`` method. An option can have a true/false value:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:16
# 30e15dd094194764be8a799ef1990210
msgid "and it can have a string value:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:26
# c39ec99b5a4f496b9a0a0f4a7b23a10d
msgid "and can specify code that is run to determine the option's value:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:36
# 6539b414e1de4c2cb5314ce3dcb5ea73
msgid "where the |knife| command allows a comma-separated list of values and the ``:proc`` attribute converts that list of values into an array."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:38
# 6bc5bab933bf4d3a898f6a39f8954f4d
msgid "When a user enters ``knife --help``, the description attributes are displayed as part of the help. Using the previous examples, something like the following will be displayed:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:48
# 27f593743cad416a8d51413e2ae6554d
msgid "When |knife| runs the command, the options are parsed from the command-line and make the settings available as a hash that can be used to access the ``config`` method. For example, the following option:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:58
# 78d137d10a714396850f9c068479869f
msgid "can be used to update the ``run`` method of a class to change its behavior based on the ``config`` flag, similar to the following:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:72
# 4c3713f73f854815ba437809f1400d08
msgid "For a |knife| plugin with the ``--omg`` option, run ``knife example --omg`` to return something like:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_options.rst:78
# ac7388b446d74fc6a274bc19fb1f0d11
msgid "or just ``knife example`` to return:"
msgstr ""

#: ../source/plugin_knife_custom.rst:69
# cba0f10dbf554f5a87e0b41de107a72b
msgid "Arguments"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:5
# 2cbf7eac2a6d4acfb4cd2a1c727368ba
msgid "A |knife| plugin can also take command-line arguments that are not specified using the ``option`` flag, for example: ``knife node show NODE``. These arguments are added using the ``name_args`` method. For example:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:27
#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:53
# 30bd78cde132456a900a99b7bf316904
# eda24a44ab5d49b4950fb45b275c29d1
msgid "where"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:29
# 984c6bed9a3b41888559e1ae0b5cf310
msgid "``unless name_args.size == 1`` is used to check the number of arguments given; the command should fail if the input does not make sense"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:30
# b71ec0e97c444d74bfc95cbf448d82ca
msgid "``who = name_args.first`` is used to access arguments using ``name_args``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:31
# 56e87dfec77f4a05bc858bc9b6fba579
msgid "``show_usage`` is used to display the correct usage before exiting (if the command fails)"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:33
# fa3fb9db43d041d1a7b4933212850b21
msgid "For example, the following command:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:39
#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:52
#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:64
# f1081e7f3e56464cbbdf0c099f111ec5
# e66a51191c824174883f31a7e939080c
# 6426506fc5e742d28811befee20dd47f
msgid "will return:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:46
# 6cc9e9a8cb3a48c3b3737794328dd7e3
msgid "the following command:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_arguments.rst:58
# cf29dbf4258e46b0946233f63fb84666
msgid "and the following command:"
msgstr ""

#: ../source/plugin_knife_custom.rst:73
# 588510e25d36448781a006c9473914bc
msgid "|knife rb| Settings"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:5
# 46514990d6914fcc986d0055024923d0
msgid "Certain settings defined by a |knife| plugin can be configured so that they can be set using the |knife rb| file. This can be done in two ways:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:7
# cb08cae2435a44368ee4c5fd38c5fbf6
msgid "By using the ``:proc`` attribute of the ``option`` method and code that references ``Chef::Config[:knife][:setting_name]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:8
# bf48a3c4cf554d1482af44ec182d269d
msgid "By specifying the configuration setting directly within the ``def`` |ruby| blocks using either ``Chef::Config[:knife][:setting_name]`` or ``config[:setting_name]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:10
# dcdeabd279804f3dad05c1a283bc27ed
msgid "An option that is defined in this manner may be configured using the |knife rb| file with the following syntax:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:16
# 7a9e7c731798460d8cfc276e0ad0f811
msgid "This approach can be useful when a particular setting is used a lot. The order of precedence for a |knife| option is:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:18
# 470bcb225473461ca04ac0aae150fa30
msgid "A value passed via the command line"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:19
# 20544434a86f4a6fa563800896832908
msgid "A value saved in the |knife rb| file"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:20
# d61592d769eb4a26bb722cc707eacee1
msgid "A default value"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:22
# 78e74abdfd6f4040bc64cf53a4ad8d1b
msgid "The following example shows how the ``knife bootstrap`` subcommand checks for a value in the |knife rb| file by using the ``:proc`` attribute:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:32
# 890bcbc316c8478da3099ee3cc832659
msgid "where ``Chef::Config[:knife][:ssh_port]`` tells |knife| to check the |knife rb| file for a setting named ``knife[:ssh_port]``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:34
# 36900c1670b2457e9979b0b7daa69aa0
msgid "And the following example shows the ``knife bootstrap`` subcommand calling the ``knife ssh`` subcommand for the actual |ssh| part of running a bootstrap operation:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:55
# 7fde251157a342b49d3db0e8ef5eb4d0
msgid "``ssh = Chef::Knife::Ssh.new`` creates a new instance of the ``Ssh`` subclass named ``ssh``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:56
# 6439fc76d600452ab11d79eceda649b9
msgid "A series of settings in ``knife ssh`` are associated with ``knife bootstrap`` using the  ``ssh.config[:setting_name]`` syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:57
# 2f04d330edba4546933cd02e41a4a603
msgid "``Chef::Config[:knife][:setting_name]`` tells |knife| to check the |knife rb| file for various settings"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_settings.rst:58
# 6d3aa97a5f9c40eb8c1c601631829843
msgid "Raises an exception if any aspect of the |ssh| operation fails"
msgstr ""

#: ../source/plugin_knife_custom.rst:77
# bc4044bd185b42c79afc1da5dc1cf560
msgid "Search"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:5
# a9684aec5a904a90ac9fae7df3aa35b5
msgid "Use the |chef| search functionality within a plugin to return information about the infrastructure to that plugin. Use the ``require`` method to ensure that search functionality is available with the following:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:11
# 489b7f7f65434f73b3374c019302e577
msgid "Create a search query object and assign it to a variable:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:17
# 109ff12069184a5a85cdea074f4a3a9a
msgid "After the search object is created it can be used by the plugin to execute search queries for objects on the |chef server|. For example, using a variable named ``query_nodes`` a plugin could search for nodes with the ``webserver`` role and then return the name of each node found:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:27
# 511cbeee9c2d418e9dc68b3a853da92d
msgid "This result can then be used to edit nodes. For example, searching for nodes with the ``webserver`` role, and then changing the run_list for those nodes to a role named ``apache2``:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:40
# 0a414fce11ee468ca1925af5929f7d92
msgid "It's also possible to specify multiple items to add to the run_list:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_search.rst:46
# 1a2588b61ef348b49a47d3edbe8b812f
msgid "And arguments sent with a plugin command can also be used to search. For example, if the command ``knife envchange \"web*\"`` is sent, then the command will search for any nodes in roles beginning with \"web\" and then change their environment to \"web\":"
msgstr ""

#: ../source/plugin_knife_custom.rst:81
# e6ff69a94c9b4a5e9a4f423fe607a6f2
msgid "User Interaction"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:5
# d49d7f776b4d46a6acae46b2421bf9e0
msgid "The ``ui`` object provides a set of methods that can be used to define user interactions and to help ensure a consistent user experience across |knife| plugins. The following methods should be used in favor of manually handling user interactions:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:11
# 34563ca051164b3f83a88f5de61e9a63
msgid "Method"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:12
# afd119869c234dcc914d8dec0df3acf5
msgid "Description"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:13
# 5def36cad59e4afaa3cfa23cb06c403a
msgid "``ui.ask(*args, &block)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:15
# 3807bb97904e4a25a1d97b01eabf7a01
msgid "``ui.ask_question(question, opts={})``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:16
# c1f1125e7421404b9ec4c9401ce6020b
msgid "Use to ask a user the question contained in ``question``. If ``:default => default_value`` is passed as the second argument, ``default_value`` will be used if the user does not provide an answer. This method will respect the ``--default`` command-line option."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:17
# 31b4ef74c36c4bb58a76a310a274ea48
msgid "``ui.color(string, *colors)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:18
# 617c2536d83342a38efc50aea889c6f8
msgid "Use to specify a color."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:19
# e1a510588fbe4f8d983a47456c705a59
msgid "``ui.color?()``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:20
# c3e5e643a43444238e9b6236b4e73f2a
msgid "Indicates that colored output should be used. (Colored output can only be used when output is sent to a terminal.) For example, from the ``knife rackspace server list`` subcommand:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:34
# b0df0a3dae6643d2b6ca9a55e508b543
msgid "and from the ``knife eucalyptus server create`` subcommand:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:46
# 754d5e06c5e048e6846b5428b6af9b17
msgid "``ui.confirm(question, append_instructions=true)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:47
# f007f4a44dfe4a16b9e166a0dab0534b
msgid "Use to ask a Y/N question. If the user responds with ``N``, immediately exit with status code 3."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:48
# bdc674424e664f2eabafe1a535b12948
msgid "``ui.edit_data(data, parse_output=true)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:49
# e564ed6c1f3a43ae8bbdc2ba9f0a46ae
msgid "Use to edit data. This opens the |chef editor|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:50
# f5d04dd706ca45249c40c9bd4bb754dc
msgid "``ui.edit_object(klass, name)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:52
# cdcd98d9e7ac43869c925406d6624fc0
msgid "``ui.error``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:53
# 954241e65e78453ab448b5d60644032b
msgid "Use to present an error to the user."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:54
# 767f9af8622d4e3cb7df0774bf0e5649
msgid "``ui.fatal``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:55
# 623de5145c8448debfd766e1005e65a0
msgid "Use to present a fatal error to the user."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:56
# 9a8d9c498ae14d46a7586628c393a77b
msgid "``ui.highline``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:57
# 121c98fe7b4c44369bbd357ce41e2495
msgid "Use to provide direct access to the `Highline object <http://highline.rubyforge.org/doc/>`_ used by many ``ui`` methods."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:58
# 8aeb3ac075ff4a24b44159b7cc7553bf
msgid "``ui.info``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:59
# 6445240247a940c387fe8cd8965797ed
msgid "Use to present a message to a user."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:60
# 2804ae16fd004f1eaef32bdbacea146b
msgid "``ui.interchange``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:61
# 3536d653ca5b4d04be6dc4ccbfe1b4fe
msgid "Use to determine if the output is a data interchange format such as |json| or |yaml|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:62
# a25d795083e84780ae5f69f68530cb3a
msgid "``ui.list(*args)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:64
# 2f0c77fcc95c4d8cbceacb207a213578
msgid "``ui.msg(message)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:65
# 00390f94771b46d58f2673703bf5b960
msgid "Use to present a message to the user."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:66
# c252612735a5495b8feca5b57a4fb7a4
msgid "``ui.output(data)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:67
# 25015c4af567424b9a78f690e7031bbd
msgid "Use to present a data structure to the user. This method will respect the output requested when the ``-F`` command-line option is used. The output will use the generic default presenter."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:68
# 1b66c704f6e94ae9b75447b040f1d7bc
msgid "``ui.pretty_print(data)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:69
# e4df4d70ea5b4c399dd676a7b997405b
msgid "Use to enable pretty-print output for |json| data."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:70
# 1c98f9a376c64a6f959f444c5930151a
msgid "``ui.use_presenter(presenter_class)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:71
# d00e1f224971420c9b7cd5a96bbaf2bc
msgid "Use to specify a custom output presenter."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:72
# c31b0e6c55a14d518af4473073686219
msgid "``ui.warn(message)``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:73
# 39161f6edd644e7a94632ce263a85921
msgid "Use to present a warning to the user."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_syntax_user_interaction.rst:75
# 6678f4778f0d42bd8c85b8b553baab67
msgid "For example, to show a fatal error in a plugin in the same way that it would be shown in |knife| do something similar to the following:"
msgstr ""

#: ../source/plugin_knife_custom.rst:85
# f8299ffe382441b89660ceb216b60be7
msgid "Create a Plugin"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_create.rst:5
# 3a704c68a84f419992410e46f85bfaea
msgid "A |knife| command is a |ruby| class that inherits from the ``Chef::Knife`` class.  A |knife| command is run by calling the ``run`` method on an instance of the command class. For example:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_create.rst:18
# 5b274580ef4840d1b23adf130e02b8dd
msgid "and is run from the command line using:"
msgstr ""

#: ../source/plugin_knife_custom.rst:89
# a1338147585c40a687c2ad8bfd99eeac
msgid "Exceptions"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_exceptions.rst:5
# 4d7a4cb6e36e4e6fbba193290b7f5145
msgid "In most cases, the exception handling available within |knife| is enough to ensure that exception handling for a plugin is consistent with how |knife| ordinarily behaves. That said, exceptions can also be handled within a |knife| plugin in the same way they are handled in any |ruby| program."
msgstr ""

#: ../source/plugin_knife_custom.rst:93
# 3e46a2d156cf497f928adb1563150c34
msgid "Install a Plugin"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_install.rst:5
# 3efb51dfb66b49daab1b022d71ff8f08
msgid "To install a |knife| plugin from a file, do one of the following:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_install.rst:7
# e20ceddc2a374f81948e694415ef393a
msgid "Copy the file to the ``~/.chef/plugins/knife`` directory; the file's extension must be ``.rb``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_install.rst:8
# a1e1217917d24283b4e5417a524a3f96
msgid "Add the file to the |chef| repository at the ``CHEF_REPO/.chef/plugins/knife``; the file's extension must be ``.rb``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_custom_install.rst:9
# e40223ea13e942c085b99f584f4f7d6e
msgid "Install the plugin from |rubygems|"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-30 16:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/index.rst:34
# e0b4972fa50942c6a07e0afe7e4b99a0
msgid "Chef Documentation"
msgstr ""

#: ../source/index.rst:36
# 6bd0ea1320a7420f9ee70b62734ad716
msgid "This page is a work in progress because Opscode is in the process of moving content from wiki.opscode.com to here. This set of topics is a collection of all documentation for |chef|, including |chef hosted|, |chef private|, and |chef open server|."
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 84bc884b214f43baa2767ef231c5b0a3
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/index.rst:40
# 2cf57fbdc1fc471ea6d6de46ce9b3a20
msgid "**Getting Started**: :doc:`chef_overview` | :doc:`just_enough_ruby_for_chef` | :doc:`install`"
msgstr ""

#: ../source/index.rst:44
# c88c2fb0406b435ba26de417c571413b
msgid "**References**: :doc:`Resources and Providers </resource>` | :doc:`Knife </knife>` | :doc:`Knife Plug-ins </plugin_knife>` | :doc:`Lightweight Resources </lwrp>` | :doc:`api_cookbooks_site` |  :doc:`api_chef_server` | :doc:`chef-client </chef_client>` | :doc:`Configuration Files </config>` | :doc:`dsl_recipe` | :doc:`opscode_cookbooks`"
msgstr ""

#: ../source/index.rst:48
# 4345179bff334767a3649f216ea64ae6
msgid "**Nodes**: :doc:`About Nodes </essentials_nodes>` | :doc:`Ohai </ohai>` | :doc:`Exception and Report Handlers </essentials_handlers>` | :doc:`essentials_nodes_chef_run` | :doc:`essentials_chef_client`"
msgstr ""

#: ../source/index.rst:52
# 5c88b5c9c04144c28832117151990c0a
msgid "**Workstations**: :doc:`About Workstations </essentials_workstation>` | :doc:`Repository </essentials_repository>` | :doc:`essentials_knife`"
msgstr ""

#: ../source/index.rst:56
# cc001a3a1ef54dabbd677cafc5e6063f
msgid "**The Chef Server**: :doc:`About the Chef Server </essentials_server>` | :doc:`Node Objects </essentials_node_object>` | :doc:`Roles </essentials_roles>` | :doc:`Data Bags </essentials_data_bags>` | :doc:`Environments </essentials_environments>` | :doc:`Search </essentials_search>`"
msgstr ""

#: ../source/index.rst:60
# f5c71241470c42a8a2c3a5f542a96d6b
msgid "**Cookbooks**: :doc:`essentials_cookbooks` | :doc:`essentials_cookbook_directory` | :doc:`Attributes </essentials_cookbook_attribute_files>` | :doc:`Definitions </essentials_cookbook_definitions>` | :doc:`Files </essentials_cookbook_files>` | :doc:`Libraries </essentials_cookbook_libraries>` | :doc:`Lightweight Resources </essentials_cookbook_lwrp>` | :doc:`Metadata </essentials_cookbook_metadata>` | :doc:`Recipes </essentials_cookbook_recipes>` | :doc:`Resources and Providers </essentials_cookbook_resources>` | :doc:`Cookbook Templates </essentials_cookbook_templates>` | :doc:`Cookbook Versions </essentials_cookbook_versions>`"
msgstr ""

#: ../source/index.rst:62
# 69a0f9acccb44ea1a57eb1c7b334789c
msgid "**Manage Chef:** :doc:`Hosted Chef </manage_server_hosted>`"
msgstr ""


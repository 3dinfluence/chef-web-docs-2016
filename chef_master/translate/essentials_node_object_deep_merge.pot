# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-04 16:42\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_node_object_deep_merge.rst:34
# c0eb36dc5b994d06a49058dd2121d6db
msgid "Deep Merge"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:4
# df249beb32734f2bafb94057051137c5
msgid "Attributes are typically stored in cookbooks and recipes, roles, and environments. These attributes are rolled-up to the node level during a |chef| run. For example, a recipe can store attributes using a multi-level hash or array; a group of attributes for web servers might be:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:19
# fa56e441989b4abfb1a1a8643bdaaf34
msgid "But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:34
# 623c815dd7d84069925fe7186b253f8b
msgid "But that is not very efficient, especially because most of them are identical. The deep merge capabilities of |chef| allows attributes to be layered across recipes and cookbooks, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be. For example, a role named ``baseline.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:53
# f364a46c5cc94754a8365cfc26d43e3a
msgid "and then a role named ``web.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:69
# 1a7d004accce4d13becac820c6f2b5f1
msgid "Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as  a hash or an array, the contents are merged. This is true even with different levels of precedence, such as default and override attributes. If the attribute is of a different data type, it is overwritten at higher levels of precedence."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:71
# 0758c6cf95f24a13a797b976d58479f7
msgid "For example, the ``web.rb`` references the ``baseline.rb`` role. The ``web.rb`` file only provides a value for one attribute: ``:startservers``. When |chef| compares these attributes, the deep merge feature will ensure that ``:startservers`` (and its value of ``30``) will be applied to any node for which the ``web.rb`` attribute structure should be applied."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:73
# 60e4aa55c50d44a0b3bbfba1ca7b2cf7
msgid "This approach will allow a recipe like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:80
# 901c03b394684ef090c26df7d98f2e22
msgid "and a ``run_list`` like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:89
# c2dca336dd4f4ebca55cfd2b6d856c4f
msgid "to produce results like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:103
# 267b47d57c4d4e2da490e3da80ffa7cf
msgid "Even though the ``web.rb`` file does not contain attributes and values for ``minspareservers``, ``maxspareservers``, ``serverlimit``, ``maxclients``, and ``maxrequestsperchild``, the deep merge capabilities pulled them in."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:38
# 02afade7ca7647b789f2ac25b93a451d
msgid "The following sections show how the logic works for using deep merge to perform substitutions and additions of attributes."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:41
# d2badbf2f4154ff3965579207210af71
msgid "Substitution"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:4
# 4993bed9ce224fe081bded8b118c77bd
msgid "The following examples show how the logic works for substituting an existing string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:12
# dadd099a45724d2497469637e8038305
msgid "For substituting an existing boolean using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:20
# 8422de1c66c64ccbb5ed06637286b54b
msgid "For substituting an array with a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:28
# 877827d610034f2c943b8b45f426d0dc
msgid "When items cannot be merged through substitution, the original data is overwritten."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:45
# e4e7c53fa84c4bf392648b9e7db82ecc
msgid "Addition"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:4
# 8d980e41fb9841959007a685b50122c0
msgid "The following examples show how the logic works for adding a string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:12
# 27bad675775745c98759048f1b55bf79
msgid "For adding a string using an array::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:20
# 2aebada1381c439fa19700f42ca396d3
msgid "For adding a string using a multi-level hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:28
# b6742fe9a2f2475e8ce75551ad1981d9
msgid "For adding a string using a multi-level array::"
msgstr ""


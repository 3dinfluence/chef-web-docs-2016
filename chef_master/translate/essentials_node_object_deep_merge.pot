# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_node_object_deep_merge.rst:33
# b66b55e485914d55bfe66249d7cec485
msgid "About Deep Merge"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:4
# c97e9042eb774e0ea81fd8a8e8597712
msgid "Attributes are typically stored in cookbooks and recipes, roles, and environments. These attributes are rolled-up to the node level during a |chef client| run. For example, a recipe can store attributes using a multi-level hash or array; a group of attributes for web servers might be:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:19
# b7d14d81a6474d89ad7b06a7c07c3d35
msgid "But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:34
# c01b44e5149b496aad4f84a168bef093
msgid "But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the |chef client| allows attributes to be layered across recipes and cookbooks, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be. For example, a role named ``baseline.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:53
# bac84c954ba34977b22e74f2fc9b3f7e
msgid "and then a role named ``web.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:69
# 607d8ce9a34149cfaedf5f59574aeebf
msgid "Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as  a hash or an array, the contents are merged. This is true even with different levels of precedence, such as default and override attributes. If the attribute is of a different data type, it is overwritten at higher levels of precedence."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:71
# cca4c7a65a1549668b15c1c3e2fe2086
msgid "For example, the ``web.rb`` references the ``baseline.rb`` role. The ``web.rb`` file only provides a value for one attribute: ``:startservers``. When the |chef client| compares these attributes, the deep merge feature will ensure that ``:startservers`` (and its value of ``30``) will be applied to any node for which the ``web.rb`` attribute structure should be applied."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:73
# e74fb82f64d042babcbcfa48dea454ec
msgid "This approach will allow a recipe like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:80
# e48861698ac94528a2fddcc04dce651e
msgid "and a ``run_list`` like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:89
# 5eabb9524dfb4061b8826f0a6b48fd1a
msgid "to produce results like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:103
# 92c183b8dfc04719a0252999d6418abb
msgid "Even though the ``web.rb`` file does not contain attributes and values for ``minspareservers``, ``maxspareservers``, ``serverlimit``, ``maxclients``, and ``maxrequestsperchild``, the deep merge capabilities pulled them in."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:37
# d16715aa930c403389b8162906a1a6db
msgid "The following sections show how the logic works for using deep merge to perform substitutions and additions of attributes."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:40
# 9326bc1511f847f7a15a57f6ab87fea5
msgid "Substitution"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:4
# b6db4fa809fd4686afe1b123978e7751
msgid "The following examples show how the logic works for substituting an existing string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:12
# 22ed3e7b00124050b7e4f80c0fd5f4ea
msgid "For substituting an existing boolean using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:20
# 1b6b4dc2ba1b4f0da95de939b16bb4d1
msgid "For substituting an array with a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:28
# d6604cc6436e4c5182df427a6c6ccb3d
msgid "When items cannot be merged through substitution, the original data is overwritten."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:44
# 8a45e4af7aca4772ba2dc18e8dc27b11
msgid "Addition"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:4
# 23008356aef24b57ab1a91499464f2ab
msgid "The following examples show how the logic works for adding a string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:12
# 2fa1b5dd9e664e07878e74fb8ca16ca8
msgid "For adding a string using an array::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:20
# 0ebdfa8fcc504589b635a27075c5fe70
msgid "For adding a string using a multi-level hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:28
# 9b010abaf1e345ffa0326a1cc9c338aa
msgid "For adding a string using a multi-level array::"
msgstr ""


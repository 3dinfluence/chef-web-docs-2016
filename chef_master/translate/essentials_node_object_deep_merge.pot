# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-20 09:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_node_object_deep_merge.rst:8
# 6f2f74863a1e44a1a7aabad3305e74ef
msgid "About Deep Merge"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:4
# 4c51b543048842fda31fd7ec38233e68
msgid "Attributes are typically stored in cookbooks and recipes, roles, and environments. These attributes are rolled-up to the node level during a |chef client| run. For example, a recipe can store attributes using a multi-level hash or array; a group of attributes for web servers might be:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:19
# fe8aa7a5fa3c432eabdea3a38fb9f53c
msgid "But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:34
# 62a703f6db8040549a7645bc96fcd165
msgid "But that is not very efficient, especially because most of them are identical. The deep merge capabilities of the |chef client| allows attributes to be layered across recipes and cookbooks, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be. For example, a role named ``baseline.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:53
# a92e4fdd50554b67a51924a37ed9cd05
msgid "and then a role named ``web.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:69
# efed4fdefcd7442f9229fa9cbb2cc634
msgid "Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as  a hash or an array, the contents are merged. This is true even with different levels of precedence, such as default and override attributes. If the attribute is of a different data type, it is overwritten at higher levels of precedence."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:71
# c40ea24ba27d4802b2282aa36eff5f9b
msgid "For example, the ``web.rb`` references the ``baseline.rb`` role. The ``web.rb`` file only provides a value for one attribute: ``:startservers``. When the |chef client| compares these attributes, the deep merge feature will ensure that ``:startservers`` (and its value of ``30``) will be applied to any node for which the ``web.rb`` attribute structure should be applied."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:73
# 48f3dd313c644227b9e2861d13b3c635
msgid "This approach will allow a recipe like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:80
# a38fcbfd009a48a6a484d6a052601b31
msgid "and a ``run_list`` like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:89
# 9daf989d0b324ce2965f1b507658a441
msgid "to produce results like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:103
# 1655729ad7a9440b897baea5ba5fc786
msgid "Even though the ``web.rb`` file does not contain attributes and values for ``minspareservers``, ``maxspareservers``, ``serverlimit``, ``maxclients``, and ``maxrequestsperchild``, the deep merge capabilities pulled them in."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:12
# e5b1b5c9b0e449e58a84d0129733a5eb
msgid "The following sections show how the logic works for using deep merge to perform substitutions and additions of attributes."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:15
# c8fbe38c4fb64155acae7b364ff0699d
msgid "Substitution"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:4
# 0edbcebac4a740efbaed45afda30b8bf
msgid "The following examples show how the logic works for substituting an existing string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:12
# aa1c44c83ba8471db0a0716dbf7973fd
msgid "For substituting an existing boolean using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:20
# db719664d5784ce39205b863c10248eb
msgid "For substituting an array with a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:28
# 47a5a6a672d84d0cba55d90ebe047fd6
msgid "When items cannot be merged through substitution, the original data is overwritten."
msgstr ""

#: ../source/essentials_node_object_deep_merge.rst:19
# f90aef78485a462d9eed2f5cc59dee80
msgid "Addition"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:4
# 3ba8a3f1db8e4111b9c2dce901d3817b
msgid "The following examples show how the logic works for adding a string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:12
# a5885deeb87349e1bc12d1471e5bc023
msgid "For adding a string using an array::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:20
# d00c4265e3c0441d9cde3e614c4f99b8
msgid "For adding a string using a multi-level hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:28
# 1cd35b6feb624b4b9a4e3d1fe2eefea2
msgid "For adding a string using a multi-level array::"
msgstr ""


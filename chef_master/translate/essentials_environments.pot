# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-31 17:02\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:33
# 97f02279505948ab98f36edabe1e43bf
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 2888d97feeb645ea857039933bdefde2
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:38
# 8e25fcd97c1240e4ae9e2bd2ed841259
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# c3f20ed873f54a22ad8da88b3e9274dd
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:42
# 5c25aae6ba72411982da1750d7d01bcb
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# 84a07f63059a43c4938ea99a83f19f3b
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# a92866d9b1e94efbbf8e9a43da2f59db
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:45
# 1e1e0035953a4ffe9de8f34ebd7ce0fc
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:48
# 80dbed950a3a463ab70f3109232cca7b
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 2c48031b86c5446fa739c9cf022c49de
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# fd4100d2da5b4cc6bc94665cfb5a68b0
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:31
# 1f59e6d9caf54483b7efc1436bd544e0
# 31016bf70c6f45cc8cfa25e28f0de5c5
# 5c9de4b6486146efad95be6b9a602fe2
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 0985d9e723ae41ff9726c28f3ed1d503
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# f15d14e6f3d241f98e1e51166f05a83f
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 0945d7f51cd046e6a13e64aef50eb907
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# ed44d7470887412a9151c48337663250
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:52
# 11ffa7e2307844a0ab2847ce8b5b54bb
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 330223fa7fc740138a5769b795cdfe06
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:56
# fb30d2c64ceb4e2497d56faef4cb62fe
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# c309baf5d55344da88ea39c2116f311b
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 8395283e0e594d75893527f6205ba49a
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 5bc2c4ce108f4da68543be38094f8091
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 5e4824460d59458082e037d49e8f56a2
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 4ebf8fdd53ce4018b86f188e189e003a
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# e254f572fdc144bfb87a11184ff1cda2
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# fe01e4d569c243a0944ad0d98d06c3cb
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# ccab6ea58adc490f97e5f05fdb9f20a7
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 624ebacb2e1d4f7481474efb3eec3bc3
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 0b0572e26e894ecab079fd3469ad64b5
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 87dc95a5829748ca989ce1a0fcdc7aa8
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 446018b27ae24e14baef45f9424fb059
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# ebc7081e82504cad96fe6f419d31d6c2
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 3bc789266b8a4b9eb8f82b5c155d9b32
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 643b09bc7ba0474c9c9d0a0eac78ac2c
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# cc7e1f3f609f419c8828e9ad5176da0f
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# a0232bc25434468d9bd7768f52fc65e8
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 43b1a856507847ce82b0911c1b82c522
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# d6800732463a4440b6ea5a4cc82f40ba
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 0d1ad603577c47788ca1b687af6a9ed0
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:60
# 5092717fcb254ecc90aaff13779e90f8
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# b2b8686298e94215af943506cbdd9014
msgid "Environment data is stored in two formats: as a |ruby| DSL and as |json| data."
msgstr ""

#: ../source/essentials_environments.rst:64
# 3d362bcedf3a40f09a2d2e8773aff1d0
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# c7095e41a8af4a449c2cc5716fa303bd
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# bd2728e0d96f491682879f7f05165c32
msgid "Domain-specific |ruby| attributes for environments include the following:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:30
# 0782c5fe77d941e4991e971f6403b22f
# 89de167764da450896a82283aaa03079
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 6da26f8779fd4eb7b19b3e8604ff1330
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# df63fc8512c541229f62c855e5fa0de5
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# b2df6953c467474f964cd889f753389d
# 7152552ca9f64dac9f77ca82b9f52fef
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# de26fc1d61644322a24655be13b99806
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 01e9339f918b462e8024cc2ece73b1af
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 87bd091a72f548159a71871c87e7e1f0
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 885ed40d629c41b6b752f560b0484d7a
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 036570c95036430793b2b705ce514b8f
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 5b07a8654b2146679f472a9c1501e770
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 1d556471d3eb4026a1d955f533990087
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# d7647d3c7bbd49979074c45837f1e4cd
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# 17f96093b0624fa9ae7c87627c3b04c6
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# dff754c8001f405b951ee6df33b6253d
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 0002e6329432490da70f637e36eea62c
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# a0198f60113f4dcca25def776caede76
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 7f74b00d6c56467c89f90ee384c3b718
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then create it.) Each |ruby| file should have the .rb suffix. The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 46c5460700a846e29c8932ff9bf313d1
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# c52c118c15944f5a8aad43862e004630
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# a7a9440d7d9543e491ca44e8178b20e3
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# 294f4f4ea1c14a6c978e156dc439c9e9
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# 5303932230574790becb56858ddc637b
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:70
# a200bab91ef24155a94a0b6ba44a8a4d
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# 8a94677ac457456eb79783fb6bc65971
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:24
# 63cbc79d748a4338b98fcb6a40c535e1
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:32
# 0f5a61d1cfad488cace99536b9004fd7
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:33
# c367ae23fc454989afb398d4cd30d9dd
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 175a45b7f66b48528c4dbd23bf17f0bc
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 6719520b523f45019531ef9a0356bacd
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:74
# cb24125c777043e18ae330e78f3d76fb
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# ec36e00bff9442f3b96f1ef7405e59c9
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 73be47d113ea4e3193ffda1e1ff2ce85
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# bf0436f442c14bf294eaf960787efaa0
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# e876e8f5b2884502bb9ee42db0d371ac
msgid "Using |knife|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 1023735e8f07465791249507dcde7c56
# 0d3f99aca09846eeb649d098f0045d63
msgid "Using the |chef manager| (in |chef hosted|, |chef private|, or the open source |chef server|)."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# f46a754b0f0f435f86e687c15429c616
msgid "Using the |chef server| REST API."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# c2679eb8a4b5461b881afcd6953df015
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:78
# ac51c5f8f43140b4902c3f61790edfb8
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# c591fa340bf54f0190e67de2380897bd
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 1f7122677ef049979ab1c855c81ee27a
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# d13eebe2ec5c47d8848ad3d0e3b36919
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 29e7bcdc1f1044c99054d33c6df7af99
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 1ff15098f240425c81fc051d727d0973
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:82
# 555bbbe7910d404a9ab392fc769a94d0
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# a1115f34ba1d4480a4679d0833ad3be9
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 7d89dc72255447829ae263956c99c35c
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 5729f608d33f46fdb1e47ece6f179b44
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# fe1fa8f93238447299e9abbe3a88b9a3
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:86
# 9272b68919c945af96c663e5a4100360
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 1a26fb67c4d04b2887f6eeec9080fd60
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:90
# ff0bf749fd0a446fa43cdf8fb80501bd
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# a2270edffea54c8583a3d633982812b2
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# c55aedcc3d574861be5663d750177726
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# c9e09e234e2b48189900eff5e5f5292c
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# bac3a6b07bb649868795aee491a39d1f
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# 1340d740318a4af789771c909037be60
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:94
# b0d9a83a76e44f79ba7cce7d38c7975c
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# 89888e00412c440babf92a6e276c7d7d
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# efc79ecda85d4312a4c150b353fa5fae
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# 002206e4ccda4de1a316304e113afd5f
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:98
# 274508c4d2d746278a118e3b6f0f49c2
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 78e245902cec4a3880ff3812385d7e3a
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:102
# 552662712f7c4f81a9b946f0418781ff
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# d9032e5ed2bc41fb8b8770e83e491ab8
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 50ce501f9c1640e4958bad7a998e1d02
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-06 00:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:8
# 37aaf637fd204ab89694a9a70e363261
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# bb90b77436e64ef087ee23e4efd3d835
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:13
# 9464ce62ccf64c2dac41614522ec2216
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 8faa072101a54589ba4ac3979c19d45f
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:17
# aedfff9ab2124a578a36232b6cfa52f2
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# 300bea1169e0419fb300761346fe93a0
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 7786fc0e91954fd1a12a74129ca0788a
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:20
# 8c36a7d0f21c4548a9ff01c38a1247b1
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:23
# 47edcf105df14282bb0e515bae90424a
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# aae84a4c0ed047d6a75c15b21d94b037
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# ac6ded3da3d648998907e8f02faea6fe
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# 996acb86ee1a4807815b28ab9c286f71
# c8ba4b94c04f486daefdabc2a70dc609
# 3e8ac939180c4ac794cc40243dbd742d
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# f12c329fe1b64bc0a55d0cb4acf4a723
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 54c79ea779ac4de8bae0d94e181881a5
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 9ad961f828ea4feb8259dfadab7469ce
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 604c7fe46a2f418eae6a87cfda413a2d
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:27
# e45f313307d146e89094db20b7f8190d
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 4730c73729ed4393aa1d2e52f480ae1c
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:31
# cc324dcaaf15435e89347b27fff8be90
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# c8fef587ff954658b6db15fde9e13621
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# b76821cedecd4988a659264872e922b7
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 59f5fad2b0a04f7fa9e8a243e0c5c54c
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 66e036bc914a49ff93529fad2c4f91fe
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# b09c6e0fc6824ae5bba05bcbdd494dba
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 56ce420ef125427a9e5c1467b2e0237a
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 362c36523c5b4f5ba4c07f7e432bc26f
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 5c7f08506ad24a33b4c465c2161e5966
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 708e1bd5c65a4c4496349659f26aa4f1
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 9154a335ab2e4ad7b641460e8445d835
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 33691db556d547b6861fb2a4f0fed8b9
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# e09317d704014bf689e8e18679faeb0f
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# c8097308377f45a38f958e6a84665abd
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# ea81ccb8d2904239b34ce8d469e5ee90
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# f6d0531e949a42968aca2b27764fada7
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 3ba1f038003248fc924352bbb936060a
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 27012f5d55cf4339a4bbe4b8cffc180d
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 1a6d80fd17aa403280e587d74855df42
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 0fcd189e8c5340dba488b95c97300b90
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# a835023858be43f7b0c07f145c8baeb1
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:35
# f52b21d486a04fc19e59e9092bd06810
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 448352b8f7234bf989eb945f57b317a2
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/essentials_environments.rst:39
# 397b0d4372394c84994f23a9fa0474ce
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 6b22f79e8a5d45768e289e3089a05f17
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# 9d54e9e3f3b74f2a809fe58b5a37898f
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# f6358911cdea4567bfb26aff619a2b8c
# c5d607d86ddf4465bfd7a56efbd04eff
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 13275db2f29446c0a73fcab89c27fcf2
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 5f5d017edb0f4eb99e792b5b6c692640
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 8227f180c97e49ea862d4092b8690f84
# 3b14e93db4a74decb4368551f4f6cb01
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 0128e5d628e24c5f9939b617dbae8941
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 7b3372bd3144497189819780426913af
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# f311eab7dd5e4360a8c063aa11a30b49
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# de12ed37eda64f178a63f1a023f49204
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 2155441651c84e438fbe92c03ab2f51e
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 65f76d778de2466b82c313c4eda231ee
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 917e19fdcf1943feaee00148d61f32d6
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# 64648bac2d544d3d9b7f31c8db01089e
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# 78cd4b3fe4004f4db042066509627553
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 1c8be288b74648008bdf45d3a60efa50
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 3d3ddc09878d4b7c91881f598758cf23
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# 3ff5be1e5dc84728ad76ab9fe93a4f8e
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 495e9dff2ba74716bf5461394f5ed8ef
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 5e42bf2ac5804f5eaac5d448af2fbaf8
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# 052e546e19ae44e89d53817a2252c379
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# 34cd32477e5641e08f5c5717978a5c7c
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# 325d8406c4634bca9ab138f3b32f8736
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# ff0cf2808f6f49af8f2d9e82a2637191
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:45
# 96e2aba1db2a48cd991cd4f202079830
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# d4c843b7cced4c4ca92940c3b454c98d
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# 3f9b89f8acd54d499e33dd84f37f84fd
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 11e8122adbdb45638838a49630dd0ebd
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# ae8e55a74f5e488c82dbe544ed145e10
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# 72128e7d100f4aa09cf5ab323b2a9b1f
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 22d0626e08e44a188b834602cb9d9c6b
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:49
# 432365fab11642c49b59cf6a1b3d0a66
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 0c18ea2eed434785be7b6508053a998c
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# e0b51d7d6a9342abbdfe24fb5d63c5b3
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 977db47356ec40b69ae286a1232a1756
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 7b2e5de8013748b796a32b19190e1e6a
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# c615fac02f6f47ee86ef2422edeca4e9
# f27172e73b8042598a697e62abee78c1
msgid "Using the |chef manager| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 8f75029675a24018911dbf8b1cb6e6b4
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 68c22654454943a996b9361a3d87fc76
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:53
# ee1e416442e545afb01293fb7a71b66a
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# fedae4af44c14c74a7262094a0ab5c2a
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 75b3e2c373ce482b8e7275189044dd54
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 345cb49a2b28413391b0288076ed0b4a
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 2f37cd10aabc4cdcb15710ea90eaacc1
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 3219164143fb439d899091a87c409a6e
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:57
# eaa23bb4a4de4d90a35e791651ab914e
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 37d0c91e60444aea859155ea2dcd62a4
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# f6ad3ee54a064c09854f3bd651122707
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# aab9098cb66b433da473da7e55a8a3fe
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# b50dd301e4d24b61bbe3febfdaff34a8
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:61
# dd7295aa82f14e2eb752563902ff0730
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 17bd42c7bb624758a41f602cb121e5c8
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:65
# 99b2cbbd6f064e22b5aaae9cfd1fc4ea
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 72815807135043b8a0373595b2a21091
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 7151eb63f6254e8eb6dafe32ee283ea4
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# 4a631c5605ba4c6da7f72890fe733b03
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 3515305b46b240748a04194b80d1dd99
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# bb2fad5a4fcd4a69b8ae49e25d432134
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:69
# 671c3983b8304292b3c62cae4f5053ce
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# a4adb4e67f424ea1981d6b6ab3caec18
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# 1da6f1babcf34dfa990f900c30452686
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# 972f8756b8f44f29b5e593a3078fd27b
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:73
# 383d52c7b619407592e93ae4bf72eb3e
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 8fb68a5ad5cc4fbc940f3935e8d90266
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:77
# 1101287511c64bd8a14cf71e03e39fe9
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 2915bfd64e8948ac9d2736778721defe
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 11a460159d4f4d00882b6d2c268df3fd
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


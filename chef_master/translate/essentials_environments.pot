# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 23:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:8
# 71b3c492ab6e43db9849973fbe89234a
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 81e8fe6035994886ab358040bff27968
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:13
# 4a60aaea44d64145809338cd2a7e3a58
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# e7823a0455a64ad48e5a5ee34160e7fb
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:17
# c9a9956214b74516b2c03d1201c2d79f
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# d646dc710b6c4d27bdf80bde3a8ebcc5
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 05f7170edfcc43d5aeb4aa09fe2bb339
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:20
# 920b446a3ab14329a48993cfbd06e102
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:23
# 5ed2a940158f409b9790a614ab73bca8
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 17d47f4727394462b1ab76b4a560f36c
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 0a2b7dc61e1d432c8bd714283cf21267
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# b446516d6e2145e19b01af45971c1e3d
# 193030318e264c469d6a05bde2a162b9
# 3f19db31d2994106b49d7b0fba1c69a4
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 0b63dcbc28744738abb909ccc47a3b4a
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# d2dc75d263cb45adaec593f2f861d19e
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 3be3c9d1198f4cfb9028628f5d54eaf5
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 2b4e1e866af34dbc94492e5fadae1b28
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:27
# 617801962f7c4940bf92e193041b8cab
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 63165f39a7f04733ab8cdff144337e4a
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:31
# b88ade8d18324924a3e6594f809a2b62
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# d5c893419f2b419b9db9382fd0159a72
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 1ed4c71c68784c0fa3a6090cbe7df3ab
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 961f69fb5cf5441682670aaf41f186e0
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 036e60534f3b45efa7cd6277e22b0ffb
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# cae4f891f4ab4784ac15015ede7bf362
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 03271dd6b2b1428e9d76fa914cee60af
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 098eea6001e943e7a6f2b0a2336da408
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 2f624bb415ac434cabd52fde2497e2bd
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# aaddc082fbd247a68d943df4890424c8
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# b1a85c0f0dcb4d6a8ab115d899f08b71
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 9af5b299b1b84b8e8c1067a34c564d78
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 21aaf91065c14e06bc7bab0631999e80
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# c12bed9e7390417ebacb7ea5a928138d
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 2d89ec922f374082b43fe68f509f7cda
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 28d98388f9c145a08d17e929bf85c3d6
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# a58c323291f74907a714a38109830daf
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 7f1cc79a0b984ca9b67f872990d326ad
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 57c3d4bfefdf4f839774ed5660760521
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# d1694f22cc254f6c86be09f94bf29e59
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 9c24167743b44868a38daa63e756dcdf
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:35
# b1ccfc1a13954657be2223efc4a51e3c
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 07fac5afa87644059a346102a8b99818
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/essentials_environments.rst:39
# 194029d1673d4f91b34cbc25eec3b0cf
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# c19c1e221ae14b94bc498c6fb2e8a665
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# d116680f6aa5460397f326dd411cb35c
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# 5e4741218d964bebad1c000025710e6a
# 98aaec7659f34fc5b10819f94897f440
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# a2af367d8c6348c7b91a4528ee7f9ad5
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 938dd5ce3b3e46819156d7e96be09241
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# ec59bda9ffef4b1ead5a52b653ac0ffc
# 0db28076f2264ce4bbd9e69927ff4b43
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 1e3eda4cf919439d9c34a35a15e48ad4
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 6304a5b5a84f45fe9d86e9812a4ee4e4
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 3a66c48b49954c2088ac89b74ec91eb9
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# f08c473575f24997ad637c1d60d9acac
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 8895fa541da040279cad6cab95b1fc43
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 68d356bf459749f8b9caac9d2e57c2bd
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 913417e671b74e9b8671dfa2bec1f933
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# 2f4ee21f5d8f4596a87e59366cf2d995
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# 6421720d81aa45eb8b80817f930efc9b
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 6f1f1c64cff44cb69dcde2ba1db5d7d1
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 86be6522ee4045049fa69524f3b3698c
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# 8d4476e06d6342e28306aa893336003b
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 7a643036cd3a4608b10fc4110f59f0d1
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 73740f77124a48359415f92ab6c9c4e4
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# fa805deb112a4efc934b800de305a903
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# ecf3d273963247be97e756aa8c8ac24d
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# a5f777f8bcda4865b18808f9e537cbd8
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# 0fb039d073164b558a3d95beabf0a181
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:45
# f385124159b743a0a0f5ac3de3aa1c96
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# ba537fb28a794e8cabf12421fe88837b
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# dbbf678453af499b999614f008252112
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# ee5fc7e291164681a52698307c6a2350
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# f1b9e556bf9845ee873f3bfbf48ffb9f
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# e819b88e767b49e3a3426f8980a75a9b
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 0c39ba5c39c24e049f756bc671b4a5dc
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:49
# 07eb324b365c42019162608def32c12e
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 767170c6168e4844ab719bb7ac6cd8c7
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# ee4aef62c0c947dca4e8b0245bf477de
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 21e50d11644d4ba8a88f5945e5d7ebdd
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# ac2eeced50854bc5ab6c09b5688369f0
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 88f411b31ba74fd1a500c9ea96f5447e
# b491aceee1c64a9d806d0484e6e1ef8a
msgid "Using the |chef manager| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 0d7886eed2dd4416ae124fcc9af07d3a
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# a9bbcceee081499ea2ba1b4c709ba3ce
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:53
# df6803af7e994bd4a94fa23f80c41616
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# aa3a035d440d4a32908762ec30a4c928
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 50ea6d4afb86412bbea9949e410369a0
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# d73fc486432c447ebae8c3e0cf9e308b
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 78e8bf7483624d9d899053d832b39eb6
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# e8cf035bc4124967ac35d8630b2e456b
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:57
# 7f20508098aa48d48063fe964180cd75
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 896c1cf9b34b4c2dad2a9590b54e532d
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# eca5320da852409ead43e037935d66af
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 741ab4af6f8c41ff8ac7f04c4b73fcaa
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 154dc5466ca84d07801eca2eaa7ad00b
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:61
# 8fbfb71175bf4d589c07d0d88815ae55
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 631a54262d03483f8348adf66b23620a
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:65
# a3a8859886364a8b93167d8ebc9c9401
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 6de554ea3d1f45308fa297cf2e6b5e87
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 1f3b1a0c2b884b998b40e2c450b4cd80
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# d074b30e3a254ab5bbb966d821b19399
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# e06d2c7ed71f424684a7fbc245566c2d
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# f3e42b522aaf4f7db9d05cfd01e0ecdc
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:69
# 632b8b7546f3416a99912de9c2696b50
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# 8cd7404221bd4a3482551574fb1d7c2c
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# 945ad49539cf42aaabdb9b5e0d6959c3
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# 23750004d3364d0e8a05513e5cec4de2
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:73
# 7b801d7d98434cd59fed1c398fd03982
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 207574f6377544ca86fae19e299bd88b
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:77
# ebb21351bd8443b7a37b2ea784f34f6b
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# d440dd07fdf14475ab46a726f0fc5c0f
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 6af17fcb9fd54128bd3f1b3bd461f465
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


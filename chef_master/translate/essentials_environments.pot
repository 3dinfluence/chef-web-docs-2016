# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 18:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:8
# cd423d04ad1b40b9a41ed590681c08ac
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 4d523456c6004444ae60ffecb379679a
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:13
# 19896843352c4e3891bd4daed6e40f2f
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# e7d611e0cec64e71bbb2777c21f8c763
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:17
# 32e5c18e670d4122b0f08fe64efa317a
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# f132d112770f492eb955e34c78fdca9f
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 8a4a8d3744294763af2e6c786d975900
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:20
# 06a25d346f364c4b8c7a1f46f8839043
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:23
# 91790763ac624d04a427b1828810ec9f
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# dbbb79820dbe4a5e92e5e9c5f0bdcd56
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# c5eac9fddac44e7c9ad6ab0a77132ba0
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# 03387c56a32046f2bcea00dc87b24490
# d5bea8cbf42a46e1af568d2e70c9ee9c
# 54dd95b2db8a4ab1a3c2cb3eaade0a3b
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 72413168874f47f5a6958577d298fd04
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 7f8d67006b4b47d4b7ff2ede48f0b1ab
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 68d267d27daa4ba0b1015f624acc00f7
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 15e98480f19b4c80a2099f1b797e389b
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:27
# 54e6d1f38e9644f7a25a4bd43f43317d
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# b7247e29e9b74e2c9cb5108d4057d281
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:31
# 2ea2f34bd9c84fadb0ddd6def8ea72fb
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 9e9b5e1d575d4b72bd3428a7270a3d93
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 001068cdc0db47d08c163c36e2e6c150
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# adfc03fa014f42afae2881aadc4c8c59
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# c4cb5018f61744f585c8d38bea01ccfb
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 6e630cdcf5e3473bbdbc08fae313416d
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 8c189b43c67745e2a853756f03d1c62d
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# bfd55f37f79549c0b27cf9818acc4178
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 9f8cc068c1144c1fba4fde19aefe412d
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 52a6b588877b4220a814f2cdd0d6bd0e
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# b8b3ff40dfea41bfa3b651a3159ff942
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 6b86ffc9abb145929caa65c532ebf566
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# e3a415cd5241473db11ff469f5141101
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# fc5359d11aae495e8f9b0bc48b4371ad
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 3f53b42342b642fe980b79bb79b83250
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# d882a2b98925421fa3e0ddb934f70f76
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 9cb230b2bcd346f49e08df6234d82b99
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 33450fa73b50434680cf201ee765c910
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 747c42d98fb44ccc8c7491ce7faf9f84
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 04f0ff6ae17846e8bae965cbee703846
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 17b570d068a0493e8716c47bf9091dc7
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:35
# 54d07948e3e24eab8724fe2a39725dbf
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# def25aa07f2545379d645fb772a3f781
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/essentials_environments.rst:39
# ae6982c1608542cfb5f789eb3ff974bc
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 0254936426f144afb7ce19bb841a7384
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# 8899b611c3714189a493be7a7109319f
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# 1a23da75632d47e4a3fbfb7b880e47a5
# edbce30e1ac443d99fa9d9b076b4f4fd
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# f6e437bf015c47a58b6bfc8981720d5e
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# a1786217fa2a425180e825ef5e298156
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 9153f9506871416f94b847daed69ba29
# 82fdecf451124decb7def945b9e0fcae
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# da34bf7f693241468398e7845afe634a
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# d44bdedbe5424396aa7969f49cc3944d
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 8dd82f9465a741aea195a1b83565bd92
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 3c873a6459b14bd0b692235ad127bf95
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 3b341a5ef1fd44b29ec7f631162736bb
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 04e3b122bc8543c1ae188c802961c4c3
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 1dc63a9423d44a1db7119a3a24481c1a
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# 7513fc30132245b394e40f2b4dacf30b
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# d74b3e9ebd92438ebb020b5778a19749
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 967a9d72fa144c4c91c627e74474a8d0
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 26fc4891bf154f90bfddbd21c6b426b5
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# 3f7add38ad6447c9a299e415471c4e74
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 91b22992762f4fd1b405a3b15d14c749
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# a4dee753c54f45cf8ada4bf00f1aa758
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# d2ac6143a4684f77b60ca6ffb416c14c
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# 346efc630df94ed68968b9c1802f8d86
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# 00b288080c794a5c9060995eb0d641e4
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# 17220466d299432d94e3e84aea3a62a2
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:45
# f747fe6797c446318573f8303ad5d150
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# 2988475509ca4a81b2d50a9bb0774816
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# 9ecb07468c724ab0b67b735ac7d4be28
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# c231fb56f7944910813072305dc8b927
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 59153e0e733e45528522cd0ab76de7cf
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# 58103be059a94bf0b1af3ff3e6e39cb5
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 8415daddd1a043928b1e8fca209ad271
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:49
# e4a59fb3562c42e7acc790d898b4ca17
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 7970a27a95d640d796a3cc5227d36581
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# b17c0c1668f74a61aa6428a05d77f2ea
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 5fc200ce86914651a3a516aa81cfd1be
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 678e0db8dc6445fb9066b1477e0cd590
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 29030795556a46178b247b8853ccde54
# d5a628851d174d049a9a55cfe65ae97f
msgid "Using the |chef manager| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# c6aa134922c846ef80fde40989214a46
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# cdb8fd4c257d4b01bce3a7a576dbf29f
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:53
# 48e4a36e3cd547e88c3bc0ed0f5340e8
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 1177221d9f45426e9d9b50b8a9f86645
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 46ef727b24944599baaa703a07a9bc31
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 8850344e59674e1a813f39de949d098a
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# adf64b62c468450a8d05b78916ce592b
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 0bfd943cdceb4bbe9c3aa45fb33d42b0
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:57
# 4fdf526569944655b558b516448dcc0f
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# d660c1397621483eb3762742452a165f
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# a62f6ceff3594c7dadfe2db52a2956f4
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 19da658a2d6245d7ae92c50cdd6b29c8
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 1223b9de6e6b4a95952c09bd20ec7c4d
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:61
# 195cffbad7d14649ae85dfb40bc9bc3f
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# e2220ab852db4ac881b7d82822ddacf4
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:65
# 64258852181d4575a2764a9cdea062ca
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# d31a3be97d764c4c8cd8e3ec7305717b
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 487fc2d70f9948a182829383a5f155c6
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# ce904358bba040cc99f8679c4c71ff2f
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 86d4bb5a33d24f968c8cf4cb78236737
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# bc790db780d845d98ffb0681b7adc97f
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:69
# 43d700e871064acb983624de525c4639
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# ddcd2379705b453f824e7483e639dfe8
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# dc48b5744bfc4c41a89652936f41840f
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# b43fdccfa76241ad9bb700fc6e8db090
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:73
# 169ac7831b42490abf788aa929a4cb6c
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 0a877f09ade2438a97e4d72fe3df5f80
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:77
# e8eb19ff61a046f797d6b5f14099eab1
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 9c2d6030fa584364b64f053809c5d518
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 37b44f65057b4f5db6eb54bb2197a484
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-07 21:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:8
# e56bc166f6d84b87a7ce2eee2544f352
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 00518d84826a41eb9227b72bed358585
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:13
# 9fd49c08b57c4774b608cccc4342665a
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 6072e4bcafeb484898ae2bccb84e35a6
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:17
# 4c630e72ae184d4bb83ac8c3f90902a3
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# bc41b07bbe28491e8d9a836e2e0eb9bb
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 66b6a115535b4bceb303d61ab6f43f97
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:20
# 994558684f474e03a6e2c8a0f772412f
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:23
# 38fd4c1ce25748719afd01977390970e
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 10d7465095ea445f944e0cad9630d8fd
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# cabadeae5acb4b418234de5d369c135b
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# c3652ea8284b4d30a30838f597ccb913
# 6284da9afc6443aeb0ed083a3641fbc6
# 3a721b55d2d8419ab5e239e4fedbd73d
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# dab50b6ddd3d4f1ebf491e5fb50e82e3
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 271691c37c4a40259e9f561ac53545a8
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# d232c0b4d0b64ee1966a50c25d4b655c
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 45e62b49ac134ca695cd00ad73c77f12
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:27
# 18fba97f90874b0c927d5f96512815af
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# d66cfe2e55c446719a8b4208df64603e
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:31
# d71862019d16466c9dd4491d0696002c
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# a7a6b9709c0245af96bde540ca584cab
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# b507e87c20424411b435af317c925cfb
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 5fe2eb4e26ce4c5bb017762190c9b3a8
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 51789accd77744d1b25d15f858c7ba66
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 4c5dd4fa059a4057a4d00be68fe5c72b
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 507e76fafcb247a28e1a141dcfc4e447
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# db80a27d3b9d42e38d45cd16c336ac76
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 81737b7d04894ceda23c875a7ada04f1
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# e12cb53f4a704fa08d0f948bac7e325b
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 28bf9d27b7414ce7b14a190b9d2a7220
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 65c1b1f43ccd4389a8471b1b97de563b
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 451dfb93d5a3461e8fa14cbf935cb0eb
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# c39b0b08a95648f1bfb3e58cd8577b60
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# abdb3b815baf4ba1baf63c987b104611
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# f2c1385e4f4947f48bf8595b6f52baff
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 4116baa113974d0f914b7239bad6ebbb
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 459a49144b244615ba34c1f98de716a8
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 3f2bf3550cf244e383a3a9cb1eafeb44
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# c90dbf2bf7cd414bbb69caaa87611311
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 4515087cbdd34a579714f03518f3f200
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:35
# bc0a0578b307474a93658b555ac0b27f
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# ee6f0b4bfbae4073a8257d07efc0b7f6
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/essentials_environments.rst:39
# 0afbbfbc835948d4be7d7e8928716d8b
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 1d0d9e7d15704098a712ca168182c37d
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# a42e72f00fe74693abd12b0debfefc04
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# 9626459583174ddfa6657d1f36617085
# 5e671e62bffc40c59225b09a2b9ac797
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 8c0e3f58ca8442a0b10dae7382b1d925
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 55053b01357b498293d123f8d9952041
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# d5d7b07ecbff4da895873a084a8758c7
# 3b588e70f4c943e8b40b88e22608833d
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 82d9dc10b08141f0a14a79f08012a006
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 6b30c4bf750148c28e1cd1ef2e84c0b3
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 88e6a59be61f437ab25f1c83105e0985
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 58f0536d3fb9401e8cb325d44feb5916
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 6521dff8204145c884707c8a15222468
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 479f476082b9449b82ad837d3e5b61c8
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 0b55b7a3aa7048d18a4a67fa368ff7df
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# af1dc23d21394d4b81b3fc6999a897c4
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# 89cd5308ac4e4923ac44e26c3b81770f
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 562d691a684c431cab986722d39e333a
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 3d620f405e8c43268ed8bdaacaa28e3f
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# 21907b3b20154f42b4115f546841f561
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# e6a74150c7ad4478934f357c2c0607ed
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 13adc561734b4d42af41f00e9c00503e
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# f5348d7f1e0d45ed817c3e97de9e9298
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# 74c0bf4572054f71b47dcb2fcafb9660
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# 5471a174a3b249bb955cb63092330c60
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# 2db8a300255d4b90a6613ce6519a0ce1
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:45
# be441d24354748aaaf739a130ea14758
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# 54cf610ac04a407498f232cba8fc5d68
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# 63afabc0b67b433fa4e66c542b271bee
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# d159ed10114c4a9a9c861e822c9f6189
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 241a951e38454c028b4140b4542a9680
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# 9d8188ceaa5f45ddadc8398b978c85a5
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# 658a1f6585d242dd9d985f4c2d4e81cf
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:49
# f21575ffdeb945deb283a4b11bdf3fd9
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# b9fc9159b409461882b0a5feffc37848
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 2c9f891e870240cc991dd30b9d3bf4fa
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 2b7e185cb52e4928827b5ef9278efad3
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 4b7d83e9e3144ec1a7da4a432dbae8e8
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# fdeb589a90b44e1e9cb7de6cb4a85ca2
# 23f34cd928c947a595a16ac763736a81
msgid "Using the |chef manager| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 7b410ef8147540cf80e9c4ed12e9c461
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 4c0917f9829e4fa7ba554a891976d300
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:53
# 1acda379348446c6a1ab06eb40589db6
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# d3a92500325b4e23be9e2c71ab1a1bd1
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 8f85c9ed5b14403f8b0b651a56df3787
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 5bcefdfb8b274d6eb3b588a8326998c3
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# e81e26523f3d440ea65ab3bf92f8cf80
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 7c9c0bae80104e7881545f516b19bb00
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:57
# 2a6d64a4fb4448168c05eeb085f986fa
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 6efc36d0bbb642c2a3bdec10eccbbe05
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 9f5bf0edb09f4d2caba09f74b6d5927b
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 552bda0452104962a85840e78103ade1
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# acadf5109fe042afaa61639ec5e324c3
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:61
# c008be78d3d14d69b4132db3ac2819cb
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 78e2dc06eb6147489edeb14d421f531e
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:65
# e15a706d953346c9bd0044dd2c075008
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 69c5db78e16143f2a8cfe9f796fa6021
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# b6fdc5c9f2154b899e9f65d482ac80c0
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# 5e85ecdd956a4083a68b86a4e8a5f09a
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 0bbfa3e785184bc89451f4637559025a
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# af4e69d797bf42d9b9b12b924a68b0f0
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:69
# d6df1e0c8e92414fb576fbdc9781a53a
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# 6c9f86d217434d8c844ace2ea64b125e
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# 32bb926479d242b59b58679355a303dc
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# 27c94a46b03b4c628e757710521366bf
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:73
# d14719ca2ef847b19e19fe29b8bf7fb5
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 34ef82e92682417e8b8abbdc2c31265c
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:77
# ef7b27a6d2174758868b946f8ef39ef0
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# b26d3d3e26ca4ed392e45b663ddad427
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 39c92e74e2f8472699257859d1e6310a
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-23 18:13\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:8
# d97e66186fd74e15b2bd93239a6ca1b3
msgid "About Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 1b4716b70b2c42438c4c817ee5019f1f
msgid "An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|. Every organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created to reflect each organization's patterns and workflow. For example, creating ``production``, ``staging``, ``testing``, and ``development`` environments. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:13
# 3923ebd34a244ab983d90ed776ad2324
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 2642135eb70a43baada7353bf01a38b5
msgid "Every organization must have at least one environment. Every organization starts out with a single environment that is named ``_default``, which ensures that at least one environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:17
# 64707907b44c4b0cbf51dc57d061c322
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# 70822bb129964df385179d4d2ffed15b
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef client| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, the |chef client| will apply those new settings and values during the |chef client| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# caca5dd8986e4e31aec812fb61c55420
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a ``normal`` attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:20
# 35124cdb7eb0432da7e795e2c929eaac
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/essentials_environments.rst:23
# 7c294e0b171e4bfeb015fe67e2bccdec
msgid "Attribute Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 3dd0d18e335647fd80224bdc0370c3c4
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 2dfeec0ffc7e4a1d941132c29420459b
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:11
#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:33
# 537e5cf73b9240eea9a5fb6de46afc36
# 1891db9c0eee4ef78378a4b7cfef513a
# 602e2a32fac8495693b8b4aae100907f
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 161e79f759a54a269acd8261129d98a1
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 3bcbe5e2b3d7412da6a3b4654417bb0d
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 2c1cac70730548e3a6fe8764c73799a5
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 1536d2b04e6946f7afd493271c3f2fb4
msgid "|attribute_type override|"
msgstr ""

#: ../source/essentials_environments.rst:27
# bc28db06b37e45fc91f3c5b6105f6759
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# c257eff139c64f3c9044a3dab1ac9ae7
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/essentials_environments.rst:31
# 975300371b5d4d32b3d93a8cffbc3124
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 768030aa354a472da39a2aa0ef14107f
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# c9f6b45afc9d433c8eb89fbb449a0205
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 55e3ddb3a9a546d2a5207cb327057491
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 24dd5e88014d41ddb9c45e8f80c095b4
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# ae7b7f3b9c8c4a67a5285fd21dcaa034
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# b67036ee68e747b89b2b64655f0445c7
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# d173078d99284a2c842a2e48ed430682
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 8d70e68664da41efb2f9ba078c2a3153
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# e9400e8079814e64bad26773ba8fdec0
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# ebc30e50036940de956e7427601f8641
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 43d5e4c83c904f8780b2b8a4e6cba215
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 0c9038f5b23245feb6914560df8822b8
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# fe3e7943ca314e71850dc4ea2a2c7550
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 31ae797e96dd4bd4879b75795e1498d2
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 2e763c8e7a824deab5833c8b73da13ad
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# c0c2ded267bf43b58643bd974ffc3f5b
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 4dab89f6633b4877a01ad6ad80aae134
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# fa3404c400bb4f829891e3fff9d3706a
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 6daa3a0e8ea344b6b1ea34799121b816
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 206af5b266504ae0b0ae53b4f2e0c695
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/essentials_environments.rst:35
# e1ec4c8f2f734ab987a3fb904d91fac0
msgid "Environment Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 5699cb798b254c39b38f3cefc538d12d
msgid "Environment data may be stored in two formats: as |ruby| (i.e. a file that ends with ``.rb``) or as |json| (i.e. a file that ends with ``.json``)."
msgstr ""

#: ../source/essentials_environments.rst:39
# c96588aca47d4feca153687582f4329f
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# f767fc6091d24c14bad5badbbc659e61
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# ebfc08f0b70048ab96401909c77ae650
msgid "Each environment is defined as a |ruby| file (i.e. a file that ends with ``.rb``). Each environment file should contain the following domain-specific attributes:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:32
# 46d60fdccfac48399f8da0f857de3a1d
# 00c256d02e1f42f0b163afa3c72377ce
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 42c2f24235bb4ba2b182639e415a895c
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 3ae38a6014a64132ad3f494e1b583a15
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 3bdd0d4099654886a86cda3a03c0eb02
# 29812dea02314e3f903a0fcc7247bdf9
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 74a154a317aa4f478f2099fb970a9667
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# f60e01d0dd804b158fc83bb0e62e384f
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 69d50a8a273d4716ac403f4b700cdca2
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 6e5aee86a7394d69b9ed4600c9e44acc
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# d2bc6a263f1041578e689fcb731a724d
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 740465350556444ba8ad59b40184e6d6
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# bf03936d875346f78018429ec78ee5a6
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# ea7b6a5bc9964f4ea3f6b3570aaf5510
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:50
# b8d915603b804405a0e0cd4cfb04cec4
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:51
# 104eaff6a455407f8436ed42aed83f1c
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:56
# 76b7198d97cc4c57a0fe90855b0462c4
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:64
# ae9a011982de4ed986c0bb3ab15fa580
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:75
# 37a39a8f6c6746989a2ecad60f4b9026
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef repo|. (If the |chef repo| does not have this subdirectory, then it should be created.) The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:85
# 4b8cdc47cc234c7781d78b4b36a1ead2
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the |cookbook couchdb| cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:94
# 8e89fcd453294ac1b4a0ad34fbe87d08
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:100
# 06b348c158ff4544938ac7253732d3dc
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:109
# e7b7909b6c954290b1aabe704e8c462f
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:115
# 140195edfe414e46b2f03a95aa7ef56c
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:45
# 4dd8b8c13d6c46e5a3bd9e9655bc24ba
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# ad75c626098a44a3ba2a42958c99a275
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization, just formatted as |json|. When an environment is defined as |json| the file that contains that data must be defined as a file that ends with ``.json``. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:26
# 6f973623cd624e54abb418c9ea8c8e93
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 88d3874fe74445fba51e73296a8c2a36
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# e30dcda769e94ceaa41ded85a5be573c
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:36
# d4179a8909ac4f459ee7944101101198
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:37
# fb4365a4c8e4417a8c2aa42f448d6ffd
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:49
# d54ca39f4d84411bacc755e014b41e7e
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 8325113278164afe82e178c307eab8de
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 99b09da685674f479a93c8c5b53de6af
msgid "Creating a |ruby| file in the environments sub-directory of the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 066892a4d72142298bbbe3e8c55b9f3b
msgid "Creating a |json| file directly in the |chef repo| and then pushing it to the |chef server|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 5c2eba17a560439c99c09eff0abb7400
msgid "Using |knife|"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 8ec11dbb4f1f4617bdc559f98aa7d165
# ea07feba648445668780f5a7c01cddcc
msgid "Using the |chef manager| web user interface"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 045c66e3282a4df18f931074a2acd72a
msgid "Using the |chef server| REST API"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 798da4be9dae4acaa800f172c9a07fbc
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:53
# 20efbbf3040844c185ffe96028c31d0a
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 65a675c4d92e4a9fb4c0cfc3201e59ee
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 5325134793124a298b2ffa6948c591f3
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# fd4442b189f64cd9b27a6cbfa82ca587
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server| using the ``knife environments from file`` subcommand. This approach allows environment data to be dynamically generated. (The ``knife environments from file`` subcommand will not work unless these files are defined in their proper format, i.e. a |ruby| file that ends with ``.rb`` and a |json| file that ends with ``.json``.)"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 6aca167fe04d4e5195d9211511954710
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 562e8300e8084024948cbcecdb4f5d79
msgid "The settings for environments can be modified and environments can be integrated into the larger infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:57
# 50ef0e3e2de94ce8b491ad56e8707edf
msgid "Save in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 06d485bf3a6f4348b408ec13969709ae
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 0d1eab427d004acb8c9a5a9082d0fd57
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 79acc6ff5e524923b51447b9a3611574
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 9c366fad3ee940f48729fa0e927dc519
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:61
# 6cf1d7a7ebb94364ba1b7909fcc65937
msgid "Override Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 50764d1707644ea39c7b2606785642b8
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:65
# b4ee39b8237040439ea34459bcd780dd
msgid "Set for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# e06ba461b5654f8ebd9177a7ee237157
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 10211572b07b46fcbdc63d83f4790084
msgid "By editing the ``chef_environment`` directly using |knife| or a management console"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# c49ac573851e40988b32dfb4bbdff618
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to bootstrap the changes to the specified environment"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# a6cfbcb527534224b6c983dc08922dd4
msgid "By setting the ``environment`` configuration entry in the |client rb| file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# d47fec3a39e748b4adb84914c643601c
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:69
# 7085f1ad62c04841a8bbb472e9764757
msgid "Set using |chef solo|"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:5
# ca1a2fdd2e7448e195bc57c3857f9144
msgid "An environment is defined using |json| or the |ruby| DSL. |chef solo| will look for environments in ``/var/chef/environments``, but this location can be modified by changing the setting for ``environment_path`` in |solo rb|. For example, the following setting in |solo rb|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:11
# 1ed009cdce0a4901ad5f11a4cccc4a7d
msgid "Environment data looks like the following in |json|:"
msgstr ""

#: ../../includes_chef_solo/includes_chef_solo_environments.rst:33
# ea2523976b1d45f281cbc04afdb81e5b
msgid "and like the following in the |ruby| DSL:"
msgstr ""

#: ../source/essentials_environments.rst:73
# aafab395dbc0400c9ed3ce4842766ca1
msgid "Move Nodes"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 58776150d3514289b4861b72f3a6cf67
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the |subcommand knife exec| sub-command. For example::"
msgstr ""

#: ../source/essentials_environments.rst:77
# 9d90aa4589a34bc5ae19736e30e294c2
msgid "Search Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 4dc3e4235d834cbdbd065404190d3223
msgid "When searching, an environment is an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 05d0a3f8378b4e5d9e57de9eb743c676
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


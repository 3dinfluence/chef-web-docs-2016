# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:8
# 38dafba10fe04001b28481d9c53ab212
msgid "directory"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_generic.rst:5
# 2e02eba6bc234495b51980859d46fdd6
msgid "A `resource <http://docs.opscode.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory.rst:4
# 92c4771a6ff9400a9f1f7938b3a1b9a2
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:15
# 7ccde638e99b4aa4b34440c298e3fe37
msgid "Syntax"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:4
# 014167cd4bc3406a98b9ae946deeed1f
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:14
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 21d7669f743642be973108e7077ce99d
# b036665c2b684a1fa894ef54d31abf9e
msgid "where"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:16
# 370c9894be894cf6bbc934e2da43a924
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:17
# e65159c25b1b492a8a842b515ec3b0d7
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:18
# f2c3c30e3605472ca79f03ed9c9c497d
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:19
# 772e7409f2844d058086aebafce165fa
msgid "``:action`` is the step that the resource will ask the provider to take during the |chef client| run"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:21
# 7fbe0954a13d4e71b140934b15d038d5
msgid "The following is an example of how the |resource directory| resource can work when used in a recipe:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_syntax.rst:32
# 7c536a9388f44689a3b3469bfb93bf02
msgid "Also, a variable can be used to define the directory, and then that variable can be used within the recipe itself:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:19
# 71b1b3b26fb34681ab63b27971525647
msgid "Actions"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:4
# ecbb83255e7e44faa3009d1db13200de
msgid "This resource has the following actions:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:10
# 1f129c7538284013a05b76541e021dff
msgid "Action"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:11
#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:11
#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 3594ff07100942e6a5919bf0bebe5f94
# a172f7563d724c54aa6aa6b0cc141995
# 4414dd5ee4be40e7a8ee1a526e53b2e8
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:12
# 3508d7f1f66a491d96008be544299659
msgid "``:create``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:13
# 7e191c45081648a0b17c5aa03cdcef91
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:14
# fdc5a9e4cfd0426da3596b465a9730ce
msgid "``:delete``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_actions.rst:15
# 94f4afc39c984eb7871bcdf5deb4857c
msgid "|resource action delete directory|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:23
# c0dca8c093cd455f9b8de54028888f5e
msgid "Attributes"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:4
# aa3aa77059ff4ec1baf5c60d40302344
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:10
# f808201771d44503bc72261efe432958
msgid "Attribute"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:12
# f55e9858ee3845d0921e620fe1da5bb3
msgid "``group``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:13
# 12886b6820c84b929aaa492d52fd3f36
msgid "|windows group_identifier|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:14
# 89c41f65ea8c4b5e812045b3e3a95937
msgid "``inherits``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:15
# 3eced466aa7c43e39986f0367fa167a1
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:16
# 998880a810bf45ca939479811a5e555d
msgid "``mode``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:17
# 740f7f48ef0845778fed989a770ccec6
msgid "|mode resource_directory|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:19
# a32f2a2c728449b1930789fa83bbbe2f
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:21
# 871899bf21cf4c2a9e981db6d8123a96
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:23
# cb3957fe49b74b83adc5d6cd62a62502
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:24
# b2b4ea2b80ef4e819ef3c402681e671d
msgid "``owner``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:25
# 635f8188cda54558b931e4e68b6204cf
msgid "|owner windows security|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:26
# 030319c93636480f99255d5212441062
msgid "``path``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:27
# b827ff2911f04f15a2f34f6e11848a0b
msgid "|path directory| Default value: the ``name`` of the resource block (see Syntax section above)."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:28
# 57a664ef05504e67a4de98a51e7c9999
msgid "``provider``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:29
# c41a7117704e4566bc4acf09de7cfcd3
msgid "Optional. |provider resource_parameter|"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:30
# 1989f9ebbf284053a361b3d48713464b
msgid "``recursive``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:31
# 8812ab68e16f494d9a79b6daa4e72af0
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:32
# 2fb8a107cec04ca18c2000d64cde1673
msgid "``rights``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_attributes.rst:33
# 32bd1e267dfc41cb84a5e21ecea3278b
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:27
# d6132115163843ef9b1c6995c7803e5e
msgid "Recursive Directories"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:5
# cf9649da87414bdbbb4afabb02b659e2
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:7
# 4e4533c8ed534724bfafeed2e357016c
msgid "A directory structure::"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:13
# 273fd5542b3e4a1ea4ba1f7f7e2f0304
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:24
# 18266cde8c674fc99a1b292ca9a8f430
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:36
# 2a547b4eed4d4af5b987159f2d969d5a
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:38
# 2559d1f37a9646f6b063355f4c163458
msgid "A similar approach is required when changing the access permissions to directory objects, the owner of a file, or the group associated with a directory object. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_recursive.rst:53
# 4c9dd62df77746469b29418eac2b5a8f
msgid "Though it should be noted that the previous example isn't a great approach when there are a large number of actions that will take place. Consider using the |resource execute| resource and/or a definition to handle use cases that need to support a large number of recursive actions."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:31
# 46d947adc3164367a106e218b61093c0
msgid "Windows File Security"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security.rst:4
# bd7b3177fe704eefbb72d9b8b0e6feba
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:34
# 868068b791b04341a8bbac68dcbb8bd5
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 3bf09512e4aa45adbe1d924f8c815ce8
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 1d53ac9c16e2473588f42beb0e2e087d
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# dc96bcfd74c0438594163e5ce5d9b6db
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 3d78c325cb5c46d0a1ebf9b5357b7373
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# ad66ae5d24244c9a9c27c0569b7e2f11
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 14c977edfbff45c8ab866e541873b2a6
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 0c96c2bfef5341b488c3990e29009bec
msgid "Option Type"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 76326693d5644fefb7c82e4cbf56967f
msgid "``:applies_to_children``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 01e4f77025574824a5c84447f2a76f00
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# fe48090e442c4c96b23b32cb72aa0dba
msgid "``:applies_to_self``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 3e77ff15842242138c570700f6d4a944
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# a4dcd6378f3e4126a5b279440883b731
msgid "``:one_level_deep``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 882b67a1de4d4db8a4898a7b52b2df17
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# d2a2ee1bfb894ceda34e3e1154da860e
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../../desktop/chef-docs/step_resource/step_resource_directory_create_in_windows.rst:13
# 8250a9d1bb264614837669e1c8379efd
# 67710ea3518646198d1deac33b34d0db
msgid "or:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 1346d7c7919b40b1a3beea76c61ee895
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# e23276dd39a543958acccadeb8b8ac93
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 03033891afb44817a3dc9231a2eaf9df
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 114697fd60d14119a6a5a952f1a67858
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 8352d08c68894774bcb24b33da230467
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:38
# 9ba5e16914754c3db14408cbb07ffa8b
msgid "**Inheritance**"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 4f38850940e549ac9685aa5e00e1ca92
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 958bb8c1c7fa4c1dac5fa933165dbac8
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# b38c222a85ae4042a068735494b84a7a
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 3538538af65646a3957655a0bfbc42a8
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# b66a97936df6412984184f3377333c15
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# 18a6e8d633f9465d9ac7bed17e4e60d5
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 1111b78eca1f445bba076da782461033
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:43
# bba662c097824ce1b00fac46aa20d2d3
msgid "Providers"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:4
# bf9ea2975c7b41fb838bc71561cb8fde
msgid "The following providers are available. Use the short name to call the provider from a recipe:"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:10
# 6338ad3a135e40bc8cb807f9ffcdf6a4
msgid "Long name"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:11
# a468414c78504d03a0d7316f110484c9
msgid "Short name"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:12
# 9976c9c5f76b48a993c1cf62ac79bef8
msgid "Notes"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:13
# 1c32fa3647374b47ace5da99eeda46ee
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:14
# a529c791ef7d430f8785765570151763
msgid "``directory``"
msgstr ""

#: ../../../desktop/chef-docs/includes_resources/includes_resource_directory_providers.rst:15
# 87c3fbd896d34bf09c19f0635052f3d8
msgid "The default provider for all platforms."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:47
# 8b740b51c6de425fa03fdc576a0b1624
msgid "Examples"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:48
# 0906e389675d44009e6fefd292f5fb16
msgid "|generic resource statement|"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:50
# 38bd0a4aa8a340c8a62058b94ca23a3e
msgid "**Create a directory**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:54
# 8e109db99a7c405ba34feac5134692de
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_directory_create_in_windows.rst:23
# ea4828fa607a4c599ce8e04da7c354c2
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:58
# e2bfe17be6b24d7f8cd53d17fe7d2aee
msgid "**Create a directory recursively**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:62
# 696539fcc4a341fbb434df69373ef8a6
msgid "**Delete a directory**"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:66
# fa977e4eafbd4e4c9821c9d570f4e5de
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# 08fc63d723e4400b88b08a133c27b003
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# ac002caf7fe24add8493fd4a34daec30
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:70
# ef44f9a88f5c4292be7b57567885953d
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# 852e8cb335a94d13868853a518462cac
msgid "The following example shows how permissions can be set for the \"/certificates\" directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as \"root\", and then read/write permissions are granted to the root."
msgstr ""

#: ../../../desktop/chef-docs/chef_master/source/resource_directory.rst:74
# 1eab7da8aad94a1394758f2c329e985b
msgid "**Reload the configuration**"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_ruby_block_reload_configuration.rst:3
# 53f4a611f76343ac984c844cc93dffe4
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_ruby_block_reload_configuration.rst:5
# 1a735692af1b48c8aec06675323562fe
msgid "using an ``if`` statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_ruby_block_reload_configuration.rst:6
# 43fb4315c07a4530bfa18f40e1be85b4
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../../desktop/chef-docs/step_resource/step_resource_ruby_block_reload_configuration.rst:7
# 020a7b19efa14df8868df4ef152c972c
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""


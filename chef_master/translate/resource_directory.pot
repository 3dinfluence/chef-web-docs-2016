# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 13:41-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_directory.rst:8
# a28c12d9fcdf447aa127451058891e16
msgid "directory"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 2c88aef610354dc89fddcecfef0befdb
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_directory.rst:4
# 5781239f4e094a0698ab8f7bd36c70b7
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../source/resource_directory.rst:15
# f5746e1fd569444191330c02b135163d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:4
# c170f48f237f4baea812f974cb7feab9
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 1a8b3d10406d46f195d3e71955a7c536
# f7c78627f82b494196c3e103d392da11
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:16
# 7040735a64f34f6d8305040860833e20
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:17
# 0708750dda404efd902e573e16089611
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:18
# 47b5325d868543dead575b155f73685e
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:19
# 5fd6f95b818341d2a8576542b768274a
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:21
# 6ca83b23b27c4ac09351162201faa2ed
msgid "For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:32
# 03ddb025a2a54b2f97dc58dbce74760f
msgid "A variable may be used to define a directory, and then again within the recipe itself:"
msgstr ""

#: ../source/resource_directory.rst:19
# 5e762766b3f04268a83565dcacee5699
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:4
# fdfdac8fda644f108dc4f60d54b803b3
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:10
# 881643bcaeda4718bf6b74aa3a828e6c
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:11
#: ../../includes_resources/includes_resource_directory_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 20308650c578429fa84cbb6ae782d821
# 782192aac2cd48c09012965614a0218c
# fdc32b886a1542c38ac82d7218ddec6a
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:12
# 79e91c2bfa5248c696f3a28a72099f16
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:13
# bf840987822f48f4928491648deb02ba
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:14
# c6ef4487e4c940b6a7549a3258624b72
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:15
# 384228a4689b49cbb2fb243601917641
msgid "|resource action delete directory|"
msgstr ""

#: ../source/resource_directory.rst:23
# 32a61c96cb634b158dc9699453bd0b64
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:4
# 3734351998474810b1572e5bc3a3a44c
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:10
# b4f20fd549844abd8a6ea07edb3561f4
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:12
# e24eeec6e769421db8e7d3eae6c2a0a9
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:13
# 3d691fa644734dac8da8283528488c87
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:14
# f2f6949a3990420f84afdce573973015
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:15
# 32ed395d8c5b4ab783b293fd3f50d319
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:16
# c6821fc930bd47ae8294d114d00dbec8
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:17
# dbc58bdb58bd49abb0d3cc5280338bc7
msgid "|mode resource_directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:19
# 957a27af32554545a1b260aa6d985641
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:21
# fb0a64fe5e83454da6e03fdc5d8ca034
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:23
# e9cea08a1b9148eb922bbb4c0236d19e
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:24
# 2bbb0cb525bb49ddaf6b576960965fb8
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:25
# 03a5e0574495475fbc1af41d781d2fbd
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:26
# 34c84c4fc9d34d05bb2e8a0a08cc515a
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:27
# f225908f0f2a4fd186cff607b41dda73
msgid "|path directory| |path_fully_qualified| Default value: the ``name`` of the resource block. (See \"Syntax\" section above for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:28
# 17affea62baf494099bad500c15833cd
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:29
# da2635be91ea4fa2a77fa0e32a366592
msgid "Optional. |provider resource_parameter| (See \"Providers\" section below for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:30
# 96701ba572c3449389c16e128653e6a3
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:31
# bc29fce55bca48eca20c3e39e9c0b5a6
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:32
# ab04daaac211418da53b9625357d2079
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:33
# ae41471e310f49caac94d62dae2fb0ec
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_directory.rst:27
# 3f0645baf04944a09c28d68d6cf19b19
msgid "Recursive Directories"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:5
# 0e08915241b24fb3a136314724ef624a
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:7
# 8c85ffe3f691475bbe6de1e5263f4686
msgid "A directory structure::"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:13
# 1f80747271994e85bf7ec51f8271c5ae
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:24
# 0a6578fb12c24eb8b9a307045214791d
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:36
# 79b88d901ffb433ab19da58eb9616284
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../source/resource_directory.rst:31
# 4f95e45b04fa4b7e9670021b2da045d3
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# dd21040f6cb9417caceb97f3000ba109
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_directory.rst:34
# b51a983795b84095a429155f9941e178
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# a93ff4d81b3c43dc879097beadef0c18
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 9b276b2024604c6f9970a6e899d8cc63
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 16ba4edbd2e349559d08394073ec9246
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# c204576e11654617b5d4c369c5049e87
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 0b93115c329547199886aae4a4b911c9
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# e65d1962ae5c4e5b92f98c123192ea9e
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# ea1a1010aea543009a7b2189ddf1aedf
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# a164abf3ffa042e4b663c8a73d6767eb
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 3b86721007364237bf27945a6eba4270
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 7dd6d566e06341bd96319a9aef298a0d
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# ac3d1d06b397405a9de63dd3741e3b8f
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# b51542b105594dc490ec02dd06a65d7b
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 4227dbdd5a814f74a4d3f65098adedb3
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 37397e53952347dc8d66dafc1fbcd636
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../step_resource/step_resource_directory_create_in_windows.rst:13
# 84a4b1302c7843a28c83b23727cf1196
# 881873004b57423e8ed50611af6aef85
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# c4b1f28022034338a526204155b8f03e
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# efb10976446f470690ba7f8f60d2f23c
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# d7af021355fa423db990b5159cb0e5cb
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 71930864cec0496b901ea9f562ca3a6c
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 1daaa70945a44fa684ecc8550f3008fe
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_directory.rst:38
# 314c0f0d559242b5a9c4b354de12a8b1
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 81386269a8d24b4898e5ee173347affd
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 90dbf042377547f9896445b8f7d121f0
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# c7466ef6b4ab43b191426bbef65d23ef
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# da560b7f4b1a46f5ba32e0207d561172
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 37141d0bda9546f78860a3543afa9dd0
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# b87aa91b63d849b18330b5917fe7c151
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# c494ad6dcf8c47bb91850aa91e59dcc0
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_directory.rst:43
# 8f62687bb4814c8e89e8fe54e29e10e8
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# f0b3a4f87b254dce9479a1503b5e5629
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 34144a6702f64f8196a1e86446e455c4
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# 130235be36ad461ebf78cac54c35f292
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# d7fe8c0f71f34759ba60a44f89a86eb4
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# 6997207327ba4596a3a423feb931fab1
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:4
# 74a9323357fc460196d809ee7096f1fa
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:10
# 91a8c6ef10614a9ea91d53c2a09a5893
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:11
# 0e69a3a172d34342bd8faeac27f98baf
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:12
# ff2108c9fabd4d2fa590f9bbff4ff173
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:13
# c68e88c966344af08415de4fb9687489
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:14
# c06d6e0b2ac14ea9b5ec78677b227af8
msgid "``directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:15
# 38bef4acab134166a838410aa93ecb01
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_directory.rst:51
# 3d771608ebc14ad6bc502bc96cc1a732
msgid "Examples"
msgstr ""

#: ../source/resource_directory.rst:52
# 99cffc59e51347c6a4071243cf388a5b
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_directory.rst:54
# 3ffa897766f444f1a427276aaa7e00f6
msgid "**Create a directory**"
msgstr ""

#: ../source/resource_directory.rst:58
# 3c3c1df776e64e7aa54476c8a229832b
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../step_resource/step_resource_directory_create_in_windows.rst:23
# afb4374171fe4378b6714fed00aea47b
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../source/resource_directory.rst:62
# d466392d89014333ba4470febd36e23a
msgid "**Create a directory recursively**"
msgstr ""

#: ../source/resource_directory.rst:66
# af6089c64dda403bbc515e1be90c45ef
msgid "**Delete a directory**"
msgstr ""

#: ../source/resource_directory.rst:70
# 455f6b16be7643b7ae9ebffccb52a7f6
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# 0662f50b9755413db9df1d3c1590b5e8
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# 653ef42025354664ba6c40011154d578
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../source/resource_directory.rst:74
# d81ad4d798d840ef8a1b3f15f065962d
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# dfba9982d38941119949d37ffd4d6690
msgid "The following example shows how permissions can be set for the ``/certificates`` directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as ``root``, and then read/write permissions are granted to the root."
msgstr ""

#: ../source/resource_directory.rst:78
# 874003d67f4647c3a91f0760e7ea0837
msgid "**Reload the configuration**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:3
# 6ce2eb8b20414196a40dad975cbbb5d3
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:5
# bb838eb44a8d4de6b8ecf4a3c89bfc80
msgid "using an if statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:6
# 98167712629a4bf598ab0ff096b34a5d
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:7
# 64b3b331c3304983947eb924038157aa
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""

#: ../source/resource_directory.rst:82
# d435168b2a0e438d836f71e3806de93e
msgid "**Manage dotfiles**"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:3
# 08e1183476a04cb1b4715830a46a3834
msgid "The following example shows using the |resource directory| and |resource cookbook_file| resources to manage dotfiles. The dotfiles are defined by a |json| data structure similar to:"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:22
# 3b00bb52aab9468f9a5fe224362643e2
msgid "and then the following resources manage the dotfiles:"
msgstr ""


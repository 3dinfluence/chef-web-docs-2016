# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_directory.rst:8
# 90d95e0ea66e44dda5c4140dd2d6d8dd
msgid "directory"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 43d48d3cfbe243959d5f9610c9aa76c9
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_directory.rst:4
# 11025d4448ca49cdbf78c85030665d32
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../source/resource_directory.rst:15
# 780e36c9c58b49a59bbe7f835e92ae37
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:4
# 9cbee60931f84f09ad5ed3f0466db2ef
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# d3428a9563264f2b9628dfe402a026d1
# ea332393836f4a30af8bed2e254685f3
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:16
# dd3ee3edeabf41b2bb6305af3bcf9a5a
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:17
# cdfdd787c4964e1687b0020a33e588bb
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:18
# 83536433182e4edeb5ae27dd71b7df02
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:19
# c985dc4fa9014af3afa244d2a7e14ee2
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:21
# cde54f17404040b0a31cd63867bf8559
msgid "For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:32
# ac128a67186442969b0ce2b7ee4412d2
msgid "A variable may be used to define a directory, and then again within the recipe itself:"
msgstr ""

#: ../source/resource_directory.rst:19
# f1196d782f15431b9e3033961f5464da
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:4
# 6799f6fd6c704ae9ac2fe8b2ae390c44
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:10
# ff06261c855f4d70b7023bb8e6e15cc8
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:11
#: ../../includes_resources/includes_resource_directory_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# c601fcf9611445dba7581febece51aaa
# f9ceafcd0772410d96ce36965968d10c
# 5a30530143e04c07920cb39aea674497
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:12
# 98217eec4ea24482930b5e5cdcb63e6b
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:13
# dd6cf790861647f7ae775a5401142c5c
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:14
# 679db5d37cb04ace9667ed0329a51cc6
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:15
# be961684fcab4538a3326c05d734844d
msgid "|resource action delete directory|"
msgstr ""

#: ../source/resource_directory.rst:23
# 3add8ff616224d28bff19520367a0d11
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:4
# 75cf2533f7f841f3b50eec219e355b40
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:10
# 3568e37f9c1f4b458c4b9c6a740012e5
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:12
# 8a49e1d1bd21461b964c3f26fd7cdce3
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:13
# 81e99f9179c9462b8295fa2c67a377d7
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:14
# 03a317acea394906ab110850b77649d5
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:15
# 835c164ee12b4a13860dbe4fae89fff7
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:16
# db340691f56946dfaccaba4d4d4eb1fb
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:17
# e71811e53f8d40b8b3a8019e6a59703d
msgid "|mode resource_directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:19
# eece9a871cc14f97ab8d3f18d0f3bfed
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:21
# 94b3f7b08a76481f84b784826b131cf8
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:23
# 863d6eccdf70436a9701528034f5f95a
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:24
# 0665791791f647b5a27c7df671e0f0fa
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:25
# 6e1c9128187a4ebca1c6380f6f5ba22d
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:26
# 17eef9521dc2444cab4b210f244e484f
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:27
# 9fc6dc793e2b4116a13bb8c9139cec2d
msgid "|path directory| |path_fully_qualified| Default value: the ``name`` of the resource block. (See \"Syntax\" section above for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:28
# 347357d327674aa2bea9f1106f13fd2a
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:29
# 6676a2618c0e4bb0bf5f8003fba5bde2
msgid "Optional. |provider resource_parameter| (See \"Providers\" section below for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:30
# 7fd022f67b89486d806851a28fa10afa
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:31
# 3094ede61dfa4fa5b94b26e9d27c1316
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:32
# bcc66f50062f43edb419bfc378769b51
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:33
# ae2acba4fe5749768d9d5e71245bba20
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_directory.rst:27
# 5581cb13bf034c918eb37c36fbbab3ec
msgid "Recursive Directories"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:5
# 3dfe99538de946d1b8ed22ab9d619e44
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:7
# 195215b9049547dda3ceb1663384de68
msgid "A directory structure::"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:13
# 6555cc1a291d44c7bbfed89ee3eeb93e
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:24
# d1908ae356864610929f0290103cf2d7
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:36
# 34a3dfa7958b4ffd98c6e530de90a62d
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../source/resource_directory.rst:31
# 1372dd48536e43788cc500d8d2ca40af
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 545bac853e6b4633aee646a4023e616a
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_directory.rst:34
# 38adcbf0505d49979996ea0014698486
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 8c2edea973f7473ab1ebd2198f408c13
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 7e477596f7b545c19cb47501fc683b9c
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 970fd268dd4e4828b6be2653989349b0
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 7af6f0e4642a4512857b212d94fa4266
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 0c82c12a03aa4ccdad930031a53e07ec
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# e156d5d92e614bd282b1eb59680ecfd6
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# fdcd7be35e5d404a8ea812f114f54537
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 8f80ed3a21214b9ca45b9ade541acc6b
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 9b2e2b881de8424fa2cb371656434f29
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 5bcd802a1ae3439e876cb9b4acb0678e
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 64da4807b5a84893ab3016122bbbcbee
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# bf6d7c460e514d46b9dd10248872d858
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 4b157a2ead0b4ad1b7138795e295ada8
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 82e8d29340954b55915bdb893b92f3fc
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../step_resource/step_resource_directory_create_in_windows.rst:13
# 3a942690e5df49f995c4d91b7f927b41
# 36507bc05a224750b0d864abfd4666b7
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 4556cfdc4994415e8696533ef8027d37
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 2964dcf5e74143f587b3d21e4767556d
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# f7003d73cd6b42d08fb59746551321a5
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# caedd31bfdfe4a4fb305e3355f214e73
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# f5838586044a47a19448b195191f2ae8
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_directory.rst:38
# 37ad772369b94cd88cd9f246310f7669
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 8be2b35f8cf74ed58f96b3a3de2687f8
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 61dea23f37874f3389e498c486887b24
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# c993aa28b86644e998d259177f2dd6b3
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 52d84594d0fb4aeb942f355cfcdaefa9
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# eeb50beaf68e45e4bba27177635e0c65
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# a6cdd8b9f2f84c27ac16e115ed542030
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 5a97ba80d12a4ba189151ff8939d71de
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_directory.rst:43
# 5c5ab2b1e87b46ff91e70cfe94962770
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 9d2bf813bfc0497290ecb02c24834720
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 83bddc91fc944697b23185969710b918
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# cce55dc194624a29b7d5b7d4d37babc7
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 114a5ca153b5433da12536313bed5d9b
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# c64c65782c38465aa40a990c104a2f38
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:4
# ecf67846032c40d18c5ec1da7b47b81d
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:10
# 664a157f6f5a42eea4e765851874706b
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:11
# 37b73c56f9ec4ffc8a5d42af93ce9df2
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:12
# 706375c70a1048ac84c968591430c4c1
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:13
# ea21c8dcadff4946bc63d0459e923bae
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:14
# 0c772fd672144fb1bd3c5993b9c2b948
msgid "``directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:15
# b869b4b6acce414f864a4c7d3cdc10f3
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_directory.rst:51
# 5f249fbcac7a4eedbde01b3d5b2eaddd
msgid "Examples"
msgstr ""

#: ../source/resource_directory.rst:52
# 6318f1a2fd2d4198b531ad1af69aa8f6
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_directory.rst:54
# 8484fc7de8ad4cb3af77d0c51ee2a8a9
msgid "**Create a directory**"
msgstr ""

#: ../source/resource_directory.rst:58
# 56eea39124024a2f98b2e16ed3b1052a
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../step_resource/step_resource_directory_create_in_windows.rst:23
# 44888d113c8d479bb170722ab88f37a0
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../source/resource_directory.rst:62
# 8760943f4a1a4197bf73b9ea0858b7b5
msgid "**Create a directory recursively**"
msgstr ""

#: ../source/resource_directory.rst:66
# ecbbe0a255914a259fcf8f52105b2959
msgid "**Delete a directory**"
msgstr ""

#: ../source/resource_directory.rst:70
# 4988ac8a85304e9d97e4a577fc578567
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# f52c52b9f2204438bbf282494d8c9500
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# 8c8336d467da4948ada2d6f32445a367
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../source/resource_directory.rst:74
# 75d292efcedf400f8e8cf36e8edbc93d
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# 6323049140aa4f8881cdf363f7282ad6
msgid "The following example shows how permissions can be set for the ``/certificates`` directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as ``root``, and then read/write permissions are granted to the root."
msgstr ""

#: ../source/resource_directory.rst:78
# 52c6f4d594ca40d5995dfe6065a24f5d
msgid "**Reload the configuration**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:3
# 33da220b29724d068ed7882e40a33df3
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:5
# 2e05e75cae684aff817d1739936661ea
msgid "using an if statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:6
# 78f0321826284490a57ace29112a18e3
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:7
# 10cbc2ab7d764287b5e506e17ccccac6
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""

#: ../source/resource_directory.rst:82
# 01eab88bd0914cfa99a61aebd9b5e95b
msgid "**Manage dotfiles**"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:3
# d494baad648242a5a1a0250f76912faa
msgid "The following example shows using the |resource directory| and |resource cookbook_file| resources to manage dotfiles. The dotfiles are defined by a |json| data structure similar to:"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:22
# b81fd9ea049243b88cbf91ccaa1b2ac3
msgid "and then the following resources manage the dotfiles:"
msgstr ""


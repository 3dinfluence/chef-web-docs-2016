# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 10:22-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_directory.rst:8
# 7569cd4a64e04f81ad8b591c5209f1b4
msgid "directory"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 4f4c9a5af07b48e2b4c0b7f4b7201f15
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_directory.rst:4
# ca7736601f3c4fd989f388ca116432f2
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../source/resource_directory.rst:15
# cb2f34ac9964473b82b2b5853b97eec0
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:4
# c72a6ab7f85849ce84748a463843c76e
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# d33ca8230acd4806997e0fe170181c29
# 002948a17e1546cf869d266299c3b3b0
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:16
# bb29c644d7f340b78bc1307a95fa15a7
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:17
# c4c9cdc07bf6417a83e9f68eddf79542
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:18
# 37f69e4b587b408d961ec30e789fb0ae
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:19
# d73d72befde14d929244f4254d4b6c84
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:21
# f399259355e24809a801c330f0a7699e
msgid "For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:32
# 9a98f287a94c42f6bf1d56adf2a46a3e
msgid "A variable may be used to define a directory, and then again within the recipe itself:"
msgstr ""

#: ../source/resource_directory.rst:19
# d8f04025f0e74335b183bffb7d29bb19
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:4
# 4158a63f2ccc41e9a4969d19f074b0b1
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:10
# 483abd87001c4426b90f1bc8c3cd3b87
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:11
#: ../../includes_resources/includes_resource_directory_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# e12b3e56265940bb84c90207e87d246e
# 5cab1550277b4a2b9da4f87839811d15
# 4b9bb279de3a4bb89d93fe422c0fc75f
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:12
# cac45683c8324bcdb741fdba31f08718
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:13
# 6e873a3ce746479f9687bf12ff44451c
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:14
# fc68d1d55bb04887994e5b995a37acbd
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:15
# 6060207106b14a818c0b5374b931248c
msgid "|resource action delete directory|"
msgstr ""

#: ../source/resource_directory.rst:23
# 8e3259b127b64a0e9231e6ce2067be1e
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:4
# 91b3174759af4b69a61bd50d4d07d2ca
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:10
# 199df0f0f5e043e29bcb4f1623f4a10e
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:12
# d2a8ba887adc4e13b835fe1d9851d667
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:13
# f9dbfc40fb6b49cba4508e05fd1b1f5b
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:14
# 5583915a32f746238048083bd070afb7
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:15
# 10efaa52e613485585f0e6a316b519f9
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:16
# b3213dfe89c34faa828960ddf90bf88a
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:17
# e0e5864a11f547daae4a92564d0a5dcf
msgid "|mode resource_directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:19
# bd335022eae84fc29a36a2984302f793
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:21
# a26fe532860d4d1e88c949ef1851a347
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:23
# d11340c2a8694ad8a5d966c5a97ecf19
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:24
# e7b2e1922a5d44ad9ccc039a5bcc36b9
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:25
# 917304d62db049e89b030bce29f3fa8b
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:26
# e866060d0f05441a921d134231751eaf
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:27
# fb14d43c8a154595bc90fcf1aa3e6961
msgid "|path directory| |path_fully_qualified| Default value: the ``name`` of the resource block. (See \"Syntax\" section above for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:28
# 708d935218c042618663557ced4f0128
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:29
# c6d9ed40a82e466cb0e41784b8c5417b
msgid "Optional. |provider resource_parameter| (See \"Providers\" section below for more information.)"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:30
# e32ede8f22e942e194b74e37bda7b40f
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:31
# 437883421f614147acdcba48c76b0dc0
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:32
# 74edf5967fe94ec4bc03f512585e3ef0
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:33
# 77c2750ebf8e4873ab09e1a95f1932c3
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_directory.rst:27
# 0d3d459f595f4134a49d74416f184760
msgid "Recursive Directories"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:5
# 878f1aa29d1349f8bd64a3cc7f6b6392
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:7
# 8a140359f294479bb37964b81e5ac8f5
msgid "A directory structure::"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:13
# f110713d48b24181abaa6693f04c59a3
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:24
# 7eb1f776a135426ca88a8b1b60c05e42
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:36
# ce52d75ee9814ba590e9e5b09a6f352f
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../source/resource_directory.rst:31
# 0a75588c6a534fb6a638747ffcff1f07
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 3e81d9a9620a4994ba0c6902e4e0b961
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_directory.rst:34
# a7754fbd22a6497f88753e1b4789bb92
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# d9271ad08af140f594e67d6d0739c8ba
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# ac674e15ca354fb999d540001c597e6d
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 89ce6a61001945d1ab96ad488fa9b063
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 7b5a770ce1544b01a5142204f45324a3
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# ef03b76935d447daad76bcbd5fff8588
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 6f7dabab7f7a47258b6097c0a4ea0a3d
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 9db29ae768da400995da0982ef7225ba
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# c3181197550041528acdcd6be896682d
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 8d17a5a9437045a18ffd57b7796482b9
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 7f8e448f3b894b38bf4e9cbd5b1fbc2f
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 4330e5f341ab4807b17f36d97f98667e
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# c1057e82bae345ac853abc676fef4aeb
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# 754318ae05b846bcb6625dc8f75c3171
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# 7967775270664e1e944b216af510581c
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../step_resource/step_resource_directory_create_in_windows.rst:13
# 26b67afdd8cf43c5ad8d5092cdfb0d3f
# 7399e86565f04f709b383e4b47569375
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 1c5660db11874c13a4e5c8d031275077
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 1ee67feab4b641f88c786de51a088efa
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 45469edab4ed434baac88f632dca4d12
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# ff6e0e57c4634213bd7a4eae995c7419
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 2e59bac942424ba0929265db849e86fc
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_directory.rst:38
# ab76bca70ad0404f821dc6f5f6b5fd64
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 5af0ba82d5ad4c7db68d94b01a6fbd26
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# b870d3b4dc6d452185bfd5ce692b173a
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 0d6253360fb54fb7ae1dd2e21e634bc1
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# b66f07dcebc54bf6a53a151669b1291a
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# c24728eb376c4d1d8d60dcf7f4f72ca8
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# c94adef4f279495b9a19389d666eb781
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 063034aad7f643018d361212d66691bc
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_directory.rst:43
# aae4e96b99e74c70a6715cc95c05be1b
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 495c796c47f14a7ea7673e30839e57ec
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 8111d55bea6b473e8171b2f4670f4889
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# f98a4ec5f8ca4490860811fa425bad54
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 4263f2655f88445694708ae974f432cf
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# f961f1a0bf854581b4fda5658a47d034
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:4
# b758355115164c8c9be1f18369b5f1e1
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:10
# 90c2aa3d10d3490089ee867b9c89cbb1
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:11
# ae3a7fa2e35c4b52973257f75c60d649
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:12
# 417dd3a0b51041859b4446600632e63c
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:13
# 4ad6444bfc57442894de54a326d2f25b
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:14
# 33ee8e438e91402bb3788452da69a341
msgid "``directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:15
# c09f229d38d64e7ba6f08f104ca3bb12
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_directory.rst:51
# 75c0a4c4c477422e93b8f60bf2151a48
msgid "Examples"
msgstr ""

#: ../source/resource_directory.rst:52
# 41860ad402e840ecbcf7d899e2bc7bec
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_directory.rst:54
# 79bb2fbd9d064574a163545fa4cb5859
msgid "**Create a directory**"
msgstr ""

#: ../source/resource_directory.rst:58
# 4d85fcdf16144a3ebc40079f1590556d
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../step_resource/step_resource_directory_create_in_windows.rst:23
# 1387ade62e124fee94a2e224b46b28fb
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../source/resource_directory.rst:62
# 08ec231590f145678759bddc15b1b22d
msgid "**Create a directory recursively**"
msgstr ""

#: ../source/resource_directory.rst:66
# d4d31003b49c416ab72a5534535e4d81
msgid "**Delete a directory**"
msgstr ""

#: ../source/resource_directory.rst:70
# ff4bbab8b82c4d76b56d89610c635fcb
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# 37b93be939044e7bb8fffcc7cd5edc9d
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# 73b98807054541a39618e78bde3460f9
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../source/resource_directory.rst:74
# 534c207d41a645eebee4e2aa2e9c497b
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# cea408a6c62446db90eb357781930906
msgid "The following example shows how permissions can be set for the ``/certificates`` directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as ``root``, and then read/write permissions are granted to the root."
msgstr ""

#: ../source/resource_directory.rst:78
# 423e1cb65bb148f4b1c321e988985a9d
msgid "**Reload the configuration**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:3
# dc48157247304e94b849b76929679d69
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:5
# dd299b55b81c48e78fe5950bc0eb5a2d
msgid "using an if statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:6
# 89efc39c951d4e4f91e9ac1673f7d7db
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:7
# f3485afe23274d4f8726f3f4a17c13ce
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""

#: ../source/resource_directory.rst:82
# cf437acbfa314550a8226e05972dbd80
msgid "**Manage dotfiles**"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:3
# 0ada9b08bf064b5c8f49c8812718a2cf
msgid "The following example shows using the |resource directory| and |resource cookbook_file| resources to manage dotfiles. The dotfiles are defined by a |json| data structure similar to:"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:22
# 9bcf623e1169484f9899c7950d626f0d
msgid "and then the following resources manage the dotfiles:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:49-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_directory.rst:8
# 927b040831f5472589bd5856d60add38
msgid "directory"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 6e6202653dd94dc9a85dfff49894e64c
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_directory.rst:4
# 18e0c2848fbb45af86cada533bafcdc2
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../source/resource_directory.rst:15
# 30bce724357d46cdac5fe4e3388e4c9d
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:4
# ab5c2f33afb648dda011199d2af4388d
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# 69d4034346894e65aa74007617663bf5
# d67352f407a546c79f5933df007f6cd2
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:16
# 6298868cfc3b4edeaa7a3fba2e05debb
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:17
# 148033ceabc346fd96e0c27368513e67
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:18
# fe6941732bee468fb228ab5500afbdc4
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:19
# c6ac9b0e9d6545cda703d65feaff10e9
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:21
# 934d44d3f00c4cc0ab57f6862e634bbb
msgid "For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:32
# 79f1fed07d44449a9196c277c853d1d2
msgid "A variable may be used to define a directory, and then again within the recipe itself:"
msgstr ""

#: ../source/resource_directory.rst:19
# bc48d0f1064f456eb1494ca9fc48a757
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:4
# 91d5f199a8aa4ee5a7d993df64e7f8b6
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:10
# 6354a52b95954499bc8077ab11858a50
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:11
#: ../../includes_resources/includes_resource_directory_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# 763ddd99f92a4977b2f74aa131415423
# 37a26b01fa39495e97f9e08f712afefa
# f61433ca60e44526ac4caed926a19a6e
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:12
# cf2c540d255e4ec4a5f34e208b967372
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:13
# 5ac7b3f616ae4ae0a91fb46a081280b8
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:14
# b0a4211e69e3485498238ab412c45d1d
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:15
# 6270928e1257498b9965c6b705b37ebb
msgid "|resource action delete directory|"
msgstr ""

#: ../source/resource_directory.rst:23
# 6432b6fd65494a019322b6f4c86791f9
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:4
# ff8445fdf57a4e3f99df2997af26e641
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:10
# 98eb4ccc8e1c4a1184e463e0da2e5425
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:12
# f685551fe5b24a6b97cfa22dfb647e39
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:13
# fae25f6ab36f45208be11f15f167024a
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:14
# aad737ecb5f54c8b86207f02f88480a1
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:15
# 93920676ed4642db96aaa3f29d3e3e46
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:16
# 3d10eff1d6f94bdea369a1fad2fcc45f
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:17
# 26807168e03c4be7bce6c06cc968684f
msgid "|mode resource_directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:19
# a991a1e8258d4b188a14fd10088f8bbf
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:21
# b2374956bdea4005b65c8a661a97dd1e
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:23
# 926985381c5f4d67b16acf0fa685365c
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:24
# 737eea1623d14b8ab6074c290643d865
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:25
# 7205a443e4fa4559b4ff03cd79aa1b2e
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:26
# 1c875f7312a1462782c0686df4dfbdf8
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:27
# 010dda702e4542fc901c682ac42d7644
msgid "|path directory| |path_fully_qualified| Default value: the ``name`` of the resource block. |see syntax|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:28
# 8372e4b61a2742f6b54641bccb08c2d8
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:29
# 793468424b8248ae96bd600511b4e2f6
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:30
# 7d62bab347494be3b54dc6ef589ee771
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:31
# dc928dd0c5f049cb867c4f5f75e1685c
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:32
# 986dbb15241d424aa85df86f3c6e6808
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:33
# 7a5306139c9e44c5adc79c0aaa7fe509
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_directory.rst:27
# 3d9350b2ab7643d59b9e8c53afcf373d
msgid "Recursive Directories"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:5
# 938d895592d74342a9ae2b5e41dd1f68
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:7
# 3412b7780e4f4a6c8837f7df7d576e89
msgid "A directory structure::"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:13
# be5b9c98360c44b58b9464a663fec2e1
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:24
# 2f399b6c45fc4ca5bf9212379c675463
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:36
# 148ed6239d8d49b6b6262f4a279c07ef
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../source/resource_directory.rst:31
# 24765748d0a748ce92c29961b97944e8
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 56f611d3e66d4ac48e88e031bab705e1
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_directory.rst:34
# c1b62b436d1c470a8f78ed517cc12cc7
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# 268af33974a845e4b2ba991f15590699
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 4024e0d66f47478e908ef717fb9a07d4
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# e95cd99a922844baa1ae1a91eee48a74
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# b5cc7ae169384f969cb14aec068f67cd
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 56b30cff10004598a0ea4705fd3d2684
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 40683574ff4948ffad88d5d869ef2af4
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 5b5b377204ff4574902a0ee1bcb49960
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 93162766146d40bda36379bde4174306
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# a2e6d365acd64483ace9eb321969844b
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# 9aa8debea7cb4af0b84080eb2cca4dc0
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 1d3b005b84fd402bbcb4d67885ba4310
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 5919a21c86fa4f2987739eaa6bc96def
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# ff8b3303e6de404f97c9d34877f177c1
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# e85c9dd9d8ef4451b7c32e66b89285e2
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../step_resource/step_resource_directory_create_in_windows.rst:13
# 647e74cd008f472aad609b37bfb3b3a7
# 38fd909168cb4cff8e0df95a1c4d5d55
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 3967c59ffdca4f57b5c934333416c400
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# 73a09680acbf4ef5a6eb3aa44a4ebb77
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 2ab803722da34bd29018fc1b1f7658ba
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 39065f54f1a748bb91c85c4261b80299
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 77025d9e12024a5aa72900d7d97eb6fc
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_directory.rst:38
# d9274b3d8d894ee99be722f6b1f4ca07
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 27ae6b5486ee404cb9c37fb1f966038b
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# ebb61425635a4694baa855f6acf05878
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 9d48b8951b50437faae990741182e845
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 4089c067694d40d3968dcd0d82376318
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 62b7de4cb4fd409a8d933c14e3afbf36
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# bd8b87d1893a4bb0bd3f758c3c6e411e
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# ee9f3fbeb6e24741a7ab55cb14f8f152
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_directory.rst:43
# e8461d5b98b645dda44803ed1ab50110
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 0942ef88442c4224b2d9f5cfc27dff79
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 13367716e8e148dfb573a13c6434c5c4
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# 9f5d83438c544e618e0efaeff6a94308
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# becb8564fa7e4202b6ef7a33d124f419
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# 37f99d723e3d4475b9e09330a01bd226
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:4
# 49643fb605b24dcea002c0bbeae49325
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:10
# 0d112833def6499b8cff7d60aae7d720
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:11
# b235415c20bf48ce86a04347da2ca594
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:12
# 7d421495bb544954bf3d64c355ef261b
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:13
# dfd69cbf3dda43918474db4ba5223076
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:14
# f2137235970c4be19b46281293f414b8
msgid "``directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:15
# 388c5d7acf6849a68d2a006296721910
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_directory.rst:51
# 2c7e7ec393e1437d8635a00eea3ee177
msgid "Examples"
msgstr ""

#: ../source/resource_directory.rst:52
# 683ff559d9e74c72b660ec14e75ac111
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_directory.rst:54
# 266ef47cbcb64324ba8bce64e2d2950b
msgid "**Create a directory**"
msgstr ""

#: ../source/resource_directory.rst:58
# 71266f69c8f14389810ff1bacefa8c88
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../step_resource/step_resource_directory_create_in_windows.rst:23
# e7c76cc35dd743339c71d3bb756e6404
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../source/resource_directory.rst:62
# 5cc4bd37d7cc4fdcb705fc0635d22d10
msgid "**Create a directory recursively**"
msgstr ""

#: ../source/resource_directory.rst:66
# bd1594cf2c74425c93a9a5a6e067d196
msgid "**Delete a directory**"
msgstr ""

#: ../source/resource_directory.rst:70
# d717cb8c1b9c45d5ad59363580cfe4d0
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# f62dfa2cff0b4183a1c52e95ea4dad3b
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# c81fe066663c4f4fb1ac0270230fa9a7
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../source/resource_directory.rst:74
# 73cb3fd7a351479fb533d067b6ca30af
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# 1a2069b7f95e4eff8821554f718595df
msgid "The following example shows how permissions can be set for the ``/certificates`` directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as ``root``, and then read/write permissions are granted to the root."
msgstr ""

#: ../source/resource_directory.rst:78
# 3699b50adb0e4eedbac384efa194356e
msgid "**Reload the configuration**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:3
# 8df7adb815ac4797b1bad6de211ad09d
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:5
# 725f7ab3d0514553ab22e36ebc0aaf42
msgid "using an if statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:6
# bd67ccdc31ff44f5ab437dfbf53134f1
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:7
# 0dafe468262f46a4b71204078e1acbfe
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""

#: ../source/resource_directory.rst:82
# 5691e763cb0b42b487385c34bef29783
msgid "**Manage dotfiles**"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:3
# 467e68d8e2fa407faaae833129da555d
msgid "The following example shows using the |resource directory| and |resource cookbook_file| resources to manage dotfiles. The dotfiles are defined by a |json| data structure similar to:"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:22
# a61006e81157466f8de946099331757a
msgid "and then the following resources manage the dotfiles:"
msgstr ""


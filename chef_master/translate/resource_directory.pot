# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_directory.rst:8
# f4004f832585426586b9ee23a6d3b957
msgid "directory"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 502967ba6cdb4686b611c10fc22bab8d
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_directory.rst:4
# ff68e2f2d3a44a3985cd0ff2025486cc
msgid "Use the |resource directory| resource to manage a directory, which is a hierarchy of folders that comprises all of the information stored on a computer. The root directory is the top-level, under which the rest of the directory is organized. The |resource directory| resource uses the ``name`` attribute to specify the path to a location in a directory. Typically, permission to access that location in the directory is required."
msgstr ""

#: ../source/resource_directory.rst:15
# 529e21d0dcb24c4c93da877c54cec5fb
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:4
# 3f1ee70da0ca43beb78bb6a04dacc042
msgid "The syntax for using the |resource directory| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:14
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:10
# be99997a997c4b88a19bc8679e8b8410
# b2c4979dc6344245a7c825b2938aedb4
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:16
# 3b7752643aa6423490c60ef2cd47a9a8
msgid "``directory`` tells the |chef client| to use the ``Chef::Provider::Directory`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:17
# 4f925df5c9464cf6bc58bbe6a71f6d19
msgid "``name`` is the name of the resource block; when the ``path`` attribute is not specified as part of a recipe, ``name`` is also the path to the directory, from the root"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:18
# b2092c5a2fb445e5bee98b0b480150a5
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:19
# 8c1bf89b8d4d47b29003357f0e8e1d52
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:21
# ad61c3307c8048158312c7a5efec062e
msgid "For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_syntax.rst:32
# efc55cd88e844ae2b32d2324a0555457
msgid "A variable may be used to define a directory, and then again within the recipe itself:"
msgstr ""

#: ../source/resource_directory.rst:19
# afac778a372b43899810611df51799a0
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:4
# 7793488ece0547c8b23c66dee32b8614
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:10
# 25992c7a08cd4b4abcc7e2109255fba1
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:11
#: ../../includes_resources/includes_resource_directory_attributes.rst:11
#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:25
# b184e195df964057a4346dbf37295a64
# 83754bf9a55745538b8052de24e26f5a
# 55b2519325c74ee2b17366ff867690b9
msgid "Description"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:12
# af4a7199f2c5416ba2b40ebe8e31af69
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:13
# b6b0e63d854b4f3c869ac59c42824dc8
msgid "Default. |resource action create directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:14
# 2241de75abe14bfbbc820c62a1a9d78e
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_actions.rst:15
# 68bdd99457484fa3a09d13877d77a12a
msgid "|resource action delete directory|"
msgstr ""

#: ../source/resource_directory.rst:23
# 942ccce3a45f4c10af22e9700e3b30c6
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:4
# b1bb6be807b4492b977994dc978b26f7
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:10
# 55c818321e664c759cb6850fcdd78599
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:12
# 70fe6090c9514d688d0d22e589d6c680
msgid "``group``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:13
# 8ada99a3e7f44caabc8d881747d917c3
msgid "|windows group_identifier|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:14
# 005823bfa1444132a5def74d0960471c
msgid "``inherits``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:15
# 920d84d18d304c9da95391df77e1f24f
msgid "|windows| only. |inherits windows security| Default value: ``true``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:16
# 760a61b4ec034749b4a67b3cb4be7f15
msgid "``mode``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:17
# 402728ed5b0e4978857b9d63c67c602e
msgid "|mode resource_directory|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:19
# fc3d148e59534adea09f211791b7eecd
msgid "The behavior is different depending on the platform."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:21
# 73c731e4e5d1443ea844b56717d191dc
msgid "|unix|- and |linux|-based systems: |mode *nix|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:23
# 214fa2483d1e48a1b3729f15e6e41074
msgid "|windows|: |mode windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:24
# 2bedb99793764658a8051d2ecee59448
msgid "``owner``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:25
# fe69b72d9f3c4a9385ba48392d32f1fb
msgid "|owner windows security|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:26
# de685d8fc08b46f2845cbb2961c1d8a9
msgid "``path``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:27
# 5f352372c8fc4b61b5c2a4469a8148fc
msgid "|path directory| |path_fully_qualified| Default value: the ``name`` of the resource block. |see syntax|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:28
# e2c697fa2d7145169145302b64bae366
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:29
# 68f7ac97512d44a8815b154dc8db6a92
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:30
# dc4f335b7adf4b7e923cc6ca84b7ec69
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:31
# 9f158ec721cf49d28fa63c90de126a44
msgid "|recursive directory| Default value: ``false``."
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:32
# 30af9dbf63fb43f086d607326f9543de
msgid "``rights``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_attributes.rst:33
# 32e3f7af2459462bb4b03d6832a5c391
msgid "|windows| only. |rights windows security|"
msgstr ""

#: ../source/resource_directory.rst:27
# 6a325ef4cbff4545872efa1bbb9b978d
msgid "Recursive Directories"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:5
# 37019b367ffc4dd4baa7668ac81e4555
msgid "The |resource directory| resource can be used to create directory structures, as long as each directory within that structure is created explicitly. This is because the ``recursive`` attribute only applies ``group``, ``mode``, and ``owner`` attribute values to the leaf directory."
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:7
# a9a5266251cb4b3795590267dc0ce9a3
msgid "A directory structure::"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:13
# fd0a9c7941d64026bc3dc737d743b7e8
msgid "The following example shows a way create a file in the ``/baz`` directory:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:24
# 5c6d50185ad14881a787b3c1d3d03ac3
msgid "But with this example, the ``group``, ``mode``, and ``owner`` attribute values will only be applied to ``/baz``. Which is fine, if that's what you want. But most of the time, when the entire ``/foo/bar/baz`` directory structure is not there, you must be explicit about each directory. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_recursive.rst:36
# 95f67ef41671407dbee13389e1824403
msgid "This approach will create the correct hierarchy---``/foo``, then ``/bar`` in ``/foo``, and then ``/baz`` in ``/bar``---and also with the correct attribute values for ``group``, ``mode``, and ``owner``."
msgstr ""

#: ../source/resource_directory.rst:31
# b2c115478f444d78b5667c3b302d1077
msgid "Windows File Security"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security.rst:4
# 7534254053ac4a159bc32cf5ecb627f3
msgid "To support |windows| security, the |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes."
msgstr ""

#: ../source/resource_directory.rst:34
# 6ba2f01e8e534a91a9abacbb68b499ed
msgid "**Access Control Lists (ACLs)**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:4
# a9becf8b9e6c452a9eb07b68dc668043
msgid "The ``rights`` attribute can be used in a recipe to manage access control lists (ACLs), which allow permissions to be given to multiple users and groups. The syntax for the ``rights`` attribute is as follows:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:12
# 2faf5f3e3a98431191bc093bdac15dc8
msgid "``permission`` is used to specify which rights will be granted to the ``principal``. The possible values are: ``:read``, ``:write``, ``read_execute``, ``:modify``, ``:full_control``,  and ``:deny``."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:14
# 4aa6acd834ab4fc39a1e0b083648a278
msgid "These permissions are cumulative. If ``:write`` is specified, then it includes ``:read``. If ``:full_control`` is specified, then it includes both ``:write`` and ``:read``. If ``:deny`` is specified, then the user or group will not have rights to the object."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:16
# 54df3ae289494b6aaa5652550ec7056c
msgid "(For those who know the |windows| API: ``:read`` corresponds to ``GENERIC_READ``; ``:write`` corresponds to ``GENERIC_WRITE``; ``:read_execute`` corresponds to ``GENERIC_READ`` and ``GENERIC_EXECUTE``; ``:modify`` corresponds to ``GENERIC_WRITE``, ``GENERIC_READ``, ``GENERIC_EXECUTE``, and ``DELETE``; ``:full_control`` corresponds to ``GENERIC_ALL``, which allows a user to change the owner and other metadata about a file.)"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:17
# 052d9c84d7b64822b1ef95e71dd12b73
msgid "``principal`` is used to specify a group or user name. This is identical to what is entered in the login box for |windows|, such as ``user_name``, ``domain\\user_name``, or ``user_name@fully_qualified_domain_name``. The |chef client| does not need to know if a principal is a user or a group."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:18
# 4d646d839efa4817bca7adb42bedcd19
msgid "``option_type`` is a hash that contains advanced rights options. For example, the rights to a directory that only applies to the first level of children might look something like: ``rights :write, \"domain\\group_name\", :one_level_deep => true``. Possible option types:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:24
# 09801f4da8534e91909e4865ea3d0585
msgid "Option Type"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:26
# 97ca4264632e403ab26a282489ebc72b
msgid "``:applies_to_children``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:27
# 8b98b7513f95427eb02aa24d3a2ac2a3
msgid "Use to specify how permissions are applied to children. Possible values: ``true`` to inherit both child directories and files;  ``false`` to not inherit any child directories or files; ``:containers_only`` to inherit only child directories (and not files); ``:objects_only`` to recursively inherit files (and not child directories)."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:28
# f257960b1a8b486881d422207214b772
msgid "``:applies_to_self``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:29
# 92122c80aab64a04b5b4f1678d8b2501
msgid "Indicates whether a permission is applied to the parent directory. Possible values: ``true`` to apply to the parent directory or file and its children; ``false`` to not apply only to child directories and files."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:30
# 0fa62b85d0374022ae511fc9682e9c8b
msgid "``:one_level_deep``"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:31
# e1cc695ea504484eb9110ca2705b374b
msgid "Indicates the depth to which permissions will be applied. Possible values: ``true`` to apply only to the first level of children; ``false`` to apply to all children."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:33
# a2e0f9117c204374a82dc43af382d646
msgid "The ``rights`` attribute can be used as many times as necessary; the |chef client| will apply them to the file or directory as required. For example:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:44
#: ../../step_resource/step_resource_directory_create_in_windows.rst:13
# aca3ce79c9f540289194081f5ed82836
# aa32ad7ecc75480ea26e0280f3878d67
msgid "or:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:53
# 712fa3a758f2484aafa2b03c81defb76
msgid "Some other important things to know when using the ``rights`` attribute:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:55
# d366ce3b98144353bcdbed4e5e2bb67a
msgid "Order independence. It doesn't matter if ``rights :deny, [\"Julian\", \"Lewis\"]`` is placed before or after ``rights :read, [\"Julian\", \"Lewis\"]``, both Julian and Lewis will be unable to read the document."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:56
# 74fcfc15d8314c16b1a2e35f2af03cf6
msgid "Only inherited rights remain. All existing explicit rights on the object are removed and replaced."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:57
# 5842705d58f749ab8ee862d319a5ef3d
msgid "If rights are not specified, nothing will be changed. The |chef client| does not clear out the rights on a file or directory if rights are not specified."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_acl.rst:58
# 77381fa1783e4f5796f109fbbe3568aa
msgid "Changing inherited rights can be expensive. |windows| will propagate rights to all children recursively due to inheritance. This is a normal aspect of |windows|, so consider the frequency with which this type of action is necessary and take steps to control this type of action if performance is the primary consideration."
msgstr ""

#: ../source/resource_directory.rst:38
# 9ba0d573f5564d689537e2534654c3d4
msgid "**Inheritance**"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:4
# 6773c1afe7a44451aeea09e80df1a5fd
msgid "By default, a file or directory inherits rights from its parent directory. Most of the time this is the preferred behavior, but sometimes it may be necessary to take steps to more specifically control rights. The ``inherits`` attribute can be used to specifically tell the |chef client| to apply (or not apply) inherited rights from its parent directory."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:6
# 111807d3b0004103aa85de1fbff80b90
msgid "For example, the following example specifies the rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:15
# 271845b93fff438bb7e36afbb5033fd1
msgid "and then the following example specifies how to use inheritance to deny access to the child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:24
# 39fa07895ce849fe9baae27471c38fc9
msgid "If the ``:deny`` permission were to be used instead, something could slip through unless all users and groups were denied."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:26
# 41eff89817f743a897fe634b81289c30
msgid "Another example also shows how to specify rights for a directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:36
# e2fbc1037216434090840a03f1e29555
msgid "but then not use the ``inherits`` attribute to deny those rights on a child directory:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_security_inherits.rst:44
# 797c165d0b3b4d42b79b41c20aed76c9
msgid "Because the ``inherits`` attribute is not specified, the |chef client| will default it to ``true``, which will ensure that security settings for existing files remain unchanged."
msgstr ""

#: ../source/resource_directory.rst:43
# 4f0d5260d86a44b7a5070c793aa3e04c
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# a6ea2ea58838431a9999c0a92b777ffb
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 0a58fc185e364d6eb643f4d7ea5ae720
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/chef/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# 406e9ff6e41e4225a6dcae3310fae6f4
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 03489c9d86b74f55a24cd6633b7f71ad
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# d63e991bff914c079418076716b459fa
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:4
# de2cbbe0847643bd95ead6beeb333028
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:10
# d8398859d638423796a7d8afbe6dfd2a
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:11
# 658d9a22d14b4941828318e600cd618b
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:12
# 788639c1ced84330b1ea00225dab0189
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:13
# 1afa6c9c349f4035b45bfa9e88ec78f7
msgid "``Chef::Provider::Directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:14
# 70e16b669cfb4bc28e95df88ec416793
msgid "``directory``"
msgstr ""

#: ../../includes_resources/includes_resource_directory_providers.rst:15
# 826287958aa54158953ac0e787861781
msgid "The default provider for all platforms."
msgstr ""

#: ../source/resource_directory.rst:51
# dbc40ab008f145909dac919b1c24f52f
msgid "Examples"
msgstr ""

#: ../source/resource_directory.rst:52
# 5db9badc5e05444784fd56c1f7870d1f
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_directory.rst:54
# 12300987bf084666a4abc63d1f5554f8
msgid "**Create a directory**"
msgstr ""

#: ../source/resource_directory.rst:58
# ff36626ec14c47f1aa81d0d99125c2f2
msgid "**Create a directory in Microsoft Windows**"
msgstr ""

#: ../../step_resource/step_resource_directory_create_in_windows.rst:23
# 54c5e566e7bb414aa8a59f0ee4d6e7ea
msgid "The difference between the two previous examples is the single- versus double-quoted strings, where if the double quotes are used, the backslash character (``\\``) must be escaped using the |ruby| escape character (which is a backslash)."
msgstr ""

#: ../source/resource_directory.rst:62
# d0a34efce40c455ab31be3778cbec694
msgid "**Create a directory recursively**"
msgstr ""

#: ../source/resource_directory.rst:66
# 960eb109a34a4534b50e98f7210cc8f5
msgid "**Delete a directory**"
msgstr ""

#: ../source/resource_directory.rst:70
# 8c26a11a55d943e9998bbfede6c49e83
msgid "**Set directory permissions using a variable**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:3
# a125086d5af74e679c0d67dbdb7d94c7
msgid "The following example shows how read/write/execute permissions can be set using a variable named ``user_home`` and then for owners and groups on any matching node:"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_with_variable.rst:16
# 59f81cdd446d44fd93a4a7ae14c8354f
msgid "where ``matching_node`` represents a type of node. For example, if the ``user_home`` variable specified ``{node[:nginx]...}``, a recipe might look something like this:"
msgstr ""

#: ../source/resource_directory.rst:74
# bacfd29bb5374b0d98cad645f94e9188
msgid "**Set directory permissions for a specific type of node**"
msgstr ""

#: ../../step_resource/step_resource_directory_set_permissions_for_specific_node.rst:3
# cd906672279240918c59c794de79005a
msgid "The following example shows how permissions can be set for the ``/certificates`` directory on any node that is running |nginx|. In this example, permissions are being set for the owner and group as ``root``, and then read/write permissions are granted to the root."
msgstr ""

#: ../source/resource_directory.rst:78
# b104ce7a9a744207be48630183aef967
msgid "**Reload the configuration**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:3
# 155ec0fbb38e44ebbbedc9db6b6eda42
msgid "The following example shows how to reload the configuration of a |chef client| using the |resource remote_file| resource to:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:5
# 0532e23bc8cd4656875de90579bde53f
msgid "using an if statement to check whether the plugins on a node are the latest versions"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:6
# 2e981d6d5d0943bca0b67d211b77ac85
msgid "identify the location from which |ohai| plugins are stored"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_reload_configuration.rst:7
# 1f2224118c0d4839bc82e0080b1a1dcf
msgid "using the ``notifies`` attribute and a |resource ruby_block| resource to trigger an update (if required) and to then reload the |client rb| file."
msgstr ""

#: ../source/resource_directory.rst:82
# a112256b3aa04360b21e6d26fb67c841
msgid "**Manage dotfiles**"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:3
# a59b055240204670a7acaec542b65ef2
msgid "The following example shows using the |resource directory| and |resource cookbook_file| resources to manage dotfiles. The dotfiles are defined by a |json| data structure similar to:"
msgstr ""

#: ../../step_resource/step_resource_directory_manage_dotfiles.rst:22
# 218ba88ce6fc4ca18d9f758660de15c4
msgid "and then the following resources manage the dotfiles:"
msgstr ""


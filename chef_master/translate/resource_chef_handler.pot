# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-11 15:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_chef_handler.rst:8
# 108ae70a1b624c8096dbb9a8ae184b82
msgid "chef_handler"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
# c307773d01aa495c9818eadc30942d13
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:6
# e878f41378ae4f7a8292f2fb5e574162
msgid "The |lwrp chef handler| resource is used to enable handlers during a |chef client| run. The resource allows arguments to be passed to the |chef client|, which then applies the conditions defined by the custom handler to the node attribute data collected during the |chef client| run, and then processes the handler based on that data."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:8
# 47905eb65aac4d37a0096fe4e0b6742e
msgid "The |lwrp chef handler| resource is typically defined early in a node's run-list (often being the first item). This ensures that all of the handlers will be available for the entire |chef client| run."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:10
# 574ed392e16a47aeb1beeb7831088c00
msgid "The |lwrp chef handler| resource is included with the |cookbook chef_handler| cookbook. This cookbook defines the the resource itself and also provides the location in which the |chef client| looks for custom handlers. All custom handlers should be added to the ``files/default/handlers`` directory in the |cookbook chef_handler| cookbook."
msgstr ""

#: ../source/resource_chef_handler.rst:15
# c09a5d0d7d224dd2834ca211f32678ca
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# f3d7a08fc75a4d65b485d730a3bd1b9d
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 3fcb9c1b41f54d2e9d8f918632b0ee14
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_resources/includes_resource_chef_handler_actions.rst:11
#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:11
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
# d1729f7eec6d480d9bc5d0da01b778ee
# dfe434acbcf241a08088408b542f6e56
# b6332f15884f421c83f23b5b6bbb7a34
# 20f9b4ca37f14008acb79531dd9f46bd
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# c015c6ab88c84152989f5c2e86a6e31a
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# d5bfb7a1d0f74787849841cbb8a40982
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 18f94eeaf1a941818da9c765feaa6f17
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 1127aebfd056488bbd0beccb681075e0
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 30db6bcd3e7044749ad3bbeae12ee868
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 321005beb5e148b79d14dab60a7a01b5
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/resource_chef_handler.rst:19
# a1e2e366012740b69374afe5eb572e1f
msgid "Exception / Report"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# a980e7c0bbb747cdb41fb92c454011a8
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# fc9d477ace0341e9b46f85e979d83280
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 00847d69fa3c4aa389c6b59b09eca82a
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# 43ab8e0c5538468483831e6f66d8996e
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 1ce0891666664985b57152c3514463a1
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 3482a9557e004830b269e478b1b87915
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# c72989aefa0f4c00b037208a743b8d28
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 4252646e231f46ee809049aca09a9ce6
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 9d469bf9855b4eaebad7ead0ac6cc136
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 85c23bd68b3b4cefaf95a24a300a9422
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# 37b89ebe2c104bcdb49c1713d6842202
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# b2b2798b23914b29ac44783420bc9d82
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/resource_chef_handler.rst:25
# 50c49922b0f74c6291222021c0021199
msgid "Start"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 6be6e6e16e5a4e6980b4903b2420ee40
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# be65e9a70a0b4c10a189f8ec941748a2
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# c5944ada09e54ae695722e5576e09f92
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# e0126a64fee74bbd9db5cd5ea994b52a
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 4ec8216d5ae541e79c13f73f99d986ff
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:31
#: ../source/resource_chef_handler.rst:48
# 82c3da57c87a4e90bbacf149c9ffbbe5
# 8ba1929f938e4116a9206df886c0fdad
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_syntax.rst:4
# 6f92cc0487b0407a8cd43cd49ceb8842
msgid "The syntax for using the |lwrp chef handler| resource in a recipe is as follows:"
msgstr ""

#: ../source/resource_chef_handler.rst:35
# 373bea1ae5e043bfac9813fba15cd24f
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:4
# 32e3886f22154d798f280c95996f247c
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:10
# 73109ef175864f38a0bc98600787eac7
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:12
# 57f439c702704b69b3794e76d6fa1126
msgid "``:enable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:13
# db35651f6ea64dfa8ce432a6b4e5d901
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:14
# 919edab61cce414899d305af20ada399
msgid "``:disable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:15
# f5e8bd63c90741a782df0b5340be220b
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/resource_chef_handler.rst:39
# c26a7736cdd4491295f5b05c498b7566
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:4
# 45249e7b366e42bcb60a8d8141411e15
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:10
# fc8c7b568d234a3b9d54c6139f03099f
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:12
# 1507302aed8241f4854c6940a0ed9b31
msgid "``class_name``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:13
# 625ec77d522148d3b4faba7bcb8b6bb5
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:14
# 85cffa5dbee444528126f3f628650bb7
msgid "``source``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:15
# 909aaaf5ed7d4f908e5e8da4fa556e1d
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:16
# 104fa34f80b64a00adb319d15cbf1259
msgid "``arguments``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:17
# c18f02ff60c3448990b46f7b5a938718
msgid "|arguments chef_handler| Default value: ``[]``. For example: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:22
# 6c08260aea034fef8b43fbafeedaf02c
msgid "or: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:26
# c1159353250a455ea235c727b1487a9f
msgid "``supports``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:27
# 1318daa489a44d23981fdbeb451b7f5d
msgid "|supports chef_handler| Possible values: ``:exception``, ``:report``, ``:both`` (exception **and** report handlers), or ``:start``. Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/resource_chef_handler.rst:44
# 1c6ef1136979424c9912eb16149552d2
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# ec83af276b344edd88248e40f31de91c
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# ff0415c8be2e426fbe71e2928f757afa
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 5c49c6efb6614009832c0ba5cbb40e69
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 98a9319db6734f9f9d01ebbeb688c051
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# c055307d64e5433eacf9f6da48493d6e
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# b4732c81478545018bf7c141c461e43a
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# e0779e0a595d47d6992d35812ba0063a
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# 7d3e7a517b1243dca65257da887d1220
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# ea88a9479648470ba0afa5b4c5ee572a
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# 2537f48310a14265aca842f636e511e8
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# a9ed8aa16d444f8a8fedd480d11a8a26
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 6d26a97f4d1546858afcc2f4af09a9ee
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# 18ae59ca831b42cbb5d3a4b1391e7437
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/resource_chef_handler.rst:52
# 9d879d64c59747a9885b1a31c6cd6989
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# a086c5a421cd4d36abbbf17924796c88
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# 515d74192475496396b775273c4098be
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 1d269bc3e3c449a69e18a2a021887bd5
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 8def6aec868248aa89cec1e9de6b9c41
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/resource_chef_handler.rst:56
# c9cc6b7055d8487ab0bf7146ec10e6fd
msgid "Optional Interfaces"
msgstr ""

#: ../source/resource_chef_handler.rst:57
# 32f2df72bfc547f389f9aabc4871c8e7
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/resource_chef_handler.rst:60
# 1857555e17354e36a4d20b54b547addb
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# 74c19e83dbb149889372fe8b21f064f8
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:64
# f4032a2e73e74cb0a9bc52d7ae8b6982
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# c90a33fabf8d45ab9e5e803769d24bab
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/resource_chef_handler.rst:68
# f95abe3c274448ccbbefe54e795d3052
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 4ebed01d9fc640c4a9604fd169e10875
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:72
# 875484e1ad5148cf913264fb3376e60b
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 753b3d03c78947f28d43c2727500c7c1
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 01af4679ffc24c538d76780e535861eb
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 3eccbe9477b84bedadeb7d4863af26ca
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# 84fec0d7323147359f239874e1e9bd68
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 5f6dea73bb4544df8bef39c790c5f86a
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 11eb220227b545e096869b54b235a8e5
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 834164382cac4c4d9052788c138344a9
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# a11e4438f6954e67b724e8cc381c8f59
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# b322f0bab3c04bc29c5c5b35a145e99e
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# 1fb511c6df794c859463a58484605e71
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 8902c2a6b86846a0869ac3fa2d5c236d
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# a51d568eced5495a962d63cd6fabafcd
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 9071455b763648b3afab330ce714545e
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# dcd4151303744427958328bf07da258e
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# ac0218419af14543a5a3fb4acbea71b5
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# c56572e5757940408f7850bf89c76375
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# a76cce5e386e490f9cf47774b2e5bed4
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# dfc5e99ab8364ed89bd939403036061d
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 5e115f8c74c643f78556a5a109501aaa
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 8a5e9c78eac64c2f808018138288eeb0
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 7b58dd9cb52b4390a6356fa0a2cf82e2
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# d19da0552ada416b97df3c28f749ae5a
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# d3256a90668947d29f3cc120fd2b964f
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 5874f1b7ed7c4b239b5118882cdce6b5
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# be7baac797634fbdb8f57704fc2ea651
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/resource_chef_handler.rst:76
# f0cb73efe10f40bd838b0a1dd52b7c5e
msgid "Examples"
msgstr ""

#: ../source/resource_chef_handler.rst:77
# f8aa2269cb674d83b2b776d9ae2f98c0
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_chef_handler.rst:79
# 508eb399b12c45b9b2afd34381bf5021
msgid "**Enable the CloudkickHandler handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 19f21e2ed77044ee87b963a48420763f
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/resource_chef_handler.rst:83
# 571e5bf66394450a97573d138ca515a8
msgid "**Enable handlers during the compile phase**"
msgstr ""

#: ../source/resource_chef_handler.rst:87
# 9a86c38b5c6d44f680b926f5e5ffc314
msgid "**Handle only exceptions**"
msgstr ""

#: ../source/resource_chef_handler.rst:91
# 0aa3845f2fc547078048e053140c884b
msgid "**Cookbook Versions (a custom handler)**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# 6438b14673d044cabe3d8611c45a2a06
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/resource_chef_handler.rst:95
# ab60f722bf4948ef999e37a2da428901
msgid "cookbook_versions.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# de2dba50e397468fa1fb373a0709a0a4
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/resource_chef_handler.rst:99
# 7cd1ebb8deb9497e89b2c443f1288d88
msgid "default.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# bda32646f5784ab5bf443d5a448809e6
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 4dc7f8b8f1a2462faeec02d60fa54caf
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/resource_chef_handler.rst:103
# 2ccf20be9af940ba897cd78013f53739
msgid "**JsonFile Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# dc1ed816e27844fc9d45f766af864153
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# f1c178f24f5b4bec9f743ddb183fd548
# 1350e15e6e6e48d3b2d9ebd333c4e055
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# a35d839e1e29430a8dae3e3989d94508
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/resource_chef_handler.rst:107
# a9c7e463d0244419a4c111e551d2ae78
msgid "**Register the JsonFile handler**"
msgstr ""

#: ../source/resource_chef_handler.rst:111
# abefeb191fa04b30864490a697883235
msgid "**ErrorReport Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 45f07bb210b4477a8af0db71b19befdb
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_chef_handler.rst:8
# 79ff84c21aa64e3e9f9d38edee3e8f05
msgid "chef_handler"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 121cf914e70048cc9587d4c1d410b31c
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:4
# 3b8b8523a8ad444fa3ad4350f24f965c
msgid "Use the |lwrp chef handler| resource to enable handlers during a |chef client| run. The resource allows arguments to be passed to the |chef client|, which then applies the conditions defined by the custom handler to the node attribute data collected during the |chef client| run, and then processes the handler based on that data."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:6
# d3ab6b8f053648c7b205b695e90d43fb
msgid "The |lwrp chef handler| resource is typically defined early in a node's run-list (often being the first item). This ensures that all of the handlers will be available for the entire |chef client| run."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:8
# adcf499a12cc48079073e94086b0ab42
msgid "The |lwrp chef handler| resource is included with the |cookbook chef_handler| cookbook. This cookbook defines the the resource itself and also provides the location in which the |chef client| looks for custom handlers. All custom handlers should be added to the ``files/default/handlers`` directory in the |cookbook chef_handler| cookbook."
msgstr ""

#: ../source/resource_chef_handler.rst:15
# a31871ac2daf43f0bb1e1516350ffdd4
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 1c3789e977584868800a56a550c86394
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# c99db296cc0142379531b4e33ea75a7e
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_resources/includes_resource_chef_handler_actions.rst:11
#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:11
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
# c4d0ec5c898240c682e06a5df64c88df
# e3c467d7db1a4712aec044acc22af7bd
# ba398cdeb0c94fbb91f1f8e23fcca5c9
# 7520eceb3d474b67acd38cc1e97df1b4
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# e5b3a1b940494ccc9cb937deff72b9ee
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 75a58231cdb342a0bfc0fcd509bfe2ef
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# e9eda1f97aa14f02b36c7b655d3ee3e5
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 7258f99d76c2405797000d2ce0a04a1c
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 732ec34cdd814fcdaf52c6f1f4a1a0d5
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# 965687173d7041ccbb95417adb681fea
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/resource_chef_handler.rst:19
# 524dbc5e013d4bf0a82e8d5d44f94ec2
msgid "Exception / Report"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 769af062536441f79d9df9d8eef133b7
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 7816c5b9689b4ca1a3391cdae90c769c
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 3f4279089f3941afa5e7b138f4ba7b4d
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# a89c61e00f624054a059954645598382
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# d24e698f0f174f87a0c809997fc51fde
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# a6e33a47fd024fa4ae5ec6f7329e51f2
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# 1a3af8f84bbb4041989d4dcc159260a6
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 2fb771eb65a2468c9c4faa163ff59a83
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# fc33aa64e6e944dead30dc6fe38f4a02
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 9d081c786e214b6da7661a6ceb03f07e
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# 9f2ea1167376418c97d763b047d679b0
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/resource_chef_handler.rst:25
# 7b497a97257c4a87a103f2dbe8e6ce72
msgid "Start"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 5f79695157e044db8d695e4719685ce3
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# 566d3e5df89049bd8e8c1ca2d43598f1
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# e9f853c095b7463b95595d90fca42163
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 2cc4520da2824775ba2b02acff9a6343
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 677521a852f247f0a8e041415f963c40
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:31
#: ../source/resource_chef_handler.rst:47
# bb27e0da872742ce9aefa46045d1c64c
# 2468deac36094bf3988043cbd9f57444
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_syntax.rst:4
# 07846021d95b4f13884affa3b27b4907
msgid "The syntax for using the |lwrp chef handler| resource in a recipe is as follows:"
msgstr ""

#: ../source/resource_chef_handler.rst:35
# 265db359b1c14fb78068746379982b43
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:4
# 4ad01dfdcc20456bad07c5eb3db8a971
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:10
# de758c490f6c4777a1bdbc6475b7e20a
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:12
# 95ea46c2703c4de1827f5ea9ea3a659d
msgid "``:enable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:13
# 75851d5a72764bbeacd1cd36190ea22a
msgid "|resource action enable chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:14
# 113842199bfc4ba3805f8411bd1c1f19
msgid "``:disable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:15
# 128b916394dd4cc3b1d0ef200c3a1e95
msgid "|resource action disable chef_handler|"
msgstr ""

#: ../source/resource_chef_handler.rst:39
# 89bd8272049c4b5997eaf3d4ef2cec58
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:4
# 7f5244bc3e5d4e299807ace60d1c314a
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:10
# 4f15594045604d3cbd54f26d6f5bb72c
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:12
# 113ce4a7e266422fb3e1718e1fb481a7
msgid "``class_name``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:13
# 359f405e47c2428389ef51d3d8582e6f
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:14
# 56bcdc04521840b9815fe5b1039a694b
msgid "``source``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:15
# 101a48edb2a041c5ba56226fc0fe1312
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:16
# 21d533c2784b4d628d26a5d84185d99c
msgid "``arguments``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:17
# c9424cb985e249e5844e5a78b5863626
msgid "|arguments chef_handler| Default value: ``[]``. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:23
# 8e8c9a7b43c64938ab3be41da8ad74e7
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:29
# b028ca67a00e4898adbedf73f847b47e
msgid "``supports``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:30
# f6549a185272430d85d49a16163b52ef
msgid "|supports chef_handler| Possible values: ``:exception``, ``:report``, or ``:start``. Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/resource_chef_handler.rst:43
# 610b1c74b0bd4511bbcf4de5eaca7f5c
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# 0742582e1d234831bccf1b720495cf20
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# ccc5a0bab6834339ba1ba02b101aac92
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 1fbe202354bf48e8821a3db5a70146e7
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 6b218dfcf1ba4579a5f6447074b551f9
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# 8e4c23ad306c4d2d8130b012d21e812d
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# 6e8b1fda89484df9a17ba3fcf704652c
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# 921d6d91f0664404b58b7c3ccf9a9983
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# 2713962e97f0445bbd4740e896de7acc
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# ffa6120720bc40c7bf34f86897f8b853
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# 0568db06412441288f1111719d708eb0
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 735179b0f7794e319799462bada3a2b3
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 5e2afcdb020248ee8ef19f26bc2c9a5f
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:50
# fc2ec1897d27493ea5a9f8c1d92e3706
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/resource_chef_handler.rst:51
# f3b53e1efe0d47ed9d3fa373de5476c1
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 19242b1b64ac4c57bfb5595e530afab0
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# 796603800f92436fa3028cf335e60eac
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 6cfb3102c7ee4f9b855759ea8a54df71
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 2f24b1931dcd4d81bdfb42e65a0d82b8
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/resource_chef_handler.rst:55
# 4f7a30a158e549d9adcdf3d744a9fa02
msgid "Optional Interfaces"
msgstr ""

#: ../source/resource_chef_handler.rst:56
# 67f2ad11d8c44d859d11b1106f2eff3e
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/resource_chef_handler.rst:59
# f4a44a4786404c9ba5c69e102a0f35fa
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# a05134692f2f4fae91d476ea808b2288
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:63
# 1666f415527343a28886a625021c635b
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 4706e9b1461f40249cfd27a8a20173b0
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/resource_chef_handler.rst:67
# ed73b7ac655344d79953e440a7a05fe5
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# be5b9aa53e744a73b059069fe7534865
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:71
# 6267b841c8a84a88a77b776f5188529b
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 335f9aa87bd4481e8a9ed5bab8c251c1
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 0fbed15ab56d4b1685294c35ce566310
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# fef6f848a34443c897c99d242f2b28a7
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# b55c5a4216f243e0b669db0e10553d64
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 2af6fa740ae04e1f9c14ddc94fd89764
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# d4296c5a49634460b7b3aa5847ab9f8a
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 4e71c53e285846d19a4ef13a90d0c9e9
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 54f9afbaf38947b1891306c3807dd28e
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# fb7282bb5df243a89a80ee72793c6992
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# e1bb573a66a24fbd905be8838c49da89
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 1e48b102521d48d18b1e4c21e17ed5b3
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 5449da19b697417ea1dcb036b38c6851
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# f121bc323dd94031b5fe72f9233f4097
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# 4086b413e7024465811a71c5eb598d16
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 02cb892e9d3d40e0a8cedcbbbad9a701
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# b82e669e6e434899bbeadbb41037eef0
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# 523153c96fb3445c95e8c9068cd584cc
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 0cf9dda6049c4d97a49d4729c2ae6942
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 73eb7f744f8e411da7f901add26a6c18
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 158b5feb0c1b43a6822f80a706040679
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 24c3dc3f63ad4cb5b0f7769ce8c51283
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# b62c1035a67c41b5b0fc2454bd234180
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 84f6c0401b814ac1986354eb546f7aaf
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 4031e4adb83b472c9269d0b10022ee1f
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# 281025b2e20a41d1b0d0c37ff36d748e
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/resource_chef_handler.rst:75
# 2d30b909bd464165aacddcc38ab0db69
msgid "Examples"
msgstr ""

#: ../source/resource_chef_handler.rst:76
# 914d20e877114e66a8296ee08d5b3394
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_chef_handler.rst:78
# d44a898bfc1d40759454a343c3fa811f
msgid "**Enable the CloudkickHandler handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# bb4473906b994c299b9a79fc1d5dc5c8
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/resource_chef_handler.rst:82
# 28a00de7e3894d3b88fa668c3852b64c
msgid "**Enable handlers during the compile phase**"
msgstr ""

#: ../source/resource_chef_handler.rst:86
# bae8ce2cd6a54c06accc165a42f48e84
msgid "**Handle only exceptions**"
msgstr ""

#: ../source/resource_chef_handler.rst:90
# ef2798fcfb334daa9951ce1980e34a5e
msgid "**Cookbook Versions (a custom handler)**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# 2a1deb0f5b5b41e98e05793034c38032
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/resource_chef_handler.rst:94
# 6a424fb0b1034bfdb1db0bc07be6c42c
msgid "cookbook_versions.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# cf0b6494bb3b4af3a89596956b1de3e9
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/resource_chef_handler.rst:98
# 878ca70893e944e49c09e802e6a9d18d
msgid "default.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# c69cee7e0a6d40f8868b98627cf3667c
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 679c025c8af0421d8d8f0524b30a4d04
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/resource_chef_handler.rst:102
# fdc91039cfd44a288fd23a652a7a605d
msgid "**JsonFile Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# 2095f5d2a8a94bb3857ee035b6cbc6e7
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler may be enabled in one of the following ways."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:7
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:7
# cf684b82b107465299ebcb2608b1861d
# ae1ee6642d30444ab98ff93d3234d1d4
msgid "By adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:15
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:15
# 799a0d59feca4efd89fe657884d1e652
# 4cbcbf52fe2f44238b669187f6b7ce94
msgid "By using the `chef_handler <https://docs.chef.io/resource_chef_handler.html>`_ resource in a recipe, similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:25
# a13ad1837ecf40be8f223826ca729c46
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/resource_chef_handler.rst:106
# 4edff718e3964fab9e474d1f5418fb26
msgid "**Register the JsonFile handler**"
msgstr ""

#: ../source/resource_chef_handler.rst:110
# 734a3e9665e24be882cc5f38e4af1da8
msgid "**ErrorReport Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# d941e8673e3f4dc783df5c87127bb4b1
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler may be enabled in one of the following ways."
msgstr ""


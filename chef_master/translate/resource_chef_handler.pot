# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-04-28 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_chef_handler.rst:8
# 2a8d64d5964140da9053990eb6f84aa6
msgid "chef_handler"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
# 2170d91dba5e45aca7eac7c7df2c69a9
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:6
# 894cf857a8e9404692d6985d6978deb5
msgid "The |lwrp chef handler| resource is used to enable handlers during a |chef client| run. The resource allows arguments to be passed to the |chef client|, which then applies the conditions defined by the custom handler to the node attribute data collected during the |chef client| run, and then processes the handler based on that data."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:8
# fde9250d1aab43439f3dd02510a23ec1
msgid "The |lwrp chef handler| resource is typically defined early in a node's run-list (often being the first item). This ensures that all of the handlers will be available for the entire |chef client| run."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:10
# 4fab22bd54c14b1887b36a47d3e7ba90
msgid "The |lwrp chef handler| resource is included with the |cookbook chef_handler| cookbook. This cookbook defines the the resource itself and also provides the location in which the |chef client| looks for custom handlers. All custom handlers should be added to the ``files/default/handlers`` directory in the |cookbook chef_handler| cookbook."
msgstr ""

#: ../source/resource_chef_handler.rst:15
# d553300cdc9e40b78fda43a9b813a28f
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# e733438a13b44a8fbbdaef937c42423b
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 912208c5f61d4e4da08d3f04618fa249
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_resources/includes_resource_chef_handler_actions.rst:11
#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:11
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
# a2edd6c18fd84710aac356887c50281c
# 0a3fa25f917a44acb7979f74fb668b42
# ef3a98cea11d4eaf90eb613ba4deab50
# 9f5aff17175b41f1a576ba8474d3dcb6
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 67d76d56686b4cce81acd4e36e22c5f2
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 9eefed0c75554a5185938cee1f844b32
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 12e22fa3929a45a5bc883aaa65678890
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 4de246f2f59446ccbea8f3d2e4a8bd69
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 10c1c3be59c3461abc9bb1f874a642a1
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# f0dc928888584e80a9e933cc86c05d3f
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/resource_chef_handler.rst:19
# 021475e85a7748dfa1f31430cf8a1b3a
msgid "Exception / Report"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 24d1cae8292548af98d1e22b7aaad6bf
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 0bf7a0d85af045da9e4ca1f669dcd144
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# 0844e39c87884f7886922e79455ff66f
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# fd2fa11efd034f15b76dcb27490b55e1
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 7e6e2579a9c94e9ba99c9f4c6c19227d
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# a73f23c7ed6240e381235719bb1e5ac4
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# 24953fbfccfe4634a454e98f166c86df
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 06d8f1b3c787491cab3fceb0b75b2fbf
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# cd27ed63d29c4a48bf84dfb08907615e
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 84ff778ab587409c9d5c29df3746f9c0
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# 7f9e22f764a14d53bc09490b6b2e5edb
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# b1bedd36291141e5990dc6b11b16c898
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/resource_chef_handler.rst:25
# 8dc4f038729a4cfea6b53f8ac6cf8dbb
msgid "Start"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# eb5095c50ca24e3e85114f553255bba6
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# 3479237b8825418cbb08b32299bec0df
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# 63f429e58d844c9db504a99227e0eaaa
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 6c4c0434b981425bb24565d0e32babd4
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 0b30c871a482443997ece5468d6a71ba
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:31
#: ../source/resource_chef_handler.rst:48
# d1ef4f38d62b408c84a06fc646731023
# 5b2d5b1994df415e9ebb1c20e6cad7fe
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_syntax.rst:4
# 49c123af1c7747b7a80af510889e4df9
msgid "The syntax for using the |lwrp chef handler| resource in a recipe is as follows:"
msgstr ""

#: ../source/resource_chef_handler.rst:35
# 24a423493d1f44fd9602a4e97b3345db
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:4
# a8b2b8ee64974701b58afdf63fc30ddb
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:10
# c12a495e48874b8e816761aad365a894
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:12
# 58a82d00e42e4055a08b2c1c0a79f0e0
msgid "``:enable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:13
# 83567806333d4a4fab1c40a14e7453e4
msgid "|resource action enable chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:14
# 82d9a54855824285a4984677e6435f12
msgid "``:disable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:15
# 4d5a274422ca47da83c4048f3ed27004
msgid "|resource action disable chef_handler|"
msgstr ""

#: ../source/resource_chef_handler.rst:39
# a3258d89dc6c417b8ce05005f07a128b
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:4
# 9b47c2195cfe45529101c55d078d64fb
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:10
# e8db2ec4019b47d98b7bbb7ca04b6ba6
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:12
# e65f4b70dd2a4b96b3c77e1c3edf4602
msgid "``class_name``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:13
# 06a89a82c94146a2b850804339f5c718
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:14
# 427bec18634342a7bc276f84ee297900
msgid "``source``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:15
# 6140e479efca47c8b7a4e1d544c05266
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:16
# fa0b4252f2bd4faca8b5f18e052e3fd2
msgid "``arguments``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:17
# a931de18cbd548b9987b62eebcc0feb8
msgid "|arguments chef_handler| Default value: ``[]``. For example: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:22
# 0cd54c33b77b4c30b2374312794aee43
msgid "or: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:26
# f6548a0765db44cd9f757be75c20b4a6
msgid "``supports``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:27
# ec9a06a4447145909f2a14c9a44c9324
msgid "|supports chef_handler| Possible values: ``:exception``, ``:report``, ``:both`` (exception **and** report handlers), or ``:start``. Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/resource_chef_handler.rst:44
# 3e442254eeeb49f3947fc9acb8f5af5c
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# 24e46d7bbc024a3bb6cfff07cacaac6e
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# bcb4f9cba8cc4c22bd0a38813557bfff
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# ee2acc81468047c3960ac1f9d8b847a4
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# df66bcd06169480ca0d0da873e028e9c
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# 183b67111cfb4efebc305dc52477c1fa
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# f9b698087e0148e98fee26415a395233
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# a0981ba2d3984b97aee88170987097bb
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# c9e51a62871a4d7aa9590052ac4f881f
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 16cdbd6e9d654e449055314f9fb9b2f6
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# e9364244a4064ae3aafe544e502c86ed
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# 3bd29c9aa56345619d494c6c61d3fb19
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# cee68c1bfc9340f18f8f1109bbe08482
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# bda93f78d31a45b9aa3c19fe5aaba487
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/resource_chef_handler.rst:52
# deb11a61cea74863bc5a7da8b0055c78
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 5139a071be1f46bfa8d0dfbab81395c0
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# 9132f98da03a49c6bda75d9323c49294
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 11a2576c021940f98b3d319a892871a0
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# dbe67510259f4e25a71d339521029a9c
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/resource_chef_handler.rst:56
# bf24aa1630524bb7a8c5eda21ef4221c
msgid "Optional Interfaces"
msgstr ""

#: ../source/resource_chef_handler.rst:57
# 364c578c4370415c82aa741826cdc383
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/resource_chef_handler.rst:60
# 34a8e658cf794cd79347d25d6d96752a
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# 22dbd2e60d8b421daf2ba5bc2d225386
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:64
# a15f6f51824d488caf1cc1cc9692468e
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# e21d5f5406b24dc1aa330e4202bdee44
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/resource_chef_handler.rst:68
# a63a747cfaa44319bc49537a08ede693
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 462eb985d6b24fdaa62a0d64b97bd950
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:72
# 835b0f3e98064e8d937d07f2787310e6
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 1a23a388e55b47e8848395e436665d3a
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 1ee5b57a847f462ead7b2860b3957dea
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# af68f1d6f553442a8b39f89bab31269e
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# b0108fac7bb14fe2a87d5a32f4a6fd21
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# e648f8c6edd84eecb3cf23109766c7aa
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# d44b32fce4ff440788a3a26e2a334350
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 50b7d9df3fc14444a5c2f964105f9d70
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# e4ba7db3d9cc470690731724a1050fc5
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# 6535966540ef4f0f82a32ea70c2aac3a
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# f4a353e9d34445ecbfae6cdeb1cd1632
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# c0919dce5e334d9b93fe14d35ed28fd6
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 24a4c9e0d89b4fbeaa51c46ce2d504e3
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 177cc98aecb74beda0e5351ca2bc456f
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# e0abc9a4f1bd46448de290b36c795805
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 62b4e4d11ce04b19b78359ab4a41105d
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# f64f7242e4404c81b272fa2a1167d25c
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# f1134fcd52294934872d6b2272288361
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 5fdcd5ad48ee41989e16d447cfce248d
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# af8ef5fc36bf4748b683e22d3a016846
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# a53f354e84ae4a5a9a2e9eaa531aab61
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# caf7c09296a44e32a61993b478c6999c
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# de5931f482324aa8b97ff2e4268bc909
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# bb9cd0cc6e654d3a861736eec7d695e6
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 7f72929c0c624fbdb41995890d6c4da5
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# 71d47cbe7dfb4d8e9d067a49627fa9de
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/resource_chef_handler.rst:76
# 189be7ba6d784265af7ddaa32d70e959
msgid "Examples"
msgstr ""

#: ../source/resource_chef_handler.rst:77
# 93fae6e49c60434db5caba8450eda954
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_chef_handler.rst:79
# 1147e610b21e4037995f349e17a04615
msgid "**Enable the CloudkickHandler handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# e7b706e40cbe4654be72ddcb74223872
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/resource_chef_handler.rst:83
# 7368e528035c43cf86ebef0eaf2f5896
msgid "**Enable handlers during the compile phase**"
msgstr ""

#: ../source/resource_chef_handler.rst:87
# 7fa65500e6e7450daf4d7735747f8bb8
msgid "**Handle only exceptions**"
msgstr ""

#: ../source/resource_chef_handler.rst:91
# ef4193babb33485bb5c4160f0920d694
msgid "**Cookbook Versions (a custom handler)**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# dd60b8ae2d0040f49d4094d9d1d41692
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/resource_chef_handler.rst:95
# b35155d7ed254aa9b1a0099f5984ef12
msgid "cookbook_versions.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# 94ce5e2683ce4f138a1cb8b2c2dfd4b9
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/resource_chef_handler.rst:99
# 1ab3b62c41c949c2afd57a22505aa0c6
msgid "default.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 9fbb4771c0d84092aff009596b2a19fc
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 976d5f66d9534aa9b76cae43e42de65f
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/resource_chef_handler.rst:103
# 2232aa1135c641d8985bec815fa08b17
msgid "**JsonFile Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# e7748b01b8ac4bc487a947b011fe1072
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# 298c11b4a29b461ca534f7f82a506f67
# 122e3f6efb70490e9c817f36ae785c7b
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# de4f1f94213246a2a2e446fd7364547a
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/resource_chef_handler.rst:107
# a439ad9096224c68aa1d6a82414a5552
msgid "**Register the JsonFile handler**"
msgstr ""

#: ../source/resource_chef_handler.rst:111
# ead6540f686a48348d9193c467aea96e
msgid "**ErrorReport Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 1eda0e96b1ed46c980405deacfb74999
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-28 12:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_chef_handler.rst:8
# 6ca917803e414197971f5536fb450479
msgid "chef_handler"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# 661aa38e733d43daa807ef3c6331454c
msgid "A `resource <http://docs.chef.io/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.chef.io/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:4
# 66c444bd19ed4dfda3d7e84e8594c5b4
msgid "Use the |lwrp chef handler| resource to enable handlers during a |chef client| run. The resource allows arguments to be passed to the |chef client|, which then applies the conditions defined by the custom handler to the node attribute data collected during the |chef client| run, and then processes the handler based on that data."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:6
# b2e3a9d4564a4fc3b88e245ee2a6e85a
msgid "The |lwrp chef handler| resource is typically defined early in a node's run-list (often being the first item). This ensures that all of the handlers will be available for the entire |chef client| run."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:8
# 8c7e21b988ed48eb808a3b01cb2f1968
msgid "The |lwrp chef handler| resource is included with the |cookbook chef_handler| cookbook. This cookbook defines the the resource itself and also provides the location in which the |chef client| looks for custom handlers. All custom handlers should be added to the ``files/default/handlers`` directory in the |cookbook chef_handler| cookbook."
msgstr ""

#: ../source/resource_chef_handler.rst:15
# f50e102f45e0447d8a3a6326c35d59d0
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# dd6ef153a7e44278be8b21344819487b
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 1a3c9cbea076482b9c9d007147b6ed66
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_resources/includes_resource_chef_handler_actions.rst:11
#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:11
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
# 08d9f8aeb0f54042bf2eb8e362d8e941
# fd0af5870dfe4be285abc781f24421a1
# ba5a30cbe67647a58b65c26428692e86
# f535a04c05234252a79426e8d7a0d7d7
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 6e0856f5930145b787314459c405f623
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# 70efb770daea49aeaf0ef13a538cdda9
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# efc9c7afdf044375a1b68efa0063bef7
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# f97b0867af7c4dfabce1e8082af54a14
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 92aa160a10a246efa200c14cb4bcdfd5
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# bfa7ef70070349799f16f0d49325598f
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/resource_chef_handler.rst:19
# 6bfbdfe4fbac470ea483fabae27433dd
msgid "Exception / Report"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 1f69020bda2e4b84a071ec5ba1dd0475
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 60410c2d3dc347d7bcca40e199aa1728
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# edaf949cba28484ea3ee6e55239dd99c
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# bcb70307d2274648927cb626d966c2dd
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# e5f6143050494e809d12143d5ab2d8a1
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 93ff61053cef41b49f1bf7c95d11acba
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# 2c0abd4334d94275816598c384f0e00e
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 6638260233b046b18ec8fc931e8e597e
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 99f288a3e93b46329767be5b92c310b3
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 96af8378821843c4af0c24b2d11652e8
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# 0b55138aff4c4cad9d151994487bce0d
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/resource_chef_handler.rst:25
# 752fab3aaf5b44df90a506ec522d50e1
msgid "Start"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 23ccbb9a77f84b378ee123e909b8cf59
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# f47f32ccd4d54041965d3da2a8cbc7a2
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# afa7c73cab844e0385072bf63044ba64
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# 74277ffd710c491ca260e4ac11bbfae8
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# ea7a1eb7f13a4100a11ef317f03bc9c3
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:31
#: ../source/resource_chef_handler.rst:47
# 3ec161fe36194273b7d7a8971a9fa102
# 448ded6adc594612b6c515ea3ad9a0e8
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_syntax.rst:4
# d315dccf613143188a620591d3d06790
msgid "The syntax for using the |lwrp chef handler| resource in a recipe is as follows:"
msgstr ""

#: ../source/resource_chef_handler.rst:35
# 017cbc26be1b446094abc18b0244489f
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:4
# 06d96b9c234a4329a83882a494be0c1e
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:10
# 922e1d2e490b487cb21c5297e28aafa8
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:12
# ec40880ee6e942e09de1f8162a09b6ce
msgid "``:enable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:13
# 32d8572c06e84994ae1228bdedcaf31c
msgid "|resource action enable chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:14
# 48f2f04a3d9b45b39f45707e43485933
msgid "``:disable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:15
# 668aaa75fe984a20b91c61804328308a
msgid "|resource action disable chef_handler|"
msgstr ""

#: ../source/resource_chef_handler.rst:39
# 870b87a6cbd04d5a8d474ada8d831920
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:4
# e9a88319f69b4b378ef13617eed36d73
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:10
# a128dbb7d9974d5ab2ee1b7095b6bfd0
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:12
# ca88a0d280cc41b299235bdcc2024a99
msgid "``class_name``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:13
# 1205b85855234ecc8192de3943843123
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:14
# 1085c8546ab34707813dadb132ec3ee9
msgid "``source``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:15
# 3c22f5190aba4e4392dbafc8b30ea7a9
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:16
# cea56eb4d56643db9b5e3ca4f7650331
msgid "``arguments``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:17
# d6593e5dc6524e2da0dc961b35f1ff3d
msgid "|arguments chef_handler| Default value: ``[]``. For example:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:23
# 66b89073af8b4be1b14af0abb396e945
msgid "or:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:29
# d9b996474ee64e47999b68a60d0a9a9d
msgid "``supports``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:30
# 62282d3ad36a4139a96f18c1fc2b7f10
msgid "|supports chef_handler| Possible values: ``:exception``, ``:report``, or ``:start``. Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/resource_chef_handler.rst:43
# 8bccb8b8ddac44cfb7a3bad4bc8b8274
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# f58d751da527424995b28c348c1f1504
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# bf16288564604a47afeef01535ae296e
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# 844bb9d259954b45aabb25b5fd0c9440
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# 5af46627db8d42c9afa394b8f4c056c6
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# eb10098581794ed589d295f1a82bb667
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# b048202615834631a6ac94c39b39b628
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# 0ff954691dd24907bea97fa4b4bebd43
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# cad51acfc58c4cefbd724f84dde9bbfd
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 71512e2e23604eed8d5b39b839f1811c
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# 0628e4d69c8e489db550a1530b349293
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# d58684053a134e098043a5d525c446e7
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 137aa42e654e475c997fd5ca01e5d89a
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:50
# a34528df7d4242c39926c925b7a040fb
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/resource_chef_handler.rst:51
# 6824100ddac34c17a02db2b91bf1cacc
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 183a05e6fa214ce784ce6bcf4e91352c
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# a5e65fe4622246ff9a6146a498362d12
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# bb9d4b63e9f040b798458a2db1cd02ab
msgid "The `error_report <https://github.com/chef/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 3476f27ef1ea40d799c8ba456250967b
msgid "The `json_file <https://github.com/chef/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/resource_chef_handler.rst:55
# ba84e31318014164b47dddebd3782cfb
msgid "Optional Interfaces"
msgstr ""

#: ../source/resource_chef_handler.rst:56
# e1c2b11206a54e9ba7a619fee0366282
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/resource_chef_handler.rst:59
# 2da5a028b3f34652a402e1b35da417e0
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# 46bf58b8aacf49539d1bc42238d885b3
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:63
# 97163b431be741b4906c500b1a134060
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# 2645673e22cc4e98855b31a9fc585463
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/resource_chef_handler.rst:67
# 9a4eccb5da0040ac9217d55e2b2e6f4b
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# a2819e74abfa4d32bcd289a972341bac
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:71
# 6f1c3f1b525a49abab1c625bc6efb002
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# bce4592d53ff439b912c54c7bb941e3b
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# b406488ab6b245629fa11d75a856f727
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 66ff26f710c1434bb2ab06f4b018653e
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# 12970cc8b4c44712a47ae2ef3bd59920
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# b4734e589b5949e69474fe6df641a4a1
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 473c0e16367446c28171f40316a70c34
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 60319072e8f14fcc9a1ef39f466a3a36
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 8b09bdba762c427bb625e7d93940a94b
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# fd32b848105d498bb5101af03f0b6d36
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# a9620c1c825a44228dc0e22cebe5d58e
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# e73d7eb5f60848a7915623e0c4ea4824
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# 1c50f06afd0a43aab6b77d3361c4069e
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 5df6a39099a64c8b960b4bb7527647b1
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# 7e44eaaed21c4aad802087f03cbdc340
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 5fd382bb0ed64ce0810b270f418354b0
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# 567b9d0b3a5a450da8c74d55b33a1a02
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# 610233bd9db84928863b09b4116c1f91
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 3208136bd9d2478f8f27bf08762a4d8c
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# cf1430e8a06943639e21ef5e32cde897
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 6097e7f7166445429e92145751c235b7
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# b865bda307e5411da71b123fec9df0e5
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# 78a9c3a63d084301b80b55ad739f3bc8
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 343a704b12a04370bff4e27ed250dd94
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 4dc9635c9cc44d638b415034b279225e
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# beb9bc9526824f9992ba636afa82df08
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/resource_chef_handler.rst:75
# 0e6f8709f8074078b22994e060d7c980
msgid "Examples"
msgstr ""

#: ../source/resource_chef_handler.rst:76
# 91716f9104c14ccd8adca555e745bd35
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_chef_handler.rst:78
# 136eeb8ad023427d812d2781f469dc98
msgid "**Enable the CloudkickHandler handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 3f712d5245e6420282759a2398d1c24a
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/resource_chef_handler.rst:82
# 40aada494ff641028baa01c20f73ad25
msgid "**Enable handlers during the compile phase**"
msgstr ""

#: ../source/resource_chef_handler.rst:86
# 5a8b099fa9db450892d779b53d2a09ed
msgid "**Handle only exceptions**"
msgstr ""

#: ../source/resource_chef_handler.rst:90
# 9ce7adfcd1c9460993b80dcf59dee131
msgid "**Cookbook Versions (a custom handler)**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# eed714fa1d2e4e7fa4dd163aadddbf78
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/resource_chef_handler.rst:94
# ea512e7910224cc0bbd85161ade77899
msgid "cookbook_versions.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# fe228cb2b4ee4cf9a30e24a6e84ff04f
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/resource_chef_handler.rst:98
# b224f453d4b04834892503b448055f63
msgid "default.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 9cc7bd23768643fd8690903c10553136
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# ea27636539a64b3085090c1655b8a51a
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/resource_chef_handler.rst:102
# 22a663ac34954cefa388939f62c0d4b4
msgid "**JsonFile Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# df20d36812904d9a81d99c6e42a5d687
msgid "The `json_file <https://github.com/chef/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler may be enabled in one of the following ways."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:7
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:7
# 527b115e9cbb4523872c83cd19ef4ac0
# 33abe9e66eb54d64a8232bcf70ca5dfe
msgid "By adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:15
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:15
# 653ae36cdf004dc491b4c8c366d238e7
# 7c560674de3640f8a2a9be8fad63ec66
msgid "By using the `chef_handler <https://docs.chef.io/resource_chef_handler.html>`_ resource in a recipe, similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:25
# d25b03aafacc4b6a934bc369163e3568
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/resource_chef_handler.rst:106
# aae5a46273fc4e3d9e9a125c460f4639
msgid "**Register the JsonFile handler**"
msgstr ""

#: ../source/resource_chef_handler.rst:110
# 2573d988cdd241e59901415184d7f5f4
msgid "**ErrorReport Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 6d380c41a27246098c8db84ffbb52791
msgid "The `error_report <https://github.com/chef/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler may be enabled in one of the following ways."
msgstr ""


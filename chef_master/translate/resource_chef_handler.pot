# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-04 15:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_chef_handler.rst:8
# 9522a6accb144ccf88218d94766716b8
msgid "chef_handler"
msgstr ""

#: ../../includes_resources/includes_resource_generic.rst:4
# 438a21b3f64c491f8b7808c647f3d579
msgid "A `resource <http://docs.opscode.com/resource.html>`_ is a key part of a `recipe <http://docs.opscode.com/essentials_cookbook_recipes.html>`_ that defines the actions that can be taken against a piece of the system. These actions are identified during each `chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_ as the resource collection is compiled. Once identified, each resource (in turn) is mapped to a provider, which then configures each piece of the system."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:6
# 930ed5ee86da4bc7a895a3a6f89e8b08
msgid "The |lwrp chef handler| resource is used to enable handlers during a |chef client| run. The resource allows arguments to be passed to the |chef client|, which then applies the conditions defined by the custom handler to the node attribute data collected during the |chef client| run, and then processes the handler based on that data."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:8
# bcf9c93e7bdd4ba885fa950d20486058
msgid "The |lwrp chef handler| resource is typically defined early in a node's run-list (often being the first item). This ensures that all of the handlers will be available for the entire |chef client| run."
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler.rst:10
# 0e3fe9e895d04e529bcbeb8e04307fec
msgid "The |lwrp chef handler| resource is included with the |cookbook chef_handler| cookbook. This cookbook defines the the resource itself and also provides the location in which the |chef client| looks for custom handlers. All custom handlers should be added to the ``files/default/handlers`` directory in the |cookbook chef_handler| cookbook."
msgstr ""

#: ../source/resource_chef_handler.rst:15
# 408efd3ca09c4aabb9bc0ed001f64c06
msgid "Handler Types"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:4
# 0a5645607ddc467bbe129d6d79a474da
msgid "There are three types of handlers:"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:10
# 2b4644badd2746eebd1b49d06af032aa
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:11
#: ../../includes_resources/includes_resource_chef_handler_actions.rst:11
#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:11
#: ../../includes_handler/includes_handler_custom_object_run_status.rst:12
# 0ea5fcb02d28400e8a90b96aa7d0628e
# 4303bd27286c4657a0acd66157893b9f
# d56a9606a5b24bea856fb4e1dffde0a4
# 48c3f309b83046b19f038c9700b2045f
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:12
# 9d827b8123fa453e8dff7dbded8c6bf5
msgid "exception"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:13
# a23cb9a90e6d4d238f1b37d2fe65e6e8
msgid "An exception handler is used to identify situations that have caused a |chef client| run to fail. An exception handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. An exception handler runs when the ``failed?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:14
# 1da2de31061d43699d9370b05593e817
msgid "report"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:15
# 9e7c1722a6e2427f9a0dfbdf69c528c5
msgid "A report handler is used when a |chef client| run succeeds and reports back on certain details about that |chef client| run. A report handler can be loaded at the start of a |chef client| run by adding a recipe that contains the ``chef_handler`` resource to a node's run-list. A report handler runs when the ``success?`` property for the ``run_status`` object returns ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:16
# 0622ef1c58a94c469cb465171e4665be
msgid "start"
msgstr ""

#: ../../includes_handler/includes_handler_types.rst:17
# b5740a90d3e24e33b4704d711e470341
msgid "A start handler is used to run events at the beginning of the |chef client| run. A start handler can be loaded at the start of a |chef client| run by adding the start handler to the ``start_handlers`` setting in the |client rb| file or by installing the |gem| that contains the start handler by using the |resource chef_gem| resource in a recipe in the |cookbook chef_client| cookbook. (A start handler may not be loaded using the ``chef_handler`` resource.)"
msgstr ""

#: ../source/resource_chef_handler.rst:19
# d6e4a62755494463870eabe28e5ee1f0
msgid "Exception / Report"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:5
# 552359aa5c3e4e418a5f06267e3383f6
msgid "Exception and report handlers are used to trigger certain behaviors in response to specific situations, typically identified during a |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:7
# 7bb51db1080a4635ba2e33aef0bb7c46
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef client| run fails."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:8
# b18d8c2286b84e5ea774a6d041b5a343
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef client| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:10
# a3925944b24f4ea5ab1153999a3d956f
msgid "Both types of handlers can be used to gather data about a |chef client| run and can provide rich levels of data about all types of usage, which can be used later for trending and analysis across the entire organization."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:12
# 754cd71a4f8d48d6b25ce63bd74f6f61
msgid "Exception and report handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:14
# 643c0edc5c344dfeb60ea1908f456817
msgid "By adding the ``chef_handler`` resource to a recipe, and then adding that recipe to the run-list for a node. (The ``chef_handler`` resource is available from the |cookbook chef_handler| cookbook.)"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report.rst:15
# c9536325c77044f28a0ad98aedb3b1b4
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``exception_handlers`` and/or ``report_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:5
# 36ba798db2b44d7ab2ab7e607fc9e450
msgid "The |lwrp chef handler| resource allows exception and report handlers to be enabled from within recipes, which can then added to the run-list for any node on which the exception or report handler should run. The |lwrp chef handler| resource is available from the |cookbook chef_handler| cookbook."
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:7
# 0aff0a73b2344762b902868d006e1b5a
msgid "To use the |lwrp chef handler| resource in a recipe, add code similar to the following:"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:16
# 40a44fdbd14447c184eb6407fd03e542
msgid "For example, a handler for |growl| needs to be enabled at the beginning of the |chef client| run::"
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:20
# ac90217076444eb0a25c963bddb4b4c1
msgid "chef_gem \"chef-handler-growl\""
msgstr ""

#: ../../includes_handler/includes_handler_type_exception_report_run_from_recipe.rst:22
# 15a47e43901349b082fe3aba51776f4e
msgid "and then is activated in a recipe by using the |lwrp chef handler| resource:"
msgstr ""

#: ../source/resource_chef_handler.rst:25
# ec2180a2a2314bb893e11e6133a60483
msgid "Start"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:5
# 619e1fcaa8ce488fa084c65ff521aa91
msgid "A start handler is not loaded into the |chef client| run from a recipe, but is instead listed in the |client rb| file using the ``start_handlers`` attribute. The start handler must be installed on the node and be available to the |chef client| prior to the start of the |chef client| run. Use the |cookbook chef_client| cookbook to install the start handler."
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:7
# 409471b068c44efab54e8715a99a5f68
msgid "Start handlers are made available to the |chef client| run in one of the following ways:"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:9
# bd7e642e6b94420d852bdb2a93a5a435
msgid "By adding a start handler to the |cookbook chef_client| cookbook, which installs the handler on the node so that it is available to the |chef client| at the start of the |chef client| run"
msgstr ""

#: ../../includes_handler/includes_handler_type_start.rst:10
# e88485816f5f4e5d90defacc7ee21472
msgid "By adding the handler to one of the following settings in the node's client.rb file: ``start_handlers``"
msgstr ""

#: ../../includes_handler/includes_handler_type_start_run_from_recipe.rst:5
# 36fc777af3224b8fa14a527e532b9cb8
msgid "The |cookbook chef_client| cookbook can be configured to automatically install and configure gems that are required by a start handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:31
#: ../source/resource_chef_handler.rst:48
# 432c46cf95fc49ab8cc5a61576256922
# 3c030d61b7544eeb9b9c469c33f3aca9
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_syntax.rst:4
# 29aaf4a5917745b0be1fdb4c00328396
msgid "The syntax for using the |lwrp chef handler| resource in a recipe is as follows:"
msgstr ""

#: ../source/resource_chef_handler.rst:35
# 7053f9dfe9c8473db003376aaf461b8e
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:4
# 59e29e7b979d4265847ba73eedd0d1bb
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:10
# 93a2f6b223864151b4918137533f6f40
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:12
# 451d74f2bd334978a1d51690b77c6e20
msgid "``:enable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:13
# ec3fe91dd5a4467598032294693063c7
msgid "|lwrp action enable chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:14
# 7c94f9a0700f4a6e8b4a00e1f2911f4d
msgid "``:disable``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_actions.rst:15
# c7c53594d6924545abebd6b6d8c3ec3c
msgid "|lwrp action disable chef_handler|"
msgstr ""

#: ../source/resource_chef_handler.rst:39
# baa17ff5b7514c09963b3d1e49e2448b
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:4
# 7b8fd9a33cb1411bb8071fcb8721a626
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:10
# 80a93ead5580410898b72a05bf51ee19
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:12
# 63aa79581f994e60a82f5f1e81703d9b
msgid "``class_name``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:13
# ef0c93b6c37a46e597701d86264c172a
msgid "|name class_chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:14
# 49a5115f0c3947ffad75ee299a880422
msgid "``source``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:15
# ca854ce317bb4ba38bb763da39d12892
msgid "|path chef_handler|"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:16
# a9fd8c476b4648b1be56c1c333261e90
msgid "``arguments``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:17
# ba7b18fb290c45ab832f0da7b69b09fa
msgid "|arguments chef_handler| Default value: ``[]``. For example: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:22
# 22d65800f3c24df1af75f9e662dbc38d
msgid "or: ::"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:26
# a9a2e9b802e845a6a2d0b71dfb8cf697
msgid "``supports``"
msgstr ""

#: ../../includes_resources/includes_resource_chef_handler_attributes.rst:27
# 5a315d00708d4b86a3296cf8cdccaf25
msgid "|supports chef_handler| Possible values: ``:exception``, ``:report``, ``:both`` (exception **and** report handlers), or ``:start``. Default value: ``{ :report => true, :exception => true }``."
msgstr ""

#: ../source/resource_chef_handler.rst:44
# 47d44bf6c91f406fbb9a86a2391c4aca
msgid "Custom Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:5
# 1f147e14656d426fa7ea810a2d06c914
msgid "A custom handler can be created to support any situation. The easiest way to build a custom handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:7
# ab2f8dbe934f4ad3b3946479fc68253f
msgid "Download the |cookbook chef_handler| cookbook"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:8
# d3b2494a7abb41cb92a57a351668c05d
msgid "Create a custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:9
# b22e5b52483e47888c07859910ef2c14
msgid "Write a recipe using the |lwrp chef handler| resource"
msgstr ""

#: ../../includes_handler/includes_handler_custom.rst:10
# 4d30da39b78143c39dd6995e8abf2b6d
msgid "Add that recipe to a node's run-list, often as the first recipe in that run-list"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:4
# aea69eeae69848519fccc532abc32a90
msgid "The syntax for a handler can vary, depending on what the the situations the handler is being asked to track, the type of handler being used, and so on. All custom exception and report handlers are defined using |ruby| and must be a subclass of the ``Chef::Handler`` class."
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:18
# 634456c87e2c47048c698f76c093f89d
msgid "where:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:20
# b3839a8ccba64dd6b8993131f3560b34
msgid "``require`` ensures that the logging functionality of the |chef client| is available to the handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:21
# 7620ff7958034b6b905b8336063a9f35
msgid "``ModuleName`` is the name of the module as it exists within the ``Chef`` library"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:22
# f580846392594e6ab46973a49a438e5b
msgid "``HandlerName`` is the name of the handler as it is used in a recipe"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:23
# cc2518acd9a74f3bb1a34c7659556a06
msgid "``report`` is an interface that is used to define the custom handler"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:25
# 856e7fb5b95648d09ffddb162d49a759
msgid "For example, the following shows a custom handler that sends an email that contains the exception data when a |chef client| run fails:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_syntax.rst:48
# 67a8a0ca0ea5469abfcc0fdfbdbb647c
msgid "and then is used in a recipe like:"
msgstr ""

#: ../source/resource_chef_handler.rst:52
# ff7ec917e91a45ca824829007028b5c6
msgid "``report`` Interface"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:5
# 4bd2708ff0814dd4acadbe3a7328b554
msgid "The ``report`` interface is used to define how a handler will behave and is a required part of any custom handler. The syntax for the ``report`` interface is as follows:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:13
# 0824c3fb3fcc461dbebdde2e97aa8432
msgid "The |ruby| code used to define a custom handler will vary significantly from handler to handler. The |chef client| includes two default handlers: ``error_report`` and ``json_file``. Their use of the ``report`` interface is shown below."
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:15
# 331e9db4d53f47b5b76987bb82163a6c
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_report.rst:33
# 2256e64e4fe04d51afd2531afd875ac7
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler:"
msgstr ""

#: ../source/resource_chef_handler.rst:56
# 073c6b52d5444d89bcb344b817937a73
msgid "Optional Interfaces"
msgstr ""

#: ../source/resource_chef_handler.rst:57
# 6d1ba51c1ed54a4eaba443fc8ea2083f
msgid "The following interfaces may be used in a handler in the same way as the ``report`` interface to override the default handler behavior in the |chef client|. That said, the following interfaces are not typically used in a handler and, for the most part, are completely unnecessary for a handler to work properly and/or as desired."
msgstr ""

#: ../source/resource_chef_handler.rst:60
# 295ba7aae56a4c2dbd6d9ca0bd4de8a8
msgid "``data``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_data.rst:5
# 422ff6e9ac334f5a9a818d79cbffd9c2
msgid "The ``data`` method is used to return the Hash representation of the ``run_status`` object. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:64
# f98bfbecb68547cebe59a286ef6f0119
msgid "``run_report_safely``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_safely.rst:5
# f1343835f2ef4687acd7bd2ffcc0df6e
msgid "The ``run_report_safely`` method is used to run the report handler, rescuing and logging errors that may arise as the handler runs and ensuring that all handlers get a chance to run during the |chef client| run (even if some handlers fail during that run). In general, this method should never be used as an interface in a custom handler unless this default behavior simply must be overridden."
msgstr ""

#: ../source/resource_chef_handler.rst:68
# 045a4645852b44709426ae0b16b16c19
msgid "``run_report_unsafe``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_interface_run_report_unsafe.rst:5
# 4681d8722f6247358048a0511110e0b0
msgid "The ``run_report_unsafe`` method is used to run the report handler without any error handling. This method should never be used directly in any handler, except during testing of that handler. For example:"
msgstr ""

#: ../source/resource_chef_handler.rst:72
# f0d4b2cd41cc4a60a3e8e596a61af7df
msgid "``run_status`` Object"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:5
# 54dc5be7305c4aeeb5d125bd634113d8
msgid "The ``run_status`` object is initialized by the |chef client| before the ``report`` interface is run for any handler. The ``run_status`` object keeps track of the status of the |chef client| run and will contain some (or all) of the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:11
# 8c12eb2e298047818f4684dc3f4397b0
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:13
# 610da0288a474139af6abc969eb6e1c7
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:14
# e5588d83597c4bbcbb12b650730a8103
msgid "|handler method_all_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:15
# 013444fb5b8e4f21bd77cc2f26c2ab84
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:16
# 2d7053cf33ac4c508442983d83297a2f
msgid "|handler method_backtrace|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:17
# 208e3e7797cd469f9bdac1b432b0f056
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:18
# 1cab244016c440db9336113ca1e59748
msgid "|handler method_elapsed_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:19
# bc2c023ba6cd4c0c83a86bf293545f5f
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:20
# c3ebf309a5a04be4b305357dadeeb039
msgid "|handler method_end_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:21
# 7fa6d68b689f4be095a50a22c60f5eed
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:22
# fbab2f1f828a4f19adc2db2cca39384d
msgid "|handler method_exception|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:23
# 0b6f453fd0d84e6b9d30a7f98bcfc021
msgid "``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:24
# 68ecb8aa74cf47988dadd4a0b31f41f5
msgid "|handler method_failed| An exception handler runs when the ``failed?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:25
# 4fa94ae6e02243f1953507a494b9e128
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:26
# 64536bc6b3cd4c26a00660456aaa9392
msgid "|handler method_node|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:27
# e7dcc13455e0477bb901209c9d15df95
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:28
# 823e8c056c08409cac11d76e9aac7f5f
msgid "|handler method_run_context|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:29
# 16460de8e81d46939c195aad20822ecb
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:30
# 2a2df09424b449fab6a80e9a20de5115
msgid "|handler method_start_time|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:31
# 0bf840c55a4d46fdb4f416eb16d65853
msgid "``success?``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:32
# 4b0d8980d4cf4ca9a3e585e4b7abdde6
msgid "|handler method_success| A report handler runs when the ``success?`` indicator is ``true``."
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:33
# 1de94490c94b4e308e89e2950c2cd0af
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:34
# 97079f1d158a4b428ce63d7dcd3c63bc
msgid "|handler method_updated_resources|"
msgstr ""

#: ../../includes_handler/includes_handler_custom_object_run_status.rst:36
# d721611c375d4bf6b8d1a4740000e568
msgid "These properties are not always available. For example, a start handler runs at the beginning of the |chef client| run, which means that properties like ``end_time`` and ``elapsed_time`` are still unknown and will be unavailable to the ``run_status`` object."
msgstr ""

#: ../source/resource_chef_handler.rst:76
# 75002523b27f437abfbb62b03de23910
msgid "Examples"
msgstr ""

#: ../source/resource_chef_handler.rst:77
# 3d951c4bd5604f77b3f639469b99eda7
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_chef_handler.rst:79
# 1e095097956d4a86ac21ba0ac1ea9899
msgid "**Enable the CloudkickHandler handler**"
msgstr ""

#: ../../step_lwrp/step_lwrp_chef_handler_enable_cloudkickhandler.rst:3
# 05e539c2c7c64674865981e2ab930526
msgid "The following example shows how to enable the ``CloudkickHandler`` handler, which adds it to the default handler path and passes the ``oauth`` key/secret to the handler's initializer:"
msgstr ""

#: ../source/resource_chef_handler.rst:83
# 97471a35dea04729a50c09527338ed77
msgid "**Enable handlers during the compile phase**"
msgstr ""

#: ../source/resource_chef_handler.rst:87
# 7a1a504c70564735b5403d7973e5a727
msgid "**Handle only exceptions**"
msgstr ""

#: ../source/resource_chef_handler.rst:91
# 849ee5e7b4a54d4687d575fbaf497e56
msgid "**Cookbook Versions (a custom handler)**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions.rst:5
# 6877b1b1abad4b8b9d4a99f3c091e361
msgid "Community member ``juliandunn`` created a custom `report handler that logs all of the cookbooks and cookbook versions <https://github.com/juliandunn/cookbook_versions_handler>`_ that were used during the |chef client| run, and then reports after the run is complete. This handler requires the |lwrp chef handler| resource (which is available from the |cookbook chef_handler| cookbook)."
msgstr ""

#: ../source/resource_chef_handler.rst:95
# 87a1a82cc1ea4c2da3727438702b25ff
msgid "cookbook_versions.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_handler.rst:5
# a48783e1157c4fa2b1d16ae01d054ac9
msgid "The following custom handler defines how cookbooks and cookbook versions that are used during the |chef client| run will be compiled into a report using the ``Chef::Log`` class in the |chef client|:"
msgstr ""

#: ../source/resource_chef_handler.rst:99
# aef88c9fe05e4085806bd28a3d69faeb
msgid "default.rb:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:5
# 4dab2df30628459cb8e9674871ebb2da
msgid "The following recipe is added to the run-list for every node on which a list of cookbooks and versions will be generated as report output after every |chef client| run."
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_cookbook_versions_recipe.rst:25
# 4acf34ddbf784222827005dec134a0a9
msgid "This recipe will generate report output similar to the following:"
msgstr ""

#: ../source/resource_chef_handler.rst:103
# dd0a5a9b6fc142e28ae5b2181b60de7f
msgid "**JsonFile Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:5
# 7cbddd987b394593b3fe98241a4a1a6f
msgid "The `json_file <https://github.com/opscode/chef/blob/master/lib/chef/handler/json_file.rb>`_ handler is available from the ``chef_handler`` cookbook and can be used with exceptions and reports. It serializes run status data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:13
#: ../../includes_handler/includes_handler_custom_example_error_report.rst:13
# f818e3120ae94fedbff59afc71cb5aad
# a97fb95ab8d944e4987eb89b48449a60
msgid "and then is added to a recipe:"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_json_file.rst:23
# 71fbbdb2bc17436b80702d7050e0affc
msgid "After it has run, the run status data can be loaded and inspected via |ruby irb|:"
msgstr ""

#: ../source/resource_chef_handler.rst:107
# 3bbb9187e4d0495c9a7654b5b74d338a
msgid "**Register the JsonFile handler**"
msgstr ""

#: ../source/resource_chef_handler.rst:111
# 52bdf963a99046d596daddc779100772
msgid "**ErrorReport Handler**"
msgstr ""

#: ../../includes_handler/includes_handler_custom_example_error_report.rst:5
# 5eb9226d6fc24261be957b5db9106f11
msgid "The `error_report <https://github.com/opscode/chef/blob/master/lib/chef/handler/error_report.rb>`_ handler is built into the |chef client| and can be used for both exceptions and reports. It serializes error report data to a |json| file. This handler needs to be enabled by adding the following lines of |ruby| code to either the |client rb| file or the |solo rb| file, depending on how the |chef client| is being run:"
msgstr ""


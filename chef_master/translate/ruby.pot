# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:52-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/ruby.rst:8
# 6f1f17e7d5a14e3e8e5dafd7a18b2b00
msgid "Just Enough Ruby for Chef"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 5b0401978bf74b0c86e3230ffe1aab0c
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# ba4254e276924d958116b2e382dd7daa
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:5
# 43fe6ec6b49b4d9fb559d3a6a9cc943b
msgid "Many people who are new to |ruby| often find that it doesn't take very long to get up to speed with the basics. For example, it's useful to know how to check the syntax of a |ruby| file, such as the contents of a cookbook named ``my_cookbook.rb``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:11
# cae931278e9e444a8140ce1ad5da25cb
msgid "to return:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:17
# 599bcfab340b4fd9bfd7a6dfa5d089f3
msgid "Here is a quick rundown of some basic |ruby| commands."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:23
# 2144d12401a8400193c7e06a0b4f13b5
msgid "Anything after a ``#`` is a comment."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:34
# 4b669667daf84e439030d3296b0616af
msgid "Assign a local variable:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:45
# 5428f084ca7542a695eeda1c69af89f3
msgid "Do some basic arithmetic:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:60
# cfdb7a37d63e4ab6b3dc1ffd43b9cad1
msgid "Work with strings:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:74
# 4c03a35d06464e5ba45ca3d54f6ec49c
msgid "Embed |ruby| in a string:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:87
# df72741dcf5e4c7797a0f0f6e933d2a4
msgid "Work with basic truths:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:102
# 0e723ce950d6407aa9dfeb409a21caf0
msgid "Work with basic untruths (``!`` means not!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:117
# d2a2a90ff077457298f9ae73a4fc8ea6
msgid "Convert something to either true or false (``!!`` means not not!!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:131
# 53ed2eeeda174156868fe5f0e52f0eea
msgid "Create lists using arrays:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:150
# c47a63467f134279a9d992a8f6b07010
msgid "A |ruby hash| is a list with keys and values. Sometimes they don't have a set order:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:159
# 3c73cf89f76042e3ab7563279ece262d
msgid "And sometimes they do. For example, first name then last name:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:175
# f0206dacc5bd450d95e05e99d1c3d24d
msgid "Use |perl|-style regular expressions:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:190
# cdc1eb7f5deb4373b649940b26435d32
msgid "Use conditions! For example, an ``if`` statement"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:202
# ba743182555d46d7a635edd64bd3ec47
msgid "or a ``case`` statement:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:220
# 948b8eb2378e413f97d644a01ab4bb01
msgid "Define a method (or a function, if you like):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:236
# 91df0676750a4135a7b084d79f670cd6
msgid "Call a method on something with ``.method_name()``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:246
# 3e6881ba3a9a4d50ad7515c95cdb5952
msgid "Use the |ruby| ``File`` class in a recipe. Because |chef| has the |resource file| resource, use ``::File`` to use the |ruby| ``File`` class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:259
# 17c70868c740421e8df164f8c9241f56
msgid "Use ``:include`` to include another |ruby| class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:265
# d97566d019174e9e9a5646d9b6d69cc1
msgid "In non-|chef| |ruby|, the syntax is ``include`` (without the ``:`` prefix), but without the ``:`` prefix the |chef client| will try to find a provider named ``include``. Using the ``:`` prefix tells the |chef client| to look for the specified class that follows."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:269
# c972491c8260469b9c26f305be520607
msgid "To learn more about |ruby|, see the following:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:271
# 54b28af1504f474ba0349bd5403f9078
msgid "|url ruby_lang_org|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:272
# 9525de377d3c44f29614f847aad3604c
msgid "|url ruby_power_of_chef|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:273
# 5020d36d325547d6a43026190513d156
msgid "|url codeacademy|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:274
# cabc91f7330842de852e218addc340ef
msgid "|url ruby_doc_org|"
msgstr ""

#: ../source/ruby.rst:17
# ad0f7f49272c4e3faaa25b18659cc3c3
msgid "``Chef::Log`` Entries"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:4
# 3184cb07f9f24e2398dd421f76eca1f5
msgid "``Chef::Log`` extends ``Mixlib::Log`` and will print log entries to the default logger that is configured for the machine on which the |chef client| is running. (To create a log entry that is built into the resource collection, use the |resource log| resource instead of ``Chef::Log``.)"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:6
# 1c0536febf234326a62dc133b15133d6
msgid "The following log levels are supported:"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:12
# 57578a0f659a4490aed3a9015254a508
msgid "Log Level"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:13
# 7aa7342988e344fbbb75fab2eca22301
msgid "Syntax"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:14
# d0dd5b3012f54ccaae6405e736f21669
msgid "Debug"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:15
# cdaecfcff1064a109cd1fc00142e383c
msgid "``Chef::Log.debug(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:16
# 01a6b21b31e94358a9fa64932392aa65
msgid "Error"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:17
# 0ef2cf0e361c46ada5faeffbe658b8a6
msgid "``Chef::Log.error(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:18
# fcebd393a2d14512bc90d9e1bc2fb2d1
msgid "Fatal"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:19
# c8d09778e13942419d2fc46d6bce9842
msgid "``Chef::Log.fatal(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:20
# fd4bfc70ed664b078c4608f49695b851
msgid "Info"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:21
# bc96f025ea774e50807fed671773b710
msgid "``Chef::Log.info(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:22
# dd4dfde8e45d45c9822e892e9b31a0eb
msgid "Warn"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:23
# 732aba2e2add41368fd24d90248affe1
msgid "``Chef::Log.warn(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:25
# 62ed02d5b97b44bc8a5e4c862695df0b
msgid "The parentheses are optional, e.g. ``Chef::Log.info \"string\" `` may be used instead of ``Chef::Log.info(\"string\")``."
msgstr ""

#: ../source/ruby.rst:20
# 311c123838f6466ab9587d2f48bda0a1
msgid "The following examples show using ``Chef::Log`` entries in a recipe."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:3
# 772da38dc1aa4085bdec90d94c0b9e45
msgid "The following example shows a series of fatal ``Chef::Log`` entries:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:43
# 86ac3d2f3cbb48cc8fec5a968ffaaa15
msgid "The full recipe is the ``upgrade.rb`` recipe of the `chef-splunk cookbook <https://github.com/opscode-cookbooks/chef-splunk/>`_ that is maintained by |company_name|."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:3
# 93604b62bb664a79a606521829164ae2
msgid "The following example shows using multiple ``Chef::Log`` entry types:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:19
# b6183fce580d4ae3a4fad1f1972d4be6
msgid "The full recipe is in the ``ebs_volume.rb`` recipe of the `database cookbook <https://github.com/opscode-cookbooks/database/>`_ that is maintained by |company_name|."
msgstr ""


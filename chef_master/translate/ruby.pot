# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/ruby.rst:8
# 1c49611f9f294f51aa881d79d849a8c4
msgid "Just Enough Ruby for Chef"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 2fc7653b005442c18bbbc6f526d09387
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 872b7af00c054a38904bdc3f7d653436
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:5
# 83bafe0281194aa7b66b6786dfe6cf70
msgid "Many people who are new to |ruby| often find that it doesn't take very long to get up to speed with the basics. For example, it's useful to know how to check the syntax of a |ruby| file, such as the contents of a cookbook named ``my_cookbook.rb``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:11
# a7d1a67e19b24144966bc7a69d9125af
msgid "to return:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:17
# ce8330bc455548bebab7b8ba6fedf956
msgid "Here is a quick rundown of some basic |ruby| commands."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:23
# 1e7d2365e009479e8b3e8b8801d68848
msgid "Anything after a ``#`` is a comment."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:34
# b28e77802c714374b67506b71add2187
msgid "Assign a local variable:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:45
# d2d27fdfb05c496e986d54c24972427b
msgid "Do some basic arithmetic:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:60
# 5e775a361bca4ef4af35b7dc006b8a47
msgid "Work with strings:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:74
# 1821170d1c604493a17ecfba74f8427a
msgid "Embed |ruby| in a string:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:87
# 3bc042ec0b114cf4b0b138da5b0a8695
msgid "Work with basic truths:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:102
# 7cacc7900f674b7885c5922f9774a0c2
msgid "Work with basic untruths (``!`` means not!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:117
# fe410e3877974de897a663ef212ab99b
msgid "Convert something to either true or false (``!!`` means not not!!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:131
# 6fba417917ef4710b7fb05983c1d03ec
msgid "Create lists using arrays:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:150
# 0383623584c04bbbab799b715df06c4a
msgid "A |ruby hash| is a list with keys and values. Sometimes they don't have a set order:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:159
# 8dfcd5e5c39e4f44b3cf040ceb7bc0ff
msgid "And sometimes they do. For example, first name then last name:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:175
# 0e5b32a55f344b69ad30f6563eedd116
msgid "Use |perl|-style regular expressions:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:190
# 27a1751317724f2a9e402c52d6b91aaa
msgid "Use conditions! For example, an ``if`` statement"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:202
# 99e6079d80bf4cbf81ce0961cbb77f5a
msgid "or a ``case`` statement:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:220
# b8125fa24970402dbbda3bf79f6ee023
msgid "Define a method (or a function, if you like):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:236
# 7af0159736384d779b31d5546034e0ad
msgid "Call a method on something with ``.method_name()``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:246
# 7d63ba3b6dc647dfbbc8bdc403bbbc30
msgid "Use the |ruby| ``File`` class in a recipe. Because |chef| has the |resource file| resource, use ``::File`` to use the |ruby| ``File`` class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:259
# dae00cca63ef45a3adbaac1f827e99ca
msgid "Use ``:include`` to include another |ruby| class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:265
# 480535b2329147039cb8b0a7995cbb5c
msgid "In non-|chef| |ruby|, the syntax is ``include`` (without the ``:`` prefix), but without the ``:`` prefix the |chef client| will try to find a provider named ``include``. Using the ``:`` prefix tells the |chef client| to look for the specified class that follows."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:269
# e6e8fd259c8844b79be141de5d7dcd07
msgid "To learn more about |ruby|, see the following:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:271
# 2f52a74defeb4129929148897ddabfff
msgid "|url ruby_lang_org|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:272
# 0d416427247e41a29e0f0305981717b6
msgid "|url ruby_power_of_chef|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:273
# 72d732ea1149465b9da065d011917e81
msgid "|url codeacademy|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:274
# 3b8c60bec8584833b54e1d2ac10d2611
msgid "|url ruby_doc_org|"
msgstr ""

#: ../source/ruby.rst:17
# 4662a33e0c4a41b48257bd3fff7d5c6b
msgid "``Chef::Log`` Entries"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:4
# bfb13e424eaa4e84b7a374c00fdf00f0
msgid "``Chef::Log`` extends ``Mixlib::Log`` and will print log entries to the default logger that is configured for the machine on which the |chef client| is running. (To create a log entry that is built into the resource collection, use the |resource log| resource instead of ``Chef::Log``.)"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:6
# 121a96474af04702a0cef1d0ee9eb131
msgid "The following log levels are supported:"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:12
# ad587f2a78a74b4fa4d38a2cfe1a5c75
msgid "Log Level"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:13
# 079b63fb931f4178be6287bd0e7df482
msgid "Syntax"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:14
# 61a781c2cad44227a9ee8b04a8d9a189
msgid "Debug"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:15
# 9037df3946ec47fd902681084ba982a8
msgid "``Chef::Log.debug(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:16
# 1c3e78ebe1a34fe2b8b455f8d1e1596a
msgid "Error"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:17
# f8a1089b3d62491693eb0fa1a6b79a7c
msgid "``Chef::Log.error(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:18
# 2d68a75f27f64bf8b98595023eff1686
msgid "Fatal"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:19
# 16b08f26f9dd429b82fc9bcddc34d451
msgid "``Chef::Log.fatal(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:20
# acbfb6ddf69f458bb65104e4caa32297
msgid "Info"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:21
# 3cfbe429552c410fa16b461e611e8efc
msgid "``Chef::Log.info(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:22
# b694d4b5a44e4a52b3ab2628b34822d7
msgid "Warn"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:23
# c89d156aa7c74c789a262c8a1841b44e
msgid "``Chef::Log.warn(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:25
# f451d377d055472ca43c8e86a3c715ed
msgid "The parentheses are optional, e.g. ``Chef::Log.info \"string\" `` may be used instead of ``Chef::Log.info(\"string\")``."
msgstr ""

#: ../source/ruby.rst:20
# 2c613c276e8241b48921c1ebe771eefe
msgid "The following examples show using ``Chef::Log`` entries in a recipe."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:3
# f167819923f241d2b8b719e118b1c35c
msgid "The following example shows a series of fatal ``Chef::Log`` entries:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:43
# 7ff91df46c224330a64f48f6b6d10cb8
msgid "The full recipe is the ``upgrade.rb`` recipe of the `chef-splunk cookbook <https://github.com/opscode-cookbooks/chef-splunk/>`_ that is maintained by |company_name|."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:3
# 13c88d00accf40b6908d01ca2eb4f76e
msgid "The following example shows using multiple ``Chef::Log`` entry types:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:19
# 2201ca674f9a466892f7dd7a9cc98c64
msgid "The full recipe is in the ``ebs_volume.rb`` recipe of the `database cookbook <https://github.com/opscode-cookbooks/database/>`_ that is maintained by |company_name|."
msgstr ""


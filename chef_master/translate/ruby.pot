# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-28 12:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/ruby.rst:8
# 9e665b1a45c146289dd1d4b2d46b0f9a
msgid "Just Enough Ruby for Chef"
msgstr ""

#: ../../includes_ruby/includes_ruby.rst:5
# 0de6b53814024c56a121ba12943e436e
msgid "|chef| uses |ruby| as its reference language. |ruby| is a simple programming language that |chef| uses to define the patterns that are found in resources, recipes, and cookbooks. In many cases, just using these patterns is enough to configure, deploy, and manage nodes across the network. |ruby| is also a powerful and complete programming language. You can use the full power of the |ruby| programming language to make decisions about what should happen to specific resources and recipes or to extend |chef| in any manner that your organization requires."
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 9b061c1a68d6414aa49e09ff826c4051
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL (domain-specific language) that is used for specific resources. These settings are saved as |ruby| files and are stored in the |chef repo|. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef repo| is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:5
# eb293a1e065f4bdd832fdafed5b9a456
msgid "Many people who are new to |ruby| often find that it doesn't take very long to get up to speed with the basics. For example, it's useful to know how to check the syntax of a |ruby| file, such as the contents of a cookbook named ``my_cookbook.rb``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:11
# 41dfc67bbdc54cb88d252c84d52a69ba
msgid "to return:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:17
# 63f99df0fa6b42d697888eef14ec108c
msgid "Here is a quick rundown of some basic |ruby| commands."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:23
# 71d8f3806a21428b8a5206f54800b7ed
msgid "Anything after a ``#`` is a comment."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:34
# 8478b102fc5a41828a96c05d63be0056
msgid "Assign a local variable:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:45
# 253c1a59508946de966946b60bbf2d26
msgid "Do some basic arithmetic:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:60
# 1c2a4dbd8e4546098e82017f87b97427
msgid "Work with strings:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:74
# d980347404744d13b6eef4005ee2cf4a
msgid "Embed |ruby| in a string:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:87
# e587a0e4523548189bd1288bdd8e8569
msgid "Work with basic truths:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:102
# fc68fc552e7446c6b2e715a02a354d53
msgid "Work with basic untruths (``!`` means not!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:117
# 21711e9efa87422f8c3da2c3ce423c70
msgid "Convert something to either true or false (``!!`` means not not!!):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:131
# fc116ebf4e4f4662af921538a5c49d26
msgid "Create lists using arrays:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:150
# a130451e9f754a40a89247de696c90e6
msgid "A |ruby hash| is a list with keys and values. Sometimes they don't have a set order:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:159
# 696ab5bbff9041d0bf9b4c5a9d95b3c1
msgid "And sometimes they do. For example, first name then last name:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:175
# 704c37e4f0254abcbe0eabb20dda26c7
msgid "Use |perl|-style regular expressions:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:190
# 3e81208dd49349cb9f9d2e4e522a13c2
msgid "Use conditions! For example, an ``if`` statement"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:202
# 9d58a57f692d442b83aa53bf30c054e8
msgid "or a ``case`` statement:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:220
# 5a21a03c30a4433489f6f3b5a7683a18
msgid "Define a method (or a function, if you like):"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:236
# 08f72a531d204b9b9d897733a494b320
msgid "Call a method on something with ``.method_name()``:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:246
# a14f1509404742c98ab439798ef523de
msgid "Use the |ruby| ``File`` class in a recipe. Because |chef| has the |resource file| resource, use ``::File`` to use the |ruby| ``File`` class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:259
# 5b9b8beb05d24eb5a22f6d42af506882
msgid "Use ``:include`` to include another |ruby| class. For example:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:265
# 0e2122aaed59428f8136a27690349a43
msgid "In non-|chef| |ruby|, the syntax is ``include`` (without the ``:`` prefix), but without the ``:`` prefix the |chef client| will try to find a provider named ``include``. Using the ``:`` prefix tells the |chef client| to look for the specified class that follows."
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:269
# b0cc187078ca4eb386f5ae87bcef09c1
msgid "To learn more about |ruby|, see the following:"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:271
# 04dd3c4cd7e74edca89957a29225edde
msgid "|url ruby_lang_org|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:272
# cec0b4e26c744540916cf6a3ed1acc6f
msgid "|url ruby_power_of_chef|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:273
# e5874114e1a1484182562da725fe8f47
msgid "|url codeacademy|"
msgstr ""

#: ../../includes_ruby/includes_ruby_just_enough.rst:274
# b8f4d8ae5af3444888274faf9ad273e6
msgid "|url ruby_doc_org|"
msgstr ""

#: ../source/ruby.rst:17
# b75b95eab10e4649896b1294b5873c33
msgid "``Chef::Log`` Entries"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:4
# 8a7d0a92f38f4af599324b0ae3cfd376
msgid "``Chef::Log`` extends ``Mixlib::Log`` and will print log entries to the default logger that is configured for the machine on which the |chef client| is running. (To create a log entry that is built into the resource collection, use the |resource log| resource instead of ``Chef::Log``.)"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:6
# 08d58311ec174330bb0dc3c5c7bfa5b4
msgid "The following log levels are supported:"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:12
# 40de73e8dc814554bb0fa4ba695eccb4
msgid "Log Level"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:13
# 3c5d8d1e1a91468486e8fe83395a79ff
msgid "Syntax"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:14
# 2ee9260762714e5a9b3a7634503893c9
msgid "Debug"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:15
# 23f22e3b80fe44609e0066c7acf9afb2
msgid "``Chef::Log.debug(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:16
# cf5e9defaab541508b86bb10ae7d91f9
msgid "Error"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:17
# b0bfaa3fb5c54246869a2620e01e3f79
msgid "``Chef::Log.error(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:18
# 28a8b25d1c184f05b86cb03e4f10c46e
msgid "Fatal"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:19
# 4b2cfa5b4b7940a3a2ec15b7fdc4acd2
msgid "``Chef::Log.fatal(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:20
# c0753aa91d124b0f8bb0a7e84ce97f21
msgid "Info"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:21
# ed0e6462cf6f43749bdd6a1f63c72315
msgid "``Chef::Log.info(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:22
# 985dd8e588ee422ab226ea7a955db093
msgid "Warn"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:23
# 3ba351ab13ab4bca894b4d94276f7527
msgid "``Chef::Log.warn(\"string\")``"
msgstr ""

#: ../../includes_ruby/includes_ruby_class_chef_log.rst:25
# 5b057501fb484c6c94ac9c911f48c828
msgid "The parentheses are optional, e.g. ``Chef::Log.info \"string\" `` may be used instead of ``Chef::Log.info(\"string\")``."
msgstr ""

#: ../source/ruby.rst:20
# e6a62b166a3f437991c609e5d3cca7fe
msgid "The following examples show using ``Chef::Log`` entries in a recipe."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:3
# b0da083097ad40a59c43d9d677df18c8
msgid "The following example shows a series of fatal ``Chef::Log`` entries:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_fatal.rst:43
# c2d0f3e46e044fb8afef79e947a9da7d
msgid "The full recipe is the ``upgrade.rb`` recipe of the `chef-splunk cookbook <https://github.com/opscode-cookbooks/chef-splunk/>`_ that is maintained by |company_name|."
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:3
# 5f72cd0a7e8c4f0fa584cff3c0db59a2
msgid "The following example shows using multiple ``Chef::Log`` entry types:"
msgstr ""

#: ../../step_ruby/step_ruby_class_chef_log_multiple.rst:19
# 1780274cf42f47d1ab3fba0f33752f38
msgid "The full recipe is in the ``ebs_volume.rb`` recipe of the `database cookbook <https://github.com/opscode-cookbooks/database/>`_ that is maintained by |company_name|."
msgstr ""


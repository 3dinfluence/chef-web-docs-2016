# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-04 13:15-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/resource_registry_key.rst:8
# 6c1d842fe74f4308a614f43e3ffa1fd3
msgid "registry_key"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_generic.rst:5
# a7662f9e1867402c9341f57021570cba
msgid "A `resource <http://docs.getchef.com/resource.html>`_ defines the desired state for a single configuration item present on a node that is under management by |chef|. A resource collection---one (or more) individual resources---defines the desired state for the entire node. During every `chef-client run <http://docs.getchef.com/essentials_nodes_chef_run.html>`_, the current state of each resource is tested, after which the |chef client| will take any steps that are necessary to repair the node and bring it back into the desired state."
msgstr ""

#: ../../includes_resources/includes_resource_registry_key.rst:4
# 99f3669e8c914e75943ba61d6c587189
msgid "Use the |resource registry_key| resource to create and delete registry keys in |windows|."
msgstr ""

#: ../../includes_resources/includes_resource_registry_key.rst:6
# db0e0082ec6d45cca8c0399ce45c14ec
msgid "64-bit versions of |windows| have a 32-bit compatibility layer in the registry that reflects and redirects certain keys (and their sub-keys) into specific locations. By default, the registry functionality will default to the machine architecture of the system that is being configured. The |chef client| can access any reflected or redirected registry key. The |chef client| can write to any 64-bit registry location. (This behavior is not affected by the |chef client| running as a 32-bit application.) For more information, see: |url msdn_registry_key|."
msgstr ""

#: ../source/resource_registry_key.rst:15
# 78d0c6c8665145e9a86ca7b1361660dd
msgid "Syntax"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:4
# f824c22707ac427bb11d071d8635ffe6
msgid "The syntax for using the |resource registry_key| resource in a recipe is as follows:"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:26
# e414db08e87a4b89bf13320a343018f7
msgid "where"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:28
# 83fc6df480a6449fa88f53e68514d900
msgid "``registry_key`` tells the |chef client| to use the ``Chef::Provider::Windows::Registry`` provider during the |chef client| run"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:29
# 5d8642d397ea4c9a8e5b4ca76791ee47
msgid "``name`` is the name of the resource block; when the ``key`` attribute is not specified as part of a recipe, ``name`` is also path to the location in which a registry key is created or from which a registry key is deleted"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:30
# b9964422e0564f818301dd68646f261c
msgid "``attribute`` is zero (or more) of the attributes that are available for this resource"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:31
# 8a0e0d18f67f48138157de333010a542
msgid "``values`` is a hash that contains at least one registry key to be created or deleted. Each registry key in the hash is grouped by brackets in which the ``:name``, ``:type``, and ``:data`` values for that registry key are specified."
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:32
#: ../../includes_resources/includes_resource_registry_key_attributes.rst:30
# 666f7369f6bc42ae87e49bd5afa15d82
# 95eb96fcb0ce422788c8cb5c57de03d9
msgid "|values resource registry_key types|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:34
#: ../../includes_resources/includes_resource_registry_key_attributes.rst:32
# 17f1183b9fd94e43918efc6f0b96ced5
# d06715886f564a09a5def2bf87908fb5
msgid "|values resource registry_key multi_string|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:36
# 07379ab3f5c14d74b9aab2841787648b
msgid "``:action`` identifies which steps the |chef client| will take to bring the node into the desired state"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:38
# c5005b058dbc415a9e3f02c18fa2e22b
msgid "For example, a |windows| registry key named \"System\" will get a new value called \"NewRegistryKeyValue\" and a multi-string value named \"foo bar\":"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_syntax.rst:51
# 243ff927426d466a8f40c7e76b4220c7
msgid "Or, using multiple registry key entries to configure a single resource block with key values based on node attributes:"
msgstr ""

#: ../source/resource_registry_key.rst:19
# 118ca819d9da41fd831054fb920a3be3
msgid "Registry Key Path Separators"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_registry_key_path_separators.rst:5
# 99ac576773c94a7ab1271afdf1f33d5a
msgid "A |windows| registry key can be used as a string in |ruby| code, such as when a registry key is used as the name of a recipe. In |ruby|, when a registry key is enclosed in a double-quoted string (``\" \"``), the same backslash character (``\\``) that is used to define the registry key path separator is also used in |ruby| to define an escape character. Therefore, the registry key path separators must be escaped. For example, the following registry key:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_registry_key_path_separators.rst:11
# 72ea09d1996c40b9b385fc039a967f74
msgid "will not work when it is defined like this:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_windows_registry_key_path_separators.rst:20
# cc900de0cde045c6996a843021f2c1ab
msgid "but will work when the path separators are escaped properly:"
msgstr ""

#: ../source/resource_registry_key.rst:23
# a4284099e43d4357a560bc9948c16664
msgid "Recipe DSL Methods"
msgstr ""

#: ../source/resource_registry_key.rst:24
# cb0299ad74d74c4395ac2ef29de0ad9d
msgid "The following methods can be used to interact with |windows| registry keys."
msgstr ""

#: ../source/resource_registry_key.rst:30
# bcbe9597af0e4c578581efb2f83a5686
msgid "Methods"
msgstr ""

#: ../source/resource_registry_key.rst:31
#: ../../includes_resources/includes_resource_registry_key_actions.rst:11
#: ../../includes_resources/includes_resource_registry_key_attributes.rst:11
# 0fdd6e25d1524109b252fd60dd4a2685
# 8f973d4bd39e4f449d4497c262559e40
# 67f7b95dc2ad4565af73cff38692df8a
msgid "Description"
msgstr ""

#: ../source/resource_registry_key.rst:32
# dcaea524afcc4cdd80ccd1f53f9da97f
msgid "`registry_data_exists? <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-data-exists>`_"
msgstr ""

#: ../source/resource_registry_key.rst:33
# 4440e2583ce24c4bac83d5433ebf01fc
msgid "Find out if a registry key contains data."
msgstr ""

#: ../source/resource_registry_key.rst:34
# fef08c7f87a4480e87f0dd3f093b0fb9
msgid "`registry_get_subkeys <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-get-subkeys>`_"
msgstr ""

#: ../source/resource_registry_key.rst:35
# 832232851fe748cb914c6fe45033f2a5
msgid "Get a list of sub-keys for a registry setting."
msgstr ""

#: ../source/resource_registry_key.rst:36
# 2fe3eae36cf94b1d9c6d9dd54001362c
msgid "`registry_get_values <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-get-values>`_"
msgstr ""

#: ../source/resource_registry_key.rst:37
# e304809d25ea45dbbdddbb1ee3dbf1c9
msgid "Get values (name, type, and data) for a given registry key."
msgstr ""

#: ../source/resource_registry_key.rst:38
# af899f1de719458bba44f8bfe042292b
msgid "`registry_has_subkeys? <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-has-subkeys>`_"
msgstr ""

#: ../source/resource_registry_key.rst:39
# 0d0058f5218442a39f8941d9ff3bd274
msgid "Find out if a registry key has one (or more) sub-keys."
msgstr ""

#: ../source/resource_registry_key.rst:40
# 969cf13222244e098b89f95494e779f3
msgid "`registry_key_exists? <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-key-exists>`_"
msgstr ""

#: ../source/resource_registry_key.rst:41
# 1be8bb93cfde4b4282660aeec359f748
msgid "Find out if a registry key exists."
msgstr ""

#: ../source/resource_registry_key.rst:42
# d3d3061d1a9645a0a398bd1610fb6a43
msgid "`registry_value_exists? <http://docs.chef.io/release/12-0/dsl_recipe.html#registry-value-exists>`"
msgstr ""

#: ../source/resource_registry_key.rst:43
# 6462f8ec4d074882a05f3bb37a1aaa4f
msgid "Find out if a registry key has values set (name, type, and data)."
msgstr ""

#: ../source/resource_registry_key.rst:45
# 4d781ea1fc9d419ba77ef11da7dcebae
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""

#: ../source/resource_registry_key.rst:48
# ca2f02b0c1094f92b2a9381d77123831
msgid "Actions"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:4
# 799b49e9cf064ab98cbcff0dab5f0310
msgid "This resource has the following actions:"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:10
# acdd42a8f74b4373938d9a77538c6e1c
msgid "Action"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:12
# bc7ea0168f2d4aa689a98811bf8ed7d4
msgid "``:create``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:13
# d20250e250c2414eb53e94f7f47eb295
msgid "Default. |resource action create registry_key|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:14
# c0f07fe2560e433ca1cfa89ee1586543
msgid "``:create_if_missing``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:15
# 3a758c97bb0b480ab4ab4def4946d295
msgid "|resource action create_if_missing registry_key|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:16
# b9ef9f6540e44d7b8368b9e0524577e9
msgid "``:delete``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:17
# ab95e36841ef4403a59d44f03a6979c1
msgid "|resource action delete registry_key|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:18
# 7c7e1358d1224a66827f24522be130bc
msgid "``:delete_key``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:19
# 5fd26538cfc1403e8f562a131adf074b
msgid "|resource action delete key registry_key|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_actions.rst:21
#: ../../includes_resources/includes_resource_registry_key_attributes.rst:26
#: ../../step_resource/step_resource_registry_key_delete_recursively.rst:12
# 4815b9764d424d1c9cee378e2f0ab0d6
# 262b36da706b448f812c1e9bf7d49b28
# d76eb0b394844cefb36ac12eb421cbdb
msgid "|note registry_key resource recursive|"
msgstr ""

#: ../source/resource_registry_key.rst:52
# 796e646b35974876a60ef9ce85c6f9f0
msgid "Attributes"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:4
# b4c64abce71b44fbacfa2c535c708be2
msgid "|description resource_attributes_intro|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:10
# 48696a141a9a4d98988f9d2ce81fa129
msgid "Attribute"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:12
# 0054d64a2f1649359b295c90d2fa4bf2
msgid "``architecture``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:13
# 44eea6ee8c5c40b6ab776d8774310f87
msgid "|architecture registry_key| Default value: ``:machine``."
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:15
# 97eb23b0e32245c19bdbb3ade8b1edd5
msgid "|architecture registry_key machine|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:17
# 9e2c5fb0166544fca65757737a5fa419
msgid "|note registry_key architecture|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:18
# e38b04560d9a49968451f240aa0d97af
msgid "``key``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:19
# af7a25b749194a54aee921679a48bd20
msgid "|key_name resource registry_key| Default value: the ``name`` of the resource block. |see syntax| |key_name resource registry_key hives|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:21
# 8d90d9b9bf8247b9a82b973d02f31c84
msgid "``provider``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:22
# 1ff999e3626345418f43666281894c17
msgid "Optional. |provider resource_parameter| |see providers|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:23
# d153a35f8536425fa7b291aa91f9df65
msgid "``recursive``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:24
# c47659041d204c11abf209a920c6c80c
msgid "|recursive registry_key|"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:27
# 07e2ee9252b54d39a7f29656949209a9
msgid "``values``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_attributes.rst:28
# 781b5f01192d404783cf0281ffb45534
msgid "|values resource registry_key|"
msgstr ""

#: ../source/resource_registry_key.rst:56
# 53c948fcd20245cc8495eb5a7d22e5eb
msgid "Providers"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider.rst:4
# 1ab96533133d4b78a45ffedb9eddfe00
msgid "Where a resource represents a piece of the system (and its desired state), a provider defines the steps that are needed to bring that piece of the system from its current state into the desired state."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:4
# 6c922f68c86e45699d874b7bf4e98d41
msgid "The |chef client| will determine the correct provider based on configuration data collected by |ohai| at the start of the |chef client| run. This configuration data is then `mapped to a platform and an associated list of providers <https://github.com/opscode/chef/blob/master/lib/chef/platform/provider_mapping.rb>`_."
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:6
# 50b1cf44d95d455ba8488f1fc8328736
msgid "Generally, it's best to let the |chef client| choose the provider and this is (by far) the most common approach. However, in some cases specifying a provider may be desirable. There are two approaches:"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:8
# 44a79b4f857441baaee67295733c9d57
msgid "Use a more specific short name---``yum_package \"foo\" do`` instead of ``package \"foo\" do``, ``script \"foo\" do`` instead of ``bash \"foo\" do``, and so on---when available"
msgstr ""

#: ../../includes_resources_common/includes_resources_common_provider_attributes.rst:9
# 87280660ae2042c5a6c709ad3a7683a2
msgid "Use the ``provider`` attribute to specify the long name as an attribute of a resource, e.g. ``provider Chef::Provider::Long::Name``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:4
# 60cf5ff9525d478799e5bd10b77e71d4
msgid "This resource has the following providers:"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:10
# 01470bedb15842788530ec9ac49d2136
msgid "Long name"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:11
# 6595b4830a1b4ab7af995597b6a5d09d
msgid "Short name"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:12
# 5913db2f07b141bdb749820648bd294d
msgid "Notes"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:13
# 5699658be73448799fa0832c149f1ec6
msgid "``Chef::Provider::Windows::Registry``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:14
# ac646767e783446983fcc61ef0ba0132
msgid "``registry_key``"
msgstr ""

#: ../../includes_resources/includes_resource_registry_key_providers.rst:15
# 25b12aba23f24249b14fbe3636697f2b
msgid "The default provider for the |windows| platform."
msgstr ""

#: ../source/resource_registry_key.rst:64
# dcf0ffcbc2a54a259d1fa93d346746a0
msgid "Examples"
msgstr ""

#: ../source/resource_registry_key.rst:65
# 3d9a4498f19e4c73b7cf2bb7d2e33331
msgid "|generic resource statement|"
msgstr ""

#: ../source/resource_registry_key.rst:67
# a701ac496753494181fcc2e11e9e8381
msgid "**Create a registry key**"
msgstr ""

#: ../source/resource_registry_key.rst:71
# eed64df842224808a32e038f07ffd0bc
msgid "**Delete a registry key value**"
msgstr ""

#: ../source/resource_registry_key.rst:75
# 85c6843965d24e1b9eec4c208116cafe
msgid "**Delete a registry key and its subkeys, recursively**"
msgstr ""

#: ../source/resource_registry_key.rst:79
# a249a885371346a4903da6b102767550
msgid "**Use re-directed keys**"
msgstr ""

#: ../../step_resource/step_resource_registry_key_redirect.rst:3
# eb826392499f47beaf39f395d18cc701
msgid "In 64-bit versions of |windows|, ``HKEY_LOCAL_MACHINE\\SOFTWARE\\Example`` is a re-directed key. In the following examples, because ``HKEY_LOCAL_MACHINE\\SOFTWARE\\Example`` is a 32-bit key, the output will be \"Found 32-bit key\" if they are run on a version of |windows| that is 64-bit:"
msgstr ""

#: ../../step_resource/step_resource_registry_key_redirect.rst:13
#: ../../step_resource/step_resource_registry_key_redirect.rst:23
#: ../../step_resource/step_resource_registry_key_redirect.rst:34
# e083b979320241a9988fd518c035dc50
# 233147ebf7354aaf9357baea483ef2d2
# fe1dcfb7c5b047dda94ce7da9333525b
msgid "or:"
msgstr ""

#: ../source/resource_registry_key.rst:83
# c8f1bca8b4fd43d1a7249417f8da3929
msgid "**Set proxy settings to be the same as those used by the chef-client**"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-10 22:38-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_server.rst:8
# 69650dca95c9437cbc316029de61088b
msgid "About the |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# b4918ad8acd043d4ad69a599a3e708f3
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_server.rst:13
# bb114e1645074639a57f3f05d2bffaef
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# a5fa02e2d3b34ccabe55502ab6b23f87
msgid "Starting with the release of |chef server| 11, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/chef_server.rst:16
# 7258c763fce94aa39153d081731c99f5
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_server.rst:24
# 70af30e98b204608a2ac4eba60f70051
msgid "Component"
msgstr ""

#: ../source/chef_server.rst:25
#: ../source/chef_server.rst:58
#: ../source/chef_server.rst:83
# 7c15ed6f72a242ffa4204ea6097e5ea8
# b2b4685d2486411580fac727bfd4533a
# b8fe2a2b8f544141a829d3bbb3ad46d6
msgid "Description"
msgstr ""

#: ../source/chef_server.rst:26
# be29d1a057ca47dd904fd04c07e993d7
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 8a1edd7a42ed40079795ba9acc1cd335
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_server.rst:29
# db5d6baecd52467fa3df2ee86cd20c4f
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_server.rst:30
# 7e9827f98ae94dc5972d3def78e9f1a2
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# bc57fe23c26246bca103bf7284502230
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:32
# f4b77b18f43c4b39b8e7963c5fbb85f2
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# c698d46ae7fc4857ab31eef4dc721339
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 779efd8239474159a14857f99a371f8d
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/chef_server.rst:34
# d989889a1e0d468597dcdbfff62620dc
msgid "Message Queues"
msgstr ""

#: ../source/chef_server.rst:35
# e706759e052d4c9d9446153513b34da8
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 9b841a9145884d3b909389d81f86de6b
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 91c5ca283fca4724bcecdba50fa2e87a
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# ed53905251b04be1b6de682194744ea4
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_server.rst:41
# 2281d3be06fb4eaebe10cc87680ce98c
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_server.rst:42
# 1881748255744380b004bd5fb9414dd7
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# d0d0db672e4a402494f46ac5d72ee114
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_server.rst:44
# 9e88a5b0030f40ae82a5c0a490927f30
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# f3b3f02f52204287892077d56c81bcdf
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:47
# c4d86bbcef934e39adf64746781cc704
msgid "For the hosted |chef server|, these components are mostly transparent because of the hosted interface for the |chef server|. When the |chef server| is deployed on-premises, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_server.rst:50
# f410fc71f7e6406a9c890d1dd5dd9478
msgid "Common Features"
msgstr ""

#: ../source/chef_server.rst:51
# 5222f645e13a4e97aa0a8f75f18196c9
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_server.rst:57
#: ../source/chef_server.rst:82
# f1e5bb9b842447d9b104bcbcebfc64fd
# 3ae4cf35dbfe45fc8d6ddf1fe06d2ab6
msgid "Feature"
msgstr ""

#: ../source/chef_server.rst:59
# a51531a8a7344fb7ae654c9f80a5b687
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_server.rst:60
# 1856f4e7c406457ea60084cd5d0e77a2
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_server.rst:61
# bcc3eaa3292343e58d337dcca5cbc098
msgid ":doc:`Data Bags </data_bags>`"
msgstr ""

#: ../source/chef_server.rst:62
# 148367b470c445f4914008fa83d31afa
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_server.rst:63
# a74c4a1c59004edba5b3f0c4a3078ae2
msgid ":doc:`Environments </environments>`"
msgstr ""

#: ../source/chef_server.rst:64
# 12091df64cc648cbb128ac487b68d6dc
msgid "An environment is a way to map an organizationâ€™s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_server.rst:65
# 8b9ed1b9ea0e4138b58db1ac8e52704d
msgid ":doc:`Node Objects </nodes>`"
msgstr ""

#: ../source/chef_server.rst:66
# 7a455fd8a5084cdebe9019ceb621ca6f
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_server.rst:67
# 831114280ce54b4093cd3b372e63dd07
msgid ":doc:`Roles </roles>`"
msgstr ""

#: ../source/chef_server.rst:68
# e0d062f0bdd94d919ca4e81adcb4e253
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_server.rst:69
# ebe54f007eb5458fb5b9e9d909caacea
msgid ":doc:`Search </chef_search>`"
msgstr ""

#: ../source/chef_server.rst:70
# 665635eca20844f99e5234fcc1d40291
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""

#: ../source/chef_server.rst:71
# 41289dbcf25947a289611fdef67158a1
msgid "|supermarket|"
msgstr ""

#: ../source/chef_server.rst:72
# 945659f60f6545db8eb5ddf52abec59b
msgid "|supermarket| is the new community site for |chef|, located at |url community|."
msgstr ""

#: ../source/chef_server.rst:75
# 50df9f681b584e8a8a6188f27b833106
msgid "Premium Features"
msgstr ""

#: ../source/chef_server.rst:76
# 458787b80f814be2acf28c9d96eab0cc
msgid "The following premium feature are available for use with the |chef server|:"
msgstr ""

#: ../source/chef_server.rst:84
# 8804f28790214346a734549013cb34b2
msgid "|chef analytics_title|"
msgstr ""

#: ../source/chef_server.rst:85
# 515e4c222d854d5593f2dd31acb4fca2
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../source/chef_server.rst:86
# ccbed6fda3384d07bcbf46a8aef4e713
msgid "|chef ha_title|"
msgstr ""

#: ../source/chef_server.rst:87
# 41c34a1932324758a28851205cfa6ccc
msgid "Availability supports out-of-the-box and custom high availability scenarios, including using |drbd| and |amazon aws|."
msgstr ""

#: ../source/chef_server.rst:88
# 05221055443d49d8af7a066e80930fb8
msgid "|chef manage_title|"
msgstr ""

#: ../source/chef_server.rst:89
# 799ad26fb3c84f73bc3d76b3a7039d02
msgid "The |chef manage| web user interface is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../source/chef_server.rst:90
# 7afa53280a984d0cacbdd326653993a4
msgid "|push jobs_title|"
msgstr ""

#: ../source/chef_server.rst:91
# 43b161b8929a498bb47382376bd0e198
msgid "|push jobs| allows jobs to be run against nodes independently of a |chef client| run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the |chef server|."
msgstr ""

#: ../source/chef_server.rst:92
# ceaa73bad8d04787ad82d4c2510eeed6
msgid "|chef replication_title|"
msgstr ""

#: ../source/chef_server.rst:93
# 5176528499224feab16470a9bb9f9c43
msgid "|chef replication| provides a way to asynchronously distribute cookbook, environment, role, and data bag data from a single, primary |chef server| to one (or more) replicas of that |chef server|."
msgstr ""

#: ../source/chef_server.rst:94
# acd5f48697d54a1ebb7c4ed2df64f2a6
msgid "|reporting_title|"
msgstr ""

#: ../source/chef_server.rst:95
# 68d0fe236d0e46fba3dded72f2b234f4
msgid "The |reporting| feature of the |chef server| is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_ctl_chef_server/includes_ctl_chef_server_install.rst:6
# 51c2c1a72a3c4a46a7fefef02c5a6f87
msgid "The ``install`` subcommand is used to install premium features of the |chef server|: |chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, |push jobs|, and |chef server| replication."
msgstr ""


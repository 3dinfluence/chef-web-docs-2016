# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 17:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_server.rst:8
# 738e0c7f1e0541dd9ae6e5465c15755a
msgid "About the |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 2d09d336d1e24ec3a483ae8080529f4f
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_server.rst:13
# 51f98b2a30b04e87b309b30b00b53ca7
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# 4530e94db8ee4c6e9d4743cd942ecc70
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/chef_server.rst:16
# c2a8f0c7ee484823acb0250c7a7ee651
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_server.rst:24
# 10334ac519554a94b1c8678b89234bd9
msgid "Component"
msgstr ""

#: ../source/chef_server.rst:25
#: ../source/chef_server.rst:58
#: ../source/chef_server.rst:83
# 61027d4431b349f49ed63e3df4fb2011
# 256081d3bb9f4a4eacae194ad1d95ac7
# 01558a035e1d4a09b4a2c5665bf846a7
msgid "Description"
msgstr ""

#: ../source/chef_server.rst:26
# d90394c7dd7a415e81fa4056c4c79453
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 67ca96fd986e443389935068714e9331
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_server.rst:29
# 743b43254f8f481eac4f6a4bf51352aa
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_server.rst:30
# 8e9ffed110ef419ba678d3a67d153308
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 3609b232b05f4fbaa699a9acfaf21ae3
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:32
# 3c5cb06708fe48609c00422ff9d2f8c4
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 3c11ef33544b4046ad7a67a28e1ee06a
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 45836b25a8c744639583764c2f6fb0cc
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/chef_server.rst:34
# 297d0f94156840b799d29a9838962040
msgid "Message Queues"
msgstr ""

#: ../source/chef_server.rst:35
# 813da7a51d794fc4bea7b335bb77f95a
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# eb68f185c5be4e6e87a2e4c93441fdd0
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 09ec91b601734caba5e4f221a2b83130
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 02508e2529c14caebe1b9eba17326733
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_server.rst:41
# 4d76383c92a242dbacb65b5149092d1b
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_server.rst:42
# be58a83d2a1249abbc610466aabdd5b4
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 9dfc4ee9fbfd4a7d82904ffa6941d7c3
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_server.rst:44
# 8cab4aac3c124a24affe2d8bb7afa96d
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 65c5ae2cd78c41149f84aaf93d2f0820
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:47
# e487e7f5971f401f939ef4983748b4e5
msgid "For the hosted |chef server|, these components are mostly transparent because of the hosted interface for the |chef server|. When the |chef server| is deployed on-premises, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_server.rst:50
# cdf62c0492dc4349801cce562ff422e5
msgid "Common Features"
msgstr ""

#: ../source/chef_server.rst:51
# 98538571ef424d5d87b6157460199ceb
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_server.rst:57
#: ../source/chef_server.rst:82
# a6998b9b34dc476194c1365a9de4ef76
# e24ff24b982248ae85f28a3d7cfdefe1
msgid "Feature"
msgstr ""

#: ../source/chef_server.rst:59
# 2e5bf1bac70c4572892481cebc51d40e
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_server.rst:60
# 48bd6766d047412ba58eae64e0108d72
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_server.rst:61
# 0ef7132996d34be0ae44ae0460ea7c41
msgid ":doc:`Data Bags </data_bags>`"
msgstr ""

#: ../source/chef_server.rst:62
# 3c17a532c9784449b9105e151355bf24
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_server.rst:63
# 20ef1b1521dd40bf92e89ce330a66f7e
msgid ":doc:`Environments </environments>`"
msgstr ""

#: ../source/chef_server.rst:64
# acece3228eb543228ecda80f238186b4
msgid "An environment is a way to map an organizationâ€™s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_server.rst:65
# 1f50ab59ede34b059d071eaadf319302
msgid ":doc:`Node Objects </nodes>`"
msgstr ""

#: ../source/chef_server.rst:66
# 3944b37711994daaa0f13f43eee04703
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_server.rst:67
# ad2d723ac62146a3af4d9d978e5ff867
msgid ":doc:`Roles </roles>`"
msgstr ""

#: ../source/chef_server.rst:68
# 4fe18f0868b14c659b8dd82eeb165346
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_server.rst:69
# b69fef50fa9d482d8be1ae1009a4b668
msgid ":doc:`Search </chef_search>`"
msgstr ""

#: ../source/chef_server.rst:70
# a7bddef4800c41f391135e31027fc64c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""

#: ../source/chef_server.rst:71
# 99629035b3014bf9bc3c0e16427c1a42
msgid "|supermarket|"
msgstr ""

#: ../source/chef_server.rst:72
# 957837e121374b309891b24ba54a3bdd
msgid "|supermarket| is the new community site for |chef|, located at |url opscode_community|."
msgstr ""

#: ../source/chef_server.rst:75
# 629938dc8d114035967e5959eeefe4d6
msgid "Premium Features"
msgstr ""

#: ../source/chef_server.rst:76
# 9347478fc6d4477d83950507703739db
msgid "The following premium feature are available for use with the |chef server|:"
msgstr ""

#: ../source/chef_server.rst:84
# 0276ba10387a47808c9bac33bc7f3828
msgid "|chef analytics_title|"
msgstr ""

#: ../source/chef_server.rst:85
# cbb6184fa1c340999ba8f01d06c16ec4
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../source/chef_server.rst:86
# 99746ad9a0824bb387107887ca701352
msgid "|chef ha_title|"
msgstr ""

#: ../source/chef_server.rst:87
# e31f5002c9df4808a1deb8303723d76d
msgid "Availability supports out-of-the-box and custom high availability scenarios, including using |drbd| and |amazon aws|."
msgstr ""

#: ../source/chef_server.rst:88
# 42ed6d44b3bc4e2d933e6667daf7fb24
msgid "|chef manage_title|"
msgstr ""

#: ../source/chef_server.rst:89
# 6fec8d9c9a3540009eb490123d0cf62c
msgid "The |chef manage| web user interface is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../source/chef_server.rst:90
# c018b974c5404f4a810c217c81c593e1
msgid "|push jobs_title|"
msgstr ""

#: ../source/chef_server.rst:91
# e969b75f8a924b53897ddabd7e4ba0c6
msgid "|push jobs| allows jobs to be run against nodes independently of a |chef client| run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the |chef server|."
msgstr ""

#: ../source/chef_server.rst:92
# 44c2d67c89b34badbeaef93208f64f61
msgid "|chef replication_title|"
msgstr ""

#: ../source/chef_server.rst:93
# 890c1c0248574965b861ebf3851b2b59
msgid "|chef replication| provides a way to asynchronously distribute cookbook, environment, role, and data bag data from a single, primary |chef server| to one (or more) replicas of that |chef server|."
msgstr ""

#: ../source/chef_server.rst:94
# 3055f66e2724405ebe0a4b81aeb3a9b8
msgid "|reporting_title|"
msgstr ""

#: ../source/chef_server.rst:95
# 007c45db317b457aa2525d738282c679
msgid "The |reporting| feature of the |chef server| is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_ctl_chef_server/includes_ctl_chef_server_install.rst:6
# e14ec535047f4d61ae610d38d087ce49
msgid "The ``install`` subcommand is used to install premium features of the |chef server|: |chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, |push jobs|, and |chef server| replication."
msgstr ""


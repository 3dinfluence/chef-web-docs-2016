# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_server.rst:8
# 90ef0b3e9f304ba0984e90fbd9b6f0e6
msgid "About the |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 1070099a1130413b8b78f880e30ab9d7
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_server.rst:13
# f02399cc6bea41c8855a9e06ca78c3c9
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# df224a90f945405d9a5e5309a20c532f
msgid "Starting with the release of |chef server| 11, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. The |chef server| can scale to the size of any enterprise and is sometimes referred to as |erchef|."
msgstr ""

#: ../source/chef_server.rst:16
# 177199b37fa64f0e85a6fe356997e714
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_server.rst:24
# e04ba043d57c4e29a484afbae5d152d2
msgid "Component"
msgstr ""

#: ../source/chef_server.rst:25
#: ../source/chef_server.rst:58
#: ../source/chef_server.rst:83
# 2753b43f87b84eae834408f0cd3f5bac
# 841a9c232cfb4794b2920aaa47582a4c
# 5ccee5001b7b44e3a28e209230fbe174
msgid "Description"
msgstr ""

#: ../source/chef_server.rst:26
# 851d8caf0fed495b8fc728bacc722f28
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# d6a79a3c823e400e9b7068a04f3a6a8b
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_server.rst:29
# 619c11c01f574eef845b607d4f857305
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_server.rst:30
# 20f82f2e59954a4d851aaae0f19f08cb
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# ab4417e3139d4f569ed6a8dea2adcf76
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:32
# bc7503ec6b38454eb9f513868bafd834
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 94d684af81224b23a4582afd55d8d86d
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# 3443f8eb1a6a4858bc9ad190db41f659
msgid "Even though the |chef server| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef|."
msgstr ""

#: ../source/chef_server.rst:34
# ac9ffc9c3dfc4ce28e75c54b7948067b
msgid "Message Queues"
msgstr ""

#: ../source/chef_server.rst:35
# 4012fc6fa33744ed92490d5d64e36817
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# cd5a0b58a65a4809b9b15af1a4117517
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# cc258eecff064f5caf0a65696d13b261
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 6fedbc15158647cc96d0e76a742cd5e9
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_server.rst:41
# ab108c84d9994149bdddec7398da0233
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_server.rst:42
# cb87f4f2b9894a03b190978ea9e2dfbd
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 2e24b8857bee4b0f9dabdf6adc5c6b79
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_server.rst:44
# ce66d3d993384291816a6a7887b4c252
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# f23a088ed1174fda8ccca7f7d08a153a
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_server.rst:47
# 408721823b3e48569affe5e974bf4a26
msgid "For the hosted |chef server|, these components are mostly transparent because of the hosted interface for the |chef server|. When the |chef server| is deployed on-premises, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_server.rst:50
# d930d6b1ce984c19a704b9850e306dc7
msgid "Common Features"
msgstr ""

#: ../source/chef_server.rst:51
# fa7cc467ddf94a0196fb0caeee7d326d
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_server.rst:57
#: ../source/chef_server.rst:82
# e6da455dea8241cd96a7f8292bb4f9f4
# 1a637cbadbb54dc9a81eb42568f12f80
msgid "Feature"
msgstr ""

#: ../source/chef_server.rst:59
# 3dcf024d9439429bb18ad966fbfcc053
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_server.rst:60
# c264aaab6cc9485283a088687c245ae0
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_server.rst:61
# d05b1fe794614da78f624bb7a70d3cbb
msgid ":doc:`Data Bags </data_bags>`"
msgstr ""

#: ../source/chef_server.rst:62
# 7e278f07655b45399d17f8c4a2be21e2
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_server.rst:63
# 23047d1eaa2945c7be003c02ac01ed87
msgid ":doc:`Environments </environments>`"
msgstr ""

#: ../source/chef_server.rst:64
# e4f19f3950c344eaa86b466e215d06d1
msgid "An environment is a way to map an organizationâ€™s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_server.rst:65
# 85bec7a0769746da9a4dff0aac3cc6d1
msgid ":doc:`Node Objects </nodes>`"
msgstr ""

#: ../source/chef_server.rst:66
# 25caf8a1973546b180c6d1ddc023781f
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../source/chef_server.rst:67
# 83e8a50d0de447ae8e3c16c3ea4dd1a1
msgid ":doc:`Roles </roles>`"
msgstr ""

#: ../source/chef_server.rst:68
# ad127cfcc13247029e38eabf78b48363
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function."
msgstr ""

#: ../source/chef_server.rst:69
# e1edf7b921dd4e06a49bef8686c1502e
msgid ":doc:`Search </chef_search>`"
msgstr ""

#: ../source/chef_server.rst:70
# 787d114c847b4c07aad78fa0c1e1ea02
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""

#: ../source/chef_server.rst:71
# e1da6122cfe8410fa3718b16c51eb971
msgid "|supermarket|"
msgstr ""

#: ../source/chef_server.rst:72
# 3142e0cc81654c5fbbcfa636c8d7acd6
msgid "|supermarket| is the new community site for |chef|, located at |url community|."
msgstr ""

#: ../source/chef_server.rst:75
# 4a65fcb3fa7e401c9f88fbd20b26e7ee
msgid "Premium Features"
msgstr ""

#: ../source/chef_server.rst:76
# 839de83a2fed4a9b8a3f91186362d253
msgid "The following premium feature are available for use with the |chef server|:"
msgstr ""

#: ../source/chef_server.rst:84
# be84a9de160f41a5b5600297db9050d4
msgid "|chef analytics_title|"
msgstr ""

#: ../source/chef_server.rst:85
# 92769f87545d47568bb17fed28cb27da
msgid "|chef analytics| provides real-time visibility into what is happening on the |chef server|, including what's changing, who made those changes, and when they occurred. Actions details are tracked on the |chef server| and are visible to users from the |chef analytics| web user interface."
msgstr ""

#: ../source/chef_server.rst:86
# 8492cb7a9c00470d8815280a5183261f
msgid "|chef ha_title|"
msgstr ""

#: ../source/chef_server.rst:87
# ec8f9314be0d437d9744113449c762c8
msgid "Availability supports out-of-the-box and custom high availability scenarios, including using |drbd| and |amazon aws|."
msgstr ""

#: ../source/chef_server.rst:88
# b777f55dccca4c21a3caab9ad6d47162
msgid "|chef manage_title|"
msgstr ""

#: ../source/chef_server.rst:89
# 17ca0b09d1f042f8a699f726e1dfcfe7
msgid "The |chef manage| web user interface is used to manage objects that are stored on the |chef server|, including data bags, attributes, run-lists, roles, environments, and cookbooks. Additionally, reports are views into what happened during every |chef client| run that has occurred across all of the nodes that are under management by |chef|."
msgstr ""

#: ../source/chef_server.rst:90
# 9565be4922754e89ae7191571f96edb4
msgid "|push jobs_title|"
msgstr ""

#: ../source/chef_server.rst:91
# 2e2e2bc03be44306b5a214ad8411a6aa
msgid "|push jobs| allows jobs to be run against nodes independently of a |chef client| run. A job is an action or a command to be executed against a subset of nodes; the nodes against which a job is run are determined by the results of a search query made to the |chef server|."
msgstr ""

#: ../source/chef_server.rst:92
# db9537661ffa4fa9b3a49cfe1b0a9f07
msgid "|chef replication_title|"
msgstr ""

#: ../source/chef_server.rst:93
# 5ab5efbd92d14376aa9acc663b656792
msgid "|chef replication| provides a way to asynchronously distribute cookbook, environment, role, and data bag data from a single, primary |chef server| to one (or more) replicas of that |chef server|."
msgstr ""

#: ../source/chef_server.rst:94
# e1bf0d78cfcc482db85022e82abbcc5a
msgid "|reporting_title|"
msgstr ""

#: ../source/chef_server.rst:95
# e131aa0437ae4cfab6e663639a9f4f49
msgid "The |reporting| feature of the |chef server| is used to keep track of what happened during the execution of |chef client| runs across all of the infrastructure being managed by |chef|. Reports can be generated for the entire organization and they can be generated for specific nodes."
msgstr ""

#: ../../includes_ctl_chef_server/includes_ctl_chef_server_install.rst:6
# aa4688d5c1704241ab1d4cbc261cf4f0
msgid "The ``install`` subcommand is used to install premium features of the |chef server|: |chef manage|, |chef analytics|, |chef client| run reporting, high availability configurations, |push jobs|, and |chef server| replication."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-26 11:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/auth_authentication.rst:33
# 674ccfed65664414845695cf419f0f96
msgid "Authentication"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:4
# cdc35955799e4cff869c56785386949b
msgid "The authentication process ensures the |chef server| responds only to requests made by trusted users. A public key encryption is used for all server types: |chef hosted|, |chef private|, and the open source |chef server|. When a node and/or a workstation is configured to run the |chef client|, both public and private keys are created. The public key is stored on the |chef server|, while the private key is returned to the user for safe keeping. (The private key is a .pem file located in the ``.chef`` directory or in ``/etc/chef``.) The following executables use the |api chef server| when communicating with the |chef server|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:6
# c1a2c81805894a689b58fc1cc5697967
msgid "|chef client|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:7
# 5adb53008fd549b9a2baa152b3b94e5a
msgid "|knife|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:8
# 49bb1472ba864bb9aeda1fae5a7fe110
msgid "|chef validator| (only during the first |chef client| run on a node)"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication.rst:10
# 6860d1c23b6c472ca92b7a28bbe961eb
msgid "Each request to the |chef server| from those executables encrypts a special group of HTTP headers along with the private key. The |chef server| then uses the public key to decrypt the headers and verify the contents."
msgstr ""

#: ../source/auth_authentication.rst:38
# 36b102c816344801ada03dc8959b86a6
msgid "|chef validator|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_chef_validator.rst:5
# e4899f8c0eb1476e964939091f8aefab
msgid "Every request from the |chef client| to the |chef server| must be an authenticated request using the |api chef server|. When the |chef client| starts a |chef client| run, a check is done to see if the client key exists on the node at ``/etc/chef/client.pem``. If the key exists, it is used as part of the authentication request to the |chef server|. If the key does not exist, the |chef client| will use the key assigned to the |chef validator| (``/etc/chef/validation.pem``) to ensure that each node can make an authenticated request to the |chef server| during its first |chef client| run. The key pair used by the |chef validator| is created when the|chef client| is installed on a node, either manually or using a |knife| bootstrap operation. If the |chef validator| is unable to make an authentication request to the |chef server|, the |chef client| run fails."
msgstr ""

#: ../source/auth_authentication.rst:42
# add5e64d2d864cb2842dc640662618fd
msgid "During a |chef client| Run"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_chef_run.rst:5
# ff31b5e36c474061972e6c4fabea5f57
msgid "As part of `every chef-client run <http://docs.opscode.com/essentials_nodes_chef_run.html>`_, the |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|."
msgstr ""

#: ../source/auth_authentication.rst:46
# 3d8ef2998aa84b37b351aac1e9eb6f00
msgid "From the Web Interface"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_webui.rst:5
# c9870c0e179641cc93baab03417164c7
msgid "The |chef server| user interface uses the |api chef server| to perform most operations. This ensures that authentication requests to the |chef server| are authorized. This authentication process is handled automatically and is not something that users of |chef hosted| or the open source |chef server| will need to manage. For |chef private|, the authentication keys used by the web interface will need to be maintained by the individual administrators who are responsible for managing the server."
msgstr ""

#: ../source/auth_authentication.rst:50
# 965f0b52e3964104a0d9c9f8dd7aaca1
msgid "knife exec"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:5
# 8b8343377f114120ba5515c11b565c32
msgid "The ``knife exec`` subcommand can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:11
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:11
# c5366cc32fdf4fddbcc830c395d4e26b
# 46ff755a67ad414fb4a954dc9b9272b2
msgid "Method"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:12
# e44c296662bc4f95bd2b62e6b875f26a
# c6b802eb37fe4f38a5718c5b78af027d
msgid "Description"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:13
# 027446cf70054262ac6f15d7712bc046
msgid "``api.delete``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:14
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:14
# de00e9ce45c44779a4a90404e6419e9c
# 8e3f455888c7492dbd2d3c85a5011df8
msgid "Use to delete an object from the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:15
# 7bd45736f5f64c94a8d873d17ec59478
msgid "``api.get``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:16
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:16
# 50997f3609254809ad57fef330a5ac35
# 8196bef62f5047d59b9f31ab45a4fba5
msgid "Use to get the details of an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:17
# 7706f944734849f8b10608c6f4a91972
msgid "``api.post``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:18
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:18
# 707997a39b7e46fc8339ff95145fb419
# 512908ee545b444e8fe8b34209eaa83c
msgid "Use to add an object to the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:19
# bf9dcc2414b14035a8bf17b6efa799e7
msgid "``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:20
#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:20
# b59aa88727a9446ea6bff832f70691b2
# f948f58aa2b04992b30c84cbb2fab9fc
msgid "Use to update an object on the |chef server|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:22
# bb44f72c12304ba28e9f25bc0f3b8b4d
msgid "These methods are used with the ``-E`` option, which executes that string locally on the workstation using |chef shell|. These methods have the following syntax:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:28
# 8db79c67b4304a88a53755c811465ed5
msgid "where:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:30
# 01830d84955248d4b71627619db7e2ad
msgid "``api.method`` is the corresponding authentication method --- ``api.delete``, ``api.get``, ``api.post``, or ``api.put``"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:31
# b4d07919718c43e09e8b97291fbd722f
msgid "``/endpoint`` is an endpoint in the |api chef server|"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:33
# 5b4fa326fa0a4da2a8072ee173b10f1a
msgid "For example, to get the data for a node named \"Example_Node\":"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:39
# 284e6da1e666488b8c75745f4fc94f30
msgid "and to ensure that the output is visible in the console, add the ``puts`` in front of the API authorization request:"
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:45
# 7767525dbecd4fa2b441e9abcc279fca
msgid "where ``puts`` is the shorter version of the ``$stdout.puts`` predefined variable in |ruby|."
msgstr ""

#: ../../includes_knife/includes_knife_exec_authenticated_api_requests.rst:47
# 78999b818cf6439da1029a28d66a38eb
msgid "The following example shows how to add a client named \"IBM305RAMAC\" and the ``/clients`` endpoint, and then return the private key for that user in the console:"
msgstr ""

#: ../source/auth_authentication.rst:54
# 060bbfc2b5124a93a6c3f207eaace916
msgid "|knife| Plugins"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:5
# a2844bec82694e7480c4283234bc0f4e
msgid "A |knife| plugin can be used to make authenticated API requests to the |chef server| using the following methods:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:13
# 7e72e0a9a5da4edf8148a3546872b651
msgid "``rest.delete_rest``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:15
# 70591e2ef0004699981eff52299e7529
msgid "``rest.get_rest``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:17
# 7eeb632893e8409a9316963a6341af22
msgid "``rest.post_rest``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:19
# 2ad5be559ab74b268d9d836ddd5721dc
msgid "``rest.put_rest``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_using_authenticated_requests.rst:22
# 96834393ef5f41b88f624c44803069a2
msgid "For example:"
msgstr ""

#: ../source/auth_authentication.rst:58
# fd48765127d349b29a98a87261b69248
msgid "Other Options"
msgstr ""

#: ../source/auth_authentication.rst:59
# fd6bf0c327144b68a4656d61186cc37e
msgid "The most common ways to interact with the |chef server| using the |api chef server| abstract the API from the user. That said, the |api chef server| can be interacted with directly. The following sections describe a few of the ways that are available for doing that."
msgstr ""

#: ../source/auth_authentication.rst:62
# c93b16299ab846cb886d70bbc68f397b
msgid "|curl|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_curl.rst:5
# d83f94913a494bc88798bc2fab4bc45c
msgid "An API request can be made using |curl|, which is a |bash| shell script that requires two utilities: awk and openssl. The following example shows how an authenticated request can be made using the |api chef server| and |curl|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_curl.rst:87
# 68d2bbf4596c4c8a8417d9883d78990e
msgid "After saving this shell script to a file named ``chef_api_request``, use it similar to the following:"
msgstr ""

#: ../source/auth_authentication.rst:66
# d02a9e057ef84ee0ab688a6f2d65fa5d
msgid "|pychef|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_pychef.rst:5
# ef7ad7ce46a54e0893ad9540d0004771
msgid "An API request can be made using |pychef|, which is a |python| library that meets the ``Mixlib::Authentication`` requirements so that it can easily interact with the |chef server|. The following example shows how an authenticated request can be made using the |api chef server| and |pychef|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_pychef.rst:17
# 381d9f33a1f74e7aaaee5a10392afa97
msgid "and the following example shows how to make API calls directly:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_pychef.rst:26
# 1b09134948bf481f8a42b43cee99e93d
msgid "The previous examples assume that the current working directory is such that |pychef| can find a valid configuration file in the same manner as the |chef client| or |knife|. For more about |pychef|, see: https://github.com/coderanger/pychef."
msgstr ""

#: ../source/auth_authentication.rst:70
# 99ac253bfac94292955ead1286766eda
msgid "|ruby|"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_ruby.rst:5
# bcc4b9b7cb334788a52a12c625de5aa9
msgid "On a system with the |chef client| installed, use |ruby| to make an authenticated request to the |chef server|:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_ruby.rst:21
# 45424f179fd54dae94e81f70158d0620
msgid "or:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_other_ruby.rst:108
# 2141c259beb74f15b0eb904691d77bd4
msgid "Another way |ruby| can be used with the |api chef server| is to get objects from the |chef server|, and then interact with the returned data using |ruby| methods. Whenever possible, the |api chef server| will return an object of the relevant type. The returned object is then available to be called by other methods. For example, the ``api.get`` method can be used to return a node named \"foobar\", and then ``.destroy`` can be used to delete that node:"
msgstr ""

#: ../source/auth_authentication.rst:74
# 3d390ee8d31b4c80b00cf7aab7fd25ae
msgid "Debug Authentication Issues"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:5
# 7346a20daa284cccac78841fc66c1939
msgid "In some cases, the |chef client| may receive a 401 response to the authentication request and a 403 response to an authorization request. An authentication error error may look like the following:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:12
# a34073f8cfab4c918b59ac704b6726b2
msgid "To debug authentication problems, determine which |chef client| is attempting to authenticate. This is often found in the log messages for that |chef client|. Debug logging can be enabled on a |chef client| using the following command:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:18
# f812617345394c739db6b4fe3aee4360
msgid "When debug logging is enabled, a log entry will look like the following:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:24
# 180744f8b3b247d6ba511cbe55eaefec
msgid "If the authentication request occurs during the initial |chef client| run, the issue is most likely with the private key."
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:26
# 47025a0115e24c2797879624eeb153dc
msgid "If the authentication is happening on the node, there are a number of common causes:"
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:28
# 897fcd0fbc8d48469800f393cb101f7b
msgid "The ``client.pem`` file is incorrect. This can be fixed by deleting the ``client.pem`` file and re-running the |chef client|. When the |chef client| re-runs, it will re-attempt to register with the |chef server| and generate the correct key."
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:29
# 5766d71fad8f4bd998adb1d056da83bc
msgid "A ``node_name`` is different from the one used during the initial |chef client| run. This can happen for a number of reasons. For example, if the |client rb| file does not specify the correct node name and the host name has recently changed. This issue can be resolved by explicitly setting the node name in the |client rb| file or by using the ``-N`` option for the |chef client| executable."
msgstr ""

#: ../../includes_chef_auth/includes_chef_auth_authentication_debug.rst:30
# d7d2b0975b7942449f836a26c8b4bbae
msgid "The system clock has drifted from the actual time by more than 15 minutes. This can be fixed by syncing the clock with an |ntp| server."
msgstr ""


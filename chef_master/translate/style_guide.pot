# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-16 13:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:8
# 85ecc4e4ce7f4a48b284e27672f8ee35
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# 7d5217e5c110453ba0652d8998e35573
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# bb0446bd41284f27bd436f19f11b05ec
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# c7a86c413b9548f0b395bae98e0af31a
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# ef7a6ca33bf04007be8f0ed32cf74cff
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# 38055852f88d45cd88ffdd2130b874f7
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# c11bcc211cbb47568d752d5c372e1b8e
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# 8874bf3c1e874648aa95c70d318535f6
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# 5a0732a41ef445c3a1e35c66ff0ae8f5
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# 2b624607f72b41559e0fd045b9c996d6
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# 7403806121284714a13af2aaf53e2d00
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# af89b9ba08da4265975e56d4f8da0f16
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# b6874ff6efa1445aae19d19e5fd50672
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# c0d18b0ac5d04da48060c4cfc2954ea0
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# 5024099b04e548b7a14a7c08fc6e8e21
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# 2b37e1ac2eb8446c906128e3abe2e2a8
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# 1bff3bc60b554ddaaa72eba99f9e33aa
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# a8425c379d71429980b9e191161c66f3
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# a7a4badbbbc2475ba539f5626a3aa7f7
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# b37f06370e9e462b9705cf56c9040ebe
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# c1c4bf2f4f8b4735b326cf0cb28cc6d5
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# 2358f1feadc1419fba3d2addacbc2a00
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# 5d77298e4cbf4748a24a7c64c94da521
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# 971a148f8ac0446ca25fe5bdb1f7f47f
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# 131d483c4c974de197f5a4e04406caa0
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# 8dc5aefbca904bf38013b6e23e7ba4c3
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# 161d6080615b410d8ae2331f0517a68d
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# af1579432d944e33805257be99f7c110
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# 8427984a2ef642b3844372ef238b98c2
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# a3d59c2be03a426d943bd123ba2a74d1
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# 7c098733cadf493b9c40e65f088840c5
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# 191d564456d14686be4d728e0013851f
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# 22262ddac8e04f03a32caed093fab628
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# 65b028398e0d4fbd9d101ffcc342ef27
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# e120fc567f1c48cc901fe7f6235c08a5
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# 36ce99d1e4cf4c35b31bd2fc00c62060
# d0511e2aa1014998a34bfd562e62eab4
# 3433cf8e33304314a6214b3d01adfc87
# 95494e51cc834835990934b0a6373e8b
# 50204c379430436081a8bcca7d584184
# c25441f6df9246f29d11fa82c7f4b6d1
# 35b7265e3db543568cd2dfff598d300b
# c0be5dd5448b418495e8b956f09a7ab1
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# 480b388c61f849ad84495cb7cd006a14
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# fc4891e12d0f4217891f06472ac53483
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# ff06761a14c74d3ab276d95dba5e8be9
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# 4fcf8abdde834cff9b569f9bdd6ee8d4
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# 23dab24cfab4412188c0877cdc523df9
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# 4810c486379c4b8994a3773139048572
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# 9df3bfff631c4b52b0f7d186be07786a
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# e5dd4c416fb4424db011c686f62147ec
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# a20fdabd9cfd43bf95cbdae5fda5568e
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# 9dd89b02f00a41c5853e41982cfe04a1
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# 115c9749aa2b4e329a0fd18db3b8ae45
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# 384bd1c8c5b74a77bb45b1cef472e914
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# 771655b769f44a63856546b8c8087ef8
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# 05ff780470c346e78e1b4fcf9eff88c5
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# 812fcaa40f76435bb841a5bc2b5a1b66
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# 0045d8d1f4b040ac866fcf067d592337
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# 67b5b1a5e95d46adb9f7109bbcac66f0
# a4ac19db6ff5401398e217062339ab16
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# 96da699581c742f89a5120e11157462f
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# 44acdfb3f1b34fd3ad1df4d7e759484d
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# d83b47f6750e4567a0b9efed905c9668
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# 1b791bc104184d93b8cd6e6234db0d5a
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# eb6cac71f15343cdb4c01cae6d797a34
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# b0623ef1da5d4490a86a97e541df8695
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# e0ec20e41fa540659ec46b11923eaa6e
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# 4137e3e7ff1844ab9421ee2f4f77579f
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# 1407ab207f6147029566ee37f5084c60
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# be86d3bab44545408de42a2f7c6f5d99
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# b78571067f1941c486c7fc712e7e6fa0
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# c73f566d75c541038474f662656c7a0d
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# bc25488d18df42d0bfa039b79082cd57
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# c14b1a54f10f421886612ed5b14e7569
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# 0cffd61044ab4d2982a538cfeb8a37cb
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# e70f9078fb7d4d128c4e00147caa07e3
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# b3ef50cc62004903bdb7d4c0ac0d4853
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 5a2c707c65b34c0a8aa83cb22b440887
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# 2d212f56bb884d5c95ead03655c3f2b4
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# ce7034165a2b4db985be3b0e2789c2db
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# 399143ea294f4df1b89bf2d961c5f28e
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# a6c6587916584ea1862441e6e4519f31
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# dda64112f4ee44a7b2a3b18641fcefba
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# 8e6e75988e2745d2bb93681fead3e2df
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# f686a3e360fb47e3917a68e4142b1796
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# f317997d0f4942d5a990ac851585d4b4
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# 7334368df8ab4c48909a0b49ec3b82da
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# c32dc7d639724ad7b7519020634a30ee
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# 4adf22fd7c1545939990a4a581406f51
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# 953fabdf12534efebf10774803770805
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# a0004eff70874b43bfc9105be4ed8302
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# 8829662e72ed4a9fa8ec069f0b72b306
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# c0e1686fd8f84e6eaa25e1b870d9da59
# 357bb1fe546b4c3abdd14aa69a591d0d
# 8584b08188274d6e967496ae1f054433
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# d8c55608273d4d82b05f6deb04d9b321
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# 79beca120369439d9ae17939f15cd6b3
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# 3a144acf210a47459192ecb008b05c82
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# 43b7a97ed1274fcd924d4cf3971126c9
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# 1eea7585ef9b43bcbe4ead4b9413365e
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# 7d6777777e9a4d7ea74c0d609b20459e
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:385
# 20d2e4c639e74dd1b5e2d243f3d6ebd7
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:395
# f089200b23634798b9b9e03135256b37
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:396
# ddfc4f5159574d258b55ffe2437ef3e8
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:400
# 8f3e38d82b294bb58dafb46d62c38e4b
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 5abfc42d92414a2cbe40cda7a0dcd703
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:405
# 3117896b87b7420fa769ea43a9731d78
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# 8b91b00d1e8f451ba9d8b4263e02cfbd
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# 4b838777e4ce49c3bb9a4ce0b3360cfc
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:410
# 35ef23256e114a3790ce82d222c6a639
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:414
#: ../../includes_style_guide/includes_style_guide.rst:418
#: ../../includes_style_guide/includes_style_guide.rst:422
#: ../../includes_style_guide/includes_style_guide.rst:426
# 9d16def7b6574cdc80f06473fd39a2e3
# c18234c8086f4ffa81c343b05c64d4c6
# e7166080b831466c987a2a9fad455985
# ebc23edc03ab4e61bb41c0dcf12a7d7e
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:430
# 988059e29f884949822fff84b20efc7a
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:435
# 374868b500ad4ff0aaa449178a7eeffe
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:438
# d0e1ef6a20e44a56b93f4424a7c9053b
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:439
# 5b597d27cf0a4b759b51354a5f2c7cbd
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:442
# b01a16b3490d415891cd93e6ff38e343
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# d34bca55c464467bb430e788d6806a1a
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:445
# 8532f637f5de47e296220b9f52e28464
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# 9f16555ef0c840af94cdc8a9ed86ad14
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:451
# 642342095c3444d98910ccc3010c360e
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:454
# dd9d062aa2264d75b86515164706e96f
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:455
# 80db8e5bdfae43c4b5a16bcd657cb71f
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# 66b612a08d5447adbae3534f7fd149b6
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:461
# dfb375d9218a429c8b838a22863a0a5c
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:464
# d32bc411223740939138d7aaa8644447
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:465
# 7c45d23b78ce49a99f65ba80c1313d65
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:469
# 3a7ba36ea4bb48158666314cc1740c45
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:473
# 45acdbe2695046fd9eff2017318963d5
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:476
# 7853675d1de3486482bbf1693057b82e
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:477
# e0eb770a2f084390b29c50019c5c8a8d
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:480
# a6351495cab04113a0adbd6409eac89b
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# 2cf0348a4cd549228fa6624ca04f1264
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:483
# 736443d82fb7428d999d79212ddf9971
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:486
# d1892bf5692346e6a99c0311dbd5fb79
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# 69cefd2de2fc4d279393737ca606ab86
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:489
# 3ad678f672c34b3682e6e495ec75ecd0
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:492
# aae3d87b845f4edaafb2a87ce13e3de3
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:493
# e3eff69592c546b897da523333c26944
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:496
# 5342e798d07e416487d7b319c759c783
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 0484e3991b0241aba1064bbc39cb9ca2
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# 289ed4830535464c8073e6c6275a835e
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# b988169281d64ba7838e160b259ea310
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:503
# e2d6e9b0e426477e812a665a63bbfc28
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:509
# 161454a4a16b4a8d984f2bd88160682d
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# d2f3a4e3bc374f41b9f596900fab6da2
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# 5bacdd7bb0154ae080da7f2a1fc3bc15
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:519
# 71a56737597e43e0bfe1d085604b400b
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:522
# f6604640dc994471b377671c8b294076
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:523
# 82bfc181e2124e50a13682773ab0cb29
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:526
# 073f11ca71704f04aafda2acb6c68a5c
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:527
# 5b5dc73c1f7644ef986eea6422f720ee
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


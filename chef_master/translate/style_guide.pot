# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-19 11:19-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../desktop/chef-docs/chef_master/source/style_guide.rst:8
# 0dfdf39a899548eea0d4889926ffe47a
msgid "Style Guide"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:5
# 7628ee4eba5542d69e6f3494950381ca
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:7
# b757a90bee284c5cae6e417df7decbed
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:10
# b2d18fb798874f4287625b3df5db46ce
msgid "Basic Doc Template"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:11
# 1696c8512c2a46a8889e774803f28064
msgid "All documents must have a title and a body."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:14
# 921bbe2f96e2484bb311fcce16215957
msgid "Topic Titles"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:15
# c2a569cf4f8941c8ac698eadcbe09c4f
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:21
# ac5716dc457d49809c8f034d0142d6e9
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:24
# 3ff5537b92084182b4097d552b5c4ac7
msgid "Body"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:25
# cef10147e26a4dc08ac36de1b635ffbf
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:28
# f80c7db315914c2e8b514907a25b68ae
msgid "Example"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:29
# ae7cb6535e284d88adfebe448ce1ec06
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:83
# c92e0fc172ed43329ed1d460cc7721c1
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:86
# 8a8ec143ca7f4d798469f0a6abc81d95
msgid "Section Headers"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:87
# f20828440e7846f99650a3a74998d548
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:89
# 3062b928ac2b48b18e1cd33d73af39c4
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:91
# bcff0fa3928d4bd08d16702555051e94
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:94
# f1c7f92d9ff346df92091aeeee6c4ab7
msgid "H1"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:95
# 5fb07eb05528449ab11f59bbf14d2f56
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:102
# b452dd3b38494619b074fd2e48a6df72
msgid "H2"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:103
# 7d50be1b650a4923aa508467b7b4fc50
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:110
# d7d09b1545c745dd8537f9f348e5c90e
msgid "H3"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:111
# 943446500f224833a87f4303decd0eb9
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:118
# fd0ea2fe3b43404886e85c5d68fa1f36
msgid "H4"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:119
# 20352ca82bb9490fb07dc657627325d4
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:126
# b4cab437c9e3469eac052b0b4a5da67b
msgid "H5"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:127
# 1dee66c1242a440ebb7386be6d4c2441
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:133
# 3aaf13c807024ad3922fd3ca9126e863
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:135
# e0cdcab8016c4ced99b376034c70cba5
msgid "**Header**"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:137
# 5833d541d0c54317b4ae464e30abe615
msgid "content, as normally authored."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:141
# be76020f21d64bbbb7135c0fc4be198e
msgid "Lists and Tables"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:142
# 0de29caafc5e46deb32ae9aca5aebecd
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:145
# f1393a7bfdf349948ce441f2d77ba3df
msgid "Bullet Lists"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:146
# 6b314b2bd3bc4f40aa2047afac271b08
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:153
# 3b08c6f9a11448f6892957c036c50413
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:155
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:156
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:157
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:158
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:171
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:172
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:173
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:174
# c9626290c7954224b3872ee5adf70f03
# 44f7b339e8264ea2951ed108683cc1fb
# 084d42b880c24912a4f861ef432f01ce
# 7e1955a56a6043a7a882a264969d5e43
# 899293ce44bf4300beda2e6f142557f9
# fb82a66700394049b60b5f4cc51bd9fb
# 0d30be04d58740aa9acf3ccf27897ddc
# ff6a60a4ce424512a2f88b334c6d1943
msgid "text goes here"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:161
# a7c3cd8696234f36834359355afad9e0
msgid "Numbered Lists"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:162
# 778ff3aa5e214033a0210d044f70c7f0
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:169
# 5612aa7ff05147c4af24a521ace5452c
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:177
# dfa323777d104980b945179c33cf68ac
msgid "Definition Lists"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:178
# 59c6de2e362f4602908cd0b417d17f3e
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:186
# 46eb5a83b7cc41a39fe672e2ba70b207
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:189
# 58ec69cf641a481d880d7841d62f687b
msgid "``--name-only``"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:189
# 2dea9848bb6143dda315fc6f5be5fe34
msgid "|name only|"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:192
# 6585ffba267a4bb895e07bc96a2a76a7
msgid "``--name-status``"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:192
# c002f0b233214c1ab7061d8dc878a7ad
msgid "|name status|"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:195
# 49d3fb1838504b2fa53f6f9b742a85e5
msgid "List Tables"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:196
# 98e50873d1ad48a580cfa34185e5527e
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:209
# fdc9ba45f2d54287b3b40e98eea85281
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:211
# 2f5e4b36724745f48b2ce11041edfa62
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:213
# ca95f23a6d2f41e6ba74ad4f0181e287
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:228
# f45c552e2fec4f29b950840d292a0155
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:234
# d985d81e68cd4b7eaef0a4352ef1bfbf
msgid "Header"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:235
# 38d2567142004a9c9ebbd9036029232e
msgid "Description"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide_example.rst:4
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide_example.rst:4
# bbc401b8e73a4794b69c5ec21eb027f2
# ba256ce7b9d64f7da471b1853f98f395
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:238
# fe8bba384df94f6699c77bedbec7cd8e
msgid "No image, just text!"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:240
# fb6ab5675c954641b814b0d206265f06
msgid "|chef|"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:241
# 91f80281e48d4eae877431b99d30dbdb
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:244
# 23b3cec1fcf1473aa3de5e65327c8144
msgid "Inline Markup"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:245
# 1a31796ca467441fb870b99a943a845f
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:248
# ef2b8a38e23647b59835cc2d95570fde
msgid "Bold"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:249
# 142a2a1e9078499a8603cbcaf0f4acb0
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:254
# 7ca40fced7514cd5904c0ae56cb96b7d
msgid "Italics"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:255
# caadd195efcd489f8639564b6127035b
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:260
# 636c03135a854fe2b00d48cb20dc2903
msgid "Code Strings"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:261
# f93708f53007408f9c4a9ddd70868b05
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:265
# b39d186732e34a00a22acd635b38b407
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:267
# 58f0a14a4703488ab52f1e5df8c6fe03
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:270
# 2851982dbeb449e8a3b07e77151d2ddc
msgid "Links"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:271
# eccfb7fc0c8649018016fdb67fdebbb1
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:274
# 5781e68cd41e43b7a250918f7376d311
msgid "Internal"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:275
# be32b4dded6443cca465a58bd08abc7c
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:279
# 8e281196000c44019613bd9e3279963c
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:282
# 928a60a52dee4b15b05cdccf775d5797
msgid "Internal w/short names"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:283
# f29a08aef6d84f5ebdce579211d5f6f8
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:287
# 2ba909c4f3f14dc9b87cd5e1bacc4f28
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:290
# 2a6da4f14cae4000b69bcd580577054b
msgid "External"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:291
# 78800886e92c4964b27d101da6277d48
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:295
# 10e9ea6dc4e14b689b0d14948e6aa250
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:297
# 605bbfe9f9e740a7a3af8a6bcac396bd
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:301
# ef4190caa3644d538f4e9919dcc299a9
msgid "TOC Trees"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:302
# 5264b8687cb641f7a09ffe8e106c99d6
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:312
# a41badb1e3b64eb4941f518e2d7e4646
msgid "Code Blocks"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:313
# dcc512c1f5254905b822a3d211c8d879
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:315
# d8e698f3ec6e4cf98be9b4a3dcb1f2c2
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:318
# 330b424b10974139b3a76cbd5da6899c
msgid "Ruby"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:319
# e36e142efa544f9b9729c425f57f9047
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:326
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:341
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:361
# fb3ff919c32843c996b9a2c72e493eaa
# f7d6ad6a430f43bba09d38145de8fc7a
# 45e5dfb95b374b1283858e6e21faa642
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:334
# 9c70522778d145db91f04913ff707d2c
msgid "Bash"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:335
# d5b605b2e86b44b3b0c9499f1a263c48
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:348
# 0da8a3cc975b49478ee87a68946c0d44
msgid "Javascript (and JSON)"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:349
# bf3ccfa7873f42aeb003660e9679c05c
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:374
# dde179ec5e644114877e9ce95ddb0151
msgid "Literal"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:375
# fe64d1e240494d38a31283343b2a7e87
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:385
# 1e1a3a1aa14040eb9a3f353b295c9ff3
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:395
# 1eacc925dff34a15a96b0f1c840a891b
msgid "Includes"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:396
# 62e4500b2e954673ae1d0823340ee230
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:400
# 929f8fc79dd44a73883e7dd8c03c5dff
msgid "What it looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_chef/includes_chef.rst:5
# 04bd0fd51f90420cb28d5ebd23edea48
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:405
# 00712814e9ff4873add75a0a335e7aa4
msgid "Inline Replacements"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:406
# 2c21746d725b455590b4a6a06b4c1bb4
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:408
# 99b6a1cee4fb436182b2504b2627a51d
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:410
# efd9929d5178480c8ffe34b449fdba03
msgid "What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:414
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:418
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:422
#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:426
# 87b04b1d154147f4b65826f11ce305f1
# 4158b05450bf42d8abb59d212af7d66e
# eefa511755454a09845dd085a0d0b9c7
# c4288538d5c9495ba02593915951c00c
msgid "or::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:430
# 2b8d69f4629242c69da688ec0b581218
msgid "and what it looks like in a document::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:435
# ac95664ab4eb463bb3c18217fb9e95bc
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:438
# 2d7e83aee6db42c8ae37e4347b543290
msgid "Notes and Warnings"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:439
# d3e922813e584a67a3d3da5917a439d0
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:442
# 4e4f394a11764aee939e0a0fc63312a6
msgid "Notes"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:443
# eb9d7099bb5e4297acabe1cf90153d57
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:445
# e257993ae7654d5b82630831c3fc0879
msgid "What a note looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:449
# 6347013f6e6b4e0ea6a10537506f717d
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:451
# 2c2c50e431db4ba4bf8386fae5fe5904
msgid "This is a note."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:454
# 680f970e64194d73aa7f847919ea3ab0
msgid "Warnings"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:455
# b7c0be6c9a7449a7bd6f2ca732949751
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:459
# c02d1a179a984a37b21893dc5af8cd3f
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:461
# 81fb10a81e134816ba45245953524e45
msgid "This is a warning."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:464
# b650122ad9b84376ac15ec39e9da2657
msgid "Images"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:465
# 1c3d8f79a2a04464ae8bd060577bc978
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:469
# aba55aa7c37249c0a2a3fef30bb1cf91
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:473
# 02e0e078eafe407e9f98f82a0dbf71f8
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:476
# 3e69ff26df9c4b75b351f2bd6e858e10
msgid "Doc Repositories"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:477
# 9174a96b5bef4da6be0857e9fb977f10
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:480
# 8516229509bc4d18b02a61605f87a0be
msgid "chef-docs"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:481
# 123c7b5b88ae4ac79ef29e8b156e03ab
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:483
# 083ad709d95a4cb490d86ef5d6672059
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:486
# 166aab0141eb47b5a6e605a404fc7872
msgid "quick-reference"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:487
# 80ddecfc7caf448ebe4de478411b4c9b
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:489
# 68d3fc8a21f74bae9330d5b08695c975
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:492
# 0574b699ce604d179622d092b2d3ce8d
msgid "Localization"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:493
# 50520511d5c94e0e92e5a2f881a17f00
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:496
# 834b0e3a73144438b916c3b82e0a8f08
msgid ".pot files"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:497
# 09866836e9ff43a6a916e5e9776307c8
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:499
# e38a4f23959445b59681f3f6d8d3a499
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:501
# ed6d5076e80b4659966c3f72100abc91
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:503
# 10e90e5c36094a1eb4d7b5ec45b7a8e8
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:509
# 74b24d11c2184b83a43ca8844dc17150
msgid "and then for the .pot files:"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:515
# 41f97b8a231044fbafe79c0cd3a4016f
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:517
# a44f977b7ac84a418dd3bf1c3c12fdaa
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:519
# 17354eff1cc84f80b772d1b3b62cb60d
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:522
# a9b414ffd1ba47fbbaecad775f592fc4
msgid "conf.py Settings"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:523
# 3036556ae79142759c24624614745f19
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:526
# 1b1dc40874f8424ab4a72907e80d19ad
msgid "rst_prolog"
msgstr ""

#: ../../../desktop/chef-docs/includes_style_guide/includes_style_guide.rst:527
# 90f384bfc9cc48a6a38e465132f0f65e
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


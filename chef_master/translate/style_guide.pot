# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 23:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:8
# 0be5bad9519144b49343866355c64d90
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# 94ec653fd9a34c8ba612b1f929b358e5
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# 2ed730007d4b48f3a77ca0ea0929128a
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# dd07969fb254414bb40a2930334c05e3
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# cd09dccfa1db4358be506e1fd349c187
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# 0502e07267324d6f8140e0a41acf47ae
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# 8daaed0fb32844c8b99622006cae8be3
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# 7d964fcfc98343ba901933ce5d6251d3
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# efcab7e7cfc540c4867d1e083a74fb40
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# 84f8c16907f04bba874c70b4bbe8d5f9
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# b4b0224515774dfc9101d1145e133abf
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# 8de54d928a784de9968d152901f82b5b
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# c1cc05026af449df8ac3e4af6224c3bb
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# 0192a1ce90784452aa561d2cf8f40e07
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# b6d8f9af4bc04a1ea5d8b18d8b0edaaa
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# c309aacfda824d96910be1b79ce3ef12
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# b44157b0373f4f4c8b4a3e29110c10c6
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# d4994ce6735140a1911e0ed9678fd9fb
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# 9a7c8387f805425988451eae9c1992d0
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# 4a06e0a643ee4e3ea7fd4cf373505d7c
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# 98e7ce01c53941098eca8f3e51038016
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# 2325ffdc337949cda708226951689924
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# 1d8f9b35c65b49a59323269107c10824
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# e99dec8ee71b43e983ad1b9d55f9b50a
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# cda32b0dc8d54577beb61180cdce3f70
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# df47d253bbc443d0be82d47a1c8f5562
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# a2a72bac2abe4bb2b5bd3f56ba7e0357
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# cdf768191097487aa744167d45d1bdc5
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# 5767f74d066646a6b37416d5c45fac5f
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# 45ba4d0338914142be8bb03b3ea4ac29
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# 8951141ab0544a77be031f643c365e56
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# 8a981260dafe476d9eaee622a0d6855a
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# c44e52d7ef434353b41c5ecb381f54ad
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# d3cece6f4bf54c2e8061a95f4887fdd3
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# c8530b675dcb49c48815a8f267bf6dd2
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# 8c5474d29bf744efaa329ac919f22645
# d478290e552f40c8b4177bd82d656279
# 569b89e9719f48319c6b5a971ee3170d
# d6c028f2f2914b99a1c11a5bbbcb889d
# a01590951c0649908db5369a1496cadc
# 70005585428d426890e92407378f5fa6
# 6999a8a6591a49889a3370e81712aab7
# df9e82e96b504e389100feff575f627b
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# 731187be1af04cf998f16db289fa5f5d
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# 40efb1645dd44623b4df4b29634b511e
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# 99fe7df44f3e47eda41570da4bd18ab7
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# ea96f8c33d02459aa85cd9460dfd1091
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# 7abc62ddbffb4f07b2f24cddcde4b8aa
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# 5d0e869d2c774bfeb36b5d85265cbd3f
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# a99fde17a9324299868fd57aa0ba1443
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# 0629bb9fa7f14704816c707bb6e5d6c6
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# 111ddc5ef97b4041a22b2f46e4e26e71
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# 7970096df39b4c8babad5de528d98bd7
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# 3c4f167485934d8d8255400ecc81994b
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# d0778bd1f1724944a52eba5b8022096d
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# db51a29547374105a9125bcc27f22397
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# 99ee502b2c3744a5a100b3d09ad355eb
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# 2d904b07f25e44ddaf1ac201e1f5c6e1
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# 398a2592f9db4f7cac2990b3204c6d93
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# ca69a083cc6d463ea8c6292624206cc9
# 59714eca8a904ab288f9306286a98873
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# b3361609c9b243c3ae8697e23c64a9f0
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# fd6dafb09e8e4f4d9de61fdbb76fae17
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# 0f5b945c47d846a68bb5cfa89bfcd78e
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# ded7aeca2236442e88d7937a0da3ff57
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# 0010cae983e04baf9999019b914ec052
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# 5d47440b0191407690d6d7eb57de841f
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# 414fcb275bb14925b01b1f03f48a815a
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# f4ed8a1b521c46f489be8f960af5407f
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# 3d068490716c4a3682d7f3d903eeccbb
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# c74aca4cfd5045baa573c776608b5c85
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# c9786c24b6794bd4bf7c293d1c09b359
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# 99ec909a14034582ad051a414b2df644
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# f789a42bc74444d89aabea1318eacef2
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# 345f4f0ce678448396e79c3c6320e5b8
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# bced90ed7c1c4496a1305ad33c63c312
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# 0a3046d22f8c40ed9cfab36300d8e246
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# 9f0cc2adfab645a998008957e5653c92
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 5726e6b300d243a2a33aae022c13c3c8
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# 7c205682963f42c89df7247e80452ddf
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# d7fa720a77674349a38122d60a87c6a7
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# 679614855fc045e6bfc0b0e82d9fd96e
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# 6f6d43bc816142cbb3afd810ae3c44e4
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# cf402e25f0d44ac0bc49045c7d91bf54
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# f0f9cad3c1dc4c7a9c2ec39fcf0659da
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# 45ffea15d97e4e5593ef6a8d42ccdd76
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# a80e6d5f585345b0a02e965fb0faaf87
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# 39739770952f4d8b9e04c85fd973490c
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# e84db762e5904e2685d2eec5610fb0d9
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# fa466cffbc164402a7c6a9987f50de98
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# d2a0daff737d48e59237bfbdd1fd0064
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# 3309e406cfe94cdfabfec07db46ee6bb
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# 21f6981c3672473592787716008f47d1
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# 8fadd78a2f9049dfa6f72f82c36d7395
# 9c619348cada4687a4fede0b36c3cf01
# 47e3694519a844c1a6090e8470bbcfe5
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# 126be90d9aa14422b7c30b2325b12658
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# b9c47b27b3f04cb38e9b5da2ecfd95ef
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# 3da76077d0da43fbb77b9649943c0378
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# 45ac3d2a6ba84b90ab6769c3ebbcaa53
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# 6035e8282bc94e37a640e37ad1e553b3
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# 29ab695b82824169a62ba3d92335be80
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:385
# 9cd4a0644f704fa79766507ba2ed7cb4
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:395
# 5e7d16c732e14a8884282547ebe51e1c
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:396
# 5d1f410a839d4224b9a0fd7d8c0c683b
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:400
# 16149c74140947c392513f26800fd839
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 7afffc8c98ac4a549987f55fe802a66e
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:405
# 9018f52af75a4ce089565a3f27aa2b4a
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# 14c9bbb7ca8a490c8e64283d1326c9b0
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# 425f0a406cd64201b7b590224677bfac
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:410
# c20217c86bb3402eb8b4b3e83923c251
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:414
#: ../../includes_style_guide/includes_style_guide.rst:418
#: ../../includes_style_guide/includes_style_guide.rst:422
#: ../../includes_style_guide/includes_style_guide.rst:426
# 13d833d4771a4565b25335b897e067cd
# 928c6191e7aa442fae7b998086909fd1
# d1473ad61bea42e78a80d40664a1a5d6
# 52997b79d3254c729cca653c323c3acd
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:430
# d68b26033fed4f3ab33470903f6f2340
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:435
# d6899deac0f247e3b870829fb541dfaa
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:438
# 59eeaa23814b43bd95ccd2d7168f494c
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:439
# d62696bf367a4588a045751b20a52b16
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:442
# b096af0cbe6243c4ad2b197a7a497123
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# 747aa7a99b964968af5317a161264c79
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:445
# 8d5b6bfd3a904ae3ac52701dd260e1b9
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# 1c7e00a82294422fb5336b8f84cc8905
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:451
# 725346c252b54e058ffab34d7f988a8a
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:454
# 26b4a8fb867b40f48039f3e3e75cbcb0
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:455
# 8d054142b4fd4b708c7f553e1387c49b
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# 8a2bf6f8e3124bf8b205d6700e015c75
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:461
# afebd2efd0ec4efaa911573a65071591
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:464
# 2ba32b7c9b094f288999a685f5ba2efd
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:465
# d3398573d29249b481b79046c81f75ee
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:469
# 8b9b15132e5c4ba0b721e80cb41238df
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:473
# 7e087162ad25482babc2f8c5f6395be6
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:476
# 73d010a3c60e4bc5a6b299b923786448
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:477
# 5bc98047a31a4f62bdbe5d02fe5ec839
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:480
# 89c4925ba2444c639c5d0361b7c06c93
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# a6e05b5c1563403b8d2d38f839607851
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:483
# ad34fe03c01d42a899fdcda867c8b91a
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:486
# 51dfdb5e9f60479fa58ea3009f199ed6
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# 24cc164b07c749d39128bae6dc5293b7
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:489
# af633e0d4e71498cab493b331ceeaea1
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:492
# 8c256ceeb5ae464281b8da4a1975c119
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:493
# f12af97c95124aeb955b8006e724407e
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:496
# 734a32b1577b44109bd1fe24f0ee1aa5
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 7e1e2762e01843b7b188def58112314b
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# b0b45e8e33044e24a71e370f34b08a35
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# 72d267ad324b4fb887e87c6a73313e57
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:503
# aca50605758c4128928a529c71015470
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:509
# 7280eb859c464110a6efdd0dcc08ca02
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# 89781d20402746e993bac7a8e99b3ba9
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# d3710ddec7af45c68613db36fc36b602
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:519
# 4fe35f6b787d4d939d0baf3d95b7d4bb
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:522
# 00f85eb3326c4037844f11db0ff50d89
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:523
# 3f9bc76dba864fe2acae8bf82ffd5283
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:526
# 416772a4bc4742f0804865ca48dfb0c9
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:527
# 7d09c6a4b0fe4584bfb7a2a310598221
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-09-30 20:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:33
# 5b7c5b5f43dd43fda6d483258bd27396
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# 5da16b70167047f6a709e4a2687b2b0f
msgid "The |opscode| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# d2f728829a044175a950c0fc2d608320
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# 56fbd709887e4938a7a1b1363e85ea81
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# 51c11f0537c2408aaad5bff5e3d06da6
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# cf98083d1d4843e48d91228221485e31
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# 3b5bd42b157e42ce87cf681e61ef71f7
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# 14a90a59caf84e0e81d325c61490a07f
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# 350abd212c2c46d0a72f445bd73ff8cf
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# a14061cd2bf344dfbd79531c2d6321d6
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# d62e544add4044f6907be4f0108ffdbb
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# 245664806147478b880656ef645cad77
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# 0ad0aef6c94045f5ae9091ddf74ba40c
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# f995623904144f7e87a8eb3f0d0f5327
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# 34fc98c461234b5ca4fd73bf21de7ef6
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |opscode| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# ae2b1a5f28344b1fa20c1edb45d2339b
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |opscode| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# 08b9243fc1ea434a88383206d5f36c1c
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# 0c9ba2859a5645f08d4784ce45215344
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# 2a0908fcd25f406baecf3dd20aada9ff
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# 5ed4aa0d0f3a46d3bd69c9eca62ad957
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# e7f57fd4e00c47b09b0c48ed21172658
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# a20cba41b58847febedc6da9db92fd29
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# db8f8e54751e4792956111b8a2a8f3ea
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# d1a3a1cc9d3e4f3e84f07684ee7b3064
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# 7d71a10ef0474bb2a704e1db226bcbad
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# 4e05565701964fb0ab7acd810d3442aa
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# a04f3c3b7fdc407189fa87559291e305
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# e8eded5a7368487ba21d7b803d891805
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# 0e83c1275cf54cb5b1fa0f5c52abab82
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# 7ad9044dcdd0427fa34d59107d329075
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# c224617f4068410cb68d50b583ab181c
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# 959b404ab23f410bae5edb6b83bff488
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |opscode| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# ed75a73e7f6746f3b661b381f7be1b04
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# ebeed4eee2c9460fb2226cde1c3bd175
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# f8285a5467484dcc87133f606b2a072c
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# 8b052c8ceeaf4b70bcb2d1632584a756
# f7be011051144b9d88810e0096de54e5
# 698fe2e8c3114e2ca91ed913e3bfb3db
# ef2f9d9f0eaf4ea18089f284bcee6538
# 13a5c8cc11434338bf24297dabc09c62
# e99b75262c9847bfbfcbffd9e11f83ea
# bd95fab769e446019ae9c30be1111d3d
# bf326b305a1b499bbbec20ea5609579f
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# f8a3dd72edcd4bc9a3f94331ae2e3cf6
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# e3eca667e63b404cb047ac9d21dc3355
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# 4c0819eb2378464bb745e02301ec8439
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# 1cadd18564bc4b35a3b5e3ab754aee0f
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# 65144b23aaef4c1f83f1f89bd290aa29
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# 82ff00ec25e74a9f9ee84e6a11f3b4dd
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# db644f1f3a2e463c9d9aa47eacc0f8d1
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# b7b3910e3cb149bd8c9eb9e961af5280
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# 11e0ccb26a5947459ef320689c346ddb
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# facf0d9c4b8c488db098e5c7dba877c0
msgid "The list table is the only table style that |opscode| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# d3f5d18775924c4081dec2a1107f407c
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |opscode| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# e0d7050639d042159afc6e9b531a94a6
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# 54d75caed2f847d9bf3a514d30c18165
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# 0672349d9e804f25b4f83788e0c7a910
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# 323b8106d3864fbab2e9176a9f6883c0
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# df96bafa7aa34a7c96c1e63b32e2821d
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# ef15d7cd44a047bfa560b7427a42fb87
# 9318d467c5e14567b8be66976f731e4c
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# 62939a22143c45f1a21669e84995706e
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# 16e7f9fa6d05489da51a78352608870d
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# 689395806bdc4e0b90fcbe0d6a2e1f33
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# 0555a7ab9a4d440dbd319f649bef277d
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# e5ddcffe4ad44cd1b7a0a20e624702fe
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# a7824a4e6f954f6783642d59a421cf61
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# 2eeacac10e6442eb8ce14a98df7ddd67
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# bb6277cbfb21496da799124479430769
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# fbc8fd775cf04b5687c75f4c94399dc9
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# f56fc45e4917410fb3d26a8bf4adff21
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# 9668710f2f3b4775953211280badfd7b
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# c18d3b74a78c475d980e3e97087cb422
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# 148abcc26ed34c4fb4c7ad10cfd36ade
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# e56cd39db3b443638498762478853fb2
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# e39cc2cd0ba847e1b6cc0a60de444d85
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# 1f00d4da7489421799540e0d6329b9e5
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# cdf13033d3ab4286a3b7f4b7bcd18045
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 3012f75faf2e416799417024d26c6dde
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# a2ca00c22f2a4f92a93bf0eaf4f384f8
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# 2b5cda636bef4135bab5e5b9eba4b4e5
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# 262c4f28a04a4b14b043c65a7a75a6df
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# a3f6f87baa0e473c9eb3b8983b74a8b3
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# a23a17cc90f24aa6acd1860c84758aca
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# 255fa80123a244e99fae1d145499923e
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# a4f46b0ea37047198c5d1bc41e0684a0
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# 706b3a4662b140978ea68aaeaf99ed0d
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# c34583ad2c4e4e0884d35208287cdfca
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |opscode| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# ff9ec35134f24b0a95532160514abd73
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# 4d8bdc651e84421aa82e99e0ef203dc3
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# 5dfd9f658ac841899525a05725935bd3
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# 18e6bf3437a84704952a86f25d8da486
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# 2c53036149ba4456b5801b2ed14c18c0
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# e4c3e1a8ad7c4c4d84dc141f5559c41a
# 4fe6dcf6aa554f35bd75f54f0c51fc16
# 4f7c193971c24f5f91c329b55a4ccf58
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# ed8aaea823c94fcc97615b198a140b8b
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# 7536dbabe74c4cd8aa172a2db34f8fba
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# 99d61c6ab2be48a581c4356c2717a84d
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# 567c207f6e7f4d21857375f07a3fe37e
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# 562a025072804418936a59e2dd605828
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# 725bbd82e67941388097cd6b8898ecfb
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:383
# 62e088dd2c8b42be908bad2ac684e271
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:393
# 46774adbb84e4c40911a1a83f4e467ab
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:394
# e85ed9ea11d940cab6f2fc0f8bd01479
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:398
# c7324219ed324af081b7796f0f32d253
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 62243c7bcac84fad82a6eccd79229dbd
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:403
# 1fb80b6f4ccf41bd8bac53b126672bbf
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:404
# be3e497578564e0a84f092c9d8299d43
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# bc0db3ad4878400890b3ed7575826d91
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# da82bbd6d14b4a6ea8a6607a060c0fcf
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:412
#: ../../includes_style_guide/includes_style_guide.rst:416
#: ../../includes_style_guide/includes_style_guide.rst:420
#: ../../includes_style_guide/includes_style_guide.rst:424
# 0587942accc74373b3dadd407fcd7c8a
# d7cdf9dca4224bb8bc964032ff116da7
# e848a143e17e437aa3da9352265e6982
# a43e75ad5e6049e3ac7c3dea56e6769f
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:428
# 648ccd8720c34e809d5b0cfc56afb8d7
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:433
# 6c01a9730d7e4cb191a23fc9a83481e2
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:436
# 16c387567a88426aafccf107257567b9
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:437
# f05d3fe1871a4dfcb961433ec92d26ec
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:440
# ccd731b295a84f4e8cfe08bc4a585c2b
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:441
# 6e8a95c4d38a4e5cb87efe85bcbac30e
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# a3ba06370c7c4a51b0928c65eb086ff9
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:447
# 47ec33201c1747ecb243cacfed905358
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# f01b7440f3b7479087a4c8fadb9979cc
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:452
# 1c1a46989a104079a0e5f2049f833201
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:453
# be2f03a77e27460a91bd7d4cdbf565e3
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:457
# b4d1a0f989fb42ef877e857db61128e6
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# 31f11b8919ed472691898c3f41912249
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:462
# be22fd9e2a674d31ade4766b5755869f
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:463
# a000be7870aa4deb96f6a0e28dd6838d
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:467
# 7de0f340cab243e088ecbf1e910401af
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:471
# 2406d406079843f9983a2604083e13e6
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:474
# c8e810c8b375486aa4d91b4282996616
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:475
# e986532ddead4dc193e2150420a3b48c
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:478
# 458cbfd3ad234c9493426cf4b6846d1d
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:479
# b1fe152b21234c5d8a7530d35e9c2fe7
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# 9faf4e1f8ae14ffebb01bc7440eed40a
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:484
# 0103a9a4702745beb70210a21297963f
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:485
# 236edb35b3f441fc8365beb24fc0d914
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# 90e5e6606c954a1187ee80eb59c44f7b
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:490
# fcd5fa2085f549d1bd2f45147103d9d8
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:491
# 1cb47230a28d450084dfb726c04d65c4
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:494
# ca3495ca904d44c885389a567b27901d
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:495
# a3afa33967b748afa2d4ac652a8f95ff
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 5f417c938392465987b2c082d26c1dfd
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# 37f2731c067e41bbae405c2d107aa823
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# 6da97f5278b04ba29d991d50b4a22be7
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:507
# 3e96c790ad2044a7ae31d1ed5ad31c72
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:513
# c37b3c76414449d1bebded963dab9b20
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# 1720ed551e8745d498c6993dc13914fb
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# d6e21833e350405ea0c18614bb2a4b43
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:520
# 8fb0780f7677439ab2e7a6e3254fa1f1
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:521
# 92262add7a434e5089aa125eaad4cff4
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:524
# c2d4ed9c4a3a41d280e485190fb2dd25
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:525
# 1d2dfa2ec76543708d7294dc467e0c08
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-11 15:41\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:8
# 33455e94205a42d5b27b5528520767a2
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# e2ffe6cc5c954751bee8e40fa7abfc3d
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# 2f6dfd3418504e0cbf922591c7cb95c7
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# ed5a1b937d3f4f1bbbdfe59d64599496
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# c5e4505d09e74281a6affa25571d3ac5
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# a53db0d8251c4890a2684ece7f597e41
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# 5685265876c8425f80873150d89ecde1
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# 1463656db99b4d41bbb9c0ba37668568
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# fad4996f5f89414cada521aae7ec9bab
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# 755ebe3cf5c6490abb1c55ac443d8bbe
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# bac954d59e7d4c7f9f70ea7811398551
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# c94f722601d84bd894b9f04c9df6d0f2
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# 0780d0a5c4064a77a0113084410fca67
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# a8578c1c92f74e55a65b55e5c36c9d9a
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# 1b7b387746e24e4ca7ef6aebf231c946
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# c063339b571b4e6aabd73db1220d1ed5
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# 2ad14c19080a43e7a58c8f4d70ddc615
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# 9beafbcb08aa43ba8ffd405bfaa3f7f1
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# 2e4e9e07d380427bb146f16c054894d0
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# d9de7441b2264b89811f8ae8c9a0d2b5
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# 1851c39ef6cf4a6daede3f1cec8892df
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# a30483aa0ba848b0b532aabf012b8efd
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# cb705ada4ebe425da956f0177fe81593
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# 68daaf3363564dacb7f14d6671120a07
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# 64113def24ef423ba7275b99e6eef9eb
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# 24c26e77aa0a461eadc86672c3abe7e9
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# 618aa1c263e44a789ebab5fdf0185229
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# 21f7813414354e4ab32a3333069defd2
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# fef50cc5b0454222a191b4e3a57b7b13
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# 8dd746b6adab4e24a2016147e2f1b78a
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# 84cc724618ee4f4487b11a33b9e30955
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# a5ccdcf55c1a47a6bef9f7f6d94d1bc0
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# 7515d9f2483b45c5acb78b7167f7f201
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# 1152848bdefd42869729bda87e6ee259
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# da9b01dc11ac4e398c1505c61f839265
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# da02df437d004168a074c9a0842936ed
# 9bd459f57c5b48ceaec0e31bbf2eadd9
# dd5de4e732db49a5beff20ede3b295e2
# f654c6bbac2443469008c098c0cd9ea7
# 2bf58769c15a48058223c754fb7670b6
# bdc633fd08d44e128571fe28320c58e0
# 08732152ff7e44ce918faaa00815ab20
# 276d96483b8b47b4b781dd6b40307812
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# 7db2c151451941539fc6ddaffb2b33e4
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# 40b683e6afe742edad34be0af19f0bc7
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# 9fa32a22a14a40b28c688f80dc44094c
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# fb9ea1e7cd60479f9375ff06c786214d
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# e7e5fc0801c44080863e01be20673fb9
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# b3a2599710324459941f90e380e08fde
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# 93de723dd894404eb725c11585081de2
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# 455954aa929c4a9397167f2a50869daf
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# 823322e8eb98459082749832ee79562a
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# 7c15e5cd40aa4bb89422ecbbd60f5d78
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# a4dc04e4d4e141468625d2642466dcf4
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# cdf6503d17d041118ef2baa9c406b534
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# e637e3a3de7749b48c11955b560d1002
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# feb68c28f6ad4a309fccba2231f1896f
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# 8c4d777db6ba42a6b3428304dcffdccf
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# e8e8114564b64d63981e080caaa64f35
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# c5c7b56f352b45e09afcb1e6c3175089
# 8fa3cb0060f4404397fe75daa98f9de4
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# 2b01fa55ce0c42eda157c36a9deab04d
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# 4e7fc14d03804f1081fc1d88ce05b2a8
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# dad64e9eb76142208bccba71452ec63e
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# 5938d030c51d4740bfaf0f54d07c71e4
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# ced23cf72ac346069506c79a5d351c52
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# 786fa631a3844ec3bb0fddff10aebacc
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# dd74202ab6414b98b46fb028eda89661
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# 3de55a3f911f41c6b635b720fdfff1a0
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# 898c187b095e447f9e7efb62db1b81f6
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# 42afd90126ca4be7b7878be863df4a87
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# 3a919b53ce8f433cb60a77b3ce2e42dd
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# db44956b6f73436f9749075cc1ed9609
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# 30b7824624794b94829e690bf2e9c117
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# e26fd12f4f954d0a9eff9f91a6ae4c99
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# 04047a6dcc804d3fb683b0999ddd1b2d
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# 2552061c1f194f7e894727883e930f43
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# 01296082e66d4d9ca26f527a5934a432
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 11c13e793f804d98bea22925d203537e
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# 0c9849713b2a4e9d8d9ae2863a92780a
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# 490cb8a67bf34d75a99fe7e0275946dc
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# 9551ace919c34bf7b6df14486374431b
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# 605142f696184e5e8471c63f49fb08fd
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# 5587c76d673744938877254c2d7b6b0c
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# 0065acdaaa704e56a413ff6b4d09b89d
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# fc7099ff9934416bbfb600e865804a61
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# 4dbf5a8e38ba459bb97344e5d6a3f5e5
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# be47497a925e49cb97ee73a36e98463c
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# 5990cf132c6d4357a40a3386fe5e47fe
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# 98756346244a46069133051a46c9f010
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# 65d499144d4644db892669bb39a699d8
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# d74adaa2d8b4440d882fb2b49e8091a5
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# 8485ae685c0740ecae510564577b2404
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# 80161ed5736e4fe98afd9e8cd5ac8c1a
# e6cd28b607f445bf88cc323af3fc0f45
# 35be0a3800c94fc3a35f8a91e7ba25df
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# 8982411e7cb54aed8f1ff8240a0da3df
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# 621845eea5884e588b935dc4461072ce
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# 0c7ecf0404704089b51953d2a8aea1d9
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# db9d046c11124dbaa56dd4e6eee16856
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# dd0781cbd2664b93866a19fb5bfcc5c8
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# 12ab9528bd0b47c2bb9be622d21b97eb
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:385
# 95bdc113f92c4044b3b138da9bb122b8
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:395
# bd6c2321cae542d89b871e6a91c6b642
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:396
# 8ed64464db6b48adb1d3105ddc9d3d73
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:400
# bb6ef90a16e7436299a52d20306fc1fb
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 10f1540933cb465097460de025143bba
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:405
# da898fe2fa614e6b8849fc4eb302a1b2
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# 31cf57d61b0b425895cbdbcdcb4515cd
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# d1f7267ad84541b2844411459601bc3e
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:410
# 0493d0892ca5435f96a3874d5c2b5ed4
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:414
#: ../../includes_style_guide/includes_style_guide.rst:418
#: ../../includes_style_guide/includes_style_guide.rst:422
#: ../../includes_style_guide/includes_style_guide.rst:426
# 14d14d1a56314fc8b41ef4da331d037f
# 866683f38b284ad9b6282bcc8f185404
# 67b405a7deaf42b49aea06ec6ba9bf52
# 8a298a6e5a0549cdb8ffb52b387688ad
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:430
# b0f4baa79f33422c85e5621b21a84e5f
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:435
# 63b01f5e1ec2447e8d794d7650d7fb38
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:438
# 5cb3bfe149f44cf0b217d32d3c5a0933
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:439
# d6487cc05d4b49c087dcef2b042f8641
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:442
# 9be0591ddec84341862d4cf0cf97938c
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# c3029488c1ac48abb5d587e0830b8cc2
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:445
# 6b1770e14d6342919268d4ba5645c571
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# 2c19afb33bf145248055b0d63ebc8a3f
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:451
# 1cade9ba8fca466c85e190f2d9bd8dde
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:454
# 82f95172e09040ad866e2ecbc738635c
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:455
# fa34af2a4ed2416c9e472bd0b1fc5024
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# 0b4524bd671b479dae4b74442c36d04b
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:461
# 3624b2f9ca9f413e8b0200fbd92b478c
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:464
# 2bd76f9093fe43d7b3d659ddd3552c05
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:465
# 43228d55c34a4bcfbf9e23305c4002ab
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:469
# 1a41eda064774f1b98376d46d7a31b7a
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:473
# 5c0d750037764373899d6c71ff58fcef
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:476
# a2bebf75c388492f9d3476912bf80588
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:477
# b841b0a63eb14ecb9af81511602e3523
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:480
# 6ef6619c81ae4468966712403a8d0740
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# 8a8c05e2247e460c9adac2ae1a86d9a2
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:483
# f1213d060ab0451d815b3eaf55ff9ddc
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:486
# d51af30ea34f4eebb5946926eb1d1ebd
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# f2bba9e10ff642cd9414e5b8206e9887
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:489
# d0cd83b348ae4a2b9407c44c51fad2b0
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:492
# 83b61ad0199a40b1b8194b9801806a6a
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:493
# 504e539104754487abf10bc9a7239f17
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:496
# 4282ee0d966a480b9c5b24700ae6723c
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 3dc3e569e8264aa1bbe80de71a9ac961
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# ba9b4d586cb94ad3b8e098e581d918db
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# 8b16f575e3824b8e8918653817527512
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:503
# 0fdf7fefbf694e00a9dc59e2f702a568
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:509
# 66316674534a4d32b1044fb6b8f57b5d
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# ae80a98bfe5e45c1be9f06deecc7249a
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# 736cb864a5f148db9d5dc40b3ab1cdac
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:519
# 14a1658fb6634169a0c31e84b19b7d83
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:522
# 12c24630a8c344d8a98f071463530458
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:523
# a7756506a0d64d07abcada35b5af4d7e
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:526
# 18b75de0d1784f828b55cb2e5a21ea28
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:527
# 440b7fdf73dd42dbad2ff8805964b532
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


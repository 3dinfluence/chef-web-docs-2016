# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-01-03 23:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:8
# 039de30e9b094c939f4529b485118d60
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# 2b7543d90e224c73ac9d2182acbb3c34
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# 81c7aa583f864c73b6a4f390e4bddaff
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# 385ef0e294354e70b8603e781e70d6e4
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# 12b9fc9c8fc642aba3b7062e1e4e6af7
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# 9174fdd525344d85ae40c33930c119d7
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# 652a81575a9f4b2ca56a9d55c1d16807
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# cca97767fb4c4a97b3509a4810070791
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# 5d7af0a1f41b481ea64ef26009a77119
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# a3553f66343644078808b615b8158360
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# 47fc62c16af84f819bd927d5d1f762b9
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# 6b75fa35cba341e4bfb35e8881d4ee19
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# 5004ad72b1b1491185cff3030491c54c
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# 2e4f93483e17410a8d30a8752246503a
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# 4b1511fe3ccb4983bd28635b0086c9ae
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# b0a42cf8ab154f2db717b25b349efac4
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# 57a15e2ba55d4c3a9fff581a7492ba36
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# 8cc516aee13345af825fe0710b36f3a0
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# 876cde0ddde643c6a71762f7a732d9b7
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# f7f3776c3c484a00a66a6e0cc18339c6
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# 4adc4e9e1a9942c892bc0e55c4e169f7
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# f8c42ad64d5242c8adbb63ccff0a09d8
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# ef92e8ea86d44ca1bb60f0389540be5c
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# f23579d89ff244ff96270cb50c29740d
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# 017bf7e15f5846aea1d74d137e80edae
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# bbbdca6f6de5426dbbdefcf1b2ca350f
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# 8b12958b8b3a4911a804da6f2a49a181
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# 0b71256a602643b0b0f4375ce9846344
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# 5dded3af36ee43868ea3bc9c03769675
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# 47850608a2aa42209bc68e991b7aef8e
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# 0236a0b76b9f4d29981e7cdfe18dabdb
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# fbd42dedc0d24dcd9d7a8fad91d0d237
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# 0eb0b85ccc074c998903454fb2381720
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# b6e2a402e4b94966a889e2c569c6328b
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# 643e1e23754841b2b16ffad2c829a542
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# f56d6a617f434c67a4de21011f2e4ed7
# a5cd401b93204975ae4a2238888412ee
# c5355541b3b942b6a396138790860d82
# 38e6c2b08d7d48649764d9a1e69695a7
# f3fa003665544197b0c1e2b07e93d5cd
# bc1857298d0f45e0bd88e75da291b61c
# ef45e5b82654460da27227e937e1aa91
# c6e024b6fefc48e08c1a33f7d8df0e61
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# 9fd058e633b2443b84ef9c83cbcf217d
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# 74d14ab8990b4271b4bffbfd1c8b5898
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# fdcf2761008c41b2a389b1749ae01656
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# f1cb4f7f65894a47ae671e12c37226c1
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# 11a3264fd073455588361323b7921d7d
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# a2d699262fb6464fa3ac1ca9ab1a2eb6
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# 3ca27be8af3a4d3280b472ba155ccabd
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# 92f7ada9ed45479cb081119e67850c84
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# 9513de735b134c20ba531ee65486a66d
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# 7de583340bed46e49cf0696f1f7a7877
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# f0e9805dbf314aaf933a227b80cac2d9
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# bbd7d0cf23e04802b4ae1bfa9498cbd7
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# 7a022a016bf04fa89d76cd040e5b15a0
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# f0fc4952164948e693b22bef6301987c
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# 32e63098c34e4320bcff936920a1e013
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# 2ea4bdfa6bb844feb77b8d31f102df68
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# da17d19cec3c4881a9cf38f3f68b4174
# e2bf477221b74735a915aa5db4aa213b
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# 5bfbc59a07c04931a471d56bad4518e5
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# 833fb206167141629c866536bfad093f
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# e02e833305a44975b0b746ea6d0da242
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# 2afd9a5c93bf4617a4865b109346ac74
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# 54e194091d454d6d96ff3dce05803659
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# e873052a52a3422ab2d874d15705f117
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# 12ae88b1d57e4cefb1a318aa8742fedf
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# 2366e99a418a4b389105ac3ae8a52cf6
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# b2c3a338d6e14f569037dcc9733bf580
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# 35157868cf54454ca4d66bdce36c7185
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# 49ad355dc9b24b5aa4a3e348affe7b7d
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# a4f8f4791caa458f8bd32a1dc4d0f238
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# e14561b2909e46e1bb13b1ec9f6aa259
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# 426e8b338d6342c19859631b71275462
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# 9b8fd84507404fa2bcdbe7c19c60d46e
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# 5fc9970604ee4b95b4993cda27660e13
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# df520877d3b94e10ab858773f9f17e79
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 4977473f9dee458e81669a9368d932ac
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# e5847151724143d4afc13719bba885ac
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# 4690ca964bb944ba94bec2cda2fc1521
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# 71e105accb0945f9862e95257ecc5a2d
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# 9f6eaa43a7934845991f660bea4cb95d
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# c1f22e799bd84cd38d07d546f95d8cfe
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# af0dc650a70b427ab13a8042e3782e56
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# 31f50c963bec4413812f97eb10a21e34
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# d8fa74e097d74ec4afa9ae5d52e63037
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# a6ac285c364146ae874ccd0fdf87bac4
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# 3c35143deda145fbbb29592e5c69a98b
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# 0c13f98d9e9c4d789528f1f6283497ae
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# b1cbddc6dfd24047b8f6cf2e25394a18
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# ae3c34c1ae754837a7db7a47072193d1
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# c0165b7974b1438cb4e2008261407789
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# 80833bd10e6a448aa9273cd4652d0d63
# 50745c3957914b349fc50d2835bf3b24
# 3eb93a4d8c854c56ac8a85081460b1d2
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# ad3c2de546e44c7cbfd42a9b1430d6b9
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# 306770f0af8e4ac2ba079eb905d92d2b
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# b37cb540168548159d4786cf90564928
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# 2aec2ac7928e4bd5aadc571289aea119
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# 604b856c4ab54302984bb9f857d46f7b
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# adfc65aeefc74ec8b932a065815465f7
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:385
# a48afe0404614a1ca8b3f934c28dab87
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:395
# a77e7498bbf6434fa0222e077673def1
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:396
# 99b917311ea448da9aa22b625623b5e0
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:400
# 7248b7830a9c41948dca2673c8825556
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 944616e01ad34289aba57c1c081b8745
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:405
# 34ff88ae0d0d41529f9a462b1b4bfdd5
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# 32fb25aa249f433eab4bd4ff3f20e91a
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# 3fc87e9668334b81a4e9a91e82473d10
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:410
# 47351e20755b42dab34040c1e7f7612a
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:414
#: ../../includes_style_guide/includes_style_guide.rst:418
#: ../../includes_style_guide/includes_style_guide.rst:422
#: ../../includes_style_guide/includes_style_guide.rst:426
# bb1acb1296ba4c4a83c5416f7fbd1777
# 36cea02ee870402585f9c712a0981ba5
# 94ce0aa564bb4b948529c897105030c7
# 1e61ab9ddd4c4ffbb0e5ba4be85b9dac
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:430
# f6dfc463f4354e22b5bb3c8c4c65a670
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:435
# 0d2874dba2864348b4ef36365f4960b9
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:438
# 3c661e1e0fd54c05b7b9a2be5873f76b
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:439
# 089a097611b6482489beb8331af80e97
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:442
# 64396dd46b764cef8dd788c56df79d50
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# c19540f03a06444094d65b4174a470db
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:445
# 79198624b2b74c42be41de1da3d13bc1
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# 69ddf3926a7445dd9230d48737027aa1
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:451
# f9fff49d0f334f0eb9bdc32904934638
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:454
# 04a1590f848a4ba89f6b72ffb7a979b0
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:455
# 81c4a97185574f98bdaa47fa27f1dba0
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# 00883506f8ad4a99bb158cbe06ab118e
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:461
# 41c402b776224d57ade3a80e76d58605
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:464
# a429df0ace7f4186b0566618d88eacc5
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:465
# 18d4d3dbd82c4fd6b11aceb1ba4562ad
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:469
# c9017d2c6b624828a9dcf1b39eaf47eb
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:473
# 62536fd1571e4fd7a6d153b6e0319928
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:476
# 833f512575ca40e788f19a07bb66cd2e
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:477
# 122cd11cac7f4648aaaa6c1b21e515a3
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:480
# 2965f0e28c5043cb8f23d35dfc043363
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# 694fed85417347c1b6efc245fa59ec8d
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:483
# e8fe6c80073643bda47edc63f96cbeed
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:486
# 6198e6037be24811a4157ce97d15f531
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# d92a2616e8f844cd92f86813b2de6e65
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:489
# 7c66930061fb490c87d36a0c47a9fd9c
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:492
# b835d725a86c460397424ec6205bba82
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:493
# e7450b3969f24d3086e75d1446a66a83
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:496
# d1c2731e99cd429cb3211cb4c0d396cb
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 762c046d5f2e451eb8f59780c63d8b49
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# 9f9ded533dda44aaa95c9fe73c9365be
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# 7306f6dc595e4c0b88ad824feb13d6f1
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:503
# 0847eabc744b47ddac0c8305139dd227
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:509
# 8dcbca2cb7b943ad9eee58ecad36914e
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# e1dca217007f490782028f98586a7122
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# f6716f22261f47978cef7768f6665fff
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:519
# 87cba98b75994700b287bf04cedbd65d
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:522
# 0f3a4e983a4c458a9e40fca5a26cca97
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:523
# 8cd0dfbce8754f2890b518f2772ae15c
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:526
# 651291abab8542ae9e0dadb3758380df
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:527
# c8977671123e45d1a379dd9a0c296ad4
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-02-06 22:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/style_guide.rst:8
# 5e2492515b88407987ea73349ea226c0
msgid "Style Guide"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:5
# 78cf466ac0e94eb681c0aa8a8d184e28
msgid "The |company_name| style guide is just a limited subset of the full capabilities of Sphinx, with regard to formatting and authoring options. Generally, if it's not listed here, we're not using it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:7
# 2e942e1f448b4b2daefdce127eca9fc3
msgid "All of the documents built by Sphinx can be found at docs.opscode.com."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:10
# d6316b61fd0944bdb3c6544de221b858
msgid "Basic Doc Template"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:11
# d77c0a6ffa0549e4bbf70337e0953a6a
msgid "All documents must have a title and a body."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:14
# 4205d76c4b8545f5a73ed4d420bdab6e
msgid "Topic Titles"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:15
# f8bddbd6b7184858a815b08779cda5e7
msgid "Each topic can have a single topic title. Use the equals symbol (=) above and below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:21
# df61ac9535ef45a0b271e1f6d400461c
msgid "This is the only section header that requires the structure above and below the header."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:24
# 7ce2a57ad61e47f6aefd16b05014e568
msgid "Body"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:25
# 5eca83aaf7404d75989e69765b4b10f8
msgid "The body of the topic contains anything else needed for the topic. Often, a topic contains an include file (or three), and then some topics contain sub-headers. Most of the topics that are published to docs.opscode.com contain a series of includes files. But some topics, like \"An Overview of Chef\", include original content alongside the includes files. It just depends on what the topic requires."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:28
# 79e812ec2b4f4238bedefb5e54206ee8
msgid "Example"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:29
# 2d728126d6a141a0ac12fb1809cd7ee6
msgid "The following example is the first two sections from \"An Overview of Chef\"::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:83
# ff7fb94003e540cba30a433e65eb2c78
msgid "Elements within this example, such as images, includes, inline replacements, list tables, and headers are discussed in more detail below."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:86
# 72fd241c85a8401993dc43bc40111253
msgid "Section Headers"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:87
# 8857a983e83343fc88d372a462d40081
msgid "Section headers create structure in a document. When section headers are part of a topic that is included in other topics, those headers are treated as if they first appeared at that location (and are bumped down appropriately). For this, and for other cosmetic reasons, the headers in |company_name| documents are limited to 4 levels beyond the topic title. If headers are required beyond that, they should only be done using standard emphasis and white space or through some other creative method (such as creating more topics with less TOC depth)."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:89
# 9a4a7fcec1bc4126a15c326d6fd37ca7
msgid "Sphinx allows many different conventions for how headers can exist in documents and looks for consistency to determine which ones go where. The width of the header must be equal to (or longer) than the length of the text in the header and (ideally) the same width for headers are used everywhere. (Having everything the same width can help spot the headers during reviews or when trying to find bugs in topics. The following sections describe the section header pattern that |company_name| is using for topic titles, H1s, H2s, H3s, H4s, and the occasional H5."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:91
# 6922e2b09f8e4492b86aecf4d6677ff4
msgid "As a general rule, try to limit the number of header levels to no more than 2 within a topic. There can be exceptions, of course, and especially if the document is very large, but remember that HTML TOC structures usually have width limitations (on the display side) and the more structure within a TOC, the harder it can be for users to figure out what's in it."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:94
# 660c994c79d048ae829527d9126dd86e
msgid "H1"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:95
# 93aca33ecec642c69d46f330e4a6ca25
msgid "If a topic requires a sub-header, this is the first one to use. Use the equals symbol (=) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:102
# 12147b8f02b344168ba8f7433c2c1d9e
msgid "H2"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:103
# dffb4057a2cf4c239c427a42016bd224
msgid "If an H1 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H1. Use the dash symbol (-) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:110
# 5efeddc141ea4942b5706d55e9d4e3c9
msgid "H3"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:111
# 2b80e144c3b84c1c9ec066b32804898e
msgid "If an H2 requires a sub-header, this is one to use. Sphinx will generate errors if this header is not a child of an H2. Use the plus symbol (+) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:118
# 8069b61616cc493ca22114f813171c06
msgid "H4"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:119
# b72dd64ea39b42fbaeb8927bbab1194a
msgid "If a H3 requires a sub-header, this is the one to use. Sphinx will generate errors if this header is not a child of an H3. Use the caret symbol (^) below the header name. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:126
# 5f8b323c7ed64588b7b84af0ad7df373
msgid "H5"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:127
# 391f57b2fdea45428489b4308a730080
msgid "Only 4 levels of headers are supported (title, H2, H3, and H4). Conversely, when more than 4 levels of headers are required, re-think the header structure rather than go deeper. If, in the rare instance a lower-level header is needed, use a bold emphasis and then white space to provide the visual treatment and content separation. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:133
# 5f0422b408f748569eee95037ad713fc
msgid "What an \"H5 header\" link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:135
# 9f7342494b624b76806c58e9e66144e6
msgid "**Header**"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:137
# ddafc309dfd644a789d705333d83369a
msgid "content, as normally authored."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:141
# 16e419351c7f4c81a572836c22f6fb2f
msgid "Lists and Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:142
# 5b726f78616d44b19d3cc4ff00e3dfab
msgid "Lists and tables can be useful. The following sections describe the various lists and tables that |company_name| is using for its documentation."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:145
# 47cb30d947c9484bb6d6955c3a0d828c
msgid "Bullet Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:146
# 2cc78620ccec4cbc92c28cdc5dcde3ac
msgid "Bulleted lists are useful for breaking up text blocks and for drawing attention to a group of items. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:153
# 1219fd28610740629300d6f612145b73
msgid "Use the asterisk symbol (*) only for bulleted lists, even though Sphinx supports using other symbols. What bullets look like after they are built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:155
#: ../../includes_style_guide/includes_style_guide.rst:156
#: ../../includes_style_guide/includes_style_guide.rst:157
#: ../../includes_style_guide/includes_style_guide.rst:158
#: ../../includes_style_guide/includes_style_guide.rst:171
#: ../../includes_style_guide/includes_style_guide.rst:172
#: ../../includes_style_guide/includes_style_guide.rst:173
#: ../../includes_style_guide/includes_style_guide.rst:174
# d8bbf58c297945409098a20356fea5cb
# 2da875a8f86243eab9d805c752729ff8
# d0a9d7cd847d4712b2420dd7a8a2be6a
# 54cc9f822c224c54890c92897e697036
# 9d4b0158c71d4ae79bca3b59054d19b6
# 2013ef90c4b943849c72e201a424f17c
# 76c3b86dfd0440e2b8b37b719f4d1307
# 569ce055833a4f85b00a7dab029c46e1
msgid "text goes here"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:161
# 4c28694ebcca48a7b0439f7bddc7e865
msgid "Numbered Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:162
# 66a7c977573c46b3a68511115b3b39d5
msgid "Numbered lists are good for when people need to understand a list of information in a specific order, such as for how-tos or for process details. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:169
# 845bb859e5e344f08df1ea3b95985e13
msgid "Use the number symbol (#) to let Sphinx handle the actual ordering. If the number list needs to change later, you don't have to worry about making sure the numbers are in the correct order. What an ordered list looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:177
# 32bdb003dd61402da17ee6efdf1f5dc2
msgid "Definition Lists"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:178
# 206fc0d83950442f8ad2bfedb7a66272
msgid "These are used primarily to show the options available to a command line tool. These appear the same way in the HTML and print documentation as they appear in the man page output. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:186
# d4ab3017548f4cf99708a1789340e72e
msgid "What a definition list looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:189
# 56a208026f5248638a1c6fa22dff6f08
msgid "|name only|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:192
# f28c72fa79f94f3b835709268ff2d918
msgid "|name status|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:195
# e1ced364a2274064b555b14e23aabc95
msgid "List Tables"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:196
# e68a8ce9a07442c6b18153567d73afd9
msgid "The list table is the only table style that |company_name| is using in the docs. Sphinx supports other approaches to tables, but they are crude and inelegant and are a pain so why bother with them. What the list table looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:209
# 5995bb1b0b0943be9ba128cb27e28d33
msgid "The table cells support images and includes, along with all of the other standard Sphinx that is being used here. The widths can be changed and the number of columns can be changed too. In general, |company_name| is trying to keep the number of columns below 4. When creating a list table, think about what it will look like in HTML, PDF, man-page, and other formats and keep in mind the width limitations inherent in print formats."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:211
# e4d422336d40433b9fd30ffae922fba5
msgid "Tables (as opposed to list tables) should never be used. This is, in part, to help ensure that all topics can work in any published format, including HTML, PDF, and man-page, but also because list tables are much, much easier to work with."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:213
# 03c1afce808c49f5ba751f8e8e34b479
msgid "What the list table might look like in the source file::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:228
# 21312b50f5f947de8387b42207d99ebd
msgid "and then what a list table looks like after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:234
# f58850537020463ca0b7dea003aaad45
msgid "Header"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:235
# 068a31f5d4cb4e7583f874c3656963c8
msgid "Description"
msgstr ""

#: ../../includes_style_guide/includes_style_guide_example.rst:4
#: ../../includes_style_guide/includes_style_guide_example.rst:4
# d0195e9064f24d2182182e776d20f508
# bb13667716634418be5d8b05927d9ed3
msgid "Lorem ipsum dolor. This is just an example."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:238
# 717b933f708f44869ba55d229ebd2fc9
msgid "No image, just text!"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:240
# b0bfd96c22ff4cd6abd6238345d298cb
msgid "|chef|"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:241
# 3d50ba62dcb14379bfafa2b214ac195c
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:244
# 710effb525a34a1bb10c94bce14ebd45
msgid "Inline Markup"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:245
# f379203c04a746b49dc97e2fa2b73813
msgid "Adding emphasis within text strings can be done using **bold**, *italics*, and ``code strings``."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:248
# 715acab557824f85a295631e71b1517c
msgid "Bold"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:249
# ca00cc4f5be245de8278e1c3150ff7d9
msgid "Use two asterisks (*) to mark a text string as **bold**. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:254
# 8f3d73298a3b4f7e84eb645bd2c1b198
msgid "Italics"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:255
# af3fa41318904410a85c61892bd38026
msgid "Use a single asterisk (*) to mark a text string as *italics*. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:260
# ba8f4ff35a9946d29e27844c60ba49c0
msgid "Code Strings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:261
# 03a1bec27a1f4bcdb3b9928cf92c8452
msgid "Sometimes the name of a method or database field needs to be used inline in a paragraph. Use two backquotes (`) to mark certain strings as code within a regular string of text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:265
# e4a8ad8b42ec4454b165fef54c5a6385
msgid "What it looks like in a paragraph after it is built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:267
# f7e9739d287d47caa4ad7a14725fd32c
msgid "Sometimes if an API ``method`` or database ``table`` needs to be referred to in a paragraph, it's useful to apply a style to that ``item`` so that readers can tell that it's special."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:270
# 36e6c2710bac4cffaa96b466b9fa0be1
msgid "Links"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:271
# e9abc3d7ca3b4e028528e61b9326c0d8
msgid "Links are ways to get users to other useful topics."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:274
# 59302aae41df4d5c86585594c6fa4198
msgid "Internal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:275
# 174904f174ff44919f045d6b7b1cbe67
msgid "An internal link is one that resolves to another topic that is built by Sphinx. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:279
# 7d6fd5cb32844ef480acc8ecd643dd99
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:282
# 2c0fcb2a06a64a269b74f3e52c12a900
msgid "Internal w/short names"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:283
# 052f5d2f51f540f1a77fbaba3b66d43d
msgid "An internal link is one that resolves to another topic that is built by Sphinx. Sometimes it's better to have the name of the link that displays be as short as possible (and different from the actual title of the topic). What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:287
# daa8a68bd0e2424b837a1a9d6b795323
msgid "where ``:doc:`` tells Sphinx that what follows is a file name that Sphinx will encounter during the build process. ``Actions`` represents the short name that will display on the page in which this internal link is located, and then ``resource_common_actions`` is the filename and is contained within brackets (< >). If this isn't formatted correctly, Sphinx will let you know."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:290
# cf28d2dfb991477281f1a0b1572f3e4b
msgid "External"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:291
# 9d68767c30d84e02ad93c5ac1e22cba5
msgid "An external link points to something that does not live on docs.opscode.com. An external link requires an HTTP address. In general, it's better to spell out the HTTP address fully, in case the topic is printed out. What an external link looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:295
# 221b45f2cc134b67b0b58f057b76b5f3
msgid "and what an external link looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:297
# c3877af0a0154333a6278e5458511c48
msgid "\"A great tool for learning Ruby is http://www.codecademy.com/tracks/ruby.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:301
# 63c152b3be494d839319d6899de49d6b
msgid "TOC Trees"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:302
# 83796ffad4054b76a374ecf3abea7365
msgid "A TOC tree defines all of the topics that are children of this topic. In Sphinx outputs, the Previous and Next patterns use this topic structure to determine these links. In addition, a visible TOC will use the structure defined by the ``toctree`` directive. In general, |company_name| is not using the visible TOC tree, but they still need to be present in the topics to keep Sphinx happy. What the hidden ``toctree`` looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:312
# c98bfd6c00794b73962768070285c943
msgid "Code Blocks"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:313
# 97d5774ca4d34da88dee2d8f5c0f0063
msgid "Code blocks are used to show code samples, such as those for Ruby, JSON, and command-line strings. There are many options here, especially if Pygments is part of your Sphinx environment. The most common code block styles are shown below, but there are many lexers available."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:315
# 9bbea0004f314c6ba5229dbae454676d
msgid "For more information about all of the code styles that Pygments supports, see: http://pygments.org/docs/lexers/#lexers-for-other-languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:318
# 7c4c2d4ceed64653a1955726e1571721
msgid "Ruby"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:319
# 896c868c4be545158c1988085c4bfb3e
msgid "Use this approach to show code blocks that use Ruby. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:326
#: ../../includes_style_guide/includes_style_guide.rst:341
#: ../../includes_style_guide/includes_style_guide.rst:361
# 3a4baa0f8c244d1dac3a64c1ae0adb7e
# 08334a8bf39b4078b0fc37c645921dba
# 52e21a8fdf254947b9dd3cd620305df9
msgid "and what it looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:334
# 1e7cdb404e5c4636ab14267719948202
msgid "Bash"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:335
# 334e808a9731410bb8fcaf8c2dc553c0
msgid "Use this approach to show code blocks that use any type of shell command, such as for Knife or the |chef client| or for any other command-line example that may be required. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:348
# 4d4124ae83a64fe8ad031f433dd2cfc0
msgid "Javascript (and JSON)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:349
# 44a70cf22f7e40cfbcc85a7caf0674b1
msgid "Use this approach to show code blocks that use any type of JavaScript, including any JSON code sample. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:374
# 6ff822a15e164e10b8ea03adffefaa0f
msgid "Literal"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:375
# 0e244ceb02e14376a8e984918b0ace5c
msgid "These should be used sparingly, but sometimes there is a need for a block of text that doesn't fit neatly into one of the options available for ``code-block``, such as showing a directory structure, basic syntax, or pseudocode. Use a double colon (::) at the end of the preceding paragraph, add a hard return, and then indent the literal text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:385
# acc890fbe8804b60986060d384341ec1
msgid "and what it looks like after it's built::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:395
# f689f7a196424dd9a20785799131850a
msgid "Includes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:396
# f43d261780d54058964530d782d4a363
msgid "An includes file is a way to use a path to pull content into a topic at build time. This allows the contents of a topic to be sourced in one location, yet used within any deliverable that requires it. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:400
# 39e336ca44fb4f119133c31ee57fac64
msgid "What it looks like after it's built:"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# f60058d3e01b4c08a9a3e49e58bb53ab
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. The |chef client| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. The |chef client| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new node is brought online, the only thing the |chef client| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:405
# c5bf3fde5c934cd1b9f4c92b839b5bd7
msgid "Inline Replacements"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:406
# b572f9af61094ffba0099db24468d079
msgid "A swap file is a file that contains short strings of information that are replaced at build time. Mostly, these are definitions of command-line options, descriptions of settings in |ruby| files, and other short descriptions that may live in more than one place across the doc set."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:408
# 5b7215d6829b4af3a829a18a2ed8d6ac
msgid "They are grouped by letter (for definition strings, a-z), grouped by names (for product name and other formal names), for notes, and for HTTP links. These should only be included when it's certain that, should the swap replacement need to change later, that that change is exactly what is wanted in that location later."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:410
# 40286eba33fd4a89a35014b4b6f43d17
msgid "What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:414
#: ../../includes_style_guide/includes_style_guide.rst:418
#: ../../includes_style_guide/includes_style_guide.rst:422
#: ../../includes_style_guide/includes_style_guide.rst:426
# 9b803a8d2cae45cbabcef9d336e4033a
# fd37b2238f024d159923f072df0734ae
# 89f35d3bcd5949b5a80d837272226550
# f0bbf6033c04477aa4559967631eca8f
msgid "or::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:430
# 11f36818589e484e88f82b85162ffa9b
msgid "and what it looks like in a document::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:435
# 9e2da406b04f430a86c5ad915705e706
msgid "and what that would look like after it's built: \"I like to use Homebrew on my Mac OS X machine when managing my knife.rb file that I use with my chef-client every time the **deploy** resource is run.\""
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:438
# 64a48cd837bd4c09ad588d06499ea601
msgid "Notes and Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:439
# 4d247b54fc4441ecafd4cec9daf65461
msgid "In general, notes and warnings are not the best way to present important information. Before using them ask yourself how important the information is. If you want the information to be returned in a search result, then it is better for the information to have its own topic or section header. Notes and warnings do provide a visual (because they have a different color than the surrounding text) and can be easily spotted within a doc. If notes and warnings must be used, the approach for using them is as follows."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:442
# e52343bf507e4bf29f389f257909660f
msgid "Notes"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:443
# ec4759f47cad4b19962ae8e1793dd4c2
msgid "Use sparingly, but much more often than a warning. A note works best when they are consistently used across a wide set of topics. Some people just read docs looking for notes and images and steps. Notes shouldn't be used in a way that discourages people from reading the docs. The most important topics have unique and meaningful titles. If something is really important, the best place for it is a location that gives it a spot in the TOC, with its own topic title, and so on."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:445
# 4021950493bf4f21a23a118e169273e9
msgid "What a note looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:449
# 5010b0b662574ae19a459db5b6150774
msgid "What a note looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:451
# 177bf2c06ac84a6d82e7a959f91864fd
msgid "This is a note."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:454
# 712a3c4d6c734726b0f682c3951fd6c8
msgid "Warnings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:455
# 88e63926d3bd4e50b2981f6dd4e12bb0
msgid "Use sparingly, so that when the user sees a warning it registers appropriately. A warning really should be a \"Hey, if you do this, you might break your environment.\" type of situation. What a warning looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:459
# a902d805d8f74b3eb8c1213ad01714b2
msgid "What a warning looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:461
# fef51ca2037d4e3ca7eb11372be63d4a
msgid "This is a warning."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:464
# 0b8fcb265930405ca6e83f56addd6d9e
msgid "Images"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:465
# fd05cf8f52bb46edb20325cc8afe587d
msgid "Images are useful and can be better at telling readers what is going on than actual text. What it looks like as reST::"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:469
# 0ad935fa68a247e19fca1cfd8a169a83
msgid "What an image looks like after it's built:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:473
# af82a7e8f211411a83efc8cf1338430f
msgid "Images should be 96 dpi and no larger than 600 pixels wide. Ideally, no larger than 550 pixels wide. (This helps ensure that the image can be printed and/or built into other output formats more easily; in some cases, separate 300 dpi files should be maintained for images that require inclusion in formats designed for printing and/or presentations.)"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:476
# 06e8573c5c6a4096a80a3d2cf302fa15
msgid "Doc Repositories"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:477
# d9947384a15c426c9e62e81d42eba09e
msgid "There are two document repositories for Chef, one that contains the docs and another that contains image files for quick references."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:480
# 7a75d07c89f146788d81c04c86e308f8
msgid "chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:481
# fe90ed51dc024b22af7dd97fdfc5ae1f
msgid "All of the documentation for Chef can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:483
# 2633d5c5071f4951bd4fbe675eb6faa3
msgid "https://github.com/opscode/chef-docs"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:486
# b0373bb5891e441495fac78e7f89a7b1
msgid "quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:487
# bfe9fdbd684d40b4945a837b6d9dc9b3
msgid "The quick-reference repository contains large PNG images that can be printed (front and back), plus smaller single-page images. It can be found here:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:489
# 20445659e0d8425d9cbf83f0a1b5f28b
msgid "https://github.com/opscode/quick-reference"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:492
# d0d7b5dcb5ad477fb35b7008055caa4c
msgid "Localization"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:493
# 71eb7c4ed0e2487eb6f3b39ccba5e623
msgid "Sphinx supports localization into many languages."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:496
# f3b4733e6a6a4df88191a4b6420d452d
msgid ".pot files"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:497
# 90b97df928d0450290a82f970a11ef27
msgid ".pot files are used by localization teams as an intermediate step in-between the native English content and the localized content. Opscode needs to build the .pot files so that localization teams can feed them into their tools as part of their localization process."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:499
# fcc0bfdad3f943a8b3e629596b150e89
msgid ".pot files should be recompiled, not modified."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:501
# 75a723daabbf412e83c8cc9c3e0b5466
msgid ".pot files are built only for the current release of documentation, which is the same as the ``chef_master`` source collection in |git|."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:503
# 25afa5647e7d4c789fcca97e7908c3ec
msgid "The .pot file is built using much the same process as a regular Sphinx content build. For example, a regular content build:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:509
# a692b4ee923e480abc612498adff8ec1
msgid "and then for the .pot files:"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:515
# 7235fff6be5a450e98646d3003e488a1
msgid "with the very important difference of the ``/build`` vs. ``/translate`` folders for the output."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:517
# f84c42ae853a4237bbdeacab37bfda93
msgid ".pot files should be checked into the github repository like every other source file and even though they are output of the source files, should be treated as if they are source files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:519
# c24b961170be4c5c9084e19edbbf12ee
msgid "The /translate folder in the github source contains a regularly updated set of .pot files. That said, it is recommended that if you want to localize the Chef documentation, check with Opscode (send email to docs@opscode.com) and let us know that you want to participate in the localization process and we can sync up. Or just update the .pot files locally to make sure they are the most current versions of the .pot files."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:522
# 1671167b0b644fdc94dc4ebc4dd43239
msgid "conf.py Settings"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:523
# 0a5300012f444c3e8cca040167a5c3f1
msgid "Every Sphinx build has a configuration file."
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:526
# 54b752ff16de48c2839b9feda40ca3e1
msgid "rst_prolog"
msgstr ""

#: ../../includes_style_guide/includes_style_guide.rst:527
# 5ab69c09b8dd482c8fa8ce04d672de98
msgid "Opscode has added this configuration setting to every conf.py file to help streamline the inclusion of files at the beginning of the build process and to help support localization efforts. This setting is added to the general configuration settings and looks like this:"
msgstr ""


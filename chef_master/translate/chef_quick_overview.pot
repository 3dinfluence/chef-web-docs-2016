# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-10 09:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:8
# a63fb719b07247d58c83db8410461892
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:10
# 267e024f0d034e9c9f62542efb7dab64
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 32f136eeb4f4451882d130de5ac3c94b
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# b297d9a874c74fd787add307ed5521e9
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_quick_overview.rst:15
# 82370fc006694a8cbd39a302f00f0138
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:16
# cd434288f31b40319dd0539f024bd016
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:20
# 13f0e947cf414f70a42fdf8dbacbb5b4
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:23
#: ../../includes_knife/includes_knife.rst:6
# 448a9b5da2884d968a74293f27fc8a71
# 7f4e937af88849b1933de4dad0d7ed24
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 532c80fe940e47338ca323929c96bec1
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:27
# aebf2c664a0d4a58ae80bcd8654ee65a
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 9fb18f14c3c94f17990431da49c90fa5
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 02c9011dbd674c399f5d928dcc3b2f7a
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 3d52d326a021407f9b26a4d59f48a593
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 6d9e1f77a3fc467d8d42074c699eb06a
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 46122da259014176adac26740e81326d
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# bf5a0c961a974bf18fef0c7494d9d86b
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:31
# d61dcd27adf040198ea645125a6e0805
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 906a0864f8624df8b56d755604d60429
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 7e9b1a6f0db945f2b71acdc256c1f38f
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# 8bce918e49434bd8bafb2e87653e082e
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 5334f745fb134fe2aee786d616aee308
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# b9ca08e216074368873aff2e63f316ca
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 2fe77e091ff54f80a7ef5de5175f013b
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# f371ffdcae88461ea68c9f974b7227ab
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# d33f65585ddc4d5b804e50e5ca285344
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:35
# 7ecd9e7000e943cba95837ac35b7ef81
msgid "Repository"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 48810b7582ad4f7eaef0143816a60eeb
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# c883cc08f7534d62b5690d79d725f7ea
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:38
# d8ca1c15160f47f0995d2ea442948657
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../source/chef_quick_overview.rst:41
# 743a9c4331d14c9d843fad50aef34a70
msgid "The Hosted |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 84cd25523ef64da19f625e171bf02e2f
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# c814d4ddf25347d8a5e74770552cbff4
msgid "The hosted |chef server| is a version of the |chef server| that is hosted by |company_name|. The hosted |chef server| is cloud-based, scalable, and available (24x7/365), with resource-based access control. The hosted |chef server| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:47
# 2f6f63c851f14039869047cd1dfd234d
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 52ef45749b9e4a31867f297aeac27769
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 3d16a33e91c647e58d37ed6660834847
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 2b7f36e602db45829262c0eed743f0fa
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# fd8f53e85d8440058f9939ec89ab1721
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 27d5f076ae77486bbea9edc57f09df03
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 14b424d7135241b49ececf4bcd767d56
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 9134aa0c833c44a7bef155fcc44335a4
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 512c862e54d64e9d8be6fb4130bcd9ad
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 86fde276532144fd9061d99354d8e2bc
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# d9899c4f9b074cafa505bb5105008a82
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_quick_overview.rst:50
# b1374f725bd842419d0c98211a3660e6
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:53
# badb5233e909404ba6670654c293f9c8
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 29c3573612c14269ae75b268651ce034
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 48585ad7dc8347888cf32dc04f55b6af
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


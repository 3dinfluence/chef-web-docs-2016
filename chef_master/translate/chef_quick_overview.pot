# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-04 13:15-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:8
# d0378c883cfd4ec5b45d490dc8e63eb2
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:10
# 97b81c27beff4623800258929cbc3368
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 379f1c4f88c74629bc415e7f41f0677a
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 0480adb9d94a4ddd9280a52934ce4275
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 168f7a6aa9684703a1e9158aeb6d0cc0
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:15
# 8738d5bd44c34ae8b73d7529a5c12406
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:16
# eea318c446354f30803a145e1976077d
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:20
# 7f4000a2d3ca4cd1a23213ef58040f5e
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:23
#: ../../includes_knife/includes_knife.rst:6
# 5e994e4f4adb422fae0eadc9a9d6e222
# 2040e4db30804d86a36560db798589f7
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 357f3782e9e14e65953966802ed97876
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:27
# 129c0765cb3549c19a51a4d3c5f85760
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 0fc3d6a606ef453c973c30f36935d16e
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 8936c9780e3d4b9283e7899c6ec2de68
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 9a492b6dc77e4c15b5c055be283d02ec
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# a6d948b68e5849c48c73334a2cdbc9a0
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 64b166eb5d65418fb3822ffd1995963e
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 8df2cb810af74b6b8e3a3c05e22264ac
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:31
# b50f8dfa43044ace8eea3ab7057b115b
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# b306f1daf8cb463b95184ebecf20aa7b
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 5d74b9045c3a43c5b64da44db39838e0
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# ccb18f9cc7dd4a27bdf9593d72ccfb79
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# d1388abce9be414c8b9be51d75ad17b5
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# b1b51987f8dd438ca7ebf71365a358b7
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 760a3e0605534df9ae8afedde8d02c43
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 84721deee5a74e498dc9465dde1b43e6
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# b7a3f06fadb54fb7aeae24ef5da407b8
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:35
# 230024320fdd4486bb713f97e5e31d08
msgid "Repository"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# e8f54e6ec90746ddbed270b7050fe594
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# fb521de5499e47a689a7797eeea6e6e2
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:38
# 4f6d85fb5b054bfd9bc68bbb3b3f801b
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../source/chef_quick_overview.rst:41
# decfba13345d4efb8902ef70d1e5a39c
msgid "The Hosted |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# da06dae0f80c432d84c3277e56864f48
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# acf9b1ef2ba1404fae4a7142abccccbd
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:47
# d5c60cee720643729fbfc5c273828aaa
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 2d871bb1097f411cacc91f6d1eed3388
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# b9380c598b9a4c5ebd5fe83dd47bcdea
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 714593eb04f54ae2a1dd704f97d00b38
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 88cd86378d8249edb8f44a338e4021e8
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# cfe7c28d025c4e2c873a1223235c900b
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 7a3b6ab28da14a45ac4012810534202d
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# b97cc827477b42f7a26ed44fa16577c4
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 533f7eb823264606a7198e1e02ad02a3
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 38055f4752104cd68bd9978a56aee9a2
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# b555bb77ba504b7ab54bcdf824508574
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_quick_overview.rst:50
# 71fd47cfac5645e39b56ebe3d73796d7
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:53
# e1ac64aac5234f45aade3e062a2f4b67
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# a38f7fda9b8a4e75a4902ca290c5e6c2
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 3e6127c5f3d4460587001d3d633b30c5
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


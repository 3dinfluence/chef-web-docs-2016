# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-08-27 16:02-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:8
# 05e23bc83fa3419d836fe95723e13777
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:10
# 4e8dd9c51714414091ac8a9f149b6618
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# e9b16cd175744d729e17003292f0b598
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# af65c1b043774debb331c712e384790f
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 1c5776d54942405282867bc0991150a8
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:15
# 43165359f65c478ba10823c9839b579c
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:16
# 42a9da256fa444d78e30cf90f49047b8
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:20
# dcbf194885cb45d7866333ce58bb3f60
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:23
#: ../../includes_knife/includes_knife.rst:6
# cb61ee2e69ad45c08dcce6302b12b971
# eb46d724908a4ec49afd7203ddbeeff6
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 4f87774ec7b64767a342cde69f0f3865
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:27
# af401a1c726a482f881779fefa5cb4e8
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 01967e76b35c428db751bcda7d8dbb99
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 5cc950bb65f14bdaa2f144e10de976d1
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 2b83148cb354440abeb566d568418f8d
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# cd2d534a6a3d4b5c96fef7c5cce08a8c
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 37565014672d47b69a5c2dccde7b655f
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# dad4cb6b0c42453185c1df2b6a4772ed
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:31
# bbf7827fb650466a958bf286bf2e2721
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# f3393aa5167243e1b0e5bed6ccd4fc5b
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 8d4cdf09bc314023a7ec692df196f2ed
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# c9bd9288083b4b799c2f4339bd7a18b0
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# a49cae13fd5b4b5fbd658cd9de829837
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# 91a5577b050f4e32af9fd0cd349bd1da
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# c02c9ede66514014ba13f4927fee9574
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# c39de3e0f1cf4d058e2ec0caf0841b71
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# d9cac4db9ea845bd9f1045cd20f00fb2
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:35
# a683bfec5c0e4686b28ef4fd187bab80
msgid "Repository"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 9a187c498b3846379244da5bcc4390b3
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes---the most fundamental configuration element within |chef|!---attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# f8e192a373f24a90a6378c9f87016a3c
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:38
# 34bb707d3c3f4ba091f5aa9e02e77e3c
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../source/chef_quick_overview.rst:41
# 1329c36c52d8420480cdf33257f12812
msgid "The Hosted Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 89d0c816d7a54e39a1cc8c7520f57a39
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# fde886f32d3b48a98dc25f24c4c3ffa2
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:47
# 3a057966c12448b0a76aa6e675c70cb9
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 36604c07e08e4453a3ae11c8f4fa8ecd
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 71cd3e82f37b478182d2c02f7baef255
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 409d0a8729a94169ab084af69f6b9f2a
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# acc1670e825e405ca11a9cde60ebc1f4
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# f34d6b498017456fa3b6183ac226c9f7
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 8acd28bab40449908d76c689b1b6cb66
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 762ecfd162a74458a9e8b68e9b7dd0b7
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 5ec38bee1f024c86957e250a86852d13
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 49ae344fb2e54606b2c83c831f58f2cb
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# c629f130a6e142848e10fc623e2bc11b
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_quick_overview.rst:50
# 1b6c00a72d3a40d7934841aac634e614
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:53
# bd6df34033cb44d5a5fbf729ff7c6da8
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# 3a06043854ed48f6b3eaf1d9c8babf50
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 5337e46e457a4eb3a3f0b8b6537a00ba
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


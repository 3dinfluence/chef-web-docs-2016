# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 11:08-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:8
# 7a5df70ad8c34a368979c3cb216452dd
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:10
# 6ed3848cd73541e2944b4df598a45a62
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 34b0185a746847d494992fd57553aa9f
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# f24f807c07dd438db98cae22054f1a27
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet."
msgstr ""

#: ../../includes_chef/includes_chef.rst:9
# 0fc4b1fa91504629b0d49a878862643d
msgid "Anything that can run the |chef client| can be managed by |chef|. For instance, you can manage physical machines, virtual machines, containers, or cloud-based instances. The |chef client| is an agent that runs on a node and performs the actual tasks that configure it. The |chef server| is the central repository for all configuration data. The |chef client| and |chef server| communicate with each other. For secure communications, they use a combination of public and private keys that ensures the |chef server| responds only to requests made by the |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:15
# f5865d51cd8341de971bbd227efebeb4
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:16
# 1c33182f904442ae8135ccadea1d9dba
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:20
# 5173c9a50e4f4722b84d2f783031d515
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:23
#: ../../includes_knife/includes_knife.rst:6
# d33f189efe2a4941813feb7b346e6cb6
# a1c6e0a5a9b845dca24ae069864446b8
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# f52542c3994b405e827b1731857ee14b
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:27
# 6b0d1e0ac5024c248c1ae530f209c17e
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 09286ede647e45acabbb7c8f75e85fd4
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 4d91cfeec2984ec2b4edbfda299dd061
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# ff9fa38a287a442284da356a190f403a
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# dfd44eae98bf426f80d9ccc4c2e3c023
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# d071da19796e4f199f0f564151e8f2f5
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 30fd9190ea2f43259e7c3a50735c77ea
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:31
# d1f34a7168ef40feae281aa2a12598a3
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# 82ae45b3e3274a0b8f7d658fe2ecc850
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 43230b8424224c62b2ddccb01d16ffbd
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# 2ad88928869d425d9873d02d9882f545
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 5d19c5e5c9264b64ae41211995225f39
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# f8575cdbae024fb5bbb7ef0692f43385
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# ac92a6fb97744d34ab51977d58acce0d
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 9b00c696c63b4ed894fa7774409ed4b4
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# 9301137b04d4448b813a73391e6aa364
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:35
# dbf69d3a5c964025a8455dfe8b8e85c4
msgid "Repository"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 068846e4342a46d29bbed3b1e61762e7
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained. Cookbooks contain recipes---the most fundamental configuration element within |chef|!---attributes, resources, providers, libraries, files, templates, and so on. The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 212a465ab4cd40a7910b01217b713e45
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:38
# c150f87a103743adb59f4b033550706b
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../source/chef_quick_overview.rst:41
# 3e2942d923ba46aabe3f914125b17e55
msgid "The Hosted |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 08a649df08c246caa29ec31827d3fc15
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 64f045e619354bb5a48022d39f002464
msgid "Hosted |chef server oec| is a version of the |chef server| that is hosted by |company_name|. Hosted |chef server oec| is cloud-based, scalable, and available (24x7/365), with resource-based access control. Hosted |chef server oec| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:47
# 8615f60f22f1430cb57ec97e770fdf59
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# aa31aa009f3f4ce59d3b2ba93e85e060
msgid "A cookbook is the fundamental unit of configuration and policy distribution. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 3b93df54bf304f8492030c4459a81e26
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 4f037314999f4ba297834653f995ce04
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 100a3ba5cded4ea59c5e52fe61a5fe5d
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 46acedb9dd2d4260a5181817e3c74e59
msgid "Libraries that extend the |chef client| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 430b8ac11f0e4fc39b93fed5b34434ee
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 9e137db329f149f0bc04624dd8f2757b
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# c05084c29e504a879ca26b73cc1543ae
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 09aba0daafde4fb893f608b886405dbc
msgid "Versions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:14
# a0fab0b5d1fb49dd8b6904227e4559b2
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_quick_overview.rst:50
# 58ecb84ca6a44bce9cba3fa906844459
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:53
# de2bdcad2334459597fbe0aa605ea440
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_why_principles.rst:5
# dcad9b8fe48842e59148903c08546e75
msgid "The key underlying principle of |chef| is that you (the user) know best about what your environment is, what it should do, and how it should be maintained. The |chef client| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../../includes_chef/includes_chef_why_you_know_best.rst:5
# 4c49264a2b06454f9effaeb36ec9ff67
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help keeping it all running. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""


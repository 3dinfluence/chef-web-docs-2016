# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:8
# cdf1d38b870f48a182cb628dcdd92d12
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:10
# c8aec5799e7946b58763a4a59f48032d
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# d242058d48c648c59b843865cea8ec3f
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 7ba865de2db74dd9982f52c3b7cb487b
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_quick_overview.rst:15
# 768baec0aca64a9cb98f5fd30ea748ec
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:16
# d83ffc67ab54405e9882932e3ac3f37f
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:20
# b359252e3b934af7a1e654aaa52d648b
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:23
#: ../../includes_knife/includes_knife.rst:6
# 2524c34bd7f147739c68cab7df06cea1
# b17300e8733f41f492e4809c6f01e222
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 8060708790854428b64f8d3b8a700c74
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:27
# b86a43af725346b28da1cf252339ef51
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 06184b861d7f4a8e97a3587e4694ae5a
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# e631e54d72e441a2ac03a0167d5efb3b
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# ec4cf875dd0f4dbe9cd7d1c1072a5394
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 7c9801670edf4c3488ba6136fea4d7cf
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 03fcb5cf0f2e4d5fbbcb187edf9f20f5
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# ab543f9c590d4d3aaa2cd37b0c8677f1
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:31
# 94eff07ec7624835ad7e1bc8811ef79e
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# a1b800cab0f143ea8115d74329ceab8e
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 1ddd06a831ae4b9abc5e3444a4ede084
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# c121256c6f1c4108b8ddba49fa78b7c7
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# a2405a386ea14c6894545e4ed047c946
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# 50479dea70904cab8bd8119b4c5568b9
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 2331b3e034f143b59b5a54400c3265b1
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 5f9e047b796048699234438adb4cf244
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# 138a66e1ee5b44ffa9f49150a7c75fc4
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:35
# e706c8e3d9d147e88a9f58dcae510e08
msgid "Repository"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 55e9101b0bb34f71ac5ad07d101dc71e
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# 73fa306480f7496ba7bbe85d79821722
msgid "Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:8
# df1ed7b4f44c4c0ea8231dddfb711e0e
msgid "The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code."
msgstr ""

#: ../source/chef_quick_overview.rst:38
# 14412bb735d549f5b9099593b53b8629
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo_structure.rst:5
# 3f625740831148a7920873ed7c92d3a4
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:43
# 912b010c296b47e7937465b254e1af1d
msgid "The Hosted |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 20dd92ccf84e4898930212eeedad22be
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 286dd1af55b6420db0bcd570dbdb7837
msgid "The hosted |chef server| is a version of the |chef server| that is hosted by |company_name|. The hosted |chef server| is cloud-based, scalable, and available (24x7/365), with resource-based access control. The hosted |chef server| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:49
# d3db836fb84941d38b266fef43aee140
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# d76b3e0f9cb94bdfbb9b96689e5899ee
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 43d686ac06784323a69ed957eb0e081c
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# c021b6868c624427844b90171aa4f2cd
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 9a53a9f05ec64b70867cdb332f21f055
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# e12a902e77e14563b45c5781c7406ab1
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 6cbe05a2e5314461a984d0184c76e0bc
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_quick_overview.rst:52
# 97dbda8e176f4c0786ea70a3148b3e80
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:55
# c7e6192fc6b949e6b93a9280bfb2e846
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_about.rst:5
# 9535a244ac644fa7a7cce31cc3441a31
msgid "|chef| is a thin DSL (domain-specific language) built on top of |ruby|. This approach allows |chef| to provide just enough abstraction to make reasoning about your infrastructure easy. |chef| includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the |ruby| language. |ruby| was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well being able to handle any customization path your organization requires."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-13 10:10-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_quick_overview.rst:7
# c4baacd24f6b403daf465a7503471aa4
msgid "A Quick Overview of |chef|"
msgstr ""

#: ../source/chef_quick_overview.rst:9
# bcf66ab6cc1c44fd9665eeef131807d3
msgid "Welcome to |chef|!"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# ee5d733dafab4962aab8cbfacf23b280
msgid "|chef| is a powerful automation platform that transforms complex infrastructure into code, bringing your servers and services to life. Whether youâ€™re operating in the cloud, on-premises, or a hybrid, |chef| automates how applications are configured, deployed, and managed across your network, no matter its size."
msgstr ""

#: ../../includes_chef/includes_chef.rst:7
# 89f2a529c5b94be58e77dcd1e2a199f8
msgid "|chef| is built around simple concepts: achieving desired state, centralized modeling of IT infrastructure, and resource primitives that serve as building blocks. These concepts enable you to quickly manage any infrastructure with |chef|. These very same concepts allow |chef| to handle the most difficult infrastructure challenges on the planet. Anything that can run the |chef client| can be managed by |chef|."
msgstr ""

#: ../source/chef_quick_overview.rst:14
# eb7eb89e58e3443bb50583821d93e1fa
msgid "|chef| Components"
msgstr ""

#: ../source/chef_quick_overview.rst:15
# 4c878f4279ca4cf190e2f4c1a7f0b126
msgid "The following diagram shows the relationships between the various elements of a very simple organization, including the hosted |chef server oec| server, a workstations, the |chef repo|, and some simple nodes that exist either in |virtualbox| or |amazon aws|."
msgstr ""

#: ../source/chef_quick_overview.rst:19
# 62e325d3a6924530bb1344c22b72cf2e
msgid "The following sections discuss these elements in a bit more detail."
msgstr ""

#: ../source/chef_quick_overview.rst:22
#: ../../includes_knife/includes_knife.rst:6
# 63b2c36921634105b4feffc2dd6fb357
# f75fb95059034a5bbb3ece80b9888e72
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 2024f706389c4656b2b2a83e480ecd78
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/chef_quick_overview.rst:26
# 0716fd565a0f4335978a3fccae6698b4
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# c9f0f5048dcd405ba5157ff5977c10ed
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef repo|, and interact with a single |chef server|. The workstation is the location from which most users will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 40488b0695bc4bc8b5d98ca43a1923f6
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# b40ff36f2e2048538316428cc5df09d1
msgid "Keeping the |chef repo| synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 6148651cb6ae40d9984230346e99d569
msgid "Using |knife| to upload items from the |chef repo| to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 5c8bad3798694a3eb0bea4005c60eb2a
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# f49f320589ea41d895794bb60f976b5f
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_quick_overview.rst:30
# 1b90f36922db4d0e8ef3755cdcfe9d0d
msgid "Knife"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# d86c553702f442b2986ca0a5b88ea601
msgid "|knife| is a command-line tool that provides an interface between a local |chef repo| and the |chef server|. |knife| helps users to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
# 1d9e7cae13fd40e2802539e6034a7983
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
# 65b64cabe456489aa07f9634936cede4
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# e90a0784246642959eef77ed71002ed7
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
# c09b92d43c5f46d48aaa7e1df5a5d669
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 7331b1460d8c4603a75bbe20e85f3805
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# e089df1d2e7f4cedaa510c0088104b0a
msgid "The installation of the |chef client| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
# 2aba9ed0eeb44cc09544f6f8967af1e4
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../source/chef_quick_overview.rst:34
# 3d93b4480ab7411a98aa303caa757b6f
msgid "Repository"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:5
# 08999b9d60b746e0a4c31f79e994f0af
msgid "The |chef repo| is the repository structure in which cookbooks are authored, tested, and maintained:"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:7
# e98ea6cca6b04b768aa4f61d708a7044
msgid "Cookbooks contain recipes, attributes, resources, providers, libraries, files, templates, and so on"
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo.rst:8
# f488aa0d0c414e88b22596b112c0416e
msgid "The |chef repo| should be synchronized with a version control system, such as |git| and then managed as if it were source code"
msgstr ""

#: ../source/chef_quick_overview.rst:37
# 78b7ba309e714ca08b61f330f2ba0e53
msgid "|git| is the most commonly-used location to store a |chef repo| that is used with a hosted |chef server oec| account, but |git| is not required."
msgstr ""

#: ../../includes_chef_repo/includes_chef_repo_structure.rst:5
# b8c64a51b42e4a959d52a1d13246f24f
msgid "The directory structure within the |chef repo| varies. Some organizations prefer to keep all of their cookbooks in a single |chef repo|, while other organizations prefer to use a |chef repo| for every cookbook."
msgstr ""

#: ../source/chef_quick_overview.rst:42
# cbe7b914d70d4340967d9f3e51948b96
msgid "The Hosted |chef server_title|"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 017d2d5bdbe042eb967168224944efda
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to nodes, and metadata that describes each registered node that is being managed by the |chef client|. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# c799e99d0b67414c9541fc84d3823100
msgid "The hosted |chef server| is a version of the |chef server| that is hosted by |company_name|. The hosted |chef server| is cloud-based, scalable, and available (24x7/365), with resource-based access control. The hosted |chef server| has the same automation capabilities of any |chef server|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_quick_overview.rst:48
# 38f3d05ac6d749899efacec9fa383ec8
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# ec397a0279fd4e92bb4d14d3a83caf2b
msgid "A cookbook is the fundamental unit of configuration and policy distribution. A cookbook defines a scenario and contains everything that is required to support that scenario:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 307c0e8890764ab3a7fe30a0226ccc90
msgid "Recipes that specify the resources to use and the order in which they are to be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# 081c5a537d774f21bfcd56574f5d6915
msgid "Attribute values"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# ec806563d52d4ae5a66fbb982ba48bd6
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# c94c8efc123b4dacad61ff1462bfef86
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# 8c0879715a224d0196c5f538fdc38123
msgid "Extensions to |chef|, such as libraries, definitions, and custom resources"
msgstr ""

#: ../source/chef_quick_overview.rst:51
# 7e1f97c1b6f34ebab722f1d850f48cf2
msgid "The |chef client| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. The |chef client| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_quick_overview.rst:54
# e450ef5c1fef4f9fb42a3b116e4aaf3e
msgid "Conclusion"
msgstr ""

#: ../../includes_chef/includes_chef_about.rst:5
# ee99657aef9b451884b897cbc03cf6b0
msgid "|chef| is a thin DSL (domain-specific language) built on top of |ruby|. This approach allows |chef| to provide just enough abstraction to make reasoning about your infrastructure easy. |chef| includes a built-in taxonomy of all the basic resources one might configure on a system, plus a defined mechanism to extend that taxonomy using the full power of the |ruby| language. |ruby| was chosen because it provides the flexibility to use both the simple built-in taxonomy, as well being able to handle any customization path your organization requires."
msgstr ""


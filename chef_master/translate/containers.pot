# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-07-21 22:07-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# afcf614782814a9d91d4a30acd6ab4a6
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 3d63517d725e46a1b2c312bf81b78ac4
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# ea0911cbb72547abbf04620731597a80
msgid "|linux lxc|---|linux| containers---eliminate the need for a hypervisor by leveraging a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a userspace commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operationg system or from another conttainer."
msgstr ""

#: ../source/containers.rst:17
# 8905d2ee14ad4c379b761a3094d683b3
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# 0f2704cabc03439a80553688c1fbecbb
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# dbad9913bf1640b49d92864892ec4bd3
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# 7c782bec0eff46a0899db6d0c5791a9f
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# 677d6916ea02476699d50f279807b697
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# 83c54936553b4479ab90b95a3daf4743
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# d353be2f74f044f6882b291a8fee2bc2
msgid "Securing Credentials"
msgstr ""

#: ../source/containers.rst:22
# f310a783b7c44907b6a5244b8e9b4b44
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# 3f84e5e05f704011aaa8446be3a51846
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# 4e3fb583da8043f5bef6d979101f702e
msgid "|docker| is an open-source engine that helps automates the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# 31642f84aa8f473d8bb6622c0ccfd1a2
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# 89c983817b07474db84bdbb05512c3b9
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# 7b957c675a6c4fbcac2d1b0b6be6514a
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# f083d1ac24d744f485a9759c4dacb555
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# c68ebd3e435f4a1ab40d0712e5ce7559
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# 128c55fa9d71479c927be710c74ff9b4
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# b53a567e0d434c939ef44f3081ab9076
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 55e838c94688443485e4b56d72e332da
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# 4d58424754a34f0d94481bc178a79b5e
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# 32a5f9ba81434a7bb802e8448ad6639c
msgid "Credential Management"
msgstr ""

#: ../source/containers.rst:36
# 2eb66c0db0064ffd8596e9b4e1849cdf
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../source/containers.rst:38
# a8d68c8cf7374934a4667e59e4ad1f04
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../source/containers.rst:45
# 94a648d43fa549c798b5a294b2bcf6bd
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# de6b3d4612024dc79920e784eaef7d74
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# 91abb195442d4f939ee91a46ceef75c3
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# cdc465da79164cadad9b82a4390d7d6c
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# 48de7af7ce744bee9c8563591db95467
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# d6493ce579d74a1383c22d0682b0f467
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# 8fcbf7473f1042658d5cd04539ca9a57
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# d24b1e1d25544d478085314013cd21ca
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# fc4f0b0b61e143ed93d8a4cd781e4e52
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# 2d19a308348b4b458b6c844c70dd6d37
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# 25cea94f3cfd4a828ead8ab2d26bc009
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# 4a79b3fb16fa4aab9b0029e50730e012
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# 5698f9e718b44764bb1decfb3a75014c
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# d23e2dd92afa4944a073af720c19a409
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# babf9b9c607741d4ad18edfa9c2eb727
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:57
# 46274b7807e14ca1a9108dd1cb5cfaf1
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# 8748f5c146464862ba9cb2d74a87fd54
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# f95f9e2a842247d692c463b832310617
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:60
# bbfdb8a8c95043e19035fecbc9a12a2f
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# c14067561e0542ba86ec96f759775e9c
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# f8cb2054ca814085bd78fa215746596a
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# 72615c5d441b4c6089e0fadcc441b0af
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:65
# 56e991a389c34b71b52f6730cb421938
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# 4f5618161b5e4de9a9027edaad9f3831
msgid "The ``docker build`` argument is used to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:69
#: ../source/containers.rst:81
# 619410acef864a4698b60286e935ec55
# 19062eb8308f4233901fb3967a64a39d
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# 048da436dd504e49a8d52a57971ce452
# b06391f0f3054120901c119ed398e07d
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:73
#: ../source/containers.rst:85
# 872e242accc8487eb7ef2d9fb807d885
# 8aff4af5d15c49d782bef9d8567ebbd2
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# 17bb0e2edb5a42d29868c2aff7f03863
# c3a422e01a9b4c148ff460d9df5df131
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# acd601fed2954489b6ea85bc033eca04
# fa1c112a5e05442da69c8c88e3db6b9b
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# 961adf83c6d2409cb9748cee6b594af6
# 7d12d9f99fcf498f96c5b8f8034069de
msgid "Use to specify the path to the folder in which |dockerfile| contexts are located."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# 3ba62c54e9a7453cb899fccc8e6ddad1
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# 60a9584c0c8a42cca18fcf9ac9c700dd
msgid "Use to force a build. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 216ed28377704c1e80d12a7e49a2cae6
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 024f57bb7cd64329a95c444ed3b0712c
msgid "Use to prevent |berkshelf| from running, even when a |berksfile| exists."
msgstr ""

#: ../source/containers.rst:77
# 50463939981b46d89e5ddaa2a295af0e
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# 80611f474e3449319e992fc92b984714
msgid "The ``docker init`` argument is used to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 10b32aabbc3740fcb76c2a1a89b49a3c
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# e311e088ecf5454a83bae65107afce2a
msgid "Use to generate a |berksfile| based on the run-list specified by the ``--run-list`` option. This option requires |berkshelf|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 92bb11623a454d0c83b4503e13cce565
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 348fe5572ec84a1bb5114a1a0501319d
msgid "The directory in which cookbooks are located. This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# cd6a2909438d499bbb1b9689b49d2b80
msgid "``--environments-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 23ead4b5f9f244269cf7d1b0ffb1d3d7
msgid "The directory in which environments are located. This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# c026bca99f2b4498875a73a4cebd8232
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 3baf29d199d1446ca52207d0ab3b3c61
msgid "Use to specify the image to use as the base image. This image is then tagged and applied as the ``FROM`` value in the |dockerfile|. Currently, this value must be an image made available via the `Chef Docker Hub account <https://registry.hub.docker.com/repos/chef/>`_. Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 7602f24d0dcb4884947e90af63758f4f
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 802ef0f7fcb2467699cc5faf20fac8fc
msgid "The directory in which nodes are located. This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 74c093e775264c5fbf5278b7445c8d4a
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 4bdbde005bb54d81beafba4c57963c1f
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 15851bb40b804a0083114afe31640469
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 96ed8af8921c463fb5ac451f49ebf7e9
msgid "The directory in which roles are located. This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# f7c38c5526344bc0b12eedac05bf9588
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 2b35eba210cb47d3adb4793640097f0e
msgid "|secret-file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 1d61925ffd264f78bd52c1c04c3e8e88
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 028ada4452e34765b02971d6d4e8aa9c
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# d8222a940d014718bbd6762bcdfac2b3
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# c491033f277b4f88901a1a8247562044
msgid "The path to the directory in which trusted certificates are stored."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# c7ec83c347b440a290262d5a607c7624
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 3188ea2a13d84664b385d01f5ff09ab2
msgid "The name of the validation client, typically a client named |chef validator|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 54556f45fee144c3bcaaf3b9b3d4ccff
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 5d5518a5ce2140f5b29335b3058d8afd
msgid "The path to the validation key used by the client, typically a file named |chef validator pem|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 1182e493fa7241f5b9eacbcf5cfcbbb4
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 7a51ce3ea8154e81956a81f26a1b636c
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:89
# ed08dacef39a4852b80647291fcf19d8
msgid "Examples"
msgstr ""

#: ../source/containers.rst:90
# eb49afbe4ae84bccb56622f976f3af17
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# 55ef52879acf4d02b419c656fbf5f4d1
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:94
# bdb97c2935984a7b83e49b128d22efc9
msgid "**Local Mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# 82071065444443e09ab5d8ef744d86d4
# 61a6184af16f4aa0870b19fdf342453e
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:18
# 490306addda643afb0e16348bfe22dcc
# f4d9e4a16b4a47c9b4cf3456f075df3a
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.opscode.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:98
# bd0f06a200264db49b34b379a9e39cf0
msgid "**Server Mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:12
# 8fad872c8b13451381066433e3b4c417
msgid "For |docker| images that are initialized to communicate with the |chef server|, the default behavior will remove secure credentials, such as the validator key, the ``encrypted_data_bag_secret``, and the SSL certificates for the |chef server|. Use the ``--include-credentials`` option to override the default behavior and include these secure credentials in the image:"
msgstr ""

#: ../source/containers.rst:103
# 3c8dfedc148f4657ac81ce4d866aab61
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# 27fd9ac0e915411292c3a9173e68cc7b
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# 65141bfcb8274d2081fe0659b01bc941
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# 70ca712612994b488c7053250ea7b38e
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# 6f468764c6c84c188338edfb26f94043
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# 5965a607a3d745d2addbd1f7bcb9a84a
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# 3322b1d226ee4c30a1c9731d1bcdc66a
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 3e1b00391b6e4f21ba1f0b35d5303989
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# 322349370e5a48ffaf9cbf253e17d530
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# 43f4c87c9f164086be93789ce6a0daf7
msgid "or, using the same |nginx| example as above:"
msgstr ""


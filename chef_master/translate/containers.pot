# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-12-09 21:45-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# 16fc2c44b8c94bf8a5e1546ec57fd2c5
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# e9c3310efbd84808b9acb89ae465d025
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# 024866d9e6fb41b99227b8bb0b2fa3d1
msgid "|linux lxc|---|linux| containers---leverage a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a user space commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container."
msgstr ""

#: ../source/containers.rst:17
# 844f709a8c0f4c318919aa1b80ba6af7
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# 3131b7ecfde34df4947ad4e59e181a5f
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# a07494bbf1b347f4a5965491d91b7fb3
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# 11b52b2d3d4345d481f5d5b6db48b882
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# ce84b8cc7d0f497084b8be6c314a0b4d
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# b134426028be44c3a80a86d34953a855
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# 1d60c7a5d49e401093de1683dd87d5ae
msgid "Securing Credentials"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container_secure_credentials.rst:5
# 23fd992cb93847bab9b178bdaf583087
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# c74c23185e0344c08527683a56637267
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# e277e9fa33ba429c90b78949c0c5f587
msgid "|docker| is an open-source engine that helps automate the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# da99106749bf43928a6fa255a1645475
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# 54b7903bf50a42a3ac23ac3911c0f9f9
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# d80f8e346af64d3db1af2a92f1f79f44
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# 98ca6d3fff354215abb3c5abffaab363
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# fb5fc53afb814014a48aa76c0297f17c
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# 98e3153831994d7b9372d3e375c06efc
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# b08f66459db7477faf147efcb4d85710
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 76bb35f47d544d0180e35f48b5e22c33
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# f87cbd7e8ecb43caaa27a958507ece43
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# 5c52faef2a4c4184aa87b0543ab92944
msgid "Credential Management"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:4
# 1c7288d2550e45759d8c239616d4b4d8
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:6
# 1ed7744870f841f4bcf342d476a29e5b
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:12
# f3aafcc756104d97bdb9229e757a732c
msgid "Use the ``--include-credentials`` option with the ``docker init`` subcommand to override the default behavior and include these secure credentials in the image. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:18
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
# 5806574eda3e49db9f5b1fe8a4fccb64
# e4b65916bec24f129312997ded9f2459
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:39
# dd4e8ab73d174f14b4d33b64f4982373
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# 32f75a534a274340b5e74b76f6a45ea2
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# 21a4f6dc15d74f9b89e799d3556408bb
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# f8128e67dcc640fcab843bbc1f6f6c48
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# cb6a609f7dd3442db8ad6eb36338d072
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# 0e14cf058b874ef9a0ad0e1d42febcb6
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# 0844cb5613d34709985db63b664ef549
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# a2b95fd1c0774b63a52978614d25794a
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# 9f73f2f578b84d51bab2ec7c32a324e6
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# 1519b2a547814a90aadcedfaed3b6d4d
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# d32f3cf9b08f4b558511dc6ce9b7cc35
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# 2ce7f70f514842818fd2b7f41ae17e8e
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# 300272944f774dc7819c0272240fefb7
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# c0773fc05b7f4ccf9e3a0753ecdc4fbd
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# 1f9913810eb94a6f810172b083154cf2
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:51
# 787896d94f834515bc37ff45f1ead5a0
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# 5f53be64006b40109cd273159d56ca52
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# 69707bcfae5a43e3af1b418b51b7cc23
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:54
# b3b2032820c7451a8ce7424831e96e06
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# 18fb234eedb84e589272d9680389a592
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# ac5a8bef59284f29a4e1054f44590fbe
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# c35484f5bb40465dae32a538279a8b9c
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:59
# 3310adc499d440e38e860b53d579b698
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# 1e44ea072b154ed18aa77b5d96897762
msgid "The ``docker build`` argument is used to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:63
#: ../source/containers.rst:75
# f93ed43176a44acbaf78cd0d8c940ae3
# 08c3e7bcc89a4ef0968445e749916c9e
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# 82fcb948fa72493ab7c6e6f137d10cef
# f676b1f2221c47128007eab17efab487
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:67
#: ../source/containers.rst:79
# 99869cc6579c42efaa3941db94359f8b
# 647d3df7d4bd4fc697e775cca82623e4
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# b4bf0f4d04984b4898fe118629b81fd1
# 7f13941c61604dbaa8270940a7e26b62
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
# 4317b16ef12244afa08cad8f04c23178
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# c02a428410dc41d9840c625237eb9255
# d0210493b9bc475d9aeaa11da1632c19
msgid "|directory dockerfile_context|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# fa65f07554e8402088156138c6b8a0ab
# 94a8ece6dc2e46d0b2a065ca88c71550
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# 9e35885424484d858915b2c33ccf5b90
msgid "|force_docker_build| Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 52a26732665a4fdebef93d81fc1467b5
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 3e750da28bbd41e4bada080e71799ecb
msgid "|no_berkshelf|"
msgstr ""

#: ../source/containers.rst:71
# e800c5c6649b43598d20e81f0fa67430
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# 79f6cadb1fa24aad87891bb40d0d7585
msgid "The ``docker init`` argument is used to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 2d145fa043b34490a714445f6603b1d3
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 4ba396041a9440b2858fa5d6fb58918a
msgid "|generate_berksfile| This option requires |berkshelf|. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# d2024fc2b760409e99b5301cf300a525
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# e9231c6d1d094183894d21166e40abfc
msgid "|directory cookbooks| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# ce894f1c0bba486eaec5b38a70a98fa6
msgid "``-d DOCKERFILES_PATH``, ``--dockerfiles-path DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 719cd6e0bca0438093eee9eae58635d7
msgid "``--environment-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 5204e748cda441318f28139496f296c4
msgid "|directory environments| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 3efe399611e84f34991d13a4035725a9
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 4f240a8d4b4246469f8d0a020b514444
msgid "|docker base_image| Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# e878c406f2a8429aba9fc02c1499eb74
msgid "|force_docker_contexts|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 5672bca2f9424e588a0a16e04ef547c2
msgid "``--include-credentials``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# b0ff5588ce354254bfe9d30e5c77e453
msgid "|include_credentials|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 598ab1b51951467e987415276e99a8a1
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# b036405333e34c9fb7b3c27c57ad4d6e
msgid "|directory nodes| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 4fc479004bc240c78ac1e93e9a7ea546
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 1d5844886f0144ec80fee06b49febfb2
msgid "|directory roles| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 27297a5a4a7f4bf3979f0a18140b7c2e
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 3b0ba621592e48e9b3b8e1e389790ae1
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# 024c5d7b378440618fdbfacd75bf50ef
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# d40c18695cc94a3e9e5f422c7d6661a5
msgid "|secret_file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 33d5e3a1c15641d795fef63b173154cd
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# f0759fbfd4f04ae08f21c7b2551e6269
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 34847f19bc4c4e0cbb8901bf3b28e75a
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# ed7f49f8e7414476980d6a1b28d9dde2
msgid "|directory trusted_certificates|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# b63c4b207410422d8b6b8d55fb2f0475
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 1ecb571ec5754518aeedc9e25f04a179
msgid "|name validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# 467afb78fd30492b985981bf6f4b9011
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# 9484422bc8214c609f488d4f708b1569
msgid "|path validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# d141f2689ae3487e9d27e155173f643b
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# 5bc75f15ab4e44529974715dcf1b3994
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:83
# 9edfcc4709b04fba8f3243ae549c2fff
msgid "Examples"
msgstr ""

#: ../source/containers.rst:85
# 110f3d3b5d96480091570318ae347072
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# a76e85e0ea3448eab6b286c57660ffb8
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:89
# e5c58bbf48004ac3bcfb4c5530fd65ee
msgid "**Local mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# 523156db74984480aa60d2bf98cd995f
# e42299bee23d4afdaa7886c7b4805341
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../source/containers.rst:93
# fe0f6281d59b4af39e8c2f04a5f4aac6
msgid "**Server mode**"
msgstr ""

#: ../source/containers.rst:97
# 1d6fad020f09444fa7374c4e93db1b81
msgid "**Include secure credentials in image**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:4
# 051491f6ac3e4a969c4f085f1433c4c4
msgid "To override the default behavior and include secure credentials in an image:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:10
# 384cbc4b720d4cd1a65921f636244999
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These are managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:102
# fe02dffa50bd45a6996b33e05210275f
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# 88ab980c9e454f1e8aa7f6bc56f0752d
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# b22fa4120d0b417dae056c51d41ec15f
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# a05d34a981844a00a5492382c841d085
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# 2d1e38ced5684a4d98f069fa8f78b91a
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# a399f40ab9ef414ea0477a60fecb8501
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# 832c2d0310854a6eb0844c4d0ef75583
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 55d8d23c63da4ba8b13d98640f8eee75
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# 10354ae4dcf7465281e82f86a14295a6
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# f56cc56cb013401aaa3fe09cb3fa18d4
msgid "or, using the same |nginx| example as above:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-14 14:12-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# ec597513bde046989093780990bbd91b
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# bab97ca69e0c4b98b4f36f468f59dadd
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# 36575d8167f141efb04ef91eb4ff56e2
msgid "|linux lxc|---|linux| containers---leverage a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a user space commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container."
msgstr ""

#: ../source/containers.rst:17
# e8263cde554c49b6ba5633ff77b207bb
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# ea8049def3f54bbdb2a9c0cf05f7f94a
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# 707d62ac4f6748bca269362408129d14
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# ee0c942ca88d412998d6b2c6b4506a2c
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# 163ce64dbf8d40a981a7c89e498dca07
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# 83b91af3b54e4a90b1c2ab671ecc5203
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# 12ecb61cf87f468a868186c4cdc081a7
msgid "Securing Credentials"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container_secure_credentials.rst:5
# 6555886aab2a4a6c9cb8a43edce66a58
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# 28ed2ad9241040d6937aa91799237b89
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# e473408ffb284a4089050a4106f7ece0
msgid "|docker| is an open-source engine that helps automate the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# f26de7e8d1b7499a950f6dde9e65a64d
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# dee1916125554417beb5da7536c82ec5
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# 66bb806d5720458394beac1caddceef0
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# b2665675574843a3a23125c66301c561
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# d32488d4abcd4a85bcb0aabeb1becb3a
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# b86b6d911de44070b04d151a168fb340
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# aca8f5b15fe747cf88d98bbafe213a63
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 346de4d848a944838c1ddc1a6636e2e6
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# 25ad72a93c524b7a93e37b5b80d77956
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# 3e3813c38027426ca1afd5665df8daa0
msgid "Credential Management"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:4
# 9b47fb29fe4342aa9fe6a930ae937560
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:6
# 1befa7c17ee344b2bf2be7ead78910a3
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:12
# e341bc50bce641aeb96343f325afe1e5
msgid "Use the ``--include-credentials`` option with the ``docker init`` subcommand to override the default behavior and include these secure credentials in the image. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:18
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
# 9d82a8b0523b4b108067a4e55223c1e1
# e9cee63d5b8443c784d7bd915ab2aa42
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:39
# c40c7c6da1f14e03ac6e04483fb6e974
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# 5f176c989ddf4e09a50f29df1e0896f7
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# bdab0ea140864ec38c98cd2eaeadd6c4
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# 624e2aea25494ff9acc6de6edf90c9f3
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# bf04cec87638429882ce1070ac2fb867
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# 18bdc885a25c42bba1898faf4519e1ed
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# a2905415560c46328eca372cf0bc0be8
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# 222e5ffa1b654d519889e95629dc6202
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# 2d3bda9c4b2d4dd7a7c50aa077781621
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# 87da35fb9a624dbf80601a4105d73868
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# 9481fc0e800842468487ec6604a44c85
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# d745a62188be45958a28cb83b701272b
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# c74dfdb44b414d9eb63957ce46432cf8
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# b0bae0a6aa1e4740a6ab0c186c88eb83
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# 7d0fd9ff01594cacac6eeb0ee7a92a1a
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:51
# 881ccfcd021040f5bed56332a977fa86
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# 44af5ea414f04f2796976e9707980a26
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# eec12822f4ca4bc99612e0c929be738c
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:54
# 9f11adb69918450d8ef9457faf0bf3f4
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# c34fc30115f14c07a7b7b5b2fcc4db27
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# b31f8b80cf6746f88a2e9fe03e846f1e
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# 619e4d6e90b642e38e0c233ab41bdb64
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:59
# 8bdcc9ff283c4e078c547f25ba672280
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# a3837c5f52a4492eb5d16560f44ebfdb
msgid "The ``docker build`` argument is used to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:63
#: ../source/containers.rst:75
# 4159ae937e1740ae9ed8be71dc151160
# 3a6c9099e20d4a18b29f323bef86f2db
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# adaff7e6bbbb490eace6a97e9e85a7e5
# b76e464e9a3c4475a3faee7968245beb
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:67
#: ../source/containers.rst:79
# 1df2f19b560d48ae81000090dd7e065b
# 558530fe06004efdaf4d6f7e1a24011c
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# 2ecb0e4c93bc42ffb90aa55bcfa5da3a
# a98efe7fe4bf49bf81db19982856701f
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
# 35bd3acc5189424096082a99017f45c3
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# 368da5b847ec47dc86598840bb264242
# a78a86cb560d4992b0f3d346f6d34889
msgid "|directory dockerfile_context|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 0a01f4958eb447c1aa88c3f225ba5372
# 3e777fc25014471d87f016eaf4fdba07
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# f372e1055401442b9068bfb7a59242e3
msgid "|force_docker_build| Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# a355eeff0d4945689d6abb41f04e38d7
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 1f6ddaca68a249a78b66f4bbbbf255e4
msgid "|no_berkshelf|"
msgstr ""

#: ../source/containers.rst:71
# 53c41937950a46239d841dcd9562ae8d
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# b4b9c25d3bd447729fbb6003d127c9cc
msgid "The ``docker init`` argument is used to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# c8552abad28548faa04e847ca62723bf
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# a26c74cc3ca04ee9a91739e58911d0b8
msgid "|generate_berksfile| This option requires |berkshelf|. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 8fc2f08905ac4639939ae18a81a3e785
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# a8a9ea1159dc4ebc9b255e92ca41406b
msgid "|directory cookbooks| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# cec26be49bec4dc296b6af74aea6ca8f
msgid "``-d DOCKERFILES_PATH``, ``--dockerfiles-path DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# b5e6137fb3f74c1eb7e8402522e04271
msgid "``--environment-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# db386358b24c4d53af921f1e88aaea2b
msgid "|directory environments| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 3df356ca2f324ea9afc3d3f9907b0ca6
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# cfe8b212196c4dc297ca7fba8069058d
msgid "|docker base_image| Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# e8171ac707f24c7a941245e93d8fd71e
msgid "|force_docker_contexts|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 616290cbc6db43e39cf5ab090db03c11
msgid "``--include-credentials``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# c1c255bcdef848c4b28a80da48c0447b
msgid "|include_credentials|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# c7e022f320fc4e8581910b6b99e3b0fb
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 7e0b3c2faaba45ecba17a3616799441e
msgid "|directory nodes| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 9d44ecced37c41a3b95a934893aa4b75
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 2df779b78f724507832c7d3849a8f44d
msgid "|directory roles| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 635fa085ccf843bdb914d3791d9e1674
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# a710a51d03fd4d1ca752d1e73efa5957
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# bf146b8ad89e45f99e95f9002a207cb0
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# 1831f3350f60443b8c2a35309493f82e
msgid "|secret-file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 4a48299b234148649a1f26addddd5ae4
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# d2407026ca174a75bbcf6db9fbf09609
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 507973b24ac947bcb924198a90a81130
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 75d1eea62b4e455a808cfda46fad38a4
msgid "|directory trusted_certificates|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 093a14f682f84467bd68aaf081acb850
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# b1fa3ee2d079454683a5704e5cdd800f
msgid "|name validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# e710e26470f24a338491fcdec8849616
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# 1e527b148b28422f886e5048a8634376
msgid "|path validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# a493fbcb3a314ea1846701f2ec49522c
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# fad6887abe5a40888953bf1875821f04
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:83
# f15d61ac8b8d4574b6160da53ddead03
msgid "Examples"
msgstr ""

#: ../source/containers.rst:85
# f2729e9113fe404a9554e043853e7cc0
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# d6eeabecb35d4253ba267dae9b3ae793
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:89
# 4cc26c6ad7f847449394714a8f6193e9
msgid "**Local mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# 2a7788ec9bd5417bb76f7bedec763c21
# cf0c9b1d4aba4cbeb3557db37fcdf505
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../source/containers.rst:93
# abf125aab7344b00bf0a8f3d4f1a25e5
msgid "**Server mode**"
msgstr ""

#: ../source/containers.rst:97
# 5add5cfb4c0a427dbffd40fb827bcfb3
msgid "**Include secure credentials in image**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:4
# 93e13fbd8cb3455691ae7fe3a1b703a7
msgid "To override the default behavior and include secure credentials in an image:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:10
# 1eb5334ffcc34fee870047c4d1a52938
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These are managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:102
# 2db66ca41f324c719e939d357ebd84e2
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# 935fe50a005740018b6d67d144269280
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# a36ada0f029744a6be1127399018d71d
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# 35f6a0ca828d45829aa4077f5285acd5
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# d1ed9e54779f4f7a9f58e9e452786913
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# d93e34f004d2475080781c464e348955
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# b933bd007f3149249165aff8953de157
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 6950c9d18a584f5997288cee0542e023
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# 63a3d3f13bcb4d4cbb544089ac82ab8e
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# 56387729bd1c48e9961a58c6934ecc8e
msgid "or, using the same |nginx| example as above:"
msgstr ""


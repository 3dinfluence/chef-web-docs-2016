# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-29 10:22-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# ef2409c0d503469ca38fb506bb66a1a0
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# b7df75fd11a34126813814613d9c01e0
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# 071b12daa54e4fa384b2a94446a60b33
msgid "|linux lxc|---|linux| containers---leverage a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a user space commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container."
msgstr ""

#: ../source/containers.rst:17
# 159f568807b34cacae9e5d46051b548f
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# 2db32a14bffd4f8ca3e769a424278b1f
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# 44df49e96ed54a5b97b7a67501986d26
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# f321c814b29148bea74726523767a6b6
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# 6611cd64c6304ace8af714414057de2a
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# 0338c444b03a4884bf33448eee5dbf06
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# 899a990ca9c1428eb5ea3a957555daf3
msgid "Securing Credentials"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container_secure_credentials.rst:5
# a5cb7cfa2cb646b580a9741f9eabda54
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# 3212b6b2ed0d47488bb3dd040368ee34
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# 4ee2aa2aa08b4be49ee022dc848e1a75
msgid "|docker| is an open-source engine that helps automate the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# f084d31138b544029e953cc81145542d
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# 136b498258314ca8b4ea0ba9342bd36f
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# b891fc26d82e475f9d63e0e0adad6f5d
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# cdbee449154043d4a20b4d2d3a4cc0de
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# 1f6b10d073954710a86bd5bc7b50f820
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# 55bc2a070eee4144b26fb727d873c780
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# ef92781546874e03997a6dd933a64429
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 2d7b3e3d803d46e9a71542b5bf65f063
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# 59f7ed1b6b87402fb0ecc7279caa98f0
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# 1792ba1a35604bae9b9a99840ffaa0ac
msgid "Credential Management"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:4
# 60deb0dd6e9d425989eb51d0c051762f
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:6
# b43e28b2cd7043aeafc0c0e8130e87e1
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:12
# 52415e44052143e4bc1b0ea58e038221
msgid "Use the ``--include-credentials`` option with the ``docker init`` subcommand to override the default behavior and include these secure credentials in the image. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:18
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
# e4af5cc099a7466f9268f32c2436a774
# 3ebd060d631546d89e0ffe18ee5bc3ce
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:39
# 04a7e9a57cb046f6a3ad8d1cbc327831
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# e700eca52b8c437eb02b640b71b2235b
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# 97c335341d8944de8774128fd69f2b66
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# 91436b25644e4789a7b67c7a7a3c3820
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# b83a9322e8b443de9dc35a799c388e7a
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# 9e631552ae58480a96ec0431e2a730ea
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# 16d671cff2c84415a9807af11191e8ca
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# c070cdc8f98c482798b6a26f7c75a041
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# a608693c9d2d45878b80c7da3bbb4271
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# a570e834858e41dfb914193958d59eb7
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# 84416078e47a485f90bd7688a52d7798
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# 8fd5867799b54d63ad6381e6a4bb4c72
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# 161a2ddb45c54f8ab09157b93bbd6e31
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# 5a54600a672a46cd88dd973f73df2668
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# 65996ba72c0c482793c6765895aaea25
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:51
# b35ce2eeee714329897443f0dd2338ab
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# 913514f7fe064dea9c1a4eeffebcc6a5
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# 35deb0237b6a4539ac50c5f0a38b9acb
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:54
# 1c1e68abd91b44f1956254d17939141c
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# 199dbc578df744fdb98a42c33ac33ed5
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# 8b7b0431601344f5a00aa0a1864933b5
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# 1fac88a790a044e5b52a120dfb19646f
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:59
# ebf4897b34244ca5915056f5b3d278c4
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# 97d5476110f542f69b6e4deb1bca46bb
msgid "The ``docker build`` argument is used to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:63
#: ../source/containers.rst:75
# 45fc703c6a994946999514c651fe492f
# bf4ebaf2966741d581eac36bd02aacb9
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# 7f6297bbb4eb43a792963c9af9206d5c
# e2a9535e67584a7998e28355d05a3175
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:67
#: ../source/containers.rst:79
# 75ce68b8c9da4a17a5125b2fde8d3730
# 9e2e2daaed054e1d88b226bfdb21aeb2
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# fda42f3ba90249359efce927a9f986f4
# a301a870688245558606d41cae9a0d1c
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
# 2181b0bde4804b8e808dc7fe912851b7
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# d684a62ef06249a0a8f48f754a5b709f
# 066bbae97c8e4d67b53a2d79a00dfd89
msgid "|directory dockerfile_context|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# b43ea92bef514605be3673d834425fba
# 6537ad24540b4242ae40eb518baa0dc9
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# d7f92a31eca244d6b79c942870542643
msgid "|force_docker_build| Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# b5dd65a7b56247c3bf1a0d07473b42d3
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# f24f151a53f14e8fb50a1e45e7c00220
msgid "|no_berkshelf|"
msgstr ""

#: ../source/containers.rst:71
# e8629b0e05b14fbb982efb1c0d86a96d
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# 2d91b8b1d68f47e581f3ccf7e8b36042
msgid "The ``docker init`` argument is used to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# a27f34f7a8c546d988da74c697f6a2d3
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 1a77cefaea4249aca8882cced1dc4c7e
msgid "|generate_berksfile| This option requires |berkshelf|. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# b0a8642ca8f24204ac1e6063f0efc18c
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 1a63f152364a4433b5cc1685490d63f2
msgid "|directory cookbooks| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# 7942cf5cbbb4485787a8015d705bd374
msgid "``-d DOCKERFILES_PATH``, ``--dockerfiles-path DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 24d5052d349c42a29d824d9804052724
msgid "``--environment-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 2f45250de1d846ec9246918d894a075b
msgid "|directory environments| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 2875304d269b43f283a7698ff90745bb
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 683b1b0792a04346a5f7c431d8846b36
msgid "|docker base_image| Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 419d94b50fb84ce6ae96ffd9c79d43f9
msgid "|force_docker_contexts|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 966fe3581e324626b4cd67e5fe75aa36
msgid "``--include-credentials``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# a8b4bf9a92de45c2b53e903782dda532
msgid "|include_credentials|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 0b9b2e5558d347bcbc39c98b12ed7b81
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 11df5fd0983642bebc275e3157e3d85d
msgid "|directory nodes| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 018faeefda6f4575a2efd1787036b271
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 4443fe9e85714bacad719a09d804c1f6
msgid "|directory roles| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# bc9a8c1c1f0c4788814b7ba99fa17a9e
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 306e18ce98144546b377c376f01d3d14
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# de90e81c896140b3aeac637fba98e1e3
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# 0d52af95f4674f3795960253621e832b
msgid "|secret_file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# f83b76622e4a4f2195f3bebf007db608
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# a342122920974a81974ac08228e76e01
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# be6d6db82cec496ba54d515a748bce6f
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# affffc5aef124f86adb6b55d73410c6a
msgid "|directory trusted_certificates|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# a671d8de9a5a4c63a67266ed3eb616ff
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# d65599a3f9a14e09bbdc8dc49e5993ef
msgid "|name validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# fe075e7f3ad840d2b1deb90bbe73c8f7
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# daa59211a0d24ff5a8fd5ac9a20c897b
msgid "|path validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# bc1e41972e904531ad0a21fd352d6416
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# 8ae726e1e0034dadb16aeddd7812028b
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:83
# 19f97971c904407f8ace23680e4bc8b0
msgid "Examples"
msgstr ""

#: ../source/containers.rst:85
# 71b7cc3958144052b3b1864745e45b7c
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# 95a2b8ba9a6f4dd09510fd95f049a837
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:89
# f35379dc21b444d39d1c122f0d1fc31d
msgid "**Local mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# 3eccf7c547b04851b629ecab07ee97ef
# 89f30886c4e840e68bbe58df7cb6573f
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../source/containers.rst:93
# 403207e0b63f4658a63f910446f034eb
msgid "**Server mode**"
msgstr ""

#: ../source/containers.rst:97
# db5f9950f3a9470c9f72d8dcad1557f1
msgid "**Include secure credentials in image**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:4
# ad7a7d520a3447a1bbc67fde5bedd9b5
msgid "To override the default behavior and include secure credentials in an image:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:10
# c5af97038cc44ac791147e87fabc8eac
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These are managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:102
# 839a0c6cf9874f82b27a555f6061e49c
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# 32c0f5b41194452682e5144c41bbb485
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# 9fb504502d4f405ea2c09475c706861b
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# d6ef650d2aa64734a2b0662ebbc5d486
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# 25542da406f245938718d61db621fc10
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# 71f1d47d3e1540deb8253a190887b83e
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# fd8444294647457897d8442da3d89130
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 824dffae3a1944da9a8c6491bde29058
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# e8d1259dae224baba350747df08a1256
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# 791d7145847f4441b12b23d77033848e
msgid "or, using the same |nginx| example as above:"
msgstr ""


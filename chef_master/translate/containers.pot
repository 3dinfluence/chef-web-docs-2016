# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-26 17:28-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# a1925e9825254bdc9306f3a3dfa72a50
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# cf5fabdb3178488b9040aa401e102e76
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, with each working configuration running as a process that is isolated from all other processes, including even the host operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# 44a380e313e549c08432d5b2909a24a7
msgid "|linux lxc|---|linux| containers---leverage a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a user space commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container."
msgstr ""

#: ../source/containers.rst:17
# 578c83cc666745ffa36ab1dc296b2ecd
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# 70d066d0564045c9bda3016b46b6beeb
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# 4d6f032985ae4da78cfc69ff694e9b5e
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# 89e1a162ffba46a19c79fb984dacb97d
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# 347a276a743a479cabe6714097bb8e71
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# 25a4de6e20e544059245354a09eec8b0
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# 0b1dce6188154d9d860827955caa20a5
msgid "Securing Credentials"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container_secure_credentials.rst:5
# 0a793d584d95482aa951e7e1dfdac55c
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# b01af21e6ac5464bacbf50e9a6f0d5dc
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# e7f72b20aa2e4a319cbff7ee39f5b4fd
msgid "|docker| is an open-source engine that helps automate the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# 916e3615ec02491891f12a6e317d8079
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# 949f7b6010e24127b5a970e7b68d72fa
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# ff20191dceb64368a58484c7cb4fc35b
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# 0dbbc2c7db7b4f22a4a1cb824d16a069
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# f5a0390c30c847e08f099998a78a42b7
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# 41b139fdc0b94f8c975df7baa1ce18f2
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# cc9b6e6c36934582b6316be435be479d
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 4a46330798e5453986f69a7ea5b5088a
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# ffe0d567101f465b8153ad96e28be911
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# f10262c73aa0481a8f75887116c2bd2a
msgid "Credential Management"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:4
# 0e77c46e13a644a98af167ab01d6d67c
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:6
# 55a0d81c7ead487088991b3fd3589613
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:12
# e0a7c77656b44c73a371154987d294d0
msgid "Use the ``--include-credentials`` option with the ``docker init`` subcommand to override the default behavior and include these secure credentials in the image. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:18
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
# 7bf878553ea745479864a6484e3ec649
# c703dd1c8bba4dedb3ab7b50b7466e5e
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:39
# 08fceb70348d4923a1aac50bd74f8325
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# e151d31e19634fa7b2716a82eb74f8d9
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# 1ee2cdb67be24239b7fbf6b57e554104
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# 9c52dd0c230442f0bcbe8d8b39a86f02
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# 585fa300919c4e71921cb17b41bdee23
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# 27253a94d5f14c5892c1ecefe291f5e9
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# 455f6b3e717c4497a7fa7f6bf4dac562
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# 9b2145840e1e4c0795eafb8b69631b78
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# 0e61269765244a8491a3afb779cb88d6
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# 23b26de6be294d6baa6225f139036594
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# c5e6d46b65e14f0f9bf326a1c99ed622
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# 379c3a48e4624545829a45c0af038b0d
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# 1d6f71234c66402286a4fcde3fa2eeb5
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# dff60648328c431ebddb589a3b2dd9ad
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# 02727a32de09466c9c3ad687f9b4393b
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:51
# 06cdc3d7b11549e292caf2bcd4f6b180
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# fdd627ef67644e4aadca33c43b09b2aa
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# 07a732d2603d41148a8e0154f47104f1
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:54
# 9db85b72424f43e4a0d4d4aacaad02f8
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# 0dad47ec2fab4287a8f2cc859bd755b6
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# fabe47eb30d942728e7a1443946a0e00
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# 6ee659616c5d4bf4a4606387551517a9
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:59
# 86e54363287847ceb68b58b5d6d81bfe
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# 56f08599afe14cae84a1316fb9c3ae96
msgid "The ``docker build`` argument is used to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:63
#: ../source/containers.rst:75
# 932bfc23784e4e71b9e77640a8540564
# f6442c87ffd9484d911b20a2c5a0a94d
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# 55c2ac42589d4045986f21feede7cf77
# 68e066d436604c77bada95e052418eb7
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:67
#: ../source/containers.rst:79
# d2ae81d0e6394e1e96f8489c4d16be7f
# 68f9303e7e3849afb402bbd3465ad695
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# 75b42a87e8174c5ea3a700447a4afd03
# 8b45bd31066b4bfe97dc36b8d0f34afa
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
# 0b6e3bd369aa4beebf475a6688151c24
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# 3175d1dc3ecb4dfdb7953c5553c2d712
# 71574552d5ef4228ab48e2ebc7a19133
msgid "|directory dockerfile_context|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 15c171adc14f4d1c93634e1eb69983c0
# 3603b1492f024feebbcdb53ea997e03c
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# 37efb2fd39774aaa897002936ab28107
msgid "|force_docker_build| Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 34b524beb83e4a029220a6638a6dbce9
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 8fe6164a89c14538b3c9edcaae1a0adb
msgid "|no_berkshelf|"
msgstr ""

#: ../source/containers.rst:71
# f39cdf3cbd1c40d5883e0fe42e304324
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# cd7474cdd16a42cf961f2c71494f9459
msgid "The ``docker init`` argument is used to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 0ee3a3fb9f3e46a4982aa06ebe163acc
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# ecd99fd1719742f389bb1d8e8b108ed5
msgid "|generate_berksfile| This option requires |berkshelf|. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# b217ae20ceb84674821501c983c9718e
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 9addf1bca7044d7a8a0d785181a1510b
msgid "|directory cookbooks| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# e65146effe7146d989ad68eb753ca032
msgid "``-d DOCKERFILES_PATH``, ``--dockerfiles-path DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 8e54ae669aa04382bbb2d5b45fc462b0
msgid "``--environment-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 7203da8fcaba48cca060065befa9a84c
msgid "|directory environments| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# e9322c17a8df4c469981d953ac7142d6
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 20e6c102ec3b47e0a031217bed4111b1
msgid "|docker base_image| Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# e517767756574c6f9ad3ce2583ea3cbb
msgid "|force_docker_contexts|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# b576b74dfa8c4b33bd0f0ef9b821774a
msgid "``--include-credentials``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# d6f69e4bf57e4127b2055c43207e06db
msgid "|include_credentials|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 6f3c2cf94ab3438ebe87a48075d82a4f
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 978c16be0fb7444bbdd577beabf3cfd7
msgid "|directory nodes| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 103e9ba37d42468d988ec46d09b78e2e
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 5b3b447d7116479696795e7bf55355e0
msgid "|directory roles| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# ae4c4d03f2fc4f7f8c6c4fdc44eb9867
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 8b4b4d606e3642b589abba4598c38204
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# bdeeed0bcff147d7ba31533d338b2a33
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# f8f7e4a27ad1485ca88d971a11410b37
msgid "|secret_file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 9d4538ed52104fb8afb523ef0a90115e
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 867cd1fd1f21429d9bdf47d6bc6d5d4b
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 3c37e96024d9475fa5b3b501ee64451d
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 5efd1a11c03e4975be8669694faba1be
msgid "|directory trusted_certificates|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 4ee2c8b87cd34688ace0a4bbf153d447
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# ffc2f62ea6da40b195a0dd0f7e197e45
msgid "|name validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# 25bd5ee2501a484d8c6892d0969d8295
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# adb313ae4151490f88f6d48ca6fe9f1f
msgid "|path validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# 879c1c24768940b3bdeff469cc4a328c
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# 348e9884dd3d4b4387424dc0e70f882e
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:83
# 1d6783d8572c4725afd5f14e6d0250a0
msgid "Examples"
msgstr ""

#: ../source/containers.rst:85
# 76988392d5ce41db9f260b2304fae6fc
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# 2dc9d594cee147999bf153f33c968feb
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:89
# 20da1eef256249d9acd1affc9e884c20
msgid "**Local mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# d5343ad65f264635b5e98777426f9e8c
# a434df624ca644c08c898b3af1137df1
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../source/containers.rst:93
# 675a68eb180a4bfea5e9263779795b14
msgid "**Server mode**"
msgstr ""

#: ../source/containers.rst:97
# df6861ec4218449f966902608aeae11b
msgid "**Include secure credentials in image**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:4
# d6e9870227564aa29c842591ced26a72
msgid "To override the default behavior and include secure credentials in an image:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:10
# 42ea4c759e3842f8a0bc1a0e1f3a6b12
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These are managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.getchef.com/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:102
# 9793222e39b442d4ac6fd71d456e20dd
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# d09c6d2de929437d88087bb172d15564
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# ae948a13d67e4e60b47d6921598c27a1
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# eca23f2e24c34acdbe355b5e8a688d34
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# 3a553d349cde403fbdf4dd56a9868941
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# 14b3d4146b8b40e2a7272873eb5dd06e
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# a5295e3464e641d9b2650f47a3913cc3
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 67545d64280b45ff9d6249e81b8e1e86
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# 8abbefa0c0f94b49b612540813beb513
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# 453fd0c78ab6425b9705db9132ab5aab
msgid "or, using the same |nginx| example as above:"
msgstr ""


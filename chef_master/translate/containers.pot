# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 16:15-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/containers.rst:8
# 181db51a7c634bf99bb220ca1f3fbd68
msgid "|chef| for Containers"
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 700a980cb34645d7ba45f8b44f8292e4
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_containers/includes_containers_lxc.rst:5
# 32fd74eabcde4fdeb4b51a4c070c4a64
msgid "|linux lxc|---|linux| containers---leverage a |linux| kernel feature called control groups. Control groups allow a |linux|-based operating system to isolate CPU, memory, network, file system volumes, and processes into a user space commonly referred to as a container. This approach to virtualization allows a single operating system to host many working configurations, with each working configuration running in isolation from the other containers and the host itself, without the need for a hypervisor or a guest operating system. Each container comprises a working configuration---or application---and all of its dependencies that are not already available from the host operating system or from another container."
msgstr ""

#: ../source/containers.rst:17
# 12601f78b58140b9820e31f33b467c6a
msgid "|chef container|"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:5
# 29c24c103c4c458a9303fc571a2be987
msgid "|chef container| is a distribution of the |chef client| that includes components designed to support the unique requirements of running the |chef client| from within a |linux| container."
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:7
# 6a5a7ff1304e42698d6e4e9fa1011c3a
msgid "|chef container| comes packaged with |chef client|, |runit| and ``chef-init``"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:8
# 3ea4d3ab95224c5fb8f7b13934e65c81
msgid "Bootstrap the |chef client| without an |ssh| connection"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:9
# 76ad1515944d4ab6a64e1180b2fe2d2d
msgid "Use the |subcommand knife container| |knife| plugin to work with |linux| containers; use the ``docker build`` and ``docker init`` arguments to manage |docker| image contexts"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container.rst:10
# 8336078de1954134b9ac5774a8affed8
msgid "Use |chef client| resources the same way in a container as on any |unix|- or |linux|-based platform"
msgstr ""

#: ../source/containers.rst:21
# e201f8009a634499a8f61713d6ecc32e
msgid "Securing Credentials"
msgstr ""

#: ../../includes_containers/includes_containers_chef_container_secure_credentials.rst:5
# 51b447189fdd42789e22b3218253e0ff
msgid "The best practice for securing credentials like private keys, secrets, and certificates that are used with containers is to not store them within the container images. To support this best practice, |subcommand knife container| by default deletes these files upon the completion of the image build. The process for mounting or otherwise making these files available to the |chef client| varies, depending on the solution being used for containers."
msgstr ""

#: ../source/containers.rst:25
# a11b14858b014b138716f374e4994b00
msgid "|chef| for |docker|"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:5
# 6d527bab1080429d89248c5a77b48075
msgid "|docker| is an open-source engine that helps automate the deployment of any working configuration as a lightweight, portable, self-sufficient container. |docker| packages a container (a working configuration) into a |docker| image, which is then uploaded to the |docker| registry. From there, any node that runs the |docker| engine can launch this image as a new container. |docker| containers can be run anywhere: the same container used by a developer to build and test their code on a laptop can also be run in production, on a virtual machine, a bare-metal server, as part of an |openstack| cluster, and so on. Using |docker| helps to"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:7
# a887546a7491410b861c7699700df5c7
msgid "Simplify the packaging and deployment of applications"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:8
# b1a8a2a6370041a68a54e712544dc3b2
msgid "Create versitile, lightweight environments"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:9
# 82e00dab1dd7410db528c69a39a24fa8
msgid "Automate testing, continuous integration, and continuous deployment efforts"
msgstr ""

#: ../../includes_containers/includes_containers_docker.rst:10
# 3862309431b44ad484c3e56c32b64c51
msgid "Deploy and scale web applications, databases, and backend services"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:5
# b4d8ca422a3546338e1b653180d67db4
msgid "|chef| can be used to manage |docker| containers, including:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:7
# 4d207be1713b4690bfe37ec420cab2fc
msgid "Creating and deploying |docker| container images"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:8
# 7223614195c34f62862de96b4ed88cb0
msgid "Configuring |docker| containers on-boot, and then protecting them against configuration drift"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:9
# 3b581b1d2244454692427a56d59bcb05
msgid "Provisioning and configuring the environments in which |docker| containers are hosted"
msgstr ""

#: ../../includes_containers/includes_containers_docker_chef.rst:10
# 7e2cba9e161040a6ad0439b32a4f9598
msgid "Managing complex, bidirectional dependencies among |docker| containers and other nodes in the network"
msgstr ""

#: ../source/containers.rst:35
# 6202c07d530e4856a20ef1e8b750e24e
msgid "Credential Management"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:4
# eb2fd6bdd9dd485f8490057bd432b632
msgid "Credentials such as private keys, secrets, and certificates should not be kept in |docker| images. By default, secure credentials are deleted after the ``knife container docker build`` process is completed. In order for the resulting image to launch properly, the secure credentials must be mounted into the ``/etc/chef/secure`` directory. Credentials must be copied into a folder on the host machine, and then mounted into the container using the ``-v`` flag of the ``docker run`` command: https://docs.docker.com/reference/commandline/cli/#run."
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:6
# 41f1c1a8b0174d7f920b3e949d7277e7
msgid "For example, if all secure credentials are located in the ``/etc/chef-container/secure`` directory on the |docker| host, run the following command:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:12
# 73b57b3aec864fc4906607cf853cbd26
msgid "Use the ``--include-credentials`` option with the ``docker init`` subcommand to override the default behavior and include these secure credentials in the image. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_credential_management.rst:18
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:12
# f846a60f707a41199dd36eed48aeaeed
# d952bbefcc6d428a832585e29734c4a6
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These will be managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.chef.io/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:39
# ecd1b1b05bce43818625048be3e52318
msgid "|dockerfile|"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:5
# 732d0433370e46dcbc8bb45edd6552a5
msgid "A |dockerfile| contains all of the settings needed to use a container with |chef|. The following |dockerfile| settings are required:"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:11
# f999f9585f8549768a95694c36c01bc2
msgid "Setting"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:12
# 9cb0c944e5b9437cb329293bee098021
msgid "Description"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:13
# e0d12d6f34774851b8667acbfa799f5d
msgid "``ADD <src> <dest>``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:14
# e34828cd200f45818a5a40fdf634b41f
msgid "The path to the location from which files are copied (``<src>``) and the location in the container's file system (``<dest>``) to which those same files will be added. Default value: ``chef/ /etc/chef/``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:15
# 959a2b89d3ec4de297cdd674135df0f8
msgid "``CMD``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:16
# 2c4ef4a656704410b3cf42aedcce0cd1
msgid "Use to specify additional parameters to ``ENTRYPOINT``. Default value: ``--onboot``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:17
# 5e8c29c5bda24b44a3c6eb6ba8945c07
msgid "``ENTRYPOINT``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:18
# f82e19c121e04621889e0e6c8830f64b
msgid "Use to specify that a container be run as an executable. This setting may appear only once in a |dockerfile|. Default value: ``[\"chef-init\"]``, which will run the container as the |chef client|."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:19
# 3cae2fc4a8864b1190c95cbd4f15451a
msgid "``FROM``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:20
# 5b8e9b285d424600be2f1bb21b37c125
msgid "The image from which a container will be built. This must be the first setting in a |dockerfile|. This value of this setting is the ``REPO_NAME_OR_IMAGE_NAME`` value that is specified when using the ``docker init`` argument with the |subcommand knife container| subcommand. Default value: ``chef/ubuntu_12.04``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:21
# e0e797aef2254ad7905866c4d2f4abde
msgid "``RUN``"
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:22
# 92ea83d9a44447cb9f5563510913e980
msgid "A command to be run inside the container. There may be more than one command specified. Default value: ``chef-init --bootstrap``."
msgstr ""

#: ../../includes_containers/includes_containers_docker_dockerfile.rst:24
# 87abc12c2f884d598726691c86f2f36e
msgid "For more information about these settings, plus the full list of settings available to a |dockerfile|, see http://docs.docker.io/reference/builder/."
msgstr ""

#: ../source/containers.rst:51
# 6f34c76ec1d847f9965a57fb32cd0e4a
msgid "|subcommand knife container|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:6
# 826883e73d9e46da9a7be16624cad179
msgid "The |subcommand knife container| plugin is used to initialize and build containers. Use the ``knife container docker`` arguments to initialize containers using |docker|."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container.rst:8
# 64c452d95575427882aac07546a9cfb6
msgid "This plugin requires that |docker| be installed on the same machine from which the plugin will be run. See http://docs.docker.com/installation/ for more information about how to install |docker|."
msgstr ""

#: ../source/containers.rst:54
# 6d6dc617cb244e5cb30afa0b9132b1c4
msgid "**Install this plugin**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:3
# 4289a870bf1742a6a5d3dcb610531977
msgid "To install the **knife-container** plugin, run one of the following commands. When using the |chef dk|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:9
# b1de0f4504f645ef93037b04911b2cc4
msgid "and when using |rubygems|:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_install_rubygem.rst:15
# 43ec414803b34ff9b33ff9c02b5e98af
msgid "where ``/opt/chef/embedded/bin/`` is the path to the location in which the |chef client| looks for |knife| plugins. If the |chef client| was installed using |rubygems|, omit this path."
msgstr ""

#: ../source/containers.rst:59
# d217349b67ac406bb954a531931b28b2
msgid "docker build"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build.rst:6
# 161c09b64be0459b890967f8d77f155f
msgid "Use the ``docker build`` argument to build a |docker| container image."
msgstr ""

#: ../source/containers.rst:63
#: ../source/containers.rst:75
# be11c854d66042d1966ea05368a1a744
# 792b2b6aa8304d5eb43aed7e52eeeb8c
msgid "Syntax"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_syntax.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_syntax.rst:6
# 73fe7a6848264f00b2febe538b4fd15d
# 806f0160a9244b4f9100bc5075568f09
msgid "This argument has the following syntax:"
msgstr ""

#: ../source/containers.rst:67
#: ../source/containers.rst:79
# 3c5c8acf39fd45cebe0394f34cedab54
# 670b4fbbf02f4c7db208bc10fc1d8049
msgid "Options"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:6
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:6
# f12eddd3656743d1997797ea88480c4f
# 13831b01711644cebb24361edf3a5303
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
# 7af31bcfd4ba41cfbcf2171210be0ebb
msgid "``-d DOCKERFILES_PATH``, ``--force DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:9
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# d0d55664df05445c8f6edfb509d9107e
# 6c92fe75175543a6ac7c2a2f45caf59d
msgid "|directory dockerfile_context|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# e9698b7225fc429b8ccf12aef6c8922e
# 2df53df445fe4022ad219bedb390f2f2
msgid "``--force``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:12
# c760a4ce1c034307806846fb6f284cd5
msgid "|force_docker_build| Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 06adf401d0c34d05b59cc4d7c2031e90
msgid "``--no-berks``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_build_options.rst:15
# 302ce85206d84f91908972e8ca8e9af9
msgid "|no_berkshelf|"
msgstr ""

#: ../source/containers.rst:71
# 9fddc89f97f0454aadf965b631ff72df
msgid "docker init"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init.rst:6
# a3d6fa1975b74d6cac2b8a73fdab0d74
msgid "Use the ``docker init`` argument to set up a |dockerfile| context for the local workstation."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# d2f35d89ef1349ee9358282829ed6511
msgid "``-b``, ``--berksfile``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:9
# 6855331c88e84dd78cb3e007b97f6c7c
msgid "|generate_berksfile| This option requires |berkshelf|. Default value: ``false``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 9228bcd9471749a0887e1e34a757b37d
msgid "``--cookbook-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:12
# 6cdfce1971ae42f093f1b6c19e73605d
msgid "|directory cookbooks| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:15
# 8d6000bb407a4cf49981f9976a138506
msgid "``-d DOCKERFILES_PATH``, ``--dockerfiles-path DOCKERFILES_PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# 287a5fe1d4b749b0b8038287d2361c0c
msgid "``--environment-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:18
# c76c364df53c4ef6af508ecdac331781
msgid "|directory environments| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# e98100911cd347b282c26e52e1e113dc
msgid "``-f [REPO/]IMAGE[:TAG]``, ``--from [REPO/]IMAGE[:TAG]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:21
# 46a59353eec745ac95f85f9c0d672cb5
msgid "|docker base_image| Default value: ``chef/ubuntu-12.04:latest``."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:24
# 6bea81799c55475e8b3d50ef5cdd81e7
msgid "|force_docker_contexts|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# fba0043cf28045a78e1c4551f1540c77
msgid "``--include-credentials``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:27
# 2a155ee1c1024ce6bfc7c22c869931e1
msgid "|include_credentials|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 02f8a4c689e34f22bf73e0fde928ca42
msgid "``--node-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:30
# 648dc7d830e14c8c888221a9e746363d
msgid "|directory nodes| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 4ddd28d4f65241f09ab4a50328f2f8c1
msgid "``--role-path PATH[:PATH]``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:33
# 0fc8b50b7641443b8889422bbd02586a
msgid "|directory roles| This may be a colon-separated path."
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# 27ca70078f114169a1f2ffdbffbdf646
msgid "``-r RUN_LIST``, ``--run-list RUN_LIST``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:36
# cf771bfedd2a480098e892558576d25e
msgid "|run-list|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# 8e323adcf3294bc188e80643ed518179
msgid "``--secret-file PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:39
# fc160cf2af7e46bc97bd1f844840eb6d
msgid "|secret_file|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 0be0fd1426d84bea9a7f73582ac8c20d
msgid "``--server-url URL``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:42
# 146d4f077cb14fd8a613662fd40cca7e
msgid "|url chef_server|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 23108f8b87b643119101910ce75dcc27
msgid "``--trusted-certs-dir PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:45
# 8dc1c6e207cd406abbdc521973e81cca
msgid "|directory trusted_certificates|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 65934797f1f64c219c805e1ff7b03b5e
msgid "``--validation-client-name NAME``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:48
# 755ba070c9a34911ac46a1e91cf377bb
msgid "|name validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# 102a2ffeca004d7fa8158ecf30b700fd
msgid "``--validation-key PATH``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:51
# cf65d70127684a2897732fa1d87f915f
msgid "|path validation_client|"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# df2fbce303c1480fb0a78400cb160006
msgid "``-z``, ``--local-mode``"
msgstr ""

#: ../../includes_plugin_knife/includes_plugin_knife_container_docker_init_options.rst:54
# 1285eebf6f0c41bb8319a9b01e992c95
msgid "|local_mode| This will include and use a local |chef repo| when building the |docker| image."
msgstr ""

#: ../source/containers.rst:83
# 36338d88e658495cbb1a16bd84f7fba8
msgid "Examples"
msgstr ""

#: ../source/containers.rst:85
# 5843242f0c8f401b93bc11cbf553d7a9
msgid "**Create a Dockerfile**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_create_dockerfile.rst:10
# fff895a29a1b4e7ead1209499765d0bb
msgid "will create a directory named ``docker`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``docker`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container. The |dockerfile| is similar to:"
msgstr ""

#: ../source/containers.rst:89
# 8fb32ea18b0b4078b6971b7123f43625
msgid "**Local mode**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_local_mode.rst:10
#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_server_mode.rst:10
# c6f81c009e47481b9b498e5921c79e63
# 62ad37bd33a44e0389f90c858316fb4b
msgid "will create a directory named ``example`` with a subdirectory named ``demo`` in the ``Chef::Config[:knife][:dockerfiles_path]`` path. In the ``example`` directory, a subdirectory named ``chef`` is created, which contains all of the files and folders that are necessary for the |chef client| to run successfully inside a container."
msgstr ""

#: ../source/containers.rst:93
# 964733395c114e49b1e47ad3b0512204
msgid "**Server mode**"
msgstr ""

#: ../source/containers.rst:97
# ca7530f626464b378dcaba02b21e7d6a
msgid "**Include secure credentials in image**"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:4
# b82a93b9fa58411eb844d1cdaaf13d59
msgid "To override the default behavior and include secure credentials in an image:"
msgstr ""

#: ../../step_plugin_knife/step_plugin_knife_container_docker_init_include_credentials.rst:10
# 02672400231b44798859a6b28e182c58
msgid "You will need to define the ``container_service`` for the services defined by the ``apache2`` recipe. These are managed by the |runit| init scheme that comes with |chef container|. For more information about ``container_service``, see http://docs.chef.io/containers.html#container-services."
msgstr ""

#: ../source/containers.rst:102
# ee5a4db29ce44f769bec802b641798c0
msgid "Container Services"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:5
# f7937376aaa642788bb5974d638326ad
msgid "The service that |runit| will manage is defined as an attribute of the container. This may be done by editing the ``first-boot.json`` file or by adding an attribute to a cookbook."
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:7
# 845b44571ccc4864bdf803313746b95f
msgid "For example, the ``first-boot.json`` file may look similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:22
# e39e758f49d841f0b1af42ad237dd8d5
msgid "where:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:24
# 8885fbdf36f34a849ec35ccda80bdc1e
msgid "``recipe_name`` is the name of the recipe"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:25
# c29676e265784dda9ff917d32847b867
msgid "``service_resource_name`` is the service resource name that will be managed by |runit|"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:26
# 2f123a8dc62149d8b47bd9a039a7b484
msgid "``service_run_command`` is the command that will be executed by |runit| to manage the service"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:28
# 03b3ec6da90b4f9b892efb079a789e6e
msgid "For example, if the service is |nginx|, the ``container_service`` paramaters would be similar to:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:43
# cc1fa4c3c5a34353914d9d1c9f95320c
msgid "The container service setting may also be specified using an attributes file in a cookbook. For example:"
msgstr ""

#: ../../includes_containers/includes_containers_container_service_attributes.rst:49
# 8aec7306a33b41f28c09c6025be00c7c
msgid "or, using the same |nginx| example as above:"
msgstr ""


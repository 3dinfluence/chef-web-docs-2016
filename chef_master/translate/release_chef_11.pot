# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-30 16:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/release_chef_11.rst:34
# 316c3b0bdf0340c890e233c3bc041fd1
msgid "What's New in Chef 11"
msgstr ""

#: ../source/release_chef_11.rst:36
# 73204e1f9d7b43a890edaceff52965d7
msgid "The following items are new for |chef 11| and/or are changes from |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:39
# 543bb6c9a81d424aafb733fedd0f45f5
msgid "chef-client and chef-solo"
msgstr ""

#: ../source/release_chef_11.rst:40
# 3d5a6227dcfd4c2d9e6c1d90091e78c9
msgid "The following changes have been made to |chef client| and |chef solo|. Some of these changes may break recipes (or may change their behavior); other changes may affect workflow or scripts."
msgstr ""

#: ../source/release_chef_11.rst:43
# 1a837253708542fa983a282f4468c7ea
msgid "Shef is now chef-shell"
msgstr ""

#: ../source/release_chef_11.rst:44
# 04730d3e8ce0435b910f4b319181d52d
msgid "|shef| has been renamed to |chef shell| (CHEF-2925). Recipe mode and attributes mode must now be entered using the ``recipe_mode`` and ``attributes_mode`` commands."
msgstr ""

#: ../source/release_chef_11.rst:47
# f088d79d4cdf4eb6b42e8cddc2013cbf
msgid "Node attribute changes"
msgstr ""

#: ../source/release_chef_11.rst:48
# 790d8ada507d4594872cec70e1e26365
msgid "In order to fix bugs and surprising behaviors with attributes, the implementation of ``Chef::Node::Attribute`` has been completely overhauled. The APIs for reading and writing values are now completely separate."
msgstr ""

#: ../source/release_chef_11.rst:51
# 4a7bfc28409749b6b3d1af57c192ca99
msgid "Implicit writes removed"
msgstr ""

#: ../source/release_chef_11.rst:52
# b437359982fe4e1fa853ff7363d7b3ae
msgid "Node attributes may no longer be set without specifying which precedence level to set. The following example is no longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:59
# 5fe19b43fb484374a16df0a070561223
msgid "When a precedence level was not specified, ``normal`` was assumed. For |chef 11|, the following example replaces the previous example:"
msgstr ""

#: ../source/release_chef_11.rst:66
# 61fd94d09e3d4d3fb6f9209518fc5d26
msgid "Even with this change, please take a moment to consider if a cookbook should be using default-level attributes instead. In general, normal-level attributes are only required when a value needs to persist across |chef client| runs (such as auto-generated passwords) or when a node is a \"special snowflake\"."
msgstr ""

#: ../source/release_chef_11.rst:69
# 145c736098f74a73bbaec0a1ed85fac1
msgid "attribute=\"value\" required"
msgstr ""

#: ../source/release_chef_11.rst:70
# 099d36e939eb43349f4145eee6a6c68b
msgid "The following example is longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:76
# 620b06b5641646499dd6cd001538b9bf
msgid "The following example replaces the previous example:"
msgstr ""

#: ../source/release_chef_11.rst:84
# 64890c27d2a84611ac4880af3a7c12a7
msgid "Role and Environment Attribute Changes"
msgstr ""

#: ../source/release_chef_11.rst:85
# 378cbb781d9343b982ae30e87a8eac8f
msgid "Role and environment default and override attributes are visible in attributes files. In |chef 11|, several changes have been made to attributes to enable you to include more complex logic in your attributes files. Though you should still try to keep your attributes files simple, you can effectively generate attributes composed of other attributes or based on a node's platform in attribute files now."
msgstr ""

#: ../source/release_chef_11.rst:88
# 04431ae6804440868894f2507e2c1734
msgid "Computing attributes from attributes"
msgstr ""

#: ../source/release_chef_11.rst:89
# 756198b88b0043a3ba77a465e40425bf
msgid "In |chef 10x| and lower, code like the following will not work if you intend to modify the \"source\" attributes from roles or environments:"
msgstr ""

#: ../source/release_chef_11.rst:102
# 767eb3ef5695493f8449280ba654537c
msgid "In |chef 10x| and lower, default and override attributes are stored as a single nested hash, and role and environment attributes are applied to the node after attribute files are evaluated so that role and environment attributes can overwrite attributes from attributes files. In |chef 11|, the above code will work as you expect, because role and environment attributes are stored separately from attributes from cookbooks, and are applied when the run_list is expanded (before any cookbook code is run)."
msgstr ""

#: ../source/release_chef_11.rst:105
# 04a67dcb6dcf47fdafe393775101aaa9
msgid "Setting attributes by platform"
msgstr ""

#: ../source/release_chef_11.rst:106
# d6797901278b46a1a6c78f40035432d6
msgid "In |chef 11|, ``Chef::Node`` now includes the platform introspection mixin, so you can use the following methods in attributes files:"
msgstr ""

#: ../source/release_chef_11.rst:116
# f3c19ea70dd74329b1e3164e6e465285
msgid "Behavioral changes"
msgstr ""

#: ../source/release_chef_11.rst:117
# 6d9615855a8a4a0da0b39a0ae1349496
msgid "In |chef 10x|, you can set a default or override attribute in a recipe, and it will overwrite the default/override value from any role/environment/attribute file. In |chef 11|, node.default always sets a cookbook-level default, and node.override always sets a cookbook-level override. Since cookbook-level attributes have lower precedence than role or environment attributes, a default or override attribute set in a recipe will not overwrite a value set by a role or environment."
msgstr ""

#: ../source/release_chef_11.rst:119
# 91c290fec57b4ba4a925fa9a4a764b48
msgid "For example, given code like this:"
msgstr ""

#: ../source/release_chef_11.rst:129
# b809b7d0b4b247cf9f2ec8c274fb70c3
msgid "In |chef 10x|, the value of node\"app_name\" will be \"from-recipe\" and in |chef 11|, the value will be \"from-role\" (assuming there are no competing normal or override attributes)."
msgstr ""

#: ../source/release_chef_11.rst:131
# 646acce214b04b548d11699ee80b5026
msgid "Likewise, if you take any action based on the value of attributes when evaluating attributes files, be aware that attributes from roles and environments will now be used to compute the attribute value."
msgstr ""

#: ../source/release_chef_11.rst:134
# 9451ba40b8364529a5ccc8e18372d39c
msgid "node.run_state Replaced"
msgstr ""

#: ../source/release_chef_11.rst:135
# f6b24b3463e8480e82e0e22aba873a2d
msgid "In |chef 10x| and lower, you could see which recipes had been evaluated by chef by looking at ``node.run_state[:seen_recipes]``. ``Chef::Node`` was not the correct place to track this information, and the previous implementation resulted in bugs where a recipe like ``nginx::default`` could be loaded after ``nginx``, even though they are the same recipe."
msgstr ""

#: ../source/release_chef_11.rst:137
# 325cd2692667458ea09f115e16653765
msgid "In the new implementation, this is tracked by ``Chef::RunContext``. The following example is no longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:145
# 9d5e83e62446487eaba9a06af4fc8b64
msgid "Use the following approach instead:"
msgstr ""

#: ../source/release_chef_11.rst:155
# 71cdd863c7b3461fb16ced01257735ba
msgid "Subtractive Merge Removed"
msgstr ""

#: ../source/release_chef_11.rst:156
# b2952e9ba2d345e683c6e74f868f3e9f
msgid "In |chef 10x| and previous, you could use special \"knockout prefix\" attribute values beginning with ``!merge`` to make the deep merge algorithm remove values from arrays. This feature was very seldom used, confusing, and greatly increased the time and space complexity of the deep merge implementation. This feature is removed in |chef 11|, and attributes containing the \"knockout prefix\" will trigger an error upon merge."
msgstr ""

#: ../source/release_chef_11.rst:158
# 670b8104cbfb469dab916fe188b7112b
msgid "If you need to selectively remove elements from arrays in your attributes, you should place this logic in a cookbook. Combined with other fixes to attributes in |chef 11|, you can put this logic in an attributes file, which is the most natural place for it."
msgstr ""

#: ../source/release_chef_11.rst:161
# e0da945fe9ab4207b730988c95f8c12b
msgid "Chef::REST#run_request Removed"
msgstr ""

#: ../source/release_chef_11.rst:162
# 1f1de1aa90244b0395fa3b5739457eef
msgid "The ``Chef::REST#run_request`` method is removed. Use ``api_request`` or ``streaming_request`` for low-level access, or (better) use the higher-level ``GET``, ``PUT``, ``POST``, ``DELETE``, and ``HEAD`` methods."
msgstr ""

#: ../source/release_chef_11.rst:166
# d56ea1fc65154449a511026e4c2bde53
msgid "Delayed Notifications Changes"
msgstr ""

#: ../source/release_chef_11.rst:167
# b513d922add849b2871fe8f76da390c9
msgid "In |chef 10x| and lower, delayed notifications are lost when Chef does not converge successfully."
msgstr ""

#: ../source/release_chef_11.rst:169
# 31416d8e002b44ecb02c6299d3b6098a
msgid "This fixes addresses the following scenario:"
msgstr ""

#: ../source/release_chef_11.rst:171
# cbb4c99d657e485088f2c291b247119f
msgid "|chef| reconfigures a service"
msgstr ""

#: ../source/release_chef_11.rst:172
# a8f9c68a7746443291d271ab30a5dc40
msgid "A delayed notification to restart the service is queued"
msgstr ""

#: ../source/release_chef_11.rst:173
# 243063c4d04e451887d372ec3ddcee92
msgid "An unrelated resource fails and halts the |chef| run"
msgstr ""

#: ../source/release_chef_11.rst:174
# 3686fdd2085f4f0c99ad1a0206421a78
msgid "Subsequent |chef| runs don't restart the service because it hasn't been reconfigured during that run."
msgstr ""

#: ../source/release_chef_11.rst:176
# 6dac87e674a8458ebd906689d24a23c4
msgid "In |chef 11|, delayed notifications will run after |chef| fails, and will be executed even if other delayed notifications fail. Conversely, if |chef| fails to configure a service and a restart action has been queued for that service, the service will be restarted and will probably be broken."
msgstr ""

#: ../source/release_chef_11.rst:179
# 45bb9750ae9d4baf9ab9225a21a4838d
msgid "Single Notifies for Notification"
msgstr ""

#: ../source/release_chef_11.rst:180
# aecb4185f81f4aad9eef26816e4838d9
msgid "Previously you could specify multiple notifications in a single call to notifies with code like this:"
msgstr ""

#: ../source/release_chef_11.rst:188
# e486fedda3df499ab58c04c75b6b2b46
msgid "Instead of the above, just put multiple calls to notifies in your resource declaration:"
msgstr ""

#: ../source/release_chef_11.rst:199
# b5358ac50a37432fb5554403053a9ec7
msgid "Changes for Data Bag Encryption"
msgstr ""

#: ../source/release_chef_11.rst:200
# 1bf7504f1ef14a879b22bf4a629c8ceb
msgid "In |chef 10x|, objects in encrypted data bag items are serialized to |yaml| before being encrypted. Unfortunately, discrepancies between |yaml| engines in different versions of |ruby| (in particular, 1.8.7 and 1.9.3) may cause silent corruption of serialized data when decrypting the data bag (the version stored on the |chef server| is untouched and can be correctly deserialized with the same |ruby| version that was used to create it, however)."
msgstr ""

#: ../source/release_chef_11.rst:202
# 027d49a81f244c8e820a9ca893ea2fa0
msgid "Because the corruption is silent, there is no way for |chef| to detect it; furthermore, all workaround possibilities we've investigated have severe limitations. Additionally, we wanted to modify the encrypted data bag item format to support using a random initialization vector each time a value is encrypted, which provides protection against some forms of cryptanalysis. In order to solve these issues, we've implemented a new encrypted data bag item format:"
msgstr ""

#: ../source/release_chef_11.rst:204
# 368778dba0ed4cff9f2e57f1686c7d09
msgid "The user interface to encrypted data bags is unchanged. This change only affects the format of the encrypted values."
msgstr ""

#: ../source/release_chef_11.rst:205
# 639652bae1b24350bbd7bfeef02b6147
msgid "|chef 11| clients will be able to read encrypted data bags created with either |chef 10x| or |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:206
# 163261649fc74908a782e64b98681502
msgid "|chef 10x| clients 10.18.0 and above will be able to read encrypted data bags created with either |chef 10x| or |chef 11|"
msgstr ""

#: ../source/release_chef_11.rst:207
# 69566d9d6c5746389c7bee8fc7b5c548
msgid "|chef 10x| clients version 10.16.x and lower cannot read encrypted data bags created with |chef 11|"
msgstr ""

#: ../source/release_chef_11.rst:208
# e8116d3454ca4bcdb6390a2f09c79bf0
msgid "|chef 11| knife commands will only create data bags in the new format."
msgstr ""

#: ../source/release_chef_11.rst:209
# 9d20dcb0358c4cba8a1a82407f5f868d
msgid "|chef 10x| knife commands will only create data bags in the old format."
msgstr ""

#: ../source/release_chef_11.rst:212
# 15d0464764e941efb58358e1f0d0ffa6
msgid "Diagnosing Compatibility Errors"
msgstr ""

#: ../source/release_chef_11.rst:213
# 9a585caf0c7b485aacb100ebb34d0627
msgid "When trying to decrypt a |chef 11| format data bag item with |chef| 10.16.x or lower, you will see an error like this:"
msgstr ""

#: ../source/release_chef_11.rst:223
# 72ebf64b11ba46ecafa2a6616f6fb5ea
msgid "The above error output is from |knife|; |chef client| will fail with a similar error."
msgstr ""

#: ../source/release_chef_11.rst:226
# ec5c31b729ee431f9233f877bbd98744
msgid "How to Upgrade"
msgstr ""

#: ../source/release_chef_11.rst:227
# c262306979f046e89731f5b82bc135bb
msgid "Before upgrading chef on any workstation you use to create/edit encrypted data bag items, upgrade |chef client| on all machines that use encrypted data bags to version 10.18.0 or above. Once your |chef client| fleet is upgraded, you can start using |chef 11| on your workstation (the box you create/update encrypted data bag items on)."
msgstr ""

#: ../source/release_chef_11.rst:229
# 566bb807cc064e0982f84166841ba517
msgid "In order to get the benefits of improved security with the new data bag item format, it's recommended that you re-upload all of your encrypted data bag items once you've migrated to compatible versions of |chef client|. To migrate your data bag items, simply edit them with ``knife data bag edit`` or upload them with ``knife data bag from file``, whichever you normally do. |chef 11| will automatically upload your data bag items in the new format."
msgstr ""

#: ../source/release_chef_11.rst:232
# fc881cb43109462298c9f8106dcb31f3
msgid "Chef Server Versions"
msgstr ""

#: ../source/release_chef_11.rst:233
# 5da70e17519e4f4ca6117808a15e19da
msgid "Because encrypted data bag items are implemented as a client-side layer on top of regular data bag items, the format change is transparent to the server. You can begin using |chef 11| data bags even if your server is version |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:237
# f040c58189e943c09ec5990c66b4af3d
msgid "Non-recipe File Evaluation Includes Dependencies"
msgstr ""

#: ../source/release_chef_11.rst:238
# 2eb48a9477d241dcb3f47dc80dd9fde2
msgid "In |chef 10x| and lower, library, attribute, lightweight resource, and resource definition files are loaded in undefined order (based on the order given by the |ruby| Hash implementation, which differs based on version and vendor patching). In |chef 11|, these files are loaded according to the following logic:"
msgstr ""

#: ../source/release_chef_11.rst:240
# dfd2ee6b096146aa8b0b2fa9f3be3be5
msgid "The expanded run_list is converted into a list of cookbooks in the same order"
msgstr ""

#: ../source/release_chef_11.rst:241
# d71f63c05170465e9ff82baf74e4687c
msgid "Each cookbook's dependencies are inserted into the cookbook list before the cookbook that depends on them."
msgstr ""

#: ../source/release_chef_11.rst:242
# 03d0cfdacf9440bbb567ab24c2a65e37
msgid "Duplicates are removed"
msgstr ""

#: ../source/release_chef_11.rst:244
# 7b52b225e7864b7d8790851501e94c24
msgid "For |chef client| users, there should be no negative impacts from this change, as the previous order was essentially random. For |chef solo| users, the new loading logic means that files belonging to cookbooks which exist in the ``cookbook_path`` but are not in the expanded ``run_list`` or dependencies of the cookbooks in the expanded ``run_list`` will no longer be loaded (in |chef 10x|, all non-recipe files from all cookbooks in the cookbook path were loaded)."
msgstr ""

#: ../source/release_chef_11.rst:248
# 39fda57488004a86abab03fafcf869fa
msgid "Knife Configuration Parameter Changes"
msgstr ""

#: ../source/release_chef_11.rst:249
# 5adc1d6751bb4c109e4094e22d2378fc
msgid "In |chef 10x|, it is difficult and error-prone to ensure that configuration parameters are applied in the right order. Configuration should be applied in the following order:"
msgstr ""

#: ../source/release_chef_11.rst:251
# 525eb3c47f94430fa68a8c4728627912
msgid "Default values"
msgstr ""

#: ../source/release_chef_11.rst:252
# 33cd2690316b4be398611f5da970e914
msgid "Values set in |knife rb|"
msgstr ""

#: ../source/release_chef_11.rst:253
# 6d49680b68f3443a9e81a22d9facb9d3
msgid "Values passed by command line option"
msgstr ""

#: ../source/release_chef_11.rst:255
# 55181de6b3884f96aa53bc70cd44840a
msgid "Because of the way the the ``mixlib-cli`` library is implemented, it is difficult to determine which values are defaults and which values are user-supplied command line options. |chef 11| takes advantage of a new mode for ``mixlib-cli`` that keeps default values separate from user-supplied values. In the configuration process, |knife| automatically applies config:"
msgstr ""

#: ../source/release_chef_11.rst:257
# ebd1ff7a3c65490a97779a8ff97e427a
msgid "Default values set in the mixlib-cli DSL"
msgstr ""

#: ../source/release_chef_11.rst:258
# f1abf5b76c934b01bd8f30d4e21e9659
msgid "Configuration settings under Chef::Config[:knife]"
msgstr ""

#: ../source/release_chef_11.rst:259
# 1dc068a8c8294691ba3571a306c7a919
msgid "User supplied values parsed by mixlib-cli"
msgstr ""

#: ../source/release_chef_11.rst:261
# f8dcb801a3a2453ba522874e0518bf9a
msgid "Depending on how |knife| plugin authors have worked around the |chef 10x| behavior, it's possible that this change will lead to incorrect values being used for configurable parameters. The |opscode| cloud plugins have been reviewed and should work correctly on both |chef 10x| and |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:263
# fabdcb997182476f917d04562bf675b7
msgid "When writing |knife| plugins for |chef 11|, plugin authors are encouraged to define default settings using the ``mixlib-config`` DSL, like this:"
msgstr ""

#: ../source/release_chef_11.rst:273
# ed46e0168eb144018ebe85f35b02020c
msgid "and access configurable values via the config hash with symbols, like this:"
msgstr ""

#: ../source/release_chef_11.rst:280
# 5c33d8d860784b0eb3d860a145b323af
msgid "If compatibility with |chef 10x| is required, accessing configuration via a helper function like this will work correctly, but only if default values are NOT set with the ``mixlib-cli`` DSL."
msgstr ""

#: ../source/release_chef_11.rst:289
# 423514e61dfe444cbf48bcf6b1dadca4
msgid "Default values must be managed manually until support for |chef 10x| is removed, for example, like this:"
msgstr ""

#: ../source/release_chef_11.rst:295
# 4d287ec338fb437eaa949be3abd132aa
msgid "Further information is available in the ticket: CHEF-3497 - Allow |knife rb| to implicitly provide all |knife| related options - FIX COMMITTED"
msgstr ""

#: ../source/release_chef_11.rst:299
# bf736c8fdc80452a80dcfccf6d1ef3bb
msgid "Chef Server"
msgstr ""

#: ../source/release_chef_11.rst:300
# e3c9c17b44ad49f4a0b4ccb00e867019
msgid "The following items are new for |chef 11| server and/or are changes from |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:303
# d3d6bb74492d40cda26f0b54751aa193
msgid "The /clients endpoint returns JSON with a JSON class for edit (PUT) operations"
msgstr ""

#: ../source/release_chef_11.rst:304
# 412c4fee25194064bb2de8c0bccce6fc
msgid "In |chef| 0.8-10.x, the server's response to a ``PUT`` to ``/clients/:client_name`` does not include the ``json_class`` key, though other calls, such as ``GET``, do include this key. The client-side |json| implementation in |chef| uses the presence of the ``json_class`` key as an indication that it should \"inflate\" the response into an instance of that class (otherwise, a plain hash object is returned). As a result, code that modifies a client (such as requesting a new key from the server) and parses the response with the |ruby| 'json' library must be modified to accept a ``Chef::ApiClient`` or a hash."
msgstr ""

#: ../source/release_chef_11.rst:306
# 9f90dee9a00b4f37a9f72a39877e487f
msgid "This change breaks the ``knife client reregister`` command in |chef| 10.16.2 and earlier. Forward compatibility is introduced in |chef| 10.18.0."
msgstr ""

#: ../source/release_chef_11.rst:309
# 1f4dd1a154b4454eacd99e1a76dff351
msgid "The admin and validator flags are exclusive"
msgstr ""

#: ../source/release_chef_11.rst:310
# cffe91ccbd74489c8cbcfe81908da756
msgid "In |chef 11|, clients may not be both admins and validators at the same time. In the current alpha release, you can set the admin flag on the validator but it has no effect. In a future release, you may receive an error when attempting to set the validator flag on a client, or when attempting to create a client with both flags set."
msgstr ""

#: ../source/release_chef_11.rst:312
# 962d2c0c337649c2bdc91e9419c04528
msgid "Exact behavior may change before release or in a minor version release after |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:315
# 5981935aa497404d9b869907af61dab9
msgid "Strict checking of top-level JSON keys"
msgstr ""

#: ../source/release_chef_11.rst:316
# 0b4d112ec30542ecb6c43f427303a879
msgid "All API endpoints that process requests to create or update a |chef| object validate that the |json| sent by the client does not contain unknown top-level keys. A 400 error response will be returned if unknown top-level keys are encountered."
msgstr ""

#: ../source/release_chef_11.rst:319
# fafc0172f6e2401eb9cd1e831dd708ac
msgid "Creating an empty sandbox is now a 400 error"
msgstr ""

#: ../source/release_chef_11.rst:320
# 1a3fb91cb21f4aa3a079bcd19cf945d9
msgid "Sandboxes are used as part of the protocol for uploading cookbook content. An empty sandbox cannot be used for anything. Creating such a sandbox may indicate a logic error in client code and is (mildly) wasteful of server resources."
msgstr ""

#: ../source/release_chef_11.rst:323
# 4a4a323998bf4f4e8f995552b1d20886
msgid "Error messages included in server error responses have changed"
msgstr ""

#: ../source/release_chef_11.rst:324
# f4f5495fddad47f78d07b4644784f481
msgid "As part of the move to |erchef|, error messages have been made more consistent. Code depending on specific error message text may be broken by these changes."
msgstr ""

#: ../source/release_chef_11.rst:327
# cb90a44b2d564ab4b274653b375bd1cf
msgid "Some error codes have changes"
msgstr ""

#: ../source/release_chef_11.rst:328
# f83b7d073c02457fa3b5cf0b09bf2821
msgid "In a number of cases, |erchef| returns a more specific error status than the |chef 10x| server. For example, returning 400 instead of 500 for some bad request data situations."
msgstr ""

#: ../source/release_chef_11.rst:330
# 92d92fb172d34032bf4de12e21333afb
msgid "The ``chef-server`` cookbook has been completely rewritten to support an omnibus |chef server| install"
msgstr ""

#: ../source/release_chef_11.rst:333
# 4b82d55422194785bc5f5f4c4ab64b29
msgid "knife reindex is not supported in Chef 11 Server"
msgstr ""

#: ../source/release_chef_11.rst:334
# bd5b732c18f3469d99716f8c0bb78af2
msgid "You can trigger a reindex of |chef| object data using ``chef-server-ctl reindex`` while logged into the |chef server| box. The |knife| command is still present in the |chef 11| |chef client| for use with a |chef 10x| server."
msgstr ""

#: ../source/release_chef_11.rst:337
# bf149f95126a4cef8b5a38b41b5db94d
msgid "OpenId support has been removed"
msgstr ""

#: ../source/release_chef_11.rst:338
# 664fa3312f794d698a5332ca7a00bb89
msgid "Support for |open id| is no longer in |chef|."
msgstr ""

#: ../source/release_chef_11.rst:342
# 96df2708f2b6479f924626e08a528f88
msgid "The Ruby server code has been removed"
msgstr ""

#: ../source/release_chef_11.rst:343
# ef92b9c91ec5464ca48680682b9c8a26
msgid "As part of the move to Erchef, the Ruby API server code along with classes not needed by the client-side of Chef have been removed from the main chef repository."
msgstr ""

#: ../source/release_chef_11.rst:346
# 7d7e97235ed6471a850b981c4be661ec
msgid "knife cookbook delete --purge is ignored by Chef 11 Server"
msgstr ""

#: ../source/release_chef_11.rst:347
# b0453c853ec54906ac99cc2684003c29
msgid "In |chef 11|, the server keeps track of which cookbooks use a given piece of cookbook content (via checksum). When a cookbook version is deleted, associated content will be deleted if not referenced by another cookbook version object. Therefore, there is no need for a purge operation when using the |chef 11| server."
msgstr ""

#: ../source/release_chef_11.rst:355
# 84f08740b1dd418097ea1d83f3e57c5b
msgid "Other Notable Changes"
msgstr ""

#: ../source/release_chef_11.rst:356
# 5d1c8b3bfe2740d6bef62e4b259948a5
msgid "Changes that are not expected to be breaking, but are notable improvements."
msgstr ""

#: ../source/release_chef_11.rst:359
# a745c94d63a6401399232f7989766e14
msgid "Output Formatters are the Default Output when Running in the Console"
msgstr ""

#: ../source/release_chef_11.rst:360
# 34b4bfbb9d9146dab9a08c0aed1f02cf
msgid "In |chef 11|, when output is to a TTY, |chef| will automatically use output formatters to display information about what it's doing. To accommodate this, the default log level is now ``auto``, which evaluates to ``warn`` when running with a TTY (so log messages will not obscure the output formatter output), and ``info`` when running without a TTY (so you get important information about changes being made to the system when output formatters are not active)."
msgstr ""

#: ../source/release_chef_11.rst:362
# 0fbab73f6e52456796c61e9b13915f99
msgid "If you prefer one type of output over the other, you can force |chef| to use output formatters or logger output with ``--force-formatter`` or ``--force-logger``."
msgstr ""

#: ../source/release_chef_11.rst:364
# 87126697dbfd4714852556de55f9f522
msgid "In previous versions of |chef|, bootstrapping templates would generally configure the log level to ``info`` in the |client rb| file. You may wish to change this to ``auto`` or remove the setting from your config file entirely."
msgstr ""

#: ../source/release_chef_11.rst:367
# 0230e50bef8e4ac5b3df9e2bfcdff3ef
msgid "Inline Compile Mode for Lightweight Resources"
msgstr ""

#: ../source/release_chef_11.rst:368
# 91a80ea49a9c433a99ff9389d4d63950
msgid "In |chef 11|, there is an optional \"inline compilation\" mode for lightweight resources, which is intended to make notifications work correctly for lightweight resources."
msgstr ""

#: ../source/release_chef_11.rst:371
# cf0980d0ebb24919a99afecd4c571f0a
msgid "Without Inline Compilation"
msgstr ""

#: ../source/release_chef_11.rst:372
# fcea84d07d2c4c329dc05223087cc104
msgid "When not using inline compilation (it is disabled by default), any resources created in a lightweight provider's action blocks are inserted into the top level resource collection after the lightweight resource it belongs to. For example, given a resource collection like this:"
msgstr ""

#: ../source/release_chef_11.rst:374
# 6133414e8c99499ebe8e17fe84773f8e
msgid "top_level_resource_one"
msgstr ""

#: ../source/release_chef_11.rst:375
# 4ed4fac9025d487d91694c4e3157949d
msgid "lwrp_resource"
msgstr ""

#: ../source/release_chef_11.rst:376
#: ../source/release_chef_11.rst:384
# a31b217477f442e0b0be16523dabcd70
# 03bed1c0103a4cd59092ec34b48d8c15
msgid "top_level_resource_two"
msgstr ""

#: ../source/release_chef_11.rst:378
# 7a47f9e912f74a8b97cf12b93cbadf84
msgid "When ``lwrp_resource`` is executed, the resource collection will then be modified like this:"
msgstr ""

#: ../source/release_chef_11.rst:380
# 83e36da63e174a93ba4ff57905338481
msgid "top_level_resource_one (already processed)"
msgstr ""

#: ../source/release_chef_11.rst:381
# cd71e4e253f44c2ca6624c9ed889fd90
msgid "lwrp_resource (already processed)"
msgstr ""

#: ../source/release_chef_11.rst:382
# 96cea197a8ff457e86171ad123904a30
msgid "embedded_resource_one (created by lwrp)"
msgstr ""

#: ../source/release_chef_11.rst:383
# 45167070581147909231f99e98bed083
msgid "embedded_resource_two (created by lwrp)"
msgstr ""

#: ../source/release_chef_11.rst:386
# d46df4f1d246477f8e67a5cc98d1e9a7
msgid "This means that the ``lwrp_resource`` cannot correctly set its updated status based on the embedded resources, because it has finished executing before its embedded resources are processed."
msgstr ""

#: ../source/release_chef_11.rst:389
# 5c004810b64b4087b07f291b2312e6d0
msgid "With Inline Compilation"
msgstr ""

#: ../source/release_chef_11.rst:390
# fc5302f10d6046eb84a1198c563326bc
msgid "Inline compilation is enabled by calling ``use_inline_resources`` at the top of your lightweight provider file. When this is enabled, the code in your action block is executed in a self contained chef client run, with its own compile and converge phase. If any embedded resources have been updated, the top-level lightweight resource is marked as updated, and any notifications set on it will be triggered normally. Within the embedded chef run, resources in the top-level resource collection are invisible to the embedded resources, so embedded resources are not able to notify resources in the top-level resource collection."
msgstr ""

#: ../source/release_chef_11.rst:393
# 57043fdecdee4a6d8b3c558f1afa7b4e
msgid "LWRP Class Hierarchy Changes"
msgstr ""

#: ../source/release_chef_11.rst:394
# 1b415d7aafec4f4a8dfa46d256da72e1
msgid "In |chef 11|, lightweight resources resources now inherit from a ``LWRPBase`` resource instead of directly inheriting from ``Chef::Resource``. Likewise, lightweight resources providers inherit from a ``LWRPBase`` provider instead of ``Chef::Provider``. This should not impact existing code for lightweight resources."
msgstr ""

#: ../source/release_chef_11.rst:397
# 8336f17f40c24a0d82f52e2d11043601
msgid "Partial Support in Templates"
msgstr ""

#: ../source/release_chef_11.rst:398
# 94e2cc9113cd422a8c4887c2fbb77e16
msgid "Partials can be used in templates. See here:"
msgstr ""

#: ../source/release_chef_11.rst:400
# 33d2f1c3f158419a9f500a7b991f4e7f
msgid "CHEF-3249 - |chef| support for template partials - FIX COMMITTED https://github.com/opscode/chef/pull/498"
msgstr ""

#: ../source/release_chef_11.rst:404
# a07b84fdd45b4a81bc52a475981f689a
msgid "chef-apply"
msgstr ""

#: ../source/release_chef_11.rst:405
# ad7b53f355dc4e259511aa7027ae965f
msgid "There is now a ``chef-apply RECIPE`` command that will run a single |chef| recipe with no ``JSON/run_list/config`` file required."
msgstr ""

#: ../source/release_chef_11.rst:408
# f4e563ba649549289739f4a02df9fa20
msgid "Miscellaneous"
msgstr ""

#: ../source/release_chef_11.rst:410
# 02fea9627056424db811d7fdec3eb82e
msgid "Locking is used to prevent simultaneous runs on |unix|-like systems"
msgstr ""

#: ../source/release_chef_11.rst:411
# 4d2596cd5e064c90b05e31f286ee27e7
msgid "``knife search`` assumes node search when the object type is omitted."
msgstr ""

#: ../source/release_chef_11.rst:412
# 5561362b130e43798a819406bc3284f8
msgid "``knife search`` will search over roles, tags, |fully qualified domain name|, and IP addresses when the given query is not in |apache solr| format (does not contain a colon : character)."
msgstr ""

#: ../source/release_chef_11.rst:413
# ea8a897a478144d0bc399b4b6516d8f2
msgid "|knife| essentials (``knife upload``, ``knife download``, ``knife diff``, and so on) have been merged to core |chef|"
msgstr ""


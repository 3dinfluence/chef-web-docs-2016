# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-31 18:22\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/release_chef_11.rst:34
# 1bc3390b3f044e279c9df218ca7b5ccd
msgid "What's New in Chef 11"
msgstr ""

#: ../source/release_chef_11.rst:36
# b5e39385b00d4fa092cb74303ee2252c
msgid "The following items are new for |chef 11| and/or are changes from |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:39
# 19c2076913634de693a1683710d0fb62
msgid "chef-client and chef-solo"
msgstr ""

#: ../source/release_chef_11.rst:40
# fb9286392d354d9c8440bd3d470ae1bf
msgid "The following changes have been made to |chef client| and |chef solo|. Some of these changes may break recipes (or may change their behavior); other changes may affect workflow or scripts."
msgstr ""

#: ../source/release_chef_11.rst:43
# f02ed9e3f7484474b647c51f4859deea
msgid "Shef is now chef-shell"
msgstr ""

#: ../source/release_chef_11.rst:44
# 7d1f939b3606446688975383e1dc7e9d
msgid "|shef| has been renamed to |chef shell| (CHEF-2925). Recipe mode and attributes mode must now be entered using the ``recipe_mode`` and ``attributes_mode`` commands."
msgstr ""

#: ../source/release_chef_11.rst:47
# a66cd7fcff82406a8e7df16571be88f0
msgid "Node attribute changes"
msgstr ""

#: ../source/release_chef_11.rst:48
# c9177b697a474fea9cf6cdfe25fca4e5
msgid "In order to fix bugs and surprising behaviors with attributes, the implementation of ``Chef::Node::Attribute`` has been completely overhauled. The APIs for reading and writing values are now completely separate."
msgstr ""

#: ../source/release_chef_11.rst:51
# 5c83d48c30d54e66a40016c841ff0d47
msgid "Implicit writes removed"
msgstr ""

#: ../source/release_chef_11.rst:52
# e0a729f68a1f4a3cae1d895da2039b83
msgid "Node attributes may no longer be set without specifying which precedence level to set. The following example is no longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:59
# 7ae57e62979142a0a73a4da0583495ca
msgid "When a precedence level was not specified, ``normal`` was assumed. For |chef 11|, the following example replaces the previous example:"
msgstr ""

#: ../source/release_chef_11.rst:66
# 126ae68d3782411dbd98314c36d8eb28
msgid "Even with this change, please take a moment to consider if a cookbook should be using default-level attributes instead. In general, normal-level attributes are only required when a value needs to persist across |chef client| runs (such as auto-generated passwords) or when a node is a \"special snowflake\"."
msgstr ""

#: ../source/release_chef_11.rst:69
# e2aabfb3222d4e8f93f375789307c0fa
msgid "attribute=\"value\" required"
msgstr ""

#: ../source/release_chef_11.rst:70
# 64afd6a00f4b493083bcc50bf9f44b61
msgid "The following example is longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:76
# 67b6dc58d17f42d9ab3f1d83139bde4f
msgid "The following example replaces the previous example:"
msgstr ""

#: ../source/release_chef_11.rst:84
# 732c70f55be34b91a11fa467257a69ee
msgid "Role and Environment Attribute Changes"
msgstr ""

#: ../source/release_chef_11.rst:85
# bf000c65907c4f33bde83a711577787b
msgid "Role and environment default and override attributes are visible in attributes files. In |chef 11|, several changes have been made to attributes to enable you to include more complex logic in your attributes files. Though you should still try to keep your attributes files simple, you can effectively generate attributes composed of other attributes or based on a node's platform in attribute files now."
msgstr ""

#: ../source/release_chef_11.rst:88
# e48a52019bd0412881c334ee219145bd
msgid "Computing attributes from attributes"
msgstr ""

#: ../source/release_chef_11.rst:89
# 7e61acb9333346a3a25e6faab066c3db
msgid "In |chef 10x| and lower, code like the following will not work if you intend to modify the \"source\" attributes from roles or environments:"
msgstr ""

#: ../source/release_chef_11.rst:102
# 1273ff02ec864a5191831703127191f6
msgid "In |chef 10x| and lower, default and override attributes are stored as a single nested hash, and role and environment attributes are applied to the node after attribute files are evaluated so that role and environment attributes can overwrite attributes from attributes files. In |chef 11|, the above code will work as you expect, because role and environment attributes are stored separately from attributes from cookbooks, and are applied when the run_list is expanded (before any cookbook code is run)."
msgstr ""

#: ../source/release_chef_11.rst:105
# 142170d811b84fe89fb2e300dacef0c3
msgid "Setting attributes by platform"
msgstr ""

#: ../source/release_chef_11.rst:106
# 05f3d6fc5e1d4bcc82cf9c8351b59c28
msgid "In |chef 11|, ``Chef::Node`` now includes the platform introspection mixin, so you can use the following methods in attributes files:"
msgstr ""

#: ../source/release_chef_11.rst:116
# a91d9953642041ada2bf013b38fec74e
msgid "Behavioral changes"
msgstr ""

#: ../source/release_chef_11.rst:117
# 660cd765827248ef8cc0bf13bd689c0f
msgid "In |chef 10x|, you can set a default or override attribute in a recipe, and it will overwrite the default/override value from any role/environment/attribute file. In |chef 11|, node.default always sets a cookbook-level default, and node.override always sets a cookbook-level override. Since cookbook-level attributes have lower precedence than role or environment attributes, a default or override attribute set in a recipe will not overwrite a value set by a role or environment."
msgstr ""

#: ../source/release_chef_11.rst:119
# c8230c534ec4488fb2b3576d4956728a
msgid "For example, given code like this:"
msgstr ""

#: ../source/release_chef_11.rst:129
# 4558ffe4e9d44e9bbb0e202446f0ef4e
msgid "In |chef 10x|, the value of node\"app_name\" will be \"from-recipe\" and in |chef 11|, the value will be \"from-role\" (assuming there are no competing normal or override attributes)."
msgstr ""

#: ../source/release_chef_11.rst:131
# 8d265b039bff427f993eca78032d2efb
msgid "Likewise, if you take any action based on the value of attributes when evaluating attributes files, be aware that attributes from roles and environments will now be used to compute the attribute value."
msgstr ""

#: ../source/release_chef_11.rst:134
# da9212c56f0c49c79f20cde9f476d8e9
msgid "node.run_state Replaced"
msgstr ""

#: ../source/release_chef_11.rst:135
# ce7acbea29f24e53bcb19465d28c7f13
msgid "In |chef 10x| and lower, you could see which recipes had been evaluated by chef by looking at ``node.run_state[:seen_recipes]``. ``Chef::Node`` was not the correct place to track this information, and the previous implementation resulted in bugs where a recipe like ``nginx::default`` could be loaded after ``nginx``, even though they are the same recipe."
msgstr ""

#: ../source/release_chef_11.rst:137
# 7f1e4f02adae4d4c9d604ddb0ec600cb
msgid "In the new implementation, this is tracked by ``Chef::RunContext``. The following example is no longer valid:"
msgstr ""

#: ../source/release_chef_11.rst:145
# f32e3092bd294b799f116f2028250516
msgid "Use the following approach instead:"
msgstr ""

#: ../source/release_chef_11.rst:155
# 2b8a7b650efc4698b4828fc212fa0785
msgid "Subtractive Merge Removed"
msgstr ""

#: ../source/release_chef_11.rst:156
# 07854e26007b4191a695d5798ee688dc
msgid "In |chef 10x| and previous, you could use special \"knockout prefix\" attribute values beginning with ``!merge`` to make the deep merge algorithm remove values from arrays. This feature was very seldom used, confusing, and greatly increased the time and space complexity of the deep merge implementation. This feature is removed in |chef 11|, and attributes containing the \"knockout prefix\" will trigger an error upon merge."
msgstr ""

#: ../source/release_chef_11.rst:158
# b65b347fe4f54e8bac9218b468193f23
msgid "If you need to selectively remove elements from arrays in your attributes, you should place this logic in a cookbook. Combined with other fixes to attributes in |chef 11|, you can put this logic in an attributes file, which is the most natural place for it."
msgstr ""

#: ../source/release_chef_11.rst:161
# 16e784f46a7e440cab258d9be8c4f583
msgid "Chef::REST#run_request Removed"
msgstr ""

#: ../source/release_chef_11.rst:162
# 11b5d57cfd7a4de682c4990f3d920f19
msgid "The ``Chef::REST#run_request`` method is removed. Use ``api_request`` or ``streaming_request`` for low-level access, or (better) use the higher-level ``GET``, ``PUT``, ``POST``, ``DELETE``, and ``HEAD`` methods."
msgstr ""

#: ../source/release_chef_11.rst:166
# d1cb8a6d66d14e17b044e34f32e3ab94
msgid "Delayed Notifications Changes"
msgstr ""

#: ../source/release_chef_11.rst:167
# ce93eef3f95f40208934642e5c6813da
msgid "In |chef 10x| and lower, delayed notifications are lost when Chef does not converge successfully."
msgstr ""

#: ../source/release_chef_11.rst:169
# c1fe731db4a34d94b5f193cb0f9b51f9
msgid "This fixes addresses the following scenario:"
msgstr ""

#: ../source/release_chef_11.rst:171
# 03b522546cb74fea9544ccc505179776
msgid "|chef| reconfigures a service"
msgstr ""

#: ../source/release_chef_11.rst:172
# 10df3232dbd94e2eba63b9425f42a40a
msgid "A delayed notification to restart the service is queued"
msgstr ""

#: ../source/release_chef_11.rst:173
# a7cba5ba6a03412da281ebdb383c87cc
msgid "An unrelated resource fails and halts the |chef| run"
msgstr ""

#: ../source/release_chef_11.rst:174
# 57acda6b869a42f382a98b9d0d57d073
msgid "Subsequent |chef| runs don't restart the service because it hasn't been reconfigured during that run."
msgstr ""

#: ../source/release_chef_11.rst:176
# c057a75bb7404bc8b94436c500fc6ab6
msgid "In |chef 11|, delayed notifications will run after |chef| fails, and will be executed even if other delayed notifications fail. Conversely, if |chef| fails to configure a service and a restart action has been queued for that service, the service will be restarted and will probably be broken."
msgstr ""

#: ../source/release_chef_11.rst:179
# 68cbd71c0d4a439a86747daffa9bad96
msgid "Single Notifies for Notification"
msgstr ""

#: ../source/release_chef_11.rst:180
# dae559777ac74e078f5e5df31a758ed2
msgid "Previously you could specify multiple notifications in a single call to notifies with code like this:"
msgstr ""

#: ../source/release_chef_11.rst:188
# ad08194679cc456db0af7ec490f37ee0
msgid "Instead of the above, just put multiple calls to notifies in your resource declaration:"
msgstr ""

#: ../source/release_chef_11.rst:199
# ba1411ec78104291b246fa737cf66b96
msgid "Changes for Data Bag Encryption"
msgstr ""

#: ../source/release_chef_11.rst:200
# eea44e0605ad40fa881cfd1cdaf1b966
msgid "In |chef 10x|, objects in encrypted data bag items are serialized to |yaml| before being encrypted. Unfortunately, discrepancies between |yaml| engines in different versions of |ruby| (in particular, 1.8.7 and 1.9.3) may cause silent corruption of serialized data when decrypting the data bag (the version stored on the |chef server| is untouched and can be correctly deserialized with the same |ruby| version that was used to create it, however)."
msgstr ""

#: ../source/release_chef_11.rst:202
# 66dda1d6fb5042e8b7ebe87b61e4e0a1
msgid "Because the corruption is silent, there is no way for |chef| to detect it; furthermore, all workaround possibilities we've investigated have severe limitations. Additionally, we wanted to modify the encrypted data bag item format to support using a random initialization vector each time a value is encrypted, which provides protection against some forms of cryptanalysis. In order to solve these issues, we've implemented a new encrypted data bag item format:"
msgstr ""

#: ../source/release_chef_11.rst:204
# 852ac890dbbd4673816aacd5949e8957
msgid "The user interface to encrypted data bags is unchanged. This change only affects the format of the encrypted values."
msgstr ""

#: ../source/release_chef_11.rst:205
# 741fad28aae44011a0963aaf75ccf216
msgid "|chef 11| clients will be able to read encrypted data bags created with either |chef 10x| or |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:206
# 5d1bd6ec96024707b1350bc130412bda
msgid "|chef 10x| clients 10.18.0 and above will be able to read encrypted data bags created with either |chef 10x| or |chef 11|"
msgstr ""

#: ../source/release_chef_11.rst:207
# 3da89593ee0242ee93042fb75c863581
msgid "|chef 10x| clients version 10.16.x and lower cannot read encrypted data bags created with |chef 11|"
msgstr ""

#: ../source/release_chef_11.rst:208
# ed7d5ceb50e14cf9b85be68979210ac7
msgid "|chef 11| knife commands will only create data bags in the new format."
msgstr ""

#: ../source/release_chef_11.rst:209
# e272715366644623a0843b7e5070917b
msgid "|chef 10x| knife commands will only create data bags in the old format."
msgstr ""

#: ../source/release_chef_11.rst:212
# ccd29fbadcf243a58401452891d90410
msgid "Diagnosing Compatibility Errors"
msgstr ""

#: ../source/release_chef_11.rst:213
# c25c51ed44df47d19452acfc63ffa980
msgid "When trying to decrypt a |chef 11| format data bag item with |chef| 10.16.x or lower, you will see an error like this:"
msgstr ""

#: ../source/release_chef_11.rst:223
# 2f67b4a24ab645a39181e5ad73726cfc
msgid "The above error output is from |knife|; |chef client| will fail with a similar error."
msgstr ""

#: ../source/release_chef_11.rst:226
# 601d9017518d4085b8a28d8dd85bc703
msgid "How to Upgrade"
msgstr ""

#: ../source/release_chef_11.rst:227
# 4fde11b15a37463698d0e249a91c64e6
msgid "Before upgrading chef on any workstation you use to create/edit encrypted data bag items, upgrade |chef client| on all machines that use encrypted data bags to version 10.18.0 or above. Once your |chef client| fleet is upgraded, you can start using |chef 11| on your workstation (the box you create/update encrypted data bag items on)."
msgstr ""

#: ../source/release_chef_11.rst:229
# 919062da4bc64c97b76afffa82bcbcd7
msgid "In order to get the benefits of improved security with the new data bag item format, it's recommended that you re-upload all of your encrypted data bag items once you've migrated to compatible versions of |chef client|. To migrate your data bag items, simply edit them with ``knife data bag edit`` or upload them with ``knife data bag from file``, whichever you normally do. |chef 11| will automatically upload your data bag items in the new format."
msgstr ""

#: ../source/release_chef_11.rst:232
# d851c822652049f8ab5a93b3899ed4dd
msgid "Chef Server Versions"
msgstr ""

#: ../source/release_chef_11.rst:233
# b196bee2aa1644a886178f6a934237a7
msgid "Because encrypted data bag items are implemented as a client-side layer on top of regular data bag items, the format change is transparent to the server. You can begin using |chef 11| data bags even if your server is version |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:237
# 8c8e94d2222b4870b554c4765c4c9990
msgid "Non-recipe File Evaluation Includes Dependencies"
msgstr ""

#: ../source/release_chef_11.rst:238
# daeedfaf09e347399fef7daa7828902f
msgid "In |chef 10x| and lower, library, attribute, lightweight resource, and resource definition files are loaded in undefined order (based on the order given by the |ruby| Hash implementation, which differs based on version and vendor patching). In |chef 11|, these files are loaded according to the following logic:"
msgstr ""

#: ../source/release_chef_11.rst:240
# 07b4c650e40a4a988307a565a88caabe
msgid "The expanded run_list is converted into a list of cookbooks in the same order"
msgstr ""

#: ../source/release_chef_11.rst:241
# dc32e58697ea4f559c6c3963ab596f46
msgid "Each cookbook's dependencies are inserted into the cookbook list before the cookbook that depends on them."
msgstr ""

#: ../source/release_chef_11.rst:242
# f70f3e642e3f4f608c4201115f5b4245
msgid "Duplicates are removed"
msgstr ""

#: ../source/release_chef_11.rst:244
# b2aa1c7e83ec429589851dec04909e51
msgid "For |chef client| users, there should be no negative impacts from this change, as the previous order was essentially random. For |chef solo| users, the new loading logic means that files belonging to cookbooks which exist in the ``cookbook_path`` but are not in the expanded ``run_list`` or dependencies of the cookbooks in the expanded ``run_list`` will no longer be loaded (in |chef 10x|, all non-recipe files from all cookbooks in the cookbook path were loaded)."
msgstr ""

#: ../source/release_chef_11.rst:247
# d9da071121a04bc0819fcc0ec4a52336
msgid "Knife Configuration Parameter Changes"
msgstr ""

#: ../source/release_chef_11.rst:248
# e5e1d8a157a64682a9a5008c5bca7692
msgid "In |chef 10x|, it is difficult and error-prone to ensure that configuration parameters are applied in the right order. Configuration should be applied in the following order:"
msgstr ""

#: ../source/release_chef_11.rst:250
# 72c11f59e03c44fabaaa7b86c840039e
msgid "Default values"
msgstr ""

#: ../source/release_chef_11.rst:251
# b1584b25fb7d464ebba13f9f9a6fda10
msgid "Values set in |knife rb|"
msgstr ""

#: ../source/release_chef_11.rst:252
# cbfe27b19670450581c2f99dd6d5be22
msgid "Values passed by command line option"
msgstr ""

#: ../source/release_chef_11.rst:254
# f378a7b2c6f14bf888d85859d135e304
msgid "Because of the way the the ``mixlib-cli`` library is implemented, it is difficult to determine which values are defaults and which values are user-supplied command line options. |chef 11| takes advantage of a new mode for ``mixlib-cli`` that keeps default values separate from user-supplied values. In the configuration process, |knife| automatically applies config:"
msgstr ""

#: ../source/release_chef_11.rst:256
# b84e9d39ae6e4a3bb2bbc520f66cbcf4
msgid "Default values set in the mixlib-cli DSL"
msgstr ""

#: ../source/release_chef_11.rst:257
# 7038c14fb30a49ada9bd811bd0bbc0eb
msgid "Configuration settings under Chef::Config[:knife]"
msgstr ""

#: ../source/release_chef_11.rst:258
# 7a3a4aa5651e4a80b6d7d4b6f6442214
msgid "User supplied values parsed by mixlib-cli"
msgstr ""

#: ../source/release_chef_11.rst:260
# a575cf7a6b154111823a19b924471d1b
msgid "Depending on how |knife| plugin authors have worked around the |chef 10x| behavior, it's possible that this change will lead to incorrect values being used for configurable parameters. The |opscode| cloud plugins have been reviewed and should work correctly on both |chef 10x| and |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:262
# 44bdc0fd1f3f4494befe9b31f5025d3d
msgid "When writing |knife| plugins for |chef 11|, plugin authors are encouraged to define default settings using the ``mixlib-config`` DSL, like this:"
msgstr ""

#: ../source/release_chef_11.rst:272
# 39639084204b4f0385c579be255c65d0
msgid "and access configurable values via the config hash with symbols, like this:"
msgstr ""

#: ../source/release_chef_11.rst:279
# f1b4982acb074b52b6c783a80d8e6ba9
msgid "If compatibility with |chef 10x| is required, accessing configuration via a helper function like this will work correctly, but only if default values are NOT set with the ``mixlib-cli`` DSL."
msgstr ""

#: ../source/release_chef_11.rst:288
# f24629960db6474d9e01a02b403e65bf
msgid "Default values must be managed manually until support for |chef 10x| is removed, for example, like this:"
msgstr ""

#: ../source/release_chef_11.rst:294
# b273f941be4942f5909098a09fd6799a
msgid "Further information is available in the ticket: CHEF-3497 - Allow |knife rb| to implicitly provide all |knife| related options - FIX COMMITTED"
msgstr ""

#: ../source/release_chef_11.rst:298
# 32d90c2450514260ab4c60943bb5881e
msgid "Remote File Mirror Support May Break Subclasses"
msgstr ""

#: ../source/release_chef_11.rst:299
# 31ebd912580a48399b79acf657d9e614
msgid "In |chef 11|, |resource remote_file| now supports fetching files from a list of mirrors. As a result, the ``source`` parameter of the |resource remote_file| resource is now an array. Any library code that subclasses the |resource remote_file| resource---for example to provide S3 support---will likely need to be updated to support or workaround this change. To effectively revert the change so that the ``source`` parameter is a string, add code like this to your resource:"
msgstr ""

#: ../source/release_chef_11.rst:311
# 081888007d2f485bbaba536d3a80ad93
msgid "Alternatively, you can update the provider to handle the case that the ``source`` parameter is an array."
msgstr ""

#: ../source/release_chef_11.rst:314
# 5b4998aed5f64e47a3b151ccf2d1bea4
msgid "Chef Server"
msgstr ""

#: ../source/release_chef_11.rst:315
# 4cc497987fff49e7be11250af32037da
msgid "The following items are new for |chef 11| server and/or are changes from |chef 10x|."
msgstr ""

#: ../source/release_chef_11.rst:318
# 487fe6ea5c9b4088ae687548efc8d13b
msgid "The /clients endpoint returns JSON with a JSON class for edit (PUT) operations"
msgstr ""

#: ../source/release_chef_11.rst:319
# 5502b3c64183439d8e7bd89ed5d4a131
msgid "In |chef| 0.8-10.x, the server's response to a ``PUT`` to ``/clients/:client_name`` does not include the ``json_class`` key, though other calls, such as ``GET``, do include this key. The client-side |json| implementation in |chef| uses the presence of the ``json_class`` key as an indication that it should \"inflate\" the response into an instance of that class (otherwise, a plain hash object is returned). As a result, code that modifies a client (such as requesting a new key from the server) and parses the response with the |ruby| 'json' library must be modified to accept a ``Chef::ApiClient`` or a hash."
msgstr ""

#: ../source/release_chef_11.rst:321
# 799bd02230ef4b3baec4743340b0fcba
msgid "This change breaks the ``knife client reregister`` command in |chef| 10.16.2 and earlier. Forward compatibility is introduced in |chef| 10.18.0."
msgstr ""

#: ../source/release_chef_11.rst:324
# 120443a672184428bbd8145a3107eee1
msgid "The admin and validator flags are exclusive"
msgstr ""

#: ../source/release_chef_11.rst:325
# a6d2a2c6ca87481e9c9272f9603bd43c
msgid "In |chef 11|, clients may not be both admins and validators at the same time. In the current alpha release, you can set the admin flag on the validator but it has no effect. In a future release, you may receive an error when attempting to set the validator flag on a client, or when attempting to create a client with both flags set."
msgstr ""

#: ../source/release_chef_11.rst:327
# 8719158e3d94464b857562f6ac0eeba1
msgid "Exact behavior may change before release or in a minor version release after |chef 11|."
msgstr ""

#: ../source/release_chef_11.rst:330
# 9cc5d41c2ec54f7380055c28689056fc
msgid "Strict checking of top-level JSON keys"
msgstr ""

#: ../source/release_chef_11.rst:331
# fc5672f61d1a46aaafc0901e78ff757a
msgid "All API endpoints that process requests to create or update a |chef| object validate that the |json| sent by the client does not contain unknown top-level keys. A 400 error response will be returned if unknown top-level keys are encountered."
msgstr ""

#: ../source/release_chef_11.rst:334
# c1fc1f65d0554ab19dccb1ffa40a4374
msgid "Creating an empty sandbox is now a 400 error"
msgstr ""

#: ../source/release_chef_11.rst:335
# 658381268b794c64a634349474d805e5
msgid "Sandboxes are used as part of the protocol for uploading cookbook content. An empty sandbox cannot be used for anything. Creating such a sandbox may indicate a logic error in client code and is (mildly) wasteful of server resources."
msgstr ""

#: ../source/release_chef_11.rst:338
# f0a96dc819a44520a4bfa626a3e7f0f1
msgid "Error messages included in server error responses have changed"
msgstr ""

#: ../source/release_chef_11.rst:339
# 9089545227a042b78c939977956d2e33
msgid "As part of the move to |erchef|, error messages have been made more consistent. Code depending on specific error message text may be broken by these changes."
msgstr ""

#: ../source/release_chef_11.rst:342
# 435f2191a448472b98dfb151c73f39d2
msgid "Some error codes have changes"
msgstr ""

#: ../source/release_chef_11.rst:343
# 426939694eaa48fa8eba86a551397f26
msgid "In a number of cases, |erchef| returns a more specific error status than the |chef 10x| server. For example, returning 400 instead of 500 for some bad request data situations."
msgstr ""

#: ../source/release_chef_11.rst:345
# 7c9058d252c4436eace485889d87d631
msgid "The ``chef-server`` cookbook has been completely rewritten to support an omnibus |chef server| install"
msgstr ""

#: ../source/release_chef_11.rst:348
# 85d16b1e2a0f477eb94571fc33af5d81
msgid "knife reindex is not supported in Chef 11 Server"
msgstr ""

#: ../source/release_chef_11.rst:349
# 68fa5d122e4b43f5a0986fe5ffe28bc0
msgid "You can trigger a reindex of |chef| object data using ``chef-server-ctl reindex`` while logged into the |chef server| box. The |knife| command is still present in the |chef 11| |chef client| for use with a |chef 10x| server."
msgstr ""

#: ../source/release_chef_11.rst:352
# f08e781df3784de6b6ddf69dd5efa6d6
msgid "OpenId support has been removed"
msgstr ""

#: ../source/release_chef_11.rst:353
# 8f3269d037d34de1b80e133e07e0480e
msgid "Support for |open id| is no longer in |chef|."
msgstr ""

#: ../source/release_chef_11.rst:357
# 328e11cccb574645a8c82d38911fda10
msgid "The Ruby server code has been removed"
msgstr ""

#: ../source/release_chef_11.rst:358
# ec6156a01ca946d7bc63e9919bf48cfe
msgid "As part of the move to Erchef, the Ruby API server code along with classes not needed by the client-side of Chef have been removed from the main chef repository."
msgstr ""

#: ../source/release_chef_11.rst:361
# c1c9fbc832464fde88824a22a20fd45a
msgid "knife cookbook delete --purge is ignored by Chef 11 Server"
msgstr ""

#: ../source/release_chef_11.rst:362
# c6e8073cc71b49d9abf9ae072c6688f3
msgid "In |chef 11|, the server keeps track of which cookbooks use a given piece of cookbook content (via checksum). When a cookbook version is deleted, associated content will be deleted if not referenced by another cookbook version object. Therefore, there is no need for a purge operation when using the |chef 11| server."
msgstr ""

#: ../source/release_chef_11.rst:370
# 232d3882af0149dda6fb9f4ccccb86e1
msgid "Other Notable Changes"
msgstr ""

#: ../source/release_chef_11.rst:371
# d4a348d358d34cbcacbd5832141c9e84
msgid "Changes that are not expected to be breaking, but are notable improvements."
msgstr ""

#: ../source/release_chef_11.rst:374
# 223cc285f97547baa39da1aedc0ebc0a
msgid "Output Formatters are the Default Output when Running in the Console"
msgstr ""

#: ../source/release_chef_11.rst:375
# 19e079e48843474f97db5215f64bc1be
msgid "In |chef 11|, when output is to a TTY, |chef| will automatically use output formatters to display information about what it's doing. To accommodate this, the default log level is now ``auto``, which evaluates to ``warn`` when running with a TTY (so log messages will not obscure the output formatter output), and ``info`` when running without a TTY (so you get important information about changes being made to the system when output formatters are not active)."
msgstr ""

#: ../source/release_chef_11.rst:377
# 0e084350ecd3492c89f4163a39a9beed
msgid "If you prefer one type of output over the other, you can force |chef| to use output formatters or logger output with ``--force-formatter`` or ``--force-logger``."
msgstr ""

#: ../source/release_chef_11.rst:379
# 11e91f46cd6c420085f68a3df8981592
msgid "In previous versions of |chef|, bootstrapping templates would generally configure the log level to ``info`` in the |client rb| file. You may wish to change this to ``auto`` or remove the setting from your config file entirely."
msgstr ""

#: ../source/release_chef_11.rst:382
# add17972a75e4b7a9489a13fb2fd82ba
msgid "Inline Compile Mode for Lightweight Resources"
msgstr ""

#: ../source/release_chef_11.rst:383
# 128843430bdd4b488e580f8b7c4f030a
msgid "In |chef 11|, there is an optional \"inline compilation\" mode for lightweight resources, which is intended to make notifications work correctly for lightweight resources."
msgstr ""

#: ../source/release_chef_11.rst:386
# c7d4a1a1e6864882a727e938e65b6d0c
msgid "Without Inline Compilation"
msgstr ""

#: ../source/release_chef_11.rst:387
# bccbdfef2c8e4cde8d2ec1b4ac68aa8f
msgid "When not using inline compilation (it is disabled by default), any resources created in a lightweight provider's action blocks are inserted into the top level resource collection after the lightweight resource it belongs to. For example, given a resource collection like this:"
msgstr ""

#: ../source/release_chef_11.rst:389
# 90c8998c48054d05af77eda1b45facf1
msgid "top_level_resource_one"
msgstr ""

#: ../source/release_chef_11.rst:390
# ad9a4ccc7451403bb28a77532682802b
msgid "lwrp_resource"
msgstr ""

#: ../source/release_chef_11.rst:391
#: ../source/release_chef_11.rst:399
# 6e13c46429ba4850a33e23ee5c213dd8
# 60b7aca87c6743ac9af5174784e0806a
msgid "top_level_resource_two"
msgstr ""

#: ../source/release_chef_11.rst:393
# 00d794a371254f0f8e0e3ce100c55890
msgid "When ``lwrp_resource`` is executed, the resource collection will then be modified like this:"
msgstr ""

#: ../source/release_chef_11.rst:395
# d0ed29018fff41a48361729c4c60b9b0
msgid "top_level_resource_one (already processed)"
msgstr ""

#: ../source/release_chef_11.rst:396
# 54f7f2a9201643f8b539158bab50fa82
msgid "lwrp_resource (already processed)"
msgstr ""

#: ../source/release_chef_11.rst:397
# bae0a390d2a74908b5f066be77b71418
msgid "embedded_resource_one (created by lwrp)"
msgstr ""

#: ../source/release_chef_11.rst:398
# c2aad5624ead4480bd042a93b735c4d5
msgid "embedded_resource_two (created by lwrp)"
msgstr ""

#: ../source/release_chef_11.rst:401
# 509ff94cd4f34bfdac42b4da763985d5
msgid "This means that the ``lwrp_resource`` cannot correctly set its updated status based on the embedded resources, because it has finished executing before its embedded resources are processed."
msgstr ""

#: ../source/release_chef_11.rst:404
# aac021f4f50d4954b75199e50a5834b0
msgid "With Inline Compilation"
msgstr ""

#: ../source/release_chef_11.rst:405
# 06b0cd4c14ca42439a0451c7e71ec6c9
msgid "Inline compilation is enabled by calling ``use_inline_resources`` at the top of your lightweight provider file. When this is enabled, the code in your action block is executed in a self contained chef client run, with its own compile and converge phase. If any embedded resources have been updated, the top-level lightweight resource is marked as updated, and any notifications set on it will be triggered normally. Within the embedded chef run, resources in the top-level resource collection are invisible to the embedded resources, so embedded resources are not able to notify resources in the top-level resource collection."
msgstr ""

#: ../source/release_chef_11.rst:408
# 8f85a091d33c467d86f552df69013b58
msgid "LWRP Class Hierarchy Changes"
msgstr ""

#: ../source/release_chef_11.rst:409
# 92a310bc28374be2935a2809215e82b7
msgid "In |chef 11|, lightweight resources resources now inherit from a ``LWRPBase`` resource instead of directly inheriting from ``Chef::Resource``. Likewise, lightweight resources providers inherit from a ``LWRPBase`` provider instead of ``Chef::Provider``. This should not impact existing code for lightweight resources."
msgstr ""

#: ../source/release_chef_11.rst:412
# c062b81309f14fea9b798c15b8c30428
msgid "Partial Support in Templates"
msgstr ""

#: ../source/release_chef_11.rst:413
# 0ce4806bcab84ea6bc83e0ba53e2ac8b
msgid "Partials can be used in templates. See here:"
msgstr ""

#: ../source/release_chef_11.rst:415
# 1937df462fb74118a188bb283cf0c4fd
msgid "CHEF-3249 - |chef| support for template partials - FIX COMMITTED https://github.com/opscode/chef/pull/498"
msgstr ""

#: ../source/release_chef_11.rst:419
# 0b2fd60ebb904e83b6b060254b0e398c
msgid "chef-apply"
msgstr ""

#: ../source/release_chef_11.rst:420
# 7dbb4893176c4944a34d094ef5290677
msgid "There is now a ``chef-apply RECIPE`` command that will run a single |chef| recipe with no ``JSON/run_list/config`` file required."
msgstr ""

#: ../source/release_chef_11.rst:423
# 58104f280f104c19a08562112712c6e7
msgid "Miscellaneous"
msgstr ""

#: ../source/release_chef_11.rst:425
# e3b10b3dc11a4ca29c244bd97e9fc462
msgid "Locking is used to prevent simultaneous runs on |unix|-like systems"
msgstr ""

#: ../source/release_chef_11.rst:426
# 260fdf5902cd45cc83745916c62639cc
msgid "``knife search`` assumes node search when the object type is omitted."
msgstr ""

#: ../source/release_chef_11.rst:427
# 12e695a848a2450b9a6403692a11d729
msgid "``knife search`` will search over roles, tags, |fully qualified domain name|, and IP addresses when the given query is not in |apache solr| format (does not contain a colon : character)."
msgstr ""

#: ../source/release_chef_11.rst:428
# fd28a8a65b9d4b22a7922678f42e9efb
msgid "|knife| essentials (``knife upload``, ``knife download``, ``knife diff``, and so on) have been merged to core |chef|"
msgstr ""


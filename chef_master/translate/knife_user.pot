# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-31 18:22\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 187888f70e554341ab46efc536c2b364
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# a9d798704c544fa18b00b3c8feb128b5
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# efa638984af14ad38e59d97d110e742d
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 62b50bf8027e4a6ba28e9c48e5c0354f
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# 352d96ddbf0e402d9ae19d189879f184
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# a00f6bfe033f46289203ce3d841f50f0
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# ce459ebbfae141fc800bbfd24d4f2857
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# c915e40e1c73422f90370aa7b115be02
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# b9f0b46a16af443797bdc09216cf0245
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 24e07b8d94ab474ebdf8097d5336076d
# 984b8739bf4a481a83c4b0f5c2e7feee
# 7b7ce0b2690844949bbd1c4360f16589
# a5333229f5f84e5c8ebf6002c8f01dca
# 90ef74a385c94160a92ce40ddba43ae6
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# 650e8632db4a40079a8ecea4fef13d21
# 5475f095ea064907ae70281dfb5478a5
# 78a2122c90a7434a94992f03f61297fa
# 3056d07b75a54d029e47f03d2bb03807
# 21bef97613384e62b4b33e8d24543b24
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# d6614b5aaaa34e84b8f92503a8bd7809
# e818094fb4524681badf8ba848517df6
# 15f8d6289ead442ca58307817926ece1
# df7f04777a6a48e18ef65ccaf0f6d1bf
# 383ef6d70cdd41dfb4ba9e5313085deb
# 57a88b33163140beb4409336a2f752bc
# c39dcd0e91f346c7af886a61de12bee2
# 7a7096d6ee6a42a28bf12c72c7869e63
# 07821f3bbf624fb08bf1afa88d1ca474
# 8179bd9df9d24ad392c350de6149ab2b
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# 34c234cd69ab417294b36abfaf70adee
# ad2537b2bfd64d7f88e09d4509157853
# 250551dbd7794cfc98c6ca271f0dec5e
# 5af9940d4d3a4596a2a50cf0d1cc9cef
# eb74d198efc54f6d8e237a5d5bfb07d0
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# d848b9a60c91440482c8838d8a574c65
# 6000c2d38ab34c69b9cab7df8643b5f2
# bf461261d4ad421791d60dd30d5ba771
# a2f74369b27c4eefb3872717baea20a7
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# a006f1a8aa4e406aa0e41dce01bff078
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# f247027e6cf948bfbeebf857a514901e
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 4c2f0bd7626545b884e5d5f86ce70376
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 4da7738a2dee46879077d4a2d6886b7c
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 259d020735344df6b6a4253aa8d61ad2
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# 99bdd91023f54d51bb9ada120786a3d6
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# 33e92643d679402c9c3ca7a34b38f088
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# 7be26ecabc7b499f8367af7f0ff22c86
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# f1d681ea936c48b6aa969eafcedb9724
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 2f2e6f1b91524f1baeb1b9f8995d3bd2
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# e570abcce7d14b22b0f3570d1693e275
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# 6f9a7909535849e9af6e9da3279e333f
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# 62daf45e9b5e44a5be727b5bf5799d51
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


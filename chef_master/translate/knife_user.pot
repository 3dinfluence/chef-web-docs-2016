# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-22 13:58\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 4adf8730dadf45eb91333f731722f56e
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# cc7424df127b48d091f39dc266f41fac
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 6d9498c8819e4a5cb1f2da89b6b7f63e
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 6e41ed3c0cff4dbeb5845225fc547e90
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# 3ee11e301271417c811bec5f4c8dd7c2
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# b3160e47bf8b4b58bfd0f2ac8cff947f
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 69702ef6c4b8424995556a070c46026c
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# 55faff9aaa3b428f93f84be4f272d469
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# aee07edb614e4e609e40ce40ab0f29c7
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 3b972fb9664e40639416a52fd1a5e622
# 2cd32f5d1e704c4ab168e12941fdbe9d
# d6fcc3c6eaaf49d09ef93e50880bd9a6
# a99c40b1828c4defa2d9edf55f49d9bb
# fc326a77e8394c37af1bdd2acff85666
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# 5465cb89a74246bdb8491fe25bd6bddb
# 73d1a77641fc41c98711dd2589ff7d41
# 71ec6aa739b24de58e8c71b0415828b7
# f1dc118db5f64b26af770a2e1d4890f7
# bc794134b108482490e8ad6b07a7fa73
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# f89ed1f2c9aa45d886deda21d7b930aa
# 65e04537d1214b369b8017d09fa3560e
# 05399331e9f74aaaaea0b975d668de12
# cddf2155e63b4854831266e9fc7f71a7
# 62f72eab016f4fc1a62ae1d55f81d863
# 8fcb27cba06b467b9071f2575c85d7d6
# 113caea17b9245f9906df921e29ce6eb
# ddfc501c01f0488f8093badef67865bc
# 91a5ebf6137c43428825c9f791cada57
# 69de0e57d7954b6392b20ae6d9aa6b77
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# 3d0d9dbee2e24049ab9aec361d205931
# b0c5cca8e9244f43b7a0a2649e47aa69
# 012904fdfafb46e98b8c2b9d920aa8f1
# 547ace7bc1664f1ba9e35a783ee86a96
# 9d413f7dcedc4c498e1eb3772302d51b
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# 3c4ed3bba7ec491585d82f6ae4e2d920
# b3d889dd2d3e4635841600093e56bd89
# bcb5471a78334b21a3afdfec3baf2c4e
# 3dc61d43e0e448db860e52f37de4183d
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# ec902007108c4f658eb0ddeaa62eca19
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# 6c993048df5e4fa986137d1f17d10ec1
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 2baea63278ef44958a1f2b9b335d6340
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 889ad1ad1ef247c48abcbe596d416022
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# ba23b40598d44b9ba7e32df4998ab8ab
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# b6cc373d39da4885959c06d8b07ed588
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# 1af568b8378045fe8f8ed21187328518
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# 647806f76d7c4208a1df09cb110a60e5
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 61a0d2e3fb2f440dbe1cd37d0b45a736
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 1bf370b838c84d35a4f4daf712cd9f68
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 33aa4fd59ed9443b978557cf68a64511
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# 62f2229fc9734145ae8843694748790e
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# 9dd41b1b813d40698c19790233f74880
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


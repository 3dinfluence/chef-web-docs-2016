# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:38\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 916af87980d446eda8163e926bdf3f63
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# a6fa6fa68e2f475e915adc2518ac664e
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# cd87cda9108c44c99ca95dcc39afbf80
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# e34b7277f0904dbab668322e57e41e15
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# dfc3e99906db47868ec205598eca534e
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# b4a9beadd276402fa554b46815c73c3d
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 0ef0f822d4d94caa97a1098389e1574c
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# b785dfdd000d42e1a3bd71df9e1d2d06
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# a4559f6e66204548b84ad1207bfbfe30
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# c78fef675ad64c1ea062dccea73e9a23
# ec165a601b81407693d8b8cd97f8427f
# 8fcda3cefa7446d6a8f9ed2b6199317f
# 8e1f65450f6e48bfb4d215e4f26d6507
# 7c7ff87c71804d5c9297a2e959aef626
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# a594a4f41a474bd6b41d14646e266bd7
# 0ac8d5d5e6504799904b523c92b01bf6
# 172a3e9c3a994e36bc64b52a0529b86c
# 5e4c2dba80f549f6ac4ad0e3b03e4af7
# 5864204049924442addc0e3566bf8713
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# 604ec2528ac04c51bd6268d5d5a1b04b
# f032a5680af24d809f590cb6ed3c1916
# 6e3fd0241fa241d9a7d72a4b0c19b820
# 7bc83d80b53a4f47b6c14d806e98e04b
# 3670472788d9459c9fa99ffc91979cda
# 5cb29e3717fd47a58d307a37d468af04
# 65f9f48f4a7447208bca5a6a06f181fd
# 83be7d6051f04315bd34539560b9f7fc
# 21b102fac37b4da8a4ce613bd795bafc
# 22dbfb59507a41c5aa8205bbc0c62316
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# f8de8994ac754337a22391296afd9938
# c8ad5a80a1e44ae88f0c942080a66dea
# b85b3917821449d09257817bebf573d8
# 7e066cbe7c934b1b90845e10cc5b1a55
# 29ec1c2a80064091a569259558da7f76
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# 0822d5cac61547fe83cb99ddb9005c97
# 2b2f1c24cc6a452fa6b2c857908d9694
# 74d13e8207e34097a635c42c61a1817f
# e7783f1180334c6db9121e71ef0a7c3a
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# 95c72a2f011e47e3960bbea8c95606e9
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# e616fc4d932c4e618efbb0da6cc96fb5
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 21c0d42099d64dd5878b6a4d9fd3ee2b
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# bb836f41d60d46a4970313f993c65283
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 9bd7532817344efab169fc961d2f442d
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# 6151c2e9d6184574b9cc863649c2e826
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# 321d38b05c824dcd968a43f3c9c7680e
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# d8bc9bba9279482aabde6d7057d2abb3
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 71895d2d93d342cb8c414dfb38a9dbb5
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 83a7bb6b348545f4846f6d9e67fec567
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 28b89c0393b843de831dfcc3e3d1ef55
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# 0ce3de9b24e346a68d4d845fd5071bfe
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# 620a866851f242b584f01b54c685b836
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-10 09:56\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 2f4d76a3e4e649448666c9df6b78f332
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 1241426987834ecf92d8d589445cdec2
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 0ee5432e861044319838be110b48e12a
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 8fe8a8b7254d486b808e99ba6322bc8e
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# 16af741b50d946008640facd687c1b5a
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# 32b35a68dd2b4af99398baac3d1abc98
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 3a090937bd0f49ddbf830435b84a074e
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# d073cee1975b4858bd29fcf3faa15bea
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# 30776b8a4218454d884185fb51ddd259
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# b222b00d631447e2a55c1d155b3614d2
# 9afb7f01d12c41ae877e1bcb030748a9
# 24eff19df79c4e1b97168f3477a8e681
# 60ed941fd31643578dccf22f06cfd090
# ad0011aa176b4d80b96ee9117339928e
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# a758cb146b8d4ddeb24916a7b657a7bb
# 39ddec3299284722aeb3212230520e4c
# 8bf9b4e5733b4bd6879d847ddde4edd1
# 66b1da2c9d4a4fea9a6f85b7df82f1a1
# 67dcc0eea32841cf90b74c6ea8f7bdf3
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# bac2b03af47d467ba557aa5b69a6eb14
# e988bfc968ec473dbb356c0b5dc21e75
# fea37ecffdf74d389ceef4bec3987cd5
# cb9a11f456f843ca9e5969cdd9aa98d9
# 104b40989a294dedbe2767dc47bd0cbb
# d83d231f6e634d38ae2845a035a0e17f
# d3925878d6ad443b9142aec276ff9ee0
# 0df8fbec37084ca093c4245ee28ecced
# fef2bea6a94e4565a8f7a67a695f0e12
# 6e8449c6b2ee48d3a2c46c19f702ad9c
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# a5f2c9cd5d474c3dbef6869af1332707
# 52d435521b1c47798978c6bde77ac999
# 6125bcb6becb49d2a346f749e49910cd
# 1f41e96fa6a44b18953a79bacabe124b
# 56f7a8faf7a94ea2aa1e36795d294c99
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# 79510a5304b84b718d44467e12b68d96
# ae748a7655874db99f6bee8b4551cc97
# 3a211ce8cf1b420582c7349a65f6ea12
# 5dce650d4bcc44398271ecd2fcc0d3ec
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# f25e9fef450b46eb9994c910582e2267
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# d254e2ba0c114e758e3668246af4863c
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# b9651bcf172d4ecfb03d81d130906144
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 9a8dad7aeada4697981020ed321af318
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# f53264bb78ae4cdb87ee2b6b986db18c
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# f6a1df184b6d4c31ac4c2f175608ab63
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# 11de6749f1934ff2bf568c46a25095c4
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# cfc119333bc7448ea02508c1f0895ba6
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# b2d2da02daba4643a4cc2f7a0a62f472
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# d9f9c29bb0874865852e99d62287a140
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# b66c8d5a283a44b0b75fff62e7a0ad83
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# b4be949ca1b3483e90a087786ba20ca4
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# e559e6a1d9f34a3b9b55e5fff3d5b0c3
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


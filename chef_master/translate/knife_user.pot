# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 14:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 51e78a8bd1e54d829399dc48b8f0f845
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# b60d4ff9257d42158589c030b8f1c47d
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 49f7d981f353495fa134c79e0dbae662
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 9549b426598a4196ac63b0411c2ded0d
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# ac8a96cee49542c78a611b2f90de4357
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# 13b3381577e642cbab008694227b0abb
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 55f1a3c61b6547dfabb420a1ae9f7b84
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# b4f4379cdc5f40cba2ebdf318138f959
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# 9de57856a8954465a9e2aa73d082ee63
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 90a1943074884840808efe294f82079b
# bc5b9e871e7144ee933ff146ac5e95d8
# a1b06ef2280c47298f1de5275186d568
# 585b1b63f344425097b122c119d6ea72
# 2b464eb2fc1c444cad0ac682ed2ff685
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# cbb74324879d4f53b14709f4d43fe5b3
# 4bdd907dd35841808f9d5a862dda6206
# 9553cca6b67b4cbbb4b2f395802f2455
# 742c07392e5241288dcdf02cc72fb501
# b1ee429c31d84a9ca1d36f820aa51461
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# 159b322e2d85413c92baa11691d78c22
# 2038f05075cc4bd18034d3781dc77650
# 5e79e1084160419d8ae9374b632a5615
# e72de19e009c4497bf1409756b773c49
# 88c7fd77a7bf482495d8f28e3296ad6f
# a593c0c0880d4c6b9176110a89dc65b8
# c533b14aeae944b0b3bcd3c60d7ecf17
# 2f3e08d2c8c542cfb14a76825a13f97c
# ddb4e64ee0a9467a9331e022e3795b0c
# 0eb2dce91693481e95771034d13b81eb
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# 14ea9758d9804f5cbd444c47209f8a9c
# 2873a96424304168a5c21cc27e372040
# 9237da005b7a41a0b63d6982796a0d23
# b495039becbd404a9495465d55bc163f
# edbafb75c3074824968b21e7887e0c47
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# 926931a1545d414e80d2bf41fb535814
# da17242698c549989805d6a0236112fe
# a7b6b41908e44b298eb8cde6d44683f8
# 0be0d8c44ada48ed96bf4af08ffd853b
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# 60590abde89642dcb12af3c8295c914d
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# d91cc580091241d587a34019176a50ab
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 2b2292b8745145ba91da7d8975ff6084
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# eeaeb0127c604727b7aeaf8ddde4e2ec
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 7ad1751ee3364601bcac978255b2b2fc
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# 60522dc9c36f43dd9c77a4259f458cbf
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# c9b0a63f04874d74ae0b48cb4c25a8d8
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# 01b792bef2904850ae472fd6131c6149
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 6e359799bd984d99ae47a1e46c56d8fb
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 63a3aa6d07734dab9ba017e10ea234e6
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 3438880ea9064429950669634984c525
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# d52559f76ce04988b8425b68465d41a9
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# 798c8463219e4775b7713fd66f7c38c7
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


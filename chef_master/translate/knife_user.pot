# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-29 16:44\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 4366d0b79da340b7bc3226578206f26a
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 12a75828e0974aa5998eccf56fbcc868
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# d2873f23198a4c66b133fc5a2f66ebc2
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 0ab429fb534841f1a213bae108559ed2
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# 12f4e650d72146b19f146af3c65333d3
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# 5e053a4fda6e4ac59bb673da06005871
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 4c40ce1fde984189b934b106001ff10e
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# 513e495c628e44319dd96f1e4880699b
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# c5d690c0f7f34c31a79750ded0063d7a
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 9f3b7bdb8e754cb5a77774ab86fb7d61
# 8030481531444be98b093f34824f535a
# 9fad841ac131431bbd78980c07297f37
# 497a60c6d6304a4389a9aa3bb7be25b9
# 0430c76c2ba246bcbbebea4f11fcbf80
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# 7decf14e96a14841b61bb4351628bdb3
# 2cff8b45e4e244f4ae31613bbb92c383
# d112f68b11784709931436b4e59b772b
# 2fbe2445e30f4bd0a111db60a47bdce8
# 950b5fc00b5640ec879b62091f1cbe5c
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# 4fe4cb0bd8cc4bbab5f63358e4536c9b
# 9ee08d336b984c9b94e418cc2ac8aef0
# f70e0bd43fc84be8b91e91756f444656
# 8e014408b075478aa2e512844fe5b6bc
# c1951a264bcb4b218946c26a0c2bf334
# fba3f98f59d44d30a398a15e52f0aca0
# 8130b4a5a6204f03b443f7020c04a0e6
# f1fbba9a082b44bf9c83da5cab27bf83
# 746053075ca648b4a308945e708a3b8f
# b158c6654d6a4031a64f70ae60ae0610
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# 64b67bb2c2074864a06d00da90808a1e
# 4de79212ba8449e5b39385cd5599afd3
# d9d337cfc7344e48b4f77185e8e906e3
# 563589b08bd64820bd8c91fc5878f5ab
# 3c962a1c166c4520aead20de0190ec05
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# caf3dec416814638a8bb5c878eb7831b
# 75f53a0636494d1699115d0b3eedede3
# 777a1e46c98249cd887fec78f49a441d
# 65c2869585e4406d89821a6c58ef1aa7
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# 72fc7f382e7d4a0684761f5289a87df2
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# d44b69a78eac4acf92afb5b9bb5cf3e8
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# ce7983c2ccba44a9bb6d55df698ff350
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 3ff143b3589a48febd846094d3445699
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 25e6a9a198604e4b8fcbbe344377591d
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# cbfe1d01daab4866b45dd7a8cab12333
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# a759cb5bdb064a3d9e197d5514a4a6c2
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# 0d77138f4b8c49a78d607123599ac94d
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 647e61e6d5dc42f1b58c304a7e8b0006
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 98fbf62c2f5b4258b242b56991d10d02
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 5b88076e08884232b6cb2848669272bb
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# fd903ac08a604304aaa66e2d84bfcb29
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# 3a80d34c891b41b8b90bfff69c084df2
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-30 16:30\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# 75e5a957ec974cd0a45e78da37236eb3
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# f3021a900e0b40af8fda80276cb72c6b
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 0ec4e11a9a04422ba5f1f1f9c0a7cc10
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# b4b61fe996a1452babf9c56e5e3b1757
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# 4e8b53ccb6d14e6da58769e99f7261fd
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# 4c391c22ebbb4d1abe8822537b4a417a
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# ef7567c1f903434fa1b5d6de8db83f45
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# b00a1d138ae1455fb2468381906f3fa2
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# f37cad609b444f9d97c7220689f4f3ba
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 0dae7de701074f47a71c711a48fd4f5a
# 96dd1211184c4d58aa27b00a997e6920
# 0637ab30a2244271aed19912fcee8998
# 730c67beaad9448e85294800af3795fa
# 30c8995845064bfa8f91661284fbcd32
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# da28756c0cbb42858ae075196b7eb900
# a933f318527b4393983c24e4f29b053f
# 36108b4c75d7462894e77dbbcfcd3a78
# ef265fe42d0e4eaeb3624afe0e67e5f0
# eb40b3f249e9486c84323a579b4620cf
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# 993d818146cb4f99bce81b34fe98147f
# b50bb5b77ad246008ad1a50e0b65e8b2
# 564d79a9695f49f895e9124ea19488df
# b4cea2b7ee8a4f8a853ad08c7326a726
# 75a47a9643c3463e9823cdbb101c494a
# f75a34b062ba4deab7cf6f02bb753a04
# b1bffb6d953c40508a674a78f2afe0b2
# 102752abbfa2423c925a307cc50325c8
# 460a71d5d8f442df9cbc3602c55e2fb5
# a5c0f6c4774f4c75988129979a386357
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# dd5c711dfd314700b5b2f39fc921fb94
# fc115d799186419cb7162b1e25f208c1
# 80138571c85c40589a8338415eeec52c
# d1f346f31224428ea5d23939c7a153a6
# ee9180b6e5f5477abd9ee63da574df75
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# 7a10120b55a34c389f5afccf39e371b0
# bb49f12508e149df8aa1f3e231daca45
# 04ef9c7bfac049f999013838153ad2c8
# ed12b2faf6954671855db846bbfb3577
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# a6c95b5df4424a40b5d59bb5318da5a3
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# b3b16e85406647cd85c86e6307be917b
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 5e4b3b0a1a034bb9a2ebe250d3fa6d1d
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 2f66c3009e664d1eb3ff8d35d7263bb7
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 1e761da12e4f475ab0e65c017fc5293f
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# 90e235168b9c4001a83b483c2fbac796
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# 3279f42d7ffa4829ae862382c749faaf
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# e05292d4483e430abf52a17926e81d62
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 1a46cf88733648828a435a06c53583f7
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 083ef2de615246948f7bce9027aea808
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 1c09efb380d24217b2f6d74bff98ebb8
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# 7bda3a39ce0248c4826195da78b71076
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# f6883b166a49487da924b9cc2f94b101
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-10 18:04\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/knife_user.rst:34
# b9fa9655678a47e3aa3758e6efc5cfef
msgid "knife user"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# 6baac9666d1f4df5af27762badf0a71a
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# 460c91064178415a8f6d625b31267145
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:6
# 9843e67f47414fc5856349760eb31485
msgid "|knife user|"
msgstr ""

#: ../../includes_knife/includes_knife_user.rst:8
# d77b6fe2a3594e06bc59ec7e9e9dbf4a
msgid "This sub-command has the following syntax::"
msgstr ""

#: ../source/knife_user.rst:41
# 2a84e84f628443f18ea85aaf1d7323f4
msgid "create"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:6
# 690b5f03cb4642afa1103b30121aad4f
msgid "The ``create`` argument is used to create a new |chef| user. This process will generate an RSA key pair for the named user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:8
# 7938ae54116a463b843a450d96760cfc
msgid "For the user, the private key should be copied to the system as |path chef private key|."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:9
# 9a34ccb2ec0f42708f985c1a55fc9976
msgid "For |knife|, the private key is typically copied to |path chef private key admin| and referenced in the |knife rb| configuration file."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:11
#: ../../includes_knife/includes_knife_user_delete.rst:8
#: ../../includes_knife/includes_knife_user_list.rst:8
#: ../../includes_knife/includes_knife_user_reregister.rst:10
#: ../../includes_knife/includes_knife_user_show.rst:8
# 341bd892e3ce4bbe9795b0e983fb17cb
# 6b96902378f545448bb8fe5e960c64bc
# ba1b245998204b268f21d067ddae21d8
# 96a2c51f326041b8b08684658b8a1ad4
# 790cb44088d3482182625589353426ce
msgid "This argument has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:12
#: ../../includes_knife/includes_knife_user_list.rst:12
#: ../../includes_knife/includes_knife_user_reregister.rst:14
#: ../../includes_knife/includes_knife_user_show.rst:12
# b5312d0362a843f69ebab971ce281511
# ff012373512e4874a5d7878dd8d62d4e
# cf27011636ab43369aaabe6ccf86fcf8
# 7134e8f8a9ad4026933512d1ca54812b
# 2e1119bbf1b14d15a9d31dab10cc7302
msgid "This argument has the following options:"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:18
#: ../../includes_knife/includes_knife_user_create.rst:21
#: ../../includes_knife/includes_knife_user_delete.rst:15
#: ../../includes_knife/includes_knife_user_delete.rst:18
#: ../../includes_knife/includes_knife_user_list.rst:15
#: ../../includes_knife/includes_knife_user_list.rst:18
#: ../../includes_knife/includes_knife_user_reregister.rst:17
#: ../../includes_knife/includes_knife_user_reregister.rst:20
#: ../../includes_knife/includes_knife_user_show.rst:15
#: ../../includes_knife/includes_knife_user_show.rst:18
# c81397bb8fb0400b9441033f7d4bca0c
# 8537e49148a949eebdf7cacf31c779a3
# f267819b690c44b3b1e7d34da6c2dd82
# aa65bfead5f947e1af40af27a90e51c3
# 2fafc18dfcdb45d4bff624920dfa9891
# 03df1f928e544689aec0a62877fa2d20
# 67b8825c776f406f9908c5c66e4a7799
# 00d1cd24fe1245ae91a65295ce617bca
# b5aee5f743264c1f94031f7ec8dd214f
# 6d19052de0114437988112ee9ce00ca2
msgid "xxxxx."
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:23
#: ../../includes_knife/includes_knife_user_delete.rst:20
#: ../../includes_knife/includes_knife_user_list.rst:20
#: ../../includes_knife/includes_knife_user_reregister.rst:22
#: ../../includes_knife/includes_knife_user_show.rst:20
# a837535759e842798b7234d2d9df4a69
# 54100daa73bc4060b053514e8744b26d
# 634834177fd142b59458383a6bf81b82
# 6169cbf6b7ff4bd78e59332ffc460ab1
# f6010aebe1cb44f38dcca97ed9329c00
msgid "**Examples**"
msgstr ""

#: ../../includes_knife/includes_knife_user_create.rst:25
#: ../../includes_knife/includes_knife_user_delete.rst:22
#: ../../includes_knife/includes_knife_user_list.rst:22
#: ../../includes_knife/includes_knife_user_reregister.rst:24
# bb0ce14010f5488784addaa9f0d9ede8
# 70724aa74b8e4471add48375b83a2306
# b9fed29b7a26401ba41df6af0e3eaf17
# 6407f4e3c1824a23bf4864d80598e0c0
msgid "For example, to xxxxx, enter:"
msgstr ""

#: ../source/knife_user.rst:45
# faf3408c1e814de0b3bb5e69f4735c11
msgid "delete"
msgstr ""

#: ../../includes_knife/includes_knife_user_delete.rst:6
# 6021c1c136a44831a8d5ec880f2876ad
msgid "The ``delete`` argument is used to delete a registered |chef| user."
msgstr ""

#: ../source/knife_user.rst:49
# 45704f18f9a94745a7e5641d42ea4b31
msgid "list"
msgstr ""

#: ../../includes_knife/includes_knife_user_list.rst:6
# 734913711a3a48178e48570bde7830d6
msgid "The ``list`` argument is used to view a list of registered |chef| users."
msgstr ""

#: ../source/knife_user.rst:53
# 3972d803491b4f88859040734cde6a05
msgid "reregister"
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:6
# c36752cfb09d4488b50521b5aa27a4a8
msgid "The ``reregister`` argument is used to regenerate an RSA key pair for a |chef| user. The public key will be stored on the |chef server| and the private key will be displayed on STDOUT or written to a named file."
msgstr ""

#: ../../includes_knife/includes_knife_user_reregister.rst:8
# dccb68eb19a64ab69c40cab1183bf18b
msgid "Running this argument will invalidate the previous RSA key pair, making it unusable during authentication to the |chef server|."
msgstr ""

#: ../source/knife_user.rst:57
# e5618983d91c45a4b0d4cc2a40589818
msgid "show"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:6
# 8aa31ae796b649ddb988022359f8f39d
msgid "The ``show`` argument is used to show the details of a |chef| user."
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:22
# 2b7760ec095c43c98ee8069a3ff26e0a
msgid "For example, to view a user named \"joe_user\", enter:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:28
# 11c039fd7d3b4c86b0c34cdcb06e1d4f
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:38
# fcd98e0051f049909ad14c5a44df0cd4
msgid "To view information in |json| format, use the ``-F`` common option as part of the command like this:"
msgstr ""

#: ../../includes_knife/includes_knife_user_show.rst:44
# d27ad80550204478b014d241b4ff9eb9
msgid "Other formats available include ``text``, ``yaml``, and ``pp``."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-21 17:35\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/api_chef_server_search_index.rst:34
# a5002d5fddbe461db1a6210bf8e6d624
msgid "/search/INDEX"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index.rst:4
# b0f103e9e9ed4f709960847c2e77f019
msgid "Use the /search/INDEX endpoint to access the search indexes on the |chef server|. The /search/INDEX endpoint has the following methods: GET and POST."
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 3542d052db25466fb68bca7fa202b2e9
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 4a46512eeb3948378e40b47db9d3d084
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/api_chef_server_search_index.rst:41
# a94c6288c7664852a85d07c3f303694b
msgid "GET"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:4
# 986263bbcbac42abbfc761fe80111a2e
msgid "The GET method is used to return all of the data that matches the query in the GET request."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:6
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:20
# ed358f111a874d1d97a8e8c164ef5d72
# f0dbcc3e981e4b548f28b9e3bfd76730
msgid "This method has the following parameters:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:12
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:26
# 20287de3a59d43f5848b7787a8a097d2
# ccab24efc9b84deab8e1b9afa892a4fd
msgid "Parameter"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:13
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:58
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:27
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:72
# 8918c32813d546478e20dec61270b8a2
# 8c052bee2e4e46ec8684f04971827dc8
# 017bcff483ec4b949681542e897c5a14
# b8e76b7d5cb9465ca00018ddfc77d0c3
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:14
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:28
# 14f7e7f7bfd94c3b8aa2eca0a4dcce6b
# 8333884746f6435cabfe507314a4eca2
msgid "``q``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:15
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:29
# e1ffbfc40c7c4221a74485be57125e98
# eae2d7ed60134c92b5f5f0a86defae7d
msgid "A valid search string."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:16
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:30
# 20df2904deb94383910c2ce9d43a4eae
# cc443cf2376e4fb88958a7ca0fbce29b
msgid "``rows``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:17
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:31
# 077f5b71ab594ea09acb1e05f7e17a55
# d82e5d72088e475d8493dfa4c8e2ce10
msgid "The number of rows to be returned."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:18
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:32
# ba1419d2a1b34d50bde2aa976a9637ba
# a161844e250e4ed7b571343769999675
msgid "``sort``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:19
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:33
# 9a358377f00b49d28c41980ea0e6af99
# e4b1c8d4ebfc443791596e4998b1e038
msgid "A sort string, such as ``name DESC``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:20
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:34
# 5b809e2e33554c79aa4f2b6e8062ea22
# a77d997529d7443f8e338022418f7ca4
msgid "``start``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:21
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:35
# c383d303902c495992880d5b1ca3c0e1
# e1c8727aae984350bfddce29bd6442d2
msgid "The result number from which to start."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:23
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:37
# d98d88ac0717418ba0dab54f91ca8f14
# 5964479c7b22476c98c4728f47928a45
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:29
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:53
# ef56d43d6e5f4e1289bcb5c90fda0c03
# ae694b7c49304e26b4109863eaec0028
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:31
# 7d3d961287e94daab84e7c11c329b27f
msgid "The response contains the total number of rows that match the request and will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:51
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:65
# 0369c040bc3241b5b5a4d928ab68509f
# b73dbe6b09dc4eafa639ca8991ef826f
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:57
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:71
# d2bc89be8aa649e68f4815e30d6fa4d5
# 6fe4f67b3abe44c0acd1bdcd4d7482ba
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:59
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:73
# aa7d2f4f0fda4ca099b5d3411a02f77f
# ad8aa2e96def488e906faf601c5868fb
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:60
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:74
# d2757bf315c743c08dce8d3d32c84fcd
# dadc73985e4e4e19a3f147f21e14d4c6
msgid "|response code 200 ok|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:61
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:75
# 7130a7ecf40f40daa3f07f3f2c11ea30
# fc90d94cc61247c1829593427ba6adeb
msgid "``401``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:62
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:76
# dff2d926125e4b32a2d3d746e682a8c0
# b3e63b325dde49959a57e365aae11672
msgid "|response code 401 unauthorized|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:63
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:77
# 4477b13039db4512bebe739e4bf682bb
# 8b891686350d482e8a744caf979bbca0
msgid "``403``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:64
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:78
# 138f6d437730448ead383c4f26fde114
# 8a99bf9fae014cd491606f61c44374f6
msgid "|response code 403 forbidden|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:65
# 4a1004e79dec472990cdc1999d3bc1e7
msgid "``404``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:66
# ff8333f4483a418aa669a22a1e7c7d60
msgid "|response code 404 not found|"
msgstr ""

#: ../source/api_chef_server_search_index.rst:45
# 5e209670ad85404c8d3d9557ba1da856
msgid "POST"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# 756815bebe6c407b87cf0ccc040be204
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 6498af88b7824469a5d062576f3e896c
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# aa9e2a0a6e47460f874d70feefd39996
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# 600cd8a371c34186aea540e3fe252f04
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:5
# 89ff62c82e75431893eaaba2869981d6
msgid "The POST method is used to return partial search results. For example, if a node has the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:14
# ca9bdef8ee82482692e6c84cd8ba8acd
msgid "a partial search query can be used to return something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:43
# 112a806a26c04dfcabc793f21a6adb52
msgid "with a request body that looks something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:55
# 4d634da6a05d4cd5b952143c53d2dab2
msgid "The response will return something like the following:"
msgstr ""


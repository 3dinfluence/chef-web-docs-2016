# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-23 12:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/api_chef_server_search_index.rst:34
# bd3a0baf839245dda873330edac73cbd
msgid "/search/INDEX"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index.rst:4
# 12d805ebaa3e4c89a0a04f5d23f6dd66
msgid "Use the /search/INDEX endpoint to access the search indexes on the |chef server|. The /search/INDEX endpoint has the following methods: GET and POST."
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# d6336727488b458fa459aaaba3710009
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 4f43b43e3d0341ceb8cd600a78b7b7df
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/api_chef_server_search_index.rst:41
# 17a3f9b8f5094b4faa41de58bade5b26
msgid "GET"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:4
# 5fb2735ef671408eb9cbac81a3f240d7
msgid "The GET method is used to return all of the data that matches the query in the GET request."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:6
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:20
# d28430b84bd741e2af0a5e31f67b0941
# f94f5d7fa8434951b0588f9e6d16bbbc
msgid "This method has the following parameters:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:12
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:26
# ab8aa9d158f840ae879049801dd61175
# 6480a937cb7b443cb013ae30aacfb3bb
msgid "Parameter"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:13
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:58
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:27
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:72
# cd5de68af427480e97a7847505366b33
# 9961a767ad4e43ec95b4fd09b83555f1
# 9eea0a20979a485baf12aa0eed85191a
# 8f72dcf9846048ff8c92f1814499d8a6
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:14
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:28
# c6ef2c73ce6646848f3064e15abbe371
# 3ff027601fe347d0b0040f6d588c8435
msgid "``q``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:15
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:29
# 0f0399aae6fb43099c93b2d20357addf
# d1f089c8fb5e46d8803a6ec2939860b4
msgid "A valid search string."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:16
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:30
# 0d046378afea41ca917a25b221fd142d
# f865355831ba43d0ae9ba9c3f15c68a2
msgid "``rows``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:17
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:31
# 9d260a1520244114a55d97aa5e86b97d
# 2c1866ff826241d9ac473321555bf9ac
msgid "The number of rows to be returned."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:18
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:32
# b7bba7df99984d0ea58e18af17aa7387
# 1ee3259ef502484da16834359ab2d988
msgid "``sort``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:19
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:33
# 205f9d9db0ab46199d91c96246c7519e
# 8b49954442304c28bb0f6a850d9f6ac0
msgid "A sort string, such as ``name DESC``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:20
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:34
# 45e1dac4059e47618e24d154cbf403c4
# 39ceafefab3c4c23aeb93d9bfdd4d0ca
msgid "``start``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:21
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:35
# d8de422265fd47d2b7b3ee83cdcbf011
# eb9e38fc1c15482a8101e343ceed1853
msgid "The result number from which to start."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:23
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:37
# e82102d8b68443e783f8c9a150b1ef5c
# 6f69923dd992451c8f509e03f59709b5
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:29
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:53
# fa2cefd922ae456ab6317abc4b969b24
# 12357c4943b94f28a4dfbd9195a40934
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:31
# 539958991904421f86efbacc815e7599
msgid "The response contains the total number of rows that match the request and will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:51
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:65
# 65ca905d08794fd8b5b9e746d186d4b0
# a98c1276830c4f429f8c654bd2af04d5
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:57
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:71
# e42a780f2cdd49a0a7921ee0bebe0d5d
# 0734a573c0cc41188fb932e9a1066cfd
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:59
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:73
# 3d84e73e4eeb4b14bf73d28815caaeca
# 36966b242e5346b79f2a7b961341d116
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:60
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:74
# bfcceac5f5d444ec85900c34668c1753
# 697942206dce418c922cbe0d5355b6ae
msgid "|response code 200 ok|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:61
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:75
# c631d7459fb94a73bf7079801554a3f1
# 232f1f1d00cd43ee85ab3b2be710a777
msgid "``401``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:62
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:76
# 012e67adc0cc43dfa579b62f6f42bb0e
# 99cfd8b6a9054084b9c07e4bcfe1a013
msgid "|response code 401 unauthorized|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:63
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:77
# 7d3011a6354b4aa5b1667bd9ad0364b9
# 5989b85ee17946a397871a549b63552f
msgid "``403``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:64
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:78
# 2ab3fe90842b407ca666074f14e770db
# 78700134d8b24964aa9220f58728b00b
msgid "|response code 403 forbidden|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:65
# 232573e04a0e4e4c994189b16eecc39a
msgid "``404``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:66
# 24f91ab00540416ebab33793183c28a5
msgid "|response code 404 not found|"
msgstr ""

#: ../source/api_chef_server_search_index.rst:45
# fe99c8055ede40bf8e653df24db4747f
msgid "POST"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# 8c74ef8fe3a7482287a5d5983a322e97
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 38cce0dd8f98447aa7c5ecf840a693ff
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# f8f57bdecdc74520a1df790b2ea7836c
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# 80d0c0599a9f4ca1b5f1554daa8ada57
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:5
# f21b751eaae048b29208c8211e6e1a9b
msgid "The POST method is used to return partial search results. For example, if a node has the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:14
# 7b4f41d5c7e44c84b7ed13037cb37d4a
msgid "a partial search query can be used to return something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:43
# 13b14a11ec02423d9aaac8fb44668e89
msgid "with a request body that looks something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:55
# 9a5cbff501ca45c19d0d70bc51dac691
msgid "The response will return something like the following:"
msgstr ""


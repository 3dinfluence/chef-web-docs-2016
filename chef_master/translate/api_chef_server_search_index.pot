# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-05 17:10\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/api_chef_server_search_index.rst:34
# 5d5cedb007e943e981078aa40405fc07
msgid "/search/INDEX"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index.rst:4
# 0a650557ee97427e83dbfd372ea922c9
msgid "Use the /search/INDEX endpoint to access the search indexes on the |chef server|. The /search/INDEX endpoint has the following methods: GET and POST."
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# c230e148088849988b286f6726980e81
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 174d238e04ca4716852211063f766832
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/api_chef_server_search_index.rst:41
# 32b49b5b2fc74e8aac996dd4a96b1b07
msgid "GET"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:4
# 5871cb94e03b4ad7804d1cd393bef1d3
msgid "The GET method is used to return all of the data that matches the query in the GET request."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:6
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:20
# 1d215a27afe447069cea44d5f617742f
# ee389087fcc34a64bf300f15737d3871
msgid "This method has the following parameters:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:12
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:26
# e9078f7d01934359b319c5e6495bbe24
# c7ca3ed0ae7145ef8d57118f4cf48f1c
msgid "Parameter"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:13
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:58
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:27
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:72
# f8a562d83a4a4b3085f242b73d744d1f
# 36b45f0267f0448f9f8120adec03ddfd
# bdce4c7bd29b4a4f82a0a34a693c854f
# 494b8ab53c3446479766ba8f0c969d0a
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:14
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:28
# f5fb00358efe474bbfa9e86b30d9029d
# eac1191694a0492eb76402c92544b0ac
msgid "``q``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:15
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:29
# 1f76e07153f24be7b98029189062844b
# 21af4012f9bc4368993d1fa362ee3d23
msgid "A valid search string."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:16
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:30
# dc8b21790ae04bc691d8c2b5b9bb1b87
# ef02bd0d186042a7994ca6bac210ba43
msgid "``rows``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:17
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:31
# c2afa6c703e944e09a176f67d78d7baf
# 8373ec58a0ac49bf98f5affbacdf5ae3
msgid "The number of rows to be returned."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:18
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:32
# 06db932de3bb418ba3fe1f6fa356f744
# 2e4e5d21a3644d96a2ff4c76aaa7e55b
msgid "``sort``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:19
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:33
# f59bbdde461e4cdda4b6d0e0762d166e
# f6401fcdb2a04f36907055609937ffb6
msgid "A sort string, such as ``name DESC``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:20
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:34
# fe887397feb14e1ba0babd99e0d804a7
# 4473536df121416691e8ab36b03e7350
msgid "``start``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:21
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:35
# b6341aa95bee42b789dec9c1958fde27
# 6e2f167d44bc4e1685ca32a2c8affc75
msgid "The result number from which to start."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:23
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:37
# bc0eaf3301db45838bda393ada311a89
# 7124872f7de8470ca8a8eadae553c1dd
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:29
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:53
# 2fd0bf6f9bb84479adba1a4f7293e36d
# e743c08ee1774360a1a2aa69f0ec9008
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:31
# 3190e2869c694afc8f2ab7e73ced82ec
msgid "The response contains the total number of rows that match the request and will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:51
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:65
# e0d6b01b2eaa443da0483eb44ab332a6
# 6a1df464d3cb49cc98119a4a0cb683b4
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:57
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:71
# ef667951eb4a4b62ae4757e0bf545974
# 180aec25bfe2418b91012bcf51637101
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:59
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:73
# 8ea3bca7ccfb4338a471fc4b60e7cc45
# 42d7abf0a4c0431da3ccf1d1cedbd187
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:60
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:74
# 744228f4cb8b443daaaa7aead3288165
# a896688371614309a63fd70e48852f78
msgid "|response code 200 ok|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:61
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:75
# f0f81061572e418e8d79b06415971773
# 84972e14f3d04c5facffa0c22d60993e
msgid "``401``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:62
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:76
# 4907332d7102407382b6433f0a602e04
# 6649b5766e234c61a467a38b9c714e41
msgid "|response code 401 unauthorized|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:63
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:77
# 8ec5bfb1ba2d4b15bc1c9ae32c7ddd0b
# 0315e9a91d724e0a86796d3c9a04ad48
msgid "``403``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:64
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:78
# 900ac30dea0449b5b0ec97f26c6f9971
# cb0d46de45904c0c83b7c14f9d21a57f
msgid "|response code 403 forbidden|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:65
# 77ab740a06ce4fb19a6a22362f9dfc38
msgid "``404``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:66
# b3e2456b0c9542b28e19928fac309f18
msgid "|response code 404 not found|"
msgstr ""

#: ../source/api_chef_server_search_index.rst:45
# 8cd9ef7616db4c29b5d5580a6fe9b553
msgid "POST"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# 25c991c448744efeb6622b9fde9b6534
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# f990870b13fe49f08ae8c2f1cf7f66e1
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# c7e4088b330b46c4b4faba912c5e1a04
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# 8838aa59a41f4033b4d365e48501d326
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:5
# fc1f5a22d38944a2b97398e8e37a2fb5
msgid "The POST method is used to return partial search results. For example, if a node has the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:14
# da953b3429054707bd06a3f16847142d
msgid "a partial search query can be used to return something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:43
# ceb5da82c1c842ddb24c11e125300fb8
msgid "with a request body that looks something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:55
# 24c2212ed09f444e9034a1889cedccce
msgid "The response will return something like the following:"
msgstr ""


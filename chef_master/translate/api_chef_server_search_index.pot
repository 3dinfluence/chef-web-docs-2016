# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-05-06 11:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/api_chef_server_search_index.rst:34
# 1e4885447b994173ac18bff0074106b1
msgid "/search/INDEX"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index.rst:4
# 9eb3c2a08a3a43798d848b60b182552b
msgid "Use the /search/INDEX endpoint to access the search indexes on the |chef server|. The /search/INDEX endpoint has the following methods: GET and POST."
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 3ee55dbec5ec4ac2847bddeb3b650a94
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 2b21071dd71f4618beabbd3dcfcea8e5
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/api_chef_server_search_index.rst:41
# a409130fb74c4edfa3ac179178d9c1f1
msgid "GET"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:4
# 652c168c6b6c45078a79c4f1e4407711
msgid "The GET method is used to return all of the data that matches the query in the GET request."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:6
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:20
# d21d80de384e406887043238bac38d51
# 59b0c698480d412ba2c78ddb62e2be69
msgid "This method has the following parameters:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:12
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:26
# 996b15730e19433b8f87e443dbe0f534
# 0da65f859e894a9a89be053adb0f0986
msgid "Parameter"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:13
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:58
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:27
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:72
# 80623d3e083840028823175d048d225a
# 2896c212cb634a0d8167a2c2136ff427
# 447f2499834a4669ae8efc6ec2be2bae
# 1c726ccbdfba4c9e8798190f69ff5fbf
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:14
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:28
# d61a5fb238a74a2ca5ddcb2fc90d7573
# f98f6b932c894e2dac93e343773e5888
msgid "``q``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:15
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:29
# e8e8300f93e74de9be0ed614edbacd58
# 1d10e69c67fa402fbab18ab7935d7035
msgid "A valid search string."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:16
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:30
# fa462ad5693b42548368b66f7c241195
# 7b784610168347fb8876a7df6f857288
msgid "``rows``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:17
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:31
# 76996752ba6347ac98cae227e56f76b3
# cb1dfbba10af48c4b945419c2a6991ea
msgid "The number of rows to be returned."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:18
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:32
# c2553c5cc0314a7ba5b69dbb6dfeb83a
# ae16bd29678b4555a5025d947606d3d4
msgid "``sort``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:19
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:33
# fb466cd90fb7471e894385c017d3f0df
# 3f575ce9c3264458b671922e15e956cc
msgid "A sort string, such as ``name DESC``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:20
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:34
# 8c9793722b9d44ae96951d92528d2361
# bdbdc39405d24684b34b84ba3032a5a1
msgid "``start``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:21
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:35
# e043fc804c6940e5ad40070e666e50aa
# dca70d8161114f9ba73e1357ffbd0571
msgid "The result number from which to start."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:23
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:37
# 780dacddd6864142ba2133c2832afc7b
# 6a46d20655634823a5c4d0554da963a4
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:29
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:53
# 6331caf0df6345ab8bbed3cf7b6e0cf3
# 1915236f34be41f1a3f62c20d361af10
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:31
# 47cc8dd8ece84a1395d16929d837af88
msgid "The response contains the total number of rows that match the request and will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:51
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:65
# 45e5708927f14bf7846c72d9903ccd42
# 2567efe0c388444b8d080650d6076ae0
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:57
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:71
# 59cd5d0400204989a5d14ca0407a9ec1
# b359b73efa884cdfb7f52f1e7f6ec33e
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:59
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:73
# eabd1f4e33044032ac0e15fad477595f
# a3310862eb524700a30f0a2c1306657f
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:60
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:74
# f3fff1a84aac40d7ac2302ce2274292e
# e1385a882a6c402ea0aceb52f1771de5
msgid "|response code 200 ok|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:61
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:75
# faadeda98af740cdb4a1b54c43246ff9
# 904b6d42f7a24add93926d7f45998235
msgid "``401``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:62
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:76
# c75c3747b6ff40a4b23bada1ebe4ca7b
# 24ad3e6e3b65412f838468128acbed0b
msgid "|response code 401 unauthorized|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:63
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:77
# 3cebcb9f427a492f995ee23bcd053fbb
# 3466baf1c0f640b2a663a2071c8016b2
msgid "``403``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:64
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:78
# 5b88d916ab8941aeb37b20dc5bb098fe
# 04fa61972266448391096ccdc41c5b3a
msgid "|response code 403 forbidden|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:65
# 2516c897b7e0452aad794c13d044136a
msgid "``404``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:66
# 52ec60336e8748e2ab23c82cd2193776
msgid "|response code 404 not found|"
msgstr ""

#: ../source/api_chef_server_search_index.rst:45
# 4bd257913fa34079a1c53281bb750231
msgid "POST"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# dca2b9cb3b3047cd86c88a4d7906cbd4
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 34e469ace5c6490db4e746cd5f7cb52e
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# 255de86adda34e269bc2ab6389ef6442
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# c6021a852b3048b5932a1fbaa3939882
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:5
# d7c2be635349441488726a0975b60d63
msgid "The POST method is used to return partial search results. For example, if a node has the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:14
# b68532bfb4254c37bf8108c8c22cf8cc
msgid "a partial search query can be used to return something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:43
# 5ad73d7cd4a54035bf434ece639b1049
msgid "with a request body that looks something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:55
# 7a3c721b2813491cbef77e3639d28fce
msgid "The response will return something like the following:"
msgstr ""


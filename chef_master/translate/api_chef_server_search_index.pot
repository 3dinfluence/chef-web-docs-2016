# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-19 14:20\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/api_chef_server_search_index.rst:34
# cd0e513035d3437491983f05468c00b3
msgid "/search/INDEX"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index.rst:4
# 94d8f7242a65471f926510791767945e
msgid "Use the /search/INDEX endpoint to access the search indexes on the |chef server|. The /search/INDEX endpoint has the following methods: GET and POST."
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 69a5f93d647545dbbe7db1011a5ce5ab
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# dd180ca2c35b4d41ad5d65dac7c65d2e
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/api_chef_server_search_index.rst:41
# 315e0cf9dc224af598e89c7477f80889
msgid "GET"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:4
# 3febaebeefed4f639a152c43ee76879a
msgid "The GET method is used to return all of the data that matches the query in the GET request."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:6
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:20
# 06cd71c7c61c408dba673ea894bf68a4
# ea47c5da595b42f6abd661d00e572307
msgid "This method has the following parameters:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:12
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:26
# 0685746e1cae48f4bb1c53882f9c9915
# adff5286e1714f9a8b88ae4d7f4fe673
msgid "Parameter"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:13
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:58
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:27
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:72
# a2483c4f5994467e952d502077088814
# 1e45d73a24fe4b55b92be6df9b336729
# 62e3523d3495451ca12f7d1a6407b3b5
# e9eb37941bdd443a9d80f9f668b1e432
msgid "Description"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:14
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:28
# 65bade174ac34126bfcac0252d845fca
# ac99a3fafe164914944582580a0dcb9c
msgid "``q``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:15
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:29
# 72e75b8391cc4d2cb3b299beeca802e7
# 66fa12835e5e4e8897feecf91677633e
msgid "A valid search string."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:16
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:30
# 85689beb1f2e481797324256a4b60081
# 775b47f3725d4319847822996ec5ccb1
msgid "``rows``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:17
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:31
# 7aec94537ca746b3a15ff32dad3fa023
# 2b6ffd8b69b74ccd8435fcdf6efd7ae4
msgid "The number of rows to be returned."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:18
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:32
# 63ed2f6023d1445aaee7d67fe0497ac3
# 410c0ac429c747488c6e311fa47d5290
msgid "``sort``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:19
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:33
# 845622f82bd54ff4a1ee1cf73329e165
# 1767cd9f21784d478eb82255f1f2b781
msgid "A sort string, such as ``name DESC``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:20
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:34
# b62a9c9e71cb48269dba6e523b7e46ac
# 0807b873c65f40a0b25e0998ef180955
msgid "``start``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:21
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:35
# 0d068809b97e4839ba89fdc3815fcdd6
# 60295e098719428e892948e5c8f45333
msgid "The result number from which to start."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:23
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:37
# 8b316546d85047fdb9af85f115cd9a16
# f946927950fe4fbdb901b0f9d96e2624
msgid "**Request**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:29
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:53
# 9a86a8b3deaa4dc6b0946cf857c3bbee
# 20ef9811748540e6923326c62729ade3
msgid "**Response**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:31
# 73ec195c2d4c41cfae366814e3290b42
msgid "The response contains the total number of rows that match the request and will return something like the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:51
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:65
# 21f8cb44eb764c1696792e7dd98e6eb6
# e28ce2516f17404d83eeca07035ed16e
msgid "**Response Codes**"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:57
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:71
# ad1b658e38964c43a89b6f22a64f170c
# da46354d8bcf49838febe15f026b12b3
msgid "Response Code"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:59
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:73
# 68cd91ba522e4a8e90c7e058b6f3005e
# 25561fcce8c649ffa1a8ad4c1230e742
msgid "``200``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:60
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:74
# 7391804b335e44fd9c50e95362486015
# 53f376bfd9b64d8b9f5f5537287ee61a
msgid "|response code 200 ok|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:61
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:75
# 273733b8204a421f9c96c8c7ae5f67e5
# c8fffc3218d84a7f9ecb331ffca6a02d
msgid "``401``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:62
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:76
# 93d971b178984d3bb0bc25d46cc51b20
# 7169a8fc4b9144228ff95c69b22b1ec9
msgid "|response code 401 unauthorized|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:63
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:77
# 348ce267831e4622b3b721f94a9dc16a
# dfb24c2ca03b410caf1232d08f89d263
msgid "``403``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:64
#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:78
# b0d099ae5e47424f9836692db93d82ef
# 6549750e0ef14bcf84221df5dcc0fec1
msgid "|response code 403 forbidden|"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:65
# ab1d3aec43664824a1ea73fc5f2030dd
msgid "``404``"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_get.rst:66
# b464e5e672b14bd3bf6e33d6b9ace717
msgid "|response code 404 not found|"
msgstr ""

#: ../source/api_chef_server_search_index.rst:45
# e1c03d0f30ed4a269ec73a344ab07092
msgid "POST"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# b333c7268a9f45d3b4200204a3f16874
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 3f7af20a08f54044819d107d4507d914
msgid "To use the ``partial_search`` method in a recipe, that recipe must contain a dependency on the ``partial_search`` cookbook."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:8
# 23d01cf596884c9b9e9792d492797629
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:23
# c0a6f253ba064004b8ef4491841241f8
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:5
# ba8ca4b52eb842a4a596828f7647bbd3
msgid "The POST method is used to return partial search results. For example, if a node has the following:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:14
# a2b1d98d92624c03826f1b82a4442abf
msgid "a partial search query can be used to return something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:43
# 854e0035d66d4a16b601381429df3ba5
msgid "with a request body that looks something like:"
msgstr ""

#: ../../includes_api_chef_server/includes_api_chef_server_endpoint_index_post.rst:55
# 1d36012e3dc041deb909567e07ae1944
msgid "The response will return something like the following:"
msgstr ""


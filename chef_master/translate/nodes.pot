# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 14:53-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/nodes.rst:8
# bf934df4b7e24c69a8c97608aab6c1f9
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# f42989ad8dde4156a66fdc9f7e5e262e
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/nodes.rst:12
# a47fb695b76d40f8a305c3d65bbebef9
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/nodes.rst:18
#: ../source/nodes.rst:35
# fedf4fed5bb641559a198fa8bfe42c5d
# cd75ca67dec5404e852131998437a1c3
msgid "Feature"
msgstr ""

#: ../source/nodes.rst:19
#: ../source/nodes.rst:36
#: ../../includes_chef_client/includes_chef_client_run.rst:17
#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 758a31d4ce4d470aaaa77cca5ee71f05
# f8b5201f6f8a469ca754ef95c50e95f7
# db19f3aca6394a668ceb7015f22d16b0
# 6518c484305742508deaf766d8317961
# f701bff639ba47af80622603d6dd4b83
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 89a2e572c1be477c8360988bf293811e
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# ead49d08744d4d739aa66e444189fda2
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# b584acb410ea4cd6bf2c7011534d2b1e
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 5f44b51b54ef41ddb4b28fa7ffa4b118
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/nodes.rst:29
# 51e0f15e8f1549b3b8b66f427b45ea1f
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# e45e20f206c44bd8929817d3641c1062
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 84e17c67f0a640948b860b611db9f039
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# dc4f58725864406c9da1c883129211c5
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 803bd606280c47718b6697f8b34c60bc
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# cd5b24409c3d454abe088ae569043166
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 6f81a7bce3ac4851ab1cfae775fe3277
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 00b540830db643a2bbf87406e257dada
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# df63a0d369e7418b8c06ca50affa2a88
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# ac16dc4f5f854071a7db2ce7bddf6767
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 554131f51a464f54b1e52ca8ff77c80e
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# b36d357090bd4561b874c1a89eef574e
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 922278bbd54d4d74bcc0119c6004a865
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 6bd826b24c704423af238ef961bfea16
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# a30148ea99244d9b96fc20ade4cdb266
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# c8a6182b6e1b43aba67d62b1ec0c328f
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 1a3153903e1d43aab103d9c7828d3934
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 22933496178242c085cffc3ae5a5443d
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 0004eecf52cf4c0cb9c6207da01e0e43
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/nodes.rst:43
# 84f5d7d8c37146ad8647432db7fefcf9
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# 16ec6b2d17dd43bb8fe8e788f81a5cf1
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# bacb5136bf42429e8400ec71416ae938
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# d4bd3c82379e4ca69171f74eb42e61da
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# adf35d675550435b8e91b53688bd3eb3
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 40f5429c124143318e2c7547241394d4
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 089c6e40df56442486b227e46be22d56
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# b0a58a18357641f9a34f1860b1f10f75
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 12b80c0c84fd4db8867c3fb41c0c9610
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# e03ef27ca3604dfdb2426ac1024e0e9e
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# e31ed8c16b0c40b2b09fbbbdb4349a14
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 5150026ac28e47dd9438a853a101d1a4
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 8a7cb63609094c46baf60aacf22ce3c4
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 21f76e15746846a3b6782af6c7aaf5f9
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# c2ebf61b0cb645b6ab7216e55040e025
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# d0b2991598804d1999bf8c72987708ab
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# a46371f0bee545f88b83449c1178ba91
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 2708235cd0b14c78bbe7e91931789ccb
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and |ruby| classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 7deaeb790cad4ae8af0aa1bd279bc35f
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 4b97c696c00c4a96abea3df103577a73
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 4c008d50bc5a4db3be60a95fc1a91491
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# 067112f2e8a946808fa8976c1c82c9b0
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# 61c46738094a4fe1aed45771e22e44ec
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# f90f1f8bb02c4c1ba19ef197c19782e6
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# c183574c64b649b2bd49fdaf65bf1c3f
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/nodes.rst:47
# 226e3c8f63db4d5ebb4913fe2f0b9a5d
msgid "About Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# a8c149bfbfc34042a3f4a8e9c9dd4bfd
msgid "A run-list defines all of the information necessary for |chef| to configure a node into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# c7bbc5fd92cb49568d8d3a8a2931f8f7
msgid "An ordered list of roles and/or recipes that are run in the exact order defined in the run-list; if a recipe appears more than once in the run-list, the |chef client| will not run it twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 32fb23fe9250408e908a4f88ef6553cd
msgid "Always specific to the node on which it runs; nodes may have a run-list that is identical to the run-list used by other nodes"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 0e72cda5d5454fe0a3fe33250aa82704
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 7bc11b66ecf44538a2c4b81af7e801c3
msgid "Maintained using |knife|, and then uploaded from the workstation to the |chef server|, or is maintained using the |chef manage|"
msgstr ""

#: ../source/nodes.rst:51
# 1452c932ae4c41d28eeab18a80d14438
msgid "Run-list Format"
msgstr ""

#: ../../includes_node/includes_node_run_list_format.rst:5
# bb77211cdeb94e2bb2141b135a774da9
msgid "A run-list must be in one of the following formats: fully qualified, cookbook, or default. Both roles and recipes must be in quotes, for example:"
msgstr ""

#: ../../includes_node/includes_node_run_list_format.rst:11
# c83109e23c4e464da09fdab39aee8bec
msgid "or"
msgstr ""

#: ../../includes_node/includes_node_run_list_format.rst:17
# ea70e6a9ead1470381b86dab7e263016
msgid "Use a comma to separate roles and recipes when adding more than one item the run-list:"
msgstr ""

#: ../source/nodes.rst:55
# 8d3aadf3862a4cf1ba3e6af41bfa5d5d
msgid "Empty Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list_empty.rst:5
# 8b60943ca9cf49ceb2555ef7606dbcb0
msgid "Use an empty run-list to determine if a failed |chef client| run has anything to do with the recipes that are defined within that run-list. This is a quick way to discover if the underlying cause of a |chef client| run failure is a configuration issue. If a failure persists even if the run-list is empty, check the following:"
msgstr ""

#: ../../includes_node/includes_node_run_list_empty.rst:7
# 23521ce732544f85991e91698bb21ea3
msgid "Configuration settings in the |knife rb| file"
msgstr ""

#: ../../includes_node/includes_node_run_list_empty.rst:8
# 2114477828c94d1086da6840b4054fc0
msgid "Permissions for the user to both the |chef server| and to the node on which the |chef client| run is to take place"
msgstr ""

#: ../source/nodes.rst:59
# c03e15525856475797fd4dbf457418e8
msgid "About why-run Mode"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:5
# b18902c2189b48628097eeee2b71ea00
msgid "|whyrun| mode is a way to see what the |chef client| would have configured, had an actual |chef client| run occurred. This approach is similar to the concept of \"no-operation\" (or \"no-op\"): decide what should be done, but then don't actually do anything until it's done right. This approach to configuration management can help identify where complexity exists in the system, where inter-dependencies may be located, and to verify that everything will be configured in the desired manner."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:7
# 3bd2d678286345768a42f769348fa8ea
msgid "When |whyrun| mode is enabled, a |chef client| run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the |chef server|, rebuilding the node object, expanding the run list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection and does not include mapping each resource to a provider or configuring any part of the system."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:9
# 2c4c0c8d6eb84b21a05e406e0f03288a
msgid "why-run mode is not a replacement for running cookbooks in a test environment that mirrors the production environment. |company_name| uses why-run mode to learn more about what is going on, but also test-kitchen on developer systems, along with an internal |openstack| cloud and external cloud providers to test more thoroughly."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:5
# 2400b7bc4653454f8e5912f913330c7c
msgid "When the |chef client| is run in |whyrun| mode, certain assumptions are made:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:7
# 79243a739a4841e99896bec93f86ae22
msgid "If the |resource service| resource cannot find the appropriate command to verify the status of a service, |whyrun| mode will assume that the command would have been installed by a previous resource and that the service would not be running"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:8
# 4854bc89fafb48ca8239e9a2876f9047
msgid "For ``not_if`` and ``only_if`` attribute, |whyrun| mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:9
# f64de2658e4144a4908abf7b4433eb25
msgid "The closer the current state of the system is to the desired state, the more useful |whyrun| mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than smaller run-list"
msgstr ""

#: ../source/nodes.rst:65
# 61d8f8363dc84707bc7f24f802539373
msgid "For example, the |resource service| resource can be used to start a service. If the action is ``:start`` and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The |chef client| cannot check to see if the service is running until after the package is installed. A simple question that |whyrun| mode can answer is what the |chef client| would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly."
msgstr ""

#: ../source/nodes.rst:67
# 594eaa269c014b7682eaa223e9c8bd6c
msgid "For a detailed explanation of the dry-run concept and how it relates to the |whyrun| mode, see `this blog post <http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/>`_."
msgstr ""

#: ../source/nodes.rst:70
# c9f8d3a5dd654bd091eaa49a7d4b78bc
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 3b43296ba8f94a8aa9eb41a35333fb2c
msgid "The name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# c004422464804b389f118446807afb62
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 635de16ea43543b38c48fd9a3593d7c9
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""

#: ../source/nodes.rst:74
# 7b8cfc01afc1438982b81e4935964f8e
msgid "Manage Nodes"
msgstr ""

#: ../../includes_node/includes_node_manage.rst:4
# f01974009929445a98b92a3ff5a2a35a
msgid "There are several ways to manage nodes directly, including by using |knife|, the |chef manage| add-on for the |chef server|, or by using command-line tools that are specific to |chef client|."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:6
# 0b42e864f8c7446683beee086ada15b2
msgid "|knife| can be used to create, edit, view, list, tag, and delete nodes."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:7
# c8d478328e144b1e9cbbde488b39ddd8
msgid "|knife| plug-ins can be used to create, edit, and manage nodes that are located on cloud providers."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:8
# 32c714a927ea4028bcb83ca35032405c
msgid "The |chef manage| add-on can be used to create, edit, view, list, tag, and delete nodes. In addition, node attributes can be modified and nodes can be moved between environments."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:9
# b3077727152344fdb8f35885d58cc7bc
msgid "The |chef client| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:10
# 3f924aef5db3410685c14efd1eed4d60
msgid "|chef solo| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:11
# 3609040d1ada4720b1b3027204170523
msgid "The command line can also be used to edit |json| files and files that are related to third-party services, such as |amazon ec2|, where the |json| files can contain per-instance metadata that is stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../source/nodes.rst:81
# 0810b2a5f8824398959c34e1b2da64a2
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 0f8cb2785c564b98a70e254b391fe49a
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 5ed8aad5168d41fbad0d3ab41fce310f
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 49720f347217442c979307c4a7e4bc67
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 4f6bb4aac74d4d44834c30cd7af7bc7f
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 53fa892d965349b9862bf54f7e783774
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# b3290b8f6f8a4feaa0c42b1cb67e6e51
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# f945e91538874c009744cca98631305f
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 65f0cd514dbe4ea0a41240b4f59ee19d
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:14
# ef6859746671430cb84844733308fbab
msgid "Roles"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:15
# 8bedabec55d64a5da71ea654c8b229cc
msgid "Environments"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 6ff834b0edab4fcd99b2e53440c0a058
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# ffff414c8f41433bac7b6c8b1eb673b1
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 28c4990fa85a44ffa90f850f1f2bf4b3
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 06dc7ec49cf642aca450d1b905ef2da1
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# d2dd80e970bb4d01b8296f552856f6ab
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../source/nodes.rst:88
# 402d75a0969a458d87e8883b500d2176
msgid "Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:5
# f3c4de3c82f64ee2916d7dc7b2bb948b
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef client| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:7
# ef1aa5d22e9d46448463090f68aaf224
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:8
# 9f0e0ab7f1134becb3e7626da14fa10f
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:9
# a77662f6ab89457d9f83d8d3e6d358dd
msgid "anything that may need to be persisted in node data between |chef client| runs"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:11
# 6128863a6c25439287952553de3c3367
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:13
# af3692bd9ef143d6b9920fab1f6c2693
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use_unless_variants.rst:5
# e77e1a355a1244c39b4837e5a950ef13
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. (``normal_unless`` is an alias of ``set_unless``; use either alias to set an attribute with a normal attribute precedence.) These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/nodes.rst:93
# 34ad74da98aa4dbda6b1918a921cea8c
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/nodes.rst:96
# f2ffc2bce4a3423c8fa423ba51f9366b
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# a0e5f514e2004e40afd8ced0ff289538
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 1226767a544e4e27bf3d68d4832740ae
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
# 26cff8f254b649ae9fd366461d2e40ba
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 14df623e9675444da68252524e3b0d61
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# ffa6691d7b78401ea4ee31be0ef3d43a
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 698107fc38814728837c491690135b63
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# f1abaa73fefe4a2794dd0b6c4600e3bd
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 7fa214bdf9004b7fa6fb4da3c2a257ff
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 693af83abfa84d3ca1c59a601f57ddc1
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 782e021c89394494b937759bdeea8cd4
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# cb1b3cbbe96f4ff2a78722a81fc49570
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# f326e400049b4ce085e5c0ee98a02088
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 66645a538ba3480d99059fb69d8e75ac
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 0f1b03de3f0047daa38282a72b6a7927
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/nodes.rst:100
# 622faf5868d84e0d95f7ad332e76a24a
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 461ed2ab69fd41fd80e91da5990ca89e
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/nodes.rst:104
# 4a503cab068b4c40a0b6138d105409c1
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 283a46596a7843abbb09d10dd18b14eb
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 5ab4a35417f44e66b5de7c7bbd7e24c8
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 4ba8268894874485b0e29387961a642b
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 245e2b176b4d4bc298a9113863dde964
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 817932136a7b4ffcb32a41893aae1a34
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# a7222f1795ba44b68abd5e06e639fc00
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# a2e75c212e204208a91d23a200bd8a48
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 55011ac6bef24f7fbb3836899d24ea77
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# fc8e6e57624c492196f71bd6da3d4396
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 2b19a9172dd540669b247e10dc439c7b
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# b31d279f99ed4f8f8dc67e1d11879da6
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# b809bd83fdb443cf9f32597f3c9a1843
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 1441a1a8d52048b3bba95e2d6828919f
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 8f2b8037d14342f5b1e3cd687ab2d530
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# b5f08edf477447019d0fed5cc454c9dd
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# 9d859df9ac5d469ab529fdc7193cad69
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# ce54c4a496bf451e800c7c12bd9cabb8
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# c0be0299947848ecb040f0c5a73efb0d
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# a9387d0264504e89a3166e8afcad5bd0
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# aa484e1ceda84d73a06aa404790c2c67
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/nodes.rst:108
# bcf1a661eb8b462b8f4214be721f7fec
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 5de3cd5cb1874dc08c0f38610582b878
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 099c5931122f44c5860670b3fd7b8a41
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 53638f025fac4da2a50ac1bfa0b1a786
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# 689a3ba954f14e6c955172a35902d4c4
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# 98e652ad2301435b95cd4fe7b44606e8
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 2598eefeea0b4efdaaba434e908752cb
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# c2f657e11caa4ecfbfb03a63927da994
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 2ea86394cb9446b09373cdbbf196e424
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 06f4eaf64788450eba75c83008a22302
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 4ffddfea16a247b9be7dc5b3fd984ee4
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# c33b83827ba14332b82113842fac0b1b
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 8afda41ad13848f3a9d34c4f05569e40
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 3316563dbbb74e68a1bef9ebf1b817bc
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 7ed41f7bee084a5f9455a6c48a3032c0
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 9bc82cc973d746e7a67e24c270623d79
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 147f33d882c5415cae0c70c80633bf7b
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# de36f985983b4edc82176142d26c1d2d
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# cd514fdf94b848b2a80a1e216a7dfe0e
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""


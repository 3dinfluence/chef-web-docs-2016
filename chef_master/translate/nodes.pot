# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-11 21:18-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/nodes.rst:8
# 990537d2e7874b868e47f1f5cbc74973
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 55c59df862e24a82bcde6db00c26647b
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/nodes.rst:12
# e1f3d092713a498cb06a1cff4433229d
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/nodes.rst:18
#: ../source/nodes.rst:37
# 96a5c46444a248429906f406dd69b64e
# 78b8ee8a22564892a9a584110114e2e9
msgid "Feature"
msgstr ""

#: ../source/nodes.rst:19
#: ../source/nodes.rst:38
#: ../../includes_chef_client/includes_chef_client_run.rst:17
#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 066cf6b41fc946fcb56b33f3c185b3c3
# 69c888503d394079b8087d52ed56c3ae
# 21b15f7d661d42cbb56cf91eed0dfc8b
# a4e23194287d432b9f6c8cabeed4f58b
# 895c29e8b58c4c008d0741f9930eeae8
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 48de2e4d66b44937b602d0310e3c13ae
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 4673e1f7e4cb4bd4910f3df5a9565ee8
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# e8eb3401af7349898a2d0efecadc109a
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 50edc7e7ae2a429281d63c4b7ecc0a22
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# 33564074756e42399ab840c22d142953
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/nodes.rst:31
# beff6703a0794eb9b10fccc8342776dd
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# f83146f088414c4a8970d097ea7576b5
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# 677de5b1baea440db20f4f75434ac8a6
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# aa0e53279c584d7db67e196c6ea2b70c
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 1367e8fb631544208112153d609e1f57
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# f514e9af46c4401594be91b2740bc356
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 1cf8a59cefd047d08ce5bca7c8d80d0b
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# c9bbc67a182742d8becacab900f60942
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 0220ef7bd0294ca189cb1e7d2ce6a00d
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 121d167d10d743a2a8428baa5dacb956
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 12439d0658244608b581b207c5388421
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 93bd102976b14790b5aaa27d45fb500a
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# f44017c91d9b4bdf91d70e3d51f030ac
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# c180cfeb5ad747889e616d1a0fa715ae
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 3d1b28e89bd04a2eb930ac226ae2a1ac
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 36aa6b1889ba49a6b8049ade53fc7e95
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# da42a54d4d8e46fd94d4b6e8d635a07f
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 821b717d85cb4f69838262132e5a3c99
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# a158221922af41aeb4dd44e1494d3c22
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/nodes.rst:45
# 19912c07af384968a43e2768f305f3af
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# dcfa150177bd4f7d9bac066dfb4ab2f8
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# e87bdfa7b8d648f5a919ffaa7c2ef281
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# f0b7f7b439c649bc99cab968969d92aa
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 5929208b576d42ca81b6a814c86c2e07
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# e20458d6356a4d3eb85250339ca7cfab
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# 86fcbb475e164e9aa8f6eddb05cea195
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 5156065f1be144c2b236976c508649b0
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# babf570e73094efdb0cba22c0865ce84
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# e03b7ac3aa304bdf9816bb2cf411b369
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 416965f886414ffca3b5f8f984bb2b2a
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# d29282df32e2400980d1c29cb317ddc3
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# fb1f26516bc0459886397609de14fafc
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 05f86b7a4ac642f2aa5102e4d2ca3c2f
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# b197807db1d44b22a43579ec26d01a83
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# da0987c4ddb5479492299d9e5a0a278c
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 416654e5d35d49d78af2277dda6833d5
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# ed5a669ae2584468b36126afb912846a
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and |ruby| classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# bdbded09613e48aeb132cf90b3bf6416
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 1b463f36a6d240838b7ef64d121f4d84
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 791f84bee73f40e3a4c1306f1f8fa42b
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# a790c88aea5c4e1691d6672553b1c246
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# 7fcdf6f8c2e944e38be8cddd0ca793ed
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# 7504d57827344b958244ea3aa9fbf189
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# 8182269e9b654bc0ac01a8bff71a8867
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/nodes.rst:49
# 77ec2d42bbaf4e7fb036d21faf100a15
msgid "About Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 93b70b816eb34b5aa34d9e39ed7a572c
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 02d88d1defe84645bea35efe20c58c86
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 24399aebc23744079241c88584e17338
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# 17aa41b6ec924f9287c5a035b6933d40
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# a0f15bcbd36c4d389f24bf1f52c97340
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 1a19b6860dec4645bef129e35aaf0b3f
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 21a5824413d0492dba50856dfd45986a
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 5d421fb8ed9e42d7b9c62e3dfb68388e
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 154b903dfd09435ab16b274ae06a1efe
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# e42cfb9ffdc844308357d8822140b183
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 289fba7f6f8444198693b56e3bc37fa0
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# b3095a6c652c495f9d799b37e9967e8f
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# d935757b4e0a40fbbeac39dd1d901be1
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 81cbba7e39214cf48de1aa44e2b60df8
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 26150328b1a44cdaa2fadf07bd750a84
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 1b9448e104054ef68d0fe34b0b226834
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# a7e326008ace46b08f478165f3af31c6
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../source/nodes.rst:57
# 0874fb4a31bf493b833dca7e9509472b
msgid "About why-run Mode"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:5
# 18e857bd29c3458ebb4941737e0fb434
msgid "|whyrun| mode is a way to see what the |chef client| would have configured, had an actual |chef client| run occurred. This approach is similar to the concept of \"no-operation\" (or \"no-op\"): decide what should be done, but then don't actually do anything until it's done right. This approach to configuration management can help identify where complexity exists in the system, where inter-dependencies may be located, and to verify that everything will be configured in the desired manner."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:7
# cc0c8dcc30fe4b9fa904f660a2cd8152
msgid "When |whyrun| mode is enabled, a |chef client| run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the |chef server|, rebuilding the node object, expanding the run list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection and does not include mapping each resource to a provider or configuring any part of the system."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:9
# d3e565fc4ac54621b3aa5ec24747385d
msgid "why-run mode is not a replacement for running cookbooks in a test environment that mirrors the production environment. |company_name| uses why-run mode to learn more about what is going on, but also test-kitchen on developer systems, along with an internal |openstack| cloud and external cloud providers to test more thoroughly."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:5
# 8b158f2b17c34eca966c456b88316aaf
msgid "When the |chef client| is run in |whyrun| mode, certain assumptions are made:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:7
# 9e1ac5bce57e47da94d0bcc606dda467
msgid "If the |resource service| resource cannot find the appropriate command to verify the status of a service, |whyrun| mode will assume that the command would have been installed by a previous resource and that the service would not be running"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:8
# 4396f8570af24421b9381bcc9cd2ea8b
msgid "For ``not_if`` and ``only_if`` attribute, |whyrun| mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:9
# 6493c25f893e45ada02f6b6fd12a4514
msgid "The closer the current state of the system is to the desired state, the more useful |whyrun| mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than smaller run-list"
msgstr ""

#: ../source/nodes.rst:63
# 4370df5e8c4d46989e0b7cc7c1b3fb3d
msgid "For example, the |resource service| resource can be used to start a service. If the action is ``:start`` and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The |chef client| cannot check to see if the service is running until after the package is installed. A simple question that |whyrun| mode can answer is what the |chef client| would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly."
msgstr ""

#: ../source/nodes.rst:65
# 41b2a7dd072f4eae87b45b9d71496e19
msgid "For a detailed explanation of the dry-run concept and how it relates to the |whyrun| mode, see `this blog post <http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/>`_."
msgstr ""

#: ../source/nodes.rst:68
# fd53a023091b45aa9bea9b9773adc6b5
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 8feabd11de994bc0bd7441523fc13e70
msgid "The name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 0e569cb66fb14a109f89e4b0dc0e19d2
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# fe70bbcc724542888005316846f319b4
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""

#: ../source/nodes.rst:72
# ca48f7215ff94149b7b3cd65c3aa7741
msgid "Manage Nodes"
msgstr ""

#: ../../includes_node/includes_node_manage.rst:4
# 0bf13a8ba4994c7288cf58568092baf2
msgid "There are several ways to manage nodes directly, including by using |knife|, the |chef manage| add-on for the |chef server|, or by using command-line tools that are specific to |chef client|."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:6
# 3495f963d0e34c6d99c960e25c228867
msgid "|knife| can be used to create, edit, view, list, tag, and delete nodes."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:7
# 4d406bea14cb42adb7465a2944d83b28
msgid "|knife| plug-ins can be used to create, edit, and manage nodes that are located on cloud providers."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:8
# 6f4145abd1824c909c274cd948047e8c
msgid "The |chef manage| add-on can be used to create, edit, view, list, tag, and delete nodes. In addition, node attributes can be modified and nodes can be moved between environments."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:9
# 4ff39c7465234352b00dbd5f30c776d1
msgid "The |chef client| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:10
# 984ecd7e5b4d4f3b90c6692166e00bc2
msgid "|chef solo| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:11
# 40bac040bdd549e9817c34b0b777f6a9
msgid "The command line can also be used to edit |json| files and files that are related to third-party services, such as |amazon ec2|, where the |json| files can contain per-instance metadata that is stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../source/nodes.rst:79
# 2b828bc57cbe4e1b925674e5a306e340
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# d004b9640b8a47719405db2ff5bb6b3b
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 6f8d9cc1d122485eaa9ebc7ee94dcc8f
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# be9dfe748e5a418f98b7c737ff26d055
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# ac8c92d37c634f118a21e81ebe5189cb
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# d2b8cdb292864a31b6b4bb4a22473c94
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# ff4e68bdb3704dac90bb1e7393242ddb
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# a7439eb3561c4a7ab1baf2b437e65cfe
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# fe584bdc9fde4107b1bc2f4f51d3c10f
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:14
# dc97a1ddfc9e4b6aaed767c5e37cb1c4
msgid "Roles"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:15
# cbfef4120616492daf96044b23cc3b6e
msgid "Environments"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 0337c74410ca48f18917036d3aa9cecb
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 0c11a1da197b4c929ce1e05e6ac51aad
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 4d3a7b66cbbc4e389f4591a2742cef28
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 212f8fe41b1e4620b7f21d5dc0fdd630
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 3f867a27e6dc49909c3a6156c7000a07
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../source/nodes.rst:86
# 10929e5e5b6d4e8f87b1411d5a6e5637
msgid "Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:5
# 9af78712b65248aebfb941f93b6cbbcd
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef client| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:7
# 7bd93fc004a04f2381cee41e7cb8ed8d
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:8
# e5c5e81e6aa94d6481bc7857b1d60ec7
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:9
# a11d8d794eb348f28ce201243f6c4be6
msgid "anything that may need to be persisted in node data between |chef client| runs"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:11
# dbf53c30dffc4af0acd7657faeb52821
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:13
# 27a64c90cc1348baae7a4b45bf57c05e
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use_unless_variants.rst:5
# bee2ed2acbf74ef581b60fe47fbf6344
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. (``normal_unless`` is an alias of ``set_unless``; use either alias to set an attribute with a normal attribute precedence.) These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/nodes.rst:91
# 2542d6b3e146406393efbd90782e43ad
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/nodes.rst:94
# c12a83a381db4b3ab4b89a6f59398549
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 850bf0b4f6cb4bb0a101f4641a10f887
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 2e1f4a69794d45d4bbf63dd2278d72d9
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
# c774621630b848179d29dc4030e1e981
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# e647db1351864cf9a1440d9222de0710
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 49eabf71d8814be89ea4ad601fb69b67
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 24baa1e46180494d9c9ee58106f61f13
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# f542beab3a34452e9ee24d01fd0732bd
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 184d7e2e9f3f492bae278957c02cad33
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 17a1fdb6cbe648809c9626f1af977a8c
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 85ff29287667454184859b74c4811abd
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# 43a418ccd0104161aada26e254e768c4
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 63e4373ee1a74398a9e7995118485a85
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 65dfa95a29cf4b77a68744764185bc7e
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# 921ac6e22e8b488ca80d0b8726077fef
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/nodes.rst:98
# bc1323916ff54dd4a345c1c195cbb934
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# f026f7bba7e24c99b22b26945972bd1d
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/nodes.rst:102
# 6d5a8d26017c4c60a8f202de4d5372bf
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 97ac8a7319634e57af8a41eaa5963cac
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# b8e981dd691a48879af30cdef5b16d3b
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 79d1f74ba6be43e8af0773e8a69b06a5
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 86b6a6b0202b49d0a820a28e8412aab5
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 5105aa59d6864020bd377c8dbc6d4d20
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 6fa4a0a42b194bb98054f1a3df9946e0
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# ce1951ab2c444db8abb637a45c4ffe42
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 339289aba8294c5797ae7f1297fcb8f6
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# feff8dcdca4d4708aa2d5cf34f1e42d3
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 456c6a4bb71b428da23a112405eabfc6
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 17c742d801af40bb968624aa77d0d619
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# bde11ee2530348ddabf26185c393c7e9
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# fcda677a7b344b97879d17fed549cab2
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 67696d031f494da9b081e7cd2bc6fa82
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# 4f840a02a55d4b3d9b0cee9129c19934
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# b3e47d4e90e84689a4223ba82ad8c80a
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 81f5d8f857b84d0a8225adb59b1222db
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 951c99896c3540d5b0d5fe52e1d8e650
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 347d410f3c9d415ab4e7a4033350b214
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# dab094c904d84ea78602439853ac3433
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/nodes.rst:106
# a6d6766a52a0484697ef0fa4dc133849
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 6aa04456ade842e39c89c73706bf2588
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 4ea138f572bd43da85a596ac7d8f2e03
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 62685eab51d547cc8af9a2b92abb3012
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# d901e36d58ee453198ec4b9678f23126
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# c08853caee31425d889594e91cc5e6be
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# e91f6663d43d46ea9b9393ace9712727
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 2c97bc11b1874a849291d3b8f82824b3
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 678cda14315945a2871903eb82b3133c
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 5f8331d0020243d188c8be6e79a8a7bc
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 186248c8b0b84dbcbc3c940ff03c7526
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# f09e35a926d749b19267bb9085c7b658
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# b5173acd225c4dad907f9f1d720254e9
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 41dcf787fcfb4a819af99ba35e419900
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# 5058c1b57e214946989de50731222100
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# eec4321e105b45a184741a665f2a08ea
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 4108794d0f61435091b3098cb61b181e
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# f178c7114ac844c980d39afe1dec74ae
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# 09e361c0cd464b18b269f7b57e70951f
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""


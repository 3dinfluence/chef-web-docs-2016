# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-28 12:43-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/nodes.rst:8
# 1385eb55c669442d9600217b09f26848
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# e61311b6c3cc4a3086010d187fc8985b
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/nodes.rst:12
# 7eed0b9010214171bf6d3aae95117325
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/nodes.rst:18
#: ../source/nodes.rst:37
# 7f27c0860806435d84ef28826aff4a91
# 1dd7849dfef04830b16291cc2b1d184a
msgid "Feature"
msgstr ""

#: ../source/nodes.rst:19
#: ../source/nodes.rst:38
#: ../../includes_chef_client/includes_chef_client_run.rst:17
#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# 752321de0f2543bd9cc2a1e3dc86b949
# df83f8f44b0048159824b96b0d9f71e2
# ddd9f0072cf845f1a99a232efcc680b8
# 43a705c8003248beb4c567e9977e81e2
# 6054d13866fa4618a7945a1e25cf9fcd
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# a7a3e4783f414a7bbb8b0f60cc4668e8
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 3c18b667b3004371b8f1dfd73eafd9cd
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 7d385c52abdc4f9eac6f0c10a731ec67
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# 83ad296ce77f4d998f163f6af714a64c
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# a938ac47ed754d52aa285916bc4c97fe
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/nodes.rst:31
# a2c3204e88624d3aba95209b465ff6bc
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 015125ab621b43808677508404a2f2e9
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# b84e1247fe5743b19d43fffd127d6cdc
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# d013eaaa7da44a49b83c410d2b999299
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 254f406f285c4c0a879e3877d514f2f4
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# 550adc2ea25742e6a042e58b86029794
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# b9ad67d96c254c06935da67996ec4954
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# b097e583db004a8199ab4886c46c3a4d
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 187a0c9001814564ba879338c8246f9d
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 752e8e6224094f75ace8f2e8af4d1d80
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 1f473ae57aa04cbf876b4bc29e7d6d21
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 9a0d7aca72414abd8d6b1b785c772491
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 32f7a542f54742e083736d4852571af2
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 4e1beafc62fb46b1abf87efa3796a729
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 303aeebadd5b4ca79e55e429c8edf83d
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 2a626c56cf8c4b66bb91a3622d02d809
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 6ed5c54e04f24872aa8100241f02836c
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 6592564068df4517a2c25ce1f6b688e6
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# 048bec5ce3534805a6e9ce3ec669ffb4
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/nodes.rst:45
# f4e82965035e4d759d0ed6f96ba97c43
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# 6de3795750b24733ba804b6d6870d8b0
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# 3b699f38058e4e569bcea06461aee8c6
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# 47956f459699430cbb1539b30e0400c1
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# 7c4098ab417146c3a317ae785cde9ea6
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# 922fdbd599634ad2bc295ed5b8260f1b
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# beec20eeaeb44280ad06e03ffb896c39
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# e9683ed751bb4e30920a2cf8580bcae7
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 5ed43d89bf8c43a3a482787fc1ac3b2f
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# eb99e3a1fccc44688f23554a7e4a49e0
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 071b4ec568d947699f43a6cce490a4c1
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# d38aebdd8d654ad49a8b1abc40fafb4c
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# 62213b5a1ad747f88fc88d250382fd42
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# cf126bcaf7334ef9b6e295da0eebdf5b
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# f94c7d9a845a474f9ad28fcfd2a6812a
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# 84bfcb1e6f0546319886657bb7cfb21d
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# 5d7411805222440a9b2d8e4960619587
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# c729ab0b34f24c3e8d4afefb207d6843
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and |ruby| classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# 14a2630ce8484e7b94336f26fa4309a5
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 0f2946dcf1334275a5255f3c7b2d64d0
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# edbdabedc7904973baf1d10694156877
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# cd9ab278fa6f447c881883e9d4b63098
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# 8b5abc58dc7b42bab8f92ccc05ea11d9
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# 4b04ed4cf54c469d8ccfce2b6a9601dd
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# a45c2a7e023045c19a45019cace3726c
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/nodes.rst:49
# 725442289ffa4d7191ebe52f0ad17e0c
msgid "About Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 9f2777f810ca4f76a9ab3a92fb6b6493
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# c333d27b289f44dd869a4756066e71c5
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# f1c1151857d145839f99be12c1902830
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# eda74372d74b41fc9a097bcc58c2ae46
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# 128b7becefbd40bd818e89af8a3a9d53
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 0a863c87de29403a8fe5e82111424256
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# cb4ddede3ac248fa953002f97ed17470
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 21c8da414eae4e66aeca5c120865d1c6
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 0921c1738b084ab89f7e51f8471d4d98
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# da0f1af373294fb4a73749a0a262dafd
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# a609cbce72a04215bdb125027801c748
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 4cefffefdeb2449bb669557f06497d7f
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# aa480a13e52d41ddb3dec0061a9c539b
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 6fbcb5e91c5c406ab7765ee90e36553f
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 32b91e80a02f4d46913a05d58d5b8b81
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# fc2103b5c11449638e0184f76313ca3c
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 92e129f9774f481293ff3d8a9ee0adaf
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../source/nodes.rst:57
# 421800d8706f49a5be18fb528f107b53
msgid "About why-run Mode"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:5
# 34da2994b2a84948a725a3611ceec9bf
msgid "|whyrun| mode is a way to see what the |chef client| would have configured, had an actual |chef client| run occurred. This approach is similar to the concept of \"no-operation\" (or \"no-op\"): decide what should be done, but then don't actually do anything until it's done right. This approach to configuration management can help identify where complexity exists in the system, where inter-dependencies may be located, and to verify that everything will be configured in the desired manner."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:7
# c9d3c603521a4d4eb13f5a7293c9c7c1
msgid "When |whyrun| mode is enabled, a |chef client| run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the |chef server|, rebuilding the node object, expanding the run list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection and does not include mapping each resource to a provider or configuring any part of the system."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:9
# bb50cf308a414b4ababcdcc38f508e46
msgid "why-run mode is not a replacement for running cookbooks in a test environment that mirrors the production environment. |company_name| uses why-run mode to learn more about what is going on, but also test-kitchen on developer systems, along with an internal |openstack| cloud and external cloud providers to test more thoroughly."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:5
# f586d226f5d54e949dba43ac4187c68f
msgid "When the |chef client| is run in |whyrun| mode, certain assumptions are made:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:7
# 4029db95124b47aa882f84e5a780b0b9
msgid "If the |resource service| resource cannot find the appropriate command to verify the status of a service, |whyrun| mode will assume that the command would have been installed by a previous resource and that the service would not be running"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:8
# 446a0e82163c48cba074c1dacb70d164
msgid "For ``not_if`` and ``only_if`` attribute, |whyrun| mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:9
# ad58cad2480447b6b886e3505d170b31
msgid "The closer the current state of the system is to the desired state, the more useful |whyrun| mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than smaller run-list"
msgstr ""

#: ../source/nodes.rst:63
# 0593983ad5cb46b9a18039f9c65dd7be
msgid "For example, the |resource service| resource can be used to start a service. If the action is ``:start`` and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The |chef client| cannot check to see if the service is running until after the package is installed. A simple question that |whyrun| mode can answer is what the |chef client| would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly."
msgstr ""

#: ../source/nodes.rst:65
# 42d28d2bba504fe2a4025e227a613d35
msgid "For a detailed explanation of the dry-run concept and how it relates to the |whyrun| mode, see `this blog post <http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/>`_."
msgstr ""

#: ../source/nodes.rst:68
# f2a7c3daafe8481ab4c03336f5aa0d35
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 67f328ece22d4ae98c827bfb431d3e3b
msgid "The name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 4b4194c8a2f54a8fbdcca095cded6af8
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 6f609f9b395b42d497d23175f3aec3e6
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""

#: ../source/nodes.rst:72
# ec22c041cec94f339586698d12c79922
msgid "Manage Nodes"
msgstr ""

#: ../../includes_node/includes_node_manage.rst:4
# 655cf427be304645820c8f67fd3ca37a
msgid "There are several ways to manage nodes directly, including by using |knife|, the |chef manage| add-on for the |chef server|, or by using command-line tools that are specific to |chef client|."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:6
# d24b8754abb3468c9bb150651934fdcc
msgid "|knife| can be used to create, edit, view, list, tag, and delete nodes."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:7
# aec3796b589044058e44cfd0ac72a3ad
msgid "|knife| plug-ins can be used to create, edit, and manage nodes that are located on cloud providers."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:8
# 81353985ec8e4456981ee90e554666a1
msgid "The |chef manage| add-on can be used to create, edit, view, list, tag, and delete nodes. In addition, node attributes can be modified and nodes can be moved between environments."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:9
# 811ad6af423b427797990891bc834aa1
msgid "The |chef client| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:10
# d79a40d8e7d1432a86481a81c1a3aec9
msgid "|chef solo| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:11
# 705f08fe8af04a4a937a217adba2a706
msgid "The command line can also be used to edit |json| files and files that are related to third-party services, such as |amazon ec2|, where the |json| files can contain per-instance metadata that is stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../source/nodes.rst:79
# 5877cf7cb121452f856e8031bd9945f4
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# c8489f6189aa4a0d8346c74cff88ff24
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 02d628a5d0bb418794d24b2275acae22
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# 1cc0a45165094e4282490316f3cc5a4e
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# b475b42a73844c38820693397e1a5f11
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# bae76fb58e444427b1bd6cc50efcc289
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# e31a6cabc925428fb879654a15d40f8e
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# daaa6548ced9409190c196197a8bd31b
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# c664cbb1ed3e4fe090fe103ad1a74e46
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:14
# 362c4dbab5eb4987a0e91cd1d335b023
msgid "Roles"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:15
# aae47be72a994c9994f287851987dfe5
msgid "Environments"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# a99228f542e0422688ff484b7def79d6
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# b2666f5e7fd74167bdd5258cb74c3e17
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# fe93eb29b6374de0bf8d6c6677981168
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# d0d2066e0fc148f4a4ecdda13c4849b9
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 69405dd5a5b74e14a741ae85e51b556a
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../source/nodes.rst:86
# 0e2b05c6277f49f0bf34672abada549d
msgid "Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:5
# c7d964bebb394419a082355ea783f19a
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef client| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:7
# 5968b2af9e274c81b14eb80757f89af0
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:8
# b196152ae4154caf8f57e7fef1d0078a
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:9
# 50365a1e6b6b454387edb469573849f3
msgid "anything that may need to be persisted in node data between |chef client| runs"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:11
# dbb1beb4708f427cb750dab00b848d89
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:13
# 3fa8e03b64414b48bdd107b482b0912f
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use_unless_variants.rst:5
# 438bb8d56d7a41b4875274aa9e13ff81
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. (``normal_unless`` is an alias of ``set_unless``; use either alias to set an attribute with a normal attribute precedence.) These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/nodes.rst:91
# 6e763af5239741d5a72deb24e320e87b
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/nodes.rst:94
# ba6759fdaa894db0bf04776400788d2f
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 4f17f0257fa341da919bbd7bd5e6b8a0
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# df962e7afbfa4e7192d0c42e57914664
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
# e2f29e79328c401c8ea77bf30d6397cf
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 820cc6b0a4e64faea2d138994b1186e7
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# d34844d5c6f347bd8f256d1289d1106d
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 8eac8d536e2546bd9644948c30955966
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 6c567461b63d416689aa48441dfd8404
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 27a005273c3d45769d6f8b46aa4380d3
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# b1a1eb2a5d934aa1a2ef14d358339d49
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 326895a4e36942b18466e597f1c74810
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# b1b167da90624a7b98ce05cff735a579
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# cd9c8cf15adb43678c73488274d0b55e
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# 3b4d58c724a74ae6ab7b2cc1c4438a48
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# e6f0f218202c42f4acfeb7fe55c5c09d
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/nodes.rst:98
# 167045a65ad743b58bda52f505a79040
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 9bb80e094c6f468f9111f2b7dff15651
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/nodes.rst:102
# 58501261c07248a290e3f71d49acc1e5
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 282c9ca4752940028ab22ff766d020a6
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 0be35e2c08f94cbaa212c196d74e0891
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 1fef4770ec8247d0b43bb5aa388b7cbc
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 92b88335629b4e049e598f51b267248b
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 74da65fbed6e4cdca4a4131c50529a53
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 25a4360ee1e04dd8b6755d4d719490e8
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 5d49efc4cfcb418593025cfe216b6f77
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# a6a0544b0f22490a8cb02293464a04ca
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# a9e4c21a33954119967d7b91883e522a
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 0e88c78a692f431cad869e3070d4d447
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 267634c92ef5400dada10d7a085b87d0
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 2ec194e2ed4240708f9aa7b2d7437a5b
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 2a69b279011c42f1846e8b0c11544301
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 6637f19c2e494c04ba66f668777df695
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# ff9e6d34135f48638386b8284dd6d6a3
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# b834c9465b8a47ae9f03dac2d7c89cda
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 94f4fc1c9b8c4741ac452cd9270d6c2a
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 9c10b22a8f0649928fa696fc0dccfc68
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 0a2e0a4080bd4dba878754e699fa7a98
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# f2c94967091c469d833050e0f2f361d5
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/nodes.rst:106
# 9db62bd2ca004f14aba67cf09360265b
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# bf05ef4a7ea3401abcf0b21adc2457fc
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# c00fe5cc916b408a871532571490fc27
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 9e26203851964fbe9f835f0efdb90af0
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# b215ddef4a6648799438d8a0700d36e7
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# f0fe66621cb44080a3a948a649cedd3c
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 45e4ab0b8ae74eab83d05a25f8b6bd43
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 449be9991a414433b836f336428043ba
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# 26da34e902d441219e50bca41caa0620
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 7892a2e8474243b4a4aa2431766ed494
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 457994d5f2a644089f181fbddab74bc8
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# 10f55cf98fa0486fbcf79db0a4077645
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# 5307791335b248aea79fd07fc2925a15
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 2a66cad6c07a474baf065c54a0511f00
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# d8433a51ba7b4fb082ea181851bb3a1c
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 90f7ac31dba54435a888de53d2e1a22e
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 7716271f72b9428eb235c6a6cdc56d04
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# 2ada81f9798b4833a4f270bea3d92724
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# bf9a9de624a942b58d5e42617d7aebb3
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-01-22 15:49-0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/nodes.rst:8
# f6e92b3ee8c2425fbd4ca3dca67a9829
msgid "About Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# e6ae257ae83747508297b4d5ac0e89e1
msgid "A node is any physical, virtual, or cloud machine that is configured to be maintained by a |chef client|."
msgstr ""

#: ../source/nodes.rst:12
# a8ad7a86437a481eafa5df879e0d9951
msgid "There following types of nodes can be managed by the |chef client|:"
msgstr ""

#: ../source/nodes.rst:18
#: ../source/nodes.rst:37
# eb79baf6290942d48e9da93082c37874
# c08afb04a9fa4d2694c40b9f50f2848a
msgid "Feature"
msgstr ""

#: ../source/nodes.rst:19
#: ../source/nodes.rst:38
#: ../../includes_chef_client/includes_chef_client_run.rst:17
#: ../../includes_node/includes_node_attribute_type.rst:11
#: ../../includes_node/includes_node_attribute_whitelist.rst:16
# b4207b0af90c4d1e976b9f13f7f63098
# 0c53f31cbaa24dd58920978f3c930939
# 40dbe13ff0c44ef781f2312d82869ea6
# 16bf65610d8846d499e8fc54109db5df
# b2b92a00e2a44fccaf6cd0b419144192
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_type_cloud.rst:4
# 0fd0358d49044a75984c52d945a2f8b0
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_type_physical.rst:4
# 47c005911bb14ef3be91391bf9f4339e
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|."
msgstr ""

#: ../../includes_node/includes_node_type_virtual.rst:4
# 0463b20f3c6c4e179d9ce21f7745d9d9
msgid "A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine."
msgstr ""

#: ../../includes_containers/includes_containers.rst:5
# dcf1a0b5d2064693b116a1aa59890bfe
msgid "Containers are an approach to virtualization that allow a single operating system to host many working configurations, including even the host operating system. Each working configuration is assigned a single responsibility that is isolated from all other responsibilities. Each container comprises a working configuration and all of its dependencies that are not already available from the host operating system or from another container that is also running on the host operating system."
msgstr ""

#: ../../includes_node/includes_node_type_network.rst:4
# e7beb246f08a46baa93a418fe7e86347
msgid "A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices."
msgstr ""

#: ../source/nodes.rst:31
# 8cfa23e70c5b4e27bb871abfffff2223
msgid "Some important components of nodes include:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:5
# 02c0296dd7ad4def9c29e002d2961439
msgid "A |chef client| is an agent that runs locally on every node that is under management by |chef|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:7
# f2fb7e813b3c451ea95c88b39e5b52c5
msgid "Registering and authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:8
# 86c6ed98a20c4d09a37d828f23cdcac1
msgid "Building the node object"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:9
# 9475eb7455ed427bbad797996b06b6a9
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:10
# d90aeeee353c4882b7ba55b63fdc755c
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:11
# 19443a600ea54941b1a462b45f3ae519
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef_client/includes_chef_client.rst:12
# 1053c06a5c6b420fa05376d54e4ca740
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# b9950478256f4753a651a5dbb5965d93
msgid "|ohai| is a tool that is used to detect attributes on a node, and then provide these attributes to the |chef client| at the start of every |chef client| run. |ohai| is required by the |chef client| and must be present on a node. (|ohai| is installed on a node as part of the |chef client| install process.)"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# caa2bb6191ab43798e9514d92e3f1305
msgid "The types of attributes |ohai| collects include (but are not limited to):"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 33b1b9601a7f479997ba7ddd5fb6952b
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 760c3b20b69442d780385e0d552f3d65
msgid "Network usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# cc47dc262ff5445e93ccbd85ec1f3330
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# bab51e0e62ed4df996641bc7ee38d142
msgid "CPU data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# 3c71086d35954de5bb59a2cdebbc9fdf
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 31052abdb2ff4417affe16a32ba54cf7
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:14
# 8250c6f218fb46fc9e997ef8577faecc
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 8164c08bac744987bc27441bcc885fbf
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:17
# e2f9e02c316f417a930c549cabcb0b8e
msgid "Attributes that are collected by |ohai| are automatic attributes, in that these attributes are used by the |chef client| to ensure that these attributes remain unchanged after the |chef client| is done configuring the node."
msgstr ""

#: ../source/nodes.rst:45
# 69924fe61ed742f0aed773ea581b959b
msgid "The |chef client_title| Run"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:6
# 8ba76bf82b0147409dfdeaceea6a626a
msgid "A \"|chef client| run\" is the term used to describe a series of steps that are taken by the |chef client| when it is configuring a node. The following diagram shows the various stages that occur during the |chef client| run, and then the list below the diagram describes in greater detail each of those stages."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:10
# 2363f141956c41ecaf6a0068304a7247
msgid "During every |chef client| run, the following happens:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:16
# bc911240bfc34366962db02dc5246a11
msgid "Stages"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:18
# b560205b0815473784fe8b424d39f0a1
msgid "**Get configuration data**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:19
# e472b5a796ce4e16af35297435441236
msgid "The |chef client| gets process configuration data from the |client rb| file on the node, and then gets node configuration data from |ohai|. One important piece of configuration data is the name of the node, which is found in the ``node_name`` attribute in the |client rb| file or is provided by |ohai|. If |ohai| provides the name of a node, it is typically the |fqdn| for the node, which is always unique within an organization."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:20
# fd665066b6c74c44b9e60847c3f094bc
msgid "**Authenticate to the Chef Server**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:21
# 4aefc4b24d0949b99a30da5410b4d671
msgid "The |chef client| authenticates to the |chef server| using an RSA private key and the |api chef server|. The name of the node is required as part of the authentication process to the |chef server|. If this is the first |chef client| run for a node, the |chef validator| will be used to generate the RSA private key."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:22
# 3f60f8b2b5c048ddafb80a5967850412
msgid "**Get, rebuild the node object**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:23
# 6c5a5503def24fcc9dd3def9b6ac1d87
msgid "The |chef client| pulls down the node object from the |chef server|. If this is the first |chef client| run for the node, there will not be a node object to pull down from the |chef server|. After the node object is pulled down from the |chef server|, the |chef client| rebuilds the node object. If this is the first |chef client| run for the node, the rebuilt node object will contain only the default run-list. For any subsequent |chef client| run, the rebuilt node object will also contain the run-list from the previous |chef client| run."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:24
# 78e52eac312e4eb5a66d23939160955c
msgid "**Expand the run-list**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:25
# 7806023dd78a4ad5b59430fce652a8c5
msgid "The |chef client| expands the run-list from the rebuilt node object, compiling a full and complete list of roles and recipes that will be applied to the node, placing the roles and recipes in the same exact order they will be applied. (The run-list is stored in each node object's |json| file, grouped under ``run_list``.)"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:26
# e85749996ea84851996183128637a66a
msgid "**Synchronize cookbooks**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:27
# 25fda875f20749e2952f28417f251623
msgid "The |chef client| asks the |chef server| for a list of all cookbook files (including recipes, templates, resources, providers, attributes, libraries, and definitions) that will be required to do every action identified in the run-list for the rebuilt node object. The |chef server| provides to the |chef client| a list of all of those files. The |chef client| compares this list to the cookbook files cached on the node (from previous |chef client| runs), and then downloads a copy of every file that has changed since the previous |chef client| run, along with any new files."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:28
# 7757b5c384d44047ba6f0e1f27416369
msgid "**Reset node attributes**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:29
# bb615a90488f4bad82991196d170f6bf
msgid "All attributes in the rebuilt node object are reset. All attributes from attribute files, environments, roles, and |ohai| are loaded. Attributes that are defined in attribute files are first loaded according to cookbook order. For each cookbook, attributes in the ``default.rb`` file are loaded first, and then additional attribute files (if present) are loaded in lexical sort order. All attributes in the rebuilt node object are updated with the attribute data according to attribute precedence. When all of the attributes are updated, the rebuilt node object is complete."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:30
# ea8056449dac40c28405d7fc17fa64da
msgid "**Compile the resource collection**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:31
# 6e78b81fd3d64c88b8b29d5b2f5bc22c
msgid "The |chef client| identifies each resource in the node object and builds the resource collection. Libraries are loaded first to ensure that all language extensions and |ruby| classes are available to all resources. Next, attributes are loaded, followed by lightweight resources, and then all definitions (to ensure that any pseudo-resources within definitions are available). Finally, all recipes are loaded in the order specified by the expanded run-list. This is also referred to as the \"compile phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:32
# e1b98ff44a884415960c17ac0bfada1a
msgid "**Converge the node**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:33
# 6c3862ade4fb44ce981ec4fd52f67cfb
msgid "The |chef client| configures the system based on the information that has been collected. Each resource is executed in the order identified by the run-list, and then by the order in which each resource is listed in each recipe. Each resource in the resource collection is mapped to a provider. The provider examines the node, and then does the steps necessary to complete the action. And then the next resource is processed. Each action configures a specific part of the system. This process is also referred to as convergence. This is also referred to as the \"execution phase\"."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:34
# 17981526e359458b9e23db01a8469676
msgid "**Update the node object, process exception and report handlers**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:35
# e56effbe77d64f08aa1ddeb467c51a03
msgid "When all of the actions identified by resources in the resource collection have been done, and when the |chef client| run finished successfully, the |chef client| updates the node object on the |chef server| with the node object that was built during this |chef client| run. (This node object will be pulled down by the |chef client| during the next |chef client| run.) This makes the node object (and the data in the node object) available for search."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:37
# 0bb131f4d5f84104910bbb2da96c6c4c
msgid "The |chef client| always checks the resource collection for the presence of exception and report handlers. If any are present, each one is processed appropriately."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:38
# 0d9f0f507644436db1a7f4d6be9acbff
msgid "**Stop, wait for the next run**"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_run.rst:39
# 8e2fd2e4fe2845be9709014120faeec0
msgid "When everything is configured and the |chef client| run is complete, the |chef client| stops and waits until the next time it is asked to run."
msgstr ""

#: ../source/nodes.rst:49
# 5b486b3b88e441139f01444da33e0269
msgid "About Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:5
# 3252b63caa9c49d6974d25a501cac9a1
msgid "A run-list defines all of the configuration settings that are necessary for a node that is under management by |chef| to be put into the desired state. A run-list is:"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:7
# 994912a155da4ade87fb8d0d10cffb92
msgid "An ordered list of roles and/or recipes that are run in an exact order; if a recipe appears more than once in the run-list, the |chef client| will never run that recipe twice"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:8
# 4ea666238bc84a6090d83ccb2a91ea16
msgid "Always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:9
# df67a2c69c144615a03f906245b5d4fb
msgid "Stored as part of the node object on the |chef server|"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:10
# d9fa0cbc87a948e381409774a7ec3561
msgid "Maintained using |knife| and uploaded to the |chef server| or via the |chef manage| user interface"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 6de09e3410d34b2bb93f3f11e28a598d
msgid "A recipe is the most fundamental configuration element within the organization. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 1a7f536d3d024579927c106f9667194e
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 5a50589e2d29405a8a0f0da1fe712307
msgid "Is mostly a collection of resources, defined using patterns (resource names, attribute-value pairs, and actions); helper code is added around this using |ruby|, when needed"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# e3c5a4f3d72e44dfbf1845eaacc10b37
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 58999f0f02744c2e8e9d36408bfb5d87
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# bcb0d1a269c1400a96e435c6ec3c0451
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 272ce39fea9d45079ee5327df2ccae62
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# f49f2dd725d1491abcf456ed57c1a7f6
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# c876227552f9486095d69c50345c7382
msgid "May tag a node to facilitate the creation of arbitrary groupings"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# ee53a86d31f946c3bec5e26cd9572797
msgid "Must be added to a run-list before it can be used by the |chef client|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 70ff5a3eebac40aebfdc7f71559bf7dd
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_role/includes_role.rst:5
# 7e8a6adf24884af287ebd21ab729c67e
msgid "A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function. Each role consists of zero (or more) attributes and a run-list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run-list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run-lists with those contained within each assigned role."
msgstr ""

#: ../source/nodes.rst:57
# 2a101df5eacb4d51bb80d16b1986a2ff
msgid "About why-run Mode"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:5
# a77120471472454abf07ed3b3eae9800
msgid "|whyrun| mode is a way to see what the |chef client| would have configured, had an actual |chef client| run occurred. This approach is similar to the concept of \"no-operation\" (or \"no-op\"): decide what should be done, but then don't actually do anything until it's done right. This approach to configuration management can help identify where complexity exists in the system, where inter-dependencies may be located, and to verify that everything will be configured in the desired manner."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:7
# eb0ded8ab6b54abaa957c1ac1e9013cc
msgid "When |whyrun| mode is enabled, a |chef client| run will occur that does everything up to the point at which configuration would normally occur. This includes getting the configuration data, authenticating to the |chef server|, rebuilding the node object, expanding the run list, getting the necessary cookbook files, resetting node attributes, identifying the resources, and building the resource collection and does not include mapping each resource to a provider or configuring any part of the system."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode.rst:9
# 0608f75d887c4d0b9e91618263ceafbd
msgid "why-run mode is not a replacement for running cookbooks in a test environment that mirrors the production environment. |company_name| uses why-run mode to learn more about what is going on, but also test-kitchen on developer systems, along with an internal |openstack| cloud and external cloud providers to test more thoroughly."
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:5
# f2e9c2d0f3014b2a9e80f269d5e88ba9
msgid "When the |chef client| is run in |whyrun| mode, certain assumptions are made:"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:7
# c8cd1782eb184162bf45d10d5e4ac0d5
msgid "If the |resource service| resource cannot find the appropriate command to verify the status of a service, |whyrun| mode will assume that the command would have been installed by a previous resource and that the service would not be running"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:8
# 25fe16ecf74a48cabde62a1ac5498166
msgid "For ``not_if`` and ``only_if`` attribute, |whyrun| mode will assume these are commands or blocks that are safe to run. These conditions are not designed to be used to change the state of the system, but rather to help facilitate idempotency for the resource itself. That said, it may be possible that these attributes are being used in a way that modifies the system state"
msgstr ""

#: ../../includes_chef_client/includes_chef_client_whyrun_mode_assumptions.rst:9
# 8b112c2d2be24c499e7772ba74893621
msgid "The closer the current state of the system is to the desired state, the more useful |whyrun| mode will be. For example, if a full run-list is run against a fresh system, that run-list may not be completely correct on the first try, but also that run-list will produce more output than smaller run-list"
msgstr ""

#: ../source/nodes.rst:63
# 8a5cc88ca8cc4287a022b0a96b0a2940
msgid "For example, the |resource service| resource can be used to start a service. If the action is ``:start`` and the service is not running, then start the service (if it is not running) and do nothing (if it is running). What about a service that is installed from a package? The |chef client| cannot check to see if the service is running until after the package is installed. A simple question that |whyrun| mode can answer is what the |chef client| would say about the state of the service after installing the package because service actions often trigger notifications to other resources. So it can be important to know in advance that any notifications are being triggered correctly."
msgstr ""

#: ../source/nodes.rst:65
# 7983ea49c58a4bf58c228024cf07bb8e
msgid "For a detailed explanation of the dry-run concept and how it relates to the |whyrun| mode, see `this blog post <http://blog.afistfulofservers.net/post/2012/12/21/promises-lies-and-dryrun-mode/>`_."
msgstr ""

#: ../source/nodes.rst:68
# 3aeced9ef92e4b38851f8c33de969a20
msgid "About Node Names"
msgstr ""

#: ../../includes_node/includes_node_name.rst:4
# 44bf9fd52c384f2695ca5f43f1ea7ab6
msgid "The name of a node is required as part of the authentication process to the |chef server|. The name of each node must be unique within an organization, but otherwise can be any string that matches the following regular expression::"
msgstr ""

#: ../../includes_node/includes_node_name.rst:8
# 38f0850d865044cabb9642bb226738c9
msgid "The name of a node can be obtained from the ``node_name`` attribute in the |client rb| file or by allowing |ohai| to collect this data during the |chef client| run. When |ohai| collects this data during the |chef client| run, it uses the |fqdn| name of the node (which is always unique within an organization) as the name of the node."
msgstr ""

#: ../../includes_node/includes_node_name.rst:10
# 4c3f6221bff44954b64fcb843f9623d5
msgid "Using the |fqdn| as the node name, and then allowing |ohai| to collect this information during each |chef client| run, is the recommended approach and the easiest way to ensure that the names of all nodes across the organization are unique."
msgstr ""

#: ../source/nodes.rst:72
# 4665d02ac9654336a35a69c9f883aa74
msgid "Manage Nodes"
msgstr ""

#: ../../includes_node/includes_node_manage.rst:4
# c26cb7bca664482aa4e81e7a1ea4343f
msgid "There are several ways to manage nodes directly, including by using |knife|, the |chef manage| add-on for the |chef server|, or by using command-line tools that are specific to |chef client|."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:6
# b1dcf733efce48e08c15d0986becc4cb
msgid "|knife| can be used to create, edit, view, list, tag, and delete nodes."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:7
# c7882bd2b5fb4694a4b00b3f801e9a2f
msgid "|knife| plug-ins can be used to create, edit, and manage nodes that are located on cloud providers."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:8
# 376859bc3dcc42cc9537f3308b35ee69
msgid "The |chef manage| add-on can be used to create, edit, view, list, tag, and delete nodes. In addition, node attributes can be modified and nodes can be moved between environments."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:9
# fb90901983e946f0b48ed2e1e0c4585f
msgid "The |chef client| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:10
# 4eff331fb011464194ee9038593e28f0
msgid "|chef solo| can be used to manage node data using the command line and |json| files. Each |json| file contains a hash, the elements of which are added as node attributes. In addition, the ``run_list`` setting allows roles and/or recipes to be added to the node."
msgstr ""

#: ../../includes_node/includes_node_manage.rst:11
# 4b17210201c24d03abeac0a15b93e4c7
msgid "The command line can also be used to edit |json| files and files that are related to third-party services, such as |amazon ec2|, where the |json| files can contain per-instance metadata that is stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../source/nodes.rst:79
# 72938d1e1fbb4ec392d5a5ec33db11c1
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 76c1855520dd4bf086ff2d809d4aba3e
msgid "For the |chef client|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef client| run and places an updated copy on the |chef server| at the end of each |chef client| run."
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 5fd68e27dbc7459dad8052675873a896
msgid "An attribute is a specific detail about a node. Attributes are used by the |chef client| to understand:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:6
# f969e92e46b14928b08fadafd5844933
msgid "The current state of the node"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:7
# 4d0255ef1f3a4f8cb175d005173af487
msgid "What the state of the node was at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:8
# 47c8d642661b43e6ac2f3547c343e6b8
msgid "What the state of the node should be at the end of the current |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:10
# ef9ba0ab51204d82b488a6b38d5b5517
msgid "Attributes are defined by:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:12
# 54f4ffc18deb4c779707d60799b6ef40
msgid "The state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:13
# 02f968a1680849259c9a34a3e54e376d
msgid "Cookbooks (in attribute files and/or recipes)"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:14
# 674616710133481a90e9e35ee6ac9e4f
msgid "Roles"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:15
# edb00b6da71d43ac82ae8834148772a5
msgid "Environments"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:17
# 735d34b9c271446792b55a458c5c3cb5
msgid "During every |chef client| run, the |chef client| builds the attribute list using:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:19
# 13064f16c43247b48f530c3bc1bb1725
msgid "Data about the node collected by |ohai|"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:20
# 982ae1675d4a42a39395ff7be1a929c4
msgid "The node object that was saved to the |chef server| at the end of the previous |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:21
# 0b0a1df2ef2d4c6a8121f6af9a5d3009
msgid "The rebuilt node object from the current |chef client| run, after it is updated for changes to cookbooks (attribute files and/or recipes), roles, and/or environments, and updated for any changes to the state of the node itself"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:23
# 3b181478478c4c54a24b272ae9c0d525
msgid "After the node object is rebuilt, all of attributes are compared, and then the node is updated based on attribute precedence. At the end of every |chef client| run, the node object that defines the current state of the node is uploaded to the |chef server| so that it can be indexed for search."
msgstr ""

#: ../source/nodes.rst:86
# 04d1a88891334305a63e68d9cbb3de82
msgid "Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:5
# a874bb552ddf4305bb636408320eda0f
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef client| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:7
# a8df5e261c684508ab7d652a56d19593
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:8
# 6d74c8161a97487590c3d0fb7fe1adaa
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:9
# e16a3091c4c24949a07f6e10b26c8178
msgid "anything that may need to be persisted in node data between |chef client| runs"
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:11
# 9a0cffdf386b441fac6090233f3b3ff3
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use.rst:13
# ea192254de884025925208740833cab5
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_node/includes_node_attribute_when_to_use_unless_variants.rst:5
# 7072fe5432e54ba2afbf32d8be88dca6
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. (``normal_unless`` is an alias of ``set_unless``; use either alias to set an attribute with a normal attribute precedence.) These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/nodes.rst:91
# 0b8f5cf5007d4261a80c58721ace6a9f
msgid "|note see_attributes_overview|"
msgstr ""

#: ../source/nodes.rst:94
# 2488bcbeb76140b28bb47a0dcebd3405
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 6bcf08d7c55b4ca2be68e60090a0aadc
msgid "Attribute types can be any of the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 8298839464744a11abdc983c185a0c3f
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
# 1b858f1c580147f79c91962f77feb0e8
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 0684a72869d5447293590d61ddf1ca84
msgid "|attribute_type default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# b72d1ef2bdcd421f8b22d2b6adf749e6
msgid "``force_default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 50cf15fd60354c7abf740ac0fa0b8602
msgid "|attribute_type force_default|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 49573ff1fa214a269e47559f36a9cb36
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 02dc9237923e4a88914ef32ec1ae17a7
msgid "|attribute_type normal|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 87c7d1c45b9a4452a58033bf997ee328
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 00bcf680772c4b53bd19b7bcd9663cbf
msgid "|attribute_type override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:20
# 6e33d9230c854855bba5da790d20c87b
msgid "``force_override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:21
# 23656c65ad024bc4a7a7191c719a9e7e
msgid "|attribute_type force_override|"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:22
# cde946eee3d44b989c0615580c24cc4a
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:23
# b23efd3abb6e4fbe8e600034c86998ed
msgid "|attribute_type automatic|"
msgstr ""

#: ../source/nodes.rst:98
# 1ec6e20609564bd198f8473ef8738a76
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 3bd2a61574cc434684ab986dd18bf7e0
msgid "At the beginning of a |chef client| run, all default, override, and automatic attributes are reset. The |chef client| rebuilds them using data collected by |ohai| at the beginning of the |chef client| run and by attributes that are defined in cookbooks, roles, and environments. Normal attributes are never reset. All attributes are then merged and applied to the node according to attribute precedence. At the conclusion of the |chef client| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef client| run."
msgstr ""

#: ../source/nodes.rst:102
# 373375aeeae84a95ac454463f678aaff
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 5353a067284241c6b87705153762d574
msgid "Attributes are always applied by the |chef client| in the following order:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 417ef99c173948af9679dde96a8353c9
msgid "A ``default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 195fb083c39c49d6b47b1b2a34e00b0b
msgid "A ``default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# faebb5513b8e4a65901b0a175dc5ef91
msgid "A ``default`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 020616a0ddb84759a2681304da59103e
msgid "A ``default`` attribute located in role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 6506012ddd60467e8267b77239c52faf
msgid "A ``force_default`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 769f216430ea4ca2bcdc560668a81111
msgid "A ``force_default`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 7054c18b55d34c9e9c563e2f64452f18
msgid "A ``normal`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 13b608313e744452921f5b0a50d20183
msgid "A ``normal`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 158801ce27944b609ffecce1fb64b9d1
msgid "An ``override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# ad584a465a24469d8b9669a123fbd6fe
msgid "An ``override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 36ba4b9e435649f19a5b21a4fc1ed2d5
msgid "An ``override`` attribute located in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:17
# 0f38a40b7c0f467d88f26c4f2a84cea9
msgid "An ``override`` attribute located in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:18
# 72974d82d068411c852bec1601c5d6d1
msgid "A ``force_override`` attribute located in a cookbook attribute file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:19
# fc4b0de5422d43baa782911303c29ab1
msgid "A ``force_override`` attribute located in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:20
# e931c46d42564714b8b3c6091045c694
msgid "An ``automatic`` attribute identified by |ohai| at the start of the |chef client| run"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:22
# 1443446fc14b423bb4c9772f91285f5e
msgid "where the last attribute in the list is the one that is applied to the node."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:24
# 8c742f4aeb614d41a31c6cb41734229f
msgid "The attribute precedence order for roles and environments is reversed for ``default`` and ``override`` attributes. The precedence order for ``default`` attributes is environment, then role. The precedence order for ``override`` attributes is role, then environment. Applying environment ``override`` attributes after role ``override`` attributes allows the same role to be used across multiple environments, yet ensuring that values can be set that are specific to each environment (when required). For example, the role for an application server may exist in all environments, yet one environment may use a database server that is different from other environments."
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:26
# 22054711341e48a4b01ed5c124fd7c84
msgid "Attribute precedence, viewed from the same perspective as the overview diagram, where the numbers in the diagram match the order of attribute precedence:"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:30
# 7f1906bebfca4c7eaa3b3a107ee01dd3
msgid "Attribute precedence, when viewed as a table:"
msgstr ""

#: ../source/nodes.rst:106
# 86efa672d8d44ad7b6f162b4afc7e958
msgid "Whitelist Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:5
# 1295ee3372f6475a97b99f89c3731d59
msgid "When these settings are used, any attribute not defined in a whitelist will not be saved. Each attribute type is whitelisted independently of the other attribute types. For example, if ``automatic_attribute_whitelist`` defines attributes to be saved, but ``normal_attribute_whitelist``, ``default_attribute_whitelist``, and ``override_attribute_whitelist`` are not defined, then all normal, default and override attributes are saved, along with only the specified automatic attributes."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:7
# 185aa753d8264f27942b87b779809785
msgid "Attributes that should be saved by a node may be whitelisted in the |client rb| file. The whitelist is a |ruby hash| of keys that specify each attribute to be saved."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:9
# 75b974c794c94e678fda08bd7feaf796
msgid "Attribute are whitelisted by attribute type, with each attribute type being whitelisted independently. Each attribute type---``automatic``, ``default``, ``normal``, and ``override``---may define whitelists by using the following settings in the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:15
# fdb6328b840d4add8a08d4ba64eb395f
msgid "Setting"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:17
# c24054c42fe0494892aa3d90f5b9a935
msgid "``automatic_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:18
# 5f88f0ccfffb4ded87e1d7ce8620353f
msgid "|whitelist attribute_automatic| For example: ``[\"network/interfaces/eth0\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:19
# 59e03cb220604f6191c9221a4ca99a2d
msgid "``default_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:20
# ca20d1f3c78846a39524c3a53f2ef58b
msgid "|whitelist attribute_default| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:21
# 0db26f1b7cf547a0ade27ce1af46267b
msgid "``normal_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:22
# 2f322133bf40470bb89a8c8193643acd
msgid "|whitelist attribute_normal| For example: ``[\"filesystem/dev/disk0s2/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:23
# 79d0b331ccef4009b13297c1bb5b850a
msgid "``override_attribute_whitelist``"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:24
# fc40a30208e844e98c390444b08d6447
msgid "|whitelist attribute_override| For example: ``[\"map - autohome/size\"]``. Default value: all attributes are saved. |whitelist attribute_none|"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:26
# 660731b44bb247f4b454b2524c909db9
msgid "It is recommended that only ``automatic_attribute_whitelist`` be used to whitelist attributes. This is primarily because automatic attributes generate the most data, but also that normal, default, and override attributes are typically much more important attributes and are more likely to cause issues if they are whitelisted incorrectly."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:28
# db77b4bf2d7d4fdcac3ecf9556092a64
msgid "For example, normal attribute data similar to:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:49
# 80672427a1a14fcfb8034049cf635b97
msgid "To whitelist the ``network`` attributes and prevent the other attributes from being saved, update the |client rb| file:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:55
# 269ff2d319c34ab9be1a35752d833d50
msgid "When a whitelist is defined, any attribute of that type that is not specified in that attribute whitelist **will not** be saved. So based on the previous whitelist for normal attributes, the ``filesystem`` and ``map - autohome`` attributes will not be saved, but the ``network`` attributes will."
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:57
# ce63cfb15a304cf58bb23ce3a1e02c9d
msgid "Leave the value empty to prevent all attributes of that attribute type from being saved:"
msgstr ""

#: ../../includes_node/includes_node_attribute_whitelist.rst:63
# 8eb97bedd5664d2a8e29d9c8c85bb78c
msgid "For attributes that contain slashes (``/``) within the attribute value, such as the ``filesystem`` attribute ``'/dev/diskos2'``, use an array. For example:"
msgstr ""


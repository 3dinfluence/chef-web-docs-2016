.. The contents of this file may be included in multiple topics.
.. This file should not be changed in a way that hinders its ability to appear in multiple documentation sets.

Logs

All logs generated by Private Chef can be found in /var/log/opscode. Each service enabled on a system has a sub-directory containing all of its logs.

There are two categories of logs that are produced by Private Chef services - Supervisor Logs and Application Logs.

Supervisor Logs

These are created and managed directly by the service supervisor, and are automatically rotated when a the current log file reaches 1,000,000 bytes. 10 log files are kept.

The latest supervisor log is always located in /var/log/opscode/SERVICENAME/current, and rotated logs have a filename starting with @ followed by a precise tai64n timestamp based on when the file was rotated.

Application Logs

These are created by the services directly, and may require you to apply the log rotation policies that make sense for your organization and operating system.

Viewing Logs

Private Chef has built-in support for easily tail-ing the logs it generates. To view all the logs being generated on a Private Chef server:

.. code-block:: bash

   $ private-chef-ctl tail

To view a specific services logs:

.. code-block:: bash

   $ private-chef-ctl SERVICENAME tail

Where SERVICENAME should be replaced with name of the service whose logs you want to view.






Services


couchdb

CouchDB only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl couchdb tail


fcgiwrap

fcgiwrap only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl fcgiwrap tail



nagios

Nagios creates both supervisor and administrator logs. /var/log/opscode/nagios/nagios.log contains status check and notification information. These are rotated into the /var/log/opscode/nagios/archive directory daily.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl nagios tail



nginx


Nginx creates both supervisor and administrator logs. The administrator logs contain both access and error logs for each virtual host utilized by Private Chef. Each of the following logs require external log rotation.

.. code-block:: bash

   /var/log/opscode/nginx/access.log: The Web UI and API http access logs.
   /var/log/opscode/nginx/error.log: The Web UI and API http error logs.
   /var/log/opscode/nginx/internal-account.access.log: The opscode-account internal load-balancer access logs.
   /var/log/opscode/nginx/internal-account.error.log: The opscode-account internal load-balancer error logs.
   /var/log/opscode/nginx/internal-authz.access.log: The opscode-authz internal load-balancer access logs.
   /var/log/opscode/nginx/internal-authz.error.log: The opscode-authz internal load-balancer error logs.
   /var/log/opscode/nginx/internal-chef.access.log: The opscode-chef and opscode-erchef internal load-balancer access logs.
   /var/log/opscode/nginx/internal-chef.error.log: The opscode-chef and opscode-erchef internal load-balancer error logs.
   /var/log/opscode/nginx/nagios.access.log: The nagios access logs.
   /var/log/opscode/nginx/nagios.error.log: The nagios error logs.
   /var/log/opscode/nginx/rewrite-port-80.log: The rewrite logs for traffic that uses HTTP instead of HTTPS.

To follow this services logs:

$ private-chef-ctl nginx tail


Reading Access Logs

The nginx access log format is as follows:

.. code-block:: bash

   log_format opscode '$remote_addr - $remote_user [$time_local]  '
                   '"$request" $status "$request_time" $body_bytes_sent '
                   '"$http_referrer" "$http_user_agent" "$upstream_addr" '
                   '"$upstream_status" "$upstream_response_time" "$http_x_chef_version" '
                   '"$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" '
                   '"$http_x_ops_content_hash" $request_length';

A sample log line:

.. code-block:: bash

   192.168.4.1 - - [17/Feb/2012:16:02:42 -0800]  "GET /organizations/nginx/cookbooks HTTP/1.1" 200 "0.346" 12 "-" "Chef Knife/0.10.4 (ruby-1.9.3-p0; ohai-0.6.10; x86_64-darwin11.2.0; +http://opscode.com)" "127.0.0.1:9460" "200" "0.339" "0.10.4" "version=1.0" "adam" "2012-02-18T00:02:42Z" "2jmj7l5rSw0yVb/vlWAYkK/YBwk=" 871

The meaning of each field is as follows:

.. code-block:: bash

   $remote_addr: The IP address of the client who made this request
   $remote_user: The http basic auth username of this request
   $time_local: The local time of the request
   $request: The HTTP request
   $status: The HTTP status code
   $request_time: The time it took to service the request
   $body_bytes_sent: The number of bytes in the HTTP response body
   $http_referrer: The HTTP referrer
   $http_user_agent: The user agent of the requesting client.
   $upstream_addr: The upstream reverse proxy used to service this request.
   $upstream_status: The upstream reverse proxy response status code.
   $upstream_response_time: The upstream reverse proxy response time.
   $http_x_chef_version: The version of Chef used to make this request.
   $http_x_ops_sign: The version of the authentication protocol.
   $http_x_ops_userid: The client name that was used to sign this request.
   $http_x_ops_timestamp: The timestamp from when this request was signed.
   $http_x_ops_content_hash: The hash of the contents of this request
   $request_length: The length of this request


nrpe

nrpe only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl nrpe tail


opscode-account

opscode-account only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-account tail


opscode-authz

opscode-authz creates supervisor logs and application logs.

/var/log/opscode/opscode-authz/access.log.DATE: Access logs for the opscode-authz service. These logs contain the date and hour they were written. They must be rotated externally.
/var/log/opscode/opscode-authz/perf.log.DATE: Performance logs for the opscode-authz service. These logs contain the date and hour they were written. They must be rotated externally.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-authz tail


opscode-certificate

opscode-certificate only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-certificate tail


opscode-chef

opscode-chef only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-chef tail


opscode-erchef

opscode-erchef creates supervisor logs and application logs.

/opscode-erchef/erchef.log.N The access logs for opscode-erchef.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-erchef tail


opscode-expander

opscode-expander only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-expander tail


opscode-expander-reindexer

opscode-expander-reindexer only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-expander-reindexer tail


opscode-org-creator

opscode-org-creator only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-org-creator tail


opscode-solr

opscode-solr only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-solr tail


opscode-webui

opscode-webui only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl opscode-webui tail


phpfpm

phpfpm only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl phpfpm tail


postgresql

postresql only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl postgresql tail


rabbitmq

rabbitmq only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl rabbitmq tail


redis

redis only creates supervisor logs.

To follow this services logs:

.. code-block:: bash

   $ private-chef-ctl redis tail



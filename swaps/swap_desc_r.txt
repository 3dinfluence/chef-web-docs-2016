.. Description strings that begin with the letter R.
.. The pattern is |rxxxx| replace:: string.
.. 
.. 

.. R
.. 

.. |r knife list| replace:: Indicates that directories will be listed recursively.

.. |rackspace_api_auth_url| replace:: The URL used to authenticate the |rackspace| API key.
.. |rackspace_api_key| replace:: The unique alphanumeric identifier that is associated with a |rackspace| account.
.. |rackspace-metadata| replace:: A |json| string that contains a metadata hash.

.. |raid_device mdadm| replace:: The name of the |raid| device.

.. |record_data| replace:: The record data.
.. |record_ttl| replace:: The record time to live.
.. |record_type| replace:: The record type: ``ns``, ``childns``, ``host``, ``alias``, or ``mx``.

.. |readme-format| replace:: The document format of the readme file: ``md`` (markdown) and ``rdoc`` (|ruby| docs).
.. |reason windows_reboot| replace:: The reason for a |windows| reboot.
.. |recipe_url| replace:: The URL location from which a remote cookbook |tar gz| will be downloaded.

.. |recursive directory| replace:: Indicates whether parent directories are created or deleted recursively. For the ``owner``, ``group``, and ``mode`` attributes, the value of this attribute applies only to the leaf directory. Default value: ``false``.
.. |recursive registry_key| replace:: When creating a key, this value indicates whether the required keys for the specified path will be created. When using the ``:delete_key`` action in a recipe, and if the registry key has subkeys, then the value for this attribute should be set to ``true``.
.. |redirect_stderr| replace:: Indicates that the ``STDERR`` output for a process is sent back to |python supervisor| using ``STDOUT``.
.. |reference resource scm| replace:: The alias for revision. This action only works with the ``git`` provider.
.. |region amazon| replace:: The name of the region from which instances of hosted applications are launched. Each region has a unique endpoint.
.. |region eucalyptus| replace:: The name of the region from which instances of hosted applications are launched.
.. |region openstack| replace:: The name of the region from which instances of hosted applications are launched.

.. |remote resource| replace:: The remote repository to be used when synchronizing an existing clone.

.. |remote deps_on_server| replace:: Indicates that dependencies will be determined from objects located on the |chef server| instead of the local |chef repo|.

.. |repo_mode| replace:: The layout of the local |chef repo|. Possible values: ``static``, ``everything``, or ``hosted_everything``. Use ``static`` for just roles, environments, cookbooks, and data bags. By default, ``everything`` and ``hosted_everything`` are dynamically selected depending on the server type.

.. |repository| replace:: The path to the |chef repo|.
.. |repository git_or_svn| replace:: The alias for the repository.
.. |repository application| replace:: The name of the sub-directory in which the pristine copy of an application’s source is kept.



.. |repository_cache| replace:: The name of the sub-directory in which the pristine copy of an application's source is kept.
.. |repositories maven| replace:: An array of |apache maven| repositories.

.. |resource action add ifconfig| replace:: Use to run |ifconfig| to configure a network interface and (on some platforms) write a configuration file for that network interface.
.. |resource action add route| replace:: Use to add a route.
.. |resource action assemble mdadm| replace:: Use to assemble a previously created array into an active array.
.. |resource action checkout scm| replace:: Use to clone or check out the source. When a checkout is available, this provider does nothing.
.. |resource action create cookbook_file| replace:: Use to create a file.
.. |resource action create cron| replace:: Use to create an entry in a |cron| table file ("crontab"). If an entry already exists with the same name, use to update that entry.
.. |resource action create directory| replace:: Use to create a directory.
.. |resource action create env| replace:: Use to create a new environment variable.
.. |resource action create file| replace:: Use to create a file.
.. |resource action create group| replace:: Use to create a group.
.. |resource action create link| replace:: Use to create a link.
.. |resource action create mdadm| replace:: Use to create a new array with per-device superblocks.
.. |resource action create remote_file| replace:: Use to synchronize a file from a remote source to the file system.
.. |resource action create ruby_block| replace:: Use to create a |ruby| block.
.. |resource action create template| replace:: Use to create a file.
.. |resource action create user| replace:: Use to create a user with given attributes. If the user already exists, use to ensure that the resource is in the correct state (which is effectively the same as ``:modify``).
.. |resource action create registry_key| replace:: Use to create a registry key.
.. |resource action create_if_missing cookbook_file| replace:: Use to create a file if it doesn't already exist.
.. |resource action create_if_missing directory| replace:: Use to create a directory if it doesn’t already exist.
.. |resource action create_if_missing file| replace:: Use to create a file only if the file does not already exist. (When the file exists, nothing happens.)
.. |resource action create_if_missing remote_file| replace:: Use to create a file locally by fetching from the remote source, but only if the file doesn't yet exist.
.. |resource action create_if_missing template| replace:: Use to create a file only if it does not exist.
.. |resource action create_if_missing registry_key| replace:: Use to create a registry key if it doesn't already exist. Also, use to create a registry key value if it doesn't already exist.
.. |resource action delete cookbook_file| replace:: Use to delete a file.
.. |resource action delete cron| replace:: Use to delete an entry from a |cron| table file ("crontab").
.. |resource action delete directory| replace:: Use to delete a directory.
.. |resource action delete env| replace:: Use to delete an environment variable.
.. |resource action delete file| replace:: Use to delete a file.
.. |resource action delete http_request| replace:: Use to send a ``DELETE`` request.
.. |resource action delete ifconfig| replace:: Use to run |ifconfig| to disable a network interface and (on some platforms) delete that network interface's configuration file.
.. |resource action delete link| replace:: Use to delete a link.
.. |resource action delete route| replace:: Use to delete a route.
.. |resource action delete registry_key| replace:: Use to delete the specified values for a registry key.
.. |resource action delete key registry_key| replace:: Use to delete the specified registry key and all of its subkeys.
.. |resource action deploy deploy| replace:: Use to deploy an application.
.. |resource action disable ifconfig| replace:: Use to run |ifconfig| to disable a network interface.
.. |resource action disable mount| replace:: Use to remove an entry from the file systems table (fstab).
.. |resource action disable service| replace:: Use to disable a service.
.. |resource action enable ifconfig| replace:: Use to run |ifconfig| to enable a network interface.
.. |resource action enable mount| replace:: Use to add an entry to the file systems table (fstab).
.. |resource action export scm| replace:: Use to export the source, excluding or removing any version control artifacts.
.. |resource action export service| replace:: Use to enable a service at boot.
.. |resource action force_deploy deploy| replace:: Use to remove any existing release of the same code version and re-deploy a new one in its place.
.. |resource action force_export scm| replace:: Use to export the source, excluding or removing any version control artifacts and to force an export of the source that is overwriting the existing copy (if it exists).
.. |resource action get http_request| replace:: Use to send a ``GET`` request.
.. |resource action head http_request| replace:: Use to send a ``HEAD`` request.
.. |resource action install package| replace:: Use to install a package. If a version is specified, use to install the specified version of a package.
.. |resource action lock user| replace:: Use to lock a user's password.
.. |resource action manage group| replace:: Use to manage an existing group. This action will do nothing if the group does not exist.
.. |resource action manage user| replace:: Use to manage an existing user. This action will do nothing if the user does not exist.
.. |resource action modify env| replace:: Use to modify an existing environment variable. This will append the new value to the existing value, using the delimiter specified by the ``delim`` attribute.
.. |resource action modify group| replace:: Use to modify an existing group. This action will raise an exception if the group does not exist.
.. |resource action modify user| replace:: Use to modify an existing user. This action will raise an exception if the user does not exist.
.. |resource action mount mount| replace:: Use to mount a device.
.. |resource action nothing erlang| replace:: Indicates that the |erlang| call should not be run.
.. |resource action nothing execute| replace:: Indicates that the command should not be run. This action is used to specify that a command is run only when another resource notifies it.
.. |resource action nothing service| replace:: Use to do nothing with a service.
.. |resource action options http_request| replace:: Use to send an ``OPTIONS`` request.
.. |resource action post http_request| replace:: Use to send a ``POST`` request.
.. |resource action purge package| replace:: Use to purge a package. This action typically removes the configuration files as well as the package.
.. |resource action put http_request| replace:: Use to send a ``PUT`` request.
.. |resource action reconfigure package| replace:: Use to reconfigure a package. This action requires a response file.
.. |resource action reload ohai| replace:: Use to reload the |ohai| configuration on a node.
.. |resource action reload service| replace:: Use to reload the configuration for this service.
.. |resource action remount mount| replace:: Use to remount a device.
.. |resource action remove group| replace:: Use to remove a group.
.. |resource action remove package| replace:: Use to remove a package.
.. |resource action remove user| replace:: Use to remove a user.
.. |resource action restart service| replace:: Use to restart a service.
.. |resource action rollback deploy| replace:: Use to roll an application back to the previous release.
.. |resource action run erlang| replace:: Indicates that the |erlang| call should be run.
.. |resource action run execute| replace:: Indicates that the command should be run.
.. |resource action run powershell_script| replace:: Use to run the script.
.. |resource action run script| replace:: Use to run a script.
.. |resource action run windows_batch| replace:: Use to run a batch file.
.. |resource action start service| replace:: Use to start a service (and keep it running until stopped or disabled).
.. |resource action stop mdadm| replace:: Use to stop an active array.
.. |resource action stop service| replace:: Use to stop a service.
.. |resource action sync scm| replace:: Use to update the source to the specified version, or to get a new clone or checkout.
.. |resource action touch file| replace:: Use to touch a file. This updates the access (atime) and file modification (mtime) times for a file.
.. |resource action umount mount| replace:: Use to unmount a device.
.. |resource action unlock user| replace:: Use to unlock a user's password.
.. |resource action upgrade package| replace:: Use to install a package and/or to ensure that a package is the latest version.
.. |resource action write log| replace:: Use to write to log.





.. |resource short_actions| replace:: The ``:nothing`` action can be used with any resource or lightweight resource.
.. |resource short_attributes| replace:: The ``ignore_failure``, ``provider``, ``retries``, ``retry_delay``, and ``supports`` attributes can be used with any resource or lightweight resources.
.. |resource short_conditions| replace:: The ``not_if`` and ``only_if`` conditional executions can be used to put additional guards around certain resources so that they are only run when the condition is met.
.. |resource short_notifications| replace:: The ``notifies`` and ``subscribes`` notifications can be used with any resource.
.. |resource short_relative_paths| replace:: The ``#{ENV['HOME']}`` relative path can be used with any resource.
.. |resource short_windows_file_security| replace:: The |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes.
.. |resource short_run_during_compile| replace:: Sometimes a resource needs to be run before every other resource or after all resources have been added to the resource collection.

.. |response code 200 ok| replace:: OK. The request was successful.
.. |response code 201 created| replace:: Created. The object was created.
.. |response code 400 bad request| replace:: Bad request. The contents of the request are not formatted correctly.
.. |response code 400 bad request sandbox| replace:: Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded.
.. |response code 400 checksum| replace:: The contents of the file do not have the correct checksum.
.. |response code 400 unsuccessful| replace:: The request was unsuccessful.
.. |response code 401 conflict| replace:: Conflict. The object already exists.
.. |response code 401 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response code 403 forbidden| replace:: Forbidden. The user which made the request is not authorized to perform the action.
.. |response code 404 not found| replace:: Not found. The requested object does not exist.
.. |response code 409 conflict| replace:: Conflict. The object already exists.
.. |response code 409 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response code 412 cookbook version| replace:: Not allowed. A set of cookbooks and/or cookbook versions could not be found that met all of the requirements of the run-list. A cookbook in the run-list may not exist. A dependency may be present for a cookbook that does not exist. A constraint on a cookbook made by a run-list, environment, or cookbook version may not match an available cookbook version.

.. |response_file| replace:: The response file used to pre-seed a package.
.. |rest_timeout| replace:: The time (in seconds) after which an HTTP REST request will time out.


.. |restart shell_command| replace:: A string that contains a shell command that can be executed to run a restart operation.







.. |retries| replace:: Use to specify the number of times to catch exceptions and retry the resource.
.. |retry_delay| replace:: Use to specify the retry delay (in seconds).

.. |returns| replace:: A comma-delimited list of return codes, which indicate the success or failure for the command that was run remotely.

.. |return_value cmd| replace:: The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match.


.. |revision| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier.






.. |rights windows security| replace:: The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions>`` specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options>`` is a hash with one (or more) advanced rights options.


.. |role memcached| replace:: The name of a role. During a |chef client| run, a search will be performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address will be used when rendering the ``memcached.yml`` file.
.. |role-name| replace:: The name of the virtual machine.
.. |role-size| replace:: The size of the virtual machine: ``ExtraSmall``, ``Small``, ``Medium``, ``Large``, or ``ExtraLarge``.
.. |role_path| replace:: The location in which role files are located. Default value: ``/var/chef/roles``.
.. |rollback_on_error| replace:: Indicates whether a resource will roll back to a previously-deployed release if an error occurs when deploying a new release.

.. |root redis| replace:: The root directory for |redis|.
.. |route_gateway| replace:: The gateway for the route.
.. |route_device| replace:: The network interface to which the route applies.

.. |rows| replace:: The number of rows to be returned.

.. |rpc_host| replace:: The address for the host to which a |bittorrent| transmission connection is made.
.. |rpc_password| replace:: The password for the |bittorrent| transmission account. This is often ``node['transmission']['rpc_password']``, which by default is a secure password generated for the node.
.. |rpc_port| replace:: The port for the host to which a |bittorrent| transmission connection is made.
.. |rpc_username| replace:: The user name for the |bittorrent| transmission account.

.. |ruby dsl cookbook| replace:: A version constraint for a single cookbook.
.. |ruby dsl cookbook version| replace:: A version constraint for a group of cookbooks.
.. |ruby dsl default attribute| replace:: Optional. A set of attributes that should be applied to all nodes, assuming the node does not already have a value for the attribute. This is useful for setting global defaults that can then be overridden for specific nodes. If more than one role attempts to set a default value for the same attribute, the last role applied will be the role to set the attribute value. When nested attributes are present, they will be preserved.
.. |ruby dsl description| replace:: A description of the functionality that is covered.
.. |ruby dsl environment run list| replace:: Optional. A list of environments, each specifying a recipe or a role that will be applied to that environment. This setting must specify the ``_default`` environment. If the ``_default`` environment is set to ``[]`` or ``nil``, then the run list will be empty.
.. |ruby dsl name| replace:: A unique name within the organization. Each name must be unique and must be made up of letters (upper- and lower-case), numbers, underscores, and hyphens: [A-Z][a-z][0-9] and [_-]. Spaces are not allowed.
.. |ruby dsl override attribute| replace:: Optional. A set of attributes that should be applied to all nodes, even if the node already has a value for an attribute. This is useful for ensuring that certain attributes always have specific values. If more than one role attempts to set an override value for the same attribute, the last role applied will win. When nested attributes are present, they will be preserved.
.. |ruby dsl run list| replace:: A list of recipes and/or roles that will be applied and the order in which those recipes and/or roles will be applied.
.. |run-list| replace:: A comma-separated list of roles and/or recipes to be applied.
.. |run-list indicator| replace:: Indicates that only the run-list will be shown.



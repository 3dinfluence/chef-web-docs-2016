.. Description strings that begin with the letter V.
.. The pattern is |vxxxx| replace:: string.
.. 
.. 

.. V
.. 

.. |validation_client_name| replace:: The name of the server that--along with the ``validation_key``--is used to determine whether a |chef client| may register with a |chef server|. The validation_client_name located in the server and client configuration files must match.
.. |validation_key| replace:: The location of the file which contains the key used when a |chef client| is registered with a |chef server|. A validation key is signed using the ``validation_client_name`` for authentication.
.. |value resource directory| replace:: The value with which ``key_name`` is set.
.. |values windows_registry| replace:: A hash of values to be set under a registry key. The individual hash items will become  ``value_name => value_data`` items in the registry key.
.. |values resource registry_key| replace:: An array of hashes, where each hash contains the values that will be set under a registry key. Each hash must contain ``:name``, ``:type``, and ``:data`` (and must contain no other key values). 
.. |values resource registry_key types| replace:: ``:type`` represents the values available for registry keys in |windows|. Use ``:binary`` for REG_BINARY, ``:string`` for REG_SZ, ``:multi_string`` for REG_MULTI_SZ, ``:expand_string`` for REG_EXPAND_SZ, ``:dword`` for REG_DWORD, ``:dword_big_endian`` for REG_DWORD_BIG_ENDIAN, or ``:qword`` for REG_QWORD.






.. |variables passed_to_template| replace:: A hash of variables that are passed into a |ruby| template file.

.. |vcpus| replace:: The number of virtual CPUs that are available per virtual machine. Possible values: ``1``, ``2``, ``4``, or ``8``.

.. |verbose| replace:: Set for more verbose outputs. Use ``-VV`` for maximum verbosity.
.. |verbose_logging| replace:: Indicates the level of logging. Options: ``true``, ``nil``, and ``false``. When this is set to ``false``, notifications about individual resources being processed will be suppressed (and will be output at the ``:info`` logging level). Setting this to ``false`` can be useful when a |chef client| is run as a daemon.

.. |version artifact| replace:: The version of an artifact.
.. |version chef| replace:: The version of the |chef client|.
.. |version cookbook| replace:: The current version of a cookbook. Version numbers always follow a simple three-number version sequence.
.. |version dotnet_runtime| replace:: The version of |microsoft dotnet|.
.. |version package| replace:: The version of a package to be installed or upgraded.
.. |version package_version_assumed| replace:: The version of a package to be installed or upgraded. If a version is not specified, the latest version is assumed.
.. |version package_windows_registry| replace:: The version number of a package, as indicated by the ``DisplayVersion`` property for an ``Uninstall`` registry key. If the version number equals the display version, the package will be installed.
.. |version pushy| replace:: The version of |pushy|.

.. |versioned_cookbooks_true| replace:: Use to append cookbook versions to cookbooks. Set to ``false`` to hide cookbook versions: ``cookbooks/apache``. Set to ``true`` to show cookbook versions: ``cookbooks/apache-1.0.0`` and/or ``cookbooks/apache-1.0.1``. When this setting is ``true``, |subcommand knife download| will download ALL cookbook versions, which can be useful if a full-fidelity backup of data on the |chef server| is required.









.. |version resource yumddddddddd| replace:: The version of the package that will be installed, upgraded, or removed. This value must be a complete version-release. Default value: ``nil``.



.. |virtualenv lwrp homebrew| replace:: The name of the virtual environment.
.. |virtualenv lwrp python_pip| replace:: The virtual |python| environment into which the |python pip| package is installed.





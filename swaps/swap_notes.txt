.. Notes that are used across the docs.
..

.. |note xxxxx| replace:: xxxxx                                                  

.. Note strings used in the documentation
..


.. |note all_resources| replace:: If you want to see all of the information about resources in a single document, see: http://docs.getchef.com/chef/resources.html. Keep reading this page for topics about individual resources.     



.. |note api chef server manage clients with knife| replace:: In general, the |chef api client| list should be managed using |knife| or the |chef server| management console, as opposed to the |api chef server|.

.. |note api cookbooks site using knife| replace:: In general, using |knife| (and the ``knife cookbook site`` sub-command) to manage cookbooks that are located on the Cookbooks site is more efficient than using the |api cookbooks site| and is the recommended approach for managing cookbooks on that site. This document provides information about the |api cookbooks site| in the event that using the API is necessary.

      

.. |note chef_gem vs gem_package| replace:: The |resource chef_gem| and |resource package_gem| resources are both used to install |ruby| |gems|. For any machine on which the |chef client| is installed, there are two instances of |ruby|. One is the standard, system-wide instance of |ruby| and the other is a dedicated instance that is available only to the |chef client|. Use the |resource chef_gem| resource to install |gems| into the instance of |ruby| that is dedicated to the |chef client|. Use the |resource package_gem| resource to install all other |gems| (i.e. install |gems| system-wide).

.. |note cookbook template erubis| replace:: The |chef client| uses |erubis| for templates, which is a fast, secure, and extensible implementation of embedded |ruby|. |erubis| should be familiar to members of the |ruby on rails|, |merb|, or |puppet| communities. For more information about |erubis|, see: http://www.kuwata-lab.com/erubis/.      

.. |note enterprise_chef_tuning| replace:: This topic contains general information about how settings can be tuned. In many cases, this topic suggests specific values to be used for tuning. That said, every organization and configuration is different, so please don't hesitate to contact |company_name| support to discuss your tuning effort so as to help ensure the right value is identified for any particular setting.

.. |note env resource variable on unix| replace:: On |unix|-based systems, the best way to manipulate environment keys is with the ``ENV`` variable in |ruby|; however, this approach does not have the same permanent effect as using the |resource env| resource.

.. |note erlang_call resource must be on path| replace:: The ``erl_call`` command needs to be on the path for this resource to work properly.

.. |note execute resource intepreter| replace:: Use the |resource script| resource to execute a script using a specific interpreter (|ruby|, |python|, |perl|, |csh|, or |bash|).

.. |note file resource use other resources| replace:: Use the |resource cookbook_file| resource to copy a file from a cookbook's ``/files`` directory. Use the |resource template| resource to create a file based on a template in a cookbook's ``/templates`` directory. And use the |resource remote_file| resource to transfer a file to a node from a remote location.

.. |note install trial for hosted| replace:: To install |chef| and try it out without having to install the |chef server| on a physical machine, sign up: |url opscode_hosted_sign_up|. After signing up, continue with the installation process.

.. |note knife quick reference| replace:: The |knife qr| provides an all-in-one quick reference of |knife| commands. View a web-based PNG file here: http://docs.getchef.com/_images/qr_knife_web.png. Or download the source files from here: https://github.com/opscode/quick-reference. Print the front/back source files and laminate them for best effect.

.. |note knife rb windows path| replace:: When running |windows|, the |knife rb| file is located at ``%HOMEDRIVE%:%HOMEPATH%\.chef`` (e.g. ``c:\Users\<username>\.chef``). If this path needs to be scripted, use ``%USERPROFILE%\.chef``.

.. |note metadata json| replace:: A |metadata json| file can be edited directly, should temporary changes be required. Any subsequent upload or action that generates metadata will cause the existing |metadata json| file to be overwritten with the newly generated metadata. Therefore, any permanent change to metadata that is required should only be made in the |metadata rb| file.

.. |note registry_key resource recursive| replace:: Be careful when using the ``:delete_key`` action with the ``recursive`` attribute. This will delete the registry key, all of its subkeys and all of the values associated with them. This cannot be undone by the |chef client|.

.. |note registry_key architecture| replace:: The ``ARCHITECTURE`` attribute should only specify ``:x86_64`` or ``:i386`` when it is necessary to write 32-bit (``:i386``) or 64-bit (``:x86_64``) values on a 64-bit machine. ``ARCHITECTURE`` will default to ``:machine`` unless a specific value is given.

.. |note registry_key not_if only_if| replace:: This method can be used in recipes and from within the ``not_if`` and ``only_if`` blocks in resources. This method is not designed to create or modify a registry setting. If a registry setting needs to be modified, use the |resource registry_key| resource.

.. |note remote_file resource fetch from files directory| replace:: Fetching files from the ``files/`` directory in a cookbook should be done with the |resource cookbook_file| resource.

.. |note resource_based_on_package| replace:: In many cases, it is better to use the |resource package| resource instead of this one. This is because when the |resource package| resource is used in a recipe, the |chef client| will use details that are collected by |ohai| at the start of the |chef client| run to determine the correct package application. Using the |resource package| resource allows a recipe to be authored in a way that allows it to be used across many platforms. That said, there are scenarios where using an application-specific package is preferred.

.. |note scm resource use with resource deploy| replace:: This resource is often used in conjunction with the |resource deploy| resource.

.. |note see_attributes_overview| replace:: Attributes can be configured in cookbooks (attribute files and recipes), roles, and environments. In addition, |ohai| collects attribute data about each node at the start of the |chef client| run. See http://docs.getchef.com/chef_overview_attributes.html for more information about how all of these attributes fit together. 

.. |note doc_version_11-4| replace:: This is documentation for |chef 11-0|, |chef 11-2|, and |chef 11-4|. For documentation about the current version of |chef|, see http://docs.getchef.com.

.. |note yum resource using file names| replace:: Support for using file names to install packages (as in ``yum_package "/bin/sh"``) is not available because the volume of data required to parse for this is excessive.

.. |warning provisioning| replace:: This functionality is available with chef-provisioning: https://github.com/opscode/chef-provisioning/. |chef provisioning| is a framework that allows clusters to be managed by the |chef client| and the |chef server| in the same way nodes are managed: with recipes. Use |chef provisioning| to describe, version, deploy, and manage clusters of any size and complexity using a common set of tools.

.. |warning selinux_file_based_resources| replace:: For a machine on which |selinux| is enabled, the |chef client| will create files that correctly match the default policy settings only when the cookbook that defines the action also conforms to the same policy.






.. |psa| replace:: THIS IS A TEST.
                            


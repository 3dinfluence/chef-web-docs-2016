# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 13:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# 2bdb5e0b218d447781c57eb2d17f08fd
msgid "Cookbook Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 68ea2f6ff50d44a590faabe4a3a94312
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 09e5b1b7731b45fbbcdb696822dbcfe5
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 15474c390f364aa2ab4c2fd2ec9c5741
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:41
# 681c36e9279e4452a5e0c9d2034bffeb
msgid "When to Use Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# be18f8160d2b490796b4df9393a28140
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# a28951f2a0cc45239512a0bf97291b88
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# e63a930501644f3293cedf68d2a801db
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 723fb72e5a904e26bc6c56cc7ab99fdb
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 09f6b44eda764c9f8a86cc05731d703f
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# 218c33dd0a8c427f815c3d4f492eb64e
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 97c8b2e5dac94a3da9f0b0df68a0413f
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
# ac6b58b2a41a405e8bd14fa2fa35256a
msgid "Attribute File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# 3d553b327a0d4679833900ded9347d1e
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
#: ../../includes_node/includes_node_attribute_type.rst:16
# 2a4c9f3bea1e4dcdb6f42bca1a8c10a2
# 2b7ba6c37ee2497fa41288c6d997eb81
msgid "``override``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
#: ../../includes_node/includes_node_attribute_type.rst:12
# 5979529afe024c76be8a6bc710db36e9
# 87da7548f0c14b179a638fd2088a3fc3
msgid "``default``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 0a5817400aad4d11a5f757c7ba35ff12
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 5b166469e57949c28dcc832884abdf50
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 36f3d77aafee4ebdba9cecfb2c025470
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# d73df86677944de3b04692084827a2a8
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# 7ff0e25f5282479f8f17ea9f965d1e9c
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# db0a5b5964e74522851cd9a0a092347c
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# c83989f74be74593a4b6a2997a6e22d7
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# e90c6c855dbb45e2b7ac3d4ef8646c55
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# 2aedc46b72094763b44b73fe3d4cfb0f
msgid "Using ``attribute?()`` in recipe"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# 757c16699a9a44ea84296816f7f9a0cf
msgid "Cookbook Attribute File Ordering"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:4
# 2aa5bbb27b4e494fb9e60be5bc47263f
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks. If you need to ensure that one attribute file is loaded before another you can use the ``include_attribute`` method."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:10
# 643807db5a4e464f950f62f317151109
msgid "For example, if a |ruby on rails| cookbook requires that |apache| attributes are available first):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:16
# 52212c02f7f549cfb8df5232638f7421
msgid "This will load the ``apache/attributes/default.rb`` file before continuing the processing of the current attribute file. If a specific attributes file (and not the default attributes file) needs to be loaded, then use the double colon (::) pattern (similar to the ``include_recipe`` method):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:22
# 22ab8499e5634126b323e1a4b19c86a5
msgid "This will load the ``attributes/tunables.rb`` file in the ``rails`` cookbook."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:53
# fb2d131073484caca66868b8d285e5b7
msgid "Attribute Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 823ec35909634bd68ebfe3fe695546c2
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 2a94a232816d40d4b70d7eaa760a3555
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:57
# 67efe2a697a14bebb82112c546dafa36
msgid "Reloading Attribute Files From Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# ad08eaf2f8c640c2bb78ab90d66b3d15
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 4c126b7a4aa44435ad920067a3599862
msgid "Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 43cab532404844468c919ff16781e567
msgid "There are four types of attributes:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 7f9e8dc2f2f64e83b36f5f6306a866c4
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# 8eded2699a6e41f4b4a12bba4df8204b
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 1a099b2e9e5e410888150779b43be7e3
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses default attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# d1b0b6d6cbee44d0beb71ebfdd139e9d
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 363da9e81b034abe843baf39b20ebf37
msgid "A normal attribute is an attribute that persists on the target system. A normal attribute is never reset during a |chef| run. A normal attribute has a higher attribute precedence than a default attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 476bc4cb82ea475b8db42b417243dda8
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses override attributes for role-specific or node-specific values when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# 5257bbbcd360427bafa0a1eee97aeaf9
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# a12a8df12305403b93afe5ff032d08cc
msgid "An automatic attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An automatic attribute cannot be modified. An automatic attribute has the highest attribute precedence. An automatic attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# 2b1f6e304ce147a5854954c257ca6e63
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 286da9f88b764f13901a40be3b706bab
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# af47c3bce6774855954233d7d02c5cc5
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# ab9db1a3d84a424881a37a8829f4764f
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# a8a34f5da5cc40bb9120ef1e2aa7d1a1
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 3863e00be3e94ea9891edc150661cd5c
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 75349809a98c47b29b52e84df4893202
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# ea63644475fb4320b775bf9285396cb8
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 7d92de9226104a0eb87dcc14d4f21498
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# fdf246d5a98a4b9ba25253cb2adfb211
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 6f117d4bf7cc4eb3ab1ddaa1e549acb2
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 07a99107f7274fdeb1e71f607f4d685c
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# b871d3a2f46549b2a54720536ce8a66a
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# b452ad69a49e4563b3e11db5f91fe0bf
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 138d6a0592414bfcbfb29d0b23552f8c
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:73
# e697e8005acf48a683d658e0478518c2
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# 2a027842c90d4824ae2728365698bb1c
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:77
# dee7a02780654eb4bfefadb0efcd2553
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 36cdf0b7cb6a430c9969dbdb877b639a
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# e8c8f8e5f2044e8998642f21ae0d3f9e
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""


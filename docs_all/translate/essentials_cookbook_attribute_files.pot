# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# b42a75b1e1ae4ff09d1013f0583ba76c
msgid "Cookbook Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 22cfcf794f10490ca36a05b64f179241
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 7f215f17d32b47c2ba21a70bfbb097b3
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# a24827e61e704fe1899d8c809c14d439
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:41
# e2f77f9790624d3b9f907460f6562c2d
msgid "When to Use Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# fed05196000747588a46498409c75edf
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 18b0fe814bab4fd58b639aa886e12a8a
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# f61eb83ef3cb42a38b7f716b4efaa80d
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 1fc71af81abf4723a3e7f9c3d6f54416
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# e212fd2addd24a41b093a6c336c9ff46
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# 3547a109829a4df987377da9a358fb31
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# d223dd6b9ae34a20acf195348cb52bed
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
# 33779b3bfb0b4b0d89ed9d42f59d8722
msgid "Attribute File Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:4
# d10837ad117c40fea5b11542736d22e2
msgid "Use the following methods within the attributes file for a cookbook or within a recipe. These methods correspond to the attribute type of the same name:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:6
#: ../../includes_node/includes_node_attribute_type.rst:16
# a8e50aa8d98749679fab529fab439cb0
# d3fa956de957473093f9abc0d7c71f1b
msgid "``override``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:7
#: ../../includes_node/includes_node_attribute_type.rst:12
# 58ebfc9926034639a7f786730f1bbbaa
# 2cb8415abf6243e09fa906eb97f69e84
msgid "``default``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:8
# 0f895ff78eb642aeb71bde160fe4458a
msgid "``normal`` (or ``set``, where ``set`` is an alias for ``normal``)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:9
# 63eb6b6a37934799bb0cb9ba3096b23f
msgid "``_unless``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:10
# 531fc5efa5ab4c12a734149a8e2e4cec
msgid "``attribute?``"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:12
# ea53c318a65b441b926a556c91f2d9e0
msgid "Additionally, there are ``_unless`` methods available. See the end of this topic for information on how to conditionally set attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:14
# 2f3929a2e05440b194edb4cbd42cbd8e
msgid "Another useful method available related to attributes is the ``attribute?`` method. This will check for the existence of an attribute, so you can do processing in an attributes file or recipe only if a specific attribute exists."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:16
# 1fc8dd94fc2d464ba078933906888534
msgid "Using ``attribute?()`` in attributes file"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:24
# 248c24619236493da0d2a9d55dda8940
msgid "Using attribute?()`` in recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:32
# 7749007992394745ac41701f2802ba58
msgid "In the recipe, we need to use the method on the node object. In the attributes file, the node object is implicit. In either, we can also look for a sub-key of an attribute by chaining the attribute as methods:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods.rst:34
# e65565f187724e44b63900f77c1495af
msgid "Using ``attribute?()`` in recipe"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# d5c62f63a5a2457cb7464d0f941a1cbe
msgid "Cookbook Attribute File Ordering"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:4
# 7ec80a7890ad4f38895f6bc1721c8c12
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks. If you need to ensure that one attribute file is loaded before another you can use the ``include_attribute`` method."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:10
# 9d0f8b5f276748a6966df555745e6682
msgid "For example, if a |ruby on rails| cookbook requires that |apache| attributes are available first):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:16
# a2849e2a9a0b46cda7d4e5f0e9811ea1
msgid "This will load the ``apache/attributes/default.rb`` file before continuing the processing of the current attribute file. If a specific attributes file (and not the default attributes file) needs to be loaded, then use the double colon (::) pattern (similar to the ``include_recipe`` method):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_ordering.rst:22
# 1a95e588f1944ebd9a7ff261519ee642
msgid "This will load the ``attributes/tunables.rb`` file in the ``rails`` cookbook."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:53
# 512ea15bda2743869d9963e9afa70ea7
msgid "Attribute Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 10f22cbcd3ea4cb5bd561c6ae5339cf4
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# cb38f02d5ec14154ae182aefbbe6953b
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:57
# 6587d6c3f83348ce8118330f464150ce
msgid "Reloading Attribute Files From Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 56470d94d1f847efbfc0a6d9a6b92189
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# 1561d8497b084b4a9e44cc75d632b31f
msgid "Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# de242df646854577ba0d1e8ae5ca63c8
msgid "There are four types of attributes:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 15b42a24a4db4a319b9a0ed2b30099f4
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# cd80c8cdd2bd4e6db985f7d9b9768625
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 577f9818db00472ea98c8db0d0dd2cd1
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses default attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 945a09e97aff42eebe0a47e57826e996
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# 81f6522a4da64822948e90da5f29094c
msgid "A normal attribute is an attribute that persists on the target system. A normal attribute is never reset during a |chef| run. A normal attribute has a higher attribute precedence than a default attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# 608765fc0dde459aad0cfb1e47121709
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses override attributes for role-specific or node-specific values when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# c214fc132b45468a8029c89578e452b7
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 56ced35624a6465cbae58e4e03e30a61
msgid "An automatic attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An automatic attribute cannot be modified. An automatic attribute has the highest attribute precedence. An automatic attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# f091d5b26510402282a2838e9d93497c
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 85b208ac413549b7b637aafae6ec04a7
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# f94148fc39344e38adcde06594427fc2
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# baceabc4f8da4a96afa9fc6ea756d588
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# b29a61a1a9bd4c31b76233803cc3678e
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 61722ac347794427bd4bde54a19db69b
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 0a99f0f3f5504e25a754ba6696e2401b
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 450c65b5f2474324b489d43517f95a38
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 5effd9f3d1aa49fcae6b198388bbf7d7
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 9cb7421a14d44247afff02d8337160aa
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 9f17ec3a55194a7fae0598b15a83fed3
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 395db416345345d69bcca14a6c6ccc52
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# ab15c5a7322d49d683496369b40ebe5a
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# b4b044d999384a2a8fc4de77af8faed5
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# da26026b6d534e85a65c71afc15e7630
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:73
# 436de359be0440b6836e1f8309e8988c
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# bd1c4c5a2c424a1f84efe4cefa165537
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:77
# 9b6b25b719b84aac955db8b77e4baeae
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 95113b0c559f4089910d48db26c472e8
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 13bc84d196d6457c8433e8330aec7f13
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""


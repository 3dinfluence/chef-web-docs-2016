# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-02 14:57\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# ff9949e7a70e418f951869fbae157843
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# b2d04cdffb454002a456e989fe410594
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 9f58df09bddc4ba9b8182333668d80ab
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 8a8653a528df41d5941bfbaec76c7275
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# e8198a558a5c42ffb4e8c84860392cf4
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 5a6cf7e756cc4d1d9ed650a10941f1f4
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 5315b0dff79d486d83beb462e956b1b6
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# db49227a857c4e1aa6803a69502dc2de
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# a9c94c7b61524866a49bf2e0edba8744
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# bc0863405f834dae8e58afacd375124e
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 6197558244934e4d80d92e2b3b82bdc6
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# d209200f5eac4a6b90b9b0f0748248ba
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# cc7f69280dfc491a874989d8a46705d0
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# abe83e93405e40babadeb7fc8e349cb3
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# ee93a3ac91014e308c00bca8e1b4f6f0
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 9274c05d980c4c4d9df91eb0657f138c
# b33050ed93ac4f4c909efaaaa6260480
# f8ed2a9c7bb841eba3235bd1af5b3e40
# 26e221b1738f4ca19fea8ccf451f9a28
# 1bbca2cbf04343398ee2dd06e70ab972
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 92d76eb31183436cb78d3c17fe22c074
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 2ce07b03deb74b829ecf905832afdf05
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# af407318e00a4ac5976a8c2b8d50548d
# 24dab6b827b14998b159fda9a0905538
# 316ce4a0c18647c191f4ce95fd77cbbd
# 2301123fa9d546d3ba48f057080df4f2
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 701666e118ba4ef08ccf7a0367b1e9af
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 8a403fa11d4f457586718c59fbc4faac
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 99f1bb013b3f4e588f705c89669d6978
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# 29c0c99439d845ada7e832d09fe876f2
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# 2e2553a2c318434caea53786b2913337
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 6066c42453fa4657832b2d3ed4024173
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# b290ac7e763046da8136e8b66f278651
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 419b3f2c1b0a40d5b3d634f0a13601f1
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 8e700a6f036947f78805e06b8e4886b1
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 3fb08121f0b849ddba1c545a86069944
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# ebe29fdbcc014d6eb5a693ecd2f6a2bc
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:108
# 3c63dcca3c094add8ddcf29422d362a2
# 57d1284829dd436f8cac2e25c1986cb8
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:124
# 40ac831f19db42c9961b6243e7edbbec
# e3529e493fe04f99bb3fb16b41e18c39
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:160
# 6c02532cc29a4ff19c4b22deb30d62fc
# e93b98c55a31413a9181509502c904d8
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:164
# 0ec95d843dd543c69a625bb7b58fb98d
# b0e2a39324c745ca8618e86f2bb95e96
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# fe13d61c9cfa48a8abc350bfabf4b189
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 958ad4dbe0d94116b54c3e61f1efe952
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 780f415a61274548b356525d9e184094
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# ec1178b7d0664a80910b0aac9de4bc94
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# b37dbf8ce23b40b2b97fb291e37c7f36
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# ff1af453656a4618a10f15fc0387f2d5
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# b1c3c1d9b64046369dbae1fefd0afc3e
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:92
#: ../source/dsl_recipe.rst:112
#: ../source/dsl_recipe.rst:128
#: ../source/dsl_recipe.rst:146
# ddeb9dcd0b574d448db22df8c0e6e3ff
# d483ab6a60de4cf9adffa086f7120b7d
# df3b984eda164bad952ab6b969e2bce0
# 0f71485f9a4f4fddbec3589484d9a79e
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:93
# 8683e44ca5704ce8a92b3557d5e2f346
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:95
# ba4c070d68e643268c65b6d6915f5b75
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 60e0a8ffc9864c1a898226492de1b347
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# 7d7b8da05d394401b85fb0b31dcdb86d
# 7803b1d2598f4ae6b8201b12482d39ff
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:99
# c286bb2fabb94834a9b3971b4bd4e4e8
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:103
# fa54da6a38574bb2bee77f8ffcc4a3f5
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# c20121e592e64cf0a66b821d6a723df3
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# ca357c289c634e9386bc88829aae18ba
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# 41079618fd924c3d97e03e86ce8ff7d0
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# 95aa009b125844f987b590a5faa7f348
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# d437ddeb9ed94e15b00be5a8d57409e7
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 654d681d9266493d919755b38750276e
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# d6e6f31da79f4f4d87bdec0723ec445c
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:113
# 466268f1ea354a8688be7c77dc37866a
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:115
# 0e303b5fa2654537abef8960243e1b5e
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# 9c9546ac63574fc0a2c9159020738cb8
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# 0ce66a9c8cc041d5b2e3c3a4f34e66b3
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:119
# 6a092a89551e48e8aaa3927ed5134069
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# a711f43a0fb2422ea7257d1c8d02d1f6
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 63914d0229d548b09c2652e058206df1
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# b9ff105360524585b35644f88fb65d4a
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:129
# 2f38904429e04b5fa4cc3258467fa957
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:131
# a1af7f0b0e5746a0beeeac1b83cb31e9
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 9c4212266d234dd2aef143d93b8c9622
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 4599c9e9bfa64c7d8fef5de0e698a90b
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:136
# 30786dd908e94a31b9b871d5cf76c21d
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# ec1111c14e3442caaaf225c751e5959d
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 49dff1332dd7494787af51b926234989
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 5437cc58486048939117a97256cf9f63
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# db3274a199be4d2189d22b7a81e1c50d
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 03985fa1d3264df4b63e48b7b103f158
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# 8db9edcc76214ad8b1f8c360df7071e4
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 8fafd8b0eacd480ea44cf5cd0513b3fe
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 252c5dc46b0e41678c37aa072cb388cc
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# e159713eda9d4f1089565a9108c6e345
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:147
# c5a7f4e73cc34881b87deb052941ed73
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:149
# 0289446fea8b4dc28ae10321785426f7
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 2b0e6b3c3ea445d88e800fbd51e0d5fc
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
# 8d47799557564906bc252b2c79a89e23
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# f288308ecb454831a11f2da4508f5c8c
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# c6a35ee66b42488bb8005b074d853765
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 908290bfc38c48af9fe5cb90a4ca23fd
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# d2e0643467814888a3131c2eff95c22f
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:154
# 8a3f7651636c4e1e82797c11971e5ee5
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# d405f7b72fe24f8797af256ce171a24a
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 1737560e33fe4ad585a007ddfc1ed6e3
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# bef77b0e25234512b5a9455031806d3d
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 1e96a4f3a4c140c3878f145720d060cf
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 507133bea6c341839fdaeefe4e7a51aa
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 6467b8a7df0a4519af45fdb40f224856
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 04281adb653243488957d9168a0b8030
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 723119d8371040b08ea4e39776f6ec5d
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 206ddfa161e941a5ac6769dbe73b1af3
# cb4446109841456e8a392a2c7a7bd964
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# 9c6f729123054936a5906a4fbff29f79
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# e1e6c466da0d403aab3bfb7d86db3141
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# c1265fd3abc94e7c88110de03ef65d9f
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 582df04c87124e0787b7c928c073b2da
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 0db73c6289e34a4589a1a025876eca32
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


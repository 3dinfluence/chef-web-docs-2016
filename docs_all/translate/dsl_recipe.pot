# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-23 12:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# 3d354d52314b43a091e354a7555bbd6a
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 7be8af4446e84426ac1e4e55fbc4e1a6
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 96bc479ec3e64846952dec8acb1c02b1
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 2859e8938f5842649b2acc41afeed11a
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# f9f2a630184f4a78a29945b44da45f83
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 4ed60636b1774148a64eeab4d923216c
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 2d8b500830bb48f985055c7b83dc3f71
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 9ea9d1918f8b43229380c7952ed325e0
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# b8321df77f2348e987b7f601d93ca48b
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# 9a70bad52dd04e64b698761068cab9d7
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 9a00fea03cd84463b8728345933365d5
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 900e392867fb425e9d66a858a9bda8eb
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 4bc53981f5294c46a827bfc78f2a1e11
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# 2be41d97f2304718b60ae0219090c106
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 94ae3be9756b4c37be52ec075f8c032c
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 4bb39b553ef8474195e452a6296de300
# 7b154b2d2f754910807525e29e30a15d
# 6f4ddc141e384e8ea231a16fe1ba396d
# 75883ed08f7d4d60ba4eb419f0e695e8
# b1436655935647ebabea1c52b095cb9b
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 2e72b2bdade7448582a9ca82068501f4
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 85d0863a5bd94b30b0f3bb3fe32d9fe7
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# f3ac348022f348a5b7f302cf02d97544
# 79eb64ee55d74a8ab8f73747018fc15c
# 2b85ec9289494878b79228d5637f0c25
# 03af0bafb8704e0bb0ce8e5425389f96
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 0407cda0737b4ee1b606842fd687f84d
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# c256232582314b45a42ec922eca68329
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# b621152d83344d7aa3f612693ccae537
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# 2039dde762a44d76aca6d3c482b4796e
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# 2aa323220a36457e9efe7019fca05d71
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 067c1cb4b6134567855f6aecf3a3dc74
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# fe00471fd09e48999b9e10b5db81d3fa
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 0075dc6433e14098a8ad5465ded26d55
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 28a5addecf254390ab4d3f0d2f7b9710
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 4207767358824a30af60941eb7e2c5dc
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 1ed637b7026e46bc99ca5d42d3c19e85
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:112
# 3906ae518172419381cd3648e3949567
# c678d190d63a4243a335b1a5c82a5da9
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:128
# bd57c54083cb4b878d86841c2c5ca93b
# 3fe773bff76a40f7b3383ef1cda6a091
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:168
# 0b4a4d9ddab947e28b2aa2829f7554fa
# b395f95e595f4160b7bb7b10e9ebb5ab
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:172
# af5fe34658b4459ca7d0507a7ac6c8c1
# 38f8f0fea33c459fbacd7f324c824f56
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 6ea69475f5344a63a16eecfa91b96aec
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 55634ee3d6bf400aae7b36a4610a6721
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# b593506a32914df99750872464cfd2b2
msgid "cookbook_name"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_cookbook_name.rst:4
# a41ef2d3ae214effa61d0078ecc3a92f
msgid "The ``cookbook_name`` method can be used in a recipe to return the name of a cookbook. The syntax for the ``cookbook_name`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_cookbook_name.rst:10
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_recipe_name.rst:10
# 0e3bfe719fdb45fd862fd7ebec083cad
# cad7fb4cba494be5a02e942c40dcd682
msgid "This method is often used as part of a log entry. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:90
# 46c620933b214f56944f32dde1dd5992
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# a8e3ee2a33ab4251b65bb9290599e1ea
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 0c23f16e95204870920e7fc7005cf507
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 321479844e934ff38a106cb5e83f35d1
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 43a2c71e487e4ce78d30f3f1e74d4504
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:96
#: ../source/dsl_recipe.rst:116
#: ../source/dsl_recipe.rst:132
#: ../source/dsl_recipe.rst:154
# c3e599d5f02a45169d2c48e02a2e151b
# f7be605f20694a08986d8669061629fd
# b316237065224b16bfce939761b8bdb4
# 957addb510144213bf07be8cb1ffd1d7
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:97
# a6482536b678477397731e0048db55fc
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 6bd2e7d2c4df473cad4ed8403ddeb829
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 4506ae76211943e2a752f523e1fe18c8
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# 3ad5e0af91654dd89f9f021416c35d2f
# 12d9df88c9dd48b184b77c48366aa7bf
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:103
# 9b26c6061c6043009ca279f7206d49bb
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:107
# 118b075d02694cec877cf2267e294f17
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# a5714f1620bb40479c57baed9b4749e6
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# 5fbeae57c4e64238ae023720c363e312
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# 6dec3a40f672416b8be27c1127387a02
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# 5fbc75704633431eb00c50355f569d0c
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# e44d03565c8a49d19d6834dd07250822
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# dd99abe6f24246cea71372e0675b814f
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 4a3c8f3e0e544e58887e13209f7e9862
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:117
# f4c31dd7877948cea43faa7bb0e269f0
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:119
# 3ecbc1037690425b8a7d82e74bffda76
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# c9abf30b47624322b0fb0446a81b4bd2
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# a635e77653b84d2da0bbc277f8c930eb
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:123
# c148f0282cd3449895046105010f1070
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# c7d8cb3ffa34451d844779ba68a4396f
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# bf372dd4c8804c4db530daf1a5a1995e
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 4bf4ac011e124346992b7b25b5e9b0b1
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:133
# 90d0d7b7559849cbab3aec47ee2bb871
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:135
# 75532c983aba4bf894105203533cf5c3
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 116b23046feb4b309788eb669ffb4976
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 47e91de463c34840a4c8e1ec81a15e1f
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# 48b123684ae3435bbca8c1cff56aa48d
msgid "recipe_name"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_recipe_name.rst:4
# 4795db4a7412466491d1736bc7ec0cbf
msgid "The ``recipe_name`` method can be used in a recipe to return the name of a recipe. The syntax for the ``recipe_name`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:144
# 32fc593aa4b64919bdd98733052424fd
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 3a8f217efb5f4e69ac6da7c5e4aae03f
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 74fd250c91f94e17bfab4b9563094363
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 7aed8745e0e3429b9c34b3b3519f380f
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# fa45ddda1285455dbfb45c3dd0731989
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 9df91661113748008d673f6b1029092d
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:148
# b622f04735e641d9954b91894804995a
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 6f4b1952a9e149cabcb2cdb6fbdbd858
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 0aedb6dfc80a406db1437f480c48e0f4
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 592ce0ddf308480bb7093eb06c7161b0
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:155
# a5a1d5ea67eb445cad48ce90d8b41788
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:157
# a1baf2a1c79e4011b3afddd3ee389572
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 6775d7aa0f4a413ba9c3d463212e027b
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:18
# bedfca26714f4db892f0bfa9b79cfbc5
# 7dc0aeea74df4c4d94db988f2be38ddb
# e70fb38ed6ab4959920fed7e36130da5
# bb110bab76a24fe7964e189f1dd8db6d
# 7826139c6fa14896a650a1df5091e823
# afe3bcd555ec4d4182e1837f8ee900ae
# 76c81d89a2a34035aca277496bd1ea8b
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# 54603551b7664da39c7210a1cb6e6a40
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# 731a6a7a5db943fd9c1cad654075d4ab
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 25a6f39e02c8490bbf1df165dd44f382
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# 25d706d8f046485c96a1cb43018cdd15
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:162
# b6517f4c896c42a3a3cf3d219cdc309e
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# a9ce803c8f88425c8a5da8b94112e9a6
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 971d372e7efd41e79669f1a729acb10a
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# fa679ce7fd7e474c9106ad5d18e9b360
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 9ff018e2a0544fb7942507b9a5405c13
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 41280116b5794072a2abd7312ce9af7c
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 19c6f6ddcb42449b8c03346d682249d6
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 9df09a768eca4f179cf7774302924f85
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 47a0f7a6b5084631aa918202ace7a345
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# f727b105e75e4567956472673bae306f
# c46e58ce189e418f85899df161b66857
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# b000771ab2974581864338654af57738
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# c87911ee0b364a42b64922d695133f51
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# ec0a7d6f82a6421c8d3bf59fbac1e5c9
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 17fcf258f3c9481983970fc7a64498f7
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 35581efe38c74daab806ab4899a5df43
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""

#: ../source/dsl_recipe.rst:176
# e451fe647e5c43f18ac815b7bc2f90a3
msgid "Windows Registry Key Methods"
msgstr ""

#: ../source/dsl_recipe.rst:177
# 29b35da548224554b6a61eb1e17e2d2f
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""

#: ../source/dsl_recipe.rst:180
# 0b2d0c51961c4ac3aad3312a2b6b5d14
msgid "registry_data_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:4
# d411817d3bda4a699c9b21916feb234f
msgid "The ``registry_data_exists?`` method can be used in a recipe to find out if a |windows| registry key contains the specified data."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:6
# 5c52c5e9c8724329a93c62df32048656
# e1fc2768aae84a899a11288a30d8b2dd
# 5bd4c78085b6476baf01264167526be9
# 9072b071b569442a9ca129960cb0f093
# e7f2f24212a04a87ad78231bcf9c76d5
# 7943ba25733d4c0990ed505c53ebbedd
msgid "|note registry_key not_if only_if|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:8
# c4528c9ca54d498b93fb34c974eb68aa
msgid "The syntax for the ``registry_data_exists?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:20
# d6723d36ada945a98b5cc25b885c790b
# 5e04114c9bd146c9a286ad622cddd856
# 0369d05b5d2d417e8b93fb60bb1a539c
# 7e16b8511ea44fe48bd3358111d5c7cd
# 8cc134de28b14781b5111bf410b64a8f
# 03795e2d3a21402dbe1d003d29ce14d0
msgid "``KEY_PATH`` is the path to the registry key. |key_name resource registry_key hives|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:21
# bf35187ba5d2494d99a09ab8aaee3660
# dcfa93ca745b40b49a8856d6e2a5a5bc
msgid "``{ :name => \"NAME\", :type => TYPE, :data => VALUE }`` is a hash that contains the name, type, and value of the registry setting"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:22
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:22
# b4bf5453f29e4344820076ba66b2771c
# 73b4cca0cf364d8588e3e931231f3feb
msgid "|values resource registry_key types|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:23
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:23
# ebdaf387d6b04d79a76202213ae6630f
# d23f1f8fead548e3b53252b8ac68754d
# 3c56da2e46214e7cab847846e355bd2f
# 096278006da3474b9213f2cd3fb02ed5
# bce72a9d23a94b95a6a15eca85ae4b0d
# ebf14d1e8ac64d42ae82dde3a0ef4a7b
msgid "``ARCHITECTURE`` is one of the following values: ``:x86_64``, ``:i386``, or ``:machine``. |architecture resource registry_key machine|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:25
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:25
# 84100c07861d48b29f82f03e7dde75cd
# 1376c734b2164d068d15d2a2f39d0a16
# 4076145cbcc649a089ee8686587c2193
# 161ba13211b64d39812b90971b4d584c
msgid "This method will return ``true`` or ``false``."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:27
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:27
# edb31c28336c40e395051bbe40683443
# 778fb3a222c84404ba77121b922096ce
# 3f1eda9e47464b829763fa20d82cba37
# d4e07b947196410598d5d9a24671ac53
# f15fa0dd648f4771974607c03ef6e09b
# 9875e47c037d4f9784e8dd3d0fd4c7fd
msgid "|note registry_key architecture|"
msgstr ""

#: ../source/dsl_recipe.rst:184
# 3d12c6ce65814d2289db8f34011cbe2d
msgid "registry_get_subkeys"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:4
# fadfedaa598f4bc393b2bbb741c395ab
msgid "The ``registry_get_subkeys`` method can be used in a recipe to get a list of sub-keys that are present for a |windows| registry setting."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:8
# 39cc1b671b214a7bbf0a79984f40054c
msgid "The syntax for the ``registry_get_subkeys`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:19
# fb1b70e5606141c49d5cf01feb04f0c0
msgid "The results of ``registry_get_subkeys`` is an array of sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:188
# dda0e85fc22f4ce8904d528dd98f9fec
msgid "registry_get_values"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:4
# ee53c6b01d8c45189ff0d919ff9dbdd0
msgid "The ``registry_get_values`` method can be used in a recipe to get the values (name, type, and data) for a |windows| registry key."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:8
# 597d00ccc08c4afaa696cf104c9c569b
msgid "The syntax for the ``registry_get_values`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:19
# a1b8c133de0e449abbec593ec2123d8b
msgid "The results of ``registry_get_values`` is an array of values."
msgstr ""

#: ../source/dsl_recipe.rst:192
# dc320e46d93443d0971322c438d3ce93
msgid "registry_has_subkeys?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:4
# 6c91c5c9bce14867b4e39e3d39e3bfa1
msgid "The ``registry_has_subkeys?`` method can be used in a recipe to find out if a |windows| registry setting has sub-keys."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:8
# 4d7f7e0ddf984fbdbe08e9c321693592
msgid "The syntax for the ``registry_has_subkeys?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:196
# 18e8dfb5963e492f82c865e74cfc4c82
msgid "registry_key_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:4
# 4e088b0bea7045a8a10ea8d32449b90a
msgid "The ``registry_key_exists?`` method can be used to find out if a |windows| registry key exists."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:8
# fbf99a91be8845b7b6cb39e413a14eea
msgid "The syntax for the ``registry_key_exists?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:200
# f2dda45274c44e6bae7afa50d1037ed5
msgid "registry_value_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:4
# 88ee4ab3baec4ca290c830329e4c6140
msgid "The ``registry_value_exists?`` method can be used in a recipe to find out if a |windows| registry key has values set (name, type, and data)."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:8
# 8a538f797ec14436a6c819b46d944317
msgid "The syntax for the ``registry_value_exists?`` method is as follows:"
msgstr ""


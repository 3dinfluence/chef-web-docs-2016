# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-22 23:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# 44c04e5fdc43403b82897fe1f692bb8b
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 546ed755b80742369d2ad9414bf9bb5d
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# a6ae69c54ae2455ba2169c5cabb99722
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 475b3cd33b77450baf32faa61d5ef1c1
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# cdd4b75196574e0b9c63eb06ca6b34dc
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 386997cbe5ea41788240c60261c9706b
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 482135c598604521b49aec6edd870f40
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# bc54626555d34febbf8979c816bf6d40
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 56cf36c78eaf4ab4b2382e9887ceb0ee
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# cbb2c184225d42e8bb8470a4e5dacd04
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 8da868e8fe50418d8652173b49a41099
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 00b1d6a6e1bb48daa3e52aab46388e51
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# b09d4283b5394f24ac7e51233916fc9e
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# a20371a8c2994b26b0ad7f4b0fd35ce1
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 1225d35438d942bc915ad525bc563d2b
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# d5e30ae84c9340fe802d462ac4242dc4
# 2798d32739984ca08a8eb5a0928342ef
# 7c9e91c1630641b1b6ea0da6c3e38d5e
# 5738204e20f24bab88d04e0bb9ca077f
# e8388a185099487e973768ff0d96b8ca
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 3aac3470f7a24f6388d034fb86a6b370
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 150b7f37425f458fa1b34b9bc8359fe6
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# b95dc23c650849e39d9b54c5b9bc8d29
# 663d660f6a524748bc34bdc9889ebf19
# 9a72d9b4929a4781929757cf8def3d98
# 656492101411462b94ac1600fa3ccefd
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# b66d4232543b4b6db93ab68286b5f494
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 5a7c07196fcf4f4a8f1fc8bfe6ae90f5
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 3b93be52dffa4bec8fef52ce82416fd6
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# aa99867a0a4f4922a81fc091e5866d2d
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# d43159efbc33464d993e1e7ef947f924
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 7186db54344f46aa9d6f5327966abc91
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# f0dfc0ebc88d4ac98782223655e0cd4b
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# b5febfd91dda41c2bed4d1dc94344e2c
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 95d1b4149fcf47e6a63ccce991bf886e
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# bca6a983b4314864bdfb6c734aec66af
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 46f78729bd7349c1a3e14841cdcff4fa
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:112
# b526e66c74d6457abd3b9b873216e842
# a1f9ca50288c428192f45ad2fcb5d72d
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:128
# e9ebbaa6b32b4d9a860cf6ffb3b569c3
# fd164ece52a84af485b7c48323a99efa
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:168
# 20495f14709b4492a40bee12d37318cc
# 691d0c68cd904805870e65f356c54c69
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:172
# 0076ad12cd574e6187fee96feabf9f0a
# 6cab6bb28b664c9b8e17827cb04d7d6f
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 03f0ad014ed340e3ba984aa4e35292eb
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 8f1c401227a445e5b4d1190bac916a24
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 9fdb39238edd4460b012d11023fb79f4
msgid "cookbook_name"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_cookbook_name.rst:4
# facfc7d360df48da9063aa0c0944c5e6
msgid "The ``cookbook_name`` method can be used in a recipe to return the name of a cookbook. The syntax for the ``cookbook_name`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_cookbook_name.rst:10
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_recipe_name.rst:10
# 5125e6583ad04d43b9ae1dc1264c85e1
# a9337ba92fa54a62bbec6b2d58e26dde
msgid "This method is often used as part of a log entry. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:90
# 53e47582efad4c749d76010a3407fa09
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 234c4838554c4e528588752394f2950d
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 287b797f6d534e6696f208e76d311e55
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 12154fc9ad79423e9dd6888ca45dea44
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# f5fa50f7ca6a4afea3f36d2584982981
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:96
#: ../source/dsl_recipe.rst:116
#: ../source/dsl_recipe.rst:132
#: ../source/dsl_recipe.rst:154
# 720ab0b6ab744f07bb2b911f6c316b7a
# affd91150ffb477cbb373e9f26c395bb
# e4c6e864fc4748f69f91f561004ac1b3
# 70db4ebdb70d45fc9227ec53f29c7d90
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:97
# 1270a004139c4e4b8eb548d32c82f166
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 32865475d6034e26b83c29ca404d396c
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 0271f31e36334892a4a081e87c56477c
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# c63c4b993e5b4583a4c38760331d7a8a
# 0716e89836bb4f1aa7cce4424aee54a8
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:103
# 79588de3308c45d999980787144e829c
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:107
# fc8646659a924c4e8684725311fcdedb
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# 657ea94afdfd4a00ac0fdf75e3ea01e7
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# 0ee8de55f3214280a50e8c4ba0dd2ce3
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# c6479af6b5244bd9b6850ad3699098cc
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# 7822fb7d2d184eedbc61785ccf0804d6
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# 9441859d3551408982a03be1285f9f7a
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# b74ccacbd2f04a1b802a4428cb69651d
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 6fd94815370947668ea720c3cddcae68
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:117
# 053cef88695d48b6974acc84a8422c08
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:119
# a9d381fe5b25470ebb6877791ecf63d9
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# 4cc260faf0ab49f3ba4b122b9e9ca560
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# 70f6249eb6e04271ae9541ec07248017
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:123
# 8f08f8d0ad364b779dd702c13392f4f8
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# f864e1de50114dc39a7f1372e78d874d
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 40abcf49ee2244bba6e7de93fb3ef9c8
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 2ccfa49d28714db29c8555c541c12d8c
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:133
# e2a6b98ea6e64105a2190038705748fe
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:135
# 5d9fa10b830440b4a9cc38f4c9d403ef
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# ed384ef5f4004d8b9aa1a2c8d4ee0f54
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# f21f5dd1a2f0433d8c6a42ab658b94dd
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# ae800fc0fe894df9bfb6a344c41105b3
msgid "recipe_name"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_recipe_name.rst:4
# 4cfabc94ebe446cf8daa870c9d2f755a
msgid "The ``recipe_name`` method can be used in a recipe to return the name of a recipe. The syntax for the ``recipe_name`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:144
# 5120d573d3674c02b984e4066d894f73
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# f648ce6512aa42d29e3165b6471c4aa0
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 6bb2db9b3b0743aaaa55f7d1e8411b31
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# f1a60e5215274cde9e4dd7c8f1233b43
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 901665a752d947629a1639c1f0e14d63
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 53f5248371214294a42a8d4ce1d6be7d
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:148
# e717d755346442adb3d3024552e0b7df
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# dc8fda11e6aa48788b2bcc322c6c8946
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# a35709ee5e3a4f0786ad7138dd060d85
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 24e80056bcac4d79ab214759379e0fbc
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:155
# c977839642564d4bace7c463b4d6267b
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:157
# 9ac769e67d9b4937809088d89e884c7c
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 9eb62d51fc7f43378414633e1a207e82
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:18
# d462613b87f9445abcf94acf42cc9a54
# 564e16f92a91420e9e946816d28c7d0a
# e8d1249fe40f417a8bf895f0a3af403a
# 00cae459f23b41f1a3eda0f4d234e5df
# d1372d0c9e7e44cba37d53fd8dbf8a2f
# 274571d2b6664b088d9aae2fc4818c29
# c57a6c45f8184092a26eb13b259ac69c
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# cd751893e58949f3a13ebce7073209c8
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# 77652ed537d54ca4a49635e4d510674b
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 57095a52abed4c5ca809ee31320693d8
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# e3e454150562461890da2e6bc241ad12
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:162
# 9dea7c1f12444313ac176511c9fded8e
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# be96cb27c27a40d2a44ddb361b30cdf1
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 40cdca144b564fe1a9e5e59fc62edf3f
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 0e3e4c0077934c8ba907907c2b125c4b
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 4933b54c72f84a5eb488a9e5d081d23e
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 5436b851aa1a45649a8f320070ec1f60
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 41b606945d5a494594a9037b4ea154d7
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 17f9358f245b43c2bc0d8a91a7ebd7a5
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 5debfbf7b4874621a56e3d0d08f8d6a3
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 3642281dfd16480990c7022718ba39bd
# 4c237154cf074f0cbc85368fa441f81e
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# 56d53eeaeb7a4f56b8279c2c311ab14f
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# d25cfb2938d74776b753295d2dbdcd99
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# cc057815bc3a454bb761fee252d9a708
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 0bbc5872ef384c46b400c5b83b048a93
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 75a66e1ca70d4059bf3bcb7565e4a1da
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""

#: ../source/dsl_recipe.rst:176
# 5d323d81e3514a8cad0f44955146a440
msgid "Windows Registry Key Methods"
msgstr ""

#: ../source/dsl_recipe.rst:177
# 477ef80126fc46a184398abcbc1f814a
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""

#: ../source/dsl_recipe.rst:180
# b467048fc6754947ad29b48d6af0df92
msgid "registry_data_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:4
# e9691d6477f9404b893cc431162fd163
msgid "The ``registry_data_exists?`` method can be used in a recipe to find out if a |windows| registry key contains the specified data."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:6
# 0d5d94fed0d5441c83205c2fe587bba2
# 38c3468803154ec7ba6ce9ded618b056
# 377d04a1b06744a08ed1b74ece2136f1
# 3733123375ea4da18ee3374090ef95e2
# a16cde554e0e41288442df6990637321
# 333497a9158b40c092de4c8517dbbad3
msgid "|note registry_key not_if only_if|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:8
# ddc7f7c08acb4a3f8ee5d0fb62987a31
msgid "The syntax for the ``registry_data_exists?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:20
# 2541b7ed5d8d43c7a4097621c88070eb
# cad9fb42162a4a00ad7424737a68f798
# 994eae578fad414e92927839fd4104cb
# 305b885595e949138698c81482b13548
# 562721527b7d43669bb2f27c1175c796
# e7203a84e2b648bba87e3cfda1426ba3
msgid "``KEY_PATH`` is the path to the registry key. |key_name resource registry_key hives|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:21
# 857080d5bd2343b698c064e956f4c8cd
# 63fbe64702a4464aa5004b138142dc68
msgid "``{ :name => \"NAME\", :type => TYPE, :data => VALUE }`` is a hash that contains the name, type, and value of the registry setting"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:22
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:22
# 9eca70b737b74f4f9cab767a55d6f8b3
# 234c4ae5f85e4792b3f73b1ac011b518
msgid "|values resource registry_key types|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:23
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:23
# 907ccfa355974a9b820ca9d232768712
# 1e924fb649ed433080e1ad15f2389f9a
# bd57e297a75f4f5a980d4eeffe2a24aa
# 9980897eabe54940b1d2d372f2ad1d55
# ed46b8b8e21f4a178c3c9d6122b1d111
# 1e00c188ea8d4db9902899613047c630
msgid "``ARCHITECTURE`` is one of the following values: ``:x86_64``, ``:i386``, or ``:machine``. |architecture resource registry_key machine|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:25
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:25
# ddb853d320b146b9a751a5c65e53e033
# 73ba688c2e644c0db06011571863e248
# 54a23f826f424249a39f8a859f9feecc
# 9e43bd336287447dbdbf946b9634c6eb
msgid "This method will return ``true`` or ``false``."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:27
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:27
# 12c5b2aa75ab421e9016fbbfc72bcf68
# a57ce882056d40f592521fc506fbe6be
# ef67ccaefef74732a59f17f01e789643
# 596ce17be9b545d79932d0c81112a4f9
# b23d7665b27a40e788c8c5a2e6f97ea4
# 37af2d923f4a456180a2f0a2ac4c3e7b
msgid "|note registry_key architecture|"
msgstr ""

#: ../source/dsl_recipe.rst:184
# 32fd58bb07b145eb93064fd2c82fb89c
msgid "registry_get_subkeys"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:4
# 597a7bc6f55b48b4b1d35003c266d90d
msgid "The ``registry_get_subkeys`` method can be used in a recipe to get a list of sub-keys that are present for a |windows| registry setting."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:8
# f8da77f18079461e874a0a6404c72965
msgid "The syntax for the ``registry_get_subkeys`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:19
# 490a650c1f9345d7854b3fd2c08045c6
msgid "The results of ``registry_get_subkeys`` is an array of sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:188
# 2f44e5cf473d44d3808252c901de4496
msgid "registry_get_values"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:4
# 5e04976fe0cb4e0991151b4171c61bd2
msgid "The ``registry_get_values`` method can be used in a recipe to get the values (name, type, and data) for a |windows| registry key."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:8
# 95a2d298c3aa41c3bbc7785b94e58942
msgid "The syntax for the ``registry_get_values`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:19
# fdae491ba5bb46e285e2ae261aee59eb
msgid "The results of ``registry_get_values`` is an array of values."
msgstr ""

#: ../source/dsl_recipe.rst:192
# aae306cda7dc4890932b5b09f066ac15
msgid "registry_has_subkeys?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:4
# ab0d475e8398459887f58afddde8d963
msgid "The ``registry_has_subkeys?`` method can be used in a recipe to find out if a |windows| registry setting has sub-keys."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:8
# b3ad28e63ebb4c248dcbf682a4125ead
msgid "The syntax for the ``registry_has_subkeys?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:196
# 00c7b229cdb14c7cad8e93742a604645
msgid "registry_key_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:4
# 1dd8e8e31ba9430d8d4e33479e2ff5cc
msgid "The ``registry_key_exists?`` method can be used to find out if a |windows| registry key exists."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:8
# 00d26ccfa4254ebba0463f434cc351f4
msgid "The syntax for the ``registry_key_exists?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:200
# ab79b6f485bd45abb9f0d3b0e91df8e1
msgid "registry_value_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:4
# 4ef29ec25b21438fa150a3865fe38e3e
msgid "The ``registry_value_exists?`` method can be used in a recipe to find out if a |windows| registry key has values set (name, type, and data)."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:8
# 490c71a524d34fa0a9d4fb6a306d47cf
msgid "The syntax for the ``registry_value_exists?`` method is as follows:"
msgstr ""


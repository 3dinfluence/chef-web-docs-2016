# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-10 18:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# 94b159c5e7a94d1ba14d751a6f47b6b9
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 130a01e2de7a48848ae05e23b5c137c5
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 3a3c9331395049c8ba8f8e6b8aa0c92c
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 538ef648409d495aa0cdd9d4632e45f9
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# cb4bfefb738848a7a836dc5a0095419a
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# e4b124cc33024d92acf2293867578892
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 134f7ad7ca8546609f7ca8efb3d800c4
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 64e133392728454dad79d29156b69a84
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 59812d619dad481998d03afac8b5905a
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# e52e3901a20847de9449d80216713652
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 343a31d0cf8e466fbfcbb2f1a5c0cfad
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# ebd6732c54fc418ca74f2f0f0e7d7f92
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 379614824b424f8b8c76597820ddfc35
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# 0e8e156c7e74479984da77250d89ad1c
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 85b05cefe14e4c57aa1be07eeb5897d2
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# e6a97d7acc63441e86cbb4b321e83af7
# d1eaa4771aa84151b939ec03c8dafd9f
# 6c58b684e9704d619fb4388af21cbda1
# f186f741eb964da78b30fb55e9cf7b4a
# f536c067f7a84fa2a02a72a8a4bc5e9b
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 8d407b15332749c2a9a9d03db3de7d74
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# f6a3ab1f09594f70aade9003cafbbb39
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# 4460bc9f2e734e55bf7881b6a0d5056d
# 0bcb08945bbe4d51b2ab4ddff6519d98
# 898ad05df1ef4b32ac6b14fa87ca13fd
# afb4043aa5184f0382e3fb9cb10d1a43
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 77b67996ddc94d77974b6f24580efa30
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 8d5e9f92112b491cae397a1e42effdfc
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 84fb1e3235c64c60a99860e2002bcaaf
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# f5fa4d145c1646ce8ab733acae36cbcc
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# eb5f9c0d9d4544f5900047b8953665e9
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 1c99650b5f9b46cab38f8b72791f0eba
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# 10b98719be474c2284efecac931f6521
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 2702da6a37444438956076b6d5ad4e77
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 49b65cf7099247c4a159b6da9f0f4fb9
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# a69eae6888e6413baccbed2e8b97d89d
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 9fb5658d9d31460a91f18ab9a9f2e707
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:108
# 8e6e22420c3c4e3d924436b8a5f72035
# 0b98d94a92a8415484d3e9b8bc77f9c9
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:124
# c8b1fb2140414e9ead5b2595bf8038a9
# 8247b9ea67aa427e8692a43b1ef0975c
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:160
# 2fada8e4b1114572957267e9374cb580
# 09a1fbab56be4871851a4ffe8857eb8b
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:164
# 95c62556d6e141cba7be816e8dd5c71a
# 85e49d55466249448f69934666af0401
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# d7df20e3c9c34db282c3ebe5f7d632e8
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# d9aa20a9ee5e40aaa969e50989a4d206
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 843f88dfe1c4434aa24fe5508cff395b
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 8aa4a7236bb342bfa8b0966a795bc2ba
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# c6d0ddb71d1447b495719bb4ff93c33f
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# c4b737568b544f9bb22a1fd9cf6cb71e
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# c5834a163b844060bb1f9655d74e4245
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:92
#: ../source/dsl_recipe.rst:112
#: ../source/dsl_recipe.rst:128
#: ../source/dsl_recipe.rst:146
# 28355e7c3d7a4f4c80a83f8e4cc81ef3
# 7eeb285dc36c44dd88e6bee71ad5d07d
# bde24cdfc1ed496d94bf2625cdaa7682
# c9011a697c0c432cba6be5540257b07c
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:93
# 9a67dd56da314e828b8057b6fc462594
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:95
# 4e8800f192ae4bf385b7c7e89f4c59ef
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 5f5bec8a43fc4de0b4a516b89bed1416
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# efaa0166f3e24b669b06b490093dd441
# c2e9a5489aa54a908801e6e10cf54020
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 496c7ba6515f49e187a68891eeb1396b
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:103
# 07d207478489461e92a7b998f0683673
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# 773e72fec415431b9fddf7befab038e5
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# bad79abc0b744524b105969adb7485ba
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# e7e1c14c14e1452a891504114adae3b8
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# ad9fe83b80854f978071b123db682ee8
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# 6ed5d01332f246399ab63c7ccfa16586
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 95e583bfb5af4ace88eb4e835c391239
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# c346f0914acb41b4bfd59a5fcd654131
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:113
# 83abb263d6b64d93abe5f7e74720fe12
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:115
# 87016604bb22438d8534590bd0e898cc
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# bdae8ce8e56d41aaba83dd31e39469b9
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# 08c55fdcffc146f7b963a916df257a6c
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:119
# 744790c01b634a2697857e50cef5c413
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# 0192a8c45e614fe0abb8009abe018baa
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 8ffcad976c28432aa6d4b6f81a00b645
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# e443573ced9b44b08573800cf1c2ff12
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:129
# eeff731c3fd648c8ba4ba5a4a59277a7
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:131
# 0b53ac58f1224de5989db1e9d8e7b6c2
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 35a406de355c4b90a6861c2783a61fcb
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# db6687bcb6de4e44a874fc59dac42fa1
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:136
# 030ebbd400774c04b9b4843af5a3b35b
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 88bff37f072e41418e2c8eafd07d4bfd
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# f9e5335cd1f4456383f06502824bf5e2
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 696c7faf2dfd4bccb7d1eea03a391d30
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 003b45cf9f19499a99b310eca0a8414a
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# d040158df6f94b71a48bd1f2ea186069
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# 81f56b78126a40d586f3656c662f0f2d
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 5850646b8e284b7d81ddcc21364982bc
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# b3191973fc634f33b8a4b982d09cbf50
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# de04c780fea74d62a159ce62cae3f064
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:147
# 419d51fe507242f19ef14895ca146b4a
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:149
# a9ab4e97cac24111bd8c78ea635d69d8
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 741e14e9a6fb4b2ba60612dbfbd36baa
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
# 5a62b3dbca014118bb414fdcc6c15ae6
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# 761fd15f304249caa00157bd097ad3dc
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# d8cce636c6a74208a6d2990d23526cd6
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 731df6c40bbd42ce84192b3e1558603e
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# ddc5b7a6364b4b12ba45010e6b54fb7e
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:154
# 3a96efeb5e624df0b97154d4b3288081
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# d1c13d027c6242a9acc5d7886d09e711
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 65f3317938364bc0a450bf5a131f3f42
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 70eddc2c492146a882087a24bf381124
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 139f1a33f9934744b540c7c3b3a29b62
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 8183f4454b434355874c10f902ba7d99
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 6b44b8d770e7499d8e36c22081a4a206
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 6437c6b138864c4e9b27a8c9b803b7d3
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 527f092be9a54b278e6b09b5ff320129
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 51587de416704c128aa5a6db226529ee
# 07816bf5ee074acbbf5135b714d8156d
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# aee24a37095146fd940172a8d34833eb
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# c152f4338df5437a86b908459ea5db0f
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# cfccf603a6be487cb56c7878d3c62de9
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 466ecebce1d3421b8246696c539f851c
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# e9b9b578a167463e9d7c181ca3a795ac
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


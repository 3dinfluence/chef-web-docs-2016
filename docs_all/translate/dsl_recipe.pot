# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-07 15:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:3
# d47a5a1dae2f4c499920945447403ad0
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 323feca812934723a9fb7a4c64f021cf
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 7f51bd632d624b2387b6b3e8d9883408
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 182a04006034450b825316d89103663e
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# ea09481e9cd44e0ebbb84b2f9362e80b
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 79f2fc2cdc984b1c90b5aeafacc9ca05
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 6943bb4c8b874ca6a0ae2bc5dd794e91
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# dc29b665d66c488fa51f76a89eca6b90
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 123abf3dc5ac40da94e7a99fbb2c48d1
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# 6805ab8ccdef4767b628068907842125
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 6818f1719ab14a78ae824ace420c63f8
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# e73e161b598a4e1ba6087feadb8e0d33
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 82787231910e4974ae33ca11578d5832
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# bd4c805e4eea40519c9f899e3e063a91
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# ce4a46c1d21344f89409ecb80876e228
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 0c676b57ae1146d68f8fd867380ae4a3
# 749153044f134dbeaae523370141f5c2
# 3ea7795167c04de3ad24bdbb1c8010f5
# 3fda1cebd7374182b9edfa8475a9a2fc
# 06357a2be87f405fbb8edc3986bf7013
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 29498ac2f576453badf0c2d60a8c8037
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# f455b2f4e9a240d6acc677f450080abe
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# 74211b22ce704fd0968e1752a457f8fe
# b95c252d5ee84369baca968a3781936c
# b8251c4120c6401295781fae7472ce63
# 2943c12bd3be43c08d4ed8ad868c47b3
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 1f929694b46c4efeabd28fd1615c5324
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# db57890442d54513a724cedb417494b1
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# b779aac7202d48af9e96276f947b1791
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# 0ec8d65076b54e3badbd87ea3070090a
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# f76de72b5ddd40309e59f9838d88d57d
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 2847c14fcc02497ba016159e15e564d9
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# d72f5cbc136e4444b0c3d9736cb03852
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# b8a85aa454af4fd6aaee5fad33f6d52c
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 29698749a380481385c0114f42f1478f
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 4a188458ceef4753af3f6703d26f642a
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 351e183073804a849aaffa75a4bfe3d7
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:92
# 92d064b495e6460787851daf86104d1c
# 7b11df4d36d5440baceefc6fbf8834b0
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:96
# 2f48107150954cd3b2bf53bf97aee5e8
# e44b32126af44081a0cb89c36e4080da
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:116
# fd5924c880f341669114199f355d3f47
# 995bf98a9392488cae56120881f657d8
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:120
# 68fa6995f4b54b0a8381537b76edaffb
# ed4dec0eae344ee09e800004c7212bec
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 1a092843c7f54d42a86d749a6db3d8de
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 971322c8bb204d3ba779577efdda5990
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 3736bd6e837544dbbdf69ff70aed8d35
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 3dc3cdacb87c4ecfbc4bbe0cc8027a6f
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 4a9e70fafe484dcab545ffe8b1b45d2f
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 099dd11a3aeb4f87b482f8bd33c823be
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 9ae18e17a70c4d69bffc0c6b6f137ba2
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 5dbbe928e40f4515aba78493ff2fd429
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 678bafa9ac6e4565a3c80bf157b9bbe0
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 5756bfba22b14e31944dcdf9d5e1313c
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 4eac04aeea0b47b6a8e476ce7ea2c60b
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:100
# 687d812217f8466e881e47fccae5e377
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 2e4f44cc656045fab6ad0d8fb66eb063
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# a959d2cac656418c99c21294794b1138
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 8987082c91164c548c94a99e79e3a2e1
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 19ccb43359ba4e43988e3ad559cbb753
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# b46e105f2d3b4295a1826eedfccb0ccd
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:104
# f23cc2f872b041d7ac04887e87c4cb56
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# c3562654e55b40e7995be88f11d93cd6
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 78bd0832496a4b07977e4c05c3e5bf5c
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 92133a465dea423c888d388962625798
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:110
# 64bc96a8dfad4148a4f91e04b39cda18
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 0736545f2511443f95f7ce2c2b8348a7
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# bef9d78216fe4b6cb8cbe6e8b73a24fb
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# fc4248f185ae4502a5964b9c9707f1a4
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# b421cacef6eb4be0b6d301e446d3ac31
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 1fa7b926dd7248898130ccd530316c90
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 193f93a61c8949599613ac8f5bf1600f
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 74fd39fb1c114b88bfb972a80728021d
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 0af245b032c34b6490ba9330b3c2e445
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 48010caa7e0341e89d2ed2b215e1a4ee
# 90a24c861c194c85996eb3dc87807316
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# b800ffa58dbf4552a594b2e717a87958
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# e3a65e869e7d47859a06b17f5041ff7e
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# 121300d45037485bbe5715d81738f5b4
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# fd4570e35b9847b1a59bab3b273f0354
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 5dfd2815d3764f2f9437929334a9ceb4
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


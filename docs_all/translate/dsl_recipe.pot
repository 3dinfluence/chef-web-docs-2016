# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-13 12:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:3
# 0804f975a83d46f488323846b574b459
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 107a04476b944e8d8e893397a1f23df4
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 92cdfdb7d9ca4ae2bc779ca212e99c87
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 5b726912239a483da0272febbea242e8
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 8a2ea9ec0d3e40069fe4b13105326383
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 19161367ff4c4b70a8658d7b191f33bd
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 1f19357c798e44dbba334af2269663a4
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# d2f7afe376f9425fb01960eeeeffb539
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# eaf0950c4caa43df84b245ed4bf03660
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# 59154c25688343e0ae55fac13bac70fd
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# ccacab819eec4b1d8bfcf109e695582b
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 0f294e8f060c473197ab4feae9f68ba9
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# a5c8753c31024a42a224a46729993993
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# 621d96ed51d74ca3b78be9e998ebdef2
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 06ba893d5a7842ec8bd3010980fc8d84
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 76601e4a967c4c0cacd8d86e74d3fa9e
# 9fc63c7fc5f744be9f21a25d70684dad
# 63536be09ccf4bdfbbffa88a1f4aa405
# 4531bdc2ecfd4ae385ac7e1d72c97e0a
# 4e18423b83234f47938dce780d208126
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 0a3ce0737bb1417ea946427979818da9
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# d2a87e4e13c943d4afce5446b88703f8
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# 9184cfe272f04616b89cd5a6962c5cae
# f9efcc29310f40aebf43b9a997a674fc
# 852f830e5cda476896d49250610a215b
# 38a4f9880a2a426dbd07ef8b009d969a
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 3e6eeb6c2ddd48a084723c69a0d48018
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# a53695d3dcb6415e83a47ea859a335c1
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 29bd4c9544fa435c9933ce973acf0184
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# 1c9d775f118d480383a7c31b0d0973e2
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# 7da508aab01444b09fa84de94a950e77
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 57afc183089e42279298bac483b45a65
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# dae4eb1cddb540c5b84f43704fb591c7
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# bf05536305604d7699c338bcc716a8e1
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# f67ada0825dc4baeb300d154c7aee586
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 21ad525cf0fd487d8294a55189311a5c
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 5a7d1b0208ef4fc4a7125db4ac067276
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:92
# d94b2430755047dca38dea3cf33f0893
# 57502172c0f24474a5c7b56bbee077c7
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:96
# e43564ca8bcd43ca91240a4d2dcbcbc2
# e77076557c6d493d9c4a3c35e12c68a6
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:116
# ed620999e68c4a63a2cd695f50b8e7ec
# 7eecbbeec3414daa8fcc1cd63c8ba171
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:120
# 8d9bb7ab61a349bdb7179033d06f38ec
# 71d20d5776474cc2bbfe827451a5df23
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 6ecf8a6c89d24c6caa0a356e3998309a
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 7a8e69b8b183408ba99850c57e76e26e
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 407e3e68380241a6900bc2d8f708064a
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 17592ee081e3457db02b443a4f6e594b
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 2e97512c4b984728bc630185ef784ed7
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 8213eedf80424ae5b102c1d8c369092b
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# daa09b7d68194dfe8c3a336af53e05c6
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 28a5ba439fb74b4fa3cb69d3296b8749
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# ff92482dfd9645239e190948ff83ca53
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# b54c6e6b5f314004b113bc04e426ebcd
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 59bcb87142a64eb4bfd9bca9d8dea896
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:100
# a780774f143a49d780fb64cd941eef97
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 0891523d6a054cc1a0dbb785cc0ce254
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 7e66c56b89204c57961270efe31a9cea
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 998afb606c7042619d44201d9519d32a
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 17ec970c583842dc8a9e355a85915e80
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 16585d708f864031ad4fc13c707d176b
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:104
# 5e02d10c6dd6445d87b2681ea0e230e2
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# d7955a78dfca4641b0b438f736f18c03
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# c6790bf0197e4c3ba55dd7b07958d028
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# e5bcd7ef19f147928d314fa6b685dea8
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:110
# 86ce70365c014e9ba7d19b0b6795842e
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 65a6fc0b9d55433097448ff18616d45c
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 18b33adfbfcb4452a6c9d40ab9a421b2
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# f48781fc94574351841779a2f8f95963
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 28472253b1ac4a1684b63ab313663725
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 191b18b532ec4455a1ef644d6c5732e0
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 31d55549fe8b4e7e951ed61c846a6500
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# fea3cc200bce4c5ea047d68a50343c23
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# b91f1b8c373d4622bef88a988d4e32b3
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 56d495d5c8334e23890e1b3a62b844ae
# d302c00390f140df92cce70baf95c83f
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# e87447dc248d41d1bc11d28231e4b47c
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# e72dd2e927144f3db295d4b4270e60bf
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# 97c066b3d39840aaaf4da778accafc9b
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# de90c37d88a847fdbd952665dc1e2c82
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:33
# c524cceaee4447058a625e9c1beadd29
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


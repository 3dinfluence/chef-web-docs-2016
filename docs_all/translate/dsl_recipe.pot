# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-07 10:58\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# 2f4b06136e50487b9ff139894cc54ed5
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 80b2d17dfbcd4c93abd7808e9a0bdb4b
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# a16ea21886f54a71abd09300951c997b
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# da7d93d30ece4745b1bae7d33b7ec5ca
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 5e2e0c93f86d4e618ac9bcfe9751751a
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# a4967e2468db47b098a3539fce72cac7
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# c1c8829737c746eaacecb04497484b9f
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 38b663f4239444fb9152c39ae56a6bdb
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 1ee41d935518451db0a953483c1351a0
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# 343914f9f29848309d064db53fd81680
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# e476abe86c894a91a6711a3ecd9e59ca
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 5fac600a74a84095a425476a73db4546
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 87ac91e219f744fe9258f8e314587fe5
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# d3b73f5a9b824e16848a1dce045c0d8c
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# a8b24839bcaf4fb09b74af198b600c34
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# ad550d62f81841b79110b7c0d6553b51
# 3ce1e21e59834c7a914236ac4f5a8e79
# cca867e26c5b42e3af7c6e7c9e943319
# 351c401a32c7434cb41db2fa125bc97f
# 318e77ed457342a9a6bfe48b210958e7
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 856fc74cd0b54a6ca3cb011dbd04518f
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 19cfef036fe3414e8f0093b74d4c5d9d
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# b4bb2912f594454282fd7e761416cca6
# e7ed27073e6b43f096656567dcf78003
# 9e749b52f5bd43c5bed101df8869151b
# b7f58f288a594bd9bb682ba37f7af14c
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 7bb7b4397abf4235a5d5c0fc1fae83c2
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 47a01b56da964f43ab6f1430882c7335
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# a189bcdc8c7545feaaf13de43a7be1cb
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# c6371969aca74489bd8f39f86d242764
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# 580e275e8d5544e286d93a7c7d9e871a
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 98658594ca7849b5b4c1d3a3e3ead949
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# 219a0f3efe044516b10d3265a4a5ae18
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 7800853077ef4bd6893e9393ae0c8368
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 2677e8f9d8fb4979a88bfd7003201c26
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# b8cb73a0b3694b2c8e91efadecc939ce
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 7dafab30ef124f9d80b29f15d7346f19
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:108
# 4a9c1d5e80d44fd687b7cf51b5bccb73
# 9f038cac3b6e4a39baaf8aca446cf6d3
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:124
# ac359ab78e9c4c7491bfa3671d67a2c6
# d4a337d02017438c83e44721134bf76f
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:160
# 1797676371bf4629b631047b8f194bb4
# 5577cdbda1fe4c29858378446e100ee6
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:164
# 0d494f64f48b482180f6b85b22d34dc2
# 9572bb3f5eb243dcab9339ac96f5ddbf
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 9274a2c6bf314f029e6a092bbd60bc3c
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 0d7e5bb10bd642d9996bcb01fcc970b4
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 2cbd41249b594d62be5cf37a8cf87e37
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# d1daa7799b294211a0f192a2311e34b4
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 8005e617fe1d4df8b7d0fd9cc45765b5
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# 54e25569968e4d58b003d59a4b97d1d5
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# a57b25c45fe3408892ea23c660c54879
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:92
#: ../source/dsl_recipe.rst:112
#: ../source/dsl_recipe.rst:128
#: ../source/dsl_recipe.rst:146
# aa9d05ba8dfb4445984219969d09d0df
# d7f492ad9ab5484aa95becd3a668d8bf
# 1f3a0519f3664ef79024af61fc0f347c
# 8d409d0ed49d4728a52d9829a44c8d1c
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:93
# 5b3852b7848f421b98a49894463e5e02
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:95
# da6db1dd76b94106a64c2f18ed8cd326
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 619392d743ef44059912d89ec51e8429
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# 836f4c642a2f42b3a20b8b874d2a220f
# b5192578a65143c39842556dd30e3346
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:99
# de194c1596e6451daf01f2c78644622b
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:103
# f5a343e6cfda45748054d0a739efd725
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# a09cc96476674e2b88c87da281150f78
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# 37966e93755644d5b28b699cebf0835a
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# e53145b5c4044bed8059f048a856fbbe
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# d2c4fe9ef45a4077bec316d9db0d2330
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# bc3b8707144643a99a6fa266d8923305
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 62bc7f2f99164c06800852cb328cc192
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 53ec704987424eaa900454a09a9a8653
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:113
# e4ae82c98e6c4670be45f20f44fed80b
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:115
# fb7554aee941465f995852dbfd2e75f2
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# 5dca53ea71384ea193f48a62574e5f37
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# 5156c511492a4284b9a62680cb0889bb
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:119
# 1652c02a35e747f3955ce0a4a9df31e1
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# 132e41934b95483d8e3b10474837ea94
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 07faefd05f0d4e898f0f0e6f82b85037
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 785873046dbf46c0a0c2a099f662337a
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:129
# 0a5984dc1c624ee492f7fdbdb704bea1
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:131
# 3d57f79a9a2b43a39b8223e535ca594e
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# e4fc75046dad4e13bd66b4cd9637a0c2
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 2a209733705344af874a8658b05e2808
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:136
# 9e70495bf26c4a038945077d6bc35a6e
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 81ccb62549bd41a6b793112ff0a50d8e
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 5bd0ec48eb624c5883e91d1955b2ba8a
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 777965b260534db98a4186b9e7c6ee87
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 52619aa9a7854503b11430c03515be69
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 4e742f474f1a42248364ef9500fb9dbe
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# 3e81416084124b00b421a93af90b1523
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 4d5a91bb6bc14118b3f12948e3fdb3da
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# d7c16020c9834fb0a0da058fef8ed9c9
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 0c65d218289345e7bc05ff86823c0d68
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:147
# e53a4f066f29466bab822c08d2488366
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:149
# 75d08f19919d4548bdcbdc78ebd6acfa
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 7649b763cc72489e82611b6f7b6c1fd5
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:18
# 08edbbeefe7a400eb95305b2c49917a9
# 1616eb90005a449fa75653482a9b6dbf
# b25e3f86d28943fc8c64d3d1bf78234c
# 9b57db15c5a240a7906e85e0872dce43
# 1db65efe3224408fbe15fce8771d070a
# b08d0700553049ddb826b6a5f3b8fe73
# bd34da1052ea4017b2284ec41a3320ff
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# cd6aae2d7ce34aada9a81c8cae0f314a
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# d41180657ef148a68c4e52521c107bf4
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# bb461f0d842f49bf8fc34505ed73d863
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# 6c4dd1ee30eb40dd84e58f8f263003b4
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:154
# f291988602ea41b2a16f5d39519f3021
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 03c9912317664a39a702b9d6f0cc2444
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 902c5388c9234c8fabe5c21e136ff665
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 1b037e795890476aba3f510a9e479212
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# c1da44b054754d43b6d49034f61f19b3
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 2a1bb8a9784741099264ca8a8d7672e2
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# e302370bf6394e57813a2b53d554b795
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# f1e0adb9fe3648eeaa0adad3c50c48a0
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# d6e5a0edbfc8485bb3f881a551709d89
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 3ac29ecb31474855b00862e157da7ecc
# 90e6fde99ac549de9e7ed25b106b07d6
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# 5e161fe4a8864504b4937dab801b8163
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# 27e8f659f07645458954b45c87d4dee5
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# 1794956a35094863a58a5dc8dd626296
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# edfbe58286b44247bd0119c30feea800
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 39b1d0a311c6449084170d6a558ce9d9
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""

#: ../source/dsl_recipe.rst:168
# 033559cdddfa4cb1ae1439048c8ef7c4
msgid "Windows Registry Key Methods"
msgstr ""

#: ../source/dsl_recipe.rst:169
# cf597d179ae2411b9bf521bc00924330
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""

#: ../source/dsl_recipe.rst:172
# f44ebc0f7f384385b6acd27c424d5fa9
msgid "registry_data_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:4
# 1f79f9a628be4f0da921e68936c2c89c
msgid "The ``registry_data_exists?`` method can be used in a recipe to find out if a |windows| registry key contains the specified data."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:6
# 9cede80f171341ecbfc5b9c3255de415
# 55290daf10a7418abeeb7672bf082a16
# 8f5b131cba624f41b8431bce61814d1a
# 1c59205c66164a2985479b4679eafc4a
# b20157d666aa4d29bd4e3ab418209cb3
# f7330e19f0fe4cbd8515bc4f2363d793
msgid "|note registry_key not_if only_if|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:8
# a7224b610e1a491c9c75c59885f96820
msgid "The syntax for the ``registry_data_exists?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:20
# 39f5d761dfc843909afb9dafe7970a61
# ec19fd811f234c649fc1ab97f50368d0
# 178f34ba555347bdab753b37b74cf727
# 50fb9d42583745318d49c33e2f93d511
# 0076bc1a7e954c3eb012532ab04a6b98
# 39055ecda9b64c6d8888add3335dc73d
msgid "``KEY_PATH`` is the path to the registry key. |key_name resource registry_key hives|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:21
# e81a43a0ccee43a086706fac71191f91
# 45ea2a041e4c45789e7b56a82f10b071
msgid "``{ :name => \"NAME\", :type => TYPE, :data => VALUE }`` is a hash that contains the name, type, and value of the registry setting"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:22
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:22
# 09a46695a2ac40729bbcff800192ae65
# f3ae44e7989f4090872cf539826d051b
msgid "|values resource registry_key types|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:23
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:23
# 7a74763c84f84ba196c03779a9f23108
# fb9057d59a2940d1adb79a223950bb15
# f3c1333fee044f44a5deafd00bf5cf24
# 722c13346542469299517368210f2b43
# 9ace5f5b48894e8cbd85fd18cb0f4358
# aaf877cce9134869b845d7c3fd89a58c
msgid "``ARCHITECTURE`` is one of the following values: ``:x86_64``, ``:i386``, or ``:machine``. |architecture resource registry_key machine|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:25
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:25
# 192926bce50445c49473b703ac43e147
# ed7353f1f708419399a3125278ab6c03
# a23857e463054d6b993d91af60b77dd3
# 8c615af10def4248a84c205cf0f0556e
msgid "This method will return ``true`` or ``false``."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:27
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:27
# 58098581d6f44aa4b9e067f4c98a3bbf
# 24c2da38181245f4bfebd4848c9e63ae
# 1255aa748ca746889a50eeae6a4a66ba
# ec048d8e69cf4fd6ae58a9b57af0820c
# 6e3dbbf33d66495295050d9c536d7395
# 96f4cc3ec30d4e168fb5a8256e958edf
msgid "|note registry_key architecture|"
msgstr ""

#: ../source/dsl_recipe.rst:176
# 0a183070ebe14cce8a5bec341045342f
msgid "registry_get_subkeys"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:4
# b4680ebed01e45178b4928696c1d1962
msgid "The ``registry_get_subkeys`` method can be used in a recipe to get a list of sub-keys that are present for a |windows| registry setting."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:8
# d0f8d8f99c5043a880c2f8767fab5925
msgid "The syntax for the ``registry_get_subkeys`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:19
# 252b6b8a061044ee9dbd90962b879658
msgid "The results of ``registry_get_subkeys`` is an array of sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:180
# 9b0f4ee22b714d7a8824b99c97ef4d89
msgid "registry_get_values"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:4
# 42acc0d352f24cde9d70cf3381791fbc
msgid "The ``registry_get_values`` method can be used in a recipe to get the values (name, type, and data) for a |windows| registry key."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:8
# 48e7aaf2f7db45c69bd42414c7610b59
msgid "The syntax for the ``registry_get_values`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:19
# 25a74f913db94fb99360265f1c34f346
msgid "The results of ``registry_get_values`` is an array of values."
msgstr ""

#: ../source/dsl_recipe.rst:184
# c51b97a6354c4ac99363430794ec32e2
msgid "registry_has_subkeys?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:4
# 7372ca4d77564594a3035eb3188fa6fc
msgid "The ``registry_has_subkeys?`` method can be used in a recipe to find out if a |windows| registry setting has sub-keys."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:8
# b2b0ca0e411e4f798d3ad684e345513b
msgid "The syntax for the ``registry_has_subkeys?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:188
# 56e42911c2a240bca908e08a97d930c1
msgid "registry_key_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:4
# 7679c80f3d974809bea1b50f2008c6ef
msgid "The ``registry_key_exists?`` method can be used to find out if a |windows| registry key exists."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:8
# b1df298bfd49481d8ad3151b25e429e5
msgid "The syntax for the ``registry_key_exists?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:192
# 0a5f756c3fc94313bf3859e58331ec16
msgid "registry_value_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:4
# 9109f52467304c48868586fbf95047f6
msgid "The ``registry_value_exists?`` method can be used in a recipe to find out if a |windows| registry key has values set (name, type, and data)."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:8
# 416c5ccfe0f8462b8c3c686d3cd4a381
msgid "The syntax for the ``registry_value_exists?`` method is as follows:"
msgstr ""


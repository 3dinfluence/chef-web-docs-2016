# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# ccc31d7332324ff5aa0b451e1d92ef03
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# 1c1a12d8238e46c6a35f6bb155ca2e8a
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 58375450a7f44dc28b5eb25c5ef0bb2a
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 43698a2f14ef4764a9c4b51757427fae
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 6d84661d21054b5492eb4553c354904c
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 053ce76b684a48fca83ae9599f0f2d2e
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 4eda28202bde47a5b040ab159ec94234
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# a0dffa2373c24b76811b6ddb7f799d20
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# e7077a7ce7174a7ba07afe65d46e92a6
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# da814c91d0ac498a958de34b4fddcf1b
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# a32700a977794ea9a7570e40d6f314f5
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# a32f1f9813f44fa092e0a3cf436bb42c
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 8d6f37bd39c84c10a44d20ac04c14464
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# 50ce24c308c743d19914c0b58561e2e3
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 59adef84a589403a8604eede05a4fe83
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 6f4c7be7247a46df8bc6fb9b8df6eeb8
# 17393c51fc454e01a93b9f2fbf7dcc07
# d719c5e94c984a7ea9619a5645c86c90
# 3cc989f702f5474386b87b5d9a32e00e
# bbee09bf740a4402bd0d9f8aa670e68d
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# f73b97fcd046406bb4a93b98d0f04d50
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 1bff7987a063457ab07fc8f794b02839
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# 11f78ca453a64041b3b64263db02af35
# cfa707f7941b4fb9a5882139e5db1824
# caa44fe0161644b0bfbabeb8080cc6c2
# a5d2981a476c4293a57148ac8f6f06bb
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 66029190ef8c4a1c9c90940df58b827a
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 2143222be5654e08bb3d8a5792ba2b03
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 7d838413f997469993ea78a31c04b867
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# e2b4e192dfa641ffb53538c54e461c12
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# b74bc91497da46f1945e21f5aa98ba10
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 8335fe906777426aaf859a2098572142
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# ccec9a9d1a3b4d28b4bca50e00a3902f
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# a026a7f45eda4a0692eac67a3e641be6
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# 877fad7f48e14d9ea0716e2e6b2e87ba
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 6560fa5f0c1e44c983c09e39191308e2
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# b31c00f5866d42748cd6129600edfe0b
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:108
# 82802062fcc64406afa43f1f957b5014
# 1700e1fa09d4454f8d01842e323ab2b3
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:124
# c233c92e3987480caea9d1170e53f2a4
# 58811cda93884d40add2c483b4d6402e
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:160
# a7e22e7e2f48419a8ec76190dcca7f8a
# 4e2eee2ec4c74ecd8b804779d4046f41
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:164
# 8705daeaa97746a6816cf66456eefe84
# 1276a78531f440a7b4729e2eddaa6660
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 0fc3dd40b1ab48429e41bbfe97b4db7b
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# b7e6b309e769463a886090f82809ee3d
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 2375e5635715498a826b26c9a32b9c19
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 6f155ef5116441bbbdeee98adcf5c430
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 05d8fa783f5a4173892c232fb3325e2d
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# ea778dd4f596447cba8dc44b5cf980d2
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 3f585b50076e4b749d8fcc5385ce97a1
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:92
#: ../source/dsl_recipe.rst:112
#: ../source/dsl_recipe.rst:128
#: ../source/dsl_recipe.rst:146
# 288847261cc54a919d9a45f6a58c18a9
# c6567ca7c9df4f738917fd74dd3b611b
# da70ded0df24483484acc92b470751da
# e593676642ab4ae9a9538bbbad095c02
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:93
# ea0ad4bf9a60422bb73449f63baa7598
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:95
# 03ae7a9428fe4d538f10a128b52f619b
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 8d381c8e0ff644eeae14d9c0c58e1d3f
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# c7c428d3a2ad4c5bb51fb908564b8bbc
# cdf0344f9d9d4a15a9a34142b4992687
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:99
# d6746641093249738119245f644bcf71
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:103
# f0d030c1791140a7b437b0db700d3b7c
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# e1f3ffc7f21d47cdbe115de82563478f
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# 9d4a4244294a4856a8f5a866712959b7
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# f3f77e84966c4637ba41d2e85c59528d
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# dfd24e27d70946fdb3f1b26e3a187e26
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# 3930336e44794a89942168662a28e10f
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# bb5aa35743374eb5b3665cfa3c4b88c2
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 818a3e0421be460b91b24c118e9a63ac
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:113
# 12257d9fc9134bf2b8c0249342980aef
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:115
# dfd3b446a4734accb76e6d8f765b099f
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# d1f7ba885f0b48bfbe3dc59d1483ea8b
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# 25ca18a5a75d4cceb7a382188ad3156e
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:119
# 89d21a48af564982ba3b5833b4a7dabf
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# ec32be790c2448829ef68815f529f595
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# faa73a6d0da24777ab214da074d84209
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# fe70cbd52db94d8db6c726c8d24080fa
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:129
# 2f50efbaf5364f4a933496560e2a5957
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:131
# b91daf7c906e4fa1a36dabeae2504cb1
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 10d394ad250146a99d046155b2ad8122
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 57b89894da7c40e79420e113a8856a8e
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:136
# 1c248d71b95a44b0b46f1b1613bf8acc
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 4c276abe1a94465e94a4b3756ba2dd3a
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# d98c531053d4441b95e4d4cd987cb640
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 9dfb33093d944913a6c032f07e7665f5
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# c8ba96a4b4824c52876375e98e22d6d4
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 92d0ad67f0e54e76bddedade239b6e4a
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# 17ba05959b71440eaeaaf1acf2a9de4a
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 32ef8f04185b4550aa833c7e980497f5
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# bea1530462d74835b094c41fc41819d8
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 241107cbbc7148dfbd5eef79a357b549
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:147
# 6898141c8c494e33a326af1d095e14e0
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:149
# af6d2945bf02432780d19fef92c8ec6f
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 8fbe9e1cdc03421ca0e94707c68d93ae
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
# 284583f6da87430ba75f6d806483e131
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# c7c0f0c5417b47a7a7c8e3e7ac2d35b6
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# e47c4e7f86654c8cb2a5072fae806361
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# cde53284f81740f3a4b11d8f5016eafc
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# 426d1c098ac54a4da35dbc1de0326f6c
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:154
# eaa2288e455a43e3895d50b950febecc
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# 60ab8891ab5b4b41ad11e1fba6294cb5
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# d21dabe9f1e74aa6979d9f01951b9906
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 49da9385c4144632841866a5313568a2
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 7621e63593774a4aa1a057014eb53df7
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# d03ee12e8dcb4dc1aa6ea361626c59a7
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# f0fdfe3cfb494bf88c2cafb690785fa0
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 63c5296854484269bd963070e8580cc7
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 8cfc988d16e748828f4b894c39a69961
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# cd6a7a231eb24050a9340f43de045561
# 76cc0c1496a04a7c8334f702bd569016
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# c001318c1d0f42f7980d4db6917ac99a
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# 7789de2e2624440c8329348b89cc71d7
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# ba335219ecc3400b8880651f1f1f1807
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 37ff5e9bc57245038f34944f7012c3be
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# e0bec0cca45743e9a7c8463df17b6def
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


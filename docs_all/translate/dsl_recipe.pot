# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# bff62262966242ac89554deaa952f1cc
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# f9a28a132fed48b2ab3efbd4be9bed37
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# 52fdd0b394764659b5500c4b9ad5b76a
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# 0db2d6dbb8f4450ebbd1ecbba4c23eba
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# 9e4ddf71be5f40789d4b1e2dc3323d62
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 9d1e2b6a00a741a0bc92ed9086071543
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 7886d488fe6b4cbdb7c5153ae438babb
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 921c3163f0d348c8858abff6624e8ab2
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 220469ce24ab470dae7824ec0a13436c
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# b0484cc8ec0348d39d328fb9ab92de7f
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# c4f1608ede5d4cc49582c29dee3e16ad
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# 86c2da4b726d49bc8c475a69219848d2
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 5d9e2ece93d646c98d17abcd5e31fdd2
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# 9f36e105888d48f4838920024129eee3
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 59ea7c4db53641a3b0afc1dc44d0a3b9
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# 00d178fe91ed4bd3b55c456c2e89a41c
# 664d891ce1304c3494ec4249eaed6187
# 21f1d2171e0545af950da6015e01deab
# e4af931f5d6b48979ee93f119dc720dc
# f1dd852d0a534f8799aee30458361571
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# ed91b523bf6f4101aad5b78138e6f246
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 041725cbba764096965c7bb15852bb83
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# 1be558c0bfee46b7ad87bda90aaedff8
# 534c5d745d794ecba53bc73ed368378d
# 5329a2c895c44bbe93c98045d5b17774
# 10a7c51aca9c4142a54cadc69b8a88d9
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# 9c983d29928746e89e4e4ce057c8f1d8
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 9e5370577b024d4884bffdb32e480049
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# 90af23b3379f435fb3773b50b765ce24
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# 54b524b82fc04a8db1eeb14dc6b3d0f2
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# c43036e695604e2cb8454404ddae928e
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# 0b82eacc1c114d5b9e3875512b8378ee
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# 0ee1e7d3c3514446ad75dadfd91775e9
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 3f9a016b359b4948aa5091be41ce163c
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# b87994b9b2334df79f7acf92849d1ea0
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# 608b26484cc84d3cba35e9744fdd355f
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 443bcb8df3524972a2b09940fd1e0776
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:92
# f5febbdc403941738ce3c32afe022a07
# c4c36e5f3e9f4e12807cd824d4107a37
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:96
# 6b30b4bcdf854712829be8443568934c
# 589179f212fd4eaa84c9778f4e4e80fe
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:116
# 4d512eb682714a46aa0b870dc55eb417
# 0847283ec02847de8431afcd72a3938a
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:120
# 5e71af987a4b45c5a7e68fff74c6a59e
# 016d6c26e7b94d0593e13f14ca3ef475
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# fae97879d4684ac68f50f1f8c8dc510a
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# 2952681d1aef48759d7c8bb0a4da510a
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# 6db9a10ca25a4fa2a6c2ccd938a7b148
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 223913559ace41b59814abaa85fec62a
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 7ce9cf97a94b4cdcb3a0e337f3d6dc58
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# f91d5e503f66425b87c5d90cebabf3c1
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# 26778e686e344dd0ad581edbe43be6c1
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 78502149dc884bf8be63ef23672d8160
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 3c8a09bac3bf4a9ebbab8396140f10cc
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 615b6d5a043b48bbb7306e691ee51308
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 96a547f1acbf40c3a9512be17363ef54
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:100
# d175064da7c14aeca613c9af6c7bd4f1
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# e16fbc11222e431792e32d271db24bae
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# 9704cdc097164263b8ed4002f0f72714
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# f4417582f385498eaee38e019856c96c
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 60bbaa6c45604e15a1df04cccf2c6844
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 0b0e710884cc496889f3c30e4edf776b
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:104
# 245e504fc2ac473786034b3d127813f8
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# dce05130955345959a7a2aefff9d5a0f
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# 10bc0e4f6ca14747b9b0da2d476f3dc9
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 0efe9838d9b44bd68a1da2edec8097dd
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:110
# a253a4718a134d8a9b73e19743285d16
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# a92626212a664fc39acb3888b2ee3f27
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# 6b807170218d448c843cdf810753622f
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# 710c26f3cd49414c8d9379f971abfa40
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 4c1dcb38490041ff9c4e9b956977fdc1
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# 62be93752fcb4122ab268d04c36eb939
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# e92f8e26cb6240fa98480fa50faf4367
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 52b4b1d4919841389d649bfc977d9e96
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 4b491cb3813642fb8b02c16508a8ca20
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 0061ae157d684b4994f68c177cdffd6b
# f6c9ee9686834050b6cbbf6264ccd166
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# 9e95cdbfd4e6428ba044ce878a40b803
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# 009d810bc163402496f9f6810ff8445f
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# caf464bae48d466791cff8a07429699c
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 512066a729b7484682158dd1685f9f12
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# 4f2cb9dc25d74c8681366ccda15eeb73
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""


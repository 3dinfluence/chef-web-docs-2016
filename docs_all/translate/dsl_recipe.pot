# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-10 10:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dsl_recipe.rst:34
# d9ead6f877af4a2eb93da962cd63d455
msgid "Recipe DSL"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe.rst:4
# b1e9469dc4a74631b46bd9fce278cf3f
msgid "The |dsl recipe| is a |ruby| DSL that is primarily used to declare resources from within a recipe. The |dsl recipe| also helps ensure that recipes interact with nodes (and node properties) in the desired manner. Most of the methods in the |dsl recipe| are used to find a specific parameter and then tell |chef| what action(s) to take, based on whether that parameter is present on a node."
msgstr ""

#: ../source/dsl_recipe.rst:39
# ef95c7b92f314a018e6cbbb8f16d2ef5
msgid "Work with the Recipe DSL"
msgstr ""

#: ../source/dsl_recipe.rst:40
# fd21cc18f2c34740a52512dcc4ed8411
msgid "Because the |dsl recipe| is a |ruby| DSL, then anything that can be done using |ruby| can also be done in a recipe, including ``if`` and ``case`` statements, using the ``include?`` |ruby| method, including recipes in recipes, and checking for dependencies."
msgstr ""

#: ../source/dsl_recipe.rst:43
# ad01216e9933400d91b3b2d0e26facc6
msgid "Use Ruby in Recipes"
msgstr ""

#: ../source/dsl_recipe.rst:44
# 2df069907bed4aafae4a31247d4d8c9b
msgid "Common |ruby| techniques can be used with the |dsl recipe| methods."
msgstr ""

#: ../source/dsl_recipe.rst:47
# 57bc37293cba4aa7a04e3fe51915a546
msgid "if Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:4
# 8266ee0f1780455aaf7a473c2c93f7aa
msgid "An ``if`` statement can be used to specify part of a recipe to be used when certain conditions are met. ``else`` and ``elseif`` statements can be used to handle situations where either the initial condition is not met or when there are other possible conditions that can be met. Since this behavior is 100% |ruby|, do this in a recipe the same way here as anywhere else."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_if.rst:6
# 6574677f20f64f948855f2bf8f6885de
msgid "For example, using an ``if`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:51
# a8589124b2044aa6961fd90a75433249
msgid "case Statements"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:4
# 8df7f57ee48644c1bc434f1d7337ee48
msgid "A ``case`` statement can be used to handle a situation where there are a lot of conditions. Use the ``when`` statement for each condition, as many as are required."
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:6
# e2342eca96904d7594c31be804ad2c4a
msgid "For example, using a ``case`` statement with the ``platform`` node attribute:"
msgstr ""

#: ../../includes_ruby/includes_ruby_statement_case.rst:17
# 04cb4e94e9844e929212f43181f79973
msgid "For example, using a ``case`` statement with the ``platform_family`` node attribute:"
msgstr ""

#: ../source/dsl_recipe.rst:55
# cab5a7cc3c2b4145af19e8fd4040b27e
msgid "include? Method"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:4
# 6823936ce143464698bd1ca25c6cfec4
msgid "The ``include?`` method can be used to ensure that a specific parameter is included before an action is taken. For example, using the ``include?`` method to find a specific parameter:"
msgstr ""

#: ../../includes_ruby/includes_ruby_method_include.rst:12
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:26
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:34
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:18
# bb4e1adfb66345538b11114a12fe5edf
# c4260244a8aa4f4ca0c164685b333a58
# 76e0ea2de37b4955bbbc023d5b170838
# fd551d0bb5834564a989e18006a918a1
# c251d177fa144073af73c3ff93596930
msgid "or:"
msgstr ""

#: ../source/dsl_recipe.rst:59
# 3abf206777594bcb869a98cd18efceba
msgid "Array Syntax Shortcut"
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:4
# 78e0dca5d1bb449490ee8976731efbcf
msgid "The ``%w`` syntax is a |ruby| shortcut for creating an array without requiring quotes and commas around the elements."
msgstr ""

#: ../../includes_ruby/includes_ruby_shortcut_array.rst:6
#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:8
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:10
#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:24
# a1bf0679f36040b7963b39e198fcdcf8
# 9c2f23dae76e443eaf47badb33dbea9e
# ead6516d3c984259833aaed210eb9f43
# 647f790f2c8d4d2fa4e72dd88917acb0
msgid "For example:"
msgstr ""

#: ../../step_lwrp/step_lwrp_windows_feature_disable.rst:3
# b6255ac28c124516ae8a3b85bb500112
msgid "To disable a Telnet client/server:"
msgstr ""

#: ../source/dsl_recipe.rst:65
# 5fa29b9b02514285a6669237d33b68f0
msgid "Include Recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:4
# f7c3c9e93ca84071a3d96ab293a0c5b2
msgid "A recipe can include one (or more) recipes found in other cookbooks by using the ``include_recipe`` keyword. When a recipe is included, the resources found in that recipe will be inserted (in the same exact order) at the point where the ``include_recipe`` keyword is located. The syntax for including a recipe is like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_include_in_recipe.rst:14
# b870ca3cd12745c5b603feecb136f4d3
msgid "If a recipe is included more than once in a recipe, only the first inclusion will be processed and any subsequent inclusion will be ignored."
msgstr ""

#: ../source/dsl_recipe.rst:69
# 421424cb983a4073a6f0cf0ca4f69939
msgid "Reload Attributes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_reload_from_recipe.rst:4
# d6955f88bb404fdebb3da93aaef34582
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe. For example: if you have an attribute that reads firewall rules, and a recipe that installs a firewall package, the firewall attributes will not be set the first time you execute the cookbook. Because the ``include_attribute`` is not available from inside recipes, you will need to manually reload your ``firewall::default attribute`` from recipes by using code similar to the following:"
msgstr ""

#: ../source/dsl_recipe.rst:73
# d21ea36b777443ab8ec8a596f61bc956
msgid "Accessor Methods"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:5
# 84fb91df530042fe8b73f3daef38f251
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys. For example:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file_methods_accessor.rst:12
# b291dfeb5aa242c385a67582e950f522
msgid "This is a matter of style and preference for how attributes are reloaded from recipes, and may be seen when \"retrieving\" the value of an attribute."
msgstr ""

#: ../source/dsl_recipe.rst:78
# d58b3fd8df4249cb9a1b4fc817a2382d
msgid "Recipe DSL Methods"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:4
# 44a2ea6a3a974c2a942f61673afbc0e2
msgid "The |dsl recipe| provides support for using attributes, data bags (and encrypted data), and search results in a recipe, as well as four helper methods that can be used to check for a node's platform from the recipe to ensure that specific actions are taken for specific platforms. The helper methods are:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:6
#: ../source/dsl_recipe.rst:108
# 3ec5b3da14994a93be0783a0c44c4937
# e5ce5d4c81fd45e1b61168f38d983f2d
msgid "platform?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:7
#: ../source/dsl_recipe.rst:124
# 3c3b43bdb9004ed291a70281dfbcdc76
# 23b40540774a4cf29a9321564bac57eb
msgid "platform_family?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:8
#: ../source/dsl_recipe.rst:160
# 241bb06a8afa41dab9460d6696d60b6e
# 7e0197b67a704e278dffb88e7bde0727
msgid "value_for_platform"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method.rst:9
#: ../source/dsl_recipe.rst:164
# 14112f170f264433af6d9a04415acb12
# 47f7e2fe09124efea826462031d1fb5a
msgid "value_for_platform_family"
msgstr ""

#: ../source/dsl_recipe.rst:82
# 7d7ef34e517e4886ab336f13de4d27c6
msgid "attribute?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_attribute.rst:4
# c06417a5486a470292363dd803ecfc70
msgid "The ``attribute?`` method can be used in a recipe to ensure that certain actions based on the presence of a certain attribute. The ``attribute?`` method will return true if one of the listed attributes matches an attribute that is detected by |ohai| during every |chef| run. The syntax for the ``attribute?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:86
# fa46ba32e223486f936a65f4823980d9
msgid "data_bag, data_bag_item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# b97d48aa0f124919860f8ff4cc087e79
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:4
# 0a0062797eaf4118ae3f13783183f999
msgid "The contents of a data bag can be loaded into a recipe. For example, a data bag named \"apps\" and a data bag item named \"my_app\":"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:13
# ec371eff239640e69e9de0c8af2a0712
msgid "can be accessed in a recipe, like this:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_data_bags.rst:19
# b55c409e01c34040863db3ee68d1d2f5
msgid "The data bag item's keys and values can be accessed with a |ruby| hash:"
msgstr ""

#: ../source/dsl_recipe.rst:92
#: ../source/dsl_recipe.rst:112
#: ../source/dsl_recipe.rst:128
#: ../source/dsl_recipe.rst:146
# b35442b0edf0454793322f86f97e47e7
# 92d36fc310e145a4941650f1c781c03c
# e62d0238ff6741fa9fd9ddae2e2938e6
# dca8f3b6d88d435194f0ce0ad3f99a4c
msgid "Examples"
msgstr ""

#: ../source/dsl_recipe.rst:93
# 5ccba00d879a4679b12df419e51f8d7f
msgid "The following examples show how the ``data_bag`` and ``data_bag_item`` methods can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:95
# 744ac48cf14145849e03d5228b3e0421
msgid "**Use the contents of a data bag in a recipe**"
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:3
# 331a0eb373ce4efaabb2b8718f283cb7
msgid "The following example shows how to apply the contents of a data bag named \"ssl_certificate\" to certain files within the |chef| organization."
msgstr ""

#: ../../step_resource/step_resource_file_use_data_bag.rst:27
#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:46
# eadcd59b47a24fce818e07146c2c22d7
# dec42457764d4fb8b6ffb5b884b84d4a
msgid "where ``matching_node`` represents a type of node in the |chef| organization."
msgstr ""

#: ../source/dsl_recipe.rst:99
# 4c81315dbdbe43c495053fa619260fa3
msgid "**Create log entry when the contents of a data bag are used**"
msgstr ""

#: ../source/dsl_recipe.rst:103
# 5a223af359d942d2b880745c46218a9e
msgid "**Use the data_bag_item method with the cookbook_file resource**"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:3
# cb3dd406dfbb4fb0bd5417498823893f
msgid "The following example shows how to use a data bag named \"ssl_certificate\" to:"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:5
# b68bfe30f7cc4f9b9246bfb2f11a66d0
msgid "Create a log entry every time the data bag is used"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:6
# d6f6cdcf2a0443a3ac0fa313594cf53e
msgid "Set variables for each data bag item"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:7
# e875d69425124df3987573111c5a6c4b
msgid "Specify what to do if the ``ssl_certificates`` data bag cannot be found and in which cookbook files to look for the default certificates"
msgstr ""

#: ../../step_resource/step_resource_cookbook_file_use_data_bag.rst:8
# 3cdc77d86b434b03a20f20df86dd536c
msgid "Create a log entry every time the default |ssl| certificates are used"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:4
# 593d0f8bee5c4caeb4d4498457b51779
msgid "The ``platform?`` method can be used in a recipe to ensure that certain actions are run for specific platform. The ``platform?`` method will return true if one of the listed parameters matches the ``node['platform']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform.rst:10
# 346b56478f234a9db7edd07e8d7e76ea
msgid "where ``parameter`` is a comma-separated list, each specifying a platform, such as |redhat|, |centos|, or |fedora|. The ``platform?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:113
# d40bd888b589432c903f0e8a4d3e6089
msgid "The following examples show how the ``platform?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:115
# 1e32aaa13847458da4ead4666856f659
msgid "**Use an if statement with the platform recipe DSL method**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:3
# 75a5c0a021aa45f889393bc38907f238
msgid "The following example shows how to an ``if`` statement can be used with the ``platform?`` method in the recipe DSL to run code specific to |windows|. The code is defined using the |resource ruby block| resource:"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_if_statement_use_with_platform.rst:18
# da0674c64922418b933263b28c4684db
msgid "This example comes from the ``client`` recipe in the following cookbook: https://github.com/opscode-cookbooks/mysql."
msgstr ""

#: ../source/dsl_recipe.rst:119
# b9764209009649f88f289517eb861e0d
msgid "**Run specific blocks of Ruby code on specific platforms**"
msgstr ""

#: ../../step_resource/step_resource_ruby_block_run_specific_ruby_blocks_on_specific_platforms.rst:3
# eb586225e6db44e7abb30ed3c9838dd3
msgid "The following example shows how the ``platform?`` method and an if statement can be used in a recipe along with the ``ruby_block`` resource to run certain blocks of |ruby| code on certain platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:4
# 0309d76e3c4643e7bb548ab0dd0397c2
msgid "The ``platform_family?`` method can be used in a recipe to ensure that certain actions are run for specific platform family. The ``platform_family?`` method will return true if one of the listed parameters matches the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``platform_family?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_platform_family.rst:10
# 0c005ffb0042498fac86c164ab47d7b1
msgid "where ``\"parameter\"`` is a comma-separated list, each specifying a platform family, such as |debian|, or |solaris|. The ``platform_family?`` method is typically used with an ``if``, ``elseif``, or ``case`` statement that contains |ruby| code that is specific for the platform family, if detected. For example:"
msgstr ""

#: ../source/dsl_recipe.rst:129
# 82d3a564f2b9437e8b14bb6b8d77cd7b
msgid "The following examples show how the ``platform_family?`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:131
# d68669aacd7a4e09b0b404ac86d9f8a5
msgid "**Use the platform_family? method**"
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:3
# 84c131eecebd4cc799f298ca83af548f
msgid "The following is an example of using the ``platform_family?`` recipe DSL method to create a variable that can be used with other resources in the same recipe. In this example, ``platform_family?`` is being used to ensure that a specific binary is used for a specific platform before using the |resource remote_file| resource to download a file from a remote location and then using the |resource execute| resource to install that file by running a command."
msgstr ""

#: ../../step_resource/step_resource_remote_file_use_platform_family.rst:27
# 41be4106e7c847e7ad4ab788d4510c0b
msgid "where a command for installing |python| might look something like:"
msgstr ""

#: ../source/dsl_recipe.rst:136
# fd7bfe038c8c4f33981a65976bed2ef3
msgid "resources"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:4
# 2244bc32120840b2ad781eed763813f9
msgid "The ``resources`` method can be used in a recipe to look up a resource in the resource collection. If the ``resource`` method's return value is the resource that it finds in the resource collection. The preferred syntax for the ``resources`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:10
# accd5ba9493c448bad8083d025624663
msgid "but the following syntax can also be used:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:16
# 01f949876349453ca6055812533cb4d6
msgid "where in either approach ``resource_type`` is the name of a |chef| resource and ``resource_name`` is  the name of a resource that can be configured by the |chef| resource."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:18
# 6b5b7461c96a4b5cabb8b9278641d163
msgid "The ``resources`` method can be used to modify a resource later on in a recipe. For example:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_resources.rst:26
# 79a830a5d6bf46f6908fb8231333c05c
msgid "and then later in the same recipe, or elsewhere:"
msgstr ""

#: ../source/dsl_recipe.rst:140
# cb7fa20b71cc4be6a1cbeb2f07453a8b
msgid "search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 31d6e82a843b4f1fae6ee63f8b392927
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:4
# f120e1ec918642edb30f0a4a068948c9
msgid "The results of a search query can be loaded into a recipe. For example, a very simple search query (in a recipe) might look like this::"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_search_indexes.rst:8
# 9816d7d75fdd4d64958c96651a2a4770
msgid "A search query can be assigned to variables and then used elsewhere in a recipe. For example, to search for all nodes that have a role assignment named \"webserver\", and then render a template which includes those role assignments:"
msgstr ""

#: ../source/dsl_recipe.rst:147
# eb12b03a34014a6db64882ebd6563f50
msgid "The following examples show how the ``search`` method can be used in a recipe."
msgstr ""

#: ../source/dsl_recipe.rst:149
# e34d8896c6a64d2785938c454c9d5969
msgid "**Use the search recipe DSL method to find users**"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:3
# 1d99727d46d141d6956ef2e78a45a8df
msgid "The following example shows how to use the ``search`` method in the recipe DSL to search for users:"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:45
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:18
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:14
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:18
# ed92442c09404d70848975f636b38cee
# 45eb1ceedd864889adbf6daf0d87ebff
# 8e9122d04b85405db3f9d33cd25ae9eb
# 27f6f13544414145842814a796d51167
# 5b81a71808bb4acab32d029db64e9a93
# 942f55532b2f42d2bec8038e701377d0
# 0e52c58ae0ea43b7b8b399b88aec29f9
msgid "where"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:47
# 6ae2f4207a044f18a68f186ebadfe889
msgid "the search will use both of the ``execute`` blocks, unless the condition specified by the ``not_if`` commands are met"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:48
# 2d37605c01e249d6abcd7d2b0aa6ec57
msgid "the ``environments`` attribute in the first ``execute`` block is being used to define values that appear as variables in the OpenVPN configuration"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:49
# 53bf0499b7c34738afd7fba5fd9a4167
msgid "the ``template`` block tells |chef| which template to use"
msgstr ""

#: ../../step_resource/step_resource_execute_use_search_dsl_method.rst:51
# 08088a9e72af42feb2e42b4a43e358d6
msgid "This recipe (users.rb) is part of the openvpn cookbook: https://github.com/opscode-cookbooks/openvpn. The cookbook defines a basic way to get started with openvpn, but a lot of customization (for your environment) may be required, so keep that in mind when looking at the above recipe."
msgstr ""

#: ../source/dsl_recipe.rst:154
# 3b874979413b46a0b0795f01c59ed0c2
msgid "tag, tagged?, and untag"
msgstr ""

#: ../../includes_chef/includes_chef_tags.rst:4
# cd798b6f85e04ac2a1ce4af34cf928f7
msgid "A tag is a custom description that is applied to a node. A tag, once applied, can be helpful when managing nodes using |knife| or when building recipes by providing alternate methods of grouping similar types of information."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:4
# f8b3e2f6078446d5b620bbf3eaafdac2
msgid "Tags can be added and remove. Machines can be checked to see if they already have a specific tag. To use tags in your recipe simply add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:10
# dfbd719d329d4775a3509f1e46af76f9
msgid "To test if a machine is tagged, add the following:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:16
# 72bdb3640b0942ff9573d86cd932b849
msgid "to return ``true`` or ``false``. ``tagged?`` can also use an array as an argument."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:18
# d86e8a9817c84d30967b2e231878898f
msgid "To remove a tag:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe_tags.rst:40
# 3eae55c5464a4218930a7207f72174f2
msgid "Will return something like this:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:4
# 7a8d62216f054324a3f2c7bfd3af7c8d
msgid "The ``value_for_platform`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform']`` and ``node['platform_version']`` attributes that are detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:10
# 006863cddbca4e8c96c7aa1f6f39e23f
msgid "where ``\"platform\"`` can be a comma-separated list, each specifying a platform, such as |redhat|, |suse|, or |fedora|, ``version`` specifies the version of that platform, and ``value`` specifies the value that will be used if the node's platform matches the ``value_for_platform`` method. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:20
# 483577d6742f41bdbdf1b5de9ad44919
# c9f091bd5ddd4e3c80f3754d86d9122e
msgid "but when each value has more than one platform, the syntax changes to:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:33
# 8e2157ca5d364351ade26f8ab60e00cf
msgid "For example, the following will set the ``package_name`` |ruby| variable to \"httpd\" for the |redhat| family of distributions and to \"apache2\" for the |debian| family of distributions:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform.rst:46
# 3b95804c85944467ab1c968b913ad146
msgid "The following example shows that a package will be set to \"apache-couchdb\" for |open bsd| platforms, will be set to \"dev-db/couchdb\" for |gentoo| platforms, and to \"couchdb\" for all other platforms:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:4
# 248e230ed69a467f8b8d2e47d3f10a20
msgid "The ``value_for_platform_family`` method can be used in a recipe to use a hash to select a particular value based on the ``node['platform_family']`` attribute that is detected by |ohai| during every |chef| run. The syntax for the ``value_for_platform_family`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:10
# 80d17189b63341f38069eaa02e43a619
msgid "where ``platform_family`` is a comma-separated list, each specifying a platform family, such as |fedora|, |suse|, or |redhat enterprise linux|, and ``value`` specifies the value that will be used if the node's platform family matches ``value_for_platform_family``. If each value only has a single platform, then the syntax is like the following:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_value_for_platform_family.rst:30
# b8038bdaa22f41bf9999e4da5081c024
msgid "For example, for |redhat enterprise linux|, |fedora|, and |suse| platform families, the package will be \"httpd-devel\" and for the |debian| family the package will be \"apache2-dev\":"
msgstr ""

#: ../source/dsl_recipe.rst:168
# 472d8e91bd364a82b4c4208c97e7e016
msgid "Windows Registry Key Methods"
msgstr ""

#: ../source/dsl_recipe.rst:169
# fcff490d4aa1408cbdc544d36d96caa3
msgid "The recommended order in which registry key-specific methods should be used within a recipe is: ``key_exists?``, ``value_exists?``, ``data_exists?``, ``get_values``, ``has_subkeys?``, and then ``get_subkeys``."
msgstr ""

#: ../source/dsl_recipe.rst:172
# fdf9ad93a26d48b2b402917d93e74609
msgid "registry_data_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:4
# d0a959fc467d4924979d50405dee855c
msgid "The ``registry_data_exists?`` method can be used in a recipe to find out if a |windows| registry key contains the specified data."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:6
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:6
# 9414eb595a8149549704f6fd59ba5910
# 079a80b8536341079fb49a4ff31cd530
# c8c09646fc3d47e0ac52c6497555f166
# 0a2c921622424e11ac465711378b8cf6
# b5fa2c2f749c4cb6ba96d359bec80d7d
# a0c1c6969d2f48ec8646f900e9bc5094
msgid "|note registry_key not_if only_if|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:8
# f512f152a85446f6bbd843cf9ef8ed9e
msgid "The syntax for the ``registry_data_exists?`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:20
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:16
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:20
# 558e5bc84e894afab37ed16d283e363e
# 1ee489b6563f40d9ae7644dd693833a5
# 876f70059bc447b2b54b97ceef199597
# a328d396a44e4103abfea328909231d6
# 966d25a4bcf149bdacc6a720698495e9
# b37080112b134a619f65a05a61677284
msgid "``KEY_PATH`` is the path to the registry key. |key_name resource registry_key hives|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:21
# 645f6e8f5a0044c1995b111d32834f7d
# 403e6f31eb1f45bfb18b40b64b68937b
msgid "``{ :name => \"NAME\", :type => TYPE, :data => VALUE }`` is a hash that contains the name, type, and value of the registry setting"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:22
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:22
# 5753a7b148af4e169abb391e545c4322
# bd8fe2bb64ae41139741b1f4bd1179f0
msgid "|values resource registry_key types|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:23
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:17
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:23
# a3cf25830e4c44e98fdd35080f60de17
# c160b16e8c144a30be578b2945c8a6b0
# 1855d84b283d4c37a438934482635397
# 21cb9af5a4bb4138872c278cd86b1391
# 7197ac2c3dd14eecb6eefc402e5f374d
# b293f0e00b1e4c01ad0a1971dbb071e5
msgid "``ARCHITECTURE`` is one of the following values: ``:x86_64``, ``:i386``, or ``:machine``. |architecture resource registry_key machine|"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:25
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:19
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:25
# c816fe24375945779b24a4a7cb09b61c
# 0810c28fa4084cafb01c680d6d4fc12a
# 3205180ca6fb45a9b1a9b991c1395a57
# d9c379dfd515442ebc2bdaa62a2a9726
msgid "This method will return ``true`` or ``false``."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_data_exists.rst:27
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:21
#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:27
# f6989d3a0c56455897881df8b3542302
# 36a308a5dd2f4474becd5097aa31c521
# 93f8e816f217446283b450146ed62c5e
# 353d2a14d0c54b4ab3dcedd004138fbf
# 6588a0254f8048bda9860dd2b4e0c505
# dde53dddb9c141caafbedf1f7b84b138
msgid "|note registry_key architecture|"
msgstr ""

#: ../source/dsl_recipe.rst:176
# 59c7f7fb322048d1bc2abaad642098ec
msgid "registry_get_subkeys"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:4
# 82d2dd6cb7204a169d31d5aa951806ba
msgid "The ``registry_get_subkeys`` method can be used in a recipe to get a list of sub-keys that are present for a |windows| registry setting."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:8
# 2d97fb549d36406ea00b786d16b9e261
msgid "The syntax for the ``registry_get_subkeys`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_subkeys.rst:19
# 18d3dbaf15f74030b0461e39060fe747
msgid "The results of ``registry_get_subkeys`` is an array of sub-keys."
msgstr ""

#: ../source/dsl_recipe.rst:180
# a2793f94bc3f4656ba26c8a5aa4873aa
msgid "registry_get_values"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:4
# 2ede09ef15a84aeb84e50c80c889ce37
msgid "The ``registry_get_values`` method can be used in a recipe to get the values (name, type, and data) for a |windows| registry key."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:8
# a77a19dfcaa74ca98eac49a1af8f7bf9
msgid "The syntax for the ``registry_get_values`` method is as follows:"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_get_values.rst:19
# 02c2020426114c6d9d666f0477b3dbdf
msgid "The results of ``registry_get_values`` is an array of values."
msgstr ""

#: ../source/dsl_recipe.rst:184
# 67cb9edc22754f0db7bea680df490a21
msgid "registry_has_subkeys?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:4
# 9c052660c155414d9b47aec090128daa
msgid "The ``registry_has_subkeys?`` method can be used in a recipe to find out if a |windows| registry setting has sub-keys."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_has_subkeys.rst:8
# e815d174fe2947a8b76503e9cf40a101
msgid "The syntax for the ``registry_has_subkeys?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:188
# 0492c87e48d4409091f8380ea6f404f8
msgid "registry_key_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:4
# 76b5b7644a0f4b97894b965f2c9cb1e2
msgid "The ``registry_key_exists?`` method can be used to find out if a |windows| registry key exists."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_key_exists.rst:8
# f079e15e3f084a13905cffe362d161c3
msgid "The syntax for the ``registry_key_exists?`` method is as follows:"
msgstr ""

#: ../source/dsl_recipe.rst:192
# 5785502ab16b43e0b56843aa0a55708c
msgid "registry_value_exists?"
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:4
# 28f3d8de3498461da4948bb16b2be45c
msgid "The ``registry_value_exists?`` method can be used in a recipe to find out if a |windows| registry key has values set (name, type, and data)."
msgstr ""

#: ../../includes_dsl_recipe/includes_dsl_recipe_method_registry_value_exists.rst:8
# 74071fd96e2b4114ae310caa8a4171da
msgid "The syntax for the ``registry_value_exists?`` method is as follows:"
msgstr ""


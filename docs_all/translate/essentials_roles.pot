# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-13 20:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_roles.rst:3
# 2ab9390f85f54518866248902ba83787
msgid "Roles"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# eb06e92d78924808aa05a6f54a7aa7b1
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../source/essentials_roles.rst:38
# 620b46e773d04cd597c1ab4bfe01043b
msgid "Role Data Formats"
msgstr ""

#: ../../includes_role/includes_role_formats.rst:4
# 6a9c9cd3b38f4ea3b3c19ff45191717d
msgid "Role data is stored in two formats: as a |ruby| file that contains domain-specific language and as |json| data."
msgstr ""

#: ../source/essentials_roles.rst:42
# 5f53b9d97fe14f2ca6cad83764c8109a
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 7ae19cc81d4d4d43aff1d1ac0a6458a0
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:4
# 8aa6d06d4e884996a0882adcb4421e0b
msgid "Domain-specific |ruby| attributes:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:10
#: ../../includes_role/includes_role_formats_json.rst:52
# 83e1a45305504082b1e402a3ddacf867
# fe9a32902b7748f885f5f0e369164bc2
msgid "Setting"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:11
#: ../../includes_role/includes_role_formats_json.rst:53
#: ../../includes_role/includes_role_attribute_type.rst:11
# 62214d2dc7be473f8629c2fe169c7468
# 93a4197fb60644c0b4ed4b0424f6a047
# 4be19a50ca284c21b525b2cdc08e586b
msgid "Description"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:12
# a7b9fdc44e9d4a3c8022f6a57e8a2756
msgid "``default_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:13
# e52aeecbe307470f96ee054576a9a240
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:19
# f2f84789b16e445e8f5cd6050425034f
msgid "``description``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:20
# 2fb3a88932864c039c3f41befa802ec6
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:24
# e8c99e3f9a1e4236877e9f136f5f2715
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:25
# 2f0523b523a84f1d9c3abc765299235d
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:30
# 048141cd953a4ef08e2fcbdb1e1e1b80
msgid "``name``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:31
# 7963066c85bd457795975fbda9ff51d8
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:35
# 2deaeba527ab458194bfa62ff0c8701c
msgid "``override_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:36
# 771e1f82935b422aa4f802dd67034105
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:43
# 45a3e53899cc45b19d1467c40afa9323
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:51
# 2f3747d70a5847729841ec60f6fe4dc7
msgid "Or::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:61
# 552c0f031edb4601af13c36f37fdf8a0
msgid "``run_list``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:62
# 61e1851a1fbc4337b25d9faefc1ddefa
msgid "|ruby dsl run list| For example, the following run list: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:69
# 80ed2c9d21354b9c86a4b1a01494f3cb
msgid "would apply the ``apache2`` recipe first, then the ``apache2::mod_ssl`` recipe, and then the ``role[monitor]`` recipe."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:71
# 0d5996041931404eaf81e9ce1abff543
msgid "A |ruby| DSL file for each role must exist in the ``roles/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it using |knife|.) Each |ruby| file should have the .rb suffix. The complete roles |ruby| DSL has the following syntax:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:82
# ef140316bba04f98a7df735aaf91a373
msgid "where both default and override attributes are optional and at least one run-list (with at least one run-list item) is specified. For example, a role named \"webserver\" that has a run-list that defines actions for three different roles, and for certain roles takes extra steps (such as the \"apache2\" role listening on ports 80 and 443):"
msgstr ""

#: ../source/essentials_roles.rst:48
# 12eea545b0fa4bb98790e0a7ad627e06
msgid "JSON"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:4
# 96aeca917e724083ae62bfdfbf7040bf
msgid "The JSON format for environments maps directly to the domain-specific |ruby| format: same settings, attributes, and values, and a similar structure and organization. For example:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:46
# 34fea2edfed440dfad42c5832bc92f89
msgid "The JSON format has two additional settings:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:54
# eb8396a5537040b7bfd65810578ba463
msgid "``chef_type``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:55
# 023f030498e44efe884ad98ce61ad5cd
msgid "|json dsl role chef type|"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:56
# 7c0cc54d5ddd411da2a273083756c1dc
msgid "``json_class``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:57
# e608c759f93546b0a9857af21d3ac8d8
msgid "|json dsl role json class|"
msgstr ""

#: ../source/essentials_roles.rst:52
# 0b9796dde13e46cc9875433fe459441a
msgid "Role Attributes"
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:4
# 01e6e40da09f4b37b0cfd36380801b59
msgid "An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:6
# ff1707c5ef184e148d52acb7fd5aeae2
msgid "A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_roles.rst:56
# 36dc2d64afaa4af09cb6360a26ab7381
msgid "Types"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:4
# d10e45e5a19d4e19b302141b0f73a9c2
msgid "There are two types of attributes that can be used with roles:"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:10
# 6ed3b47a2bc94037a53796fbc544de6d
msgid "Attribute Type"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:12
# a1f923073523416990c8d9620b8605ca
msgid "``default``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:13
# 9a8bc7b1724941eba7aad0a88c826f71
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:14
# 9a13f27c81964855aeb22075861088f7
msgid "``override``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:15
# 3ed1d0b04da34b9796605aef27646756
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_roles.rst:60
# c2937442af714d41b20cc9ceaef6fb92
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# f5475ed8a85f47d2ad4d9ca75be3ab90
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 9559f4f3cb8f41b2b54e3156fdc6ffef
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# b98a8ad3107c4a9a86afa451f8b04d19
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 10c7f314fb7449cd9b4fefb092cd2ddf
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 5c89750cb07f4dd1b15bcfa9969ff44d
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# f967fbd18f3947a09332acd49309c9c6
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 9291de2e27644087884cb6749e683a82
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 47f794770fc74150869f4fd8cbd2a03a
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# bb9b3a61f13c4d76a6caf5d5e24394c1
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 89ed5c517a354b22a2bc34f6d313c5ba
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# bdd12666452a490ca00651bced36deae
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# e05397156f1c4ad7aac24078b85392f4
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_roles.rst:64
# b1c5e1454dfd4ddc8150e111a7c7f055
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 8568ad1bd0bf4baf8ead5c6b3cca9b24
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:68
# f142b0a72fd140aa9daaaa99d501d105
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# d3a3f039131d42af8335c76301e1ae29
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:72
# f8ada6e2efdc466db1b6c369e930a14f
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# bcaef6df47414903ae13306e9ca5f03a
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 79a97ca4b4b844619cdc3862d7ec42ed
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_roles.rst:76
# 35262750a80c4c419ca37a5762be6d88
msgid "Manage Roles"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:5
# 2618c5acc0ea49e99ab8568cec1cb7f1
msgid "There are several ways to manage roles:"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:7
# 4bf2e21cd60f4d84a05fd10922da8a3a
msgid "|knife| can be used to create, edit, view, list, tag, and delete roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:8
# 6660a8f6d76d46be9a48b4dc3598d76d
msgid "The |management console| can be used to create, edit, view, list, tag, and delete roles. In addition, role attributes can be modified and roles can be moved between environments."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:9
# 0282715510664c5f871c6b2c3af5b54f
msgid "The |chef client| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:10
# 5c9ee020d93c46b5842e0bc3c35b55da
msgid "|chef open server| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:11
# ea934d5f34a2419eb1badcc0133876f4
msgid "The |api chef server| can be used to create and manage roles directly, although using |knife| and/or the |chef manager| is the most common way users of |chef| manage roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:12
# eedee7092a0f4565bf08bae067bf5e52
msgid "The command line can also be used with JSON files and third-party services, such as |amazon ec2|, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:13
# a1a0d129609b4808bb53f8a1818709da
msgid "|chef solo| does not allow roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:15
# 9028f25ba1b04e449dd15a7b392ecde5
msgid "By creating and editing files using the |ruby| DSL or JSON, role data can be dynamically generated with the |ruby| DSL. Roles created and edited using files are compatible with all versions of |chef|, including |chef solo|. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using |knife| or the |management console|, as changes will be overwritten."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:17
# 501293dbe18b4669bb2a14121ff95d9a
msgid "A run-list that is associated with a role can be edited using the |management console|. The canonical source of a role's data is stored on the |chef server|, which means that keeping role data in version source control can be challenging."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:19
# 4489b63889f04d3c9e4caed28eef6de5
msgid "When files are uploaded to a |chef server| from a file and then edited using the |management console|, if the file is edited and uploaded again, the changes made in the |management console| will be lost. The same is true with |knife|, in that if roles are created and managed using |knife| and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using |knife|. It is strongly recommended to keep to one process and not switch back and forth."
msgstr ""

#: ../source/essentials_roles.rst:80
# efb00070e2694f44981bc172bde16158
msgid "Deleting Environments from a Role's Run-list"
msgstr ""

#: ../../includes_role/includes_role_manage_delete.rst:4
# 97ab23e1f15c4d77b55fe6a6bfb38ae6
msgid "When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_roles.rst:34
# 2cf8bf69ba66436da9b9315408f22df8
msgid "Roles"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 4b04e4e13a9a4c9a9cd61f5a84dbea1b
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../source/essentials_roles.rst:39
# eb02a32668e7492f859d004f02666203
msgid "Role Data Formats"
msgstr ""

#: ../../includes_role/includes_role_formats.rst:4
# 82699cff505d43efa959db106f40024c
msgid "Role data is stored in two formats: as a |ruby| file that contains domain-specific language and as |json| data."
msgstr ""

#: ../source/essentials_roles.rst:43
# ffcd547938cb436283d3d78ca69246ef
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# c89b6d562a2d42e396a58314e3417b2e
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:4
# 3fcf26d7cb4944cab985fdd016009284
msgid "Domain-specific |ruby| attributes:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:10
#: ../../includes_role/includes_role_formats_json.rst:52
# cb40a9c9865f4f00b8a380c40689b8b7
# 2e3e8f85e58742b9942901397955157f
msgid "Setting"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:11
#: ../../includes_role/includes_role_formats_json.rst:53
#: ../../includes_role/includes_role_attribute_type.rst:11
# b74f459369f54ad8bd78660ed117ec90
# 10f75ab681984a60a444a9cab4b495f5
# 9f271ca2cba54e9fb66a073fa1f70995
msgid "Description"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:12
# ca95d4600c0946ecb685fa0e7547ae64
msgid "``default_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:13
# ddf1bf775c3043e29d4ff6233c8939ae
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:19
# e694237da29e48ec9f6a4944d067a67c
msgid "``description``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:20
# 7ce24a12e4e24dae9131fae264211f8a
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:24
# 2ea6fcd58e184b7f89680f4be2ff2055
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:25
# b6486a97115a4a10ab5262899c552dc1
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:30
# 56ff2eee8dcb436984dc5cb02f980b0d
msgid "``name``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:31
# aeb807efedcb4ca5aa22fc93a5edeb5d
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:35
# b6c8e41bb7bf41c4b62dd7462aa6dcdc
msgid "``override_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:36
# 87c98d5fb66b482f8e0533d35c9b23a3
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:43
# 43ecadea5cea48a6a1c70e98f09d0098
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:51
# 29bbd187a0f041019bf7e642c7259f55
msgid "Or::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:61
# fd8b0ee1912147ab8b97feb9b333510f
msgid "``run_list``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:62
# cbb62b1f3fb14c508a8e8cb4c10af51e
msgid "|ruby dsl run list| For example, the following run list: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:69
# b09d3a1e22234a4e8e1c0d2653cbc383
msgid "would apply the ``apache2`` recipe first, then the ``apache2::mod_ssl`` recipe, and then the ``role[monitor]`` recipe."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:71
# d605084b37cd48bea1d187ca56db548a
msgid "A |ruby| DSL file for each role must exist in the ``roles/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it using |knife|.) Each |ruby| file should have the .rb suffix. The complete roles |ruby| DSL has the following syntax:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:82
# 765b998703764925a9573a2b0b89ce61
msgid "where both default and override attributes are optional and at least one run-list (with at least one run-list item) is specified. For example, a role named \"webserver\" that has a run-list that defines actions for three different roles, and for certain roles takes extra steps (such as the \"apache2\" role listening on ports 80 and 443):"
msgstr ""

#: ../source/essentials_roles.rst:49
# 9c8aa4dc6d044c4085fe38fc4f0e118b
msgid "JSON"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:4
# 8913e571466c4cd5969d027010f131ec
msgid "The JSON format for environments maps directly to the domain-specific |ruby| format: same settings, attributes, and values, and a similar structure and organization. For example:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:46
# f6064e45d17a4c5181c71e147fde863a
msgid "The JSON format has two additional settings:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:54
# 91243d903a0645b581dc7a590281b770
msgid "``chef_type``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:55
# ce85e9bfaa694cc58e8b1103b9719135
msgid "|json dsl role chef type|"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:56
# eea63589e8064dff84efba0afe6a9196
msgid "``json_class``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:57
# 2f397160831f4675ad18cf6d67f03b5d
msgid "|json dsl role json class|"
msgstr ""

#: ../source/essentials_roles.rst:53
# f735903669fe4d15b23c3dec3678fc17
msgid "Role Attributes"
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:4
# 6b33a84ece26418d806a88a5ea6d5e61
msgid "An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:6
# 24a4a569028f408aae0c81665a6eecbb
msgid "A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_roles.rst:57
# d8e19ee8e88f4496b5c2b23528aa1da9
msgid "Types"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:4
# a110b10f394049aaa57dcde1fe5858ad
msgid "There are two types of attributes that can be used with roles:"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:10
# 63059db514fd48979e505576b847bbd8
msgid "Attribute Type"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:12
# ff4ff0111e2240db87c059961bab2c53
msgid "``default``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:13
# c3e3be77325e41d1be548440d9ef6e2a
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:14
# 3d2ce7bb66094534835cc557bfba9f50
msgid "``override``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:15
# 1787ddad090a409bb52f1a695086b91d
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_roles.rst:61
# bad4e7fe15234ae281816a0912d5691d
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# c6264eb920dd453c9f50bea21e3d02e2
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# d39c36860ac040428f2f5f0bfcf3e214
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 7ba56c870d444c05973aa9ea28ae671a
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# d62a9eb24bc64e5bbf2e7d9688ad26e2
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 18c03d4f5f7b4c06a7566419a7749ebc
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 4487bd2f27d04dd08565dc17f3adfbc6
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 721ee3dee8ca48fda8b8e8edd5cf2d68
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# b7e3d5bd8e9644f7a4c268369f179f3e
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 1e99614b8948487d9c51b40ee709c74c
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 035e791f866b454c8771ac504ad49b21
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 348380791b5e4a11b60321e743df7199
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 060ad5518acf4d96a4ab19693fbbeb07
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_roles.rst:65
# 0d530a4aed4c45ef94a1ddcd81062e7b
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 4f9181bc54e2461285c3fd861e6ba222
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:69
# 71460464e2f0460e8ae5febf4538a190
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# b73c45571a204164834b83a121de0813
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:73
# 64990505454f45a4babf49414de9fa96
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 6b161459eaa34f89b7b4c83c0ec27ea9
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 7cf38c6f0c894ace839812c4ea30ac8c
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_roles.rst:77
# bca93053ccd642cc9aa29d7c6c2788df
msgid "Manage Roles"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:5
# 034c5f342fba45859e77b017b6c8bace
msgid "There are several ways to manage roles:"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:7
# fc856f273b9740bbadc837aa4bbbfc0f
msgid "|knife| can be used to create, edit, view, list, tag, and delete roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:8
# 2cd543b73d0f4bdfa5c73ff59c230629
msgid "The |management console| can be used to create, edit, view, list, tag, and delete roles. In addition, role attributes can be modified and roles can be moved between environments."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:9
# 9f4d0f3a5ffb4a529c41a0c5cc87210e
msgid "The |chef client| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:10
# 736ab618c79549a9a5ce54d1b3257c8a
msgid "|chef open server| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:11
# f4d2c64493a64a2d8332e31cf012af85
msgid "The |api chef server| can be used to create and manage roles directly, although using |knife| and/or the |chef manager| is the most common way users of |chef| manage roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:12
# a069bd4d5907453d98e92317956bdac3
msgid "The command line can also be used with JSON files and third-party services, such as |amazon ec2|, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:13
# 0c87b7dee33040da8ef6ea080425393a
msgid "|chef solo| does not allow roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:15
# 7c770f5319f5459ca0cdd2d18ea56161
msgid "By creating and editing files using the |ruby| DSL or JSON, role data can be dynamically generated with the |ruby| DSL. Roles created and edited using files are compatible with all versions of |chef|, including |chef solo|. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using |knife| or the |management console|, as changes will be overwritten."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:17
# 4274a0a63d4e46e58397c6cf6507d0bd
msgid "A run-list that is associated with a role can be edited using the |management console|. The canonical source of a role's data is stored on the |chef server|, which means that keeping role data in version source control can be challenging."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:19
# 3a57199b3a8244638b9b74e58847d4dc
msgid "When files are uploaded to a |chef server| from a file and then edited using the |management console|, if the file is edited and uploaded again, the changes made in the |management console| will be lost. The same is true with |knife|, in that if roles are created and managed using |knife| and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using |knife|. It is strongly recommended to keep to one process and not switch back and forth."
msgstr ""

#: ../source/essentials_roles.rst:81
# ab4007529f8149039260fd446d9f9456
msgid "Deleting Environments from a Role's Run-list"
msgstr ""

#: ../../includes_role/includes_role_manage_delete.rst:4
# a1384be01f9c4fc3895958eb2b4e08c6
msgid "When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_roles.rst:34
# 60a3e361086b460c9a344ae5255d73ce
msgid "Roles"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 41167e0138494568b9c08160acad2859
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../source/essentials_roles.rst:39
# 9a45e3b64cf040b98f0774da9c099891
msgid "Role Data Formats"
msgstr ""

#: ../../includes_role/includes_role_formats.rst:4
# d425d3a73ab24567a3d70c694409574e
msgid "Role data is stored in two formats: as a |ruby| file that contains domain-specific language and as |json| data."
msgstr ""

#: ../source/essentials_roles.rst:43
# a05cc60b590445b58e9b5ade759acefc
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 5de9765a2d1a4c64be1c84ffa3183c5f
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:4
# 477167be613e4d268f1539e7edd35e8f
msgid "Domain-specific |ruby| attributes:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:10
#: ../../includes_role/includes_role_formats_json.rst:52
# 5c9f587acd4e4b4e81835a0420e3159b
# ab0484c0882a42138bb901a65908461e
msgid "Setting"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:11
#: ../../includes_role/includes_role_formats_json.rst:53
#: ../../includes_role/includes_role_attribute_type.rst:11
# 6732c9add8bb4aa68ea44a48977adec4
# 1f0f3c5755b747008b8c363a25f32839
# 906935d68b594c8cb364dfc37f554ac1
msgid "Description"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:12
# cc00a67f9fcd41c689c9d33a9211a0f5
msgid "``default_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:13
# caa55994fc0e4e51b9fb5a0d7e6d4e79
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:19
# a7e004bf7f364bba8d9f33cc928a3a16
msgid "``description``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:20
# 8f64232acfcd462290253ef28ec12ebf
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:24
# 7dce5fc339254b269abb1556c71dfbdc
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:25
# 90ebd61aeb8b41979f4d45a27ec627a0
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:30
# e20eb14d8c68425da8da6c498caf0763
msgid "``name``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:31
# 668ad2a6f03c45a295894131e3929e96
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:35
# 2953ee12c72c45f090b6849acb91033a
msgid "``override_attributes``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:36
# f271fbdd13474bed9eec7486dc0f7c8c
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:43
# cfa372d8e89c44a7b28c745bc81a6311
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:51
# 8770158f64624f8cbc4a1d1f83600320
msgid "Or::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:61
# bd53b2bd9e454809acb4951fbdac36dd
msgid "``run_list``"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:62
# bc2f940a95ec44a688f671f4038d91fb
msgid "|ruby dsl run list| For example, the following run list: ::"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:69
# 0545d39b8acf43769253f8d38ecfb3f4
msgid "would apply the ``apache2`` recipe first, then the ``apache2::mod_ssl`` recipe, and then the ``role[monitor]`` recipe."
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:71
# 8769425ccd854b6c94990816d16c0d4a
msgid "A |ruby| DSL file for each role must exist in the ``roles/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it using |knife|.) Each |ruby| file should have the .rb suffix. The complete roles |ruby| DSL has the following syntax:"
msgstr ""

#: ../../includes_role/includes_role_formats_ruby.rst:82
# 3230f0a1f9aa4569b12b787f872cc3e7
msgid "where both default and override attributes are optional and at least one run-list (with at least one run-list item) is specified. For example, a role named \"webserver\" that has a run-list that defines actions for three different roles, and for certain roles takes extra steps (such as the \"apache2\" role listening on ports 80 and 443):"
msgstr ""

#: ../source/essentials_roles.rst:49
# 6b03f958b7cb43d8ab20608cfa93103f
msgid "JSON"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:4
# 2dd641376fa6468ba13d3920ebb22a35
msgid "The JSON format for environments maps directly to the domain-specific |ruby| format: same settings, attributes, and values, and a similar structure and organization. For example:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:46
# 2039de8801b7454eace382503a2dfba3
msgid "The JSON format has two additional settings:"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:54
# 9d93299c600c4e07bb42c7ea2042602a
msgid "``chef_type``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:55
# 29bb2b46b43d48bfabc8e20aa7da517a
msgid "|json dsl role chef type|"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:56
# 9c72deacc62740ad9924e5abee2710b5
msgid "``json_class``"
msgstr ""

#: ../../includes_role/includes_role_formats_json.rst:57
# a469183db3ed4be993ecf8657a5a8916
msgid "|json dsl role json class|"
msgstr ""

#: ../source/essentials_roles.rst:53
# 84c176454c404aaab65686b3c763a727
msgid "Role Attributes"
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:4
# 5c5725b295ce4b6193c1ac21a521ac58
msgid "An attribute can be defined in a role and then used to override the default settings on a node. When a role is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the role attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_role/includes_role_attribute.rst:6
# 548ae0ad5ce34e2bb2bde50ff64c8c11
msgid "A role attribute can only be set to be a default attribute or an override attribute. A role attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_roles.rst:57
# 16cc7e6db4e0481e85c5f3ea99058daa
msgid "Types"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:4
# 0b775be6e1124eef89e6a9830e470e94
msgid "There are two types of attributes that can be used with roles:"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:10
# 18b1624b362f4606a04932061d2ee7bc
msgid "Attribute Type"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:12
# c645547193f94e9babac4b06b73bc0de
msgid "``default``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:13
# adc2c41367244d61b0ac8c1f468e5d40
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:14
# 7ef158bb2b7d4328a8b6eaed0a6b627a
msgid "``override``"
msgstr ""

#: ../../includes_role/includes_role_attribute_type.rst:15
# 95e9606c95064060a38c0ffd9d110c5c
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_roles.rst:61
# 447ef53efcd144c2ab3f1a591a68a2b1
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 63fc9263c6ef45d79fd347a0765bdf58
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# dbe191fad87a46449ae39cf5eb2b15ff
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 8f1f87d763cf446684ed12418b549a1e
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# f2894d2bcf8b4a2980a16883e638e80c
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 85d2c8378e484659af5bdda116896823
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 2bb229964d1842d29911adbf64f4a969
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# fb511a224f9a4209b077e226a870618d
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 5cf8dde1b2f64c788ab68cb03082bfe1
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 13e591214c9647f2b3d2c7a25f867ae3
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 654c07b4f0164660944f99cdc489f5cc
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 1ed3b1525a874048b7454eb795c7f909
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 85e14514327a43e8b1034a41efbcd622
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_roles.rst:65
# f4e71a04a151420c9d1af84219d8da94
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 1e1181fad0304a04a7b356fa0894759f
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:69
# bf9d4c455d9840f8bb8f1b149d82a236
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# f26dc72f5d0a4ca89334a96bc74f266f
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_roles.rst:73
# 6a17ba460ad24ee289e86ed16281e241
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 962ed3be1a60408ab26a104f4b723427
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# ec83ee32cc6b475186445f5173399606
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_roles.rst:77
# 85f7b356d04247d68f749c776aa09b4f
msgid "Manage Roles"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:5
# 4878964db34f4b95a97c1d1884bdda0f
msgid "There are several ways to manage roles:"
msgstr ""

#: ../../includes_role/includes_role_manage.rst:7
# 5301a465bdc543aaa244e0acaea2d79e
msgid "|knife| can be used to create, edit, view, list, tag, and delete roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:8
# f810d28a6ece44f085a2cf1224351e17
msgid "The |management console| can be used to create, edit, view, list, tag, and delete roles. In addition, role attributes can be modified and roles can be moved between environments."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:9
# ff509f0e3b874f0e8cd04e1a6d1e1ce8
msgid "The |chef client| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:10
# 3fe886be4f694b5db00028d6b87549c6
msgid "|chef open server| can be used to manage role data using the command line and JSON files (that contain a hash, the elements of which are added as role attributes). In addition, the ``run_list`` setting allows roles and/or recipes to be added to the role."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:11
# a8798400104746ff9bdd0f2ebe58dd54
msgid "The |api chef server| can be used to create and manage roles directly, although using |knife| and/or the |chef manager| is the most common way users of |chef| manage roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:12
# d57ad2803f1a4384b00b719332775258
msgid "The command line can also be used with JSON files and third-party services, such as |amazon ec2|, where the JSON files can contain per-instance metadata stored in a file on-disk and then read by |chef solo| or |chef client| as required."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:13
# 74f9320a14034f60981da2acd6b18c35
msgid "|chef solo| does not allow roles."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:15
# 89b669efac7c4a9992115161c5cadd50
msgid "By creating and editing files using the |ruby| DSL or JSON, role data can be dynamically generated with the |ruby| DSL. Roles created and edited using files are compatible with all versions of |chef|, including |chef solo|. Roles created and edited using files can be kept in version source control, which also keeps a history of what changed when. When roles are created and edited using files, they should not be managed using |knife| or the |management console|, as changes will be overwritten."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:17
# 996928de411743d6b87b454928d103b2
msgid "A run-list that is associated with a role can be edited using the |management console|. The canonical source of a role's data is stored on the |chef server|, which means that keeping role data in version source control can be challenging."
msgstr ""

#: ../../includes_role/includes_role_manage.rst:19
# b6bbe402a333433d9a92a3c55eb5a3a3
msgid "When files are uploaded to a |chef server| from a file and then edited using the |management console|, if the file is edited and uploaded again, the changes made in the |management console| will be lost. The same is true with |knife|, in that if roles are created and managed using |knife| and then arbitrarily updated uploaded JSON data, that action will overwrite what has been done previously using |knife|. It is strongly recommended to keep to one process and not switch back and forth."
msgstr ""

#: ../source/essentials_roles.rst:81
# c7c6cee60f8941a08ed0805244c3456a
msgid "Deleting Environments from a Role's Run-list"
msgstr ""

#: ../../includes_role/includes_role_manage_delete.rst:4
# 8aeefb600d3a40e38ca184a4d6e83e37
msgid "When an environment is deleted, it will remain within a run-list for a role until it is removed from that run-list. If a new environment is created that has an identical name to an environment that was deleted, a run-list that contains an old environment name will use the new one."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-10 10:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:34
# 519426915b04442ab671ec659b187123
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
#: ../../includes_data_bag/includes_data_bag.rst:4
# acda77f58c9d4769b64ea774cdaf6b43
# c1c853892a3b45fda2afd5aa8f3a1660
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:39
# 87585b4009cb40fa9e72c4c443c51d8a
msgid "Storing Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# c0e9a1bd3bff4b008227c54349b1379a
msgid "When the |chef| repository is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 36a3d0e631a14adda55320abd25ab64e
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 036480afb7af4805a8f332de4e2cc0e6
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# ab4cd2f7c64641b49b3b349a4c192f61
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 5e0fb0c9f91e4aa4945f5dd4daff7c46
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 29c988c3032a47e3a8ba5621b188383e
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# c178ec8af6f34f1c8fe55f1247cdac02
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:43
# 2e9aa2999e93447c84e5b959666e687c
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# afffe25e9a514cf185bff6fe34487633
msgid "All data bags are stored in the ``data_bags`` directory of the |chef| repository. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# c136dcf6ea264d06835ff833e174fd88
msgid "where ``_admins``, ``_db_users``, ``_db_config``, ``_standard_packages``, and ``_global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:47
# 9281f4c53aac402b8b5b8b145b247df6
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 0c7b85fc9315470fa0f6e4beae86b665
msgid "A data bag is a container of related data bag items, where each individual data bag item is a JSON file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 1b91829014734a40bfefd2b4c1ba419a
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:51
# bd4665dc0882491aae024c5280c39448
msgid "Create Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 113385f0791640ea8c8f08e00489aecc
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item JSON files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:55
# b025030f565248eb810c9e241e35cff6
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# ecee5e4283e74544a9c873e49218e1ae
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 60b5f00235434481adf458d03a7ca1ed
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 7fdc61d615b94e14b990ff664876337a
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# a722aa0bb4504b0f91ea6c83831b6508
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# c9bd233fcf41402cb788b7f11b38cd85
msgid "In some cases, such as when |knife| is not being run from the root directory for |chef|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:59
# 4fa4bbfd527f44f19bd3fc05003cb1f1
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 27fd6a3b294149c1ad756fca0686330b
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef| repository. Any method can be used to create the data bag folders and data bag item JSON files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# 625df64eec2d44e29c65e16104d2d50c
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 54b6d946f81945d6bf573367715bd304
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using the Unix Visual Editor):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# c1a4f6c889f54a548bb7a4c12a7b8351
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef| repository. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:63
# b80ae0b5be554256a0dcd174c3f9f55d
msgid "Encrypting Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# d3b3c293106f429db9e5169b30a1a3e7
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# a7f7df0cb160490fa86a7b956a7efa26
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# f28c5fb6f0084604bea2bc7b1d2496d6
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# 6f7b6173515e48a1b7169a8b911cc84f
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# 85fdefe117b549c1bcab8c3b57861684
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# ab1e4e3391294558959d2f762f9d2c3c
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags.rst:67
# a0745b30ee084acd975d52aeefca7352
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 69a25f839d0440b4bd00dca9fc4fa393
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 5b2beed910554a30b47ac1ccacfbcbe5
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# e9567bd6ef224f46aa2bb448269d9b85
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# 4e675aa910d84b138b8ecc1b60b37c00
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 63e692c6154645b48d98512d4dde18a2
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 6572324bcd2a4f9d902d244562914fdd
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 55587f3936844a349cdfa1c23e6ca229
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:71
# 94ddbd78d4b04e2392667b432e09027a
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 2b1405b2f16a45ca9f13b1f9729f4a2b
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# f21ec9d5970145269efc1deb60bea6b4
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:75
# 6ae1847c2feb49bdadb272f52517b52d
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 2dd3351ddec844619834e6cec1e1331d
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 61ae981c642d487083446a4d4d92a6de
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:79
# 20f8e749a6364af2aa50c94b75834ae5
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 74fe8eb3ce42497eb21c4547f9c30c80
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 80bb2f7818334259abd5f9ada951246c
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:83
# 1c54bf05977f4da38e2dc52890ccb139
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# 6ddb9f3fa47e4081a749e9ea6a436bbb
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:87
#: ../source/essentials_data_bags.rst:123
# 44ca767cdafa4cba8597ab0fda928eba
# 62f5e53956234934894a6c4142bb99c4
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# cf0ba7f177624f4381be4be46ed31db8
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# cd3d8838d94a40e3bcd1d87035dc2cd0
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# efe8220538524977849f33a98cb69bbd
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# be2b54fecdf549949e1fc8f01b20986e
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 8a5b46449f394ec095651b4eb35da2cd
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# a19349157c124c8b8fad9f6ed328ea89
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# 164c5878b43a4ac491eb1e627250365b
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_data_bags.rst:91
# ad095477f3bf497fb75a42bc1de9f36b
msgid "Use Data Bags in Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 598ad041595e4aa8a0229ffdc69e93d8
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# cffa60c11f2f4c60913447a2a348e0dd
msgid "Loaded by name when using the recipe DSL. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# f6ee8c0caa6443fd90227f86ba66b938
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:95
# 0d6f97a06bdd42838d8479afa8b61d7e
msgid "Loading a Data Bag Item using the Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 8ce37a78094d4d70aa93964aa47f3914
msgid "The recipe DSL provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 201f44c29e82464db211945470a622b8
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 91428cceb1bd4ba6b7c24bb994a94347
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 59f727dd684b4fa4a2c44b1b605a36d3
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"charlie\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# d7ae83ed5fd4483c91cae87030daec70
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 782c1eed2f134b75a0ac5d3b4f0c5615
msgid "To load the contents of the data bag item named \"charlie\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 9aed1bdd43024cd6981b98c48e04de75
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:99
# 9174b381f5b74ab4a57125801ab88eb0
msgid "Creating and Editing Data Bag within a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# 5d793b39505747d2a875e5c14ed96aed
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the ``knife data bag`` sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# cc4571eaf930468c9e835a3c38e491a7
msgid "If two |chef client| operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# c3333d8ae55642ad9cc522e4493c54b5
msgid "Altering data bags from the node when using |chef open server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 74678aef50974dbaa8b542b9df5a8504
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# b5f76011e65743cca0cdcffc122fe7fc
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 2c43ad89aaa9421e8f8d32285d590553
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 33ef72dcfdb2485da6fa3150ebd51fd7
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:103
# 1f0e0e9216164ac0acc6d7c8246a3d3e
msgid "Access Encrypted Data from a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 38b8a7729183492185e5bca8c4deb6e9
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 6088e1ad8a3f4db9867b6003526e79b9
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that |chef| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:107
# 19d31ca70f154cb4bfe71a2a61c2f964
msgid "Create a user for each item in a data bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# f3a27038c9a04ec396ecef45066d177c
msgid "|chef| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that |chef| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:111
# 940c711e52f949b4861b07f95f47a829
msgid "Using Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
#: ../../includes_search/includes_search_data_bag.rst:4
# dc21bb3574d14218a80824202431922a
# be68937131ca4e04a54f22d56593326d
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
#: ../../includes_search/includes_search_data_bag.rst:10
# 55039bdd87c447f78eea3e7bd79affe5
# b6e5b414aedf4c909099ba0c0f779ebe
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
#: ../../includes_search/includes_search_data_bag.rst:16
# 92e57e50bfee4c3b8666b84a6b78effb
# 75612699628e49e596945a83420a4b04
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
#: ../../includes_search/includes_search_data_bag.rst:22
# bfaf0385e730458a84f3dac551c37822
# cd97e9faca0045caba7ed8576ebfd259
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
#: ../../includes_search/includes_search_data_bag.rst:28
# b01a669e25ed4ef3b1dbf3819a536ba3
# a9181cdbe0b347198fa8cb06aa747038
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
#: ../../includes_search/includes_search_data_bag.rst:34
# e4f7350fcca54073bc182a7672ee9ec0
# cdb4536e3d204dbcb3a42658f3d19739
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
#: ../../includes_search/includes_search_data_bag.rst:40
# bf230844c667454880d7f63c0daedd2b
# af48c7c54a8c48ea90ba3f26d2672839
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
#: ../../includes_search/includes_search_data_bag.rst:51
# 7ba40c38c28b4911a5e76f39e6d8eafd
# 7eb121e68fc54b5ea882dc62a7c76e1e
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
#: ../../includes_search/includes_search_data_bag.rst:72
# 1d876f62359c41c8ba81e08b0974be06
# a23389eae6514651b08f7ffbd9f4a907
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:115
# acd82de85ea7427f952d39b883d92a82
msgid "Search Syntax"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:4
# 0ff6db47edb041ccb34c0e1a8fb7576b
msgid "In some situations, it may not be possible to know exactly which data bags (or data bag items) should be used. Or in other situations, loading all of the data in a data bag might be the desired result. Use the search index to find data that is stored in one or more data bags in the |chef| environment and use the various search patterns to fine-tune the search queries. Any data that is returned as the result of a search query can then be loaded by a recipe. Use the following syntax when searching for data in a data bag::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:8
# d3f58c7fdf8b4ec081f51dc696d782b1
msgid "For example, to find every admin in a data bag named \"admins\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:12
# a114c8bcb7e34990857ad59d9b7caa01
msgid "Or, to search for an administrator with an ID of \"charlie\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:16
# 155f8c589e944726a1f2cad61ff5d2c3
msgid "Or, to search for all administrators with a group ID of \"ops\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:20
# 2c51f7161144453fb4d5fdd7145f3838
msgid "Or, to search for all administrators with an ID that begins with the letter \"c\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:24
# 369e81cffb544f6f964bcf74e9875928
msgid "Once returned, this data can be used as if it were a hash. For example::"
msgstr ""

#: ../source/essentials_data_bags.rst:119
# 012f6cbe19ad418ab1da2ac63419f78c
msgid "Accessing Data Bags Using Search Indexes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_example.rst:4
# 5ced9af6d4b74c12a614d70e37b95d9d
msgid "The following example shows how to use the search index to find all of the items in a data bag (called \"admins\" that stores the user data for each system administrator), add each data bag item to an array, ensure that each data bag item exists as a user resource, and then to create a security group to which each of the data bag items belongs."
msgstr ""

#: ../source/essentials_data_bags.rst:127
# e641a917315d42e48c27f8e8181130e1
msgid "Use Data Bags with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 998aaaacb1814157b35059ae68ede91b
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 8df00564f5c2437088f273cd95f555f3
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 35028155b07b4737b4534257d2775abd
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# beed87258c1848a9887a81d83de4b572
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:131
# 6bf61c3a648b4188a9879f1c21e4fd32
msgid "Use Data Bags with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# bcd81374c04e412f9fa86001e4e9ebee
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each JSON file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 4b41510805534c21b7cdf524bff8ded8
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


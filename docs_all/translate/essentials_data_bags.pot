# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-23 12:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:34
# 657585ae322a449080a265f733280729
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
#: ../../includes_data_bag/includes_data_bag.rst:4
# 336d7ab2052d48449f372ecd8d9633f4
# 4538a439103348ff8e5599a6786fed48
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:39
# abe66255388948dfaea26c25c36ddd72
msgid "Storing Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 9d7043b70c9b4b81b1c6f398037a57dc
msgid "When the |chef| repository is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 8d6e11ba2afb4ab28a266fa84bd7b2b6
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# f366bf93e9de41b5803f5069de3a5d22
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# fc5af09775a24a56aacde480b00613d8
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 445a81dc79e944de8916e12299011498
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 8b3b07e089654b3d849a58ed94fa298c
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 04223dbf73844bbf97448125ba55820d
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:43
# e48fbba1a9c748a2946b77bda69cc39f
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# 9f912873b73c4ae1870378cf81ccd91d
msgid "All data bags are stored in the ``data_bags`` directory of the |chef| repository. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# cd40187c33984909a249a5377dfcbe94
msgid "where ``_admins``, ``_db_users``, ``_db_config``, ``_standard_packages``, and ``_global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:47
# 4978f54c5eb34be88ccdb221d57ddc15
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 6114e31da02147ac9f2d5fe044ae6a63
msgid "A data bag is a container of related data bag items, where each individual data bag item is a JSON file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# b24b1cf6d1bb450799f2b91f5ab7351c
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:51
# 5644fec6fe094238814a2c8d96ef4c52
msgid "Create Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# 551b26366428499885d5b05acea7f9d9
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item JSON files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:55
# 5f2e725285d84dcf946ff7adaf9faba2
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 84ab3260984e4f5b88a3fbcfb40e4565
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# f77dc4bcf93f4656b39a2f95eec5d2fd
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 1eab6cd30f034fbea3323b259b4bcced
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# fc9d20f663e64d979a72330608bf262f
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 215689eafd234adf999123192e8aa743
msgid "In some cases, such as when |knife| is not being run from the root directory for |chef|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:59
# b860aef4f418403488878c60228d14b4
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 39980ecda99e4e72860658c2806685c3
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef| repository. Any method can be used to create the data bag folders and data bag item JSON files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# d7e92b8b155a4174addca4c5893f5050
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 8d4599e04a884dad8a7e5cef1c4c54fc
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using the Unix Visual Editor):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# a7bf221754b743fd84f3fa3e64abd632
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef| repository. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:63
# 0ac61e372620485182d08603fc5d4991
msgid "Encrypting Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# ae0ab2d0c4684b18bd4ab7cae6ae1e26
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# 5e108ab5f896411c85f1f70009e4abd5
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# a4e312d413584dd2989e43294ef5c6ca
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# 07b0d961bded449db4e6b5cbe4d82daa
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# 4349d307977548d38b7a791a6d4b8bd1
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# b570106171804f8da9b0b7bbcfb89138
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags.rst:67
# ecefa80b88e149e9b07c4c352a9cf440
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# e6b1635e40054523b7fdc1fe8d37a948
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# f13dc21d9ebb436480938af77cee6cb5
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# b6057928332345a0b40e8f00feeffdbf
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# c0347c0fc3ef47fa8f2c51b6e3ebf45f
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 84541758fd6d4e08a1f4561e55877bd1
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# d0610f569805458fb742b2bcd3bed5e8
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 481da3bbd9614db382b7076f8c92cfef
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:71
# 6d7d507848e94eeea8fa58476ed655bc
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 3ee35dc8d0514391bfb37e650637b759
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 24b26debde4b4972984f46f04d28c629
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:75
# 7adea918f9ab4c13a0e828c5c08abd88
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 76abd94370b54c3d9ac04508b79be115
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# f05f4d0cc8e0476aa4a11bfaaa9c025a
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:79
# 5675bc2944e24b26816a6ea8cfa4c897
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# d0f99a8688264f3ca4157efb0e825c94
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# db10be13b15b411099ad75d87b01c27b
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:83
# 1b83d1ae3b8a45a387e524fcc335e8f1
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# 86821deceb7a47798e6ba2b109244b59
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:87
#: ../source/essentials_data_bags.rst:123
# efd984af0a134f34a8effff5c00f9ecb
# 75c038ac86514edc9c9038f4128004b7
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# 777099747d154f378f133b7f51bd71b9
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# 153fcec95f0c460abb810412239b3a72
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# 0f089b3928b142ac8bef79e9603ae79c
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# cb7d5ccfd195438c9b5a704dec886c4f
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# e51bcada5b964b52abc8b9b47043e196
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# 2361efae005c4a3cbaeb8f4c590e8e13
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# d22b2adc189443cdae4bb913f1f470ff
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_data_bags.rst:91
# 9eaf111e7e9844afadcf1bd063516984
msgid "Use Data Bags in Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 29944e084ef2431d8464dd8a75c7eeb8
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# ae4dd257cf03483991ac911df25c0278
msgid "Loaded by name when using the recipe DSL. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# efeb55628f33474eb368e4a98f539bac
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:95
# bbc89bbac48b4df7b043704db2f216d0
msgid "Loading a Data Bag Item using the Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# a4dbc116a16849e6bb017fd936f742bb
msgid "The recipe DSL provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# cace58727cfd4b888d7f641a65a4ac12
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 99e44a06306241c29746e11d48d79602
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 608f5ef765304828b779d7289a00461c
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"charlie\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# cd738941f2e747cb93db5d9b721f0c24
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 38459e4a84f445309790836473cc0588
msgid "To load the contents of the data bag item named \"charlie\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 0e76411152724396b4d338cdba62a50f
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:99
# d8d5c95c44a4482d957654f2ffa9bacb
msgid "Creating and Editing Data Bag within a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# ca376bd0c11f44ab9986b049df0b90f4
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the ``knife data bag`` sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 0d27fb6fa07349a6a7e330794719551b
msgid "If two |chef client| operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# 69ff85cee6094ca1a2f1bd870633b7b6
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# c4caba81a97d4018bc2e292344317f8f
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# e1cc023a6d084302a6ba0633019787d5
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# a93ff7b08c0649168167abca1a89ac08
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# b0c61217f127411082a2f3fcf4976a8f
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:103
# aae39b216e3f406b9279669dd7d04918
msgid "Access Encrypted Data from a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# e01e6311c5e643bf8add90ee98dd4cb9
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 47e76acf9cf94499a5e8b8f26cdacbe6
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that |chef| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:107
# e08bcf21ba4441ebb0271586bfb46b64
msgid "Create a user for each item in a data bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# e2f80a7dfee449f58f6b56d96e797f28
msgid "|chef| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that |chef| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:111
# 3f72aaedfea7423286c3a6d1e932fa84
msgid "Using Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
#: ../../includes_search/includes_search_data_bag.rst:4
# 793fd6899f9b42c8a35659605f0c7671
# 0e052c61b2884407ae48b83e6fdabca8
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
#: ../../includes_search/includes_search_data_bag.rst:10
# 3c016a1d3e314f7fbabf9efbe7e3b7fa
# 3d69836914ef41b3a3c375786589d209
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
#: ../../includes_search/includes_search_data_bag.rst:16
# c02ade7b7944432bbacebf9fef56baca
# efd54c51547a4031971815c671d73ba7
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
#: ../../includes_search/includes_search_data_bag.rst:22
# db981dbeab1944e99f4176c41f8ccac1
# b6cde3decde04c75948965dc22013c7b
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
#: ../../includes_search/includes_search_data_bag.rst:28
# 974dc6da58694a66ae6c17ae157c8119
# 7100544cc58d476e8261569dcf17f3e7
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
#: ../../includes_search/includes_search_data_bag.rst:34
# c37c6c83a4a447d78bb1411ff8f565e0
# 094ad6ad6906408a97974f2c4b53a51f
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
#: ../../includes_search/includes_search_data_bag.rst:40
# fc0ff985289f4498a6400a879f610dd5
# b17a0e82fbd0467ca067973619b1bc81
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
#: ../../includes_search/includes_search_data_bag.rst:51
# 0ab6e68004a040eaa4160472794fa47c
# 6dcf5691186c4838b88ad34bdbea611d
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
#: ../../includes_search/includes_search_data_bag.rst:72
# 636ed601cd3d489a8cf782f50502d47a
# 0cfddb36f4d24037bb0f5ce32db46fbc
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:115
# 29afe3b1051e43f7a6d55c9b6f6be9d9
msgid "Search Syntax"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:4
# 1c78f884f3094bd4a039cdcbcc12cecb
msgid "In some situations, it may not be possible to know exactly which data bags (or data bag items) should be used. Or in other situations, loading all of the data in a data bag might be the desired result. Use the search index to find data that is stored in one or more data bags in the |chef| environment and use the various search patterns to fine-tune the search queries. Any data that is returned as the result of a search query can then be loaded by a recipe. Use the following syntax when searching for data in a data bag::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:8
# 1bb02d35c9794792bdbc45b4709343ec
msgid "For example, to find every admin in a data bag named \"admins\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:12
# 738c2d1d57054ec1949cf30a6e5f9012
msgid "Or, to search for an administrator with an ID of \"charlie\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:16
# c8607cc6d8a9431d8065146975fedacf
msgid "Or, to search for all administrators with a group ID of \"ops\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:20
# a304611054214b219a05fd0c60d15618
msgid "Or, to search for all administrators with an ID that begins with the letter \"c\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:24
# d6ecdc7c5d4e46e59e8ad7f6d293f9db
msgid "Once returned, this data can be used as if it were a hash. For example::"
msgstr ""

#: ../source/essentials_data_bags.rst:119
# ae322dcadfaf47ef8c1560f5f3843763
msgid "Accessing Data Bags Using Search Indexes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_example.rst:4
# 02a8ebf262a14243a4a99052876d5f44
msgid "The following example shows how to use the search index to find all of the items in a data bag (called \"admins\" that stores the user data for each system administrator), add each data bag item to an array, ensure that each data bag item exists as a user resource, and then to create a security group to which each of the data bag items belongs."
msgstr ""

#: ../source/essentials_data_bags.rst:127
# 30a1a5003c7b411b9338c1e8088d8c87
msgid "Use Data Bags with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 6daa81a9b47540678e54f0371f689d4f
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# be4240b1340a4acc8e4e42d85d6eb23b
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# b9d4c8d5ece34e738993ad2424036aab
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# a9bfeb4ac10e4547affb73536ce1301d
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:131
# b7fa43ec9f7f4cfea66885f88992c17d
msgid "Use Data Bags with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 4c735f4e240949cf805d3a5f52fcaee9
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each JSON file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# ab2f841d97344587b7d4a2995d775937
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 13:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:34
# d1ad17da5a5244c3a65aca3606e32dd0
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
#: ../../includes_data_bag/includes_data_bag.rst:4
# 6f028464df9c406987e38c392db4276c
# a311102474754161bb1b159e3d39e8cc
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:39
# a6ae398645444735984bad77f01e5a04
msgid "Storing Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 750d6ce2af404ff4841c6dd7881813fc
msgid "When the |chef| repository is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# cc75b2436395488b9fe8988a213d0aae
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 7a270eedc4684fe0a21a27b495f3787d
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 3bfee5bb0d504720a5827f7cebc9fd5f
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 681fc53e0c994be9920563dbc9a9b8e7
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# 3893401db2f9472fa85fc4b823e8ec5c
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# d2b1e5d902844a82baf12041264850f4
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:43
# 3a0a650a485945309d13dba1c0b6cffa
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# db2fda2606924333bc9dc03856c3894a
msgid "All data bags are stored in the ``data_bags`` directory of the |chef| repository. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 241c6822699e4a5a819aec97efb48e93
msgid "where ``_admins``, ``_db_users``, ``_db_config``, ``_standard_packages``, and ``_global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:47
# 8fdd4e96309d48189bcc843868cdf8cc
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# c7ac99dc2b454310b9131283df59d95c
msgid "A data bag is a container of related data bag items, where each individual data bag item is a JSON file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 584d490c9ee7490da008c4d20d9c1ffc
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:51
# bd1ef2a62cff49e38baccb0ee895bb36
msgid "Create Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# df691f1f9c244d618b16939420dd1837
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item JSON files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:55
# 2c0739bd50724752836ba23b3c5e4986
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 6b3a8423b3f14bf29048c150f9b5e3af
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 2cc1c9b91cb2405c8d11fe8d582c077a
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# bd03f3631623493fb7d2116abcf3da90
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 838d3ad7d3b14d9c87a85010f99b9d20
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# dec600ff29524d97837a5e5f3bd59115
msgid "In some cases, such as when |knife| is not being run from the root directory for |chef|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:59
# 52829d000d77423989ec34fe5c3a8be3
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 2625104e4f4045b5901eeb22c2af94fb
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef| repository. Any method can be used to create the data bag folders and data bag item JSON files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# a6df13b15ab3479591a03d9318fc97a6
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# cc274ffbaf454e4ebd7018a516840e56
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using the Unix Visual Editor):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# 77e7d69c517742bda4615e5cfd392ac4
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef| repository. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:63
# 84c02a86e9424fc6b1f152f8d8391c04
msgid "Encrypting Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 849dd8511690418987da09160cc56378
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# fb900488ffcc487488f92594557590d4
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# 6c38ca9bbc994bf0a013f23b7aa8d6dc
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# df6c972cd3b54367bbaaa2f631b1e547
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# eb5d06a8b5b0460ba48f3d02b672715e
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# caec13bf794e4fc6a7e02d98e5745ad1
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags.rst:67
# 1618ac3ca8cc4a57bbde6a268c1d2032
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 09fb2fe74c6c49d4b3b7968bdd9caac6
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 27aab45270d2438ab90ef3c717cad5a9
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# 06c0175ecc374923a529437d49e14050
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# fc8dcf4fb2454f499793419d8736a3d5
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# e93051478f3045f3a89e08590c1cb8e7
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 72974880d0e149c5ba3a90e69dcb8bd8
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 4ce0b8daecc4479d838ed567054bdb78
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:71
# ae3efbb0f3dc4f02936a7ef708bed2a3
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# f36c612f99cb43b4bd49bbc7b2630cf2
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# d28b5fbe7c414a8d9d3ca06be9627f05
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:75
# 4c9107a65ab84e0e9f186e0336502267
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 79711ec35076451d9f81d5fbb47b9080
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 09ee07dffb00498c921c91535ed45dc2
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:79
# 99e536f6a88141a8b75edb40aff54b17
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# ab8be2ea42a343b1aed7ec1ae7209756
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# ff0e036673b84c48b23d85d1d92a90e0
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:83
# f88c50f3b7a54bd784d3147f93d85306
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# b9b5e9eaab134b2fb6de8f4556781583
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:87
#: ../source/essentials_data_bags.rst:123
# 8f85b046b5df4c2da3acd34ff2db5a77
# 9bfb04c1c2814c9b856d86050d316bdf
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# 1db418e3828144c9838aafea24ce429d
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# 7ca6c2c15ceb40a884fc5325d0bb9f6b
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# c43c6f969dfc4a32a125766188698268
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# e8883de3167644e283c044f9a960eeea
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 820d14cfc635442f885ef81b2dd2fef7
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# b47d0e96ee85474788f04b629114c03a
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# 2fe38ef2a81843608567d06a462ecf3e
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_data_bags.rst:91
# 90dc13c782f64e648a09e72907dd5453
msgid "Use Data Bags in Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# e8065f9ce0cb4bab99c69d0686c09ef5
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# 8b13c984f83142c7a6510503c518e9aa
msgid "Loaded by name when using the recipe DSL. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# 2bad06f442d0411eb647623d13cd1e37
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:95
# dad8a0619af24b68a37a9dba672475ec
msgid "Loading a Data Bag Item using the Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# f7b2ed719dc14d439a28ff435235b2ff
msgid "The recipe DSL provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 027054114e1b4d79827900fed94bfd00
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 961c3abd6ac2490698185f967ba3623e
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 8f9f079522a94949b5449df04c6d4c1f
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"charlie\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# d4ec25a664304fc79c1b0d94e7caa867
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# c424f40d97e749a1b61501515a49cb98
msgid "To load the contents of the data bag item named \"charlie\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 710ea7b3536b48aa8e60fc9452f214e3
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:99
# 5e290513259b40dd9b176c386bfe8a97
msgid "Creating and Editing Data Bag within a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# b70b5ffce08a42af9e1515d2047ba9aa
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the ``knife data bag`` sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# ec16f0c9090b4585bdeec3c23f4f10cc
msgid "If two |chef client| operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# f6411dbd3988413da93a1379d9b6d0cd
msgid "Altering data bags from the node when using |chef open server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 7677b6f9f6984f2f875a6301cbff0287
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# e69bd1c7e539448397ed0581f9d7f9ae
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 339514d05757456983c6e95578b5c148
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# e2381250a0ca4840992c98d669e324c8
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:103
# a72d4a96dc3144dd854ed6b59b97691c
msgid "Access Encrypted Data from a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 68cd50b98466400580412551ef81868a
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 403488e017ae4aa88f0514147a7baa3f
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that |chef| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:107
# 43a5c05599eb4a76bf669d7b848b510c
msgid "Create a user for each item in a data bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# f0ce40de128c4f72938afe99f303a721
msgid "|chef| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that |chef| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:111
# 13c3d46fbccd45569bf98a156ae26c88
msgid "Using Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
#: ../../includes_search/includes_search_data_bag.rst:4
# e622b9209f76467e85a5f3288119de44
# 504cc1ed2ad4493c9921d1284b9c1792
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
#: ../../includes_search/includes_search_data_bag.rst:10
# 1a7fbb1dfb5943f0bf79147777e1b031
# 498f5dcfaf4a458f87d92c0778ea534e
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
#: ../../includes_search/includes_search_data_bag.rst:16
# 50493671160e460e9a32c7ea96f72a73
# 2b7701e6c0034d87b9d66ca75a2ba65b
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
#: ../../includes_search/includes_search_data_bag.rst:22
# 1b035d3001484d7c9eeba93f7c175859
# 84a0c8d4be2c412dbd23cf8fbb22d1d8
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
#: ../../includes_search/includes_search_data_bag.rst:28
# ebbabb92b9c347c191d364e97a63ec3b
# 5ae6abe8cc304921b032069b74b6e6ab
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
#: ../../includes_search/includes_search_data_bag.rst:34
# 83196729faed4c1ebbc928c72717d978
# 31a7f827355d49d68c4329058cb08355
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
#: ../../includes_search/includes_search_data_bag.rst:40
# 29929243ae9e4eedaef637f16723fd86
# 4ff61344f5af45638c9b320f9a248a51
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
#: ../../includes_search/includes_search_data_bag.rst:51
# 8710ee25aaf64f599ff831ed07bd7a64
# 978b20b479e1429694a1a745cc579941
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
#: ../../includes_search/includes_search_data_bag.rst:72
# 1b224fd8f3a943b293cc4b8dbf9388ce
# cc1eaa207a174c598ec8bc085ae4320e
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:115
# 8ae0bb4dad764062809ba2cef43fad0c
msgid "Search Syntax"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:4
# 1f3440a9dbef4abda622e0fb7ce56c75
msgid "In some situations, it may not be possible to know exactly which data bags (or data bag items) should be used. Or in other situations, loading all of the data in a data bag might be the desired result. Use the search index to find data that is stored in one or more data bags in the |chef| environment and use the various search patterns to fine-tune the search queries. Any data that is returned as the result of a search query can then be loaded by a recipe. Use the following syntax when searching for data in a data bag::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:8
# 32589074272843a599bfc6c03e847318
msgid "For example, to find every admin in a data bag named \"admins\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:12
# edf5018c591a44699b7518ccb64ea77b
msgid "Or, to search for an administrator with an ID of \"charlie\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:16
# 5453264cb2fa4cc78cc066fb9bec8490
msgid "Or, to search for all administrators with a group ID of \"ops\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:20
# b3e706e096f64f0b90ac91a9d0fe305d
msgid "Or, to search for all administrators with an ID that begins with the letter \"c\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:24
# fba49475f6374a4ab0a767c091f26bc6
msgid "Once returned, this data can be used as if it were a hash. For example::"
msgstr ""

#: ../source/essentials_data_bags.rst:119
# e4a3bbead5e24a7082336ebdf64e5206
msgid "Accessing Data Bags Using Search Indexes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_example.rst:4
# 8b8fbaf96966468a95aac73f41fb91f1
msgid "The following example shows how to use the search index to find all of the items in a data bag (called \"admins\" that stores the user data for each system administrator), add each data bag item to an array, ensure that each data bag item exists as a user resource, and then to create a security group to which each of the data bag items belongs."
msgstr ""

#: ../source/essentials_data_bags.rst:127
# 8a6f59a8162a4f40984da36a520d2a70
msgid "Use Data Bags with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# d9c7535030fb453a9bea04290bd19e99
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# 9eaf5bede4194c26acfcb9c64e9c14d4
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 4dd1f53477fa42828c5766a35e2383c6
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# 45a750412160444e9b206e666f46d071
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:131
# 1c080150bae04d28bd789794aa4d6c3c
msgid "Use Data Bags with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 7e5a8acdaa8e424081c8d464fc3af7f8
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each JSON file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# f4828d6da8994abfa0690db3afd138a0
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


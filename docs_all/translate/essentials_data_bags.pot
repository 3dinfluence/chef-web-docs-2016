# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-10 18:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:34
# 4a4393ddaff046d680eda2d40d49237b
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
#: ../../includes_data_bag/includes_data_bag.rst:4
# 5c81ef9964974b0c9f549b76855a45a5
# a9cc518e0896464790b09d9401de6731
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:39
# 250931e731c64213909e4ab2261cfa13
msgid "Storing Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 528a4adcd9594a6facdf9cb6919c4a7b
msgid "When the |chef| repository is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# b1ed4833aec54460855461d3c62ff0a1
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 2e8fc0c37f81401aa900509aec067078
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 5af5b8e2663b43c1b3693d9a55308a84
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# e5bec218135c4cdf9f06e4f5f7cf3909
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# c2593424f8ca4a6fb21a2dc1b4c94616
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# 1701a070f7f3431d994e78ca7b3b2ace
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:43
# 10e146d020974d7f9b8e85696ecac723
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# 412db0fba66b4a06b72d86d33e76dfec
msgid "All data bags are stored in the ``data_bags`` directory of the |chef| repository. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 2fbf01d2197d4de9b29aadc0bfb11dae
msgid "where ``_admins``, ``_db_users``, ``_db_config``, ``_standard_packages``, and ``_global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:47
# 43ee9d25065e42309d9a1f0fcb6b2cf2
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 6e35f5002f5344159460596c1818682a
msgid "A data bag is a container of related data bag items, where each individual data bag item is a JSON file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# 4995a5bc5285478b88df6cfad620d8c1
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:51
# 474de641939746e681329b7a2cf91139
msgid "Create Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# f00e7bda73f248159a0562efeaa59fea
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item JSON files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:55
# e8e6a0c24b6f4328af2f555b83095801
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# 7d73be8dffb943ef98969a510b3e11a3
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 6cb323efcb83414182d6021e27ff19be
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# c8662f80e156429faca3401fb417d7a8
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# 3aea370cc32f4868bea817b742542ed8
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# 42fe6aa16ebf4b5b92327bfac975d670
msgid "In some cases, such as when |knife| is not being run from the root directory for |chef|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:59
# b512a87970f041f68f3b152c6525f0e5
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# c3f406db3dc847768a7894e7497644b6
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef| repository. Any method can be used to create the data bag folders and data bag item JSON files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# efef3dcb4d834e9bbd27b3021052003f
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 1e07eeffb7734d1db5e047abb79bd6fd
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using the Unix Visual Editor):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# d455669c629c436798a36c497e1edffd
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef| repository. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:63
# b95fe31c1cd946de8585e7511caa059c
msgid "Encrypting Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# ea65be13372440319037b5fe44c86e14
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# c7d7bda731fd4350a986cbfb6f600969
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# e3c5fbaf1f2848c59a7a722f536e82bc
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# 479262da73f04b73b9b09e3abc68cc72
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# 6b838d7ff43941e4bb30186433e7459a
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# c26701a6b37e435d847c627887d649ca
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags.rst:67
# e52d6a6f5a0543b8b0565a8662508b22
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# 7f3b4ab4cfdc4d0ba48825d9083ec99b
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# 7c139cebbe9c41dbaab8a89dde15da5d
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# fd39057e37594d158d2551a3344f1b21
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# bbdaa6b1959c47cf962178adc41e8976
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 08024cb95fde42f9b4ffe9d1b0c152db
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 4bc685160a5b4ce2bf0a4dfb968132a3
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 84d2caf0e2f349639ff32807049586e3
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:71
# dd0a4859d5d3424b997b7e296d5b474a
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# ffb667943a0442919e8d6199c9809fc8
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 5698fe8979f042cb8330fb54a2578517
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:75
# 69c2d29e6786409e85d1c0553abe5986
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# 7010523f6cb7446ca469cfd978afee5d
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# 999c3ea8064f48d5a7e5669f116c4f96
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:79
# 89974a307bb04ceb9abff4d55a6c4b43
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# 503c5044c9a6481c8a712a3072aec2da
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 20f1d9449e0143edbff6ab662d707e30
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:83
# 409146c902cf485cb046bc94d96e3a4f
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# 39109898c8cd44ed87972655e9325e83
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:87
#: ../source/essentials_data_bags.rst:123
# 969d58923f444fb286617fb7e871d22d
# 855f13bcc2ce488f99ac1e9628f2b795
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# 2981865fbf564e918daf17e0ca4eabc4
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# 0cf6a39394f74d95b594058e6c4431d9
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# 23ceb3d70cf0435a951b28051934dcde
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# ac45b013bac84070b6d3298c92ede43f
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 226d9ce385a549d296fb26ab9db3c32a
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# 443144884c8c49ea8e1f8a08ff268240
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# 1c415a1ec56545d6bc9329d02f177a4b
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_data_bags.rst:91
# 166ad79a5f8b466d8b5682e812ee6704
msgid "Use Data Bags in Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 3b1369ed969748b6a8b69c89f3524943
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# d8881ee987f84ffc8873bc4ee967166a
msgid "Loaded by name when using the recipe DSL. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# 6001f105ef6645f0811ff2401e6e256d
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:95
# af2af834132f421882c89bed7e0b023a
msgid "Loading a Data Bag Item using the Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# b17aa916dd534eea851b44235e9a0232
msgid "The recipe DSL provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# 17664a8aca694520ba8b1fa65132a168
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# 89cecc3aaadc42678a14843529ee2a60
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 4a2c8b07c4114282acd663985625ab41
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"charlie\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# f53ae70d119f4d9f9741084946fd1135
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 6955d8dbe8c2474f966c1a06a40ed1d4
msgid "To load the contents of the data bag item named \"charlie\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# bbd481d629964476bbc15d87c7a7cbb7
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:99
# 3c268b7940ae470dabdaafb33cbd8d9e
msgid "Creating and Editing Data Bag within a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# b07542558ae244029bf5189a8d24aa64
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the ``knife data bag`` sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 5f4ba01ce0284812bee37fddaa65d976
msgid "If two |chef client| operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# 937f758124374ddfa325e77d2f74524f
msgid "Altering data bags from the node when using |chef open server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 9f4b95837b1d49cf85e33d6ef8da216d
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# aa8deaf280224467b11f6c47f76d0799
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# d14c555c7a404bb1a11205a9d1839050
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# f4fdc4ed798e4db2b8002c7526f90c7f
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:103
# 7991ca219067489fbbf869d7b7493c78
msgid "Access Encrypted Data from a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# b14f7998d2f64d7fbee95eac46a29106
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# 732858086b6b4abc884bed93c58fb65d
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that |chef| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:107
# 68c131e1560a442a923111a36b0a6d75
msgid "Create a user for each item in a data bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# fce251433bde44b2afd7eddba6b0772f
msgid "|chef| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that |chef| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:111
# 32df3ab8fcf642cf9f10f2df199a9dba
msgid "Using Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
#: ../../includes_search/includes_search_data_bag.rst:4
# 367aca2e1bab4007b5bbca849d27e396
# c5867ad15fab48ddbcd4ee6152eb680a
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
#: ../../includes_search/includes_search_data_bag.rst:10
# 1d67d34783aa4c25a2bce0065c810c12
# 2255b6200140496e93f07f3cf37bd3ed
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
#: ../../includes_search/includes_search_data_bag.rst:16
# 3ebeaede7b754590a97983409ef51cc1
# ef4b585da0b542d19eea8499ecb7f09a
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
#: ../../includes_search/includes_search_data_bag.rst:22
# 8b029c8f8e1549bc812cb8175fa6584d
# add4dba48c7447f1888e8311cfcd046c
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
#: ../../includes_search/includes_search_data_bag.rst:28
# dcfafe56c3b54a05b81cffda9cca5a28
# d52d6d395f834aed9b6e2e2033413ecf
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
#: ../../includes_search/includes_search_data_bag.rst:34
# b1332884227f4fa1a182d0dfd63512cd
# 56c3c015a71045609adae66722ba5b76
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
#: ../../includes_search/includes_search_data_bag.rst:40
# 294c431023ff462ebcd48e8c7b6a4211
# a4341908f3e84d9b84aaced82c987bb4
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
#: ../../includes_search/includes_search_data_bag.rst:51
# f3e475e28a01471ab839f2a35ae49275
# 62a9855d429d413ca032dbf30c70f9ad
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
#: ../../includes_search/includes_search_data_bag.rst:72
# bfe26f24fd2d4f969a918841adec6385
# 27f6c1f8dbde41e8a96de73bd319847f
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:115
# fb8521ce5dc84c69922a93a1b8da4d2a
msgid "Search Syntax"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:4
# c4065a92505a4b6a9fbe5f245d6d0b77
msgid "In some situations, it may not be possible to know exactly which data bags (or data bag items) should be used. Or in other situations, loading all of the data in a data bag might be the desired result. Use the search index to find data that is stored in one or more data bags in the |chef| environment and use the various search patterns to fine-tune the search queries. Any data that is returned as the result of a search query can then be loaded by a recipe. Use the following syntax when searching for data in a data bag::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:8
# bf1bf865fde647939232401c32651cac
msgid "For example, to find every admin in a data bag named \"admins\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:12
# fc69511108b2404088278d46c48cad6c
msgid "Or, to search for an administrator with an ID of \"charlie\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:16
# 10562a17da0c4de781716f111806fb0c
msgid "Or, to search for all administrators with a group ID of \"ops\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:20
# 39d24c3735ff484093de05283a570d9e
msgid "Or, to search for all administrators with an ID that begins with the letter \"c\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:24
# 9b0c00d66509431a9f802053c5c54ff5
msgid "Once returned, this data can be used as if it were a hash. For example::"
msgstr ""

#: ../source/essentials_data_bags.rst:119
# fad2fcac6af445f1a6dccb627cc69c1e
msgid "Accessing Data Bags Using Search Indexes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_example.rst:4
# 16d69ea0587648b4bc5dd7599d56d74a
msgid "The following example shows how to use the search index to find all of the items in a data bag (called \"admins\" that stores the user data for each system administrator), add each data bag item to an array, ensure that each data bag item exists as a user resource, and then to create a security group to which each of the data bag items belongs."
msgstr ""

#: ../source/essentials_data_bags.rst:127
# e993d59b827b49f5acab8840985ccd46
msgid "Use Data Bags with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 24481c7dc6a840a4a264287c3a7eb61f
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# d978c07c4db4496b8ba1fe02c6b146d9
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 5553e353253c4c23be39716805f264da
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# d6e8406f83db4d9e81896bed3a65361c
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:131
# a0e147e8b23345bea7ad04f7e9d1253e
msgid "Use Data Bags with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# aa78cd3355d845658fbbbad08a8733a2
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each JSON file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# 55fc4935678a4c35afb057fe93c02048
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


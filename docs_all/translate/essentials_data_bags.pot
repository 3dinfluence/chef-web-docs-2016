# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-22 23:50\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_data_bags.rst:34
# b4a912548a9f444b89e1da3073e760b5
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
#: ../../includes_data_bag/includes_data_bag.rst:4
# e6eb2d810ee44d40bf68f9764bc127c6
# 050878d15e1c4fb4a089728ea276a0d7
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../source/essentials_data_bags.rst:39
# f33efafa018e47099ebcefac3d0d398a
msgid "Storing Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:4
# 6647b08c51624d758563d2fc87234f99
msgid "When the |chef| repository is cloned from |github|, the following occurs:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:6
# 201e5b55cf3340b19ae7d4f5ef96d162
msgid "A directory named ``data_bags`` is created."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:7
# 92e7a0baeb9049a28282c1b80738fd8c
msgid "For each data bag, a sub-directory is created that has the same name as the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:8
# 5fa7f648ac32477ba54ea86995d502ab
msgid "For each data bag item, a |json| file is created and placed in the appropriate sub-directory."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:10
# 4a27f422eb5f45c49a77fc8f31e95a78
msgid "The ``data_bags`` directory can be placed under version source control."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:12
# e1574088acad4ca7b87984f7b00e1658
msgid "When deploying from a private repository using a data bag, use the ``deploy_key`` option to ensure the private key is present:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_store.rst:22
# ece704db0d714833a5b8085783dc4360
msgid "where ``ssh_private_key`` is the same |ssh| private key as used with a private |git| repository and the new lines converted to ``\\n``."
msgstr ""

#: ../source/essentials_data_bags.rst:43
# a774d98199624e4295af75d8bf02f91f
msgid "Directory Structure"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:4
# 3dabb0a789a74e27801cf78887ce29b3
msgid "All data bags are stored in the ``data_bags`` directory of the |chef| repository. This directory structure is understood by |knife| so that the full path does not need to be entered when working with data bags from the command line. An example of the ``data_bags`` directory structure::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_directory_structure.rst:22
# 0d4b35b3e91d46ae9a6801aaa5c1140c
msgid "where ``_admins``, ``_db_users``, ``_db_config``, ``_standard_packages``, and ``_global_shell_settings`` are the names of individual data bags and all of the files that end with ``.json`` are the individual data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:47
# 2808f0618d1d48e69784d35110c62140
msgid "Data Bag Items"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:4
# 84f3d83665f34579b5a88bc1fdeb2701
msgid "A data bag is a container of related data bag items, where each individual data bag item is a JSON file. The only structural requirement of a data bag item is that it must have an ``id``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_item.rst:13
# e01da86a759e4f9d86723f8969dc2532
msgid "where ``key`` and ``value`` are the key:value pair for each additional attribute within the data bag item. |knife| can load a data bag item by specifying the name of the data bag to which the item belongs and then the filename of the data bag item."
msgstr ""

#: ../source/essentials_data_bags.rst:51
# 8fd2e08f183f46dfba30294c1ebe105b
msgid "Create Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create.rst:4
# d9afa5d27da547cab5cb5be548c0564c
msgid "A data bag can be created in two ways: using |knife| or manually. In general, using |knife| to create data bags is recommended, but as long as the data bag folders and data bag item JSON files are created correctly, either method is safe and effective."
msgstr ""

#: ../source/essentials_data_bags.rst:55
# 717bf88450734cae91f4af49185c920c
msgid "Using Knife"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:4
# d351f52e89de4a01a5db3d6277a36a3d
msgid "|knife| can be used to create data bags and data bag items when the ``knife data bag`` sub-command is run with the ``create`` argument and to update the |chef server| with local changes to data bag items with the ``from_file`` argument. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:10
# 3cfeeb6733934301bad7f1e7516f1389
msgid "As long as a file is in the correct directory structure, |knife| will be able to find the data bag and data bag item with only the name of the data bag and data bag item. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:16
# 91b8f3d3782d4e3aada557b44921f251
msgid "will load the following file:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:22
# e530b3a79f104cd68cd09c9b6db99c0a
msgid "Continuing the example above, if you are in the \"admins\" directory and make changes to the file charlie.json, then to upload that change to the |chef server| use the following command:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_knife.rst:28
# a6db508d948947158368251a04f17fd8
msgid "In some cases, such as when |knife| is not being run from the root directory for |chef|, the full path to the data bag item may be required. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:59
# f9275f4a3df54d42b689e3825b976418
msgid "Manually"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:4
# 14ab66b15b8a445ebd6dd5864be14fce
msgid "One or more data bags and data bag items can be created manually under the ``data_bags`` directory in the |chef| repository. Any method can be used to create the data bag folders and data bag item JSON files. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:10
# 868c73e7f7dd456b841e75a2af6d6a36
msgid "would create a data bag folder named \"admins\". The equivalent command for using |knife| is:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:16
# 37d4f431cc8b4ee1a6fa2b06b2ed6cd2
msgid "A data bag item can be created manually in the same way as the data bag, but by also specifying the file name for the data bag item (this example is using the Unix Visual Editor):"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_create_manual.rst:22
# c3d3794bdc6c4c908421c8fda944d62c
msgid "would create a data bag item named \"charlie.json\" under the \"admins\" sub-directory in the ``data_bags`` directory of the |chef| repository. The equivalent command for using |knife| is:"
msgstr ""

#: ../source/essentials_data_bags.rst:63
# 6b84ff6d831741d0a26a5355aaf0da55
msgid "Encrypting Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:4
# 5b7bb67b7f294a38b75d8ecd6561c164
msgid "The contents of a data bag can be encrypted."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:6
# 038205b029ac43509bd415c5fa78369e
msgid "An encrypted data bag is always written using |json| as the serialization format. |chef| and |knife| support reading encrypted data bag items in both |json| (default) and |yaml| (backup)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:7
# dd44ba0602e64aac865ee9cfaef0b397
msgid "Data is encrypted using a combination of |json|, |aes 256 cbc| (as defined by the ``openssl`` package in the |ruby standard library|), and |base64| encoding. This allows a data bag to store confidential information (such as a database password) or to be managed in a source control system (without plain-text data appearing in revision history)."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:8
# 4d1d4952c0dd4a72bd1b6174005cd360
msgid "The system uses shared-key encryption. An encrypted file can only be decrypted by a node or a user with the same shared-key. Only designated nodes are able to decrypt values stored in an encrypted data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:9
# d56a1391039a4cd8aa5463bec1a8585f
msgid "A recipe can load encrypted data as long as the shared secret is present in a file on the node or is accessible from a URI path."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption.rst:10
# c7e54974642044499c5b500edc4589ba
msgid "Only the values of a data bag item are decrypted; keys are still searchable. The values associated with the ``id`` key of a data bag item are not encrypted (because they are needed by |chef| when tracking the data bag item)."
msgstr ""

#: ../source/essentials_data_bags.rst:67
# 541d571ed67745f0bbe3ec82d5ec250b
msgid "Knife Options for Encryption"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:4
# e3369639a6b240e49fed7e6418a7e546
msgid "|knife| can encrypt and decrypt data when the ``knife data bag`` sub-command is run with the ``create``, ``edit``, ``from file``, or ``show`` arguments and the following options:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:10
# b0d76f2e443342e1a40722e20850da28
msgid "Option"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:11
# ba07c246be074c6d86e448be7a65b76e
msgid "Description"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:12
# e5d46ef992ac4c08aae9645b3918a79a
msgid "``--secret SECRET``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:13
# 7d6a8193b2be42afbe27b8e323772fa0
msgid "|secret|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:14
# 0516a6fbbf9241039f40863bb3c26e99
msgid "``--secret-file FILE``"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_knife_options.rst:15
# 87356d7257b6405daae85cba81490a4f
msgid "|secret-file|"
msgstr ""

#: ../source/essentials_data_bags.rst:71
# eb838a34b3184f0fb669b4641571eab0
msgid "Create an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:4
# 3cd6bd00787748b0b00a592ece664b5c
msgid "An encrypted data bag item can be created with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_encrypt.rst:10
# 7f6e78677970431390b13d41b1968a84
msgid "where \"passwords\" is the name of the data bag, \"mysql\" is the name of the data bag item, and \"/tmp/my_data_bag_key\" is the path to the location in which the file that contains the secret-key is located. |knife| will ask for user credentials before the encrypted data bag item is saved."
msgstr ""

#: ../source/essentials_data_bags.rst:75
# 8e80d5272bbc4239a1e7c44ed500d9cb
msgid "Verify that a data bag item is encrypted"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:4
# e66e5265beeb494d95f01ed22be06cac
msgid "When the contents of a data bag are encrypted, they will not be readable until they are decrypted. Encryption can be verified with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_verify.rst:10
# c1f4fd1d53974168991249cb2e4f1df4
msgid "where \"passwords\" is the name of the data bag and \"mysql\" is the name of the data bag item. This will return something similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:79
# f8892bb5bb7b44e288663cf155bb611a
msgid "Decrypt an encrypted data bag item"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:4
# c8c077bcd3c646a082118eea2ba951df
msgid "An encrypted data bag item can be decrypted with a |knife| command similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_decrypt.rst:10
# 6098619878ff4d22a0fe17466b6c4d51
msgid "that will return JSON output similar to:"
msgstr ""

#: ../source/essentials_data_bags.rst:83
# a4408a6cae3846b7a2ddf229acf1677f
msgid "Storing encryption keys on nodes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_store_on_nodes.rst:4
# f45817348cea493ca9400e6a3d3eca04
msgid "An encryption key can also be stored in an alternate file on the nodes that need it and specify the path location to the file inside an attribute; however, ``EncryptedDataBagItem.load`` expects to see the actual secret as the third argument, rather than a path to the secret file. In this case, you can use ``EncryptedDataBagItem.load_secret`` to slurp the secret file contents and then pass them:"
msgstr ""

#: ../source/essentials_data_bags.rst:87
#: ../source/essentials_data_bags.rst:123
# b188053b06b84c2ba4818392bd65b3a7
# e693f5ba3edd414c9b561c4f7a8af78f
msgid "Example"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:4
# 3a40850190414bafbd12e9444fe3ab9a
msgid "To demonstrate the use of encrypted data bags on a node, we'll start by copying the ``secret_key`` file to an example node using ``scp`` and moving it to ``/etc/chef/encrypted_data_bag_secret``:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:12
# f2a55e1cbc8d42db8c107ba331724f82
msgid "The ``knife bootstrap`` sub-command supports the ``encrypted_data_bag_secret`` setting in |knife rb|. You will want to add this line:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:18
# e011698b206b4aa982c8b13beb688025
msgid "And change ``/path/to/your/data_bag_key`` to the location of where the data bag key is located. When you run knife bootstrap afterwards it automatically adds this line to the |client rb| for the node you are bootstrapping and copies the key over."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:20
# 4409583163474a72b4cf93aecf90e103
msgid "Next, we'll create a recipe that will log the decrypted values for demonstration purposes (if these were real secrets, you would want to avoid logging them). Use |knife| and run the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:26
# 32aa63010f594ad5b558166088ebc6ed
msgid "Then, edit ``cookbooks/edb_demo/recipes/default.rb`` so that it contains the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:35
# f138871751684e519a23eec613d5bd91
msgid "Finally, upload the cookbook and run |chef client| on the node. You should see something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_encryption_example.rst:52
# c50e31a8f4914b38b98326a3e80c3b63
msgid "As you can see, the recipe was able to decrypt the values in the encrypted data bag. It did so by using the shared secret located in the default location of ``/etc/chef/encrypted_data_bag_secret``."
msgstr ""

#: ../source/essentials_data_bags.rst:91
# e9fbd694465241d98079deecc0f24d76
msgid "Use Data Bags in Recipes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:4
# 10054adf06bb4bc2862dc4fa023c7a4c
msgid "Data bags can be accessed by a recipe in the following ways:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:6
# e49bd5388076453ebf7ffd3a09aa81c2
msgid "Loaded by name when using the recipe DSL. Use this approach when a only single, known data bag item is required."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes.rst:7
# cec479418ce14387b51b2b1d9f01e27e
msgid "Accessed through the search indexes. Use this approach when more than one data bag item is required or when the contents of a data bag are looped through. The search indexes will bulk-load all of the data bag items, which will result in a lower overhead than if each data bag item were loaded by name."
msgstr ""

#: ../source/essentials_data_bags.rst:95
# 8cc380f65b304b6ca6f3019ca3f32640
msgid "Loading a Data Bag Item using the Recipe DSL"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:4
# 34f6c4802bbe4a7788a410d825ea4d02
msgid "The recipe DSL provides access to data bags and data bag items with the following methods:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:6
# d5d7b6cd6bec4ca6a1f6dac4b6c33dd8
msgid "``data_bag(bag)``, where ``bag`` is the name of the data bag."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:7
# e32fe585fb6340fcbefbf6f094760952
msgid "``data_bag_item('bag', 'item')``, where ``bag`` is the name of the data bag and ``item`` is the name of the data bag item."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:9
# 606ad253f79346e28b00181defcb388e
msgid "The ``data_bag`` method returns an array with a key for each of the data bag items that are found in the data bag. For example, a data bag named \"admins\" with a single data bag item named \"charlie\" could be loaded with:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:15
# 39753a4f523e4da1954c4ab8f851f123
msgid "to return this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:21
# 7cab50cbff324e3e83b3a9f30fe3c807
msgid "To load the contents of the data bag item named \"charlie\":"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_load_using_recipe_dsl.rst:27
# 72eded277c534cb68e4f51879e297e77
msgid "to return something like this:"
msgstr ""

#: ../source/essentials_data_bags.rst:99
# 56ec9a0f7ab4498a945d86faad268959
msgid "Creating and Editing Data Bag within a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:4
# 847dbf78e9584fe69698319a5019618c
msgid "Creating and editing the contents of a data bag or a data bag item from a recipe is not recommended. The recommended method of updating a data bag or a data bag item is to use |knife| and the ``knife data bag`` sub-command. If this action must be done from a recipe, please note the following:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:6
# 2b632270b3eb41c78aaa62b15d1d7b69
msgid "If two |chef client| operations concurrently attempt to update the contents of a data bag, the last-written attempt will be the operation to update the contents of the data bag. This situation can lead to data loss, so organizations should take steps to ensure that only one |chef client| is making updates to a data bag at a time."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:7
# 7ef5b094df124f9aa42c2594dc7ceeb9
msgid "Altering data bags from the node when using the open source |chef server| requires the node's API client to be granted admin privileges. In most cases, this is not advisable."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:9
# 6ac81dbb7ed34989b4070d4065ae7775
msgid "and then take steps to ensure that any subsequent actions are done carefully. The following examples show how a recipe can be used to create and edit the contents of a data bag or a data bag item using the ``Chef::DataBag`` and ``Chef::DataBagItem`` objects."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:11
# 325527ee5e834c1ebf3697f942979ed0
msgid "To create a data bag from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:19
# 3beca627aadc426db9a550f71ef209ed
msgid "To create a data bag item from a recipe:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_edit_within_recipe.rst:33
# 926d111613a14993a06d6a82ecdef252
msgid "To edit the contents of a data bag item from a recipe:"
msgstr ""

#: ../source/essentials_data_bags.rst:103
# f1d766e17edd4dd5b246d29239ab3bb3
msgid "Access Encrypted Data from a Recipe"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:4
# 41fa160bc08d4c138bab2acd523c95e4
msgid "A recipe can access encrypted data bag items as long as the recipe is running on a node that has access to the shared-key that is required to decrypt the data. A secret can be specified by using the ``Chef::EncryptedDataBagItem.load`` method. For example:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_access_encrypted_data.rst:11
# c490f04b659d469dad03a44d3fe766c8
msgid "where \"secret_key\" is the argument that specifies the location of the file that contains the encryption key. An encryption key can be stored in a file on the nodes that need it and then configured so that |chef| knows where to look using the ``Chef::Config[:encrypted_data_bag_secret]`` method, which defaults to |path encrypted data bag secret|. When the default location is used, the argument that specifies the secret key file location is assumed to be the default and does not need to be explicitly specified in the recipe. For example:"
msgstr ""

#: ../source/essentials_data_bags.rst:107
# a8d7c7123a184e178603f5dd8ea41a70
msgid "Create a user for each item in a data bag"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_recipes_create_users.rst:4
# b9df42f606d3408eaf5ae396da7232ef
msgid "|chef| can create users on systems based on the contents of a data bag. For example, a data bag named \"admins\" can contain a data bag item for each of the administrators that will manage the various systems that |chef| is maintaining. A recipe can load the data bag items and then create user accounts on the target system with code similar to the following:"
msgstr ""

#: ../source/essentials_data_bags.rst:111
# 444cae23e41a4dc6bd5cb9b6c13c406b
msgid "Using Search"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
#: ../../includes_search/includes_search_data_bag.rst:4
# 10d5a20928914068a1403ad906502eaa
# 0496d4b1cad945e1bf4991ba656ce62e
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
#: ../../includes_search/includes_search_data_bag.rst:10
# 12481eafed664eea816339e76b920371
# d7808b28143f44a3b5751a5206aad5bb
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
#: ../../includes_search/includes_search_data_bag.rst:16
# e5997245273044cbad0882082d7378d6
# 8d91bc3544144c3b88d1910e1bbed34e
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
#: ../../includes_search/includes_search_data_bag.rst:22
# c3f679927ac048e7addef08a33d0400f
# 79e2c38bc9dd48778276f9171a417091
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
#: ../../includes_search/includes_search_data_bag.rst:28
# 36c1c787c2204626aa6bd509771e504f
# 05ff7cf5494946f680c5a96cfa6b83d1
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
#: ../../includes_search/includes_search_data_bag.rst:34
# 1df4da68a78f44e49478fc3de32e3a92
# 6de29f5b5dcd4b14b90525faed770a99
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
#: ../../includes_search/includes_search_data_bag.rst:40
# 83ee8637356644b2bba4968df99d1ed1
# 904189ed96814c789ae66ebece812724
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
#: ../../includes_search/includes_search_data_bag.rst:51
# 03daed11695d42b4ab7f524fbd9d630d
# 56329074347b486387b2fc3521147ed9
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
#: ../../includes_search/includes_search_data_bag.rst:72
# 9f8c193476474b9ea3657a848381749c
# c52b07aeaa614859a13616cdf7bae80c
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""

#: ../source/essentials_data_bags.rst:115
# a2bbb0cc12c14eaea5f9282b8643596d
msgid "Search Syntax"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:4
# 5a5af73659374b4a81b722704d132b6b
msgid "In some situations, it may not be possible to know exactly which data bags (or data bag items) should be used. Or in other situations, loading all of the data in a data bag might be the desired result. Use the search index to find data that is stored in one or more data bags in the |chef| environment and use the various search patterns to fine-tune the search queries. Any data that is returned as the result of a search query can then be loaded by a recipe. Use the following syntax when searching for data in a data bag::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:8
# 35fb5de4870441a39113ffba5d89cfeb
msgid "For example, to find every admin in a data bag named \"admins\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:12
# 80167d00ffdb49799ce7d0acd3135785
msgid "Or, to search for an administrator with an ID of \"charlie\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:16
# 1c24aeb04b184a81ab83c5483b59742f
msgid "Or, to search for all administrators with a group ID of \"ops\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:20
# dc6a857846044e95bc7633207c0340b9
msgid "Or, to search for all administrators with an ID that begins with the letter \"c\"::"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_syntax.rst:24
# 3edf6d9889d04d9c8feec1a8bced66ee
msgid "Once returned, this data can be used as if it were a hash. For example::"
msgstr ""

#: ../source/essentials_data_bags.rst:119
# 09254e1d1190418cb9a9dd7a5fe8ed2b
msgid "Accessing Data Bags Using Search Indexes"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_search_example.rst:4
# 64a95d77cf6e450cbe2c636d94bd05c0
msgid "The following example shows how to use the search index to find all of the items in a data bag (called \"admins\" that stores the user data for each system administrator), add each data bag item to an array, ensure that each data bag item exists as a user resource, and then to create a security group to which each of the data bag items belongs."
msgstr ""

#: ../source/essentials_data_bags.rst:127
# da674d01c0bf42289d2025dcc875c902
msgid "Use Data Bags with Environments"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:5
# 64e0809da45645c5a273fbe5cb73a820
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:7
# e3659b842546414a8d1589cb149c6c39
msgid "A data bag that is storing a top-level key for an environment might look something like this:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:21
# 1a4f9b570e89459c94aced0ca66ff1c5
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to:"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_environments.rst:27
# e263e20a04f84210aaab16792b5041c5
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_data_bags.rst:131
# 40b9c826f61147dfa2ce908a6e47ce28
msgid "Use Data Bags with |chef solo|"
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:4
# 3e1aa3005d424723a05f5b5ec6350cda
msgid "|chef solo| can load data from a data bag as long as the contents of that data bag are accessible from a directory structure that exists on the same machine as |chef solo|. The location of this directory is configurable using the ``data_bag_path`` option in the |solo rb| file. The name of each sub-directory corresponds to a data bag and each JSON file within a sub-directory corresponds to a data bag item. Search is not available in recipes when they are run with |chef solo|; use the ``data_bag()`` and ``data_bag_item()`` functions to access data bags and data bag items."
msgstr ""

#: ../../includes_data_bag/includes_data_bag_chef_solo.rst:6
# b9a36dd213e04fb1be7c11328cee8df3
msgid "Use the ``chef-solo-search`` cookbook library (developed by |opscode| community member \"edelight\" and available from |github|) to add data bag search capabilities to a |chef solo| environment: https://github.com/edelight/chef-solo-search."
msgstr ""


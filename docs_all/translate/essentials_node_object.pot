# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-07 18:23\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_node_object.rst:3
# d4d87c8176f04376b38b285a0917d83d
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 527901e485dd4e73acc9099df9201e5a
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The run-list and node attributes comprise the node object, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/essentials_node_object.rst:38
# 6ae7a1ab62b748699281533d214a3094
msgid "Node Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 3b1fe7541b104999a8acb33b791cce66
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules that are defined for each attribute. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_object_set.rst:4
# 943244e272ff45069f4eacc8334df899
msgid "Attributes for node objects can be set by cookbooks (and recipes), environments, roles, and by the node itself. When a node attribute is set from a recipe, use the ``node.set`` method:"
msgstr ""

#: ../../includes_node/includes_node_object_set.rst:11
# 4ee2617d86e141b7929a5fc5e9977c44
msgid "This approach is most useful when a value needs to be calculated or when data needs to be stored on the node so that it persists for the next |chef| run."
msgstr ""

#: ../source/essentials_node_object.rst:44
# 5be993435f814708906fb432422df4f9
msgid "Attribute Types"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:4
# 42f696badadf46d19ec0cd6a955c9120
msgid "There are four types of attributes:"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:10
# 5e95b11218814be2abaf5283a06466e6
msgid "Attribute Type"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:11
# 19641287b37c4918b9364e156621c42a
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:12
# 1e21e37c2faa4f70b8e2d5ddd873684f
msgid "``default``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:13
# 21b372edc82f44398aa5ab6b60a98b2b
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses default attributes whenever possible."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:14
# 8d076b321a4248819578ebffdfb25f2f
msgid "``normal``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:15
# e2313e9a7d9b40b38714a913211799e7
msgid "A normal attribute is an attribute that persists on the target system. A normal attribute is never reset during a |chef| run. A normal attribute has a higher attribute precedence than a default attribute."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:16
# 86abdcb489f047e38fdb97acabd57307
msgid "``override``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:17
# f160df2ed9b04874be4ca5beedc99245
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs. A cookbook should be authored so that it uses override attributes for role-specific or node-specific values when required."
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:18
# ba7e55eda92f4207bd27be469bce3bd0
msgid "``automatic``"
msgstr ""

#: ../../includes_node/includes_node_attribute_type.rst:19
# 4f6c7fa6bfd24c6f83c4f6529aa92e4b
msgid "An automatic attribute contains data that is automatically generated by |ohai| during every |chef| run (all previous values are overwritten by the newly generated values). An automatic attribute cannot be modified. An automatic attribute has the highest attribute precedence. An automatic attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_node_object.rst:48
# 36af62bd01da4a5b8b16d7b43a9d22a0
msgid "Attribute Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 3b1bcd1324334b0ba9b6f3cbfec011c5
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# ed1bca1db37b493dbc9b7992b201b1dd
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# e9ecea4fcafb4c619f70022a8e6ed977
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 37319b9cd0d744fe98495cbf76278a68
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 2498ba6886224a349ed893ed1857da08
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# c65078eed66545b69bc2982e30419eca
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 7402afdc92224af68979be4c2ecf1755
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# c3452e443ad948099edd9e3c066a10b0
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# a4e967148dec4d46b2a3e5a363283553
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 5e098fb569f241f98a8ae921b22b7c05
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 2816c3d303b440a1bccd7523a1c00cf8
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 979dc1a843aa493a831f58d424d3126a
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_node_object.rst:52
# fbeb97c39b6341edb9a102e2f72e0a0a
msgid "Attribute Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 5e9e84d066c14cbe8a7efd74187ecec5
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_node_object.rst:56
# b17cb7c7bda54db79e598a8610636b13
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# fc380a096e4e40cd9bbabd0f3929e33c
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_node_object.rst:60
# 9006aef079514e1da2060bf0190a787f
msgid "Attribute Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 4b209c2e526b48cbbd1e306eac96a202
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 6ef569a40d7b4434a1de0e0c74abc18b
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_node_object.rst:64
# 65d1c8563c8c42dc93ebeb70ab08a098
msgid "Deep Merging of Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:4
# e450cc8054c6419786c48a80c4fc17cf
msgid "Attributes are typically stored in cookbooks and recipes, roles, and environments. These attributes are rolled-up to the node level during a |chef| run. For example, a recipe can store attributes using a multi-level hash or array; a group of attributes for web servers might be:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:19
# 0d2b189b4ed9462ab23937e4911a9a1f
msgid "But what if all of the web servers are not the same? What if some of the web servers required a single attribute to have a different value? You could store these settings in two locations, once just like the preceding example and once just like the following:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:34
# f28d315242044fc89eabdfa364acbd18
msgid "But that is not very efficient, especially because most of them are identical. The deep merge capabilities of |chef| allows attributes to be layered across recipes and cookbooks, roles, and environments. This allows an attribute to be reused across nodes, making use of default attributes set at the cookbook level, but also providing a way for certain attributes (with a higher attribute precedence) to be applied only when they are supposed to be. For example, a role named ``baseline.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:53
# 8b8f69237bf347539071b1517fe826ae
msgid "and then a role named ``web.rb``:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:69
# 8935dbafd13f44fb8fdd0df4ea8487a4
msgid "Both of these files are similar. They share the same structure. When an attribute is of the same type of data, such as  a hash or an array, the contents are merged. This is true even with different levels of precedence, such as default and override attributes. If the attribute is of a different data type, it is overwritten at higher levels of precedence."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:71
# 5e0eb7501db844f9873e0d6f6e614844
msgid "For example, the ``web.rb`` references the ``baseline.rb`` role. The ``web.rb`` file only provides a value for one attribute: ``:startservers``. When |chef| compares these attributes, the deep merge feature will ensure that ``:startservers`` (and its value of ``30``) will be applied to any node for which the ``web.rb`` attribute structure should be applied."
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:73
# 156e4ec5c9d34befa6c06e4bf3b32b41
msgid "This approach will allow a recipe like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:80
# 5e7c2fd951a84d81bd6438346cb39076
msgid "and a ``run_list`` like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:89
# e964c6bf06284e92a2064af76bd4ca4a
msgid "to produce results like this:"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge.rst:103
# 1de2b20e243a4263b844150d027761d1
msgid "Even though the ``web.rb`` file does not contain attributes and values for ``minspareservers``, ``maxspareservers``, ``serverlimit``, ``maxclients``, and ``maxrequestsperchild``, the deep merge capabilities pulled them in."
msgstr ""

#: ../source/essentials_node_object.rst:67
# 590bd20b4a124c8cb84159a3f4e27ea6
msgid "The following sections show how the logic works for using deep merge to perform substitutions and additions of attributes."
msgstr ""

#: ../source/essentials_node_object.rst:70
# 10026826f8c94de789b38e48ca8cd7fb
msgid "Substitution"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:4
# 31b6440664d843d69ce4ceebe28f2966
msgid "The following examples show how the logic works for substituting an existing string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:12
# a88a9f0ebbd94936b029273e8a5e93eb
msgid "For substituting an existing boolean using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:20
# d6950c44803b412d9f1f766707ac5900
msgid "For substituting an array with a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_substitute.rst:28
# 370a86607fa24b4babe5d567accd8cf0
msgid "When items cannot be merged through substitution, the original data is overwritten."
msgstr ""

#: ../source/essentials_node_object.rst:74
# 3d5c1808430b4b5286a2e96fde926d21
msgid "Addition"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:4
# 8c5129f885164b28922bef1cab0ff45f
msgid "The following examples show how the logic works for adding a string using a hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:12
# e2470fbd59ce4b8b8125d44e430746ad
msgid "For adding a string using an array::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:20
# a301e469bd34436fb638ea42bf282294
msgid "For adding a string using a multi-level hash::"
msgstr ""

#: ../../includes_node/includes_node_attribute_deep_merge_add.rst:28
# 417703ffa7fe40689090b91544c79629
msgid "For adding a string using a multi-level array::"
msgstr ""

#: ../source/essentials_node_object.rst:78
# 7cd1980365e24ef59d2209a4a036d738
msgid "Run-lists"
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 0f1a33c6b56e4c74a2a0855e0731dc94
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# c2e0eeee21be418da7615bd49c463e03
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 70311828c517442a962368a947c6ef74
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 57e659e4ec85437c82e23b1c87736fe2
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 3b771abcc523428cb875c8c6cfe7f06f
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 2d633863dd604954a192d8fd7fa7476d
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# d49d8f00298d45c99acd7ddd258efc5c
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 2c0d973332094715ad7521745ff1def9
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# a3895f7ded9e45eab194d370c06c6a0a
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# eefc165f3c9f4625a254cf816eea7d36
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# e1fa2c643a84423d857186feb25920ed
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# d1c0e7982792436f883078deb5c24824
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 179ddb6497dd40e189fe427baa9d1e96
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""


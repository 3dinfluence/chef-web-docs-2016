# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-23 17:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_server.rst:34
# b988e260dc0a49e3aea2a285e032762d
msgid "Install the Chef Server"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 04096b17aa8e4faf818e5775a56637cf
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# fe388fc8294b4e78a249f251f1dca9af
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:4
# 34616ddaf075403ea78b55de0e54501f
msgid "The |omnibus installer| is used to set up a |chef server|. The |omnibus installer| separates the installation of the |chef server| from the configuration. The |omnibus installer| uses a single command to install the |chef server| and all of its dependencies, including |erlang|, |ruby|, |rabbitmq|, |nginx|, and |postgresql|. The |omnibus installer| puts everything into a unique directory (/etc/chef-server/) so that the |chef server| will not interfere with other applications that may be running on the target machine. Once installed, the |chef server| a single configuration step."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:6
# 608b45b1e45e4ae38615172961eea5e3
msgid "|opscode| has created a small project called ``chef-server-demo`` that will enable the creation of a self-contained |chef server| within a |virtualbox| virtual machine on your system. This is the best way to install and preview the new version of the |chef server|. Download the ``chef-server-demo`` from here: https://github.com/opscode/chef-server-demo."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:9
# 5128462baf8f49a08e8dc913f34e0af4
msgid "System Requirements"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:10
# fea32cc3bd7b46a08a6f58eecf3afc8e
msgid "The |chef server| provides an |omnibus installer| for the following operating systems and versions:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:12
# 89866c90a97e49648b7cb5de59ec6dfd
msgid "|centos| 5 (64-bit only), 6 (32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:13
# 6eb318d88b7d41c2962fb972d1341a45
msgid "|ubuntu| 10.04, 11.04, 12.04 (both 32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:16
# 399d545b6fb944fb979af83bae69f3a0
msgid "Chef 11 Server Cookbook"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:18
# 979b93bb825a4b49a1ad08878834761a
msgid "The easiest way to retrieve the appropriate alpha build for your system is to use the recently updated chef-server cookbook."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:20
# 033f3cf07e3f46e885eb509dd9f2be06
msgid "The default recipe in this cookbook:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:22
# a1b4f22b8d9a4be0b0ab280fff287fb4
msgid "Retrieves and installs the appropriate platform-specific chef-server Omnibus package."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:23
# f3c47905e277404b8b519dc86052b374
msgid "Creates the initial /etc/chef-server/chef-server.rb file."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:24
# 1e317fe3564e479080a0080d2b20022d
msgid "Performs initial system configuration via chef-server-ctl reconfigure."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:26
# 15c519044a664c5ab5f1304e5f776902
msgid "Omnibus package selection is done based on the following logic:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:28
# 90c172a8317c41ec8afb904a04b6c1c6
msgid "If a value has been provided, the chef-server Omnibus package is fetched from ``node['chef-server']['package_file']``."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:30
# 781e2be47628448c932051b1e47c3050
msgid "If ``node['chef-server']['package_file']`` is unset (ie nil or empty string), the candidate package is retrieved from the Omnitruck REST API based on ``node['chef-server']['version']`` AND the node platform, ``platform_version`` and architecture. By default the latest package is installed."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:33
# 4d313301b45043d8b7bac02c43d4c428
msgid "Vagrant-based Self Contained Demo Environment"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:35
# da765657849949108d5a08d99c728650
msgid "The easiest way to take Chef 11 Server for a spin is using the Berksfile and Vagrantfile the chef-server cookbook. The only requirements for standing up a virtualized Chef Server are Ruby (>= 1.9.1), Rubygems (>= 1.3.6), and VirtualBox:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:45
# d519580e7de746ad9f528f69433cf37f
msgid "If you need help installing any of the prerequisites take a look at Jamie Winsor's excellent blog post on the subject."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:47
# fce84795ee274c88b8700c4546c252f6
msgid "You can easily SSH into the running VM using the vagrant ssh command. The VM can easily be stopped and deleted with the vagrant destroy command. Please see the official Vagrant documentation for a more in depth explanation of available commands."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:49
# 21347e44829141c4a4faa722a73a7967
msgid "The running Chef-Server components are accessible from the host machine using the following URLs:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:51
# 81277caaba76483aa271a19376a002e2
msgid "Web UI: https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:52
# 048a78084a334d8dade1bd700c610007
msgid "Version Manifest: https://33.33.33.10/version"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:53
# 4fefca1689764636b8a0582b284269c4
msgid "Chef Server API (routing requires X-Ops-Userid HTTP header being properly set): https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:57
# a9b0e01a618248788f3cc0baec78e987
msgid "Reporting Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:59
# b9aac813c6774c80b5bbf16db22a6cc6
msgid "If you find a bug in a Chef 11 Server Alpha, please open a ticket in the tickets.opscode.com with the following fields set so that it can be found and addressed before release:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:61
# ed59dc406bbf4b81911e05c14eb06912
msgid "Project: Chef"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:62
# d016e8f701d24a7c91380a5e57cc7fd5
msgid "Component: Chef Server"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:63
# d656a310f57642deb962d12484f92482
msgid "Affects Versions: 11.0.0"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:66
# 22d3a7ec89c2459db7a38cb0776c6626
msgid "Known Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:68
# eac233b6838843268c8d92f2e9a5cb9d
msgid "``knife client reregister`` does not work.  The current workaround for this is to delete and then re-create the client."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_server.rst:34
# 7ac0427dd21f403e805b83f0b221d2a0
msgid "Install the Chef Server"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 390105679b5a494ca41fe867470297a8
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 3ee4345d74e342e0bf402f6429c106a1
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:4
# 6d065851228a49788c1ab30f969ea1ce
msgid "The |omnibus installer| is used to set up a |chef server|. The |omnibus installer| separates the installation of the |chef server| from the configuration. The |omnibus installer| uses a single command to install the |chef server| and all of its dependencies, including |erlang|, |ruby|, |rabbitmq|, |nginx|, and |postgresql|. The |omnibus installer| puts everything into a unique directory (/etc/chef-server/) so that the |chef server| will not interfere with other applications that may be running on the target machine. Once installed, the |chef server| a single configuration step."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:6
# 657019acaf0448ca91a7f7131de31dea
msgid "|opscode| has created a small project called ``chef-server-demo`` that will enable the creation of a self-contained |chef server| within a |virtualbox| virtual machine on your system. This is the best way to install and preview the new version of the |chef server|. Download the ``chef-server-demo`` from here: https://github.com/opscode/chef-server-demo."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:9
# 237f57cec8cd498b8023874f05e4dcb7
msgid "System Requirements"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:10
# 98fc4020bc004f0893737279fc46e6f6
msgid "The |chef server| provides an |omnibus installer| for the following operating systems and versions:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:12
# f569999b574343dd9d92023f8136aaa2
msgid "|centos| 5 (64-bit only), 6 (32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:13
# 61aa91584c4b4cd3b4018acc0a1b1eb7
msgid "|ubuntu| 10.04, 11.04, 12.04 (both 32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:16
# 5ec859d2e93a45458304610269272ce0
msgid "Chef 11 Server Cookbook"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:18
# 6dc376fd1eeb4026ade41cfb41d40dc1
msgid "The easiest way to retrieve the appropriate alpha build for your system is to use the recently updated chef-server cookbook."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:20
# 02ba08322bbc48de88c6842e9b5c1211
msgid "The default recipe in this cookbook:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:22
# 0c5b054ef7d84b1aa25797fcd3fd38ea
msgid "Retrieves and installs the appropriate platform-specific chef-server Omnibus package."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:23
# 2c3cb0ce239a407da3c06138276710e5
msgid "Creates the initial /etc/chef-server/chef-server.rb file."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:24
# 04a3997621964c30892feb3cc02d4fe4
msgid "Performs initial system configuration via chef-server-ctl reconfigure."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:26
# 4a61af3a4d494a12adf9eaf3810ab769
msgid "Omnibus package selection is done based on the following logic:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:28
# 35a6cf7d16f645f18ae28275b3db3968
msgid "If a value has been provided, the chef-server Omnibus package is fetched from ``node['chef-server']['package_file']``."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:30
# e15907eb6b55452ca61c1d6b673b2b25
msgid "If ``node['chef-server']['package_file']`` is unset (ie nil or empty string), the candidate package is retrieved from the Omnitruck REST API based on ``node['chef-server']['version']`` AND the node platform, ``platform_version`` and architecture. By default the latest package is installed."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:33
# 75fc3b5481cc469f8717dea81eeb6d32
msgid "Vagrant-based Self Contained Demo Environment"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:35
# bc5f976182594e549256a51543750bed
msgid "The easiest way to take Chef 11 Server for a spin is using the Berksfile and Vagrantfile the chef-server cookbook. The only requirements for standing up a virtualized Chef Server are Ruby (>= 1.9.1), Rubygems (>= 1.3.6), and VirtualBox:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:45
# 91e74492bad24f4b8445b086f1fee874
msgid "If you need help installing any of the prerequisites take a look at Jamie Winsor's excellent blog post on the subject."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:47
# bf5bcb2a339446f5b7d0febcb1c4cdb3
msgid "You can easily SSH into the running VM using the vagrant ssh command. The VM can easily be stopped and deleted with the vagrant destroy command. Please see the official Vagrant documentation for a more in depth explanation of available commands."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:49
# 18431f22bd7248f0a2fbd4a601a42ab3
msgid "The running Chef-Server components are accessible from the host machine using the following URLs:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:51
# 03a3ecb2c7a94859a9738053ce6f4d80
msgid "Web UI: https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:52
# 7128b7c01e5c40d78cd66fcaf812dd87
msgid "Version Manifest: https://33.33.33.10/version"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:53
# e37b2d9b40be4f6ebbac98f3e139a783
msgid "Chef Server API (routing requires X-Ops-Userid HTTP header being properly set): https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:57
# 96e20ba0e0a9493e806f598e088e1482
msgid "Reporting Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:59
# a7785d6feeec41a19f1096c08e5bfb7a
msgid "If you find a bug in a Chef 11 Server Alpha, please open a ticket in the tickets.opscode.com with the following fields set so that it can be found and addressed before release:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:61
# 8585ffeeba664f748636e55b2277fef7
msgid "Project: Chef"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:62
# bb99d2c4d86a49fcb1c7d6cd8f8b721d
msgid "Component: Chef Server"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:63
# 09609b866df1499fa50b25be4f1204aa
msgid "Affects Versions: 11.0.0"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:66
# 8a30ac8910e941b39f079f4521ba1138
msgid "Known Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:68
# 8084433684f747d688c69749e75588b6
msgid "``knife client reregister`` does not work.  The current workaround for this is to delete and then re-create the client."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_server.rst:34
# f394fcfc1b1e4adf93dafbe8cac6a0ad
msgid "Install the Chef Server"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 13c63015da0c4419bd1b8e6f38581dd2
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 755d53e0ccf64e93ad9ccb641a8faa68
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:4
# f476b82fa3c34bdbb115be6cf3b081dd
msgid "The |omnibus installer| is used to set up a |chef server|. The |omnibus installer| separates the installation of the |chef server| from the configuration. The |omnibus installer| uses a single command to install the |chef server| and all of its dependencies, including |erlang|, |ruby|, |rabbitmq|, |nginx|, and |postgresql|. The |omnibus installer| puts everything into a unique directory (/etc/chef-server/) so that the |chef server| will not interfere with other applications that may be running on the target machine. Once installed, the |chef server| a single configuration step."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:6
# cc4341a1e2d641259a8e7020245b87b3
msgid "|opscode| has created a small project called ``chef-server-demo`` that will enable the creation of a self-contained |chef server| within a |virtualbox| virtual machine on your system. This is the best way to install and preview the new version of the |chef server|. Download the ``chef-server-demo`` from here: https://github.com/opscode/chef-server-demo."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:9
# 8bb41b266a904658be0517f630c18cd5
msgid "System Requirements"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:10
# 27e22fe2f8a74732a6a1e0947791bf75
msgid "The |chef server| provides an |omnibus installer| for the following operating systems and versions:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:12
# d4af0547d35c459b8d775e30dc68cc05
msgid "|centos| 5 (64-bit only), 6 (32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:13
# 240adac0264b48f495f7166b4d5b4a31
msgid "|ubuntu| 10.04, 11.04, 12.04 (both 32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:16
# b1ae31a0fbb4437faef0301805dbbea4
msgid "Chef 11 Server Cookbook"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:18
# f5ec4c0239a847ccb6748544075347ea
msgid "The easiest way to retrieve the appropriate alpha build for your system is to use the recently updated chef-server cookbook."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:20
# 7a7d3a1fed1645ed9d9ade123a5a7955
msgid "The default recipe in this cookbook:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:22
# 8986d60bf2da4313991c39d9384f4f31
msgid "Retrieves and installs the appropriate platform-specific chef-server Omnibus package."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:23
# 59046c8e493f4d2bb91db0aff995cc5e
msgid "Creates the initial /etc/chef-server/chef-server.rb file."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:24
# fbda7b47b866474ebbe48c213015e42e
msgid "Performs initial system configuration via chef-server-ctl reconfigure."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:26
# ab56047444fd4ed9a6db7798cc9d8855
msgid "Omnibus package selection is done based on the following logic:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:28
# fbda6ce5c52e4710ac59dc2f86f1865f
msgid "If a value has been provided, the chef-server Omnibus package is fetched from ``node['chef-server']['package_file']``."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:30
# 8c8037156e004bce9bebfc4b2b34f3cf
msgid "If ``node['chef-server']['package_file']`` is unset (ie nil or empty string), the candidate package is retrieved from the Omnitruck REST API based on ``node['chef-server']['version']`` AND the node platform, ``platform_version`` and architecture. By default the latest package is installed."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:33
# 3b7b9f4b5b6941db94b872f40957e94e
msgid "Vagrant-based Self Contained Demo Environment"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:35
# d98f1d886e434e1b8bc09c2756d7c92f
msgid "The easiest way to take Chef 11 Server for a spin is using the Berksfile and Vagrantfile the chef-server cookbook. The only requirements for standing up a virtualized Chef Server are Ruby (>= 1.9.1), Rubygems (>= 1.3.6), and VirtualBox:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:45
# 36c096e3031a4a3b87acf4bbd36ba54b
msgid "If you need help installing any of the prerequisites take a look at Jamie Winsor's excellent blog post on the subject."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:47
# 06962511b83e4f3fae6f1b7aa28d7722
msgid "You can easily SSH into the running VM using the vagrant ssh command. The VM can easily be stopped and deleted with the vagrant destroy command. Please see the official Vagrant documentation for a more in depth explanation of available commands."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:49
# d3b32a3e20b64d4fad26d29f9cd852f0
msgid "The running Chef-Server components are accessible from the host machine using the following URLs:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:51
# 39c5501b31b34c03b851e495f669ef82
msgid "Web UI: https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:52
# 91ee1060f279490281b8a920ed1aa557
msgid "Version Manifest: https://33.33.33.10/version"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:53
# 4524c2b371a342bbb371374db896d86e
msgid "Chef Server API (routing requires X-Ops-Userid HTTP header being properly set): https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:57
# bb794922e40d4cc29afb461c51cd2043
msgid "Reporting Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:59
# e40a5023ff494817ae0c4a236cac27f9
msgid "If you find a bug in a Chef 11 Server Alpha, please open a ticket in the tickets.opscode.com with the following fields set so that it can be found and addressed before release:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:61
# a7ee57cb73dd400a85221a582b9d09af
msgid "Project: Chef"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:62
# 422df2c46f6f4d2e8d7b25f0ba96389a
msgid "Component: Chef Server"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:63
# febc5b17ead54c06a0f99abad9d37079
msgid "Affects Versions: 11.0.0"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:66
# ffe4b5cc53ee4cfeb51e7c5a0f1add1b
msgid "Known Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:68
# 44b99818a7a5424f81f17338aa9a5ebf
msgid "``knife client reregister`` does not work.  The current workaround for this is to delete and then re-create the client."
msgstr ""


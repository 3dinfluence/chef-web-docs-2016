# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-22 13:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/install_server.rst:34
# 1396ac8984ee475fbfcf07dacb4de21d
msgid "Install the Chef Server"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 6b591d891a8f4e2f9cdd336773d00b37
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 6d7001482115452f82e95677a050d802
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:4
# b1205fe74dc7471bb3c759e7d2ec22cb
msgid "The |omnibus installer| is used to set up a |chef server|. The |omnibus installer| separates the installation of the |chef server| from the configuration. The |omnibus installer| uses a single command to install the |chef server| and all of its dependencies, including |erlang|, |ruby|, |rabbitmq|, |nginx|, and |postgresql|. The |omnibus installer| puts everything into a unique directory (/etc/chef-server/) so that the |chef server| will not interfere with other applications that may be running on the target machine. Once installed, the |chef server| a single configuration step."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:6
# 8d372735b3ee4c619fccf24f79f91ffd
msgid "|opscode| has created a small project called ``chef-server-demo`` that will enable the creation of a self-contained |chef server| within a |virtualbox| virtual machine on your system. This is the best way to install and preview the new version of the |chef server|. Download the ``chef-server-demo`` from here: https://github.com/opscode/chef-server-demo."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:9
# efba348c774d48249efb46803bf6e884
msgid "System Requirements"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:10
# da6f81897d374101a9a729ba65002888
msgid "The |chef server| provides an |omnibus installer| for the following operating systems and versions:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:12
# d207e974b6c9405fae20ead877bcda44
msgid "|centos| 5 (64-bit only), 6 (32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:13
# da161397e80f41fbb2b325575b5301df
msgid "|ubuntu| 10.04, 11.04, 12.04 (both 32-bit and 64-bit versions)"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:16
# f7f834c772e648e2bb0415e22f3cc6d7
msgid "Chef 11 Server Cookbook"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:18
# 5c70d1639784428ca7a7bfa43c55ff93
msgid "The easiest way to retrieve the appropriate alpha build for your system is to use the recently updated chef-server cookbook."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:20
# 30d5ea1f579542fda79e708f1a9c0c62
msgid "The default recipe in this cookbook:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:22
# 04563db070c24d25995901fa78f5f1e5
msgid "Retrieves and installs the appropriate platform-specific chef-server Omnibus package."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:23
# ac89f575898e4bcaa4e2a31ac95f6877
msgid "Creates the initial /etc/chef-server/chef-server.rb file."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:24
# 743072dc5b5745e2a9802b93157065e9
msgid "Performs initial system configuration via chef-server-ctl reconfigure."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:26
# def49456beae4145b744b421931be957
msgid "Omnibus package selection is done based on the following logic:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:28
# 4481435cd610493b90d78a6a32e0ed42
msgid "If a value has been provided, the chef-server Omnibus package is fetched from ``node['chef-server']['package_file']``."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:30
# 7e77a2c0e0014f62a678533424206ddd
msgid "If ``node['chef-server']['package_file']`` is unset (ie nil or empty string), the candidate package is retrieved from the Omnitruck REST API based on ``node['chef-server']['version']`` AND the node platform, ``platform_version`` and architecture. By default the latest package is installed."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:33
# 8521e244e185412eb2aa8b7f9c4f9065
msgid "Vagrant-based Self Contained Demo Environment"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:35
# 85376b0378fc4162a284880e98404ede
msgid "The easiest way to take Chef 11 Server for a spin is using the Berksfile and Vagrantfile the chef-server cookbook. The only requirements for standing up a virtualized Chef Server are Ruby (>= 1.9.1), Rubygems (>= 1.3.6), and VirtualBox:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:45
# caf6649aa1b847adaab8c7499c6db539
msgid "If you need help installing any of the prerequisites take a look at Jamie Winsor's excellent blog post on the subject."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:47
# 46dea1bec56d4a79902ac455b3f93b6f
msgid "You can easily SSH into the running VM using the vagrant ssh command. The VM can easily be stopped and deleted with the vagrant destroy command. Please see the official Vagrant documentation for a more in depth explanation of available commands."
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:49
# 2fae187815834be5bbd199aea2554530
msgid "The running Chef-Server components are accessible from the host machine using the following URLs:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:51
# b422953d95c5415aa8f7717724dbbdb8
msgid "Web UI: https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:52
# d402dc7072724aa9ab0ffcdaf8e214a0
msgid "Version Manifest: https://33.33.33.10/version"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:53
# 760d909f8928406abdebf6e0a9d7e667
msgid "Chef Server API (routing requires X-Ops-Userid HTTP header being properly set): https://33.33.33.10/"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:57
# 59902a9f6f4c4457acae679f849ed0c7
msgid "Reporting Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:59
# 08ae621ba9e74e3fa108c1d4f155f12d
msgid "If you find a bug in a Chef 11 Server Alpha, please open a ticket in the tickets.opscode.com with the following fields set so that it can be found and addressed before release:"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:61
# 2c23371aee4a4cf8aaa0ffb60e4d34b1
msgid "Project: Chef"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:62
# 851c2e033040406f8b79b73823ec53e8
msgid "Component: Chef Server"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:63
# 2d36efd68aab455a88175abc3c91d9fd
msgid "Affects Versions: 11.0.0"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:66
# 4afc0942788b439ca14a9e3d92e78dfc
msgid "Known Issues"
msgstr ""

#: ../../includes_install/includes_install_omnibus_server.rst:68
# d0e6b25ff3694fe2ab77b4038e10fff4
msgid "``knife client reregister`` does not work.  The current workaround for this is to delete and then re-create the client."
msgstr ""


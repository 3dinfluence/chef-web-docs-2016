# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-09 17:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:34
# 2234b188e8ed4025a3f09c5773980b89
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 9316fc73820d476fa17bcb0c746eb34c
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:38
# cf7659c5992c4891a05294b7b25a9670
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:41
# be3c24db2a2749f8be91dba33b82f8ef
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 88d968384a944162a018aa2a88562201
msgid "|search index| |chef| builds the following search indexes:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 1ac374f11f1b4f1188583a21a5c77ab9
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:21
# 609a68c45754484998d730bc4c5a9837
# cdbc5a9decbd478ca039a862e989e0ee
# ddc4a49eaf9942ebae1c9575900b4c89
# f14ee56888bb43c5a69af0ca2303293d
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# 68528b67d6444c1a9ef105b447cf496e
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 1e2e9fb4129f4a86a623f1f8a47036f5
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 28f727fd4e1e4627a13adb804cf48a1f
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 54324a34b3684db69056cb2324867fd6
msgid "|data bag description| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 65d0fe0645f0463997eaaaaca50613d9
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 5b6e0d1c010949e79475cd58c723bc98
msgid "|environment description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 428897fd0ed8453f890a17bf6956fcce
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# a19717da13744a7b9977ebb0d49a1655
msgid "|node description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# d4ea258b0e754541842654715ff9b152
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 29184b1df29d47669aa4da4123731bc6
msgid "|role description|"
msgstr ""

#: ../source/essentials_search.rst:45
# a45fa56021294b048c7d641e7e0c79be
msgid "Using Knife to Search"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 9224a9a0d17f45e1b3968b37755fab51
msgid "|knife search|"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:8
# f3fa9f2d63414413afc242baf6c83146
msgid "The sub-command has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:12
# 9a2111008d4d4ecf8efc9ced30807d01
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and SEARCH_QUERY is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:6
# b131562cdc7e4dfb8acdc1a647e39de9
msgid "For example, to search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:12
#: ../../includes_knife/includes_knife_search_examples.rst:32
#: ../../steps/step_search_boolean_not.rst:9
#: ../../steps/step_search_boolean_or.rst:9
#: ../../steps/step_search_boolean_and.rst:9
#: ../../steps/step_search_boolean_and.rst:31
# ff5bec7369ff4c79b89474d7150acb78
# ab820c088a774c3aa26397c24a538677
# 99c9abe1fa874b878e5cae958d8c5fc4
# f8c60277bce943dd97ec9575fe9f0f73
# da95c89deda447e78412746254db8df0
# 9022f5b04cf941ee96f8a4bb8d75a207
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:26
# 516bd01ee1504439ab949d6228375e55
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:50
# 000e6231879148adbaea934e78564d3f
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:56
# cb562201d09f42ac998cf0606779fc08
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/essentials_search.rst:51
# e0c483cbef634f7b8a27bd30aefeb48c
msgid "Search Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# b9bfd3d0a7cd4e1780bcce55ce25a7d5
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 63ff396a19004b9a86c840334dc4ba3d
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:55
# 9bce2eb093884a81a42c5c0d6968eaed
msgid "Keys (or Field Names)"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# d8c9d260e200436da6c57b18349fb35e
msgid "|search key| Any key that exists in any JSON description for any role, node, |chef client|, environment, or data bag can be searched for. To search for the available keys for a particular object, use the ``show`` sub-commands for any of the following |knife| sub-commands: ``client``, ``data bag``, ``environment``, ``node``, or ``role``."
msgstr ""

#: ../../steps/step_search_key_name.rst:3
# 000bf7bd72dd48a1ab4312f0e19c1bab
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../steps/step_search_key_name.rst:9
# 010f4bdb88444186a54bbde8de2ca112
msgid "to return a full JSON description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../steps/step_search_key_wildcard_question_mark.rst:3
# f5a707860fb2455fb0e24a7f38d8f129
msgid "To use a question mark(\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_wildcard_asterisk.rst:3
# 9ba8161301964746ab87c46c20734435
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:65
# 930c60cf002e43e9be5c9990d8f09879
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# ad54390da9d647aebe32c3879a1fe153
msgid "A nested key is a key that appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a JSON structure, |chef| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 32c265af6d294b6b9a124f0f31dd9ace
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 270371b195e14457ac8d581092c7fa70
msgid "Consider the following snippet of JSON data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# dcb4e1deb4594568adf4cc568b6e6fb6
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# ab377748901c4b649e68e148af3470b0
# c3a92b6736de4888b5aca9ff032a3948
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# 4910da515ca44cf6ada4244e364bdd52
# ed6f58db82b143d6a3f57184bb56505a
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 788338a6c8ed4e2eb85d027a3283ec90
msgid "This data is also flattened into various compound keys, which follow the same pattern as the JSON hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 6e8c638e658c490cb0a124d6596b728a
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the JSON data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 0f48849f7dff479ebbbe1d65872ffd58
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to::"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:122
# 6bdbc276081a4f07b513c191bf5f8574
msgid "This query will search within the ``flags`` node, within the JSON structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:3
# 86062cf7fef24a968f2d5de33866ded8
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:9
# abd6cbb2691c43d59efe65a2ef8cc660
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:3
# 2a88858947304de6a323ca0694b1ede2
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:9
# 12d04165d6bb4882a2738883abe0e119
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:73
# c51344f7f0df432f8d5757101fb51697
msgid "Search Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 05099dc6da1049d7a953357df61b8f06
msgid "|search pattern| There are four types of search patterns that can be used when searching the |chef| search indexes: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:77
# 25c83051e19d4355af7504c2d3e46aa8
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 71e088b5024a4388becda3e1b9ff1c60
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:3
# 2b13a4ac3d8b4bcfa811393c3cbac657
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:9
# 6f939fc2213448f086a9a4a32509df69
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:3
# fc8f3f1d225e4056aadfd01f468fb588
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:9
# 9880b5d48afd43568c89955fffa3a7a9
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:85
# 5a97e45cfada40a089d05db965a490d6
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# fc86d818822e4fba887e7be7d8c77d9b
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 63079dc4256444d8b05ccca18c1886cc
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 4ea72a6c0fc24f8195e8938be0d21bba
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:3
# 38f2b10775ab4aff838899e627afcb4e
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:9
# 805a6db99c4c44c993b3658753a142fa
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:3
# cd2dc8f7698949068d49baa44fedab2b
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:9
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:15
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:21
# 4170b03cc2e444308297f24f53eb2045
# efe0f0e831384fa58f725b4295d6c3a2
# 8f08b0b3b1534882b01a225fb88864a7
msgid "or:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:27
# 51323fb6f7cb430ebbd45a9e0c5d77af
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:93
# ad4cdeaeb4174d24a4bf21b8c0e5f9d8
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# ec321a76bf8644419e281bb2472d6c1f
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 5831d4fd59dd4828a883e4de4d9a0c37
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:3
# 92b2227ca4894cfeb4c3e20408d7d045
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:5
# 654cffdf066843e3a943950c965d0051
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:11
# 4aea8341e34c4186a9f4d5d04f3eeff8
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:3
# 940ea1fdbad74833a1aefdc7520dbc19
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:5
# 7a88d62ebce046a58a27fbc496b1bb10
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:11
# 05c0898444234fc5b5d2d1f7304f9e22
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:101
# afb507a6e1294fcbb74a16d46ea1acfa
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# a9bd1c97ddd0473c8cae01c1f1edb220
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# bedf3f87560241d193792d08215914b2
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:3
# 00f1ebd6b7e745e794389f11e9d7f32e
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:9
# bbb9249dbfcd43eca6da00b20dfb11cb
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:107
# 622a611e5f1a4199887db7d3cbded203
msgid "Boolean Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# e7d25e1e36ac4504814b99f79f813c51
msgid "|search operator| |chef| searches can use the following Boolean operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 38ad401bc8df47cda9ea03e1babcdf9d
msgid "Boolean Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 0f550f31e42b457383b22385d73b21ff
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 4b5861e8ccbf4e1c81a5a05e1c2229a2
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# ab97f37ae8f04e93a082a14556bba9db
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 8ef20f408da24b0ca164de42791daf56
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 385ab6dbe9f54b329bf69bd0e06a2b3e
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# 74995aa7471d4a0aa00f658235a6d419
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# 7908a9afeb4e492887eb41243cc7cd2e
msgid "Boolean operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../steps/step_search_boolean_not.rst:3
# 804b9a7aadf14f7a824fb8e21adb6fac
msgid "To negate search results using the NOT boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_or.rst:3
# 9aed1d17c68c40738d93fdbf39d8d1fe
msgid "To join queries using the OR boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:3
# a3226c46c27d498d85f2291da96e29f2
msgid "To join queries using the AND boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:25
# 39811eb8d5eb464982c77369e973bb6a
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:117
# 1da04f46edc3474dbae968a563eb707c
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 8939acd15efd4233b80cd70ac38c08af
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (\\)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# 87ef3c033bf84178b848591a00473d28
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:121
# 642bc6065ae14ea997a4f0ddd41b6781
msgid "Search Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 0a030cb0f29a4e0282d69d25bb840b8f
msgid "|search target|"
msgstr ""

#: ../source/essentials_search.rst:125
# 4bfb84d26e804b77a279b87d92b35676
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# 30268d5e3c064d41ac246da3f745cd2b
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 757f8fac4df74811a84bb0af792ad757
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# c28a39c8706c453493d024ba9886c861
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# d8fbfb6cfcc64a268d82810225952303
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 9765a379240f4479b12161c6929d2948
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 5c6eafb99a1b4cfeb236f262e747102c
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 6d67e2e0915842d5b665a369ae8b09d9
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 28509c5e68614e7aa098d6515404963d
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 2680fc236dc04b23bdc57deafc172e0d
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:3
# f633bda0c43f4d6ba64cc096e9e4e6d9
msgid "To search a top-level run list for a role named \"load_balancer\", enter the following (from |knife|):"
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:9
#: ../../steps/step_search_target_role_expanded.rst:9
# fe8333356a8146e581ee65b2bc00fff8
# 31d868d9ed76404dbe0c41324990b23b
msgid "or add the following (to a recipe):"
msgstr ""

#: ../../steps/step_search_target_role_expanded.rst:3
# e6c27bf88f2a4c72923d648e8c9a8f59
msgid "To search an expanded run list for all nodes with the role \"load_balancer\", enter the following (using |knife|):"
msgstr ""

#: ../source/essentials_search.rst:133
# d8f005cbdf3440fe8f1772e398a04f11
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:6
# 50b529b8347a4f8a9794b1c0b06482fe
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:10
# 71f5ac9f5dfd4255b62310bc32a6fe10
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:12
# aa9cc5a59004463b8486fd9d76a6aee9
msgid "|chef| saves expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:14
# 4d3a4948c6704449856f1ba5566ce8ce
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:20
# bdb5a157706e4ec28d6bfacf1974fa1f
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# b276cbce44224a708e56d17571182bc1
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# ee543aa0bae14fa082c131115de9ff21
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:27
# 0e893b7cd073410a940f017c4a20c60d
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# 062fe8d3bfa74c56b6d9a6e212ff48d0
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:31
# e14df388cee84160aea5c1db6643405a
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:35
# 53c8083561a041009dda0cb0399e2406
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 2aa1fc3ca95a437cb607f1dab4128606
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:137
# 70eb8d1a51804fbdbb3d0f175677fc23
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# fb967b3ed7584d4983af97ae662206db
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 91d28a3d885a4e6aad276762ab214115
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following simplified settings file is for a web server named \"mysqlchef\" and a database server named mysqlchefutil:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 3c5462d1a16a4f239f69316f3d9d447b
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 681a5d5d2d054022a84a6cabe6d5ade6
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 0e71c6ae997c4c59b90895ccc1c4eeb2
msgid "where the \"[0]\" is the 0 (zero) index for the db_server identifier. This is because a single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:143
# 5e73d580fca9401d852d597462b914aa
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# d45548fde6ac41589cbb3032a324be1d
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# ad0eebfffbf24b5db9624a982b862d97
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 17ebcb8cead34fd8832c01bab6d2ee60
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:149
# ad044c52fbdd4f45afb568ae97ae9ae2
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 85a5172f605c49619e1c2f076ace6043
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 00574e5b77e34f629ad93b24e9506ab9
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 7dd0013e8cd54d73b2c4fb7e1721cc5e
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 53f4458a11f148588a4b5b98438efe29
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# 51cc90fe45bd4eb0a6dfe5a6a377dfe7
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 66f2366e5e604a4ba172fcff1c4c0b7a
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# a7b1db073ece41028d7ffc7ac409f73b
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# baf7ab7c2654466c9a8dee56e10dd5fc
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# d3bb1e752f0a4d82b285dad0ec92fae4
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 3f09ae63c5304ddeb36d6d070f5a1d9c
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


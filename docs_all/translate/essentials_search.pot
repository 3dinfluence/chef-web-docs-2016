# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-13 12:34\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:3
# a5c1a6bf13514fd4b2f4abe753b6912c
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 27712c0adaac4906942966ce31a094b4
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:37
# 5d107be7cd7b4e259bcb2b5d62f4f9c4
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:40
# 79e45e1635d9429d8d18e82623870b2e
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# a9dd26ca793148cab04d13ba2dfd9c50
msgid "|search index| |chef| builds the following search indexes:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# d3663dfff27045a481cb77c328097f0e
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:21
# a31101c67c51488797a54e122022b125
# 916fccfcad0341aaa45ef7a2d01982df
# 59baec3693224121b00c43c96cab4f3f
# 1654a3d313394e8eb8c072a86dd83ada
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# f300440b243345c1aa66a421b81932d2
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 13cdf05251a64bd791ee6bd978855563
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 6933204a23b544dea91534c38067a95d
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# e8734b82824c4c2caea174ece871f481
msgid "|data bag description| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# cca62829e77d41749f1ff5068294f4d3
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# 7d13728ac59247828618ee5442a8d14b
msgid "|environment description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 6c9beecae03640f18a6c84436f1d58c0
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# 614174b20e7141258fe75146dc218789
msgid "|node description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# d7a71be177e84cfb8f6a7434280961b1
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# aa81c30b578f4a6b8cb8bf7659a7fef3
msgid "|role description|"
msgstr ""

#: ../source/essentials_search.rst:44
# ac2a5d64b5b2402fa7ea66038ee49dee
msgid "Using Knife to Search"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 6ea9a4aa9f654339b190b28009e67902
msgid "|knife search|"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:8
# 807fe0578779451db337cd08d9e9f316
msgid "The sub-command has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:12
# ec60bf6c0057484ea38a2d5441d68732
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and SEARCH_QUERY is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:6
# daf3896261f3460ea09b2de3745488b3
msgid "For example, to search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:12
#: ../../includes_knife/includes_knife_search_examples.rst:32
#: ../../steps/step_search_boolean_not.rst:9
#: ../../steps/step_search_boolean_or.rst:9
#: ../../steps/step_search_boolean_and.rst:9
#: ../../steps/step_search_boolean_and.rst:31
# e1e3ba9e6b164db88f558f7b464037b2
# fb0b8f6cd53046f5b5aa0a210ac41a5b
# e7f8f9daabd346a4b80eb8479342cf7b
# 4400792c428a4d878247c548c58a7b9a
# d018f65478bf4dd0b8dee84b07aa422b
# cae1f7cd113f4f6eafc7423a662f5985
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:26
# 2e38a6d2f92144698357cec792e39e95
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:50
# 2e41ba939dbf48bb85f596a67511e1cb
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:56
# 9a1dd049d5a741bca85d0c2c12eb1555
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/essentials_search.rst:50
# 046650c1dd9d4cc38181d6853b09ac20
msgid "Search Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 3580e51124414d9cafe681191a401ddc
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 60fad11bcf0540589a596d2f3a722fe4
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:54
# dcb9c8a46f1b4e44b77563d57d406726
msgid "Keys (or Field Names)"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# c259bd2557df42aaa00c3796bf844320
msgid "|search key| Any key that exists in any JSON description for any role, node, |chef client|, environment, or data bag can be searched for. To search for the available keys for a particular object, use the ``show`` sub-commands for any of the following |knife| sub-commands: ``client``, ``data bag``, ``environment``, ``node``, or ``role``."
msgstr ""

#: ../../steps/step_search_key_name.rst:3
# 176c2b1709ee46a9992faa2fb493b0b2
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../steps/step_search_key_name.rst:9
# a569ebea51704c9197567da5e9a44be0
msgid "to return a full JSON description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../steps/step_search_key_wildcard_question_mark.rst:3
# fc0c07b6848a4e85b48d653248acf880
msgid "To use a question mark(\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_wildcard_asterisk.rst:3
# e9d605351e564ab597173903157ce4b9
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:64
# ccd5aaf4339b4f68944cd6b763e8abed
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# bf2b92a8708a4e55bdc0debc57971183
msgid "A nested key is a key that appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a JSON structure, |chef| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 513bf3764e794feda2d92b12fa4a4d4a
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# e25f9a345d704491a797e24e90a9d67a
msgid "Consider the following snippet of JSON data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 2e7ae636f15e449894f4972dc0a4bb4d
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 0f348842fdb644b598714978a6240328
# 6996603c90ee4d7ca7bfee58331b3862
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# 633ca046f897442ba6ff944a31b578c7
# 7a2f38d0f5f840f09045fe017df84242
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 524b57d2687643c9ba3eba14bc2fe754
msgid "This data is also flattened into various compound keys, which follow the same pattern as the JSON hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 5edb705c53274672846d030d98a8eb70
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the JSON data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 67ab162941074eaf8cc5e50a442eb9c6
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to::"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:122
# d0e6660bc9b74a65b55a1399c4d21d07
msgid "This query will search within the ``flags`` node, within the JSON structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:3
# 9f9a72ae9a2e4c538faf079bed0589bf
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:9
# c64549a3f1874ab58ac66b5e51bd3ffa
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:3
# f66d727c2f4f42d1b122a71a4d0e7610
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:9
# fe80649c79a94c5eb383d2374bf39c47
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:72
# 842042de32364d088c38f6d3017557a2
msgid "Search Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 810be37e05ef4be98414f905cda1264b
msgid "|search pattern| There are four types of search patterns that can be used when searching the |chef| search indexes: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:76
# c1493de787a24ff1b2ff8665e35cb542
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 9e873594a96c4fb7873e6663f88c21dc
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:3
# bf31255652454b04b6a2f3abed2f2a3c
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:9
# 58f5ccf42340427b88eac61f7260eb42
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:3
# 11651f20ecea4f42821f60daa0c59aa9
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:9
# 9e5962d3dab44c598412010b8d6198b3
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:84
# d2bfe4414697476dbfe35eda8b7cb89c
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 1864df307ae64ba3873724f56f164beb
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# f3c42434aa7e4a58bc17918cfab132c4
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# a311ea74fce84f2596290bcdfc78ac6c
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:3
# 17c972a0b23a45a7adfcf61738ba1c4e
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:9
# a12fd46f12f54fbdb340714dbf15bf9f
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:3
# d5f7c97b823c411887c366d0c7f5e69c
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:9
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:15
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:21
# 607f0f812faf4b778ec32751920f6c27
# 891acc48f64a42bebed1ef740a848927
# 5e2f068d0d1e4ed9acca7bc55d782bb4
msgid "or:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:27
# 63bb81e6a6f940989e20785aeb5a29fe
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:92
# 52ebb437391e41429a8fefce4d05db7f
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# fbe3b94bbecb414b8e7f47ebf979b905
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 797b66dc64a94e26b2f479f48a44415b
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:3
# d6eb1704e990424e860f8ecd5b70de93
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:5
# 56d319bae1ce4838a59edef37a12d79f
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:11
# 9cf7df73a0694ea5a6415bae3d61757d
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:3
# c862b5dc309d4b1a85c72f05cbc85657
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:5
# a982f1312680459eaf53687e061506ea
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:11
# 78e4324feba040afb10111e3593ea629
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:100
# 3b218d74b071406eb8aa62a4030f90b2
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# 3347e918683549f58af0c697731ac132
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# e72f1382f70240a98d3939f0b7b3ad43
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:3
# 8e9ea860ca6e4c4ab8caaf608cf97df9
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:9
# c51234532e7f41dc8bd50232dc7a8df0
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:106
# d2caedb59e024ae6b5c7709e6f190755
msgid "Boolean Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# c62950a406374e5d8c5b00a34706be3b
msgid "|search operator| |chef| searches can use the following Boolean operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 80f3ece7e10147f691dca779e366ceac
msgid "Boolean Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# d101c0596c754b1e971358946ae3d81b
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 93196fbac1974d9c85f2b33b5aafb927
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# ef063e0b9d644d2bad6a050d91263646
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 9b204fbe8a2744ecb4b47e7862b7423c
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 2872659836104e0f882583c51e3a1dff
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# b67ea47f161d47aebf65498d37a35d6b
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# ccd90374820140feb6fb53ff4177b61b
msgid "Boolean operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../steps/step_search_boolean_not.rst:3
# 54fca932c2694acfbc22b410c8645372
msgid "To negate search results using the NOT boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_or.rst:3
# 988df2c6302a4d119cc4ef860566da6f
msgid "To join queries using the OR boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:3
# 8bf3bf837fff4cecbd740b0e083462bc
msgid "To join queries using the AND boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:25
# 5bd06c501e914c4ca462d14ca84905c8
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:116
# ef5c22561b994fe19bfa6c01e50367c6
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 24c4e224d6684d509f6546a1e128577b
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (\\)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# 51104023b14d4715879686a773f42ee1
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:120
# 6bf2ca5df6c04cca8a1e8a51ad71bcf4
msgid "Search Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 97c1b8d72d0a470db795eadda0127ce1
msgid "|search target|"
msgstr ""

#: ../source/essentials_search.rst:124
# 7b4f96e63d6746c396a8b8949eb3c63d
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# c71308d17c4940cbbf26480f539b62cf
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# c9e3c527609048d892b166115a7c9a25
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 2db4622f69c147d9a10aac2de6b0f5be
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 6b6f74674ed04ac799480b822d65ee8d
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# 678d4d0616d94e38b0949c540da9dfb3
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# ef2c640be7ad469b93c8c785035c54c7
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 3626802e8d9e43ec99f1c02efedf86a8
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 24a714561ec043d387b5980d675300b8
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# ab557df3dc184efda41b8287ff90340b
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:3
# 5eae9dbf02594b7eb156d25a2448785c
msgid "To search a top-level run list for a role named \"load_balancer\", enter the following (from |knife|):"
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:9
#: ../../steps/step_search_target_role_expanded.rst:9
# 9fddf1c1bca24b48bb67a6f6300ce852
# a59cc14e43fe4283b9f9d6bc3c31b9fe
msgid "or add the following (to a recipe):"
msgstr ""

#: ../../steps/step_search_target_role_expanded.rst:3
# cb2d397a13524fa7a8870009c5ed7d95
msgid "To search an expanded run list for all nodes with the role \"load_balancer\", enter the following (using |knife|):"
msgstr ""

#: ../source/essentials_search.rst:132
# fbc2027e6508449db49f60ed21b7e427
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:6
# 360fe17ec9154adc937e07913dbdecfb
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:10
# 73f4cdb5abc74c79be0d24eee61eb5c3
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:12
# aab205d58438445287514bcebc99fa68
msgid "|chef| saves expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:14
# 2dc1b3cf2f594115b8323b264731bd7f
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:20
# a8e7e7a5ac01459d8dc177059e623f52
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# fd6afe7108074847a7aee99e99fc10bf
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 8a1813be4c5f40f29f2abd4886d3583a
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:27
# 89723b056fd64c33bf7765194465ba4b
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# a84ffea98ab34f46afd27e4181a46e8c
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:31
# ede640972a2d4a5c825a3442ce490748
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:35
# fdab3dc8ef684adfaed22eee4e48feb6
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# fc68b134ab164059b6cf6c1b9fc6ed5e
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:136
# 1886fdfb634143a784a266e7dcf174e5
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# b1f1a8c4395c4ba489db0abf1c8b1193
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 08f5dfe81d344d6f8d1dc0666dbbb7b2
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following simplified settings file is for a web server named \"mysqlchef\" and a database server named mysqlchefutil:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 559dc230f22747e9aa39fd0a0cbd36a9
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# bd4cb43fb91b4f6abddc863738293af8
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 3c0c5593aae5450d95f7bd2bf5635d35
msgid "where the \"[0]\" is the 0 (zero) index for the db_server identifier. This is because a single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:142
# 07a9dc0f22ba47d0825442a123553ee1
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 1c2861d05e2a4c15947e6d28daf9763d
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 95d5a3467c9d4f62967a1caff230f021
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 1c6252db30bb4fb597d6d6e8c8f0e42b
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:148
# e14da9acb8be4c37bb2ef0b27c6b4676
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# b280a4646ec14eee953144710d7f6800
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# dc2b370371ba41119455518d227a926e
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 272c97df3bec4c4db2911d06a74c92c0
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# bdcbdd5b65ca429dac971770abf019ee
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# aa8024d21b01411899abfa03ef459151
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 4b4ec30c86164058a627cc413fcfadb2
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# 17c02d3827fc40348253aa2810348ce9
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 16af4f2f50cb4fb989d8c6391b332ff3
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 7db83e41fbc8454b984e18cd4baa5462
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 98b584b56ca249ebbf7c36246cb6c143
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-01 17:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:34
# 262d211db51b46a7a916c507fb7309fd
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 546ffece29744d55a9c18c8a4dc8de83
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:38
# 73ffa637d01c4109a5b974113c300c71
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:41
# 6c99da89b7d148ba878ec7dc327ede4b
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# 05afc6fcbaf246c8be39938b2622c20e
msgid "|search index| |chef| builds the following search indexes:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 46854779b6184375a5408fd5013e1ccc
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:21
# 62d591801ae04598a4b1ec4f8b772e44
# 611d0f3353164625bf475347d2f92906
# 4e193571d4dd421089ea8a81cfa16fa0
# d135e83e86d948e193a6f9d6c91b7422
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# ba1d8957feb9412b85ef30e2e9207d5b
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# 9e0e79cfea1d4d678eab2f4d13411600
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# ad6884771db64992a7812411c5984291
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# cf944562837a41719e33d4a5e866de99
msgid "|data bag description| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 8c4c7bfe03f84bc58d5ae7e620c3726e
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# ac1b38162e074a9a82c6f8c6c662b611
msgid "|environment description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 0647d9309a3247979b5ef466fdeea211
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# bf0cc3f2dcca435eb4e1130020a17f15
msgid "|node description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# ab2677db11ca4d3e9b93aadb0f57f6e2
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 87e43b757dff4507afe07be4c18149ba
msgid "|role description|"
msgstr ""

#: ../source/essentials_search.rst:45
# d5afb662b3ef4dfca9ebd525ed615972
msgid "Using Knife to Search"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 1a365a1b514046338846d1354f345145
msgid "|knife search|"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:8
# e89f4c96f75c4ce6b9407089438160f7
msgid "The sub-command has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:12
# 9180a50199af4ef192e317d5f7e720e2
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and SEARCH_QUERY is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:6
# dec2cf2702474f1a926399597c89c071
msgid "For example, to search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:12
#: ../../includes_knife/includes_knife_search_examples.rst:32
#: ../../steps/step_search_boolean_not.rst:9
#: ../../steps/step_search_boolean_or.rst:9
#: ../../steps/step_search_boolean_and.rst:9
#: ../../steps/step_search_boolean_and.rst:31
# 456672ab4bef4dd7b60279ffa5fccd53
# adcb5af898914419aca550353a985505
# 44997196622c4d1bbe69b4e4668b351a
# dfde671e28e34cc18ff48cd05c657a38
# 77c452dcef50417395537fc3b0e895bf
# a8cf76a299cc4aa5a06a2707c5d2c3d5
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:26
# 2c35eb74d63440e7bd33144bff221328
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:50
# 3afc63aa28c44184860f584979bb65b7
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:56
# 50a6fe189e184cdbb45c5d9e71e7ed59
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/essentials_search.rst:51
# 6cc377252ee64d49838d9035208ddd5c
msgid "Search Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 09b4979b6cb645bc857d2f355552f039
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# a1ec6c5260c14e129ade8de30d9f8aef
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:55
# 3183d336daad48bbbf88dbb9cd641322
msgid "Partial Search Queries"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:4
# e551a3d9f10245809b9a3760b28a8b8a
msgid "A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|. A partial search query can search the same set of objects on the |chef server| as a full search query, including specifying an object index and providing a query that can be matched to the relevant index. While a full search query will return an array of objects that match (each object containing a full set of attributes for the node), a partial search query will return only the values for the attributes that match. One primary benefit of using a partial search query is that it requires less memory and network bandwidth while the |chef client| processes the search results."
msgstr ""

#: ../../includes_search/includes_search_partial.rst:6
# 270952bfee0647bf8534968dfefcaba1
msgid "To create a partial search query, use the ``partial_search`` method, and then specify the key paths for the attributes to be returned. Each key path should be specified as an array of strings and is mapped to an arbitrary short name. For example:"
msgstr ""

#: ../../includes_search/includes_search_partial.rst:21
# 5ce30e3e1eeb46c0a9b7c77be6f4e862
msgid "In the previous example, two attributes will be extracted (on the |chef server|) from any node that matches the search query. The result will be a simple hash with keys ``name``, ``ip``, and ``kernel_version``."
msgstr ""

#: ../source/essentials_search.rst:59
# 8e79a730f6764643b24549ea89ec0f32
msgid "Keys (or Field Names)"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# 429fba29010c4e75bc5c68f78888a72a
msgid "|search key| Any key that exists in any JSON description for any role, node, |chef client|, environment, or data bag can be searched for. To search for the available keys for a particular object, use the ``show`` sub-commands for any of the following |knife| sub-commands: ``client``, ``data bag``, ``environment``, ``node``, or ``role``."
msgstr ""

#: ../../steps/step_search_key_name.rst:3
# 5384fb7731c0405b95185d17220f51f3
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../steps/step_search_key_name.rst:9
# 2e45613cc5a04b169bdd32342a7a79a8
msgid "to return a full JSON description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../steps/step_search_key_wildcard_question_mark.rst:3
# 9bf6af8711a643f3acb8fff052b40c6c
msgid "To use a question mark(\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_wildcard_asterisk.rst:3
# a4a7cf813a6442fdaf64d95874c544b5
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:69
# 8a63781579a74c6683b51fe6efb0e933
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# 8b26bb8eb15c41dcafcb5c249cd28de4
msgid "A nested key is a key that appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a JSON structure, |chef| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# 27a9effa2ab94dba85a6ce6ee9ab7d31
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 249798be5b40475dbf84cd3f42c7b848
msgid "Consider the following snippet of JSON data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 180114a9131649fb8e2454943c970f67
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# d62493d31cd1480cb9af03670c0deddf
# 95d47c3558b44edbb0e986290f7cd8cb
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# c461d30596d744ffb4eb477da19ba269
# 9ee42ac61b814c46a436ea1095654d56
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# d46eec7013fa4564a29c57e963fe0beb
msgid "This data is also flattened into various compound keys, which follow the same pattern as the JSON hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# 74c3c3289ddd46dab8f071d68282fd6e
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the JSON data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# ec4fa0417da14965ad463533a041a4df
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to::"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:122
# d065c293c0af40f3b1cd7f98b25864f6
msgid "This query will search within the ``flags`` node, within the JSON structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:3
# 541514e4e9ad4289883f749481e4a8f3
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:9
# fc01ce508ab84d2cac215de916ee7642
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:3
# 4678d49cc14c4771bc72398c722c4083
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:9
# ce54cea443c44fa4afad16048dcc8ee2
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:77
# c1997b5f21ce47d1a3684e04cbd77d5d
msgid "Search Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# 909cf1eed2f04906b599f02f9e0b504c
msgid "|search pattern| There are four types of search patterns that can be used when searching the |chef| search indexes: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:81
# 340bf925af684084b6c00ab336f83921
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# 3a4cf5f6f8ec49dfaed1f0ecc6eaa8a7
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:3
# 8dfb74e6aacd497aa3bcab6749ee3a05
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:9
# 0f126d34ab8b4d79937d293473c00a18
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:3
# ab508c19785846768faf9ddaa04749d5
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:9
# 6a387df9554d4da79d78142455c6f966
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:89
# 5ddd5d4417a343019b0ee3ce6468c5f8
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 9974fb2d99dc42d78f9614ba8f116c28
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# 0724c19dcf6344bc9d1bad6ae085e8f8
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 0dcab4c789824181ac0f7fda33b937d3
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:3
# b08f6a42510740c38fabbbebf43ab5c5
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:9
# a870b9a90f6541b3af66d1e705263e92
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:3
# 950a80136be842bb94ca3d93eef0b5f3
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:9
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:15
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:21
# 67bdaab5bfbd4a88bba3407e1e4d3477
# 859d9879a4844a32861192c5039457cb
# 6339112e7fca48f2a0f74c98902c4e3f
msgid "or:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:27
# 67b1952356324d658f862aa83530d74e
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:97
# e09bb4363eef4e72b68e26c7d2c124af
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# d23e17657ec14cf8ba008bc5d9972860
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 06d3fbd7fda647038a64ad562028e17f
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:3
# 5c2e4a4f6e2546258b6ca76c7fc03bcf
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:5
# 02ec1fafea6a441795d5babb4f766c90
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:11
# 6e5b3caa40a64c29bbdac317d0c2bfed
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:3
# 122781ce2f614175979d5aa5b5050075
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:5
# d49fb36c11f040d89035360a39652cf2
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:11
# 2ded04883c3e49c5a34259ab2397e060
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:105
# dc7a639ae36945b6ab7fe21426841b3b
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# d9fec3f1f14d438a8a174789e29c4868
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# c9da7e2d10a5447dac32a729d6bb5409
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:3
# 79ef3261a589450d905f989c93873e15
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:9
# 7142d0d3e0554b859dcb2cd36d3b4bc9
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:111
# d6247bab698843aeb468ff9545827653
msgid "Boolean Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# a391e88cf6e34edb95fb9f51d645b7fb
msgid "|search operator| |chef| searches can use the following Boolean operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# 4cd8b4f3e4874125984fd99cd2c9ff46
msgid "Boolean Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 50144ee2fe8b491ba4e644caef1e1bd6
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# e33df453b87b4ef5a74028ad4a1c1bb4
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 66d2add55cba47b88bc2eb9abf0c5572
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 3de70edfa3734887b692d5320ddb87eb
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# f9a21c9880b24f9ea6bc1d21f14cc938
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# b3f427aaa98b43e5a330643392994241
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# db0b8df667e34a4fa038490bf27aca6c
msgid "Boolean operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../steps/step_search_boolean_not.rst:3
# 8b4bd99abd084771920643db9996d229
msgid "To negate search results using the NOT boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_or.rst:3
# 333fa81fc011497585f26d4af8618c60
msgid "To join queries using the OR boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:3
# b0ebbd3e272548bb98bb2a1a5a5e6e60
msgid "To join queries using the AND boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:25
# f7f4cf1cd60345839c31d22349848834
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:121
# f45e67bf78b7418daabfc1e5d16bbd51
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# 3a50adf29d53400c8105e9946991265e
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (\\)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# 7f5528e31c614df3b3d6e27e0ed71acd
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:125
# 19fbadb668a7443f9d95a05fad0eedfc
msgid "Search Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# 24d76e8c78974b33a7ecb52aa3d8401e
msgid "|search target|"
msgstr ""

#: ../source/essentials_search.rst:129
# 176f08a046944f53bc380fd7581e18cc
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# b78d2a47b8d94ece9d54dc3a2aefb636
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 1958645175b046a7a3164d2f20108dea
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# 46160fa24e2b4efda3cf9c7e2d92a602
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 77e14625b6154146988507ffdf46743a
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# dbc06e694f79473f99abd82089b2769c
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# 64a6f9b9d6bf42d1b7a42bfe3f4d92df
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# 8a400ed85e9e48388e38b6ba13a7165f
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 137eecde4d17474fbee0ca4ec8c63b16
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 4958a68ffa3c4cecbdab3c928dc0b87a
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:3
# 332436de4c984adea5754c2a9cfaa29a
msgid "To search a top-level run list for a role named \"load_balancer\", enter the following (from |knife|):"
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:9
#: ../../steps/step_search_target_role_expanded.rst:9
# 39ffa0e5668a487794e91cd799c8e965
# 7dd601a23a8242b7850f2b543162c640
msgid "or add the following (to a recipe):"
msgstr ""

#: ../../steps/step_search_target_role_expanded.rst:3
# 5657bd063cfd41d189279fd69cd1e761
msgid "To search an expanded run list for all nodes with the role \"load_balancer\", enter the following (using |knife|):"
msgstr ""

#: ../source/essentials_search.rst:137
# 616d37eca4fe4c53afbcb44ed6f0d32c
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:6
# cf634ee5cf2040d38a0d78b8a1e9a646
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:10
# f4fe00ef5db745e9a184ec14a78ff603
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:12
# 2be7f1f9c115446399afc45ab5aa0311
msgid "|chef| saves expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:14
# 7cb969c7f88347abbf30e4af1b708631
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:20
# 8e3733b5e4a04e2199981a06166ff9bc
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# 800726a6ef704805ab9fea8d6ae1c8f9
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# f5ca568eb03e48d58193e8f79201260d
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:27
# 6e3cf9b6d4d24ed7af3941282ec3b115
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# 90ba8179ac5e472dab14872a996f0e55
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:31
# 39956b1b63fa446ab58c5d3416e20c6c
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:35
# a59ccb75a7634a83998555df225261b0
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 996cea56db5947ee901f5ad47084de89
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:141
# e64b24af694a4310a31bece0dca024ad
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 921c5c99e15a4e5d82f5680afcf71b3f
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 9779d627aeeb404681c16a642d992e30
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following simplified settings file is for a web server named \"mysqlchef\" and a database server named mysqlchefutil:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# 1096c50944e04ae5b2d7855029e04cce
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 56fdf2cbcda94bb3b7b8b2d7b6a94841
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 9a3f874dc7d847c5a1d288d39117adff
msgid "where the \"[0]\" is the 0 (zero) index for the db_server identifier. This is because a single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:147
# 54620db7928349e59b11afee3aadbf12
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 257c6d1f5b3d425b884aa83e83e817ad
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 7ae5250f07c247e0a3249ee4ff94facd
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 5178556e40e34843904a9193f9e16d5b
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:153
# 37c3488bfde842fdb6a0e9085ab1520b
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# a9b13544ff2b4f02ae55e0b375fac52b
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# 3c223ea3faee492f86d0d529b305e03e
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# 0969ee1540bf4ec1b52af157fefeeb97
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 98406ec0e9e24064b544bdffdf6e1350
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# c28b1b5d691d46e18e04173112a05b90
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# 321622eb50ea4e40b19a4c024f87aed1
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# abe9720b4473429a9ef8527920ca369a
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# beb0b09d1c064855a91d261923991fc1
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 85e15f4563a74d93b700fd88658313b1
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# ae51e30f224147c0b428515879595886
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


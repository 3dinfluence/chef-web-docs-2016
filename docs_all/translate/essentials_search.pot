# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-10 18:14\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_search.rst:34
# 6fb10a8c3f994d39880372a206a5e868
msgid "Search"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 49474c4a42524197af93aac7593dbe5e
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../source/essentials_search.rst:38
# b411c15ffa8447cea5577915d5fd1a5f
msgid "Many of the examples in this section use |knife|, but the search indexes and search query syntax can be used in many locations, including from within recipes and when using the |api chef server|."
msgstr ""

#: ../source/essentials_search.rst:41
# e5db4ca92057469db71506466afecd30
msgid "Search Indexes"
msgstr ""

#: ../../includes_search/includes_search_index.rst:5
# fec671716b514bbcb964bf11a274ac73
msgid "|search index| |chef| builds the following search indexes:"
msgstr ""

#: ../../includes_search/includes_search_index.rst:11
# 6124ac9f3bcb4efcb0484f7537369d79
msgid "Search Index Name"
msgstr ""

#: ../../includes_search/includes_search_index.rst:12
#: ../../includes_search/includes_search_boolean_operators.rst:12
#: ../../includes_search/includes_search_role.rst:14
#: ../../includes_search/includes_search_node.rst:21
# 453cf338325445b2923cea29d640c091
# ccb589208df44ce18962a65524f6717d
# a45b7549e486475a8e939ad06e4d626c
# 4e9a2f6b1b1343f398801adbb4a7ed31
msgid "Description"
msgstr ""

#: ../../includes_search/includes_search_index.rst:13
# 427007252ded42f3a9bc7d574730fdae
msgid "``client``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:14
# b4837c8e461e4360816aa0551e3726e0
msgid "|chef api client|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:15
# 39e2916780ce46c0970d812e5428cbd2
msgid "``DATA_BAG_NAME``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:16
# 1732bab0d8e34f14868e073b1cc03f0d
msgid "|data bag description| The name of the search index is the name of the data bag. For example, if the name of the data bag was \"admins\" then a corresponding search query might look something like ``search(:admins, \"*:*\")``."
msgstr ""

#: ../../includes_search/includes_search_index.rst:17
# 24089d9c83c84614869630f28fdc56d8
msgid "``environment``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:18
# b4b039d8a0634787afcd1fa3e4481994
msgid "|environment description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:19
# 85ee04ddfcb94f548c8054db6d0d4ae7
msgid "``node``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:20
# ebf6f27234fa49429bcbefd7ad313250
msgid "|node description|"
msgstr ""

#: ../../includes_search/includes_search_index.rst:21
# 6dd0a82ec804489fba164caf810223ac
msgid "``role``"
msgstr ""

#: ../../includes_search/includes_search_index.rst:22
# 83e6e38008db41179a76c714f864c3ea
msgid "|role description|"
msgstr ""

#: ../source/essentials_search.rst:45
# 59782a253e9f46ac85b76fb48285ce5b
msgid "Using Knife to Search"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:6
# 7f45955f76064769ba0bcfe5362e5abf
msgid "|knife search|"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:8
# 861969aa89cc418baeadc567d87552f8
msgid "The sub-command has the following syntax::"
msgstr ""

#: ../../includes_knife/includes_knife_search.rst:12
# dd58a23804b1497bad169651b47c28b8
msgid "where ``INDEX`` is one of ``client``, ``environment``, ``node``, ``role``, or the name of a data bag and SEARCH_QUERY is the search query syntax for the query that will be executed."
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:6
# 48edd337bad943cca289aa2bc89feddc
msgid "For example, to search for the IDs of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:12
#: ../../includes_knife/includes_knife_search_examples.rst:32
#: ../../steps/step_search_boolean_not.rst:9
#: ../../steps/step_search_boolean_or.rst:9
#: ../../steps/step_search_boolean_and.rst:9
#: ../../steps/step_search_boolean_and.rst:31
# 532ee3d292494f3a8c270d040d8bb5e5
# 868fa89916374aa29f29be6362f6f7f2
# a969cc575c974d298de173a0c62f565f
# 10eab8e6195b4423861574d55fdbcdbd
# c02641a666f6433183a04a635bae50c5
# 5b488e699741442cb33059eb96f93945
msgid "to return something like:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:26
# 6358f94558d445b380d72268348a7eb7
msgid "To search for the instance type (flavor) of all nodes running on the |amazon ec2| platform, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:50
# 49e4871c400743b4abfa7583e64efb4f
msgid "To search for all nodes running |ubuntu|, enter:"
msgstr ""

#: ../../includes_knife/includes_knife_search_examples.rst:56
# d438c01716714ef682dca5f82f7fdf28
msgid "To search for all nodes running |centos| in the production environment, enter:"
msgstr ""

#: ../source/essentials_search.rst:51
# c776c2ca494c4a03837877e954824d12
msgid "Search Query Syntax"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:5
# 7bd74f2f0a7b487a9455d4a5443e1971
msgid "|search query syntax| A search query has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_query_syntax.rst:9
# 0f7841a32b1c4456b5d4a8ad3dedad6f
msgid "where ``key`` is a field name that is found in the JSON description of an indexable object on the |chef server| (a role, node, client, environment, or data bag) and ``search_pattern`` defines what will be searched for, using one of the following search patterns: exact, wildcard, range, or fuzzy matching. Both ``key`` and ``search_pattern`` are case-sensitive; ``key`` has limited support for multiple character wildcard matching using an asterisk (*) (and as long as it is not the first character)."
msgstr ""

#: ../source/essentials_search.rst:55
# 0f457e3f9a7148d38e468a7e913e0728
msgid "Keys (or Field Names)"
msgstr ""

#: ../../includes_search/includes_search_key.rst:5
# d3a218967848452299d0347c3b7dffcf
msgid "|search key| Any key that exists in any JSON description for any role, node, |chef client|, environment, or data bag can be searched for. To search for the available keys for a particular object, use the ``show`` sub-commands for any of the following |knife| sub-commands: ``client``, ``data bag``, ``environment``, ``node``, or ``role``."
msgstr ""

#: ../../steps/step_search_key_name.rst:3
# 7c5d786a105c48ef8fd607d3fabcf012
msgid "To see the available keys for a node, enter the following (for a node named \"staging\"):"
msgstr ""

#: ../../steps/step_search_key_name.rst:9
# 55bbd6d0c47845fda5f76a5856dedf21
msgid "to return a full JSON description of the node and to view the available keys with which any search query can be based."
msgstr ""

#: ../../steps/step_search_key_wildcard_question_mark.rst:3
# d65165ecda3e469186ff99e833dd8acc
msgid "To use a question mark(\"?\") to replace a single character in a wildcard search, enter the following:"
msgstr ""

#: ../../steps/step_search_key_wildcard_asterisk.rst:3
# 1154f4a5c13e4b40b22a67fe88fd2cdb
msgid "To use an asterisk (\"*\") to replace zero (or more) characters in a wildcard search, enter the following:"
msgstr ""

#: ../source/essentials_search.rst:65
# b15a5adc9dc8476c8811bd8f4d9e131e
msgid "Nested Fields"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:5
# c9347e9426ab4ccf8bd8db28cf90d4fd
msgid "A nested key is a key that appears deeper in the JSON data structure. For example, information about a network interface might be several layers deep: ``node[:network][:interfaces][:en1]``. When nested keys are present in a JSON structure, |chef| will extract those nested fields to the top-level, flattening them into compound keys that support wildcard search patterns."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:7
# f0600a6f8ed84e8a958a3f0398f1fbe7
msgid "By combining wildcards with range-matching patterns and wildcard queries, it is possible to perform very powerful searches, such as using the vendor part of the MAC address to find every node that has a network card made by the specified vendor."
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:9
# 5f6ab866c5154466babf74d6fa07dfc0
msgid "Consider the following snippet of JSON data:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:65
# 257db41f363f4bb19d3becd58eb7cdf8
msgid "Before this data is indexed on the |chef server|, the nested fields are extracted into the top level, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:73
#: ../../includes_search/includes_search_key_nested.rst:101
# 6656269dcc064e199f7e4484b4ddb243
# 0186e2cc36e54a60983f93185ddb0f98
msgid "which allows searches like the following to find data that is present in this node:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:79
#: ../../includes_search/includes_search_key_nested.rst:85
# d36cdeac3c324edabf7fd6a3258cdbac
# f1e3c7d0cddd45c2b5b9c3769e7635f6
msgid "Or:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:91
# 1930dd0816d548cfbde43b31a77ea6ae
msgid "This data is also flattened into various compound keys, which follow the same pattern as the JSON hierarchy and use underscores (\"_\") to separate the levels of data, similar to:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:107
# c1f860a12f764e619bc6545eb355fb5e
msgid "This flattened data structure also supports using wildcard compound keys, which allow searches to omit levels within the JSON data structure that are not important to the search query. In the following example, an asterisk (\"*\") is used to show where the wildcard can exist when searching for nested key:"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:118
# 33ec93531f574a748ea35a39ac53224d
msgid "For each of the wildcard examples above, the possible values are shown contained within the brackets. When running a search query, the query syntax for wildcards is to simply omit the name of the node (while preserving the underscores), similar to::"
msgstr ""

#: ../../includes_search/includes_search_key_nested.rst:122
# c14194271d224abfbd84c3b141d15d26
msgid "This query will search within the ``flags`` node, within the JSON structure, for each of ``UP``, ``BROADCAST``, ``SMART``, ``RUNNING``, ``SIMPLEX``, and ``MULTICAST``."
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:3
# 2a3878e4eb1841619e66e31566119d1e
msgid "To find all IP address that are on the same network, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_starting_with.rst:9
# 59fe3100c35c439e8f59040e4f4b1822
msgid "where ``192.168*`` is the network address for which the search will be run."
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:3
# b7774072af5e45a79c3316f0cc45b3e2
msgid "To use a range search to find IP addresses within a subnet, enter the following:"
msgstr ""

#: ../../steps/step_search_key_nested_range.rst:9
# f4003285724d46498d28197a5cf957c4
msgid "where ``192.168.0.* TO 192.168.127.*`` defines the subnet range."
msgstr ""

#: ../source/essentials_search.rst:73
# 0304569acede40ee82ece683c5d2a578
msgid "Search Patterns"
msgstr ""

#: ../../includes_search/includes_search_pattern.rst:5
# a9666d2f99f344469bb5e62068589908
msgid "|search pattern| There are four types of search patterns that can be used when searching the |chef| search indexes: exact, wildcard, range, and fuzzy."
msgstr ""

#: ../source/essentials_search.rst:77
# 84562557bf55443c830a7c0c1fad0eb5
msgid "Exact Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_exact.rst:5
# ae6c3289782c49ddb03009bef5e7c55a
msgid "An exact matching search pattern is used to search for a key with a name that exactly matches a search query. If the name of the key contains spaces, quotes must be used in the search pattern to ensure the search query finds the key. The entire query must also be contained within quotes, so as to prevent it from being interpreted by |ruby| or a command shell. The best way to ensure that quotes are used consistently is to quote the entire query using single quotes (' ') and a search pattern with double quotes (\" \")."
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:3
# 5647a8267f42497e89cccd09d0396888
msgid "To search in a specific data bag for a specific data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item.rst:9
# 7cb44da21d3b466189b5c21546eda22b
msgid "where ``id`` is the name of the data bag and ``charlie`` is the name of the data bag item. Something similar to the following will be returned:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:3
# 6f0c391978224f93b7d9607059aa2027
msgid "To search in a specific data bag using a string to find any matching data bag item, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_exact_key_and_item_string.rst:9
# e530bc53097440c4a7628f4d19a18f71
msgid "where ``comment`` is the name of the data bag and ``Charlie the Unicorn`` is the string that will be used during the search. Something similar to the following will be returned:"
msgstr ""

#: ../source/essentials_search.rst:85
# 1ccbda6bc2384ea0aaad6c95327693d5
msgid "Wildcard Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:5
# 6c4cb8513c754e8db86284371e018eef
msgid "A wildcard matching search pattern is used to query for substring matches that replace zero (or more) characters in the search pattern with anything that could match the replaced character. There are two types of wildcard searches:"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:7
# c459c164cdd0499085d55c6bfa897ad8
msgid "A question mark (\"?\") can be used to replace exactly one character (as long as that character is not the first character in the search pattern)"
msgstr ""

#: ../../includes_search/includes_search_pattern_wildcard.rst:8
# 406f5091460f4adab9b81dacc87c1fb3
msgid "An asterisk (\"*\") can be used to replace any number of characters (including zero)"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:3
# e9b74b03d6ec4f1f8604afe9129db062
msgid "To search for any node that contains the specified key, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_any_node.rst:9
# 1517cb380bfa40d2a16297dd82955004
msgid "where ``foo`` is the name of the node."
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:3
# 5b446b8217bb4e4e83b4600da47494ac
msgid "To search for a node using a partial name, enter one of the following:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:9
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:15
#: ../../steps/step_search_pattern_wildcard_node_contains.rst:21
# 559f1f8862cc437eb4edeb862931a632
# 99ea7f4f84364bfab018eed69656d585
# 2a13cc5b837a47aabb5b4441ead196c2
msgid "or:"
msgstr ""

#: ../../steps/step_search_pattern_wildcard_node_contains.rst:27
# e65fd1016acd48c6a29bda1b4af60af5
msgid "to return \"app1.example.com\" (and any other node that matches any of the string searches above)."
msgstr ""

#: ../source/essentials_search.rst:93
# 351df02ec5a34848be73198f5414e851
msgid "Range Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:5
# c27e25e91ae3459ab5597482cf51fff6
msgid "A range matching search pattern is used to query for values that are within a range defined by upper and lower boundaries. A range matching search pattern can be inclusive or exclusive of the boundaries. Use square brackets (\"[ ]\") to denote inclusive boundaries and curly braces (\"{ }\") to denote exclusive boundaries and with the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_range.rst:9
# 50fb8b75ce714a0bac6480d95ce23a7a
msgid "where ``TO`` is required (and must be capitalized)."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:3
# 609a65f448bc43f289dad973b7f62c83
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items in-between \"bar\" and \"foo\", inclusive, can be searched for using an inclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:5
# 36ab2a767dae4222a9df3d4328aeb5f3
msgid "To search using an inclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_in_between.rst:11
# 7f7835c17fdb461fa1a3c0b58f12e20b
msgid "where square brackets (\"[ ]\") are used to define the range."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:3
# 13c1ff61c66b4e75828ea0e0546d61ce
msgid "A data bag named \"sample\" contains four data bag items: \"abc\", \"bar\", \"baz\", and \"quz\". All of the items that are exclusive to \"bar\" and \"foo\" can be searched for using an exclusive search pattern."
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:5
# 55c1a1b75ac54d51a26891561eec2773
msgid "To search using an exclusive range, enter the following:"
msgstr ""

#: ../../steps/step_search_pattern_range_exclusive.rst:11
# 14b79f5511194073866b6d04d7eef767
msgid "where curly braces (\"{ }\") are used to define the range."
msgstr ""

#: ../source/essentials_search.rst:101
# 87dc831194834bd3bf815e6fd77ef9fd
msgid "Fuzzy Matching"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:5
# f50753cdb0cf49689270d8fbb16fe23a
msgid "A fuzzy matching search pattern is used to search based on the proximity of two strings of characters. An (optional) integer may be used as part of the search query to more closely define the proximity. A fuzzy matching search pattern has the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_pattern_fuzzy.rst:9
# 56aaf53184f3418b8c32d5126a62a45a
msgid "where ``search_query`` is the string that will be used during the search and ``edit_distance`` is the proximity. A tilde (\"~\") is used to separate the edit distance from the search query."
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:3
# 24bf0a2e0d5a49dc919e898ee6529354
msgid "To use a fuzzy search pattern enter something similar to:"
msgstr ""

#: ../../steps/step_search_pattern_fuzzy.rst:9
# 11556f12335d44438c1dbcec1af20069
msgid "where ``boo~`` defines the fuzzy search pattern. This will return something similar to:"
msgstr ""

#: ../source/essentials_search.rst:107
# dcf532c5ca6045b8b3deac7cacb16e5e
msgid "Boolean Operators"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:5
# e61f8b59cada4746bab15fd56237aaee
msgid "|search operator| |chef| searches can use the following Boolean operators:"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:11
# c1c26fa85a3746c5995a16298354ea05
msgid "Boolean Operator"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:13
# 3d6932227b1a4375887a29484b055bcc
msgid "``AND``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:14
# 5e336f35ec1c4c3a95bb07c20d8482ff
msgid "Use to find a match when both terms exist."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:15
# 66f19ff4f62f4401aca7f4c917d817aa
msgid "``OR``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:16
# 16af18f22b78410880b518173eb331de
msgid "Use to find a match if either term exists."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:17
# 4f007f830e104fe8b379584fd1e49d34
msgid "``NOT``"
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:18
# 2564908cf09a4c979722a522675e2333
msgid "Use to exclude the term after NOT from the search results."
msgstr ""

#: ../../includes_search/includes_search_boolean_operators.rst:20
# c5ae8ac6683041b9b779fe07f27fed5b
msgid "Boolean operators must be in ALL CAPS. Parentheses can be used to group clauses and to form sub-queries."
msgstr ""

#: ../../steps/step_search_boolean_not.rst:3
# 868e087801e74816b12d258bb8bf6102
msgid "To negate search results using the NOT boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_or.rst:3
# 90a8daf997c2480c801a891841150bcb
msgid "To join queries using the OR boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:3
# 14a3510e9d144a09832e3bf4f23d9692
msgid "To join queries using the AND boolean operator, enter the following:"
msgstr ""

#: ../../steps/step_search_boolean_and.rst:25
# 18a0a84d86534caeb9eafc0c027f965c
msgid "Or, to find all of the computers running on the |windows| platform that are associated with a role named \"jenkins\", enter:"
msgstr ""

#: ../source/essentials_search.rst:117
# e113d6d96ac440e598e8f6b0b25c1727
msgid "Special Characters"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:5
# c9bca6c68895467d9793e83aede447ca
msgid "|search special character| The following characters can be included within the search query syntax, but each occurrence of a special character must be escaped with a backslash (\\)::"
msgstr ""

#: ../../includes_search/includes_search_special_characters.rst:9
# 9fb78f95b4a54cfe8eb0cb028b20d334
msgid "For example::"
msgstr ""

#: ../source/essentials_search.rst:121
# d2a81b85fe8e4bcb9b317ca3663d407c
msgid "Search Targets"
msgstr ""

#: ../../includes_search/includes_search_targets.rst:5
# dc135d4c79b74e3f9047db5bdc75258a
msgid "|search target|"
msgstr ""

#: ../source/essentials_search.rst:125
# a1249d1834ba4fc6a6b20265d794cf75
msgid "Roles in Run-lists"
msgstr ""

#: ../../includes_search/includes_search_role.rst:5
# d05743f1b1ba4f5980d3e74b5d4d9788
msgid "A search query can be made for roles that are at the top-level of a run-list and also for a role that is part of an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:7
# 5868af493cc04f0f94fc9197bc6a126c
msgid "The ``roles`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``roles`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_role.rst:13
# db9bb4e7066f4b6aa6febd7f6c1a8d7c
msgid "Role Location"
msgstr ""

#: ../../includes_search/includes_search_role.rst:15
# 54a021a6fe934008b29188ed29affe1b
msgid "Top-level"
msgstr ""

#: ../../includes_search/includes_search_role.rst:16
# ea3a33a84cab4966b023beab5b67e212
msgid "To find a node with a role in the top-level of its run-list, search within the ``role`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:20
# ad91bdc505f04cce9fb5d5028044b1ab
msgid "where ``role`` (singlular!) indicates the top-level run-list."
msgstr ""

#: ../../includes_search/includes_search_role.rst:21
# ea5f200954cf4b28b3addc7f69f02248
msgid "Expanded"
msgstr ""

#: ../../includes_search/includes_search_role.rst:22
# 10e83fd28793431abc68905cb6ec14c2
msgid "To find a node with a role in an expanded run-list, search within the ``roles`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_role.rst:26
# 9859de0c66f5406facc74e48c4d7427e
msgid "where ``roles`` (plural!) indicates the expanded run-list."
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:3
# 63707998a9124d2595a2dca9f961102f
msgid "To search a top-level run list for a role named \"load_balancer\", enter the following (from |knife|):"
msgstr ""

#: ../../steps/step_search_target_role_top_level.rst:9
#: ../../steps/step_search_target_role_expanded.rst:9
# 564f5ea9fdb4463c8f646ad979f9b5ff
# ee7854ef08fd4c7c9e6440775958548a
msgid "or add the following (to a recipe):"
msgstr ""

#: ../../steps/step_search_target_role_expanded.rst:3
# 21c071df99ec4292887975d70e8a69df
msgid "To search an expanded run list for all nodes with the role \"load_balancer\", enter the following (using |knife|):"
msgstr ""

#: ../source/essentials_search.rst:133
# 33c0e6ca85424bb0bdabd04f82146961
msgid "Nodes"
msgstr ""

#: ../../includes_search/includes_search_node.rst:6
# 813533d82e824a4f8398369815374efd
msgid "A node can be searched from a recipe by using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:10
# 709f6f55595343f48d0c434eff370867
msgid "A wildcard can be used to replace characters within the search query."
msgstr ""

#: ../../includes_search/includes_search_node.rst:12
# f426a6cbb9bf48f798cad07c67e52905
msgid "|chef| saves expanded lists of roles (all of the roles that apply to a node, including nested roles) and recipes to the role and recipe attributes on a node. The expanded lists of roles allows for searching within nodes that run a given recipe, even if that recipe is included by a role."
msgstr ""

#: ../../includes_search/includes_search_node.rst:14
# b6304b3c1ebc4ed9baaf6515505eb6e0
msgid "The ``recipes`` field is updated each time the |chef client| is run; changes to a run-list will not affect ``recipes`` until the next time the |chef client| is run on the node."
msgstr ""

#: ../../includes_search/includes_search_node.rst:20
# 736d8cb72db4486eb38cea041dbbe2de
msgid "Node Location"
msgstr ""

#: ../../includes_search/includes_search_node.rst:22
# 23f13c8a7f724c73a0e4f17cba1ee257
msgid "In a specified recipe"
msgstr ""

#: ../../includes_search/includes_search_node.rst:23
# 0b962c21451a456a80e7bcf83abb8a1d
msgid "To find a node with a specified recipe in the run-list, search within the ``run_list`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:27
# 828d5845cea943039f8674ee701291d5
msgid "where ``recipe`` (singular!) indicates the top-level run-list. Variables can be interpolated into search strings using the |ruby| alternate quoting syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:30
# 16b974d63692489fae1854d8ad695500
msgid "In an expanded run-list"
msgstr ""

#: ../../includes_search/includes_search_node.rst:31
# 2b96cb0f6af146d38645be8d274fd2cd
msgid "To find a node with a recipe in an expanded run-list, search within the ``recipes`` field (and escaping any special characters with the slash symbol) using the following syntax::"
msgstr ""

#: ../../includes_search/includes_search_node.rst:35
# b9518c32407247b29cbb0f69d9b6c750
msgid "where ``recipes`` (plural!) indicates to search within an expanded run-list."
msgstr ""

#: ../../includes_search/includes_search_node.rst:37
# 8232347eab30496f97f77d4d68ed7d73
msgid "If you just want to use each result of the search and don't care about the aggregate result you can provide a code block to the search method. Each result is then passed to the block::"
msgstr ""

#: ../source/essentials_search.rst:137
# 47e6683e87d948ebbf6d0e7f24b1a325
msgid "API Clients"
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# d3f6e03c94d94789a0d31970b33ce275
msgid "|api client description|"
msgstr ""

#: ../../includes_search/includes_search_client.rst:4
# 104b8bc8540641f984a686b4cafdebff
msgid "Sometimes when a role isn't fully defined (or implemented), it may be necessary for a machine to connect to a database, search engine, or some other service within an environment by using the settings located on another machine, such as a host name, IP address, or private IP address. The following simplified settings file is for a web server named \"mysqlchef\" and a database server named mysqlchefutil:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:13
# ef060cf55f904ea78a465292e327a529
msgid "where ``host`` is the private IP address of the database server. Use the following |knife| query to view information about the node:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:19
# 19e038b2150a413b9a94d7b24e46e789
msgid "To access these settings as part of a recipe that is run on the web server, use code similar to:"
msgstr ""

#: ../../includes_search/includes_search_client.rst:27
# 60eb442c24a64784a9eb3c0082007746
msgid "where the \"[0]\" is the 0 (zero) index for the db_server identifier. This is because a single document is returned because the node is being searched on its unique name. The identifier ``private_ip`` will now have the value of the private IP address of the database server (``10.40.64.202``) and can be used in templates as a variable, among other possible uses."
msgstr ""

#: ../source/essentials_search.rst:143
# 128006d7107f4b199414986049fe7b01
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# b01df39352514256b3d297f5c510c188
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# a2b21005c94c4f0ebf16b64a5d0970df
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 12ec8bdcf0994fe38ee7762072fd3089
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""

#: ../source/essentials_search.rst:149
# 59d6b983ebe840ae9903d7c87a8a23d3
msgid "Data Bags"
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 82a89dcee5304d49af75fae054a9f259
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:4
# d4d7d401aaaa4ced8ba6bd381dc95713
msgid "Any search for a data bag (or a data bag item) must specify the name of the data bag and then provide the search query string that will be used during the search. For example, to use |knife| to search within a data bag named \"admin_data\" across all items, except for the \"admin_users\" item, enter the following:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:10
# a1f0c71f6cff464da2f8dc0026a01840
msgid "Or, to include the same search query in a recipe, use a code block similar to:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:16
# 84c0292c10624d5cbfde0b2f0c06e454
msgid "It may not be possible to know which data bag items will be needed. It may be necessary to load everything in a data bag (but not know what \"everything\" is). Using a search query is the ideal way to deal with that ambiguity, yet still ensure that all of the required data is returned. The following examples show how a recipe can use a series of search queries to search within a data bag named \"admins\". For example, to find every administrator:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:22
# b439db8d5d1242a8a28595f081813e6e
msgid "Or to search for an administrator named \"charlie\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:28
# bdad210e0819438f8c625804fe182003
msgid "Or to search for an administrator with a group identifier of \"ops\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:34
# 7e9a05657f82409d8f169d54aa27a715
msgid "Or to search for an administrator whose name begins with the letter \"c\":"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:40
# 84213f331f4d4b83b4ef406057671b71
msgid "Data bag items that are returned by a search query can be used as if they were a hash. For example:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:51
# 81668d56e9c4400f9588e550ab7c5928
msgid "The following recipe can be used to create a user for each administrator by loading all of the items from the \"admins\" data bag, looping through each admin in the data bag, and then creating a user resource so that each of those admins exist:"
msgstr ""

#: ../../includes_search/includes_search_data_bag.rst:72
# 0a41c6ad7cc448d5bde3d767bfbfff22
msgid "And then the same recipe, modified to load administrators using a search query (and using an array to store the results of the search query):"
msgstr ""


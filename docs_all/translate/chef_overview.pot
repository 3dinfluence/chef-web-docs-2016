# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-22 13:27\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# 3e0819bd1a1247fd8ef73bd5a23203e2
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# cbfb93a560df420db4328071b6c92b2d
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# 32149e938a8a4de5a2be6e1c9df63b94
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# ef6fbd64ede447e28f0b639ebe5f7c55
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# 3e69f014efc140319229d29f558a0bfd
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# fa30ca4bd75f430781afe998c2505d4d
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# f79685acba634f91866df24ab9a970be
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 32f2957cf9db4c888fa924087cb68f13
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# 16542616528e4350928422f4913acf09
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 9ad62043356c429ab50e94154b61abd4
# dc0c796812c844f19a4606ee16e7fb1f
# c489aef5bd334adb94274235f0049fc5
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# 03bbe6e0f58a473194b6a0e1e42ffae8
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# 849b4f24ec6348f0923df2609d3c2ffc
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:108
#: ../source/chef_overview.rst:129
#: ../source/chef_overview.rst:146
#: ../source/chef_overview.rst:163
#: ../source/chef_overview.rst:184
# ea62c78feda14e0a90b2c0c2196e5cb5
# 215b558a892c4245addb63cab1e8dbe6
# 655bace73b6a41b1ae555de740256c0b
# e2034b09e9254d38a0a7a9324d23e050
# f3a35c1baeb343c7b4b64ac372772581
# 8d3c1555af0d4c1b8d201cdaa2622738
# ca6875ef33a04026b13cb6df8c8c81e2
# 0520ac44c5fc4bdcae1e7738778bc59b
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:109
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# 07c20b27560d434d9a62e482d7fad39a
# 3bf1431b74ca4a58bbf8a3423b31b7da
# 35c679f60b034710b04d2f28cb09509a
# 3253e86ab203457095cace0cafe4b564
# 576696f7849441b89231eaef1e09522d
# ce33d22ff48242d2aae8d8d2cd519b76
# 1b9c8ba1fd8445df86fb6ae2dff758f1
# cfb98ea2db3a4070ba03b99aa745c392
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# e20a47cb72bd4738a2a1c9c1d742fb7c
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# b7af0d0e44b941bc9d19a92c20496340
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is a any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# 3ff59362681d4de1876552fed49b081e
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 31939efe7d1f4bdaaaa8066e30640eef
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# 8a89c02582974d21972a99356d35b39b
msgid "Registering, and the authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# 5985e28c2e5d4692806f65df266706fa
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 42328068d1874ea7a20abc2729c0483c
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# 90207bbb1e74493da697521300ae2ea4
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 73e4d19f32cd456c8eee38904a522b05
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 7bfb1dfd941b4418b96df8a8210f1f51
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# 69216c638cf54bf985d32281afe12c39
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 35c137c552d1480eba4a90e4b4dda066
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# e1554ae9af2f4638b090a9c416e3ff72
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# 28366453fae24649b413c8f65be6b369
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# 4537b5d8f38f4ab2bb8d27f13d461cbc
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 5a3bb387f857429ea2c073d1f184c2fc
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 8f6ced77f7854d3bb817da7abb2b8219
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# edbb9b35e33c4a41a065792357a4e6f6
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 6a5310069b5b42bf941f6b38e4f64496
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# f268e7e14b5640edb909c80b88f579d1
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:76
# fb9ef43b06bd4843a3741d0ca40af5e6
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:80
# 8a0accb9152347768ce3625b7efcd74d
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# a3baabfbfeba4e3bb3855590acdf86fa
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 8e2a4d35a9b94cdeb2699d8efae7f01a
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# f3ac0cf53f3e4fbb9811f646428a25fe
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# de81b1d2f43a433bb2b9a1ca5ed5289f
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 510506e2b407415d95f6605db2087624
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 1be9ee3ef66044afa84b0fe669357fc1
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# 7f7124670a754175a3c28b2355c8d009
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# fd1c4b0f5f7749b189a546351f0b0972
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# fde4667252d34392b2caee1726130f97
# c483326b8e8e419ea1ca4000edf3bfaa
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
# 38057e02076446acb32ea78b05e8fa5d
# 7a653852d9f7493dba48795cf3ec8d90
# 2e20539889e3455ca4ca0c4c36d97357
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# ac54d1bc96a44fb395a5749b71431ee2
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
# b87cad4200164450b27f89298800e70d
# 013397f536ee4a7dabbd6dfc79cc7f9d
# 57a75ced34dd453482ac4a92b27e5c76
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 181fa341d5624afe9cfe833157d95a30
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# 37ebcfe5048444f489f7367f9c23f3db
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# f6acc76393b14647b175686d08fbe771
# 585210322a0d45319b06ee4479f0d68f
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_knife/includes_knife.rst:15
# d47a458dc32f4ea1b378acf4ea0f2d42
msgid "|note knife quick reference|"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# b7bc2829ff3d46cfb8596e87b553b947
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 6736a29f48734e808c0a1e363d5d63a5
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# 6aa0fa26ad30463193946a22348c469f
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# 46707af494ca4477a965266d13090d38
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# 425a79485f474eea801c8d51134bf773
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 827e9eee67b7486e84320b50043e007e
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:96
# 855b579775524d3d868866a5ab3f97a6
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:99
# 53d882fea69543ec897e53a44ccb065b
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 4ceb4730b55d413f9b69846bc0ab624b
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:102
# d11afb2cd7bb49bbb3cc63f73d2b8ae8
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# de1be823748241d39bca196fe81646d0
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:113
# 049582517ddc45d0a65e4eb357d92725
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 1fa85a08e9be416794c99fc91ba4fd05
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:117
# dc94b0eebaba4e6fa1285f2630856c1c
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 7bb255365fbc4a9f859aa4e055075b01
msgid "|chef open server| is an open source version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the |chef open server| server, and ensuring that the |chef open server| server scales as the local infrastructure it is supporting grows. |chef open server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 67405b2e46924e3b9a1024c8b8a7e364
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:123
# 9f816f3751cb417891a4a75a14b22daf
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 34cc3e9668c14d01858ef5e0eed6e64b
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# 9542d4c36ad04a80bab230624a798e01
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 15a293cc7e73442ea1bfa01a52b9103f
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# efeb54019c7640a8af4d735369269e3c
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:137
# d663def4d2d44efc9b590116425bb9b2
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# 1358577650114e6b827d908c9e54ff5d
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:140
# 1ac3d6d8f3fa4223bb063a0e1b91a5ee
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 94ceef3e94d744409c590fb6f1143b5e
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules that are defined for each attribute. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 72bf44cb905b4765a92c400cbb5cc834
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:154
# 782a2f4716314e7c8529cce4947ed0be
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# a61f5b149e9c485fbb7b876f838b7309
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:157
# 1bc2625b69544839bc1c9444c82a4ab6
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# f92d35ae36694af0b2f15f14187f013d
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# 4c1c799aac944b1a809d900ef42e0428
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 6c97c2621b48496791f309413688cf2b
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:173
# 564f4e21fb6540829e22b5cce14f3492
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# 2728c0736de549c39b5e32ffbe55d0db
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# b66a6157985d406bb98e9300af136513
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# b63ffd22fee345cfa62a69080bf0bde1
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# 886dadf3b1374003ab650ab6f039b66b
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# a4df6b49a17f48779c5f93414104512c
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# b1c26ab0a8444bf4a575debc8d60ef36
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# 77fedd595e2c4a418c0f98fde471b9af
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 5ee4e25a5fb643e5aa624533e31fd130
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# 683c7b1ec02442498515466faa1a8055
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:176
# bda681caf2f44caeaabcd6492010b61c
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:178
# 133e58af12b74d37b34f8a8be01d1d74
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 20779d7e19774caca1fc54fe1c832e6f
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 00f3b716d5564624aa8ba93ea7c90134
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 68a56d09fff74a8fb515d2c0fdb25f9b
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# ad9ba801ac1c488fbab694f75675fffb
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 890e6dccc25449caaad7b4fe69201212
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 4a124529ea2b415abac5036f15120908
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# 8165a32d7040424dac187648e0dd5027
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# 911669276f1f4386b9c0def39a9132f3
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# d507a5e497b94e51803485f6fed89703
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 6f3c44bcbc9749edb9c019998d910c5f
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 7760ebb27440469ea43c6ca781079bf7
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 9f7a1a36f28942379c4d7a31a3afb2d9
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# b9dd3b70566f4eab98df477397a391c6
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:193
# 30a57f44f1294b83855a0dc0d2de4c60
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:195
# 48d526564e1a40b4a318ede6de7b952b
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:197
# 5701117f30854fd0ac3d3f22693d0a57
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:198
# 47445da1ba014ac18a4b542ef00acc64
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:199
# ef3c727dd1f440f9a3e506ad2eb4a497
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:200
# 60bb7a24618d4d7dbf77c41304c5588f
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:201
# 573aa25c4fa04fca9bfe5620043f25e8
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:202
# 403c6563bd2e4d78bec3fdaebb71941f
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:207
# ea21c1e046cc496ebcd2f23326230677
msgid "Conclusion"
msgstr ""

#: ../source/chef_overview.rst:208
# a7164a0049d74cd2896916e0642c1d7f
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../source/chef_overview.rst:210
# 10e4c9caad8d444c92f5da666c44985b
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:213
# c9b79c68cf01410288091b01bcfdf3d6
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:214
# 8b364b07286d441880e3feffc1512141
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:216
# 97e1e25097b94e91a8387ba990dded52
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:217
# fe1d9bf95b9a4f44a3d2a035dbb829a2
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:219
# 5cf5bdc1ee504d29bd397453260a2459
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:221
# 75369042db7f4990a756d1e7d38a75ef
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:222
# 11114211ddbb419f977aa5aabee42521
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:223
# adab71a09ab34fe6aed737089dbc88fd
msgid "|http community cookbooks|"
msgstr ""


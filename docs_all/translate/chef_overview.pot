# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-06 18:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview.rst:34
# 3a57ceb464d143d78f3f4e045c5529a8
msgid "An Overview of |chef|"
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# e36b4e000c0c4883acfd9f2c37943e7d
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/chef_overview.rst:38
# a26a7244f6684b15a696d71d631b5b2c
msgid "The following diagram shows the relationships between the various elements of a |chef| organization, including the nodes, the server, and the workstations. These elements work together to provide |chef| the information and instruction that it needs so that it can do its job. As you are reviewing the rest of this doc, use the icons in the tables to refer back to this image."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:5
# cb23f04ad7e44ee684ad8e04d388b2cc
msgid "|chef| comprises three main elements: a server, one (or more) nodes, and at least one workstation."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:7
# 438c99588e564f7ea36bd49dc4ce41aa
msgid "The |chef server| acts as a hub that is available to every node in the |chef| organization. This ensures that the right cookbooks (and recipes) are available, that the right policies are being applied, that the node object used during the previous |chef| run is available to the current |chef| run, and that all of the nodes that will be maintained by |chef| are registered and known to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:8
# b045955c9775404c8463e7ff2dc72323
msgid "The workstation is the location from which cookbooks (and recipes) are authored, policy data (such as roles, environments, and data bags) are defined, data is synchronized with the |chef| repository, and data is uploaded to the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:9
# 10487c9195354addad233dffcc1c0296
msgid "Each node contains a |chef client| that performs the various infrastructure automation tasks that each node requires."
msgstr ""

#: ../../includes_chef/includes_chef_key_elements.rst:11
# 5097364e58b44fc89e8701b927e62c68
msgid "Cookbooks are also a very important element of |chef| and will be treated as a separate component (alongside the server, nodes, and the workstation) across the documentation. In general, the cookbooks are authored and managed from the workstation, moved to the |chef| server, and then are pulled down to nodes by the |chef client| during each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:44
# 3b607901e26e4c31bca4e21b9526c77f
msgid "The following sections discuss these elements (and their various components) in more detail."
msgstr ""

#: ../source/chef_overview.rst:47
#: ../../includes_knife/includes_knife.rst:6
#: ../../includes_chef/includes_chef_manager.rst:6
# 574bd551559c4d25addddfe5854a8021
# dd1a5bf437dc45e39708aa3fe712691c
# 5003e86c4eef4f25984781d479e332d5
msgid "Nodes"
msgstr ""

#: ../../includes_node/includes_node.rst:5
# e4b58d593228470da843490256108686
msgid "|node description| A node can be physical or cloud-based. A |chef| organization comprises any combination of physical and cloud-based nodes. A |chef client| runs on each node. |ohai| is used to collect data about the system so that it is available to the |chef client| during every |chef| run."
msgstr ""

#: ../source/chef_overview.rst:50
# b5229d1c66ae4597afd6b5246f07dca0
msgid "There are two types of nodes that |chef| can manage:"
msgstr ""

#: ../source/chef_overview.rst:56
#: ../source/chef_overview.rst:69
#: ../source/chef_overview.rst:89
#: ../source/chef_overview.rst:108
#: ../source/chef_overview.rst:129
#: ../source/chef_overview.rst:146
#: ../source/chef_overview.rst:163
#: ../source/chef_overview.rst:184
# 5b8645d6044a43f09ed66dc98fafd446
# 5f6d0ba850ff43e4a3c3d71b3a17367b
# e3f993fc8c154a8bb81325f3a1fbf950
# 9809138973ee427db882c037938cce1f
# 11c3301a0638430e8f2b7b3381240be8
# 6c22a537682247549be90f3f157f9466
# 4098f463810943bc89f2c722f96a696c
# 18a4268544974ca9a6b22019009f1935
msgid "Feature"
msgstr ""

#: ../source/chef_overview.rst:57
#: ../source/chef_overview.rst:70
#: ../source/chef_overview.rst:90
#: ../source/chef_overview.rst:109
#: ../source/chef_overview.rst:130
#: ../source/chef_overview.rst:147
#: ../source/chef_overview.rst:164
#: ../source/chef_overview.rst:185
# 8969f43bab814620a83fc4224593175d
# 38f701aefc0f48bb8e35f1a7fb229311
# fe54d7646417403a9b5db38e328e037b
# 58b827aedc3641c08fc2b28c0d1eaf6c
# 88ffed73e3e44401b2884ff31d802b4a
# 1d6eadcdccb94be0a65865c124396b1e
# 16217136abe64373a38ce746b482bfaf
# c3e38f027f9045fe9b27cc0ebb94cf4a
msgid "Description"
msgstr ""

#: ../../includes_node/includes_node_cloud.rst:4
# b00159658cc448049a9edec08473a2ea
msgid "A cloud-based node is hosted in an external cloud-based service, such as |amazon vpc|, |openstack|, |rackspace|, |google compute engine|, |linode|, or |windows azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, |chef| can be used to deploy, configure, and maintain those instances."
msgstr ""

#: ../../includes_node/includes_node_physical.rst:4
# 0f347213b7b44b929a20bd4faec3efbe
msgid "A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is a any active device attached to a network that can run a |chef client| and communicate with a |chef server|."
msgstr ""

#: ../source/chef_overview.rst:63
# ee36e5d9edca420a81ef3d3a8dff4e5f
msgid "Some important components on nodes include:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 77944e96dc25420f8330e692185f6a4a
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# d3b78714c9ef466a8b5cda3de4f94fed
msgid "Registering, and the authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# c3c946fed81644e3b5e1a5f905555d5c
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# 62b8d3bc962b4580a2354b34c87097c9
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# cc0a2df46c314a1fbc5b7e8db8613426
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 139b69d6ca5a4ccdab4f8eb4e4a2b948
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 9f7f1a614870457681b7712f9e1ae278
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:4
# dfde1c8142564b4f80dec046fc8e44ba
msgid "|ohai| is a tool that is used to detect certain properties about a node's environment and provide them to the |chef client| during every |chef| run. The types of properties |ohai| reports on include:"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:6
# 1a5ee79c59a84d9a83c094b6bdf72835
msgid "Platform details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:7
# 861281fc22014780b5ab5e034ae5423d
msgid "Networking usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:8
# fa2ae9031f494129803678c82523d34f
msgid "Memory usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:9
# cdfaf77c739541a09a93f8bdb0c26191
msgid "Processor usage"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:10
# 1f5a839111ca410395c70ad6e8bec4ec
msgid "Kernel data"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:11
# 4163b353e64c47d4b267100809968bdf
msgid "Host names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:12
# cc5247da64f54bf4a558cd3108f3c987
msgid "Fully qualified domain names"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:13
# 316ecc41b63b4fdfa8d543ab6777af0d
msgid "Other configuration details"
msgstr ""

#: ../../includes_ohai/includes_ohai.rst:15
# 9917370cf74045c69e67343e088ed65d
msgid "When |chef| configures the node object during each |chef| run, these attributes are used by the |chef client| to ensure that certain properties remain unchanged. (These properties are also referred to as ``automatic`` attributes.) |ohai| is part of the required configuration on each node that is registered with the |chef server|."
msgstr ""

#: ../source/chef_overview.rst:76
# c857a68f6fdf465da6b27ff6e809ddea
msgid "|chef| uses RSA public key-pairs to authenticate a |chef client| with the |chef server| every time a |chef client| needs access to data that is stored on the |chef server|. This prevents any node from accessing data that it shouldn't and ensures that only nodes that are properly registered with the |chef| server can be managed by |chef|."
msgstr ""

#: ../source/chef_overview.rst:80
# 515f29961f944c9497f7b51613efd7ff
msgid "Workstations"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:5
# 7652bb086c8c40d38495e51f2bd3b6ed
msgid "A workstation is a computer that is configured to run |knife|, to synchronize with the |chef| repository, and interact with a single |chef server|. The workstation is the location from which most users of |chef| will do most of their work, including:"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:7
# 34154519f7fd4c2193c94e9312a8a30a
msgid "Developing cookbooks and recipes (and authoring them using |ruby|)"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:8
# 36344a3ed56e4e178025077132b5caa1
msgid "Keeping the |chef| repository synchronized with version source control"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:9
# 5aee59c4d62e44e58bf37a182b99614e
msgid "Using |knife| to upload items from the |chef| repository to the |chef server|"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:10
# 9146e475fc64462ab695d2c4fa428c85
msgid "Configuring organizational policy, including defining roles and environments and ensuring that critical data is stored in data bags"
msgstr ""

#: ../../includes_workstation/includes_workstation.rst:11
# 76ed67f07a444e3aa545a53c8ea5f29d
msgid "Interacting with nodes, as (or when) required, such as performing a bootstrap operation"
msgstr ""

#: ../source/chef_overview.rst:83
# 0574d02d3a8e45d2a5372c1d08cd0ca9
msgid "Some important components of workstations include:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:4
# f594260a3f524c2e986b08ab3dd71471
msgid "|knife| is a command-line tool that provides an interface between a local |chef| repository and the |chef server|. |knife| helps users of |chef| to manage:"
msgstr ""

#: ../../includes_knife/includes_knife.rst:7
#: ../../includes_chef/includes_chef_manager.rst:7
# c26f85b3ee3d4203b4dae37ae4e3d989
# bdc7d49362b34b38bc5d488c9aad9b33
msgid "Cookbooks and recipes"
msgstr ""

#: ../../includes_knife/includes_knife.rst:8
#: ../../includes_repository/includes_repository.rst:8
#: ../../includes_chef/includes_chef_manager.rst:8
# fa7d2b4f3a8f4c3ab3f02d08cab011a5
# bb9866d63d2f4aca901be25a05e2c42d
# b424b27a0e124a2a85e3770e710aaf02
msgid "Roles"
msgstr ""

#: ../../includes_knife/includes_knife.rst:9
# 4a0b1a36a7c947449d8cec4fcba70ffd
msgid "Stores of JSON data (data bags), including encrypted data"
msgstr ""

#: ../../includes_knife/includes_knife.rst:10
#: ../../includes_repository/includes_repository.rst:10
#: ../../includes_chef/includes_chef_manager.rst:10
# bea052c5961a48e7a21bde2e469a1884
# abb1d1864d994c30a4d60a395ea6926f
# ff35a841e36a457eb898ab929798a039
msgid "Environments"
msgstr ""

#: ../../includes_knife/includes_knife.rst:11
# 670bf31f0656427eb42881809464688f
msgid "Cloud resources, including provisioning"
msgstr ""

#: ../../includes_knife/includes_knife.rst:12
# eb7cc4af4e5849f3895af4a9cbb876f8
msgid "The installation of |chef| on management workstations"
msgstr ""

#: ../../includes_knife/includes_knife.rst:13
#: ../../includes_chef/includes_chef_manager.rst:11
# 737bef78b23b4a4381b1221a90a39263
# 2f78132c31944fd2a777fd5dcde292e7
msgid "Searching of indexed data on the |chef server|"
msgstr ""

#: ../../includes_knife/includes_knife.rst:15
# 4d3639d035894060aaff3696ff38bb9a
msgid "|note knife quick reference|"
msgstr ""

#: ../../includes_repository/includes_repository.rst:5
# 806bd2f0f8e0410d8b02fe7ba150c5ec
msgid "The |chef| repository is the location in which the following data objects are stored:"
msgstr ""

#: ../../includes_repository/includes_repository.rst:7
# 9b543c888a4246a5ba38b3b3996ab340
msgid "Cookbooks (including recipes, versions, cookbook attributes, resources, providers, libraries, and templates)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:9
# ec21aa1a3e614cf1bb5e10c40d784e3c
msgid "Data bags"
msgstr ""

#: ../../includes_repository/includes_repository.rst:11
# b81097c9676f49ef86f4e9d07afae17e
msgid "Configuration files (for clients, workstations, and servers)"
msgstr ""

#: ../../includes_repository/includes_repository.rst:13
# c3ef0c60267143c6bdd63dd61c055b72
msgid "The |chef| repository is located on a workstation and should be synchronized with a version control system, such as |git|. All of the data in the |chef| repository should be treated like source code."
msgstr ""

#: ../../includes_repository/includes_repository.rst:15
# 02af6ce9b22e4347a1de0da403b1d891
msgid "|knife| is used to upload data to the |chef server| from the |chef| repository. Once uploaded, that data is used by |chef| to manage all of the nodes that are registered with the |chef server| and to ensure that the correct cookbooks, environments, roles, and other settings are applied to nodes correctly."
msgstr ""

#: ../source/chef_overview.rst:96
# de9f28e6540e4fa3ae319b7dbc8922a3
msgid "|chef| assumes that system administrators and developers know best about how the infrastructure should be put together. |chef| makes as few decisions on its own as possible. When a decision must be made, |chef| uses a reasonable default setting that can be easily changed by the system administrators and developers, most often by defining attributes in cookbooks that take precedence over the default attributes present on nodes."
msgstr ""

#: ../source/chef_overview.rst:99
# 6b8916012f88486ab1299d136d3b2da1
msgid "Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:5
# 783505262fdd40458fdbedca1b51171f
msgid "The |chef server| acts as a hub, ensuring that the right cookbooks are used, that the right policies are applied, that all of the node objects are up-to-date, and that all of the nodes that will be maintained are registered and known to the |chef server|. The |chef server| distributes configuration details (such as recipes, templates, and file distributions) to every node within the organization. |chef| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview.rst:102
# 01f615c7dc8948548f4e59058238a573
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 25c5f9d848794ce6ab4a470d8809ad00
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview.rst:113
# a5990a2074bf4587b9353a0988127334
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# f71565d135934ce48a105fdc5d1eff5d
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview.rst:117
# 512cc8164e4145e9ae0eede535e1b686
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# 344b88d1e88a41c1bb3122b55b082a0c
msgid "|chef open server| is an open source version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the |chef open server| server, and ensuring that the |chef open server| server scales as the local infrastructure it is supporting grows. |chef open server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../../includes_chef/includes_chef_api_client.rst:5
# 93671c8478ee4d5baa5bc23d4617dd4f
msgid "|api client description|"
msgstr ""

#: ../source/chef_overview.rst:123
# 7bf17925cc6246b58ac354cc31eaf2a4
msgid "In addition to node objects, policy, and cookbooks, a |chef server| includes:"
msgstr ""

#: ../../includes_search/includes_search.rst:4
# 5793b4b27c48428f813009ed754cff35
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles. |chef| has a defined query syntax that supports search patterns like exact, wildcard, range, and fuzzy. A search is a full-text query that can be done from several locations, including from within a recipe, by using the ``search`` sub-command in |knife|, by using the search functionality in the |chef manager|, or by using the ``/search`` or ``/search/INDEX`` endpoints in the |api chef server|. The search engine is based on |apache solr| and is run from the |chef server|."
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:4
# c907e2069653437582352a63daf4d101
msgid "The |chef| manager is a web-based interface that provides users of |chef| a way to manage the following from the |chef server|:"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:9
# 86f1068b97ef4c40b4eb1bbb564c1aa0
msgid "Stores of |json| data (data bags), including encrypted data"
msgstr ""

#: ../../includes_chef/includes_chef_manager.rst:12
# 9411121a137a4dd8a7a1c6ce5a9a118f
msgid "User accounts and user data for the individuals who have permission to log on to and access the |chef server|"
msgstr ""

#: ../source/chef_overview.rst:137
# 0387568de3594298b5608118c72a7cb3
msgid "Node Objects"
msgstr ""

#: ../../includes_node/includes_node_object.rst:4
# f0e257ea58db4326875e0343f1d2e3b2
msgid "For |chef|, two important aspects of nodes are groups of attributes and run-lists. An attribute is a specific piece of data about the node, such as a network interface, a file system, the number of clients a service running on a node is capable of accepting, and so on. A run-list is an ordered list of recipes and/or roles that are run in an exact order. The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview.rst:140
# 774b7f873af34dbb8e96b595a7db1e64
msgid "Some important node objects include:"
msgstr ""

#: ../../includes_node/includes_node_attribute.rst:4
# 9408e2ebdd5c41a39ef5e1e2ccda149f
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a desired application setting, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. Attributes can be maintained in a variety of ways, such as by re-loading a cookbook (that contains new attributes), by using |knife|, or by using JSON data. During a |chef| run, the |chef client| gets attributes from |ohai|, the node object on the |chef server|, roles, recipes, and environments. These attributes are compared and then updated based on attribute precedence rules that are defined for each attribute. At the end of a |chef| run, the |chef client| will save the node object (and all of its attributes) to the |chef server| so they can be indexed for search."
msgstr ""

#: ../../includes_node/includes_node_run_list.rst:4
# 96f7e77b842f4bae8a68e94aecc40c22
msgid "A run-list is an ordered list of roles and/or recipes that are run in an exact order. A run-list is always specific to the node on which it runs, though it is possible for many nodes to have run-lists that are similar or even identical. The items within a run-list are maintained using |knife| and are uploaded to the |chef server| and stored as part of the node object for each node. |chef| always configures a node in the exact order specified by its run-list and will never run the same recipe twice."
msgstr ""

#: ../source/chef_overview.rst:154
# 976f0e2eff0041f3925f8cf48bc22bde
msgid "Policy"
msgstr ""

#: ../../includes_chef/includes_chef_policy.rst:4
# fdb7739e6e5146ee8b4b7514b16a8489
msgid "Policy settings can be used to map the capabilities of |chef| to business and operational requirements, such as process and workflow. Roles define server types, such as \"web server\" or \"database server\". Environments define process, such as \"dev\", \"staging\", or \"production\". Certain types of data, such as passwords, user account data, and other sensitive items can be placed in data bags, which are located in a secure sub-area of |chef| that can only be accessed by nodes that have the correct |ssl| certificates."
msgstr ""

#: ../source/chef_overview.rst:157
# bf11bd90ea244002a99b8efd902d71a3
msgid "Some important aspects of policy include:"
msgstr ""

#: ../../includes_role/includes_role.rst:4
# 50d0581c149540c89861277daa920cf9
msgid "|role description| Each role consists of zero (or more) attributes and a run list. Each node can have zero (or more) roles assigned to it. When a role is run against a node, the configuration details of that node are compared against the attributes of the role, and then the contents of that role's run list are applied to the node's configuration details. When a |chef client| runs, it merges its own attributes and run lists with those contained within each assigned role."
msgstr ""

#: ../../includes_data_bag/includes_data_bag.rst:4
# e57ee83d93a74d04b2ba11cc9ae58360
msgid "|data bag description| A data bag is indexed for searching and can be loaded by a recipe or accessed during a search. The contents of a data bag can vary, but they often include sensitive information (such as database passwords)."
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 249d231fdec849f0990c88e32110c55f
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/chef_overview.rst:173
# 80a0593df21b44f5aa03038cdb2e4dd1
msgid "Cookbooks"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:4
# f580ebabded94adbb186a5500d60e6b1
msgid "A cookbook is the fundamental unit of configuration and policy distribution in |chef|. Each cookbook defines a scenario, such as everything needed to install and configure |mysql|, and then it contains all of the components that are required to support that scenario, including:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:6
# 561a0a6728c0450ab0bcfb51c740cf3d
msgid "Attribute values that are set on nodes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:7
# e0325e8dc4c148fb9f16b7b82eacb158
msgid "Definitions that allow the creation of reusable collections of resources"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:8
# ab6f0f9ce79b40a1967d6eece367d7ce
msgid "File distributions"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:9
# 72c68cda3a0c49938f64b35e1d740365
msgid "Libraries that extend |chef| and/or provide helpers to |ruby| code"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:10
# dc07ce5fcf5e4ba6aa5e9c9b805effab
msgid "Recipes that specify which resources to manage and the order in which those resources will be applied"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:11
# abd3984e4236473386eaaeba3ea3afeb
msgid "Custom resources and providers"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:12
# 1164120a14ca4e34af37dc0a550503f3
msgid "Templates"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks.rst:13
# ee4b7fdda27740519043abeab03ca2a2
msgid "Metadata about recipes (including dependencies), version constraints, supported platforms, and so on"
msgstr ""

#: ../source/chef_overview.rst:176
# c5f4aeed43494206a6f2a796b8f0c844
msgid "|chef| uses |ruby| as its reference language for creating cookbooks and defining recipes, with an extended DSL for specific resources. |chef| provides a reasonable set of resources, enough to support many of the most common infrastructure automation scenarios; however, this DSL can also be extended when additional resources and capabilities are required."
msgstr ""

#: ../source/chef_overview.rst:178
# 4906b44fea964e85a2db5454bb75364f
msgid "Some important components of cookbooks include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 24b6d71ff1374490a62b56bdb5ee58b4
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:4
# 07ae9ab9a97d4a0b8608bd33c171f92c
msgid "A recipe is the most fundamental configuration element within the |chef| environment. A recipe:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:6
# 37cefa632a314851a25e31a56394bb99
msgid "Is authored using |ruby|, which is a programming language designed to read and behave in a predictable manner"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:7
# 23d380420348468d9401fc1337becb36
msgid "Is mostly a collection of resources in a |ruby| syntax with some helper code around it"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:8
# 26049b347ce04b44a59159600282c9c3
msgid "Must define everything that is required to configure part of a system"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:9
# 6f18229a10d94b3fb5f5c82010377d17
msgid "Must be stored in a cookbook"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:10
# e9951f547ec34d74a84f19d21b09d6dc
msgid "May be included in a recipe"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:11
# d91e488ce72a447f9a0c26cd6d1a7a03
msgid "May use the results of a search query and read the contents of a data bag (including an encrypted data bag)"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:12
# 512d1e379002466c8fde814063daba42
msgid "May have a dependency on one (or more) recipes"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:13
# 94df9e51080d42038898107d64927a91
msgid "May be tagged to facilitate the creation of arbitrary groupings that exist outside of the normal naming conventions an organization may have"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:14
# 73dc65daeda342d0a1648d9b36501111
msgid "Must be added to a run-list before it can be used by |chef|"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_recipe.rst:15
# 8d52a1fdd31f4eb3aa8de57aeee4f0e9
msgid "Is always executed in the same order as listed in a run-list"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_version.rst:4
# fd96da3de8ef40b9921380f3840b0a50
msgid "A cookbook version represents a specific set of functionality that is different from the cookbook on which it is based. A version may exist for many reasons, such as ensuring that the correct version of third-party component is being used appropriately or providing an update to a cookbook that fixes a bug or adds a new improvement. A cookbook version can be defined using syntax and operators, it can be associated with environments, cookbook metadata, or run-lists, and it can be frozen (to prevent unwanted updates from being made). A cookbook version is handled just a cookbook with regard to how the repository sees a cookbook version, how cookbook versions are stored on the |chef server|, how cookbook versions are pushed out to nodes, and how cookbook versions are used during a |chef| run."
msgstr ""

#: ../source/chef_overview.rst:193
# 35626dabc30f4e858f9cd747ddaea4ed
msgid "|chef| will run a recipe only when asked. When |chef| runs the same recipe more than once, the results will be the same system state each time. When a recipe is run against a system, but nothing has changed on either the system or in the recipe, |chef| won't change anything."
msgstr ""

#: ../source/chef_overview.rst:195
# 94846dcaa65e429690836704f7c333e8
msgid "In addition to attributes, recipes, and versions, the following items are also part of cookbooks:"
msgstr ""

#: ../source/chef_overview.rst:197
# af8fe04e91cd48de8adbc81b5f131532
msgid "Resources and providers. A resource is a package, a service, a group of users, and so on. A resource tells |chef| which provider to use during a |chef| run for various tasks like installing packages, running |ruby| code, or accessing directories and file systems. The resource is generic: \"install program A\" while the provider knows what to do with that process on |debian| and |ubuntu| and |windows|. A provider defines the steps that are required to bring that piece of the system into the desired state. |chef| includes default providers that cover all of the most common scenarios."
msgstr ""

#: ../source/chef_overview.rst:198
# feb1a81251be40bb971a56cd098d8d91
msgid "File distributions. A file distribution is a specific type of resource that tells a cookbook how to distribute files, including by node, by platform, or by file version."
msgstr ""

#: ../source/chef_overview.rst:199
# 3f3750b9d75d49bcb311fd812c1fb8c6
msgid "Definitions. A definition is used to create new resources by stringing together one (or more) existing resources."
msgstr ""

#: ../source/chef_overview.rst:200
# 2708ee1db5e448af8d181338f4f6950e
msgid "Libraries. A library allows the use of arbitrary |ruby| code in a cookbook, either as a way to extend the |chef| language or to implement a new class."
msgstr ""

#: ../source/chef_overview.rst:201
# cb5f9f30229a426d8f859337621be8a6
msgid "Templates. A template is a file written in markup language that uses |ruby| statements to solve complex configuration scenarios."
msgstr ""

#: ../source/chef_overview.rst:202
# 8b75821fb91846209e5003734842d75b
msgid "Configuration files. A metadata file to ensure that each cookbook is correctly deployed to each node."
msgstr ""

#: ../source/chef_overview.rst:207
# 49d5e0c439494ed19b10c23b4db4cba3
msgid "Conclusion"
msgstr ""

#: ../source/chef_overview.rst:208
# 3bef780e92664284b93b01e5b220875d
msgid "The key underlying principle of |chef| is that you (the user) knows best about what your environment is, what it should do, and how it should be maintained. |chef| is designed to not make assumptions about any of those things. Only the individuals on the ground---that's you and your team---understand the technical problems and what is required to solve them. Only your team can understand the human problems (skill levels, audit trails, and other internal issues) that are unique to your organization and whether any single technical solution is viable."
msgstr ""

#: ../source/chef_overview.rst:210
# 5ea1752438d44490af869d5db0eede9a
msgid "The idea that you know best about what should happen in your organization goes hand-in-hand with the notion that you still need help. It is rare that a single individual knows everything about a very complex problem, let alone knows all of the steps that may be required to solve them. The same is true with tools. |chef| provides help with infrastructure management. And |chef| can help solve very complicated problems. |chef| also has a large community of users who have a lot of experience solving a lot of very complex problems. That |chef| community can provide knowledge and support in areas that your organization may not have and (along with |chef|) can help your organization solve any complex problem."
msgstr ""

#: ../source/chef_overview.rst:213
# 6b799e8368334a93a6d32bc06bb4dd8e
msgid "For more information ..."
msgstr ""

#: ../source/chef_overview.rst:214
# 0af05a108c584054bf497595c47a8cde
msgid "For history of |chef|, where it came from and how it evolved, watch these two (short) videos:"
msgstr ""

#: ../source/chef_overview.rst:216
# 14c3d638b72d41198b564aa45ada9435
msgid "Part one: |http opscode youtube short part one|"
msgstr ""

#: ../source/chef_overview.rst:217
# 36a0af9b5e1d4f9e9fa7b3eb2c45e2d7
msgid "Part two: |http opscode youtube short part two|"
msgstr ""

#: ../source/chef_overview.rst:219
# 4cb3a3fcae1647f5a196033c58363cee
msgid "For more information about |opscode|, cookbooks for |chef|, and the |chef| community:"
msgstr ""

#: ../source/chef_overview.rst:221
# 31e300de47bf451da632b876354b1dfe
msgid "|http opscode|"
msgstr ""

#: ../source/chef_overview.rst:222
# e9c605cdc1404a20b7d04e6a58808116
msgid "|http community|"
msgstr ""

#: ../source/chef_overview.rst:223
# d9f06454d33e4a4f9e688adb9d4fe00d
msgid "|http community cookbooks|"
msgstr ""


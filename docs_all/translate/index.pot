# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/index.rst:34
# ee57e973660541e7a17c7008ca0811b7
msgid "Chef Topics"
msgstr ""

#: ../source/index.rst:36
# ab8a989251d84537bad98382cbd52c73
msgid "This page contains the same, exact set of topics that are available from docs.opscode.com. These pages are organized differently. Instead of being broken down into smaller subsets of topics, they are consolidated into single-page groupings. For example, docs.opscode.com has individual URLs for every resource, |knife| sub-command, and lightweight resource, whereas this set of topics has three URLs, one each for resources, |knife|, and lightweight resources. If you want everything about search functionality in a single URL, use this one. If you only need to see information about Boolean operators, then this topic does that: http://docs.opscode.com/essentials_search_boolean_operators.html."
msgstr ""

#: ../../includes_chef/includes_chef.rst:5
# 2fe9fc12b6544215af1afe9d15c4cad3
msgid "|chef| is a systems and cloud infrastructure automation framework that makes it easy to deploy servers and applications to any physical, virtual, or cloud location, no matter the size of the infrastructure. |chef| relies on abstract definitions (known as cookbooks and recipes) that are written in |ruby| and are managed like source code. Each definition describes how a specific part of your infrastructure should be built and managed. |chef| then applies those definitions to servers and applications, as specified, resulting in a fully automated infrastructure. When a new server comes online, the only thing that |chef| needs to know is which cookbooks and recipes to apply."
msgstr ""

#: ../source/index.rst:40
# 1a4e27ee5c8a423c8d7a6b4cbcaefc88
msgid "**Getting Started:** :doc:`chef_overview` | :doc:`just_enough_ruby_for_chef`"
msgstr ""

#: ../source/index.rst:41
# cc44bc7acdd545529774b0cf01f50d35
msgid "**Essentials:** :doc:`essentials_chef_client` | :doc:`essentials_cookbook_attribute_files` | :doc:`essentials_cookbook_definitions` | :doc:`essentials_cookbook_files` | :doc:`essentials_cookbook_libraries` | :doc:`essentials_cookbook_lwrp` | :doc:`essentials_cookbook_metadata` | :doc:`essentials_cookbook_recipes` | :doc:`essentials_cookbook_resources` | :doc:`essentials_cookbook_templates` | :doc:`essentials_cookbook_versions` | :doc:`essentials_data_bags` | :doc:`essentials_environments` | :doc:`essentials_handlers` | :doc:`essentials_node_object` | :doc:`essentials_repository` | :doc:`essentials_roles` | :doc:`essentials_search`"
msgstr ""

#: ../source/index.rst:42
# 42bd8440795a444b88d02e81c9379464
msgid "**Install Chef:** :doc:`install_workstation` | :doc:`install_workstation_open_source` | :doc:`migrate_to_hosted`"
msgstr ""

#: ../source/index.rst:43
# 79428fd0aa744c1f8acd45efac5a4859
msgid "**Manage Chef:** :doc:`manage_server_hosted` | :doc:`manage_server_open_source`"
msgstr ""

#: ../source/index.rst:44
# 8a209b31bed94123bdd67f0faa166330
msgid "**Reference:** :doc:`chef-client </chef_client>` | :doc:`Knife </knife>` | :doc:`Knife Plug-ins </knife_plugins>` | :doc:`ohai` |  :doc:`Resources and Providers </resources>`"
msgstr ""

#: ../source/index.rst:45
# 1d5cc55ad9c64b8ea324fd851e4f9d5a
msgid "**Config Files:** :doc:`client_rb` | :doc:`knife_rb` | :doc:`metadata_rb` | :doc:`server_rb` | :doc:`solo_rb` | :doc:`solr_rb`"
msgstr ""

#: ../source/index.rst:46
# ca343fd218644e7a8bc74e0b34cc6ce4
msgid "**APIs and DSLs:** :doc:`api_chef_server` | :doc:`api_cookbooks_site` | :doc:`dsl_recipe`"
msgstr ""


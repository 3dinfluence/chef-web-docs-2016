# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-07 18:23\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:3
# 14cf80c0f53543feba0e535e13a5c1ff
msgid "Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# a1ce78f5ae5d4fc1b38d720f209430f7
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef run|."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# d56c549221864f5db11a2cfbd1507b70
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# ee62dd7013074cd48a9fc2ce0208f57e
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 4bb78b2b0430470fa396f47c8edcb646
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:38
# 0cc43a36b4da47d9b0896e0503db2032
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# 6cd77ca7e7e5441895fc70f8f2fb5d8e
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# 142a696d3ef94b70b942b252d5dc7a0e
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# eaac2b9e2bba40138cca369db6f0243a
# 2e8dfc7ae4174df28f085afd1d58ff39
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# 245425da170641e4960c4e89d6f3c979
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# c01d7a0d513e4359bdd721dd4a22d4a4
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# 4badcd3e3ce543c4b264c37dae42bef8
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 6c65a835b84a4cf4ac4c1c1fdb0a6f12
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# d437a4fe142048e7931a3516f9a3780c
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# 91a57cbe3be4467692deba65d4c1f591
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# ef6f1d85ee9b4b2ebd3e25d7d1e34945
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# 8c36136067174cf7b55594a4a6e88259
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# c34f09d69f7942fcac525ebef3686ed8
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# d288cb22263b42a5b38c169f216ca5cb
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# bcda0a2a73c7442db6f252b86cd335de
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# 4839a7ff756143bf92380da84c23f487
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# dea62647d8e64444aa0b0cf058bfddd0
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# 564bd8745229415fb7f24c35b6a538b8
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 14f0bd290c61406bb6a61e00b7fcb6d6
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 8f65aeebb7844714abd9f11f92b1dcc3
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# e77d538b291142f9b5d59ce8b2fc27d7
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# 4d7db6c2cf8d400cb2ca202d50b1178e
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# f663e4f1e0f4444d8d4dc80a5429bb2f
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# 7597d8c37ae7442681fc778bbba3c57c
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 75da102e53b847b8b91378728e53b32b
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# 47058876da674af5a55c23d3d4d36031
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:42
# 31b64a3555954673b7b9cc1396b76ee2
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# 420e27bfec1545eba9b04bf4b85fc205
msgid "A custom handler can be created to do just about anything. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes. A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|."
msgstr ""

#: ../source/essentials_handlers.rst:46
# 59ad6479b0f5426d8c5eaaab04273963
msgid "Example: Send email when the |Chef| run fails"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 9f0e7f9c09324bcd91d5534343abe6e4
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# 39104119caff451c990682917e1c8fa3
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:50
# 72a1be93747b46ff93e78f4a96763638
msgid "Installing and Configuring a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# 98907db5b93f4a8290d8f1b48cdf3f3d
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:54
# 435b3d0a32064c9a9efd09649a17b1ea
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# 56af5a97f8bc4c319d38c5d4c8b94796
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:58
# 6e282318827645d9a41417d0fc6ecd82
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# 6f234b7ac971404b9ede5eafd7988df4
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# e3ec33a2908c4425afc15e172e424f71
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 9b1c0e7b277744bba4bd4adda850cfee
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 02481b4b2f2c416eb44d5f0bebaa8398
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# 5497cc2f8e7f472e93365c3f567d8557
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# 30e28c8ae310462c9b9e6031768de192
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:62
# 05a519dbccb6460e9ecf9dcf1a3ef903
msgid "Distributing Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# 6faec363ab134dc2b8ca2212df27c59f
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:66
# 030a6be986374bbca08ae79bcd2dfa24
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# c1bd94ad39cd43c09cb280ff18bf71a4
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:70
# 0cebbbf452bf4e06b4965facfb9cdcb6
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# 0c65dc85db7a4a36a7f40191ca6dc0e4
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# b3a374db701243c9af3d130678314a4c
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# f65ceaa51299439bb364ed3959c800f2
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:74
# 0f42900a6c224ecc9d39551bf3d4b13c
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# 25e5029facc447fe82df1d0af9baa2f0
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# 6d1910424df4404597bb4d9e70d225b3
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# 56431da9905f47e2a1c51718b5dabef9
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# 9474f5ee10d94f319ca5e2fcc92c78ef
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. The |airbrake| handler is available from: https://github.com/morgoth/airbrake_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 1d3212edfc2e43bab731bc629bc24807
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# 98556b53e8b14724b236e89497a4fe81
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. The asynchronous resources handler is available from: https://github.com/rottenbytes/chef/tree/master/async_handler.  Blog post: http://www.rottenbytes.info/2011/07/28/asynchronous-reporting-with-chef/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# 0f3dfaa2602447bfbf5bcbdc538b99c9
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# 6aca30bd67ba42029fa32b32351ee064
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. The |campfire| handler is available from: https://github.com/ampledata/chef-handler-campfire."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# 7a2dc81cc01741f38f799948f60eb4e2
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# fcf97d54c5464df097e128e3faaba1ce
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. The |cloudkick| handler is available from: https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# e74fee9fea5f483ea15f14521865db69
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# 09d680ac78ac4ded80f0b4c7eeae2abb
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. The |datadog| handler is available from: https://github.com/DataDog/chef-handler-datadog.  See: http://www.miketheman.net/2011/11/28/ask-your-systems-whats-going-on/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# 540d375807c2404bac165f3abb59bac9
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# 5c58488aa24142d2ab90436108cafded
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. The |graphite| handler is available from: https://github.com/imeyer/chef-handler-graphite/wiki."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# 89b9465fd883448c8377e51a5a264ece
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# 20f935f33a8843119ea4ff8f52904584
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. The |graylog| handler is available from: https://github.com/jellybob/chef-gelf/."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# b9c26fb687914119b2c3998cd51b191a
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# 78025b2bf21343029e85ee3935ce1f00
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. The |growl| handler is available from: http://rubygems.org/gems/chef-handler-growl."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# 6aa26aa0f29d4aae8a0dbb00887ddcf4
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# ce540bf261ba4c5990f079abf72a709b
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. The |hipchat| handler is available from: https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# 7b8cffd4557a4f128a2fcfafd6aff9ce
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# f95c0e79dd2c432dbb5bba349bab5318
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. The |irc snitch| handler is available from: https://rubygems.org/gems/chef-irc-snitch."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# dafdffe4f3094d91bd4ab136be7a6a5b
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# 263fdbb1fc2d4c57a7b7607ba14eb169
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. The |nagios nsca| handler is available from: https://github.com/ranjibd/nsca_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# 86b11253187042b8bde67074ab675049
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# a54aed31cecc48e4acd2bd63132650e2
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. The Simple Email handler is available from: https://rubygems.org/gems/chef-handler-mail.  Blog Post: http://jtimberman.posterous.com/a-simple-report-handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 55ee645a1a504868b77ebdce8852b871
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# b73d3b0d939d4e4480760c69b5c15928
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. The |splunk storm| handler is available from: http://ampledata.org/splunk_storm_chef_handler.html."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# 90672837ef164e2c922b1cf46c2d0a45
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# fa79d23894bf47e69e3855b85ccd6d21
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. The updated resources handler is available from: https://rubygems.org/gems/chef-handler-updated-resources."
msgstr ""


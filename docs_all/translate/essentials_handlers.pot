# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-23 17:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:34
# 4b6db647c4704987a95a06f3bd71c901
msgid "Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 536393636c064a8182f8962048d311df
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef run|."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# d4b2982de585478a9fa178a5b61976e1
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# a4f8bdcf4ef84d60878c746d564ecb4e
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 3362d91ac3b24f78bec2345bf1f77b9e
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:39
# 1f35e06e50ba4e0c966233cb6e3731f0
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# dc8afd59f95a469a83e57fbc16bf33b4
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# d61fae02ebd24470b17d6a567416df44
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# 41b68aaa4ebf4bb797814fff6d551aa8
# 86ab4348e0b8444bb7996e50cfb42ea9
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# a07b9c2ba1e0412fb87d273d38b21828
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# 2011fcc5d5df4a0fab099cbbcdb3f06a
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# 45fd7f08781e48af9f67ae5113b408c8
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 3bc30f644e5b4442b6da0dc7cdf786e7
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# eca3cd98cd2d4d2495df26ddc44317ab
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# b10292d998e748a6b3b61a80e4db95d4
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# b6d59a4715b545ff977f3350ce0a0713
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# 726a3882317f4dc6819b00db54c7da24
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# 2468d1e4b5824ebf97c9e7b790c49ec5
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# cf1ef54339d342dbb30eb23458a98f7f
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# c544cc3cdd6a45afa7d113b42bd830ce
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# db6317e21e4c42179ff21d962c206d21
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# 80ff915de88b4662aa1f99fdee2a4a95
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# 18ec4d6ae13e48cc88bf3c8d8ff17906
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 61589efa55cb4d55bc2d513aacaab6c1
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 9a7a252b58864ce09d5c4ea826c58483
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# beaba2291cb7443d90c00857b63e0087
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# 38ad995db0364348ae0d6ecedc038bd0
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# e90ccf1fa0a54f4da1f8707252bb3070
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# f33e64f5bfbc4cf088ecf3e9c790e3cc
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 2bc5cfc1ab884bb68f42ab3b4bc2b72e
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# 9d4133407c9946cd83ad8c94693f54d3
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:43
# da9cd520b3d24437ac68853065ad2c4b
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# 0f8a59f5055241c1bdc458c055b7416a
msgid "A custom handler can be created to do just about anything. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes. A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|."
msgstr ""

#: ../source/essentials_handlers.rst:47
# 1a21fa7eca994ab2878d043e7b008f0e
msgid "Example: Send email when the |Chef| run fails"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# a64a20e8ee6c4f98bd447a2e7ff734fb
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# 77434c02c2c64d0a8237f011310da996
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:51
# e55927bebde54362b49c77f2e139412a
msgid "Installing and Configuring a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# 2c80837145594966b114d9605a0cb193
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:55
# 1d7f2d8f9c1c49908937e2c26a0d521d
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# 90df5855a7d54ddfae4df2bd3de1cc8c
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:59
# cd5e2369a2a342b0a63ee134d70b7820
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# 0cf789460c0f4564954b05bf9872851d
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# 27d0138953794fecac52a87c3a460dd5
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 692be9e46eb54b079aaf36e9b3ef7ec2
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 2ff2dc284c6f417cb398b14f67279f10
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# d4d722a83471486fa6bfb85528193960
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# 8b7a9f4b830945bab48668670d4bcff6
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:63
# a87161020d3e41bc9b0f45ffac48d29c
msgid "Distributing Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# fc3f598e5f7e4586ab1bedcbda263d96
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:67
# 1977c09c343a46879baac3c5ed9fdde8
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# 4cbecc01f5e941a8a310c2c5299210b4
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:71
# 2193ccecb2154aaca020818efd9e7b5d
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# 20bfa27d9c1f466ca37cff85e4750da5
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# 037ac073ea08436682da7bc1e2043acb
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# 5412676e908f4aa79e37853df12a78ca
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:75
# 236133e9f5e54d0f9bde401de73c5f6e
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# 385a71279da648c585b32531c5e7a1d1
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# be7fa516507740cfa4d1b475f54f2872
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# cffbf0c9c4cf45128da8ef1d33fff83f
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# 6847ababc4324c3e8ac2adc687af04c8
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. The |airbrake| handler is available from: https://github.com/morgoth/airbrake_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 55e3605548f841ab9b62fc15d31b76d8
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# a318a5747d0444a4aa24b9bcb1f79095
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. The asynchronous resources handler is available from: https://github.com/rottenbytes/chef/tree/master/async_handler.  Blog post: http://www.rottenbytes.info/2011/07/28/asynchronous-reporting-with-chef/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# 5a6ceb06b0ec411c8ea222f64c5e31a3
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# 00c78d0e952949059a026cccb1707edc
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. The |campfire| handler is available from: https://github.com/ampledata/chef-handler-campfire."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# f04989036ed84e4a883a5b46cd5a6e72
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# 341c024b431447f3b6e9c54caa878fa9
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. The |cloudkick| handler is available from: https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# 72f15c9d90014b6fa14726165e2ee0ea
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# 544dffd105aa4c56ba7926d6967544a3
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. The |datadog| handler is available from: https://github.com/DataDog/chef-handler-datadog.  See: http://www.miketheman.net/2011/11/28/ask-your-systems-whats-going-on/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# 3a3b6f9ca541482ba3d81c41a6a0e480
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# b924620eeaab42cda432736228336748
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. The |graphite| handler is available from: https://github.com/imeyer/chef-handler-graphite/wiki."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# 1b1fbdbeca6842c492bcbdc679dbe12b
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# d5490075eaae43aca1b559ba1666af15
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. The |graylog| handler is available from: https://github.com/jellybob/chef-gelf/."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# d752e614a0ed48038ddf111bb8bc547a
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# 1310aa9522874d009a48181eb698a5c4
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. The |growl| handler is available from: http://rubygems.org/gems/chef-handler-growl."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# b83ec42a80a34eaf9d68226a43d80cc6
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# f22959209017455d91a861fa1ef274b9
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. The |hipchat| handler is available from: https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# 207789d51d4e42f4bc93379623752974
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 6b65aed490454b7993048d409e1c1a63
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. The |irc snitch| handler is available from: https://rubygems.org/gems/chef-irc-snitch."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# 847f579a5e324f55b534dbaf4c73acbe
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# 9c42da7ffe724a7d84fee849bbc74b79
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. The |nagios nsca| handler is available from: https://github.com/ranjibd/nsca_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# 731bb454c2394eabbb15b11c9e993435
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 677333eda19e43709b471ba11b5a3c75
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. The Simple Email handler is available from: https://rubygems.org/gems/chef-handler-mail.  Blog Post: http://jtimberman.posterous.com/a-simple-report-handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 8d5ddca039a1470b86b714881d6fde87
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# 3065bb95e61e4f94b5454be6137fdabd
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. The |splunk storm| handler is available from: http://ampledata.org/splunk_storm_chef_handler.html."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# ad4cedcc0b6d4baca3c345c1ed803aae
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# 042e4e894ee04bfeb1e81d11f73235af
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. The updated resources handler is available from: https://rubygems.org/gems/chef-handler-updated-resources."
msgstr ""


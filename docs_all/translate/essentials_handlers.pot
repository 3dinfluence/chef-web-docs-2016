# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 13:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:34
# 42164c769aa44d348b1ac153417532a8
msgid "Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 91bbb60d0f3d41148a1c8d428b3cfe9a
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef run|."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# 95b6f3442a7d4bc6bfbe71925a3b9fea
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# fae8c462fa494e6585137cae93fef51e
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 3cc71e8b78684dd098211d2cb6b2376e
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:39
# 0fa2cfa14cd64139be4b1daf9710e63f
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# 06c63dbd634d415bacad3d04c3aec05a
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# 3a62ddf16a8e4d19936a7a3cb1c03419
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# bcc6815ea8c9467aa344bd288bcbdaf0
# 6628d22863184c30b13b4312d308db21
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# 313063bf965a41d4a0421f561ca0ed7c
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# d0ed8d90e1dc47ba9ee96f2dd6c88ba4
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# eb2a02bb8941406ca273b00165905d24
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 06fcb4a4646d4a288260b5f7d366a2df
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# 7e64777013434c7387ba5a5a61bc9dd4
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# 39f65fb752474389ae7d3c308e95d886
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# 86b9341ec8f746568cc3becccfddba41
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# b8dac4ca337349ad929951f7c0ffdf5c
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# bae70b422b014ee89532922ac1234f3b
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# 13ca650fe3b84b5c8874b7516b1d20fc
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# c8c40eca264a49658ba5d60e74163f94
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# 140c0d5452f04657984adc0bbe9e9f52
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# 14c9e55a11e54a498a7f4ec3653f7246
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# ea09b0a03f7745e981248e687ed2f9e6
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 592c1ba4820748ddb17c14557ac6e2df
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 7840099dd70e4b2c86e1ba50372e980b
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# b8492b000a04457c99634e9738ed2fd5
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# 2d65d7eff3814ec3a770ddb3f2c02aca
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# 5282b7a147be4cb982ad5ae0d228d132
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# 5b383bf2d495467ca9ddc6b9d18a7d1c
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 8a12eaca313c4519a02f3d7b50c64171
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# c3c781bcdc604da79edb356a45650a2a
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:43
# 925c3de5b5ec4490b769738c9671d1f5
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# aa1b03d937364c9b989a99a134debb19
msgid "A custom handler can be created to do just about anything. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes. A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|."
msgstr ""

#: ../source/essentials_handlers.rst:47
# c11e3299311e4324b4bd06951b01e0b6
msgid "Example: Send email when the |Chef| run fails"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 77333d8354d14e7d958f4a93703e500f
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# ea05bb00b73d428a927101a456206a0d
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:51
# 4d58076ee38a4b4eb6be295e1d95734e
msgid "Installing and Configuring a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# acf0aa75083343bbbd8b8f2c58ba72ef
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:55
# e91767c88dd04e76bd42228ebc6505cc
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# 0d89867190934544a63ef270e5d14527
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:59
# 2d20a6dae8d541e083be33118e32eb79
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# cb99517508a944028e030273f72d4457
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# 8a8a5054486c4c61a7cb9a93ae86a278
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 7ca1a54f8cf24f5aaabc248e2498e3ca
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 30ca7ebfe3ce4f4d894f735709bba8a9
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# 70e1779a31d045b7a24fbd2c22166e4f
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# c805710cefbc4c27b180f935ac9a6b7e
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:63
# 56bdf0cf1ff84e3dbb279e7536f25a40
msgid "Distributing Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# fecf352bc07b45178850e9f5409b5d43
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:67
# 4e7b5da383794a4b97998aaa1864efb1
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# 2830edf502934b7e9d52a7e94d72f731
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:71
# e50ce2005bc745479394ba2ca384f555
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# 7abdb928d1154e6d800f8bccff774f68
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# 96a115650ffd468594ab261fca297543
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# 5e1ee99e078541308de8f4262eece0ce
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:75
# 423d1e0526d9445c9eab59f9453b1453
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# b3db58000cf7482bbba82c8379b5a75b
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# b670fdb2fd37492f8c88c214cb140824
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# 444004f8dc814decbdd79bb803a728ed
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# 87b876f1c2e74b4dbcaa45b36850d36d
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. The |airbrake| handler is available from: https://github.com/morgoth/airbrake_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# a6d326396e4b4074952cabb7b982a762
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# 036b2f3600ee4acf947815cbb1537884
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. The asynchronous resources handler is available from: https://github.com/rottenbytes/chef/tree/master/async_handler.  Blog post: http://www.rottenbytes.info/2011/07/28/asynchronous-reporting-with-chef/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# 3ae8a29b46f34ffda12584416751061b
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# 5da4b2e2386a4232a9bf7c706ad53006
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. The |campfire| handler is available from: https://github.com/ampledata/chef-handler-campfire."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# 416909ce8134480d8196fa75257d54fe
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# d360b31e445146b5b07bbde8d7a35522
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. The |cloudkick| handler is available from: https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# 46b1736ee1f448c19a1f9da98b42ea2e
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# cb320b738b614ea4bd507464df2ceecc
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. The |datadog| handler is available from: https://github.com/DataDog/chef-handler-datadog.  See: http://www.miketheman.net/2011/11/28/ask-your-systems-whats-going-on/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# 05f026fb6a1a4953b8948a6240296ebb
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# aa4cedb3c4c346588124d38194072f59
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. The |graphite| handler is available from: https://github.com/imeyer/chef-handler-graphite/wiki."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# f1215d84c84f4c6e9d64aeb56eb53093
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# e55ed4eab07d4fd8b88a88a8f4e23620
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. The |graylog| handler is available from: https://github.com/jellybob/chef-gelf/."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# 44223d8eda5140219c3a8916d3999320
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# e3e3ea34a59747f184e0ee4d3f2747f3
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. The |growl| handler is available from: http://rubygems.org/gems/chef-handler-growl."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# 34f07d4649df4bcab9107c2d00a23fcf
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# ebb757df6ad14f969fe923034e33501a
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. The |hipchat| handler is available from: https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# 274a00b59a794305ae77afde45988b4a
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 323ad7808b3348038299c478abbd8fd4
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. The |irc snitch| handler is available from: https://rubygems.org/gems/chef-irc-snitch."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# a5190cadbe6f48d08ca740dca5679d90
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# ede81e08f37344fa8002b1bae435a512
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. The |nagios nsca| handler is available from: https://github.com/ranjibd/nsca_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# 81b0f0f8f1af44089e26605320d89869
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 7dc8e788b5be4492a7737055a17d563e
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. The Simple Email handler is available from: https://rubygems.org/gems/chef-handler-mail.  Blog Post: http://jtimberman.posterous.com/a-simple-report-handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 63215f95a2a441c9987d4b6ca20db136
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# 3deaf5d46ede4f129aad2a1231b7a6e4
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. The |splunk storm| handler is available from: http://ampledata.org/splunk_storm_chef_handler.html."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# ed7ce7385b054fddbcf2b04585b5f565
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# c3c4588c5ccf4b8ca7a90036a4e2f644
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. The updated resources handler is available from: https://rubygems.org/gems/chef-handler-updated-resources."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-01 17:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:34
# da946561968043d68739749516d73ec0
msgid "Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 92d49f7240aa4255938d18ac5fbada86
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef run|."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# 8401b6442aea472aa7ef96241c1f0429
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# 3b3000b002784505890c627701bb71f0
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 5157068893b54165a91bcb929ba12a25
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:39
# 68ff95d74b5f4b0b84fa8b673b0b33d8
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# d51f2131083a44498a27a3fd50ff8830
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# c55ecbc96e6e477f92c31a30f0e68627
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# 82504e55d75748a39941aff07a63edc9
# 537f30465b0f48ad8fc94999fe7b86b3
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# 904b0487b686487a9fe875ac03b25467
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# 0d9b93eee8d8477c84487eb9c6e5e494
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# 86448af3688a48dea60ed4c872f56181
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 231e0472b5084764a66143c5ce018285
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# fefbff70457548e4b0f354c9b2d65651
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# d4fe46f20d00425eb83b0a03ed9bcaa9
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# 4731d9e2fb194c5f948f4f507f3234fb
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# b52d63008b094999bf7deb32fdd17996
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# 45fb37bce01c4eb08a24934f5ac941c1
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# 42fec4a37b464c94b7e7fd3d67e68052
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# b2ea0f08241c4f26a2cbca96a7dbda4e
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# 39b12a6e2b024a518e27db28900aa201
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# a98f0783d47040aba79ce8ab7982b136
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# 195d69b09a084cd3a051bd31e0b744cc
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 96886f74542a477098e94b45072bcbb3
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# 9cc96749d31d46b093af549be7f94890
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# d00565887190463588cb1df9c7f4e640
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# ae92ede2b7074279becc373442f2a577
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# 5fb2218ade8744fd8caeb4cc82043154
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# 668ba7a7e9a047eeaebc20e0a1ce56b0
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 2fcdae58f7814f5a857e91bf709e313c
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# d2565735b8a040de86b479fb138b2f23
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:43
# fd62513c2ff94d72a135834e9782bf95
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# 6358683905eb4824be0e68b81ce17b96
msgid "A custom handler can be created to do just about anything. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes. A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|."
msgstr ""

#: ../source/essentials_handlers.rst:47
# 302ca89e998645e1afa057cf1d7f1a88
msgid "Example: Send email when the |Chef| run fails"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 3bd1340eb27e4d75ad17cc72add11343
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# ee07ded921a44597ae18b229e115a780
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:51
# 68c67e842fbf4dbdaaedaae0d5d96f0a
msgid "Installing and Configuring a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# dc4fc380886e4a3cb95cb4aaa5599546
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:55
# d01b14002e75446e94e28c523b3ecec8
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# 80f4907bdd18468fb14371b82f1a3ac8
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:59
# 85515c9aaedf4697a3bc82972d6f7708
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# cbca47e8503b4863918cf56ebb4057c3
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# 75361ebe4e014d31a8d2b5944c19ed72
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# deae92041eb24546bf4352152a53973d
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 30820428b4794393904917919db6feb3
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# 7602a1cd773d4027aba1d5af037b5fc2
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# ca71b73285b64e679050309f80bbca03
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:63
# 091e7d1d470041838f173253c1b33045
msgid "Distributing Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# b4da30d3ad9145a0a441923dcb0cf5f2
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:67
# e2c957c010de468ca8f7eb3f4d0994dc
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# cd77f78706b34ebba08e40864684393a
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:71
# 533abe59b6c34827a435376389e43d44
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# f216edf042ca4231a6a7aaf5129bafd0
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# 2b57bb31a4fb44758d83b47c478b9ef6
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# a4c1dcdeb7e64294bdabc3ce9ff9f811
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:75
# e4d92369874a4ecda0ccceba5fac3700
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# d26978b692cc423e94b8b96b3404ed01
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# e32552b31e794edfb97e505e089b9ef3
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# 411d42a527a443ceb7349cf6ad7af2e4
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# 81b84032aada4fb7a7d4fb6e83315e5d
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. Download this handler: https://github.com/morgoth/airbrake_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 68dbe44a18fb4ca3b150fde599f73b11
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# a7fe92a0889940979c6f08e09238f5f3
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. Download this handler: https://github.com/rottenbytes/chef/tree/master/async_handler.  Blog post: http://www.rottenbytes.info/2011/07/28/asynchronous-reporting-with-chef/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# e4b96529cbea4026aab1490912af1eb9
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# c0142447eed0491ea1b8ff17bb5317b1
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. Download this handler: https://github.com/ampledata/chef-handler-campfire."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# 7acb68219bff45faac781525a4847783
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# d33c0a35fa5645b29aff9209db1b77e8
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. Download this handler: https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# 9895518e21f94ffeaece24ea62c84f56
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# 062c131df9934a38a9546fb159045334
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. Download this handler: https://github.com/DataDog/chef-handler-datadog.  See: http://www.miketheman.net/2011/11/28/ask-your-systems-whats-going-on/"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# ff2760fce4d64057ba40e24d06e61f26
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# f143e2e0f1f944b0aa49ba48c80abf61
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. Download this handler: https://github.com/imeyer/chef-handler-graphite/wiki."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# 8a5bffa0e81f4478825d7c2484838065
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# db5883635e8f4ae2ad737387fe47c04a
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. Download this handler: https://github.com/jellybob/chef-gelf/."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# c92cd7ad81ec426eaa093bd4a349364f
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# 594a165567154f8d8d1fe90258b59fb4
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. Download this handler: http://rubygems.org/gems/chef-handler-growl."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# ad0eebf842df47d3943285be9237846a
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# 74a63b983cdf4da28756c541073475b0
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. Download this handler: https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# b18b51332fbb4e699821327143c1c926
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 85a362b3c8d0497dbff283d1946c77a5
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. Download this handler: https://rubygems.org/gems/chef-irc-snitch."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# e0e436f9a786408b9499128bfa97f90c
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# fc97a59f84fc4420885693e6e0104699
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. Download this handler: https://github.com/ranjibd/nsca_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# e2c9489ee1ab44a4a303d486d42de010
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 36f6a2b4f3b3464697ea0c1056047e67
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. Download this handler: https://rubygems.org/gems/chef-handler-mail.  Blog Post: http://jtimberman.posterous.com/a-simple-report-handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 6cf5e2074eb14d1684a5950b9a07644d
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# 5e31fb185c9847cf86f1aacfc062eff1
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. Download this handler: http://ampledata.org/splunk_storm_chef_handler.html."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# 3de93914153b4a7186f50a68781d5762
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# 71e7f17891664a2a9a03ce913ea68d7f
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. Download this handler: https://rubygems.org/gems/chef-handler-updated-resources."
msgstr ""


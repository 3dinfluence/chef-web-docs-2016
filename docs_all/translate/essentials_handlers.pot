# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-12-13 20:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_handlers.rst:3
# dcd8cbd6114a4a329ffdb6405395b560
msgid "Exception and Report Handlers"
msgstr ""

#: ../../includes_handler/includes_handler.rst:4
# 2afe5ff8b26a4592a2899e1f1456de34
msgid "A handler is a feature of |chef| that is used to trigger certain behaviors in response to certain situations, typically identified during a |chef run|."
msgstr ""

#: ../../includes_handler/includes_handler.rst:6
# a4dde1b6dc6b41749b092f0f0c7ff1eb
msgid "An exception handler is used to trigger behaviors when a defined aspect of a |chef| run fails."
msgstr ""

#: ../../includes_handler/includes_handler.rst:7
# 6bb75d5107a4406d9d32d1241781463c
msgid "A report handler is used to trigger behaviors when a defined aspect of a |chef| run is successful."
msgstr ""

#: ../../includes_handler/includes_handler.rst:9
# 41ea8eb00274446bb6c5ca670b35e60e
msgid "Both types of handlers can be used to gather data about a |chef| run, and when used across the entire |chef| organization, can provide rich levels of data about all types of |chef| usage that can be used later for trending and analysis."
msgstr ""

#: ../source/essentials_handlers.rst:38
# d85c8bd6397d4d72a40b6d6376e03be9
msgid "Handler Properties"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:4
# 1dbbfa947d134806a750d6954964a9ad
msgid "A handler is a class that inherits from ``Chef::Handler`` and implements the ``report()`` function. A handler may be assigned as a report or an exception handler (even though there is no real difference in the underlying code): a report handler runs when the ``success`` indicator is associated with the event message and an exception handler runs when the ``failed`` indicator is associated with the event message. Before ``report()`` is run, ``run_status`` is initialized by |chef|. ``run_status`` is an instance of ``Chef::RunStatus``, which is a class that keeps track of the status of a |chef| run. ``run_status`` provides the following properties:"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:10
# c1d40b79066e4f18b7efa9a5ce4b1e2b
msgid "Property"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:11
#: ../../includes_handler/includes_handler_available_community.rst:11
# 324b21004ed84121b98dcd837906d625
# a63713685c584c648049e9c4a6f9f06e
msgid "Description"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:12
# f8d259920fa44af79ec34e85bb6b0ea6
msgid "``success?`` or ``failed?``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:13
# 229e614f08da46968f11c7ffa554204f
msgid "Indicates whether the |chef| run was successful."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:14
# e0206f7f0ad04d819d2fab10a55805ee
msgid "``backtrace``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:15
# 5a09da33da9947c8a7d9c80dbbe3dffa
msgid "The backtrace for the exception, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:16
# 6b0b0c2a466c4849b6116571de31e2a3
msgid "``exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:17
# f5a23dd09d9548e48fe3b30fc70d79ea
msgid "The raw exception data, if present."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:18
# d88d85b3e7b546f0b1bfd8e27a3bad32
msgid "``formatted_exception``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:19
# ad5c82b4d00c4200b53d93d884b4493d
msgid "The exception as a formatted string, for example: ``ExceptionClass: message``."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:20
# 47bfb827704a44599b68577ce7e4fd0e
msgid "``node``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:21
# 49291a904db148c890810be1d1c1049f
msgid "The node for which the |chef| run occurred."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:22
# 5f0485c1ed8b4bf99eb23f754a6e743d
msgid "``all_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:23
# 1f0d4e45803b4472b8cadd219650ff1d
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:24
# 6e7cc451265542b290d269a8ba045310
msgid "``updated_resources``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:25
# d6a2f0dc848d4f05a73fb55546b2e069
msgid "The list of all resources included in the ``resource_collection`` property for the current |chef| run and that are marked as updated."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:26
# 5139c5d40b804018827c8bdf67a520ae
msgid "``elapsed_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:27
# a1c1e3caec39465b81802d057dd0de9f
msgid "The time elapsed between the ``start_time`` and ``finish_time`` of the |chef| run."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:28
# 4e80d7acd6e8443288996210045927af
msgid "``start_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:29
# f436fa5dd8884003808f00ef19de2f45
msgid "The time the |chef| run started."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:30
# 5639db7e6888403d900bded57a01e215
msgid "``end_time``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:31
# b9800ae3615b4fe997526eb256086f50
msgid "The time the |chef| run ended."
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:32
# 9e20f5cd46fb468b90c0e9a3dd3b303f
msgid "``run_context``"
msgstr ""

#: ../../includes_handler/includes_handler_properties.rst:33
# 6fefc34a3bf84e90812461676ea65a49
msgid "An instance of ``Chef::RunContext`` that is used to keep track of the context of the |chef| run. It provides access to the following properties: ``cookbook_collection``, ``resource_collection``, and ``definitions``."
msgstr ""

#: ../source/essentials_handlers.rst:42
# b02d1e2364524e7b80dd63a4c6dd13e4
msgid "Writing a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_write.rst:4
# bc149142d51e4dcdb2b6a9568397fd78
msgid "A custom handler can be created to do just about anything. A cookbook called ``chef_handler`` contains a lightweight resource provider that allows custom handlers to be easily included within recipes. A custom handler can created to support just about any custom action or behavior that needs to be integrated into |chef|."
msgstr ""

#: ../source/essentials_handlers.rst:46
# 3d663bead2d9419b9da70d9e514ee436
msgid "Example: Send email when the |Chef| run fails"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:4
# 2f0b780556f543c7b53b29bda976fc79
msgid "This example describes a simple handler that sends an email when a |chef| run fails. The handler uses the |pony| library (https://github.com/benprew/pony), which is an \"express way to send email in |ruby|\". For this example to work, it must be possible to send email via |path user sendmail| or via |smtp| to localhost. The following example shows how to use the |pony| library to send email:"
msgstr ""

#: ../../includes_handler/includes_handler_write_example_send_email.rst:37
# 9f03a6b0f06041ffafad6d76bc32bece
msgid "This example can be extended as required."
msgstr ""

#: ../source/essentials_handlers.rst:50
# 80e257d38ea54f7ebbab68c4ba915a00
msgid "Installing and Configuring a Handler"
msgstr ""

#: ../../includes_handler/includes_handler_install.rst:4
# 60defa8db040469280c1622116d577ba
msgid "A handler can be installed and configured in two ways: by using the |lwrp chef handler| |lwrp| or by a manual process."
msgstr ""

#: ../source/essentials_handlers.rst:54
# 67d14b572f37443da210181d53d482a6
msgid "|lwrp chef handler|"
msgstr ""

#: ../../includes_handler/includes_handler_install_from_cookbook.rst:4
# 7f6c0062641043bdbcd3878b53efdc6b
msgid "|handler chef handler| It ships as part of the ``chef_handler`` cookbook and provides a resource that can be easily included in recipes. To use the |lwrp chef handler| in a recipe, add the following |ruby| code:"
msgstr ""

#: ../source/essentials_handlers.rst:58
# ca6a74fe528741d08bb19285cc7e4f9d
msgid "Manual Install"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:4
# c614a960c5cd4634bfbab829dca4e49f
msgid "To manually install and configure a handler, the |client rb| file must be edited. There is no default install location for handlers. The simplest way to distribute and install them is via |rubygems|, though many methods (|github|, HTTP, and so on) will also work. Once the handler is installed on the system, enable it in the |client rb| file by requiring it."
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:6
# dbea4b0c7c2a4a67af761ed20c355029
msgid "For example, if |rubygems| was used to install the handler, adding the following to the |client rb| file will enable it:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:13
# 1ae99334c6fd449b83176b9a199a4268
msgid "Or if the handler was installed using another method, it may need to be required using the full path to the file:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:19
# 2383fe8de0bd43158a179326101367f5
msgid "After the handler is installed, it may require additional configuration. This will vary from handler to handler. If a handler is a very simple handler, it may only require the creation of a new instance. For example, if a handler named ``MyOrganization::EmailMe`` is hardcoded for all of the values required to send email, a new instance is required:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:25
# 469dfcc0b489445ab901db0edafecf46
msgid "and then the notification types need to be configured:"
msgstr ""

#: ../../includes_handler/includes_handler_install_manual.rst:32
# 3310c1a2e6bf459ea4e5ff3a48aa9eed
msgid "Additional configuration steps will vary from handler to handler. For a simple handler, the required additions to the |client rb| file (when pulled together into a single code block) would look like this:"
msgstr ""

#: ../source/essentials_handlers.rst:62
# e30c15c9a7af4f7986c2553ed4772492
msgid "Distributing Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_distribute.rst:4
# 281e27c5e22242af8192d5828b6bf825
msgid "A handler can be distributed using a specific cookbook that is provided by |opscode| to help facilitate the distribution of custom |chef| handlers. The ``chef_handler`` cookbook exposes a lightweight resource provider that can be used to enable custom handlers from within recipes and is useful when including product-specific handlers in cookbooks. The ``chef_handler`` cookbook can be accessed here: http://community.opscode.com/chef_handler. See the README.md of the ``chef_handler`` cookbook for additional information."
msgstr ""

#: ../source/essentials_handlers.rst:66
# d321db95b35d4cb88e8022932aea1528
msgid "Available Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available.rst:4
# 46ab0f7a8fda4f2fb4bf5dc0f82d3cf4
msgid "|chef| includes one handler (``JsonFile``) and the |chef| community provides a number of open-source handlers that can be used by anyone in the |chef| community."
msgstr ""

#: ../source/essentials_handlers.rst:70
# 341f53b5964e47d6a4d56a43d5d16e5f
msgid "JsonFile Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:4
# 64d71262138b4c45bb829e0c1dc42629
msgid "|chef| includes a handler that serializes run status data to a JSON file. This handler needs to be enabled by adding the following lines of |ruby| code to either |client rb| or |solo rb|:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:12
# e48f88e9a98b4bb29fb067457984616b
msgid "There is a LWRP entry:"
msgstr ""

#: ../../includes_handler/includes_handler_available_jsonfile.rst:22
# 6d2c56b7d5cb4c44aa31512276708b9a
msgid "The run status data can be loaded and inspected via irb:"
msgstr ""

#: ../source/essentials_handlers.rst:74
# b3e6a814dc3d43d1bab2b2b7f31fa204
msgid "Open Source Handlers"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:4
# 8c62b7da6b1c48a6a0833cfbcf0d5b44
msgid "The following handlers are available in the |chef| open source community:"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:10
# ece8016ce9df4a429810cbc24f74ff4b
msgid "Handler"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:12
# 25b5f50c16b54e82b9679ff9620f80ce
msgid "|airbrake|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:13
# a04a288480d744808d27f432b527ed77
msgid "A |chef| handler that sends exceptions (only) to |airbrake|, an application that collects data and aggregates it for review. The |airbrake| handler is available from: https://github.com/morgoth/airbrake_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:14
# 6bd94f42c32e45e48b88767e6cb1be1a
msgid "Asynchronous Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:15
# 15388a00a7c9496288c03662cc636306
msgid "A |chef| handler that asynchronously pushes exception and report handler data to a |stomp| queue, from which data can be processed into data storage. The asynchronous resources handler is available from: https://github.com/rottenbytes/chef/tree/master/async_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:16
# 81c288debe9c42f28ce41c0868a9ec23
msgid "|campfire|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:17
# a5c3420cf2964a6cb777d18f0e2e44c7
msgid "A |chef| handler that collects exception and report handler data and reports it to |campfire|, a web-based group chat tool. The |campfire| handler is available from: https://github.com/ampledata/chef-handler-campfire."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:18
# 2586aec40ea0417eac5d53ccadfbbf46
msgid "|cloudkick|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:19
# c9613b03b5ad4fb7b82e0b9aaaf96e6f
msgid "A |chef| handler that collects exception and report handler data and sends it to |cloudkick|, a set of cloud server monitoring and management tools. The |cloudkick| handler is available from: https://github.com/ampledata/chef/blob/master/chef/lib/chef/handler/cloudkick_handler.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:20
# 374088358bdf4195b78058afcaf49ffc
msgid "|datadog|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:21
# 0d52fd2bd712414aaceeabeeb2668bf1
msgid "A |chef| handler that collects |chef| stats and sends them into a |datadog| newsfeed. The |datadog| handler is available from: https://github.com/DataDog/chef-handler-datadog."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:22
# 333e235374404196aac321019d40df68
msgid "|graphite|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:23
# ca2846e65ae04182be164a35821d762f
msgid "A |chef| handler that collects exception and report handler data and reports it to |graphite|, a graphic rendering application. The |graphite| handler is available from: https://github.com/imeyer/chef-handler-graphite/wiki."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:24
# c4866fb1c2ac478da74d5f14cb6c9183
msgid "|graylog| / |graylog gelf|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:25
# 3f9235fec76e43b5a173dc46bbf21ba4
msgid "A |chef| handler that provides exception and report handler status (including changes) to a |graylog| server, so that the data can be viewed using |graylog gelf|. The |graylog| handler is available from: https://github.com/jellybob/chef-gelf/."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:26
# e5ce6e23267e45a5a7249bd43f738591
msgid "|growl|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:27
# 8b3b8c75d8da4f478aa8f0994e5047f9
msgid "A |chef| handler that collects exception and report handler data and then sends it as a |growl| notification. The |growl| handler is available from: http://rubygems.org/gems/chef-handler-growl."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:28
# 50ab403778a446c19e5ee82c39eeb5a0
msgid "|hipchat|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:29
# 086140b7423346bc856472b50b0c1755
msgid "A |chef| handler that collects exception handler data and sends it to |hipchat|, a hosted private chat service for companies and teams. The |hipchat| handler is available from: https://github.com/mojotech/hipchat/blob/master/lib/hipchat/chef.rb."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:30
# 14de6d5a30254b9f829c094cb97f3881
msgid "|irc snitch|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:31
# 00d2f27135ad480b93af7df27555530b
msgid "A |chef| handler that notifies administrators (via |irc|) when a |chef| run fails. The |irc snitch| handler is available from: https://rubygems.org/gems/chef-irc-snitch."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:32
# 592bf797f1ad44519637fe17ca446d02
msgid "|nagios nsca|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:33
# 7942d84c3d064c0195feb8531acaa706
msgid "A |chef| handler that supports |nagios nsca|, an add-on for |nagios|. This will allow |chef| report and exception handler messages to be passed to |nagios| from |nagios nsca|. The |nagios nsca| handler is available from: https://github.com/ranjibd/nsca_handler."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:34
# febc24a51078489b9997dd8e3b0731c0
msgid "Simple Email"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:35
# 0530ab72adc24374824999ba0a19835e
msgid "A |chef| handler that collects exception and report handler data and then uses |pony| to send email reports that are based on |erubis| templates. The Simple Email handler is available from: https://rubygems.org/gems/chef-handler-mail."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:36
# 29a1e130c60443528c886a9a14bd0a08
msgid "|splunk storm|"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:37
# d2fcf90528144866bb4da45fe9d3ba16
msgid "A |chef| handler that supports exceptions and reports for |splunk storm|. The |splunk storm| handler is available from: http://ampledata.org/splunk_storm_chef_handler.html."
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:38
# 97ba01938d71404a8b58278694465d3d
msgid "Updated Resources"
msgstr ""

#: ../../includes_handler/includes_handler_available_community.rst:39
# 3fc3566840864ebfbbe9ba569c5fc1d5
msgid "A |chef| handler that provides a simple way to display resources that were updated during a |chef| run. The updated resources handler is available from: https://rubygems.org/gems/chef-handler-updated-resources."
msgstr ""


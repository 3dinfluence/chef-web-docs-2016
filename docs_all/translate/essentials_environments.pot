# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-24 15:01\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:34
# 37a40c2d38754c15a1d364f5184c9c6b
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 48f75cd5862d40c29200af1bb5d72775
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:39
# ab3ef28fa18c465f9ddb315adaba371c
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 9af97e835ec44740802e305b23392037
msgid "Every |chef| organization must have at least one environment. Every |chef| organization starts out with a single environment that is named ``_default``, which ensures that an environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:43
# acb39a6965b647ba96073b29f31dc441
msgid "Environment Data Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 70e5a8ada5ac404782e961a666be14eb
msgid "Environment data is stored in two formats: as a |ruby| DSL and as |json| data."
msgstr ""

#: ../source/essentials_environments.rst:47
# a41f58cdbbb64138a2e9a6645a48239f
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# cc4845f0e65e40608d45f5fb9998a666
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# 9c4f0f57e1f046f5beb4c59a95098218
msgid "Domain-specific |ruby| attributes for environments include the following:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:30
# a2e994202de546429661dba7cf2fa806
# 79481fe34df04e70a08eca069dc472ac
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:31
#: ../../includes_environment/includes_environment_attribute_type.rst:11
# 5bf8d3c5262840a9b1678b7063c18cf2
# 450391015f5f4cd6a20155fe15d4bccc
# 95834083d03149bd83280cd882cddacb
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 69cf281ba60d43a6a44ba726b652a362
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 766eb2e897374d7f97f9581d0965c42c
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 4a605d3d0c3c4208a8824a4db0df2fe3
# 6259106bf1d74d7ea6246118b2ecdf96
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 282a34c9daec44a3bb37f78d5887516b
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 252250413b8e4740bfaf6cc1ad1a0bb0
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# afe406735af4410ea9d73d07393a461f
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 65032abf9f4745e7be0f10c85d6922d3
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 241602b62f38425c87ad68eff9f2e36d
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# d754e33205b944feae4f8e1e043dcbaa
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# ecc2a711f31f45b78c4851c7aa8f219b
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# c130ed6fe8cc48c78a6a501b3f019942
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:52
# 79d410ecb90c4f3ebabb3d32705b6394
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:53
# c2fbe63870984019a630b1bf410a18d4
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:57
# c54c9fe8b3e34a928eacb5e15a254507
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:58
# 8511a01eb2be4bf2aaedab7dadfe08a9
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:63
# f7531b97b325476ab2322da86c690cde
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:71
# 9bce59f617a9438080b31d37c1f52df9
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:82
# e067c0a73e604b09b93fe78c4c51aee7
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it.) Each |ruby| file should have the .rb suffix. The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:92
# eb1dbe6ca46242b19a0249c04e83a9a4
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the \"couchdb\" cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:101
# ffe04a9f3ef64e0facffbd09ab93642d
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:107
# 4a143cc96b26410b8d5dd376349dcb73
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:116
# 6f1bfe5653564c06997e067c2fd7e436
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:122
# ae03f61074604a62a7e45b8d13dafa4c
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:53
# 6741ae642a4e4b30bdf816bbff6953b3
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# beb4bce8370b4a858290ae6dd125a615
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:24
# 8281c7584702478f9785bf2a421069c5
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:32
# 5975224075cb4f7c807951659bb520e7
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:33
# 9a4e2b814c0e479f8eccb2565e73be51
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# b65172d566454ba0bff1fb5ead7bded7
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 9cd05c5926594c5fb95b60adf9af9719
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:57
# c832ee2b6d1a4481bf73140244e75de0
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# ca9a1a195a51477a8c9dd3064e1c04a9
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# ff5523bf64904aea8e507d6acc040f3c
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:61
# 95a3da3d8da347cb909b04b9cfc6d900
msgid "Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 5e22fcd35c724ae2b3ba3a0112359462
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 0ce5de0f908a435681d9456505a7e9e1
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# b01f942e1c5a470b9bf7391190180966
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 7b86aebc00d84a3991445f55cebf49bb
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# ddb56e4776b84260958f253a03310cbf
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 0e7b2767f65b4b79ba765a9f72052b91
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_environments.rst:65
# 80d31c623ba9410eb7a71cccaaf55160
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# cdb24225d6dd4ad5b8b86abc8667cbb3
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 2da0bff247464527b329ee51f12ea764
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 93ca10548aaa4a63b920e82e6418f437
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 9a8cac1785ba4d6c8b1ac7ebd48c3ae8
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 608c11a66c2e489abfe54737fecb8efa
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 7cac3316ea8b4f5ca866751cbc9854a2
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 08a0b7604ac04364868d40a9f0d675ec
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# ba29e2e7d79041378b9264f6184487a7
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 70b59cac27ca48d99952b2f3d39ed350
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 4394b0c927a640eb9e14077814b09868
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# 523377940ec643ac93bd48276447278a
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# b27618676d43496ea9f535104dbd3d87
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_environments.rst:69
# 25d73fd5afb84c5db2c981b11f7ef008
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 3e83cf0cf2ec4fc0ba722781b228ed29
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:73
# 961934846b524258a3435f63376b7145
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# ad59d34af1b54cc5ac1bc5a3050c1b60
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:77
# feb7619dcf534c13abde1d88d285f10c
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 122d2574af24414b85034bf2ccab2b07
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 63747dbbc4344ff690ee3d763e20d4c2
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_environments.rst:81
# 9db5b761cf954cdda2cf1ddcbb88153f
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 0fcf54ef7f6e41dea062f3ff4357e127
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 6d2e5c9054134d45a1c4b192ae6e8781
msgid "Creating a |ruby| file in the environments sub-directory of the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# e3cd6c932c90439096e06fe7621047aa
msgid "Creating a |json| file directly in the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 0d5ece6d488744bd937d38102de2b4af
msgid "Using |knife|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 425ff5dcb72f4e2cad0819135e389b22
# b6a47a8231b5454ebcfe202b8d410db2
msgid "Using the Management Console (in |chef hosted|, |chef private|, or |chef open server|)."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# ae22b2d3568948228dac6f5240c0dc24
msgid "Using the |chef server| REST API."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# cdf1f7c5cb2f4be0b0fd73d272245544
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:85
# c73bc93130ac45c184d011804fafe6b7
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 9fc9d4dcd0e44c0993b7df4a84f38b3e
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# c05213f6e07a442981afd31f172e09cc
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# f71d5280efaa494d859d46748179f526
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# c7ba6f4db4d848eeb591b114a43f27d3
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 6a09e2a96cdd456aa7ad733126ee2d9e
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:89
# 77613b7d7c3041039429b9932b1c4d40
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 3c617fee8dec40b08089c4bf83994eec
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# b49cf2886cfa4752a78499e144467f8f
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# aeae0f3daecd47faab4a87374f05aaac
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# ceb7a835aa63418ea89f254814f5cdb3
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:93
# 06393b2cbc0943edaa04e6d4630c9f28
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 15f14f28529d455dad109f6a074a5967
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:97
# 2ff53f8e5f2244c18952269448bc96a6
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 0624d6c72b624a5881e2cca9d85df1e4
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 387155fd40244de2a8e318bb4f3f1bf8
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# b0ae0419f9754b9592ab3523e8551f7b
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# 7745a45692f040a39388b852a96c89bd
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# 550a7787d4b94336baf873cf4bf519e2
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:101
# cfa4e0f0c3984de8ac8f5fe707002d18
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# fafc00a7567a47c0ae87fcf992fe9166
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments.rst:105
# e59199144a9a442a8f64b334b8de90e2
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# 2c9002e185054f6b842312830bae1bad
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments.rst:109
# 6ea8b66301af4150a3811b8057149bea
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# a676048481744539a20e389638e79e0f
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 47719e7041e04aab8aa2471daeca2f0b
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


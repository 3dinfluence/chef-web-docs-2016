# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-02-23 12:17\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:34
# 32771d6cdf7c45c6b5ec54b4893b1519
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# fe1cf7bb16774089b7c9a82efb7eefa7
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:39
# 9646f2ccb7384b928596ea8d3e0601bd
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 6517d59c78b94a1186f37eeeaae5ea9d
msgid "Every |chef| organization must have at least one environment. Every |chef| organization starts out with a single environment that is named ``_default``, which ensures that an environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:43
# 65beec0a60d14a6b88cfc676ac68d903
msgid "Environment Data Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 4222b04c96814aec842ce789829571c6
msgid "Environment data is stored in two formats: as a |ruby| DSL and as |json| data."
msgstr ""

#: ../source/essentials_environments.rst:47
# 4136cc33bf2a41c38c7b41a3bd19eeb3
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 3ea752c81db342209d78ca91b8befd74
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# d4d5a3c6d8fd4de9a886c91a72a774bd
msgid "Domain-specific |ruby| attributes for environments include the following:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:30
# 6545af6f8f114a0c8fe7d35d9975063f
# d7ff57c0a898433a8fd2654572f35d7a
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:31
#: ../../includes_environment/includes_environment_attribute_type.rst:11
# 8fe05a29df9f4afd8a6b2ac07b4757e8
# ede09cbd2f9242c7b0c521b1239f77f6
# 3997d0dfbcac43d6808297ee97037a56
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# a67248092b8a4dd18649acf246ab5d49
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 3a9e636f5c2049d0a43cebc2e1ef3ec1
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# fa01443a5cdf450ab6885cfa84c95c8c
# 7ef8c858b79e4b98a1b4189d29cf69c3
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 849d2691658b4937b5717d305b94c1f0
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# dde3f0ea04244b22b1e6d46e1ea9b34b
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# be6a186bff3949c29b6e313dd42d4f66
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 3f8fe2afc1ee410888c6e5abfc0a63b1
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# 0c8741763c544bc9a1d368a4b11ad1e5
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# d8c0c96fdd8946e087de5ede9cc8e03a
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# db58c0d9fc8a4fce9c7d6ae217121e41
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# e6978378681d4f97a7c1098f6331ae1a
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:52
# 1aa9c732b290445d969f9a5eaf38038a
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:53
# 1d300f6032ed4868b6c5979834dd83ff
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:57
# 7849643639904b3ca6d0e3b3320a28f3
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:58
# adcc2bcae0154fd1bc0abb0b0419ae07
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:63
# 1fb740ff1151446c88a03eabe4bf0d6c
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:71
# ece0fbd2cbf0424483e203eb5c6d4b1a
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:82
# 1556a1d4c56745818381ed0ec7d66709
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it.) Each |ruby| file should have the .rb suffix. The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:92
# 5f531cd4ced347e4a0b8c464cb6d07b0
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the \"couchdb\" cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:101
# 8cd2632c4a7f4ce9a50c8216adee1357
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:107
# b3cbac52f99b49e0816de9d411fa6109
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:116
# 8fb1f262ffdc4eab98d9088c1da27f19
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:122
# fb72897304404361a9affa99f4735c39
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:53
# 037135b8b405462185ad22c6a23ff334
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# f778c3a064e342e7b8d84542ad79c413
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:24
# 1618a417caf440d1b109b062b4e68849
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:32
# 2c392e4e7740475c94b3112b603e0ea4
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:33
# 39d673aa232c497facc3355c4c838f27
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 6223311931cf4637a7eaee2596a3521b
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 12fbd178208f40998f5d2b3619848995
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:57
# d0cdae4201b0435ea4cfff30075edc9b
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# 1c4c4ac004cf489081d9b250d1413961
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# c8ef22a0d02c4d74b81d8988eb3f6ee2
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:61
# 178499192b5244838f642dd2272ded1d
msgid "Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 175fc28d307e4543856a2bec0400503b
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 4c7ded2334584cd9aa5032a6aba1e343
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 48ad9be7baf740618229c01b5d645f81
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 3100d66e865c46b8a3d33d29510da229
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# b522363d1b14479d97678ecd88e9fefe
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# c4ab40c757644c3ab5b70d72c30827f6
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_environments.rst:65
# 40ca235ff508412cb72c02d773f07eac
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 3b31b0dba3f3440888112fe1028df0e5
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# c3d0f58f43464a849e6a89d1c6bed231
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# c21260faad9e441a86231d83ef33a13f
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 4d5c5d26a8994c5c83dcf08eaaeddcf3
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 36a595fc850144aca711d5949d7ecf83
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# d8d286e56a094661b7804cae767f5409
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# 60562290975741788df9c47a24f7c2ec
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 624485a30dba4ca7ac5a67f48531bac4
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# 16bbdcbf15094f8d876db714ead3fd43
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 7d45d75ca56b437896314c263bf6ab75
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# f3117a0286f2425eab540e3297b9ebb9
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 22fc26e4327f44379828dcda7691d52a
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_environments.rst:69
# 2233383f91c4401ba902be86cf98359b
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 957744fe34604213a7f50fc2f4966438
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:73
# 51425ab311a54ab1876aa9547da9476b
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# e365a7c6fa584dbcbe67f153c77abf27
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:77
# b3e77868b10e482c97964cbb24015632
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 0cc3bfa5bfa047f0bdd5598a4c938cf7
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 026dfbfd2bb2427b930db3d7c1c17717
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_environments.rst:81
# c886f3efe3f8423791a39e1b75604b6b
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 841526894e7642809df16bd278c70d29
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 133e9a55b31e42aabb68baf6a11d48c6
msgid "Creating a |ruby| file in the environments sub-directory of the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 57fa2181f9b845eab0322c93b561c832
msgid "Creating a |json| file directly in the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 23114f3f68e34f3a8610fd521051470a
msgid "Using |knife|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 36795417377e4bf58d1960cc09f5180a
# 8ba831460e304256b5418deb3286f90b
msgid "Using the |chef manager| (in |chef hosted|, |chef private|, or open source)."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 7b674e581d63466dbc6785101bb88649
msgid "Using the |chef server| REST API."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# d7bdbf98a52844b9822ed52953a6f016
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:85
# ca58066803664f5d872d9a02f67b4421
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# e2ebf88c64d2426f92da46133e3d7e53
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 136c4772b5134a3994cd1536c5fd3ce1
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# c5c7f784753e4c089e5bcc05c6ae4b58
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 886bb3602c9b427fa1d1b448300c4b9a
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 58970cdc0b5c49888f9551450e01fb38
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:89
# b1a3ae5ac9de41ba9f2a5f795e68e3f3
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 879f72897ad040b29ee3133b5f4922e2
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 013fb8b5537040928414f98646a1f6b8
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# c02aca3b808c41c2834b736bcdbd0f51
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 5cad368e5c2e47f8b0a5eacd4fb93148
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:93
# ee2d09b6962a48c999b9aea9f3c9ce38
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# af92a0fd5277416691040584ecf2a290
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:97
# 2cba0ee98e4e4526956af1ef4337a40a
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# f8a7e1d4190942608c5ae191b5575f55
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 00a943c2d756477f9feb012491edb9eb
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# e5afc48a50ef4b9fa072c828c1c14f4f
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# d7703bcc6a2c4b4a9a52633d75bdfccb
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# ff3be4db80494cd2b692d66b7cb8f79d
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:101
# f3e75510620a4579a4bf3c86d8369632
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# 11b51c0dd8554e889d6c39ab58d16095
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments.rst:105
# 5b84f7e442da4891b5bfc79503cce760
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# ebc51653657e43ddb406b1e35fe8cdb9
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments.rst:109
# b5e1ae28e7fe49e58cd6f973fdb646fb
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 133097a3b7594bc3abf427721fb3e473
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 8af07c4048754eba9b3bd2e4c64bc0cc
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


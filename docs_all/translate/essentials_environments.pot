# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 13:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:34
# a3308b483b0940e58af4a2b4ce0ec334
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 5d55896945a34ccead156671278c4616
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:39
# 888650d0c8ba4b5cbe0b1fdd5c8a9fbd
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# a96bd046e099433b99863ea8ae4993bb
msgid "Every |chef| organization must have at least one environment. Every |chef| organization starts out with a single environment that is named ``_default``, which ensures that an environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:43
# 1d401a9390f54184b599e37a237972a3
msgid "Environment Data Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# 8977cc84e98b494c9258ccdf1206bf9a
msgid "Environment data is stored in two formats: as a |ruby| DSL and as |json| data."
msgstr ""

#: ../source/essentials_environments.rst:47
# bc3dffe13c8148c894f173d6336dbb97
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# 9fbd225845b64eb3948d9e552435d5a0
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# b87375776b934973849c2073d59e3293
msgid "Domain-specific |ruby| attributes for environments include the following:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:30
# 9e4906fed6004ca19319506769b37845
# 63907cbfe81c476c9458b65abe43bee6
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:31
#: ../../includes_environment/includes_environment_attribute_type.rst:11
# 318c686fc9984141992e3fbf88eccf4c
# cd5de6a90eee4f29a0cdf4eb94bbe531
# 01fb77a7e6d44d52bbc028f12664e4e3
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 343eb3e8a17c4f9c98c707234370cced
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 55d88117a338497ba1e997773c2ffbab
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# b25af0d6733c41db9af4b34c205b8c4e
# 1f048f0072f247c5914b6354db8c2339
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# 5873d214bb5d461989fba00dab752ac4
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# 5537e32c82194f78b4195828290abd59
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 1562dc979e284b12ba7df6199350d31b
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 18a721b703c3476bafa9e95835b0db05
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# d499b231bf6741fe85e077950ccf9880
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# bfe72643eb664ed9a1c870b634ae6d7f
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 60205276bf6f40d68aa606e0f53fbb12
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# 9e2b533082a641359dd8229ed3c43ff5
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:52
# 4af5e29aa79a4f58be90414250b9208b
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:53
# 203e563da2ca4a4da83ca5793ffb6bd1
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:57
# b45be77c37c94efe83c2a6bfe8fc5dae
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:58
# 72cc6034b3a8452dabc401aa10a27746
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:63
# e593371a790848cc9afb94fe3d524cfe
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:71
# 0fb226ffe49c4ec287d189c0d90495ba
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:82
# 6d343f532fb547a9b094fd59cf184681
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it.) Each |ruby| file should have the .rb suffix. The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:92
# f89df18bbeb14d8fbdb8a27435ba3d37
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the \"couchdb\" cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:101
# a8b5cacee2034650a462545b21176c08
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:107
# 0914b3a0dfed4976ac638ddbaa4a05a1
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:116
# d94f5c35588e416fb151b42d0cc23147
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:122
# bcc9847ccbd34fe1a152cf2c8d8245e1
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:53
# a99a9107639a4ee6a16387ac20b0b348
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# 0d37916f3d0542b5894431831aa774da
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:24
# 1fb4d4399b994ceb9edabb1b5c8683bd
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:32
# a37c62dff7e94dcdb99ba2188004daaf
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:33
# 714a3f00f7d748e48733f710a2ac8504
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# 898e003db78842d88c1f90aa6a4883fc
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 64ffa51126424b998c1a324d87150884
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:57
# 090a9589c5ef4a92bd60ffc2048e1abe
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# febd97e678164dbd9a85efa7a65a563b
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# c64b69cb963f43e6851bfb6b51292880
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:61
# 723f413872d34fd5bf392b3874337be5
msgid "Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# 38c4899b23d048f2bf54bccd973fe4a0
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 9890de308e414409890bf1a86ffa501c
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# 48551a61a4c94bf08565ce87216d64f9
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 61700b0f31d34fdb818fede74ac38904
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# c4824693e0bd4a07854bb9da45b4e525
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# 86af67a4bf3f455f9933530431a154d5
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_environments.rst:65
# 037ead9b952e459fb8113ebe130ebb54
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# c7ecb54d87874fab9f87385c4120fc17
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 07a0d8828e8d4ee094ef6400c71d554e
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 9428414d4d514d33878c6b27870ed007
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 80f7a16cc5114873bcc7cf618f8c9a4c
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# bff71d8cd0e8412dbe9e3587977e3a34
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 32e02285da8b490f8fcf8de998b50cad
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# b36b813848e2487693c9154484a966b6
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 10dbb4b65ac34fe588948bcdf45fcdb0
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# a7b0642178c24e0e89613fc0253a3c45
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 204060ee26e244f9a56ec570c1b6e227
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# d3326a1967fa43f9806a305078b85886
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# 2f8cbe99e84d4b04a2d96d3fbc254ab4
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_environments.rst:69
# f2cfecf9b008496f9a5641bb525454e5
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# 8e58a813672144b5acc161dc1f12d43f
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:73
# da7d81ded4914aefa1c29432e514f601
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# 87c1d09b8dda4ef0a7c3cf99e4f62ade
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:77
# aab2345883bd4e6885cf394990843f26
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 8d28ba9cfacc485a901a42856ffd84b9
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 3a01aac1b9734179b2bbbedb92f528d0
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_environments.rst:81
# fae6bff96ce44192b9ba8ac29e538998
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# d9c023193aa94443a35683145158929f
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# 6f1483aab5d0470b9adcf1b5099faffe
msgid "Creating a |ruby| file in the environments sub-directory of the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# 6bfafa6377894c21a67f264df51d209a
msgid "Creating a |json| file directly in the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 5dcd45d38de744f9861d0a00f16c7354
msgid "Using |knife|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# c3ef05d183b044b4ab67876972b630d0
# f37b867e38494eccb86fa722801e13f5
msgid "Using the Management Console (in |chef hosted|, |chef private|, or |chef open server|)."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# a855adf5510b475d8df75503df93f38d
msgid "Using the |chef server| REST API."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# a341b2fc4e20475da1c7ab510d8a0092
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:85
# 019650ac07b04a06846951df74be8b88
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 3e088ded44964f53bce62b43ae521188
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 62d9646391a54c08a9c6176c134c27e9
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# 3ff15a222408442c95e563d9547b88b5
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# a164fcfc282e476c9eed624b05c1f126
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# cb7a87bad6d748a890ac3ee0a57d6575
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:89
# 78f026524b4245baa2f4b301db154896
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# b1899a57608a44e2b6aa2a58e9529f03
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 43a4be52d49243bcb77878a4a51f39ce
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 0cb23267f3da4bb08aff1cadae42d400
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 0b58a1a69ae54136bb9363f3e414e705
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:93
# 6793455c8dc541fc9c57b64a80a53ea2
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 88f15d0eeffe40cb8bfd3d14bcc488e5
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:97
# adaffe2bdbc04ae4a0b602d37cddbee3
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# fc98ca984d2e46c794f7160a69fc12fb
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 037e24ce4ea9458788963e9f1219de23
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# 0787780c9ca4499cb55e9b27cc5eac28
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# d2a4e8ada6cc4818a7702ec6c9952ad5
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# d1f3fcf8eebf496f95c4db80ec02e52c
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:101
# 7a2cda8cd1664e33bc131c01c30b5aae
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# fc8445c0eb124e4ea07866706d1a0a01
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments.rst:105
# ad397cbbb48c4fc7a406f495d2fe72b7
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# 1098f32f653f486c8c553aa499f057c2
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments.rst:109
# 1db4ca015a98419e94116da0a2f18e28
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# c5220e9619e641b4a40882738516c8b4
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# d610c0e7903f431a82fa6cd18b418cf3
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


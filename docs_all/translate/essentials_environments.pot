# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-08 20:45\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_environments.rst:34
# 6847ee55027445bebf46762474111e1d
msgid "Environments"
msgstr ""

#: ../../includes_environment/includes_environment.rst:4
# 4320059538d2460f8eb2403e5727bbc4
msgid "|environment description| Every |chef| organization begins with a single environment called the ``_default`` environment, which cannot be modified (or deleted). Additional environments can be created, such as production, staging, testing, and development. Generally, an environment is also associated with one (or more) cookbook versions."
msgstr ""

#: ../source/essentials_environments.rst:39
# 85e7c42381354c60bfa17e5faf7dc00e
msgid "The _default Environment"
msgstr ""

#: ../../includes_environment/includes_environment_default.rst:4
# 19ce6e28ae5f41e5977848533af8a126
msgid "Every |chef| organization must have at least one environment. Every |chef| organization starts out with a single environment that is named ``_default``, which ensures that an environment is always available to the |chef server|. The ``_default`` environment cannot be modified in any way. Nodes, roles, run-lists, cookbooks (and cookbook versions), and attributes specific to an organization can only be associated with a custom environment."
msgstr ""

#: ../source/essentials_environments.rst:43
# caf7bf124d6e411fba860e3ec71cada3
msgid "Environment Data Formats"
msgstr ""

#: ../../includes_environment/includes_environment_format.rst:4
# ae9a70bcfc004c5298c86bcdf90208b3
msgid "Environment data is stored in two formats: as a |ruby| DSL and as |json| data."
msgstr ""

#: ../source/essentials_environments.rst:47
# 79b5f0f62d2440b8b4af9d84be7d0048
msgid "Ruby DSL"
msgstr ""

#: ../../includes_ruby/includes_ruby_dsl.rst:5
# f9d99586b3904de4b55cbe84a2a54847
msgid "|chef| uses a domain-specific language in |ruby| to define recipes and to store settings, such as those which define a role or an environment. These settings are saved as |ruby| files and are stored in the |chef| repository. When these files are uploaded to the |chef server|, they are converted to |json|. Each time the |chef| repository is refreshed, the contents of all domain-specific |ruby| files are re-compiled to |json| and are re-uploaded to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:4
# 6f7fc661885c46cbb8e1756c69af4c88
msgid "Domain-specific |ruby| attributes for environments include the following:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:10
#: ../../includes_environment/includes_environment_format_json.rst:30
# 000fdbfd91e248a9aa956dec5d4959d0
# b4e21cd261444a76a40ac2cef00617bb
msgid "Setting"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:11
#: ../../includes_environment/includes_environment_format_json.rst:31
#: ../../includes_environment/includes_environment_attribute_type.rst:11
# b8cb8d2904c241c78c239274df55e945
# f039adfd0da546d7aa18942f2902a40f
# 903363d3876a4c45a607046e78f47662
msgid "Description"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:12
# 6d7089c6920a4463a3ce182786a64be9
msgid "``cookbook``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:13
# 2a3ff8cfe4f945909a01dcf030849830
msgid "|ruby dsl cookbook| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:18
#: ../../includes_environment/includes_environment_format_ruby.rst:23
# 88ffd8f4d52b4cacae59c21a60f6c3e4
# 5a850a2ff75a4d41b45566d469113b20
msgid "Or: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:27
# f4b7b7be3e7645f284c9ceb2639cde50
msgid "``cookbook_versions``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:28
# c99493248b244d70afdd62da285a26f7
msgid "|ruby dsl cookbook version| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:35
# 5c67d51cab134ae386ea6c9bb213c33a
msgid "``default_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:36
# 38a3d7d44dd947dd96e333c9037d310f
msgid "|ruby dsl default attribute| For example, to specify that a node that has the attribute ``apache2`` should listen on ports 80 and 443 (unless ports are already specified): ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:40
# fcbc1d1f64d94f889f28d80c33eecd50
msgid "``description``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:41
# 1602c772d3504e58bba55b52728e6632
msgid "|ruby dsl description| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:45
# 2298267c8295437b81cd6fa8d2cc69d6
msgid "``env_run_lists``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:46
# f473f2afe3d84048a2600f3309fa1102
msgid "|ruby dsl environment run list| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:52
# 4e90aea266934dacbccd9585068cd589
msgid "``name``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:53
# 7b828347fe6e4706a4bc1d8f72f34e08
msgid "|ruby dsl name| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:57
# 077163ba8bfd4df89a33ead78fcec785
msgid "``override_attributes``"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:58
# 7e66511e7f63433f90c421e9c13adc96
msgid "|ruby dsl override attribute| For example: ::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:63
# f4503b9ea89a4feca24bcb7dbf45b112
msgid "The parameters in a |ruby| file are actually |ruby| method calls, so parentheses can be used to provide clarity when specifying numerous or deeply-nested attributes. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:71
# c56f2d68ab344ac29d50175b8fe492d7
msgid "Or::"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:82
# 5cd364d1b7f9401ba011ba36258518f5
msgid "A |ruby| file for each non-default environment must exist in the ``environments/`` subdirectory of the |chef| repository. (If the repository does not have this subdirectory, then create it.) Each |ruby| file should have the .rb suffix. The complete environment has the following syntax:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:92
# 4b28aa8413fe43fc8c9b7d35c61b0009
msgid "where both default and override attributes are optional and either a cookbook or cookbook versions (one or more) are specified. For example, an environment named \"dev\" that uses the \"couchdb\" cookbook (version 11.0.0 or higher) that listens on ports 80 and 443:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:101
# 5962bdb234a649a1b6955ab1c91898f5
msgid "Or (using the same scenario) to specify a version constraint for only one cookbook:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:107
# e0d8b5bdac5849539c76549db56c5220
msgid "More than one cookbook version can be specified:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:116
# 4041d5d983cc45aab23e8b9223256f0d
msgid "Attributes are optional and can be set at the default and override levels. These will be processed according to attribute precedence. An environment attribute will be applied to all nodes within the environment, except in places where it is overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../../includes_environment/includes_environment_format_ruby.rst:122
# 9420ff6c0cd841ed88310706c2c2d4a7
msgid "will have all nodes in the environment (``node[:apache2][:listen_ports]``) set to \"80\" and \"443\" unless they were overridden by an attribute with higher precedence. For example:"
msgstr ""

#: ../source/essentials_environments.rst:53
# 9261b7ab68864cad886db6cc3cdc545c
msgid "JSON"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:4
# 05b2e05a47974c41bc9bd1ee072bf208
msgid "The |json| format for environments maps directly to the domain-specific |ruby| format: the same settings, attributes, and values, and a similar structure and organization. For example::"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:24
# 0a3b200347444934a6c33ffa69815d50
msgid "The |json| format has two additional settings:"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:32
# c4931aea8b14469fa01c13bd9cee48e7
msgid "``chef_type``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:33
# 28a2d011a62d4b1eac3523acf9eb4e05
msgid "|json dsl environment chef type|"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:34
# b5b2939aa9cf4d3393aaecda250d69fb
msgid "``json_class``"
msgstr ""

#: ../../includes_environment/includes_environment_format_json.rst:35
# 7f064c4608d0419e89a8eb5c6445419d
msgid "|json dsl environment json class|"
msgstr ""

#: ../source/essentials_environments.rst:57
# 5b4212170ec04c8682ab85046880811b
msgid "Environment Attributes"
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:4
# db0808e2f90c47f4b8ab184376255bdd
msgid "An attribute can be defined in an environment and then used to override the default settings on a node. When an environment is applied during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the environment attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_environment/includes_environment_attribute.rst:6
# 2e49e412ff9e4f4bab035be83ad77961
msgid "An environment attribute can only be set to be a default attribute or an override attribute. An environment attribute cannot be set to be a normal attribute. Use the ``default_attribute`` and ``override_attribute`` methods in the |ruby| DSL file or the ``default_attributes`` and ``override_attributes`` hashes in a |json| data file."
msgstr ""

#: ../source/essentials_environments.rst:61
# f1ac86099c834234a05fd61bb5f6a027
msgid "Types"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:4
# f010a71856fa4eb6b75ab097ca3214ce
msgid "There are two types of attributes that can be used with environments:"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:10
# 3a0a71ed82cb4640a9c82d3e378e7a35
msgid "Attribute Type"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:12
# ab1222d62a044e8abc79a4ef11a3f5a8
msgid "``default``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:13
# 1f564f32856343729735f6b3b27a2d38
msgid "A default attribute has the lowest attribute precedence. A default attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:14
# 650937d4c22b4d0c88b1901536e539f0
msgid "``override``"
msgstr ""

#: ../../includes_environment/includes_environment_attribute_type.rst:15
# bcdc6aaee4eb4f5088a39f3e24df5378
msgid "An override attribute is an attribute that is specified in a recipe (or a run-list) and are often set only for specific roles or nodes. An override attribute has a higher attribute precedence than default or normal attributes. An override attribute is automatically reset each time |chef| runs."
msgstr ""

#: ../source/essentials_environments.rst:65
# 6b393c84235f4ea1ab047eecda3aa2d0
msgid "Precedence"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:4
# 0e4cce7453c84b6a921f4d4fca1c326b
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system. The attribute type and the source of the attribute determines which attribute values have priority over others. Attribute values are applied in the following order (from low to high priority):"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:6
# 61e0ab5120914ce68b9f5a039d11d023
msgid "Default attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:7
# 0aedd054fa24418aa94ca2a20ab3843a
msgid "Default attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:8
# 8b536f09ef42484bb89f90641da51a46
msgid "Default attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:9
# 07b9dd2aea4b41748ba5fee94a07cfef
msgid "Default attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:10
# 5847cd8f6ac54591a2d05ff4052ec67c
msgid "Normal attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:11
# be8f2888c4d045459d9cfcf15dd2bc62
msgid "Normal attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:12
# 7a3b9b081c2e4b4999c2deac2ba0caa2
msgid "Override attributes applied in an attributes file"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:13
# a9d74fb7f348477fbcef37f9343e2ee4
msgid "Override attributes applied in a role"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:14
# 2003d405d90c4139b0a515e3130d2919
msgid "Override attributes applied in an environment"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:15
# a597017c551e4a3998f79baf3c4396f5
msgid "Override attributes applied on a node directly in a recipe"
msgstr ""

#: ../../includes_node/includes_node_attribute_precedence.rst:16
# f44ff7108d1f41c09a4c2d2d302497cb
msgid "Automatic attributes, re-generated by |ohai| during each |chef| run"
msgstr ""

#: ../source/essentials_environments.rst:69
# 4adf7100f208493a98b42d680b434158
msgid "Persistence"
msgstr ""

#: ../../includes_node/includes_node_attribute_persistence.rst:4
# d794ce35c0f94c33b7405537161d3231
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset. |chef| rebuilds these attributes based on attributes contained in cookbooks, recipes, roles, and environments, plus |ohai| data that is collected about that node at the beginning of the |chef| run. Normal attributes are never reset. During a |chef| run, any new attributes that are passed to the |chef client| are merged with the existing normal attributes on the node and any new settings are applied according to attribute precedence. At the conclusion of the |chef| run, all default, override, and automatic attributes disappear, leaving only a collection of normal attributes that will persist until the next |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:73
# 023a9b9ae96b4ed69257f0d4a257fc40
msgid "Automatic Attributes"
msgstr ""

#: ../../includes_node/includes_node_attribute_automatic.rst:4
# 9c0abae2a31a4ff6b3378bf78e9e7bc8
msgid "An automatic attribute is data that must be understood, but not modified. For example, the IP address of a node, a host name, or the number of loaded kernel modules. When |chef| makes changes to a system during a |chef| run, automatic attributes are used to ensure that |chef| does not make changes to the larger environment on which a node is running. An automatic attribute always has the highest attribute precedence. Automatic attributes are saved to the |chef server| where they are indexed for search. Automatic attributes are detected by |ohai| before every |chef| run."
msgstr ""

#: ../source/essentials_environments.rst:77
# d4eaeeef21ad452e928d9a63ac19aa1a
msgid "Notation"
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:4
# 8858f01ccd144308902659d72160a116
msgid "Attributes are a special key-value store (called a |ruby mash|) within the context of the |ruby| DSL. A |ruby mash| is just a |hash| where the key can be either a symbol (:key) or a string (\"key\")."
msgstr ""

#: ../../includes_node/includes_node_attribute_notation.rst:6
# 342d884c45fd4636abfaf526fb587f8c
msgid "Individuals who are new to |ruby| and |chef| may have an easier time using only string notation. This approach allows attributes to \"be quoted\" and does not require learning about special cases, namespace overlap (and ``method_missing``), character constraints, and escaping."
msgstr ""

#: ../source/essentials_environments.rst:81
# eb3ff6a3a4a7413f9fc108b35ffd3799
msgid "Create Environments"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:4
# 285ba230b8f040f6859d1f506f2c0924
msgid "An environment can be created in five different ways:"
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:6
# e5cd574cde6b415aaf17a027f3ad5884
msgid "Creating a |ruby| file in the environments sub-directory of the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:7
# d98c0512659e40bfad821c51c24f32f6
msgid "Creating a |json| file directly in the |chef| repository and then pushing it to the |chef server|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:8
# 4bf5e54312384c2ab02515e407448f3d
msgid "Using |knife|."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:9
#: ../../includes_environment/includes_environment_manage.rst:7
# 31a3f2157dd14286a739f96b51febacc
# fb946d4f8cab492282ee1f60b1008147
msgid "Using the Management Console (in |chef hosted|, |chef private|, or |chef open server|)."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:10
# 144de6de96234f85a01f2cceb635deb2
msgid "Using the |chef server| REST API."
msgstr ""

#: ../../includes_environment/includes_environment_create.rst:12
# 4316561159944d118bddb5b92ba8494f
msgid "Once an environment exists on the |chef server|, a node can be associated with that environment using the ``chef_environment`` method."
msgstr ""

#: ../source/essentials_environments.rst:85
# 480b5b369b3a486d80f12561d734da1e
msgid "Manage Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:4
# 722c26a7c37e40be81e5e136a7010fe0
msgid "Once created, an environment can be managed in several ways:"
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:6
# 7ae8eb3b940f42c7b1727adf04181d28
msgid "Using |knife|, using the ``-E ENVIRONMENT_NAME`` option for the ``knife cookbook upload`` sub-command and argument."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:8
# cf68b4cf46b645bc9eead84aa3204a72
msgid "Using |ruby| or |json| files that are stored in a version source control system and pushed to the |chef server|. This approach allows dynamically generated environment data (using |ruby|)."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:10
# 84bbdaf38b45441599608ae0bb541d89
msgid "These workflows are mutually exclusive: only the most recent environment changes will be kept on the |chef server|, regardless of the source of those changes. All previous changes are overwritten when environment data is updated."
msgstr ""

#: ../../includes_environment/includes_environment_manage.rst:12
# 7312d41fbe48478786c5c6be919e76da
msgid "The settings for environments can be modified and environments can be integrated into the larger |chef| infrastructure by associating them with nodes, using recipes to call specific environment settings, and so on."
msgstr ""

#: ../source/essentials_environments.rst:89
# 051b1ce1e3e942f3be8d3233c84c9873
msgid "Save Environment Data in a Data Bag"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:4
# 62378dfb9d404093a623d18851647d45
msgid "Values that are stored in a data bag are global to the organization and are available to any environment. There are two main strategies that can be used to store per-environment data within a data bag: by using a top-level key that corresponds to the environment or by using separate items for each environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:6
# 517b5790af6e41b9ad6a637dd721bec7
msgid "A data bag that is storing a top-level key for an environment might look something like this::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:18
# 3ff66c6f7039498e8845fcc8e690f205
msgid "When using the data bag in a recipe, that data can be accessed from a recipe using code similar to::"
msgstr ""

#: ../../includes_environment/includes_environment_manage_save_in_data_bag.rst:22
# 3446b4ce28e84210b4ac1512015f405c
msgid "The other approach is to use separate items for each environment. Depending on the amount of data, it may all fit nicely within a single item. If this is the case, then creating different items for each environment may be a simple approach to providing per-environment values within a data bag. However, this approach is more time-consuming and may not scale to very large environments or when the data must be stored in many data bag items."
msgstr ""

#: ../source/essentials_environments.rst:93
# 37ecaffaa22b468db4b1852143c9f199
msgid "Override Environment Attributes in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_override_in_roles.rst:4
# 500a47f05a8542a7af942ca25d3a7fe8
msgid "Environment attributes that are used with roles can be overridden. Typically, this is done by using attribute precedence, but sometimes it may be necessary to ensure that specific attributes are used based on the presence of specific environments. This type of scenario is best addressed in using a recipe that relies on a top-level key that is stored in a data bag. For example, to retrieve a value from a data bag based on a specific environment::"
msgstr ""

#: ../source/essentials_environments.rst:97
# dede5919a756494d8bc6ca3576ac3920
msgid "Set the Environment for a Node"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:4
# 39822517438a479b8d7273c5a93408b5
msgid "A node is considered to be associated with an environment when the ``chef_environment`` attribute is set. The ``chef_environment`` attribute cannot be set with normal or override attributes (i.e. in a role) because it is actually a method. It must be set explicitly using the ``knife edit`` or ``knife exec`` sub-commands, or by using one of the following methods:"
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:6
# 93bb7f1460c24fc883d280bd8c8578bc
msgid "By editing the ``chef_environment`` directly using |knife| or a management console."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:7
# 99c2f1a8bc544a5e82dffc6c8c2d2796
msgid "By editing the ``environment`` configuration details in the |knife rb| file and then using the ``knife bootstrap`` subcommand to boostrap the changes to the specified environment."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:8
# a67ec280775544559bba3eb3c2cf76da
msgid "By setting the ``environment`` configuration entry in the |chef client| configuration file (by default: /etc/chef/client.rb). When the |chef client| runs, it will pick up the value and then set the ``chef_environment`` attribute of the node."
msgstr ""

#: ../../includes_environment/includes_environment_manage_set_on_node.rst:9
# 8038255da6124319be5b37b3b5f4c48d
msgid "By calling the ``node.chef_environment(\"node_name\")`` object and then using ``node.save`` to update the ``chef_environment`` with the attribute specified by ``node_name``. (The ``chef_environment`` attribute cannot be accessed using the typical attribute sequence: ``node[:attribute_name]``.)"
msgstr ""

#: ../source/essentials_environments.rst:101
# acec1cdea8294f418d1adddfe0359b6c
msgid "Move Nodes Between Environments"
msgstr ""

#: ../../includes_environment/includes_environment_manage_move_nodes_between.rst:4
# ba4bdf3d9fee4cdea5b81f0afc7cc599
msgid "Nodes can be moved between environments, such as from a \"dev\" to a \"production\" environment by using the ``knife exec`` sub-command in |knife|. For example::"
msgstr ""

#: ../source/essentials_environments.rst:105
# 98e3a9b436cb46bfafa82d7d5e224d21
msgid "Set Per-environment Run-lists in Roles"
msgstr ""

#: ../../includes_environment/includes_environment_manage_per_environment_run_lists.rst:4
# 7d2fc0a1481347b58d3f6ebe31c251be
msgid "A per-environment run-list is a run-list that is associated with a role and a specific environment. More than one environment can be specified in a role, but each specific environment may be associated with only one run-list. If a run-list is not specified, the default run-list will be used. For example::"
msgstr ""

#: ../source/essentials_environments.rst:109
# 19b1457fe5324cbeab10097d2c8fea80
msgid "Searching Environments"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:4
# 66c0e3ad137344d199257509d168940c
msgid "When searching, a |chef| environment (``chef_environment``) is treated much like an attribute. This allows search results to be limited to a specified environment by using Boolean operators and extra search terms. For example, to use |knife| to search for all of the servers running |centos| in an environment named \"QA\", enter the following:"
msgstr ""

#: ../../includes_search/includes_search_environment.rst:10
# 7ef831bfdd2e42a4b9fc77bdf174b328
msgid "Or, to include the same search in a recipe, use a code block similar to:"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License.
# This file is distributed under the same license as the Chef Topics package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Topics 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-01-07 15:54\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_chef_client.rst:3
# 1af98de77a6a44389c61e6af07e30d5a
msgid "|chef client|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:5
# 41a7415d92c94b16820b00bde924410d
msgid "A |chef client| is an agent that runs locally on every node that is registered with the |chef server|. When a |chef client| is run, it will perform all of the steps that are required to bring the node into the expected state, including:"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:7
# c337a493233247cabcfa900eaef185ae
msgid "Registering, and the authenticating the node with the |chef server|"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:8
# b69bba2056fa4dcf9d75973733c662fe
msgid "Building the node object"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:9
# de2503ab5b654ad58f1c94bd571d8977
msgid "Synchronizing cookbooks"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:10
# dbe8d8703b154a31a6a6d3d4cb7deda8
msgid "Compiling the resource collection by loading each of the required cookbooks, including recipes, attributes, and all other dependencies"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:11
# 1983025450bb4b0ebde961dc1ce9adeb
msgid "Taking the appropriate and required actions to configure the node"
msgstr ""

#: ../../includes_chef/includes_chef_client.rst:12
# 70072160d09e423ebf8f7656cec68d0b
msgid "Looking for exceptions and notifications, handling each as required"
msgstr ""

#: ../source/essentials_chef_client.rst:38
# df3dd68ec85945c0a48dbc869da3f7cd
msgid "|chef validator|"
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:5
# a4c3bee1b21843958822e8c857b3bbc1
msgid "When a node runs |chef client| for the first time, it generally does not yet have an |chef api client| identity, and so it cannot make authenticated requests to the server. This is where the validation client (named |chef validator|) comes in. When the |chef client| runs, it checks if it has a client key. If the client key does not exist, it then attempts to borrow the validation client's identity to register itself with the |chef server|. In order to register with the |chef server|, the validation client's private key needs to be copied to the host and placed in |path chef etc validation|."
msgstr ""

#: ../../includes_security/includes_security_chef_validator.rst:7
# d7863d3668254b3c9541cbf5cad5d038
msgid "Once the |chef client| has registered itself with the |chef server|, it no longer uses the validation client for anything. It is recommended that you delete the validation client's private key from the host after the host has registered or use the ``delete_validation`` recipe that can be found in the ``chef-client`` cookbook (http://community.opscode.com/cookbooks/chef-client)."
msgstr ""

#: ../source/essentials_chef_client.rst:42
# 4621553e662f462b8df1678489a52455
msgid "|ssl| Certificates"
msgstr ""

#: ../../includes_node/includes_node_certificate.rst:4
# 0981593822a64ce78245968c7be9944a
msgid "An |ssl| certificate is used between the |chef client| and the |chef server| to ensure that each node has access to the right data."
msgstr ""

#: ../source/essentials_chef_client.rst:46
# 6f6deaa570514576a000bee4489f71d1
msgid "Signed Header Authentication"
msgstr ""

#: ../../includes_security/includes_security_signed_header_authentication.rst:5
# fd96c1c3180048409192e3e18d49c0f9
msgid "|chef| uses signed header authentication to validate communications between the |chef server| and any node that is being managed by the |chef server|. An API client manages each authentication request. A public and private key pair is used for the authentication itself. The public key is stored in the database on the |chef server|. The private key is stored locally on each node and is kept separate from node data (typically in the |path chef private key| directory). Each request to the |chef server| by a node must include a request signature in the HTTP headers. This signature is computed from a hash of request content and is encrypted using the private key."
msgstr ""

